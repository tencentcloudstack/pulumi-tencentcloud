# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'CheckCertificateDomainVerificationOperationVerificationResultArgs',
    'FreeCertificateDvAuthArgs',
    'PayCertificateDvAuthArgs',
    'PayCertificateInformationArgs',
    'UpdateCertificateInstanceOperationResourceTypesRegionArgs',
    'GetDescribeHostApiGatewayInstanceListFilterArgs',
    'GetDescribeHostCdnInstanceListFilterArgs',
    'GetDescribeHostClbInstanceListFilterArgs',
    'GetDescribeHostCosInstanceListFilterArgs',
    'GetDescribeHostDdosInstanceListFilterArgs',
    'GetDescribeHostLighthouseInstanceListFilterArgs',
    'GetDescribeHostLiveInstanceListFilterArgs',
    'GetDescribeHostTeoInstanceListFilterArgs',
    'GetDescribeHostTkeInstanceListFilterArgs',
    'GetDescribeHostVodInstanceListFilterArgs',
    'GetDescribeHostWafInstanceListFilterArgs',
]

@pulumi.input_type
class CheckCertificateDomainVerificationOperationVerificationResultArgs:
    def __init__(__self__, *,
                 ca_check: Optional[pulumi.Input[int]] = None,
                 check_values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 frequently: Optional[pulumi.Input[bool]] = None,
                 issued: Optional[pulumi.Input[bool]] = None,
                 local_check: Optional[pulumi.Input[int]] = None,
                 local_check_fail_reason: Optional[pulumi.Input[str]] = None,
                 verify_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[int] ca_check: CA inspection results.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] check_values: Detected values.
        :param pulumi.Input[str] domain: Domain name.
        :param pulumi.Input[bool] frequently: Whether frequent requests.
        :param pulumi.Input[bool] issued: Whether issued.
        :param pulumi.Input[int] local_check: Local inspection results.
        :param pulumi.Input[str] local_check_fail_reason: Check the reason for the failure.
        :param pulumi.Input[str] verify_type: Domain Verify Type.
        """
        if ca_check is not None:
            pulumi.set(__self__, "ca_check", ca_check)
        if check_values is not None:
            pulumi.set(__self__, "check_values", check_values)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if frequently is not None:
            pulumi.set(__self__, "frequently", frequently)
        if issued is not None:
            pulumi.set(__self__, "issued", issued)
        if local_check is not None:
            pulumi.set(__self__, "local_check", local_check)
        if local_check_fail_reason is not None:
            pulumi.set(__self__, "local_check_fail_reason", local_check_fail_reason)
        if verify_type is not None:
            pulumi.set(__self__, "verify_type", verify_type)

    @property
    @pulumi.getter(name="caCheck")
    def ca_check(self) -> Optional[pulumi.Input[int]]:
        """
        CA inspection results.
        """
        return pulumi.get(self, "ca_check")

    @ca_check.setter
    def ca_check(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ca_check", value)

    @property
    @pulumi.getter(name="checkValues")
    def check_values(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Detected values.
        """
        return pulumi.get(self, "check_values")

    @check_values.setter
    def check_values(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "check_values", value)

    @property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain name.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain", value)

    @property
    @pulumi.getter
    def frequently(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether frequent requests.
        """
        return pulumi.get(self, "frequently")

    @frequently.setter
    def frequently(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "frequently", value)

    @property
    @pulumi.getter
    def issued(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether issued.
        """
        return pulumi.get(self, "issued")

    @issued.setter
    def issued(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "issued", value)

    @property
    @pulumi.getter(name="localCheck")
    def local_check(self) -> Optional[pulumi.Input[int]]:
        """
        Local inspection results.
        """
        return pulumi.get(self, "local_check")

    @local_check.setter
    def local_check(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "local_check", value)

    @property
    @pulumi.getter(name="localCheckFailReason")
    def local_check_fail_reason(self) -> Optional[pulumi.Input[str]]:
        """
        Check the reason for the failure.
        """
        return pulumi.get(self, "local_check_fail_reason")

    @local_check_fail_reason.setter
    def local_check_fail_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "local_check_fail_reason", value)

    @property
    @pulumi.getter(name="verifyType")
    def verify_type(self) -> Optional[pulumi.Input[str]]:
        """
        Domain Verify Type.
        """
        return pulumi.get(self, "verify_type")

    @verify_type.setter
    def verify_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verify_type", value)


@pulumi.input_type
class FreeCertificateDvAuthArgs:
    def __init__(__self__, *,
                 dv_auth_key: Optional[pulumi.Input[str]] = None,
                 dv_auth_value: Optional[pulumi.Input[str]] = None,
                 dv_auth_verify_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] dv_auth_key: DV authentication key.
        :param pulumi.Input[str] dv_auth_value: DV authentication value.
        :param pulumi.Input[str] dv_auth_verify_type: DV authentication type.
        """
        if dv_auth_key is not None:
            pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        if dv_auth_value is not None:
            pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        if dv_auth_verify_type is not None:
            pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> Optional[pulumi.Input[str]]:
        """
        DV authentication key.
        """
        return pulumi.get(self, "dv_auth_key")

    @dv_auth_key.setter
    def dv_auth_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dv_auth_key", value)

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> Optional[pulumi.Input[str]]:
        """
        DV authentication value.
        """
        return pulumi.get(self, "dv_auth_value")

    @dv_auth_value.setter
    def dv_auth_value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dv_auth_value", value)

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> Optional[pulumi.Input[str]]:
        """
        DV authentication type.
        """
        return pulumi.get(self, "dv_auth_verify_type")

    @dv_auth_verify_type.setter
    def dv_auth_verify_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dv_auth_verify_type", value)


@pulumi.input_type
class PayCertificateDvAuthArgs:
    def __init__(__self__, *,
                 dv_auth_key: Optional[pulumi.Input[str]] = None,
                 dv_auth_value: Optional[pulumi.Input[str]] = None,
                 dv_auth_verify_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] dv_auth_key: DV authentication key.
        :param pulumi.Input[str] dv_auth_value: DV authentication value.
        :param pulumi.Input[str] dv_auth_verify_type: DV authentication type.
        """
        if dv_auth_key is not None:
            pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        if dv_auth_value is not None:
            pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        if dv_auth_verify_type is not None:
            pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> Optional[pulumi.Input[str]]:
        """
        DV authentication key.
        """
        return pulumi.get(self, "dv_auth_key")

    @dv_auth_key.setter
    def dv_auth_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dv_auth_key", value)

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> Optional[pulumi.Input[str]]:
        """
        DV authentication value.
        """
        return pulumi.get(self, "dv_auth_value")

    @dv_auth_value.setter
    def dv_auth_value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dv_auth_value", value)

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> Optional[pulumi.Input[str]]:
        """
        DV authentication type.
        """
        return pulumi.get(self, "dv_auth_verify_type")

    @dv_auth_verify_type.setter
    def dv_auth_verify_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dv_auth_verify_type", value)


@pulumi.input_type
class PayCertificateInformationArgs:
    def __init__(__self__, *,
                 admin_email: pulumi.Input[str],
                 admin_first_name: pulumi.Input[str],
                 admin_last_name: pulumi.Input[str],
                 admin_phone_num: pulumi.Input[str],
                 admin_position: pulumi.Input[str],
                 certificate_domain: pulumi.Input[str],
                 contact_email: pulumi.Input[str],
                 contact_first_name: pulumi.Input[str],
                 contact_last_name: pulumi.Input[str],
                 contact_number: pulumi.Input[str],
                 contact_position: pulumi.Input[str],
                 organization_address: pulumi.Input[str],
                 organization_city: pulumi.Input[str],
                 organization_country: pulumi.Input[str],
                 organization_division: pulumi.Input[str],
                 organization_name: pulumi.Input[str],
                 organization_region: pulumi.Input[str],
                 phone_area_code: pulumi.Input[str],
                 phone_number: pulumi.Input[str],
                 postal_code: pulumi.Input[str],
                 verify_type: pulumi.Input[str],
                 csr_content: Optional[pulumi.Input[str]] = None,
                 csr_type: Optional[pulumi.Input[str]] = None,
                 domain_lists: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 key_password: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] admin_email: The administrator's email address.
        :param pulumi.Input[str] admin_first_name: The first name of the administrator.
        :param pulumi.Input[str] admin_last_name: The last name of the administrator.
        :param pulumi.Input[str] admin_phone_num: Manager mobile phone number.
        :param pulumi.Input[str] admin_position: Manager position.
        :param pulumi.Input[str] certificate_domain: Domain name for binding certificate.
        :param pulumi.Input[str] contact_email: Contact email address.
        :param pulumi.Input[str] contact_first_name: Contact first name.
        :param pulumi.Input[str] contact_last_name: Contact last name.
        :param pulumi.Input[str] contact_number: Contact phone number.
        :param pulumi.Input[str] contact_position: Contact position.
        :param pulumi.Input[str] organization_address: Company address.
        :param pulumi.Input[str] organization_city: Company city.
        :param pulumi.Input[str] organization_country: Country name, such as China: CN.
        :param pulumi.Input[str] organization_division: Department name.
        :param pulumi.Input[str] organization_name: Company name.
        :param pulumi.Input[str] organization_region: The province where the company is located.
        :param pulumi.Input[str] phone_area_code: Company landline area code.
        :param pulumi.Input[str] phone_number: Company landline number.
        :param pulumi.Input[str] postal_code: Company postal code.
        :param pulumi.Input[str] verify_type: Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
        :param pulumi.Input[str] csr_content: CSR content uploaded.
        :param pulumi.Input[str] csr_type: CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] domain_lists: Array of uploaded domain names, multi-domain certificates can be uploaded.
        :param pulumi.Input[str] key_password: Private key password.
        """
        pulumi.set(__self__, "admin_email", admin_email)
        pulumi.set(__self__, "admin_first_name", admin_first_name)
        pulumi.set(__self__, "admin_last_name", admin_last_name)
        pulumi.set(__self__, "admin_phone_num", admin_phone_num)
        pulumi.set(__self__, "admin_position", admin_position)
        pulumi.set(__self__, "certificate_domain", certificate_domain)
        pulumi.set(__self__, "contact_email", contact_email)
        pulumi.set(__self__, "contact_first_name", contact_first_name)
        pulumi.set(__self__, "contact_last_name", contact_last_name)
        pulumi.set(__self__, "contact_number", contact_number)
        pulumi.set(__self__, "contact_position", contact_position)
        pulumi.set(__self__, "organization_address", organization_address)
        pulumi.set(__self__, "organization_city", organization_city)
        pulumi.set(__self__, "organization_country", organization_country)
        pulumi.set(__self__, "organization_division", organization_division)
        pulumi.set(__self__, "organization_name", organization_name)
        pulumi.set(__self__, "organization_region", organization_region)
        pulumi.set(__self__, "phone_area_code", phone_area_code)
        pulumi.set(__self__, "phone_number", phone_number)
        pulumi.set(__self__, "postal_code", postal_code)
        pulumi.set(__self__, "verify_type", verify_type)
        if csr_content is not None:
            pulumi.set(__self__, "csr_content", csr_content)
        if csr_type is not None:
            pulumi.set(__self__, "csr_type", csr_type)
        if domain_lists is not None:
            pulumi.set(__self__, "domain_lists", domain_lists)
        if key_password is not None:
            pulumi.set(__self__, "key_password", key_password)

    @property
    @pulumi.getter(name="adminEmail")
    def admin_email(self) -> pulumi.Input[str]:
        """
        The administrator's email address.
        """
        return pulumi.get(self, "admin_email")

    @admin_email.setter
    def admin_email(self, value: pulumi.Input[str]):
        pulumi.set(self, "admin_email", value)

    @property
    @pulumi.getter(name="adminFirstName")
    def admin_first_name(self) -> pulumi.Input[str]:
        """
        The first name of the administrator.
        """
        return pulumi.get(self, "admin_first_name")

    @admin_first_name.setter
    def admin_first_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "admin_first_name", value)

    @property
    @pulumi.getter(name="adminLastName")
    def admin_last_name(self) -> pulumi.Input[str]:
        """
        The last name of the administrator.
        """
        return pulumi.get(self, "admin_last_name")

    @admin_last_name.setter
    def admin_last_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "admin_last_name", value)

    @property
    @pulumi.getter(name="adminPhoneNum")
    def admin_phone_num(self) -> pulumi.Input[str]:
        """
        Manager mobile phone number.
        """
        return pulumi.get(self, "admin_phone_num")

    @admin_phone_num.setter
    def admin_phone_num(self, value: pulumi.Input[str]):
        pulumi.set(self, "admin_phone_num", value)

    @property
    @pulumi.getter(name="adminPosition")
    def admin_position(self) -> pulumi.Input[str]:
        """
        Manager position.
        """
        return pulumi.get(self, "admin_position")

    @admin_position.setter
    def admin_position(self, value: pulumi.Input[str]):
        pulumi.set(self, "admin_position", value)

    @property
    @pulumi.getter(name="certificateDomain")
    def certificate_domain(self) -> pulumi.Input[str]:
        """
        Domain name for binding certificate.
        """
        return pulumi.get(self, "certificate_domain")

    @certificate_domain.setter
    def certificate_domain(self, value: pulumi.Input[str]):
        pulumi.set(self, "certificate_domain", value)

    @property
    @pulumi.getter(name="contactEmail")
    def contact_email(self) -> pulumi.Input[str]:
        """
        Contact email address.
        """
        return pulumi.get(self, "contact_email")

    @contact_email.setter
    def contact_email(self, value: pulumi.Input[str]):
        pulumi.set(self, "contact_email", value)

    @property
    @pulumi.getter(name="contactFirstName")
    def contact_first_name(self) -> pulumi.Input[str]:
        """
        Contact first name.
        """
        return pulumi.get(self, "contact_first_name")

    @contact_first_name.setter
    def contact_first_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "contact_first_name", value)

    @property
    @pulumi.getter(name="contactLastName")
    def contact_last_name(self) -> pulumi.Input[str]:
        """
        Contact last name.
        """
        return pulumi.get(self, "contact_last_name")

    @contact_last_name.setter
    def contact_last_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "contact_last_name", value)

    @property
    @pulumi.getter(name="contactNumber")
    def contact_number(self) -> pulumi.Input[str]:
        """
        Contact phone number.
        """
        return pulumi.get(self, "contact_number")

    @contact_number.setter
    def contact_number(self, value: pulumi.Input[str]):
        pulumi.set(self, "contact_number", value)

    @property
    @pulumi.getter(name="contactPosition")
    def contact_position(self) -> pulumi.Input[str]:
        """
        Contact position.
        """
        return pulumi.get(self, "contact_position")

    @contact_position.setter
    def contact_position(self, value: pulumi.Input[str]):
        pulumi.set(self, "contact_position", value)

    @property
    @pulumi.getter(name="organizationAddress")
    def organization_address(self) -> pulumi.Input[str]:
        """
        Company address.
        """
        return pulumi.get(self, "organization_address")

    @organization_address.setter
    def organization_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_address", value)

    @property
    @pulumi.getter(name="organizationCity")
    def organization_city(self) -> pulumi.Input[str]:
        """
        Company city.
        """
        return pulumi.get(self, "organization_city")

    @organization_city.setter
    def organization_city(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_city", value)

    @property
    @pulumi.getter(name="organizationCountry")
    def organization_country(self) -> pulumi.Input[str]:
        """
        Country name, such as China: CN.
        """
        return pulumi.get(self, "organization_country")

    @organization_country.setter
    def organization_country(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_country", value)

    @property
    @pulumi.getter(name="organizationDivision")
    def organization_division(self) -> pulumi.Input[str]:
        """
        Department name.
        """
        return pulumi.get(self, "organization_division")

    @organization_division.setter
    def organization_division(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_division", value)

    @property
    @pulumi.getter(name="organizationName")
    def organization_name(self) -> pulumi.Input[str]:
        """
        Company name.
        """
        return pulumi.get(self, "organization_name")

    @organization_name.setter
    def organization_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_name", value)

    @property
    @pulumi.getter(name="organizationRegion")
    def organization_region(self) -> pulumi.Input[str]:
        """
        The province where the company is located.
        """
        return pulumi.get(self, "organization_region")

    @organization_region.setter
    def organization_region(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_region", value)

    @property
    @pulumi.getter(name="phoneAreaCode")
    def phone_area_code(self) -> pulumi.Input[str]:
        """
        Company landline area code.
        """
        return pulumi.get(self, "phone_area_code")

    @phone_area_code.setter
    def phone_area_code(self, value: pulumi.Input[str]):
        pulumi.set(self, "phone_area_code", value)

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> pulumi.Input[str]:
        """
        Company landline number.
        """
        return pulumi.get(self, "phone_number")

    @phone_number.setter
    def phone_number(self, value: pulumi.Input[str]):
        pulumi.set(self, "phone_number", value)

    @property
    @pulumi.getter(name="postalCode")
    def postal_code(self) -> pulumi.Input[str]:
        """
        Company postal code.
        """
        return pulumi.get(self, "postal_code")

    @postal_code.setter
    def postal_code(self, value: pulumi.Input[str]):
        pulumi.set(self, "postal_code", value)

    @property
    @pulumi.getter(name="verifyType")
    def verify_type(self) -> pulumi.Input[str]:
        """
        Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
        """
        return pulumi.get(self, "verify_type")

    @verify_type.setter
    def verify_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "verify_type", value)

    @property
    @pulumi.getter(name="csrContent")
    def csr_content(self) -> Optional[pulumi.Input[str]]:
        """
        CSR content uploaded.
        """
        return pulumi.get(self, "csr_content")

    @csr_content.setter
    def csr_content(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "csr_content", value)

    @property
    @pulumi.getter(name="csrType")
    def csr_type(self) -> Optional[pulumi.Input[str]]:
        """
        CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
        """
        return pulumi.get(self, "csr_type")

    @csr_type.setter
    def csr_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "csr_type", value)

    @property
    @pulumi.getter(name="domainLists")
    def domain_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Array of uploaded domain names, multi-domain certificates can be uploaded.
        """
        return pulumi.get(self, "domain_lists")

    @domain_lists.setter
    def domain_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "domain_lists", value)

    @property
    @pulumi.getter(name="keyPassword")
    def key_password(self) -> Optional[pulumi.Input[str]]:
        """
        Private key password.
        """
        return pulumi.get(self, "key_password")

    @key_password.setter
    def key_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key_password", value)


@pulumi.input_type
class UpdateCertificateInstanceOperationResourceTypesRegionArgs:
    def __init__(__self__, *,
                 regions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input[str]]] regions: Region list.
        :param pulumi.Input[str] resource_type: Cloud resource type.
        """
        if regions is not None:
            pulumi.set(__self__, "regions", regions)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)

    @property
    @pulumi.getter
    def regions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Region list.
        """
        return pulumi.get(self, "regions")

    @regions.setter
    def regions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "regions", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud resource type.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)


@pulumi.input_type
class GetDescribeHostApiGatewayInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostCdnInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostClbInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostCosInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostDdosInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostLighthouseInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostLiveInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostTeoInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostTkeInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostVodInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


@pulumi.input_type
class GetDescribeHostWafInstanceListFilterArgs:
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        """
        :param str filter_key: Filter parameter key.
        :param str filter_value: Filter parameter value.
        """
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        """
        Filter parameter key.
        """
        return pulumi.get(self, "filter_key")

    @filter_key.setter
    def filter_key(self, value: str):
        pulumi.set(self, "filter_key", value)

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        """
        Filter parameter value.
        """
        return pulumi.get(self, "filter_value")

    @filter_value.setter
    def filter_value(self, value: str):
        pulumi.set(self, "filter_value", value)


