# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'RuleData',
]

@pulumi.output_type
class RuleData(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destContent":
            suggest = "dest_content"
        elif key == "destType":
            suggest = "dest_type"
        elif key == "ruleAction":
            suggest = "rule_action"
        elif key == "sourceContent":
            suggest = "source_content"
        elif key == "sourceType":
            suggest = "source_type"
        elif key == "orderIndex":
            suggest = "order_index"
        elif key == "serviceTemplateId":
            suggest = "service_template_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RuleData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RuleData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RuleData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 description: str,
                 dest_content: str,
                 dest_type: str,
                 rule_action: str,
                 source_content: str,
                 source_type: str,
                 order_index: Optional[str] = None,
                 port: Optional[str] = None,
                 protocol: Optional[str] = None,
                 service_template_id: Optional[str] = None):
        """
        :param str description: Description.
        :param str dest_content: Destination example: `net`: IP/CIDR (192.168.0.2); `template`: parameter template (ipm-dyodhpby); `instance`: asset instance (ins-123456); `resourcegroup`: asset group (/all groups/group 1/subgroup 1); `tag`: resource tag ({"Key":"tag key","Value":"tag value"}); `region`: region (ap-gaungzhou).
        :param str dest_type: Access destination type. Valid values: net|template|instance|resourcegroup|tag|region.
        :param str rule_action: The action that Cloud Firewall performs on the traffic. Valid values: `accept`: allow, `drop`: deny.
        :param str source_content: Source example: `net`: IP/CIDR (192.168.0.2); `template`: parameter template (ipm-dyodhpby); `instance`: asset instance (ins-123456); `resourcegroup`: asset group (/all groups/group 1/subgroup 1); `tag`: resource tag ({"Key":"tag key","Value":"tag value"}); `region`: region (ap-gaungzhou).
        :param str source_type: Access source type. Valid values: net|template|instance|resourcegroup|tag|region.
        :param str order_index: Rule priority.
        :param str port: The port to apply access control rules. Valid values: `-1/-1`: all ports, `80`: port 80.
        :param str protocol: Protocol. TCP/UDP/ICMP/ANY.
        :param str service_template_id: Parameter template ID of port and protocol type; mutually exclusive with Protocol and Port.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_content", dest_content)
        pulumi.set(__self__, "dest_type", dest_type)
        pulumi.set(__self__, "rule_action", rule_action)
        pulumi.set(__self__, "source_content", source_content)
        pulumi.set(__self__, "source_type", source_type)
        if order_index is not None:
            pulumi.set(__self__, "order_index", order_index)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if service_template_id is not None:
            pulumi.set(__self__, "service_template_id", service_template_id)

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destContent")
    def dest_content(self) -> str:
        """
        Destination example: `net`: IP/CIDR (192.168.0.2); `template`: parameter template (ipm-dyodhpby); `instance`: asset instance (ins-123456); `resourcegroup`: asset group (/all groups/group 1/subgroup 1); `tag`: resource tag ({"Key":"tag key","Value":"tag value"}); `region`: region (ap-gaungzhou).
        """
        return pulumi.get(self, "dest_content")

    @property
    @pulumi.getter(name="destType")
    def dest_type(self) -> str:
        """
        Access destination type. Valid values: net|template|instance|resourcegroup|tag|region.
        """
        return pulumi.get(self, "dest_type")

    @property
    @pulumi.getter(name="ruleAction")
    def rule_action(self) -> str:
        """
        The action that Cloud Firewall performs on the traffic. Valid values: `accept`: allow, `drop`: deny.
        """
        return pulumi.get(self, "rule_action")

    @property
    @pulumi.getter(name="sourceContent")
    def source_content(self) -> str:
        """
        Source example: `net`: IP/CIDR (192.168.0.2); `template`: parameter template (ipm-dyodhpby); `instance`: asset instance (ins-123456); `resourcegroup`: asset group (/all groups/group 1/subgroup 1); `tag`: resource tag ({"Key":"tag key","Value":"tag value"}); `region`: region (ap-gaungzhou).
        """
        return pulumi.get(self, "source_content")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        Access source type. Valid values: net|template|instance|resourcegroup|tag|region.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="orderIndex")
    def order_index(self) -> Optional[str]:
        """
        Rule priority.
        """
        return pulumi.get(self, "order_index")

    @property
    @pulumi.getter
    def port(self) -> Optional[str]:
        """
        The port to apply access control rules. Valid values: `-1/-1`: all ports, `80`: port 80.
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def protocol(self) -> Optional[str]:
        """
        Protocol. TCP/UDP/ICMP/ANY.
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="serviceTemplateId")
    def service_template_id(self) -> Optional[str]:
        """
        Parameter template ID of port and protocol type; mutually exclusive with Protocol and Port.
        """
        return pulumi.get(self, "service_template_id")


