# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetForwardRulesResult',
    'AwaitableGetForwardRulesResult',
    'get_forward_rules',
    'get_forward_rules_output',
]

@pulumi.output_type
class GetForwardRulesResult:
    """
    A collection of values returned by getForwardRules.
    """
    def __init__(__self__, filters=None, forward_rule_sets=None, id=None, result_output_file=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if forward_rule_sets and not isinstance(forward_rule_sets, list):
            raise TypeError("Expected argument 'forward_rule_sets' to be a list")
        pulumi.set(__self__, "forward_rule_sets", forward_rule_sets)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetForwardRulesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="forwardRuleSets")
    def forward_rule_sets(self) -> Sequence['outputs.GetForwardRulesForwardRuleSetResult']:
        """
        Private domain list.
        """
        return pulumi.get(self, "forward_rule_sets")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetForwardRulesResult(GetForwardRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetForwardRulesResult(
            filters=self.filters,
            forward_rule_sets=self.forward_rule_sets,
            id=self.id,
            result_output_file=self.result_output_file)


def get_forward_rules(filters: Optional[Sequence[pulumi.InputType['GetForwardRulesFilterArgs']]] = None,
                      result_output_file: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetForwardRulesResult:
    """
    Use this data source to query detailed information of private dns forward rules

    ## Example Usage

    ### Query all private dns forward rules

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.PrivateDns.get_forward_rules()
    ```
    <!--End PulumiCodeChooser -->

    ### Query all private dns forward rules by filters

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.PrivateDns.get_forward_rules(filters=[
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleId",
            values=["eid-e9d5880672"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleName",
            values=["tf-example"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleName",
            values=["tf-example"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleType",
            values=["DOWN"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="ZoneId",
            values=["zone-04jlawty"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="EndPointId",
            values=["eid-e9d5880672"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="EndPointName",
            values=["tf-example"],
        ),
    ])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetForwardRulesFilterArgs']] filters: Filter parameters.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:PrivateDns/getForwardRules:getForwardRules', __args__, opts=opts, typ=GetForwardRulesResult).value

    return AwaitableGetForwardRulesResult(
        filters=pulumi.get(__ret__, 'filters'),
        forward_rule_sets=pulumi.get(__ret__, 'forward_rule_sets'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_forward_rules)
def get_forward_rules_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetForwardRulesFilterArgs']]]]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetForwardRulesResult]:
    """
    Use this data source to query detailed information of private dns forward rules

    ## Example Usage

    ### Query all private dns forward rules

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.PrivateDns.get_forward_rules()
    ```
    <!--End PulumiCodeChooser -->

    ### Query all private dns forward rules by filters

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.PrivateDns.get_forward_rules(filters=[
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleId",
            values=["eid-e9d5880672"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleName",
            values=["tf-example"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleName",
            values=["tf-example"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="RuleType",
            values=["DOWN"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="ZoneId",
            values=["zone-04jlawty"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="EndPointId",
            values=["eid-e9d5880672"],
        ),
        tencentcloud.private_dns.GetForwardRulesFilterArgs(
            name="EndPointName",
            values=["tf-example"],
        ),
    ])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetForwardRulesFilterArgs']] filters: Filter parameters.
    :param str result_output_file: Used to save results.
    """
    ...
