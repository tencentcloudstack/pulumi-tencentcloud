# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ZoneAccountVpcSetArgs',
    'ZoneTagSetArgs',
    'ZoneVpcAttachmentAccountVpcSetArgs',
    'ZoneVpcAttachmentVpcSetArgs',
    'ZoneVpcSetArgs',
    'GetEndPointsFilterArgs',
    'GetForwardRulesFilterArgs',
    'GetPrivateZoneListFilterArgs',
    'GetRecordsFilterArgs',
]

@pulumi.input_type
class ZoneAccountVpcSetArgs:
    def __init__(__self__, *,
                 region: pulumi.Input[str],
                 uin: pulumi.Input[str],
                 uniq_vpc_id: pulumi.Input[str],
                 vpc_name: pulumi.Input[str]):
        """
        :param pulumi.Input[str] region: Region.
        :param pulumi.Input[str] uin: UIN of the VPC account.
        :param pulumi.Input[str] uniq_vpc_id: VPC ID.
        :param pulumi.Input[str] vpc_name: VPC NAME.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "uin", uin)
        pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)
        pulumi.set(__self__, "vpc_name", vpc_name)

    @property
    @pulumi.getter
    def region(self) -> pulumi.Input[str]:
        """
        Region.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[str]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter
    def uin(self) -> pulumi.Input[str]:
        """
        UIN of the VPC account.
        """
        return pulumi.get(self, "uin")

    @uin.setter
    def uin(self, value: pulumi.Input[str]):
        pulumi.set(self, "uin", value)

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> pulumi.Input[str]:
        """
        VPC ID.
        """
        return pulumi.get(self, "uniq_vpc_id")

    @uniq_vpc_id.setter
    def uniq_vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "uniq_vpc_id", value)

    @property
    @pulumi.getter(name="vpcName")
    def vpc_name(self) -> pulumi.Input[str]:
        """
        VPC NAME.
        """
        return pulumi.get(self, "vpc_name")

    @vpc_name.setter
    def vpc_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "vpc_name", value)


@pulumi.input_type
class ZoneTagSetArgs:
    def __init__(__self__, *,
                 tag_key: pulumi.Input[str],
                 tag_value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] tag_key: Key of Tag.
        :param pulumi.Input[str] tag_value: Value of Tag.
        """
        pulumi.set(__self__, "tag_key", tag_key)
        pulumi.set(__self__, "tag_value", tag_value)

    @property
    @pulumi.getter(name="tagKey")
    def tag_key(self) -> pulumi.Input[str]:
        """
        Key of Tag.
        """
        return pulumi.get(self, "tag_key")

    @tag_key.setter
    def tag_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "tag_key", value)

    @property
    @pulumi.getter(name="tagValue")
    def tag_value(self) -> pulumi.Input[str]:
        """
        Value of Tag.
        """
        return pulumi.get(self, "tag_value")

    @tag_value.setter
    def tag_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "tag_value", value)


@pulumi.input_type
class ZoneVpcAttachmentAccountVpcSetArgs:
    def __init__(__self__, *,
                 region: pulumi.Input[str],
                 uin: pulumi.Input[str],
                 uniq_vpc_id: pulumi.Input[str]):
        """
        :param pulumi.Input[str] region: Vpc region.
        :param pulumi.Input[str] uin: Vpc owner uin. To grant role authorization to this account.
        :param pulumi.Input[str] uniq_vpc_id: Uniq Vpc Id.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "uin", uin)
        pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)

    @property
    @pulumi.getter
    def region(self) -> pulumi.Input[str]:
        """
        Vpc region.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[str]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter
    def uin(self) -> pulumi.Input[str]:
        """
        Vpc owner uin. To grant role authorization to this account.
        """
        return pulumi.get(self, "uin")

    @uin.setter
    def uin(self, value: pulumi.Input[str]):
        pulumi.set(self, "uin", value)

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> pulumi.Input[str]:
        """
        Uniq Vpc Id.
        """
        return pulumi.get(self, "uniq_vpc_id")

    @uniq_vpc_id.setter
    def uniq_vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "uniq_vpc_id", value)


@pulumi.input_type
class ZoneVpcAttachmentVpcSetArgs:
    def __init__(__self__, *,
                 region: pulumi.Input[str],
                 uniq_vpc_id: pulumi.Input[str]):
        """
        :param pulumi.Input[str] region: Vpc region.
        :param pulumi.Input[str] uniq_vpc_id: Uniq Vpc Id.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)

    @property
    @pulumi.getter
    def region(self) -> pulumi.Input[str]:
        """
        Vpc region.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[str]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> pulumi.Input[str]:
        """
        Uniq Vpc Id.
        """
        return pulumi.get(self, "uniq_vpc_id")

    @uniq_vpc_id.setter
    def uniq_vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "uniq_vpc_id", value)


@pulumi.input_type
class ZoneVpcSetArgs:
    def __init__(__self__, *,
                 region: pulumi.Input[str],
                 uniq_vpc_id: pulumi.Input[str]):
        """
        :param pulumi.Input[str] region: VPC REGION.
        :param pulumi.Input[str] uniq_vpc_id: VPC ID.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)

    @property
    @pulumi.getter
    def region(self) -> pulumi.Input[str]:
        """
        VPC REGION.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[str]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> pulumi.Input[str]:
        """
        VPC ID.
        """
        return pulumi.get(self, "uniq_vpc_id")

    @uniq_vpc_id.setter
    def uniq_vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "uniq_vpc_id", value)


@pulumi.input_type
class GetEndPointsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        """
        :param str name: Parameter name.
        :param Sequence[str] values: Array of parameter values.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Parameter name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        Array of parameter values.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class GetForwardRulesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        """
        :param str name: Parameter name.
        :param Sequence[str] values: Array of parameter values.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Parameter name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        Array of parameter values.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class GetPrivateZoneListFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        """
        :param str name: name.
        :param Sequence[str] values: values.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        values.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class GetRecordsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        """
        :param str name: Parameter name.
        :param Sequence[str] values: Parameter values.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Parameter name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        Parameter values.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)


