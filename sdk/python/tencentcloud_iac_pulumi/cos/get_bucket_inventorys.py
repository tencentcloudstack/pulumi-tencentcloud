# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBucketInventorysResult',
    'AwaitableGetBucketInventorysResult',
    'get_bucket_inventorys',
    'get_bucket_inventorys_output',
]

@pulumi.output_type
class GetBucketInventorysResult:
    """
    A collection of values returned by getBucketInventorys.
    """
    def __init__(__self__, bucket=None, id=None, inventorys=None, result_output_file=None):
        if bucket and not isinstance(bucket, str):
            raise TypeError("Expected argument 'bucket' to be a str")
        pulumi.set(__self__, "bucket", bucket)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if inventorys and not isinstance(inventorys, list):
            raise TypeError("Expected argument 'inventorys' to be a list")
        pulumi.set(__self__, "inventorys", inventorys)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def bucket(self) -> str:
        """
        Bucket name.
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def inventorys(self) -> Sequence['outputs.GetBucketInventorysInventoryResult']:
        """
        Multiple batch processing task information.
        """
        return pulumi.get(self, "inventorys")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetBucketInventorysResult(GetBucketInventorysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBucketInventorysResult(
            bucket=self.bucket,
            id=self.id,
            inventorys=self.inventorys,
            result_output_file=self.result_output_file)


def get_bucket_inventorys(bucket: Optional[str] = None,
                          result_output_file: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBucketInventorysResult:
    """
    Use this data source to query the COS bucket inventorys.

    > **NOTE:** The current resource does not support cdc.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    cos_bucket_inventorys = tencentcloud.Cos.get_bucket_inventorys(bucket="xxxxxx")
    ```
    <!--End PulumiCodeChooser -->


    :param str bucket: Bucket.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['bucket'] = bucket
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cos/getBucketInventorys:getBucketInventorys', __args__, opts=opts, typ=GetBucketInventorysResult).value

    return AwaitableGetBucketInventorysResult(
        bucket=pulumi.get(__ret__, 'bucket'),
        id=pulumi.get(__ret__, 'id'),
        inventorys=pulumi.get(__ret__, 'inventorys'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_bucket_inventorys)
def get_bucket_inventorys_output(bucket: Optional[pulumi.Input[str]] = None,
                                 result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBucketInventorysResult]:
    """
    Use this data source to query the COS bucket inventorys.

    > **NOTE:** The current resource does not support cdc.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    cos_bucket_inventorys = tencentcloud.Cos.get_bucket_inventorys(bucket="xxxxxx")
    ```
    <!--End PulumiCodeChooser -->


    :param str bucket: Bucket.
    :param str result_output_file: Used to save results.
    """
    ...
