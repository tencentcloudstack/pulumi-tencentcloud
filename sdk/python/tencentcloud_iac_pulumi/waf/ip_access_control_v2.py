# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IpAccessControlV2Args', 'IpAccessControlV2']

@pulumi.input_type
class IpAccessControlV2Args:
    def __init__(__self__, *,
                 action_type: pulumi.Input[int],
                 domain: pulumi.Input[str],
                 instance_id: pulumi.Input[str],
                 ip_lists: pulumi.Input[Sequence[pulumi.Input[str]]],
                 job_date_time: Optional[pulumi.Input['IpAccessControlV2JobDateTimeArgs']] = None,
                 job_type: Optional[pulumi.Input[str]] = None,
                 note: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a IpAccessControlV2 resource.
        :param pulumi.Input[int] action_type: 42: blocklist; 40: allowlist.
        :param pulumi.Input[str] domain: Specific domain name, for example, test.qcloudwaf.com.
               Global domain name, that is, global.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_lists: IP parameter list.
        :param pulumi.Input['IpAccessControlV2JobDateTimeArgs'] job_date_time: Details of scheduled configuration.
        :param pulumi.Input[str] job_type: Scheduled configuration type.
        :param pulumi.Input[str] note: Remarks.
        """
        pulumi.set(__self__, "action_type", action_type)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "ip_lists", ip_lists)
        if job_date_time is not None:
            pulumi.set(__self__, "job_date_time", job_date_time)
        if job_type is not None:
            pulumi.set(__self__, "job_type", job_type)
        if note is not None:
            pulumi.set(__self__, "note", note)

    @property
    @pulumi.getter(name="actionType")
    def action_type(self) -> pulumi.Input[int]:
        """
        42: blocklist; 40: allowlist.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "action_type", value)

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Input[str]:
        """
        Specific domain name, for example, test.qcloudwaf.com.
        Global domain name, that is, global.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: pulumi.Input[str]):
        pulumi.set(self, "domain", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="ipLists")
    def ip_lists(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        IP parameter list.
        """
        return pulumi.get(self, "ip_lists")

    @ip_lists.setter
    def ip_lists(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "ip_lists", value)

    @property
    @pulumi.getter(name="jobDateTime")
    def job_date_time(self) -> Optional[pulumi.Input['IpAccessControlV2JobDateTimeArgs']]:
        """
        Details of scheduled configuration.
        """
        return pulumi.get(self, "job_date_time")

    @job_date_time.setter
    def job_date_time(self, value: Optional[pulumi.Input['IpAccessControlV2JobDateTimeArgs']]):
        pulumi.set(self, "job_date_time", value)

    @property
    @pulumi.getter(name="jobType")
    def job_type(self) -> Optional[pulumi.Input[str]]:
        """
        Scheduled configuration type.
        """
        return pulumi.get(self, "job_type")

    @job_type.setter
    def job_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "job_type", value)

    @property
    @pulumi.getter
    def note(self) -> Optional[pulumi.Input[str]]:
        """
        Remarks.
        """
        return pulumi.get(self, "note")

    @note.setter
    def note(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "note", value)


@pulumi.input_type
class _IpAccessControlV2State:
    def __init__(__self__, *,
                 action_type: Optional[pulumi.Input[int]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 ip_lists: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 job_date_time: Optional[pulumi.Input['IpAccessControlV2JobDateTimeArgs']] = None,
                 job_type: Optional[pulumi.Input[str]] = None,
                 note: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering IpAccessControlV2 resources.
        :param pulumi.Input[int] action_type: 42: blocklist; 40: allowlist.
        :param pulumi.Input[str] domain: Specific domain name, for example, test.qcloudwaf.com.
               Global domain name, that is, global.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_lists: IP parameter list.
        :param pulumi.Input['IpAccessControlV2JobDateTimeArgs'] job_date_time: Details of scheduled configuration.
        :param pulumi.Input[str] job_type: Scheduled configuration type.
        :param pulumi.Input[str] note: Remarks.
        """
        if action_type is not None:
            pulumi.set(__self__, "action_type", action_type)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if ip_lists is not None:
            pulumi.set(__self__, "ip_lists", ip_lists)
        if job_date_time is not None:
            pulumi.set(__self__, "job_date_time", job_date_time)
        if job_type is not None:
            pulumi.set(__self__, "job_type", job_type)
        if note is not None:
            pulumi.set(__self__, "note", note)

    @property
    @pulumi.getter(name="actionType")
    def action_type(self) -> Optional[pulumi.Input[int]]:
        """
        42: blocklist; 40: allowlist.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "action_type", value)

    @property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[str]]:
        """
        Specific domain name, for example, test.qcloudwaf.com.
        Global domain name, that is, global.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="ipLists")
    def ip_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        IP parameter list.
        """
        return pulumi.get(self, "ip_lists")

    @ip_lists.setter
    def ip_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_lists", value)

    @property
    @pulumi.getter(name="jobDateTime")
    def job_date_time(self) -> Optional[pulumi.Input['IpAccessControlV2JobDateTimeArgs']]:
        """
        Details of scheduled configuration.
        """
        return pulumi.get(self, "job_date_time")

    @job_date_time.setter
    def job_date_time(self, value: Optional[pulumi.Input['IpAccessControlV2JobDateTimeArgs']]):
        pulumi.set(self, "job_date_time", value)

    @property
    @pulumi.getter(name="jobType")
    def job_type(self) -> Optional[pulumi.Input[str]]:
        """
        Scheduled configuration type.
        """
        return pulumi.get(self, "job_type")

    @job_type.setter
    def job_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "job_type", value)

    @property
    @pulumi.getter
    def note(self) -> Optional[pulumi.Input[str]]:
        """
        Remarks.
        """
        return pulumi.get(self, "note")

    @note.setter
    def note(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "note", value)


class IpAccessControlV2(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_type: Optional[pulumi.Input[int]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 ip_lists: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 job_date_time: Optional[pulumi.Input[pulumi.InputType['IpAccessControlV2JobDateTimeArgs']]] = None,
                 job_type: Optional[pulumi.Input[str]] = None,
                 note: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a waf ip access control v2

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.IpAccessControlV2("example",
            action_type=40,
            domain="example.com",
            instance_id="waf_2kxtlbky11bbcr4b",
            ip_lists=[
                "10.0.0.10",
                "172.0.0.16",
                "192.168.0.30",
            ],
            job_date_time=tencentcloud.waf.IpAccessControlV2JobDateTimeArgs(
                time_t_zone="UTC+8",
                timeds=[tencentcloud.waf.IpAccessControlV2JobDateTimeTimedArgs(
                    end_date_time=0,
                    start_date_time=0,
                )],
            ),
            job_type="TimedJob",
            note="note.")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        waf ip access control v2 can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2 example waf_2kxtlbky11bbcr4b#example.com#5503616778
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] action_type: 42: blocklist; 40: allowlist.
        :param pulumi.Input[str] domain: Specific domain name, for example, test.qcloudwaf.com.
               Global domain name, that is, global.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_lists: IP parameter list.
        :param pulumi.Input[pulumi.InputType['IpAccessControlV2JobDateTimeArgs']] job_date_time: Details of scheduled configuration.
        :param pulumi.Input[str] job_type: Scheduled configuration type.
        :param pulumi.Input[str] note: Remarks.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IpAccessControlV2Args,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a waf ip access control v2

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.IpAccessControlV2("example",
            action_type=40,
            domain="example.com",
            instance_id="waf_2kxtlbky11bbcr4b",
            ip_lists=[
                "10.0.0.10",
                "172.0.0.16",
                "192.168.0.30",
            ],
            job_date_time=tencentcloud.waf.IpAccessControlV2JobDateTimeArgs(
                time_t_zone="UTC+8",
                timeds=[tencentcloud.waf.IpAccessControlV2JobDateTimeTimedArgs(
                    end_date_time=0,
                    start_date_time=0,
                )],
            ),
            job_type="TimedJob",
            note="note.")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        waf ip access control v2 can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2 example waf_2kxtlbky11bbcr4b#example.com#5503616778
        ```

        :param str resource_name: The name of the resource.
        :param IpAccessControlV2Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IpAccessControlV2Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_type: Optional[pulumi.Input[int]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 ip_lists: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 job_date_time: Optional[pulumi.Input[pulumi.InputType['IpAccessControlV2JobDateTimeArgs']]] = None,
                 job_type: Optional[pulumi.Input[str]] = None,
                 note: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IpAccessControlV2Args.__new__(IpAccessControlV2Args)

            if action_type is None and not opts.urn:
                raise TypeError("Missing required property 'action_type'")
            __props__.__dict__["action_type"] = action_type
            if domain is None and not opts.urn:
                raise TypeError("Missing required property 'domain'")
            __props__.__dict__["domain"] = domain
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            if ip_lists is None and not opts.urn:
                raise TypeError("Missing required property 'ip_lists'")
            __props__.__dict__["ip_lists"] = ip_lists
            __props__.__dict__["job_date_time"] = job_date_time
            __props__.__dict__["job_type"] = job_type
            __props__.__dict__["note"] = note
        super(IpAccessControlV2, __self__).__init__(
            'tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action_type: Optional[pulumi.Input[int]] = None,
            domain: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            ip_lists: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            job_date_time: Optional[pulumi.Input[pulumi.InputType['IpAccessControlV2JobDateTimeArgs']]] = None,
            job_type: Optional[pulumi.Input[str]] = None,
            note: Optional[pulumi.Input[str]] = None) -> 'IpAccessControlV2':
        """
        Get an existing IpAccessControlV2 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] action_type: 42: blocklist; 40: allowlist.
        :param pulumi.Input[str] domain: Specific domain name, for example, test.qcloudwaf.com.
               Global domain name, that is, global.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_lists: IP parameter list.
        :param pulumi.Input[pulumi.InputType['IpAccessControlV2JobDateTimeArgs']] job_date_time: Details of scheduled configuration.
        :param pulumi.Input[str] job_type: Scheduled configuration type.
        :param pulumi.Input[str] note: Remarks.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IpAccessControlV2State.__new__(_IpAccessControlV2State)

        __props__.__dict__["action_type"] = action_type
        __props__.__dict__["domain"] = domain
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["ip_lists"] = ip_lists
        __props__.__dict__["job_date_time"] = job_date_time
        __props__.__dict__["job_type"] = job_type
        __props__.__dict__["note"] = note
        return IpAccessControlV2(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="actionType")
    def action_type(self) -> pulumi.Output[int]:
        """
        42: blocklist; 40: allowlist.
        """
        return pulumi.get(self, "action_type")

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Output[str]:
        """
        Specific domain name, for example, test.qcloudwaf.com.
        Global domain name, that is, global.
        """
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="ipLists")
    def ip_lists(self) -> pulumi.Output[Sequence[str]]:
        """
        IP parameter list.
        """
        return pulumi.get(self, "ip_lists")

    @property
    @pulumi.getter(name="jobDateTime")
    def job_date_time(self) -> pulumi.Output['outputs.IpAccessControlV2JobDateTime']:
        """
        Details of scheduled configuration.
        """
        return pulumi.get(self, "job_date_time")

    @property
    @pulumi.getter(name="jobType")
    def job_type(self) -> pulumi.Output[str]:
        """
        Scheduled configuration type.
        """
        return pulumi.get(self, "job_type")

    @property
    @pulumi.getter
    def note(self) -> pulumi.Output[Optional[str]]:
        """
        Remarks.
        """
        return pulumi.get(self, "note")

