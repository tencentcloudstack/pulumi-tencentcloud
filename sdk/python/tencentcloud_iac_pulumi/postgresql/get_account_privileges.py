# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetAccountPrivilegesResult',
    'AwaitableGetAccountPrivilegesResult',
    'get_account_privileges',
    'get_account_privileges_output',
]

@pulumi.output_type
class GetAccountPrivilegesResult:
    """
    A collection of values returned by getAccountPrivileges.
    """
    def __init__(__self__, database_object_sets=None, db_instance_id=None, id=None, privilege_sets=None, result_output_file=None, user_name=None):
        if database_object_sets and not isinstance(database_object_sets, list):
            raise TypeError("Expected argument 'database_object_sets' to be a list")
        pulumi.set(__self__, "database_object_sets", database_object_sets)
        if db_instance_id and not isinstance(db_instance_id, str):
            raise TypeError("Expected argument 'db_instance_id' to be a str")
        pulumi.set(__self__, "db_instance_id", db_instance_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if privilege_sets and not isinstance(privilege_sets, list):
            raise TypeError("Expected argument 'privilege_sets' to be a list")
        pulumi.set(__self__, "privilege_sets", privilege_sets)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if user_name and not isinstance(user_name, str):
            raise TypeError("Expected argument 'user_name' to be a str")
        pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="databaseObjectSets")
    def database_object_sets(self) -> Sequence['outputs.GetAccountPrivilegesDatabaseObjectSetResult']:
        return pulumi.get(self, "database_object_sets")

    @property
    @pulumi.getter(name="dbInstanceId")
    def db_instance_id(self) -> str:
        return pulumi.get(self, "db_instance_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="privilegeSets")
    def privilege_sets(self) -> Sequence['outputs.GetAccountPrivilegesPrivilegeSetResult']:
        """
        Privileges the specific account has on database object. Note: This field may return null, indicating that no valid value can be obtained.
        """
        return pulumi.get(self, "privilege_sets")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> str:
        return pulumi.get(self, "user_name")


class AwaitableGetAccountPrivilegesResult(GetAccountPrivilegesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountPrivilegesResult(
            database_object_sets=self.database_object_sets,
            db_instance_id=self.db_instance_id,
            id=self.id,
            privilege_sets=self.privilege_sets,
            result_output_file=self.result_output_file,
            user_name=self.user_name)


def get_account_privileges(database_object_sets: Optional[Sequence[pulumi.InputType['GetAccountPrivilegesDatabaseObjectSetArgs']]] = None,
                           db_instance_id: Optional[str] = None,
                           result_output_file: Optional[str] = None,
                           user_name: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccountPrivilegesResult:
    """
    Use this data source to query detailed information of postgresql account privileges

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Postgresql.get_account_privileges(database_object_sets=[tencentcloud.postgresql.GetAccountPrivilegesDatabaseObjectSetArgs(
            object_name="postgres",
            object_type="database",
        )],
        db_instance_id="postgres-3hk6b6tj",
        user_name="tf_example")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetAccountPrivilegesDatabaseObjectSetArgs']] database_object_sets: Instance database object info.
    :param str db_instance_id: Instance ID.
    :param str result_output_file: Used to save results.
    :param str user_name: Instance username.
    """
    __args__ = dict()
    __args__['databaseObjectSets'] = database_object_sets
    __args__['dbInstanceId'] = db_instance_id
    __args__['resultOutputFile'] = result_output_file
    __args__['userName'] = user_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Postgresql/getAccountPrivileges:getAccountPrivileges', __args__, opts=opts, typ=GetAccountPrivilegesResult).value

    return AwaitableGetAccountPrivilegesResult(
        database_object_sets=pulumi.get(__ret__, 'database_object_sets'),
        db_instance_id=pulumi.get(__ret__, 'db_instance_id'),
        id=pulumi.get(__ret__, 'id'),
        privilege_sets=pulumi.get(__ret__, 'privilege_sets'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        user_name=pulumi.get(__ret__, 'user_name'))


@_utilities.lift_output_func(get_account_privileges)
def get_account_privileges_output(database_object_sets: Optional[pulumi.Input[Sequence[pulumi.InputType['GetAccountPrivilegesDatabaseObjectSetArgs']]]] = None,
                                  db_instance_id: Optional[pulumi.Input[str]] = None,
                                  result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                  user_name: Optional[pulumi.Input[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAccountPrivilegesResult]:
    """
    Use this data source to query detailed information of postgresql account privileges

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Postgresql.get_account_privileges(database_object_sets=[tencentcloud.postgresql.GetAccountPrivilegesDatabaseObjectSetArgs(
            object_name="postgres",
            object_type="database",
        )],
        db_instance_id="postgres-3hk6b6tj",
        user_name="tf_example")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetAccountPrivilegesDatabaseObjectSetArgs']] database_object_sets: Instance database object info.
    :param str db_instance_id: Instance ID.
    :param str result_output_file: Used to save results.
    :param str user_name: Instance username.
    """
    ...
