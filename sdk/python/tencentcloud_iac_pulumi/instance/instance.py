# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['InstanceArgs', 'Instance']

@pulumi.input_type
class InstanceArgs:
    def __init__(__self__, *,
                 availability_zone: pulumi.Input[str],
                 image_id: pulumi.Input[str],
                 allocate_public_ip: Optional[pulumi.Input[bool]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[str]] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 cdh_host_id: Optional[pulumi.Input[str]] = None,
                 cdh_instance_type: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]]] = None,
                 dedicated_cluster_id: Optional[pulumi.Input[str]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disable_automation_service: Optional[pulumi.Input[bool]] = None,
                 disable_monitor_service: Optional[pulumi.Input[bool]] = None,
                 disable_security_service: Optional[pulumi.Input[bool]] = None,
                 force_delete: Optional[pulumi.Input[bool]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_charge_type_prepaid_period: Optional[pulumi.Input[int]] = None,
                 instance_charge_type_prepaid_renew_flag: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_charge_type: Optional[pulumi.Input[str]] = None,
                 internet_max_bandwidth_out: Optional[pulumi.Input[int]] = None,
                 keep_image_login: Optional[pulumi.Input[bool]] = None,
                 key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 key_name: Optional[pulumi.Input[str]] = None,
                 orderly_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 placement_group_id: Optional[pulumi.Input[str]] = None,
                 private_ip: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 running_flag: Optional[pulumi.Input[bool]] = None,
                 security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 spot_instance_type: Optional[pulumi.Input[str]] = None,
                 spot_max_price: Optional[pulumi.Input[str]] = None,
                 stopped_mode: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 system_disk_id: Optional[pulumi.Input[str]] = None,
                 system_disk_resize_online: Optional[pulumi.Input[bool]] = None,
                 system_disk_size: Optional[pulumi.Input[int]] = None,
                 system_disk_type: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 user_data_raw: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Instance resource.
        :param pulumi.Input[str] availability_zone: The available zone for the CVM instance.
        :param pulumi.Input[str] image_id: The image to use for the instance. Changing `image_id` will cause the instance reset.
        :param pulumi.Input[bool] allocate_public_ip: Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        :param pulumi.Input[str] bandwidth_package_id: bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        :param pulumi.Input[str] cam_role_name: CAM role name authorized to access.
        :param pulumi.Input[str] cdh_host_id: Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[str] cdh_instance_type: Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]] data_disks: Settings for data disks.
        :param pulumi.Input[str] dedicated_cluster_id: Exclusive cluster id.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        :param pulumi.Input[bool] disable_automation_service: Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_monitor_service: Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_security_service: Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] force_delete: Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        :param pulumi.Input[str] hostname: The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        :param pulumi.Input[int] instance_charge_type_prepaid_period: The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        :param pulumi.Input[str] instance_charge_type_prepaid_renew_flag: Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        :param pulumi.Input[int] instance_count: It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        :param pulumi.Input[str] instance_name: The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        :param pulumi.Input[str] instance_type: The type of the instance.
        :param pulumi.Input[str] internet_charge_type: Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[int] internet_max_bandwidth_out: Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[bool] keep_image_login: Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] key_ids: The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[str] key_name: Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] orderly_security_groups: A list of orderly security group IDs to associate with.
        :param pulumi.Input[str] password: Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        :param pulumi.Input[str] placement_group_id: The ID of a placement group.
        :param pulumi.Input[str] private_ip: The private IP to be assigned to this instance, must be in the provided subnet and available.
        :param pulumi.Input[int] project_id: The project the instance belongs to, default to 0.
        :param pulumi.Input[bool] running_flag: Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_groups: It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        :param pulumi.Input[str] spot_instance_type: Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] spot_max_price: Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] stopped_mode: Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        :param pulumi.Input[str] subnet_id: The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        :param pulumi.Input[str] system_disk_id: System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        :param pulumi.Input[bool] system_disk_resize_online: Resize online.
        :param pulumi.Input[int] system_disk_size: Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        :param pulumi.Input[str] system_disk_type: System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        :param pulumi.Input[Mapping[str, Any]] tags: A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        :param pulumi.Input[str] user_data: The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        :param pulumi.Input[str] user_data_raw: The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        :param pulumi.Input[str] vpc_id: The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        pulumi.set(__self__, "availability_zone", availability_zone)
        pulumi.set(__self__, "image_id", image_id)
        if allocate_public_ip is not None:
            pulumi.set(__self__, "allocate_public_ip", allocate_public_ip)
        if bandwidth_package_id is not None:
            pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        if cam_role_name is not None:
            pulumi.set(__self__, "cam_role_name", cam_role_name)
        if cdh_host_id is not None:
            pulumi.set(__self__, "cdh_host_id", cdh_host_id)
        if cdh_instance_type is not None:
            pulumi.set(__self__, "cdh_instance_type", cdh_instance_type)
        if data_disks is not None:
            pulumi.set(__self__, "data_disks", data_disks)
        if dedicated_cluster_id is not None:
            pulumi.set(__self__, "dedicated_cluster_id", dedicated_cluster_id)
        if disable_api_termination is not None:
            pulumi.set(__self__, "disable_api_termination", disable_api_termination)
        if disable_automation_service is not None:
            pulumi.set(__self__, "disable_automation_service", disable_automation_service)
        if disable_monitor_service is not None:
            pulumi.set(__self__, "disable_monitor_service", disable_monitor_service)
        if disable_security_service is not None:
            pulumi.set(__self__, "disable_security_service", disable_security_service)
        if force_delete is not None:
            pulumi.set(__self__, "force_delete", force_delete)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if instance_charge_type is not None:
            pulumi.set(__self__, "instance_charge_type", instance_charge_type)
        if instance_charge_type_prepaid_period is not None:
            pulumi.set(__self__, "instance_charge_type_prepaid_period", instance_charge_type_prepaid_period)
        if instance_charge_type_prepaid_renew_flag is not None:
            pulumi.set(__self__, "instance_charge_type_prepaid_renew_flag", instance_charge_type_prepaid_renew_flag)
        if instance_count is not None:
            warnings.warn("""It has been deprecated from version 1.59.18. Use built-in `count` instead.""", DeprecationWarning)
            pulumi.log.warn("""instance_count is deprecated: It has been deprecated from version 1.59.18. Use built-in `count` instead.""")
        if instance_count is not None:
            pulumi.set(__self__, "instance_count", instance_count)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if internet_charge_type is not None:
            pulumi.set(__self__, "internet_charge_type", internet_charge_type)
        if internet_max_bandwidth_out is not None:
            pulumi.set(__self__, "internet_max_bandwidth_out", internet_max_bandwidth_out)
        if keep_image_login is not None:
            pulumi.set(__self__, "keep_image_login", keep_image_login)
        if key_ids is not None:
            pulumi.set(__self__, "key_ids", key_ids)
        if key_name is not None:
            warnings.warn("""Please use `key_ids` instead.""", DeprecationWarning)
            pulumi.log.warn("""key_name is deprecated: Please use `key_ids` instead.""")
        if key_name is not None:
            pulumi.set(__self__, "key_name", key_name)
        if orderly_security_groups is not None:
            pulumi.set(__self__, "orderly_security_groups", orderly_security_groups)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if placement_group_id is not None:
            pulumi.set(__self__, "placement_group_id", placement_group_id)
        if private_ip is not None:
            pulumi.set(__self__, "private_ip", private_ip)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if running_flag is not None:
            pulumi.set(__self__, "running_flag", running_flag)
        if security_groups is not None:
            warnings.warn("""It will be deprecated. Use `orderly_security_groups` instead.""", DeprecationWarning)
            pulumi.log.warn("""security_groups is deprecated: It will be deprecated. Use `orderly_security_groups` instead.""")
        if security_groups is not None:
            pulumi.set(__self__, "security_groups", security_groups)
        if spot_instance_type is not None:
            pulumi.set(__self__, "spot_instance_type", spot_instance_type)
        if spot_max_price is not None:
            pulumi.set(__self__, "spot_max_price", spot_max_price)
        if stopped_mode is not None:
            pulumi.set(__self__, "stopped_mode", stopped_mode)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if system_disk_id is not None:
            pulumi.set(__self__, "system_disk_id", system_disk_id)
        if system_disk_resize_online is not None:
            pulumi.set(__self__, "system_disk_resize_online", system_disk_resize_online)
        if system_disk_size is not None:
            pulumi.set(__self__, "system_disk_size", system_disk_size)
        if system_disk_type is not None:
            pulumi.set(__self__, "system_disk_type", system_disk_type)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)
        if user_data_raw is not None:
            pulumi.set(__self__, "user_data_raw", user_data_raw)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Input[str]:
        """
        The available zone for the CVM instance.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: pulumi.Input[str]):
        pulumi.set(self, "availability_zone", value)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Input[str]:
        """
        The image to use for the instance. Changing `image_id` will cause the instance reset.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="allocatePublicIp")
    def allocate_public_ip(self) -> Optional[pulumi.Input[bool]]:
        """
        Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        """
        return pulumi.get(self, "allocate_public_ip")

    @allocate_public_ip.setter
    def allocate_public_ip(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allocate_public_ip", value)

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> Optional[pulumi.Input[str]]:
        """
        bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        """
        return pulumi.get(self, "bandwidth_package_id")

    @bandwidth_package_id.setter
    def bandwidth_package_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bandwidth_package_id", value)

    @property
    @pulumi.getter(name="camRoleName")
    def cam_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        CAM role name authorized to access.
        """
        return pulumi.get(self, "cam_role_name")

    @cam_role_name.setter
    def cam_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cam_role_name", value)

    @property
    @pulumi.getter(name="cdhHostId")
    def cdh_host_id(self) -> Optional[pulumi.Input[str]]:
        """
        Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        """
        return pulumi.get(self, "cdh_host_id")

    @cdh_host_id.setter
    def cdh_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cdh_host_id", value)

    @property
    @pulumi.getter(name="cdhInstanceType")
    def cdh_instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        """
        return pulumi.get(self, "cdh_instance_type")

    @cdh_instance_type.setter
    def cdh_instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cdh_instance_type", value)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]]]:
        """
        Settings for data disks.
        """
        return pulumi.get(self, "data_disks")

    @data_disks.setter
    def data_disks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]]]):
        pulumi.set(self, "data_disks", value)

    @property
    @pulumi.getter(name="dedicatedClusterId")
    def dedicated_cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        Exclusive cluster id.
        """
        return pulumi.get(self, "dedicated_cluster_id")

    @dedicated_cluster_id.setter
    def dedicated_cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dedicated_cluster_id", value)

    @property
    @pulumi.getter(name="disableApiTermination")
    def disable_api_termination(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        """
        return pulumi.get(self, "disable_api_termination")

    @disable_api_termination.setter
    def disable_api_termination(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_api_termination", value)

    @property
    @pulumi.getter(name="disableAutomationService")
    def disable_automation_service(self) -> Optional[pulumi.Input[bool]]:
        """
        Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_automation_service")

    @disable_automation_service.setter
    def disable_automation_service(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_automation_service", value)

    @property
    @pulumi.getter(name="disableMonitorService")
    def disable_monitor_service(self) -> Optional[pulumi.Input[bool]]:
        """
        Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_monitor_service")

    @disable_monitor_service.setter
    def disable_monitor_service(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_monitor_service", value)

    @property
    @pulumi.getter(name="disableSecurityService")
    def disable_security_service(self) -> Optional[pulumi.Input[bool]]:
        """
        Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_security_service")

    @disable_security_service.setter
    def disable_security_service(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_security_service", value)

    @property
    @pulumi.getter(name="forceDelete")
    def force_delete(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        """
        return pulumi.get(self, "force_delete")

    @force_delete.setter
    def force_delete(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "force_delete", value)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[pulumi.Input[str]]:
        """
        The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        """
        return pulumi.get(self, "hostname")

    @hostname.setter
    def hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostname", value)

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        """
        return pulumi.get(self, "instance_charge_type")

    @instance_charge_type.setter
    def instance_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_charge_type", value)

    @property
    @pulumi.getter(name="instanceChargeTypePrepaidPeriod")
    def instance_charge_type_prepaid_period(self) -> Optional[pulumi.Input[int]]:
        """
        The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        """
        return pulumi.get(self, "instance_charge_type_prepaid_period")

    @instance_charge_type_prepaid_period.setter
    def instance_charge_type_prepaid_period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_charge_type_prepaid_period", value)

    @property
    @pulumi.getter(name="instanceChargeTypePrepaidRenewFlag")
    def instance_charge_type_prepaid_renew_flag(self) -> Optional[pulumi.Input[str]]:
        """
        Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        """
        return pulumi.get(self, "instance_charge_type_prepaid_renew_flag")

    @instance_charge_type_prepaid_renew_flag.setter
    def instance_charge_type_prepaid_renew_flag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_charge_type_prepaid_renew_flag", value)

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> Optional[pulumi.Input[int]]:
        """
        It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        """
        warnings.warn("""It has been deprecated from version 1.59.18. Use built-in `count` instead.""", DeprecationWarning)
        pulumi.log.warn("""instance_count is deprecated: It has been deprecated from version 1.59.18. Use built-in `count` instead.""")

        return pulumi.get(self, "instance_count")

    @instance_count.setter
    def instance_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_count", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the instance.
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_type", value)

    @property
    @pulumi.getter(name="internetChargeType")
    def internet_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        """
        return pulumi.get(self, "internet_charge_type")

    @internet_charge_type.setter
    def internet_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_charge_type", value)

    @property
    @pulumi.getter(name="internetMaxBandwidthOut")
    def internet_max_bandwidth_out(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        """
        return pulumi.get(self, "internet_max_bandwidth_out")

    @internet_max_bandwidth_out.setter
    def internet_max_bandwidth_out(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "internet_max_bandwidth_out", value)

    @property
    @pulumi.getter(name="keepImageLogin")
    def keep_image_login(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "keep_image_login")

    @keep_image_login.setter
    def keep_image_login(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "keep_image_login", value)

    @property
    @pulumi.getter(name="keyIds")
    def key_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "key_ids")

    @key_ids.setter
    def key_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "key_ids", value)

    @property
    @pulumi.getter(name="keyName")
    def key_name(self) -> Optional[pulumi.Input[str]]:
        """
        Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        """
        warnings.warn("""Please use `key_ids` instead.""", DeprecationWarning)
        pulumi.log.warn("""key_name is deprecated: Please use `key_ids` instead.""")

        return pulumi.get(self, "key_name")

    @key_name.setter
    def key_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key_name", value)

    @property
    @pulumi.getter(name="orderlySecurityGroups")
    def orderly_security_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of orderly security group IDs to associate with.
        """
        return pulumi.get(self, "orderly_security_groups")

    @orderly_security_groups.setter
    def orderly_security_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "orderly_security_groups", value)

    @property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[str]]:
        """
        Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter(name="placementGroupId")
    def placement_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a placement group.
        """
        return pulumi.get(self, "placement_group_id")

    @placement_group_id.setter
    def placement_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "placement_group_id", value)

    @property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> Optional[pulumi.Input[str]]:
        """
        The private IP to be assigned to this instance, must be in the provided subnet and available.
        """
        return pulumi.get(self, "private_ip")

    @private_ip.setter
    def private_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "private_ip", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[int]]:
        """
        The project the instance belongs to, default to 0.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="runningFlag")
    def running_flag(self) -> Optional[pulumi.Input[bool]]:
        """
        Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        """
        return pulumi.get(self, "running_flag")

    @running_flag.setter
    def running_flag(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "running_flag", value)

    @property
    @pulumi.getter(name="securityGroups")
    def security_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        """
        warnings.warn("""It will be deprecated. Use `orderly_security_groups` instead.""", DeprecationWarning)
        pulumi.log.warn("""security_groups is deprecated: It will be deprecated. Use `orderly_security_groups` instead.""")

        return pulumi.get(self, "security_groups")

    @security_groups.setter
    def security_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_groups", value)

    @property
    @pulumi.getter(name="spotInstanceType")
    def spot_instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        """
        return pulumi.get(self, "spot_instance_type")

    @spot_instance_type.setter
    def spot_instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "spot_instance_type", value)

    @property
    @pulumi.getter(name="spotMaxPrice")
    def spot_max_price(self) -> Optional[pulumi.Input[str]]:
        """
        Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        """
        return pulumi.get(self, "spot_max_price")

    @spot_max_price.setter
    def spot_max_price(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "spot_max_price", value)

    @property
    @pulumi.getter(name="stoppedMode")
    def stopped_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        """
        return pulumi.get(self, "stopped_mode")

    @stopped_mode.setter
    def stopped_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stopped_mode", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter(name="systemDiskId")
    def system_disk_id(self) -> Optional[pulumi.Input[str]]:
        """
        System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        """
        return pulumi.get(self, "system_disk_id")

    @system_disk_id.setter
    def system_disk_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "system_disk_id", value)

    @property
    @pulumi.getter(name="systemDiskResizeOnline")
    def system_disk_resize_online(self) -> Optional[pulumi.Input[bool]]:
        """
        Resize online.
        """
        return pulumi.get(self, "system_disk_resize_online")

    @system_disk_resize_online.setter
    def system_disk_resize_online(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "system_disk_resize_online", value)

    @property
    @pulumi.getter(name="systemDiskSize")
    def system_disk_size(self) -> Optional[pulumi.Input[int]]:
        """
        Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        """
        return pulumi.get(self, "system_disk_size")

    @system_disk_size.setter
    def system_disk_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "system_disk_size", value)

    @property
    @pulumi.getter(name="systemDiskType")
    def system_disk_type(self) -> Optional[pulumi.Input[str]]:
        """
        System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        """
        return pulumi.get(self, "system_disk_type")

    @system_disk_type.setter
    def system_disk_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "system_disk_type", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> Optional[pulumi.Input[str]]:
        """
        The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        """
        return pulumi.get(self, "user_data")

    @user_data.setter
    def user_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data", value)

    @property
    @pulumi.getter(name="userDataRaw")
    def user_data_raw(self) -> Optional[pulumi.Input[str]]:
        """
        The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        """
        return pulumi.get(self, "user_data_raw")

    @user_data_raw.setter
    def user_data_raw(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data_raw", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.input_type
class _InstanceState:
    def __init__(__self__, *,
                 allocate_public_ip: Optional[pulumi.Input[bool]] = None,
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[str]] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 cdh_host_id: Optional[pulumi.Input[str]] = None,
                 cdh_instance_type: Optional[pulumi.Input[str]] = None,
                 cpu: Optional[pulumi.Input[int]] = None,
                 create_time: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]]] = None,
                 dedicated_cluster_id: Optional[pulumi.Input[str]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disable_automation_service: Optional[pulumi.Input[bool]] = None,
                 disable_monitor_service: Optional[pulumi.Input[bool]] = None,
                 disable_security_service: Optional[pulumi.Input[bool]] = None,
                 expired_time: Optional[pulumi.Input[str]] = None,
                 force_delete: Optional[pulumi.Input[bool]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_charge_type_prepaid_period: Optional[pulumi.Input[int]] = None,
                 instance_charge_type_prepaid_renew_flag: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_status: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_charge_type: Optional[pulumi.Input[str]] = None,
                 internet_max_bandwidth_out: Optional[pulumi.Input[int]] = None,
                 keep_image_login: Optional[pulumi.Input[bool]] = None,
                 key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 key_name: Optional[pulumi.Input[str]] = None,
                 memory: Optional[pulumi.Input[int]] = None,
                 orderly_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 os_name: Optional[pulumi.Input[str]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 placement_group_id: Optional[pulumi.Input[str]] = None,
                 private_ip: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 public_ip: Optional[pulumi.Input[str]] = None,
                 running_flag: Optional[pulumi.Input[bool]] = None,
                 security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 spot_instance_type: Optional[pulumi.Input[str]] = None,
                 spot_max_price: Optional[pulumi.Input[str]] = None,
                 stopped_mode: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 system_disk_id: Optional[pulumi.Input[str]] = None,
                 system_disk_resize_online: Optional[pulumi.Input[bool]] = None,
                 system_disk_size: Optional[pulumi.Input[int]] = None,
                 system_disk_type: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 user_data_raw: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Instance resources.
        :param pulumi.Input[bool] allocate_public_ip: Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        :param pulumi.Input[str] availability_zone: The available zone for the CVM instance.
        :param pulumi.Input[str] bandwidth_package_id: bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        :param pulumi.Input[str] cam_role_name: CAM role name authorized to access.
        :param pulumi.Input[str] cdh_host_id: Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[str] cdh_instance_type: Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[int] cpu: The number of CPU cores of the instance.
        :param pulumi.Input[str] create_time: Create time of the instance.
        :param pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]] data_disks: Settings for data disks.
        :param pulumi.Input[str] dedicated_cluster_id: Exclusive cluster id.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        :param pulumi.Input[bool] disable_automation_service: Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_monitor_service: Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_security_service: Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[str] expired_time: Expired time of the instance.
        :param pulumi.Input[bool] force_delete: Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        :param pulumi.Input[str] hostname: The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        :param pulumi.Input[str] image_id: The image to use for the instance. Changing `image_id` will cause the instance reset.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        :param pulumi.Input[int] instance_charge_type_prepaid_period: The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        :param pulumi.Input[str] instance_charge_type_prepaid_renew_flag: Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        :param pulumi.Input[int] instance_count: It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        :param pulumi.Input[str] instance_name: The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        :param pulumi.Input[str] instance_status: Current status of the instance.
        :param pulumi.Input[str] instance_type: The type of the instance.
        :param pulumi.Input[str] internet_charge_type: Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[int] internet_max_bandwidth_out: Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[bool] keep_image_login: Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] key_ids: The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[str] key_name: Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[int] memory: Instance memory capacity, unit in GB.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] orderly_security_groups: A list of orderly security group IDs to associate with.
        :param pulumi.Input[str] os_name: Instance os name.
        :param pulumi.Input[str] password: Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        :param pulumi.Input[str] placement_group_id: The ID of a placement group.
        :param pulumi.Input[str] private_ip: The private IP to be assigned to this instance, must be in the provided subnet and available.
        :param pulumi.Input[int] project_id: The project the instance belongs to, default to 0.
        :param pulumi.Input[str] public_ip: Public IP of the instance.
        :param pulumi.Input[bool] running_flag: Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_groups: It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        :param pulumi.Input[str] spot_instance_type: Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] spot_max_price: Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] stopped_mode: Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        :param pulumi.Input[str] subnet_id: The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        :param pulumi.Input[str] system_disk_id: System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        :param pulumi.Input[bool] system_disk_resize_online: Resize online.
        :param pulumi.Input[int] system_disk_size: Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        :param pulumi.Input[str] system_disk_type: System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        :param pulumi.Input[Mapping[str, Any]] tags: A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        :param pulumi.Input[str] user_data: The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        :param pulumi.Input[str] user_data_raw: The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        :param pulumi.Input[str] uuid: Globally unique ID of the instance.
        :param pulumi.Input[str] vpc_id: The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        if allocate_public_ip is not None:
            pulumi.set(__self__, "allocate_public_ip", allocate_public_ip)
        if availability_zone is not None:
            pulumi.set(__self__, "availability_zone", availability_zone)
        if bandwidth_package_id is not None:
            pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        if cam_role_name is not None:
            pulumi.set(__self__, "cam_role_name", cam_role_name)
        if cdh_host_id is not None:
            pulumi.set(__self__, "cdh_host_id", cdh_host_id)
        if cdh_instance_type is not None:
            pulumi.set(__self__, "cdh_instance_type", cdh_instance_type)
        if cpu is not None:
            pulumi.set(__self__, "cpu", cpu)
        if create_time is not None:
            pulumi.set(__self__, "create_time", create_time)
        if data_disks is not None:
            pulumi.set(__self__, "data_disks", data_disks)
        if dedicated_cluster_id is not None:
            pulumi.set(__self__, "dedicated_cluster_id", dedicated_cluster_id)
        if disable_api_termination is not None:
            pulumi.set(__self__, "disable_api_termination", disable_api_termination)
        if disable_automation_service is not None:
            pulumi.set(__self__, "disable_automation_service", disable_automation_service)
        if disable_monitor_service is not None:
            pulumi.set(__self__, "disable_monitor_service", disable_monitor_service)
        if disable_security_service is not None:
            pulumi.set(__self__, "disable_security_service", disable_security_service)
        if expired_time is not None:
            pulumi.set(__self__, "expired_time", expired_time)
        if force_delete is not None:
            pulumi.set(__self__, "force_delete", force_delete)
        if hostname is not None:
            pulumi.set(__self__, "hostname", hostname)
        if image_id is not None:
            pulumi.set(__self__, "image_id", image_id)
        if instance_charge_type is not None:
            pulumi.set(__self__, "instance_charge_type", instance_charge_type)
        if instance_charge_type_prepaid_period is not None:
            pulumi.set(__self__, "instance_charge_type_prepaid_period", instance_charge_type_prepaid_period)
        if instance_charge_type_prepaid_renew_flag is not None:
            pulumi.set(__self__, "instance_charge_type_prepaid_renew_flag", instance_charge_type_prepaid_renew_flag)
        if instance_count is not None:
            warnings.warn("""It has been deprecated from version 1.59.18. Use built-in `count` instead.""", DeprecationWarning)
            pulumi.log.warn("""instance_count is deprecated: It has been deprecated from version 1.59.18. Use built-in `count` instead.""")
        if instance_count is not None:
            pulumi.set(__self__, "instance_count", instance_count)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if instance_status is not None:
            pulumi.set(__self__, "instance_status", instance_status)
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if internet_charge_type is not None:
            pulumi.set(__self__, "internet_charge_type", internet_charge_type)
        if internet_max_bandwidth_out is not None:
            pulumi.set(__self__, "internet_max_bandwidth_out", internet_max_bandwidth_out)
        if keep_image_login is not None:
            pulumi.set(__self__, "keep_image_login", keep_image_login)
        if key_ids is not None:
            pulumi.set(__self__, "key_ids", key_ids)
        if key_name is not None:
            warnings.warn("""Please use `key_ids` instead.""", DeprecationWarning)
            pulumi.log.warn("""key_name is deprecated: Please use `key_ids` instead.""")
        if key_name is not None:
            pulumi.set(__self__, "key_name", key_name)
        if memory is not None:
            pulumi.set(__self__, "memory", memory)
        if orderly_security_groups is not None:
            pulumi.set(__self__, "orderly_security_groups", orderly_security_groups)
        if os_name is not None:
            pulumi.set(__self__, "os_name", os_name)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if placement_group_id is not None:
            pulumi.set(__self__, "placement_group_id", placement_group_id)
        if private_ip is not None:
            pulumi.set(__self__, "private_ip", private_ip)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if public_ip is not None:
            pulumi.set(__self__, "public_ip", public_ip)
        if running_flag is not None:
            pulumi.set(__self__, "running_flag", running_flag)
        if security_groups is not None:
            warnings.warn("""It will be deprecated. Use `orderly_security_groups` instead.""", DeprecationWarning)
            pulumi.log.warn("""security_groups is deprecated: It will be deprecated. Use `orderly_security_groups` instead.""")
        if security_groups is not None:
            pulumi.set(__self__, "security_groups", security_groups)
        if spot_instance_type is not None:
            pulumi.set(__self__, "spot_instance_type", spot_instance_type)
        if spot_max_price is not None:
            pulumi.set(__self__, "spot_max_price", spot_max_price)
        if stopped_mode is not None:
            pulumi.set(__self__, "stopped_mode", stopped_mode)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if system_disk_id is not None:
            pulumi.set(__self__, "system_disk_id", system_disk_id)
        if system_disk_resize_online is not None:
            pulumi.set(__self__, "system_disk_resize_online", system_disk_resize_online)
        if system_disk_size is not None:
            pulumi.set(__self__, "system_disk_size", system_disk_size)
        if system_disk_type is not None:
            pulumi.set(__self__, "system_disk_type", system_disk_type)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)
        if user_data_raw is not None:
            pulumi.set(__self__, "user_data_raw", user_data_raw)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="allocatePublicIp")
    def allocate_public_ip(self) -> Optional[pulumi.Input[bool]]:
        """
        Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        """
        return pulumi.get(self, "allocate_public_ip")

    @allocate_public_ip.setter
    def allocate_public_ip(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allocate_public_ip", value)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[str]]:
        """
        The available zone for the CVM instance.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "availability_zone", value)

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> Optional[pulumi.Input[str]]:
        """
        bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        """
        return pulumi.get(self, "bandwidth_package_id")

    @bandwidth_package_id.setter
    def bandwidth_package_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bandwidth_package_id", value)

    @property
    @pulumi.getter(name="camRoleName")
    def cam_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        CAM role name authorized to access.
        """
        return pulumi.get(self, "cam_role_name")

    @cam_role_name.setter
    def cam_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cam_role_name", value)

    @property
    @pulumi.getter(name="cdhHostId")
    def cdh_host_id(self) -> Optional[pulumi.Input[str]]:
        """
        Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        """
        return pulumi.get(self, "cdh_host_id")

    @cdh_host_id.setter
    def cdh_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cdh_host_id", value)

    @property
    @pulumi.getter(name="cdhInstanceType")
    def cdh_instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        """
        return pulumi.get(self, "cdh_instance_type")

    @cdh_instance_type.setter
    def cdh_instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cdh_instance_type", value)

    @property
    @pulumi.getter
    def cpu(self) -> Optional[pulumi.Input[int]]:
        """
        The number of CPU cores of the instance.
        """
        return pulumi.get(self, "cpu")

    @cpu.setter
    def cpu(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cpu", value)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[str]]:
        """
        Create time of the instance.
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_time", value)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]]]:
        """
        Settings for data disks.
        """
        return pulumi.get(self, "data_disks")

    @data_disks.setter
    def data_disks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceDataDiskArgs']]]]):
        pulumi.set(self, "data_disks", value)

    @property
    @pulumi.getter(name="dedicatedClusterId")
    def dedicated_cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        Exclusive cluster id.
        """
        return pulumi.get(self, "dedicated_cluster_id")

    @dedicated_cluster_id.setter
    def dedicated_cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dedicated_cluster_id", value)

    @property
    @pulumi.getter(name="disableApiTermination")
    def disable_api_termination(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        """
        return pulumi.get(self, "disable_api_termination")

    @disable_api_termination.setter
    def disable_api_termination(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_api_termination", value)

    @property
    @pulumi.getter(name="disableAutomationService")
    def disable_automation_service(self) -> Optional[pulumi.Input[bool]]:
        """
        Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_automation_service")

    @disable_automation_service.setter
    def disable_automation_service(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_automation_service", value)

    @property
    @pulumi.getter(name="disableMonitorService")
    def disable_monitor_service(self) -> Optional[pulumi.Input[bool]]:
        """
        Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_monitor_service")

    @disable_monitor_service.setter
    def disable_monitor_service(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_monitor_service", value)

    @property
    @pulumi.getter(name="disableSecurityService")
    def disable_security_service(self) -> Optional[pulumi.Input[bool]]:
        """
        Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_security_service")

    @disable_security_service.setter
    def disable_security_service(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_security_service", value)

    @property
    @pulumi.getter(name="expiredTime")
    def expired_time(self) -> Optional[pulumi.Input[str]]:
        """
        Expired time of the instance.
        """
        return pulumi.get(self, "expired_time")

    @expired_time.setter
    def expired_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "expired_time", value)

    @property
    @pulumi.getter(name="forceDelete")
    def force_delete(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        """
        return pulumi.get(self, "force_delete")

    @force_delete.setter
    def force_delete(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "force_delete", value)

    @property
    @pulumi.getter
    def hostname(self) -> Optional[pulumi.Input[str]]:
        """
        The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        """
        return pulumi.get(self, "hostname")

    @hostname.setter
    def hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostname", value)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[pulumi.Input[str]]:
        """
        The image to use for the instance. Changing `image_id` will cause the instance reset.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        """
        return pulumi.get(self, "instance_charge_type")

    @instance_charge_type.setter
    def instance_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_charge_type", value)

    @property
    @pulumi.getter(name="instanceChargeTypePrepaidPeriod")
    def instance_charge_type_prepaid_period(self) -> Optional[pulumi.Input[int]]:
        """
        The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        """
        return pulumi.get(self, "instance_charge_type_prepaid_period")

    @instance_charge_type_prepaid_period.setter
    def instance_charge_type_prepaid_period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_charge_type_prepaid_period", value)

    @property
    @pulumi.getter(name="instanceChargeTypePrepaidRenewFlag")
    def instance_charge_type_prepaid_renew_flag(self) -> Optional[pulumi.Input[str]]:
        """
        Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        """
        return pulumi.get(self, "instance_charge_type_prepaid_renew_flag")

    @instance_charge_type_prepaid_renew_flag.setter
    def instance_charge_type_prepaid_renew_flag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_charge_type_prepaid_renew_flag", value)

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> Optional[pulumi.Input[int]]:
        """
        It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        """
        warnings.warn("""It has been deprecated from version 1.59.18. Use built-in `count` instead.""", DeprecationWarning)
        pulumi.log.warn("""instance_count is deprecated: It has been deprecated from version 1.59.18. Use built-in `count` instead.""")

        return pulumi.get(self, "instance_count")

    @instance_count.setter
    def instance_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_count", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="instanceStatus")
    def instance_status(self) -> Optional[pulumi.Input[str]]:
        """
        Current status of the instance.
        """
        return pulumi.get(self, "instance_status")

    @instance_status.setter
    def instance_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_status", value)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the instance.
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_type", value)

    @property
    @pulumi.getter(name="internetChargeType")
    def internet_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        """
        return pulumi.get(self, "internet_charge_type")

    @internet_charge_type.setter
    def internet_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_charge_type", value)

    @property
    @pulumi.getter(name="internetMaxBandwidthOut")
    def internet_max_bandwidth_out(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        """
        return pulumi.get(self, "internet_max_bandwidth_out")

    @internet_max_bandwidth_out.setter
    def internet_max_bandwidth_out(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "internet_max_bandwidth_out", value)

    @property
    @pulumi.getter(name="keepImageLogin")
    def keep_image_login(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "keep_image_login")

    @keep_image_login.setter
    def keep_image_login(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "keep_image_login", value)

    @property
    @pulumi.getter(name="keyIds")
    def key_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "key_ids")

    @key_ids.setter
    def key_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "key_ids", value)

    @property
    @pulumi.getter(name="keyName")
    def key_name(self) -> Optional[pulumi.Input[str]]:
        """
        Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        """
        warnings.warn("""Please use `key_ids` instead.""", DeprecationWarning)
        pulumi.log.warn("""key_name is deprecated: Please use `key_ids` instead.""")

        return pulumi.get(self, "key_name")

    @key_name.setter
    def key_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key_name", value)

    @property
    @pulumi.getter
    def memory(self) -> Optional[pulumi.Input[int]]:
        """
        Instance memory capacity, unit in GB.
        """
        return pulumi.get(self, "memory")

    @memory.setter
    def memory(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "memory", value)

    @property
    @pulumi.getter(name="orderlySecurityGroups")
    def orderly_security_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of orderly security group IDs to associate with.
        """
        return pulumi.get(self, "orderly_security_groups")

    @orderly_security_groups.setter
    def orderly_security_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "orderly_security_groups", value)

    @property
    @pulumi.getter(name="osName")
    def os_name(self) -> Optional[pulumi.Input[str]]:
        """
        Instance os name.
        """
        return pulumi.get(self, "os_name")

    @os_name.setter
    def os_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "os_name", value)

    @property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[str]]:
        """
        Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter(name="placementGroupId")
    def placement_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a placement group.
        """
        return pulumi.get(self, "placement_group_id")

    @placement_group_id.setter
    def placement_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "placement_group_id", value)

    @property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> Optional[pulumi.Input[str]]:
        """
        The private IP to be assigned to this instance, must be in the provided subnet and available.
        """
        return pulumi.get(self, "private_ip")

    @private_ip.setter
    def private_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "private_ip", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[int]]:
        """
        The project the instance belongs to, default to 0.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Public IP of the instance.
        """
        return pulumi.get(self, "public_ip")

    @public_ip.setter
    def public_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_ip", value)

    @property
    @pulumi.getter(name="runningFlag")
    def running_flag(self) -> Optional[pulumi.Input[bool]]:
        """
        Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        """
        return pulumi.get(self, "running_flag")

    @running_flag.setter
    def running_flag(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "running_flag", value)

    @property
    @pulumi.getter(name="securityGroups")
    def security_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        """
        warnings.warn("""It will be deprecated. Use `orderly_security_groups` instead.""", DeprecationWarning)
        pulumi.log.warn("""security_groups is deprecated: It will be deprecated. Use `orderly_security_groups` instead.""")

        return pulumi.get(self, "security_groups")

    @security_groups.setter
    def security_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_groups", value)

    @property
    @pulumi.getter(name="spotInstanceType")
    def spot_instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        """
        return pulumi.get(self, "spot_instance_type")

    @spot_instance_type.setter
    def spot_instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "spot_instance_type", value)

    @property
    @pulumi.getter(name="spotMaxPrice")
    def spot_max_price(self) -> Optional[pulumi.Input[str]]:
        """
        Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        """
        return pulumi.get(self, "spot_max_price")

    @spot_max_price.setter
    def spot_max_price(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "spot_max_price", value)

    @property
    @pulumi.getter(name="stoppedMode")
    def stopped_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        """
        return pulumi.get(self, "stopped_mode")

    @stopped_mode.setter
    def stopped_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stopped_mode", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter(name="systemDiskId")
    def system_disk_id(self) -> Optional[pulumi.Input[str]]:
        """
        System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        """
        return pulumi.get(self, "system_disk_id")

    @system_disk_id.setter
    def system_disk_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "system_disk_id", value)

    @property
    @pulumi.getter(name="systemDiskResizeOnline")
    def system_disk_resize_online(self) -> Optional[pulumi.Input[bool]]:
        """
        Resize online.
        """
        return pulumi.get(self, "system_disk_resize_online")

    @system_disk_resize_online.setter
    def system_disk_resize_online(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "system_disk_resize_online", value)

    @property
    @pulumi.getter(name="systemDiskSize")
    def system_disk_size(self) -> Optional[pulumi.Input[int]]:
        """
        Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        """
        return pulumi.get(self, "system_disk_size")

    @system_disk_size.setter
    def system_disk_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "system_disk_size", value)

    @property
    @pulumi.getter(name="systemDiskType")
    def system_disk_type(self) -> Optional[pulumi.Input[str]]:
        """
        System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        """
        return pulumi.get(self, "system_disk_type")

    @system_disk_type.setter
    def system_disk_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "system_disk_type", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> Optional[pulumi.Input[str]]:
        """
        The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        """
        return pulumi.get(self, "user_data")

    @user_data.setter
    def user_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data", value)

    @property
    @pulumi.getter(name="userDataRaw")
    def user_data_raw(self) -> Optional[pulumi.Input[str]]:
        """
        The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        """
        return pulumi.get(self, "user_data_raw")

    @user_data_raw.setter
    def user_data_raw(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data_raw", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Globally unique ID of the instance.
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)


class Instance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allocate_public_ip: Optional[pulumi.Input[bool]] = None,
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[str]] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 cdh_host_id: Optional[pulumi.Input[str]] = None,
                 cdh_instance_type: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceDataDiskArgs']]]]] = None,
                 dedicated_cluster_id: Optional[pulumi.Input[str]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disable_automation_service: Optional[pulumi.Input[bool]] = None,
                 disable_monitor_service: Optional[pulumi.Input[bool]] = None,
                 disable_security_service: Optional[pulumi.Input[bool]] = None,
                 force_delete: Optional[pulumi.Input[bool]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_charge_type_prepaid_period: Optional[pulumi.Input[int]] = None,
                 instance_charge_type_prepaid_renew_flag: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_charge_type: Optional[pulumi.Input[str]] = None,
                 internet_max_bandwidth_out: Optional[pulumi.Input[int]] = None,
                 keep_image_login: Optional[pulumi.Input[bool]] = None,
                 key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 key_name: Optional[pulumi.Input[str]] = None,
                 orderly_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 placement_group_id: Optional[pulumi.Input[str]] = None,
                 private_ip: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 running_flag: Optional[pulumi.Input[bool]] = None,
                 security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 spot_instance_type: Optional[pulumi.Input[str]] = None,
                 spot_max_price: Optional[pulumi.Input[str]] = None,
                 stopped_mode: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 system_disk_id: Optional[pulumi.Input[str]] = None,
                 system_disk_resize_online: Optional[pulumi.Input[bool]] = None,
                 system_disk_size: Optional[pulumi.Input[int]] = None,
                 system_disk_type: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 user_data_raw: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a CVM instance resource.

        > **NOTE:** You can launch an CVM instance for a VPC network via specifying parameter `vpc_id`. One instance can only belong to one VPC.

        > **NOTE:** At present, 'PREPAID' instance cannot be deleted directly and must wait it to be outdated and released automatically.

        ## Example Usage

        ### Create a general POSTPAID_BY_HOUR CVM instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        config = pulumi.Config()
        availability_zone = config.get("availabilityZone")
        if availability_zone is None:
            availability_zone = "ap-guangzhou-4"
        images = tencentcloud.Images.get_instance(image_types=["PUBLIC_IMAGE"],
            image_name_regex="OpenCloudOS Server")
        types = tencentcloud.Instance.get_types(filters=[tencentcloud.instance.GetTypesFilterArgs(
                name="instance-family",
                values=[
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S5",
                ],
            )],
            cpu_core_count=2,
            exclude_sold_out=True)
        # create vpc
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        # create subnet
        subnet = tencentcloud.subnet.Instance("subnet",
            vpc_id=vpc.id,
            availability_zone=availability_zone,
            cidr_block="10.0.1.0/24")
        # create CVM instance
        example = tencentcloud.instance.Instance("example",
            instance_name="tf-example",
            availability_zone=availability_zone,
            image_id=images.images[0].image_id,
            instance_type=types.instance_types[0].instance_type,
            system_disk_type="CLOUD_PREMIUM",
            system_disk_size=50,
            hostname="user",
            project_id=0,
            vpc_id=vpc.id,
            subnet_id=subnet.id,
            data_disks=[tencentcloud.instance.InstanceDataDiskArgs(
                data_disk_type="CLOUD_PREMIUM",
                data_disk_size=50,
                encrypt=False,
            )],
            tags={
                "tagKey": "tagValue",
            })
        ```
        <!--End PulumiCodeChooser -->

        ### Create a dedicated cluster CVM instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        config = pulumi.Config()
        availability_zone = config.get("availabilityZone")
        if availability_zone is None:
            availability_zone = "ap-guangzhou-4"
        images = tencentcloud.Images.get_instance(image_types=["PUBLIC_IMAGE"],
            image_name_regex="OpenCloudOS Server")
        types = tencentcloud.Instance.get_types(filters=[tencentcloud.instance.GetTypesFilterArgs(
                name="instance-family",
                values=[
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S5",
                ],
            )],
            cpu_core_count=2,
            exclude_sold_out=True)
        # create vpc
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        # create subnet
        subnet = tencentcloud.subnet.Instance("subnet",
            vpc_id=vpc.id,
            availability_zone=availability_zone,
            cidr_block="10.0.1.0/24",
            cdc_id="cluster-262n63e8",
            is_multicast=False)
        # create CVM instance
        example = tencentcloud.instance.Instance("example",
            instance_name="tf-example",
            availability_zone=availability_zone,
            image_id=images.images[0].image_id,
            instance_type=types.instance_types[0].instance_type,
            dedicated_cluster_id="cluster-262n63e8",
            instance_charge_type="CDCPAID",
            system_disk_type="CLOUD_SSD",
            system_disk_size=50,
            hostname="user",
            project_id=0,
            vpc_id=vpc.id,
            subnet_id=subnet.id,
            data_disks=[tencentcloud.instance.InstanceDataDiskArgs(
                data_disk_type="CLOUD_SSD",
                data_disk_size=50,
                encrypt=False,
            )],
            tags={
                "tagKey": "tagValue",
            })
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        CVM instance can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Instance/instance:Instance example ins-2qol3a80
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] allocate_public_ip: Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        :param pulumi.Input[str] availability_zone: The available zone for the CVM instance.
        :param pulumi.Input[str] bandwidth_package_id: bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        :param pulumi.Input[str] cam_role_name: CAM role name authorized to access.
        :param pulumi.Input[str] cdh_host_id: Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[str] cdh_instance_type: Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceDataDiskArgs']]]] data_disks: Settings for data disks.
        :param pulumi.Input[str] dedicated_cluster_id: Exclusive cluster id.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        :param pulumi.Input[bool] disable_automation_service: Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_monitor_service: Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_security_service: Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] force_delete: Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        :param pulumi.Input[str] hostname: The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        :param pulumi.Input[str] image_id: The image to use for the instance. Changing `image_id` will cause the instance reset.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        :param pulumi.Input[int] instance_charge_type_prepaid_period: The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        :param pulumi.Input[str] instance_charge_type_prepaid_renew_flag: Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        :param pulumi.Input[int] instance_count: It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        :param pulumi.Input[str] instance_name: The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        :param pulumi.Input[str] instance_type: The type of the instance.
        :param pulumi.Input[str] internet_charge_type: Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[int] internet_max_bandwidth_out: Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[bool] keep_image_login: Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] key_ids: The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[str] key_name: Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] orderly_security_groups: A list of orderly security group IDs to associate with.
        :param pulumi.Input[str] password: Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        :param pulumi.Input[str] placement_group_id: The ID of a placement group.
        :param pulumi.Input[str] private_ip: The private IP to be assigned to this instance, must be in the provided subnet and available.
        :param pulumi.Input[int] project_id: The project the instance belongs to, default to 0.
        :param pulumi.Input[bool] running_flag: Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_groups: It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        :param pulumi.Input[str] spot_instance_type: Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] spot_max_price: Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] stopped_mode: Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        :param pulumi.Input[str] subnet_id: The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        :param pulumi.Input[str] system_disk_id: System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        :param pulumi.Input[bool] system_disk_resize_online: Resize online.
        :param pulumi.Input[int] system_disk_size: Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        :param pulumi.Input[str] system_disk_type: System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        :param pulumi.Input[Mapping[str, Any]] tags: A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        :param pulumi.Input[str] user_data: The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        :param pulumi.Input[str] user_data_raw: The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        :param pulumi.Input[str] vpc_id: The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a CVM instance resource.

        > **NOTE:** You can launch an CVM instance for a VPC network via specifying parameter `vpc_id`. One instance can only belong to one VPC.

        > **NOTE:** At present, 'PREPAID' instance cannot be deleted directly and must wait it to be outdated and released automatically.

        ## Example Usage

        ### Create a general POSTPAID_BY_HOUR CVM instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        config = pulumi.Config()
        availability_zone = config.get("availabilityZone")
        if availability_zone is None:
            availability_zone = "ap-guangzhou-4"
        images = tencentcloud.Images.get_instance(image_types=["PUBLIC_IMAGE"],
            image_name_regex="OpenCloudOS Server")
        types = tencentcloud.Instance.get_types(filters=[tencentcloud.instance.GetTypesFilterArgs(
                name="instance-family",
                values=[
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S5",
                ],
            )],
            cpu_core_count=2,
            exclude_sold_out=True)
        # create vpc
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        # create subnet
        subnet = tencentcloud.subnet.Instance("subnet",
            vpc_id=vpc.id,
            availability_zone=availability_zone,
            cidr_block="10.0.1.0/24")
        # create CVM instance
        example = tencentcloud.instance.Instance("example",
            instance_name="tf-example",
            availability_zone=availability_zone,
            image_id=images.images[0].image_id,
            instance_type=types.instance_types[0].instance_type,
            system_disk_type="CLOUD_PREMIUM",
            system_disk_size=50,
            hostname="user",
            project_id=0,
            vpc_id=vpc.id,
            subnet_id=subnet.id,
            data_disks=[tencentcloud.instance.InstanceDataDiskArgs(
                data_disk_type="CLOUD_PREMIUM",
                data_disk_size=50,
                encrypt=False,
            )],
            tags={
                "tagKey": "tagValue",
            })
        ```
        <!--End PulumiCodeChooser -->

        ### Create a dedicated cluster CVM instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        config = pulumi.Config()
        availability_zone = config.get("availabilityZone")
        if availability_zone is None:
            availability_zone = "ap-guangzhou-4"
        images = tencentcloud.Images.get_instance(image_types=["PUBLIC_IMAGE"],
            image_name_regex="OpenCloudOS Server")
        types = tencentcloud.Instance.get_types(filters=[tencentcloud.instance.GetTypesFilterArgs(
                name="instance-family",
                values=[
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S5",
                ],
            )],
            cpu_core_count=2,
            exclude_sold_out=True)
        # create vpc
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        # create subnet
        subnet = tencentcloud.subnet.Instance("subnet",
            vpc_id=vpc.id,
            availability_zone=availability_zone,
            cidr_block="10.0.1.0/24",
            cdc_id="cluster-262n63e8",
            is_multicast=False)
        # create CVM instance
        example = tencentcloud.instance.Instance("example",
            instance_name="tf-example",
            availability_zone=availability_zone,
            image_id=images.images[0].image_id,
            instance_type=types.instance_types[0].instance_type,
            dedicated_cluster_id="cluster-262n63e8",
            instance_charge_type="CDCPAID",
            system_disk_type="CLOUD_SSD",
            system_disk_size=50,
            hostname="user",
            project_id=0,
            vpc_id=vpc.id,
            subnet_id=subnet.id,
            data_disks=[tencentcloud.instance.InstanceDataDiskArgs(
                data_disk_type="CLOUD_SSD",
                data_disk_size=50,
                encrypt=False,
            )],
            tags={
                "tagKey": "tagValue",
            })
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        CVM instance can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Instance/instance:Instance example ins-2qol3a80
        ```

        :param str resource_name: The name of the resource.
        :param InstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allocate_public_ip: Optional[pulumi.Input[bool]] = None,
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[str]] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 cdh_host_id: Optional[pulumi.Input[str]] = None,
                 cdh_instance_type: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceDataDiskArgs']]]]] = None,
                 dedicated_cluster_id: Optional[pulumi.Input[str]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disable_automation_service: Optional[pulumi.Input[bool]] = None,
                 disable_monitor_service: Optional[pulumi.Input[bool]] = None,
                 disable_security_service: Optional[pulumi.Input[bool]] = None,
                 force_delete: Optional[pulumi.Input[bool]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_charge_type_prepaid_period: Optional[pulumi.Input[int]] = None,
                 instance_charge_type_prepaid_renew_flag: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_charge_type: Optional[pulumi.Input[str]] = None,
                 internet_max_bandwidth_out: Optional[pulumi.Input[int]] = None,
                 keep_image_login: Optional[pulumi.Input[bool]] = None,
                 key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 key_name: Optional[pulumi.Input[str]] = None,
                 orderly_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 placement_group_id: Optional[pulumi.Input[str]] = None,
                 private_ip: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 running_flag: Optional[pulumi.Input[bool]] = None,
                 security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 spot_instance_type: Optional[pulumi.Input[str]] = None,
                 spot_max_price: Optional[pulumi.Input[str]] = None,
                 stopped_mode: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 system_disk_id: Optional[pulumi.Input[str]] = None,
                 system_disk_resize_online: Optional[pulumi.Input[bool]] = None,
                 system_disk_size: Optional[pulumi.Input[int]] = None,
                 system_disk_type: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 user_data_raw: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceArgs.__new__(InstanceArgs)

            __props__.__dict__["allocate_public_ip"] = allocate_public_ip
            if availability_zone is None and not opts.urn:
                raise TypeError("Missing required property 'availability_zone'")
            __props__.__dict__["availability_zone"] = availability_zone
            __props__.__dict__["bandwidth_package_id"] = bandwidth_package_id
            __props__.__dict__["cam_role_name"] = cam_role_name
            __props__.__dict__["cdh_host_id"] = cdh_host_id
            __props__.__dict__["cdh_instance_type"] = cdh_instance_type
            __props__.__dict__["data_disks"] = data_disks
            __props__.__dict__["dedicated_cluster_id"] = dedicated_cluster_id
            __props__.__dict__["disable_api_termination"] = disable_api_termination
            __props__.__dict__["disable_automation_service"] = disable_automation_service
            __props__.__dict__["disable_monitor_service"] = disable_monitor_service
            __props__.__dict__["disable_security_service"] = disable_security_service
            __props__.__dict__["force_delete"] = force_delete
            __props__.__dict__["hostname"] = hostname
            if image_id is None and not opts.urn:
                raise TypeError("Missing required property 'image_id'")
            __props__.__dict__["image_id"] = image_id
            __props__.__dict__["instance_charge_type"] = instance_charge_type
            __props__.__dict__["instance_charge_type_prepaid_period"] = instance_charge_type_prepaid_period
            __props__.__dict__["instance_charge_type_prepaid_renew_flag"] = instance_charge_type_prepaid_renew_flag
            __props__.__dict__["instance_count"] = instance_count
            __props__.__dict__["instance_name"] = instance_name
            __props__.__dict__["instance_type"] = instance_type
            __props__.__dict__["internet_charge_type"] = internet_charge_type
            __props__.__dict__["internet_max_bandwidth_out"] = internet_max_bandwidth_out
            __props__.__dict__["keep_image_login"] = keep_image_login
            __props__.__dict__["key_ids"] = key_ids
            __props__.__dict__["key_name"] = key_name
            __props__.__dict__["orderly_security_groups"] = orderly_security_groups
            __props__.__dict__["password"] = None if password is None else pulumi.Output.secret(password)
            __props__.__dict__["placement_group_id"] = placement_group_id
            __props__.__dict__["private_ip"] = private_ip
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["running_flag"] = running_flag
            __props__.__dict__["security_groups"] = security_groups
            __props__.__dict__["spot_instance_type"] = spot_instance_type
            __props__.__dict__["spot_max_price"] = spot_max_price
            __props__.__dict__["stopped_mode"] = stopped_mode
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["system_disk_id"] = system_disk_id
            __props__.__dict__["system_disk_resize_online"] = system_disk_resize_online
            __props__.__dict__["system_disk_size"] = system_disk_size
            __props__.__dict__["system_disk_type"] = system_disk_type
            __props__.__dict__["tags"] = tags
            __props__.__dict__["user_data"] = user_data
            __props__.__dict__["user_data_raw"] = user_data_raw
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["cpu"] = None
            __props__.__dict__["create_time"] = None
            __props__.__dict__["expired_time"] = None
            __props__.__dict__["instance_status"] = None
            __props__.__dict__["memory"] = None
            __props__.__dict__["os_name"] = None
            __props__.__dict__["public_ip"] = None
            __props__.__dict__["uuid"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["password"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(Instance, __self__).__init__(
            'tencentcloud:Instance/instance:Instance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allocate_public_ip: Optional[pulumi.Input[bool]] = None,
            availability_zone: Optional[pulumi.Input[str]] = None,
            bandwidth_package_id: Optional[pulumi.Input[str]] = None,
            cam_role_name: Optional[pulumi.Input[str]] = None,
            cdh_host_id: Optional[pulumi.Input[str]] = None,
            cdh_instance_type: Optional[pulumi.Input[str]] = None,
            cpu: Optional[pulumi.Input[int]] = None,
            create_time: Optional[pulumi.Input[str]] = None,
            data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceDataDiskArgs']]]]] = None,
            dedicated_cluster_id: Optional[pulumi.Input[str]] = None,
            disable_api_termination: Optional[pulumi.Input[bool]] = None,
            disable_automation_service: Optional[pulumi.Input[bool]] = None,
            disable_monitor_service: Optional[pulumi.Input[bool]] = None,
            disable_security_service: Optional[pulumi.Input[bool]] = None,
            expired_time: Optional[pulumi.Input[str]] = None,
            force_delete: Optional[pulumi.Input[bool]] = None,
            hostname: Optional[pulumi.Input[str]] = None,
            image_id: Optional[pulumi.Input[str]] = None,
            instance_charge_type: Optional[pulumi.Input[str]] = None,
            instance_charge_type_prepaid_period: Optional[pulumi.Input[int]] = None,
            instance_charge_type_prepaid_renew_flag: Optional[pulumi.Input[str]] = None,
            instance_count: Optional[pulumi.Input[int]] = None,
            instance_name: Optional[pulumi.Input[str]] = None,
            instance_status: Optional[pulumi.Input[str]] = None,
            instance_type: Optional[pulumi.Input[str]] = None,
            internet_charge_type: Optional[pulumi.Input[str]] = None,
            internet_max_bandwidth_out: Optional[pulumi.Input[int]] = None,
            keep_image_login: Optional[pulumi.Input[bool]] = None,
            key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            key_name: Optional[pulumi.Input[str]] = None,
            memory: Optional[pulumi.Input[int]] = None,
            orderly_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            os_name: Optional[pulumi.Input[str]] = None,
            password: Optional[pulumi.Input[str]] = None,
            placement_group_id: Optional[pulumi.Input[str]] = None,
            private_ip: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[int]] = None,
            public_ip: Optional[pulumi.Input[str]] = None,
            running_flag: Optional[pulumi.Input[bool]] = None,
            security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            spot_instance_type: Optional[pulumi.Input[str]] = None,
            spot_max_price: Optional[pulumi.Input[str]] = None,
            stopped_mode: Optional[pulumi.Input[str]] = None,
            subnet_id: Optional[pulumi.Input[str]] = None,
            system_disk_id: Optional[pulumi.Input[str]] = None,
            system_disk_resize_online: Optional[pulumi.Input[bool]] = None,
            system_disk_size: Optional[pulumi.Input[int]] = None,
            system_disk_type: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            user_data: Optional[pulumi.Input[str]] = None,
            user_data_raw: Optional[pulumi.Input[str]] = None,
            uuid: Optional[pulumi.Input[str]] = None,
            vpc_id: Optional[pulumi.Input[str]] = None) -> 'Instance':
        """
        Get an existing Instance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] allocate_public_ip: Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        :param pulumi.Input[str] availability_zone: The available zone for the CVM instance.
        :param pulumi.Input[str] bandwidth_package_id: bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        :param pulumi.Input[str] cam_role_name: CAM role name authorized to access.
        :param pulumi.Input[str] cdh_host_id: Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[str] cdh_instance_type: Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        :param pulumi.Input[int] cpu: The number of CPU cores of the instance.
        :param pulumi.Input[str] create_time: Create time of the instance.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceDataDiskArgs']]]] data_disks: Settings for data disks.
        :param pulumi.Input[str] dedicated_cluster_id: Exclusive cluster id.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        :param pulumi.Input[bool] disable_automation_service: Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_monitor_service: Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[bool] disable_security_service: Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        :param pulumi.Input[str] expired_time: Expired time of the instance.
        :param pulumi.Input[bool] force_delete: Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        :param pulumi.Input[str] hostname: The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        :param pulumi.Input[str] image_id: The image to use for the instance. Changing `image_id` will cause the instance reset.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        :param pulumi.Input[int] instance_charge_type_prepaid_period: The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        :param pulumi.Input[str] instance_charge_type_prepaid_renew_flag: Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        :param pulumi.Input[int] instance_count: It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        :param pulumi.Input[str] instance_name: The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        :param pulumi.Input[str] instance_status: Current status of the instance.
        :param pulumi.Input[str] instance_type: The type of the instance.
        :param pulumi.Input[str] internet_charge_type: Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[int] internet_max_bandwidth_out: Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        :param pulumi.Input[bool] keep_image_login: Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] key_ids: The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[str] key_name: Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        :param pulumi.Input[int] memory: Instance memory capacity, unit in GB.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] orderly_security_groups: A list of orderly security group IDs to associate with.
        :param pulumi.Input[str] os_name: Instance os name.
        :param pulumi.Input[str] password: Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        :param pulumi.Input[str] placement_group_id: The ID of a placement group.
        :param pulumi.Input[str] private_ip: The private IP to be assigned to this instance, must be in the provided subnet and available.
        :param pulumi.Input[int] project_id: The project the instance belongs to, default to 0.
        :param pulumi.Input[str] public_ip: Public IP of the instance.
        :param pulumi.Input[bool] running_flag: Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_groups: It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        :param pulumi.Input[str] spot_instance_type: Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] spot_max_price: Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        :param pulumi.Input[str] stopped_mode: Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        :param pulumi.Input[str] subnet_id: The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        :param pulumi.Input[str] system_disk_id: System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        :param pulumi.Input[bool] system_disk_resize_online: Resize online.
        :param pulumi.Input[int] system_disk_size: Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        :param pulumi.Input[str] system_disk_type: System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        :param pulumi.Input[Mapping[str, Any]] tags: A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        :param pulumi.Input[str] user_data: The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        :param pulumi.Input[str] user_data_raw: The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        :param pulumi.Input[str] uuid: Globally unique ID of the instance.
        :param pulumi.Input[str] vpc_id: The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceState.__new__(_InstanceState)

        __props__.__dict__["allocate_public_ip"] = allocate_public_ip
        __props__.__dict__["availability_zone"] = availability_zone
        __props__.__dict__["bandwidth_package_id"] = bandwidth_package_id
        __props__.__dict__["cam_role_name"] = cam_role_name
        __props__.__dict__["cdh_host_id"] = cdh_host_id
        __props__.__dict__["cdh_instance_type"] = cdh_instance_type
        __props__.__dict__["cpu"] = cpu
        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["data_disks"] = data_disks
        __props__.__dict__["dedicated_cluster_id"] = dedicated_cluster_id
        __props__.__dict__["disable_api_termination"] = disable_api_termination
        __props__.__dict__["disable_automation_service"] = disable_automation_service
        __props__.__dict__["disable_monitor_service"] = disable_monitor_service
        __props__.__dict__["disable_security_service"] = disable_security_service
        __props__.__dict__["expired_time"] = expired_time
        __props__.__dict__["force_delete"] = force_delete
        __props__.__dict__["hostname"] = hostname
        __props__.__dict__["image_id"] = image_id
        __props__.__dict__["instance_charge_type"] = instance_charge_type
        __props__.__dict__["instance_charge_type_prepaid_period"] = instance_charge_type_prepaid_period
        __props__.__dict__["instance_charge_type_prepaid_renew_flag"] = instance_charge_type_prepaid_renew_flag
        __props__.__dict__["instance_count"] = instance_count
        __props__.__dict__["instance_name"] = instance_name
        __props__.__dict__["instance_status"] = instance_status
        __props__.__dict__["instance_type"] = instance_type
        __props__.__dict__["internet_charge_type"] = internet_charge_type
        __props__.__dict__["internet_max_bandwidth_out"] = internet_max_bandwidth_out
        __props__.__dict__["keep_image_login"] = keep_image_login
        __props__.__dict__["key_ids"] = key_ids
        __props__.__dict__["key_name"] = key_name
        __props__.__dict__["memory"] = memory
        __props__.__dict__["orderly_security_groups"] = orderly_security_groups
        __props__.__dict__["os_name"] = os_name
        __props__.__dict__["password"] = password
        __props__.__dict__["placement_group_id"] = placement_group_id
        __props__.__dict__["private_ip"] = private_ip
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["public_ip"] = public_ip
        __props__.__dict__["running_flag"] = running_flag
        __props__.__dict__["security_groups"] = security_groups
        __props__.__dict__["spot_instance_type"] = spot_instance_type
        __props__.__dict__["spot_max_price"] = spot_max_price
        __props__.__dict__["stopped_mode"] = stopped_mode
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["system_disk_id"] = system_disk_id
        __props__.__dict__["system_disk_resize_online"] = system_disk_resize_online
        __props__.__dict__["system_disk_size"] = system_disk_size
        __props__.__dict__["system_disk_type"] = system_disk_type
        __props__.__dict__["tags"] = tags
        __props__.__dict__["user_data"] = user_data
        __props__.__dict__["user_data_raw"] = user_data_raw
        __props__.__dict__["uuid"] = uuid
        __props__.__dict__["vpc_id"] = vpc_id
        return Instance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="allocatePublicIp")
    def allocate_public_ip(self) -> pulumi.Output[Optional[bool]]:
        """
        Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
        """
        return pulumi.get(self, "allocate_public_ip")

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Output[str]:
        """
        The available zone for the CVM instance.
        """
        return pulumi.get(self, "availability_zone")

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> pulumi.Output[Optional[str]]:
        """
        bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
        """
        return pulumi.get(self, "bandwidth_package_id")

    @property
    @pulumi.getter(name="camRoleName")
    def cam_role_name(self) -> pulumi.Output[Optional[str]]:
        """
        CAM role name authorized to access.
        """
        return pulumi.get(self, "cam_role_name")

    @property
    @pulumi.getter(name="cdhHostId")
    def cdh_host_id(self) -> pulumi.Output[Optional[str]]:
        """
        Id of cdh instance. Note: it only works when instance_charge_type is set to `CDHPAID`.
        """
        return pulumi.get(self, "cdh_host_id")

    @property
    @pulumi.getter(name="cdhInstanceType")
    def cdh_instance_type(self) -> pulumi.Output[Optional[str]]:
        """
        Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instance_charge_type is set to `CDHPAID`.
        """
        return pulumi.get(self, "cdh_instance_type")

    @property
    @pulumi.getter
    def cpu(self) -> pulumi.Output[int]:
        """
        The number of CPU cores of the instance.
        """
        return pulumi.get(self, "cpu")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        Create time of the instance.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> pulumi.Output[Sequence['outputs.InstanceDataDisk']]:
        """
        Settings for data disks.
        """
        return pulumi.get(self, "data_disks")

    @property
    @pulumi.getter(name="dedicatedClusterId")
    def dedicated_cluster_id(self) -> pulumi.Output[Optional[str]]:
        """
        Exclusive cluster id.
        """
        return pulumi.get(self, "dedicated_cluster_id")

    @property
    @pulumi.getter(name="disableApiTermination")
    def disable_api_termination(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
        """
        return pulumi.get(self, "disable_api_termination")

    @property
    @pulumi.getter(name="disableAutomationService")
    def disable_automation_service(self) -> pulumi.Output[Optional[bool]]:
        """
        Disable enhance service for automation, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_automation_service")

    @property
    @pulumi.getter(name="disableMonitorService")
    def disable_monitor_service(self) -> pulumi.Output[Optional[bool]]:
        """
        Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_monitor_service")

    @property
    @pulumi.getter(name="disableSecurityService")
    def disable_security_service(self) -> pulumi.Output[Optional[bool]]:
        """
        Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "disable_security_service")

    @property
    @pulumi.getter(name="expiredTime")
    def expired_time(self) -> pulumi.Output[str]:
        """
        Expired time of the instance.
        """
        return pulumi.get(self, "expired_time")

    @property
    @pulumi.getter(name="forceDelete")
    def force_delete(self) -> pulumi.Output[Optional[bool]]:
        """
        Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
        """
        return pulumi.get(self, "force_delete")

    @property
    @pulumi.getter
    def hostname(self) -> pulumi.Output[Optional[str]]:
        """
        The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
        """
        return pulumi.get(self, "hostname")

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Output[str]:
        """
        The image to use for the instance. Changing `image_id` will cause the instance reset.
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> pulumi.Output[Optional[str]]:
        """
        The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time. `CDHPAID` instance must set `cdh_instance_type` and `cdh_host_id`.
        """
        return pulumi.get(self, "instance_charge_type")

    @property
    @pulumi.getter(name="instanceChargeTypePrepaidPeriod")
    def instance_charge_type_prepaid_period(self) -> pulumi.Output[Optional[int]]:
        """
        The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
        """
        return pulumi.get(self, "instance_charge_type_prepaid_period")

    @property
    @pulumi.getter(name="instanceChargeTypePrepaidRenewFlag")
    def instance_charge_type_prepaid_renew_flag(self) -> pulumi.Output[str]:
        """
        Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
        """
        return pulumi.get(self, "instance_charge_type_prepaid_renew_flag")

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> pulumi.Output[Optional[int]]:
        """
        It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
        """
        warnings.warn("""It has been deprecated from version 1.59.18. Use built-in `count` instead.""", DeprecationWarning)
        pulumi.log.warn("""instance_count is deprecated: It has been deprecated from version 1.59.18. Use built-in `count` instead.""")

        return pulumi.get(self, "instance_count")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> pulumi.Output[Optional[str]]:
        """
        The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="instanceStatus")
    def instance_status(self) -> pulumi.Output[str]:
        """
        Current status of the instance.
        """
        return pulumi.get(self, "instance_status")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> pulumi.Output[str]:
        """
        The type of the instance.
        """
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="internetChargeType")
    def internet_charge_type(self) -> pulumi.Output[str]:
        """
        Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
        """
        return pulumi.get(self, "internet_charge_type")

    @property
    @pulumi.getter(name="internetMaxBandwidthOut")
    def internet_max_bandwidth_out(self) -> pulumi.Output[int]:
        """
        Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
        """
        return pulumi.get(self, "internet_max_bandwidth_out")

    @property
    @pulumi.getter(name="keepImageLogin")
    def keep_image_login(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "keep_image_login")

    @property
    @pulumi.getter(name="keyIds")
    def key_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "key_ids")

    @property
    @pulumi.getter(name="keyName")
    def key_name(self) -> pulumi.Output[str]:
        """
        Please use `key_ids` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
        """
        warnings.warn("""Please use `key_ids` instead.""", DeprecationWarning)
        pulumi.log.warn("""key_name is deprecated: Please use `key_ids` instead.""")

        return pulumi.get(self, "key_name")

    @property
    @pulumi.getter
    def memory(self) -> pulumi.Output[int]:
        """
        Instance memory capacity, unit in GB.
        """
        return pulumi.get(self, "memory")

    @property
    @pulumi.getter(name="orderlySecurityGroups")
    def orderly_security_groups(self) -> pulumi.Output[Sequence[str]]:
        """
        A list of orderly security group IDs to associate with.
        """
        return pulumi.get(self, "orderly_security_groups")

    @property
    @pulumi.getter(name="osName")
    def os_name(self) -> pulumi.Output[str]:
        """
        Instance os name.
        """
        return pulumi.get(self, "os_name")

    @property
    @pulumi.getter
    def password(self) -> pulumi.Output[Optional[str]]:
        """
        Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
        """
        return pulumi.get(self, "password")

    @property
    @pulumi.getter(name="placementGroupId")
    def placement_group_id(self) -> pulumi.Output[Optional[str]]:
        """
        The ID of a placement group.
        """
        return pulumi.get(self, "placement_group_id")

    @property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> pulumi.Output[str]:
        """
        The private IP to be assigned to this instance, must be in the provided subnet and available.
        """
        return pulumi.get(self, "private_ip")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[Optional[int]]:
        """
        The project the instance belongs to, default to 0.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> pulumi.Output[str]:
        """
        Public IP of the instance.
        """
        return pulumi.get(self, "public_ip")

    @property
    @pulumi.getter(name="runningFlag")
    def running_flag(self) -> pulumi.Output[Optional[bool]]:
        """
        Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
        """
        return pulumi.get(self, "running_flag")

    @property
    @pulumi.getter(name="securityGroups")
    def security_groups(self) -> pulumi.Output[Sequence[str]]:
        """
        It will be deprecated. Use `orderly_security_groups` instead. A list of security group IDs to associate with.
        """
        warnings.warn("""It will be deprecated. Use `orderly_security_groups` instead.""", DeprecationWarning)
        pulumi.log.warn("""security_groups is deprecated: It will be deprecated. Use `orderly_security_groups` instead.""")

        return pulumi.get(self, "security_groups")

    @property
    @pulumi.getter(name="spotInstanceType")
    def spot_instance_type(self) -> pulumi.Output[Optional[str]]:
        """
        Type of spot instance, only support `ONE-TIME` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
        """
        return pulumi.get(self, "spot_instance_type")

    @property
    @pulumi.getter(name="spotMaxPrice")
    def spot_max_price(self) -> pulumi.Output[Optional[str]]:
        """
        Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
        """
        return pulumi.get(self, "spot_max_price")

    @property
    @pulumi.getter(name="stoppedMode")
    def stopped_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
        """
        return pulumi.get(self, "stopped_mode")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[str]:
        """
        The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="systemDiskId")
    def system_disk_id(self) -> pulumi.Output[str]:
        """
        System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
        """
        return pulumi.get(self, "system_disk_id")

    @property
    @pulumi.getter(name="systemDiskResizeOnline")
    def system_disk_resize_online(self) -> pulumi.Output[Optional[bool]]:
        """
        Resize online.
        """
        return pulumi.get(self, "system_disk_resize_online")

    @property
    @pulumi.getter(name="systemDiskSize")
    def system_disk_size(self) -> pulumi.Output[Optional[int]]:
        """
        Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
        """
        return pulumi.get(self, "system_disk_size")

    @property
    @pulumi.getter(name="systemDiskType")
    def system_disk_type(self) -> pulumi.Output[Optional[str]]:
        """
        System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
        """
        return pulumi.get(self, "system_disk_type")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        """
        A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> pulumi.Output[Optional[str]]:
        """
        The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
        """
        return pulumi.get(self, "user_data")

    @property
    @pulumi.getter(name="userDataRaw")
    def user_data_raw(self) -> pulumi.Output[Optional[str]]:
        """
        The user data to be injected into this instance, in plain text. Conflicts with `user_data`. Up to 16 KB after base64 encoded.
        """
        return pulumi.get(self, "user_data_raw")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        Globally unique ID of the instance.
        """
        return pulumi.get(self, "uuid")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[str]:
        """
        The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
        """
        return pulumi.get(self, "vpc_id")

