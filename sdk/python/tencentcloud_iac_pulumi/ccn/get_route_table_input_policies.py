# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRouteTableInputPoliciesResult',
    'AwaitableGetRouteTableInputPoliciesResult',
    'get_route_table_input_policies',
    'get_route_table_input_policies_output',
]

@pulumi.output_type
class GetRouteTableInputPoliciesResult:
    """
    A collection of values returned by getRouteTableInputPolicies.
    """
    def __init__(__self__, ccn_id=None, id=None, policy_sets=None, policy_version=None, result_output_file=None, route_table_id=None):
        if ccn_id and not isinstance(ccn_id, str):
            raise TypeError("Expected argument 'ccn_id' to be a str")
        pulumi.set(__self__, "ccn_id", ccn_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if policy_sets and not isinstance(policy_sets, list):
            raise TypeError("Expected argument 'policy_sets' to be a list")
        pulumi.set(__self__, "policy_sets", policy_sets)
        if policy_version and not isinstance(policy_version, int):
            raise TypeError("Expected argument 'policy_version' to be a int")
        pulumi.set(__self__, "policy_version", policy_version)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if route_table_id and not isinstance(route_table_id, str):
            raise TypeError("Expected argument 'route_table_id' to be a str")
        pulumi.set(__self__, "route_table_id", route_table_id)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> str:
        return pulumi.get(self, "ccn_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="policySets")
    def policy_sets(self) -> Sequence['outputs.GetRouteTableInputPoliciesPolicySetResult']:
        """
        Policy set.
        """
        return pulumi.get(self, "policy_sets")

    @property
    @pulumi.getter(name="policyVersion")
    def policy_version(self) -> Optional[int]:
        return pulumi.get(self, "policy_version")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="routeTableId")
    def route_table_id(self) -> str:
        return pulumi.get(self, "route_table_id")


class AwaitableGetRouteTableInputPoliciesResult(GetRouteTableInputPoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRouteTableInputPoliciesResult(
            ccn_id=self.ccn_id,
            id=self.id,
            policy_sets=self.policy_sets,
            policy_version=self.policy_version,
            result_output_file=self.result_output_file,
            route_table_id=self.route_table_id)


def get_route_table_input_policies(ccn_id: Optional[str] = None,
                                   policy_version: Optional[int] = None,
                                   result_output_file: Optional[str] = None,
                                   route_table_id: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRouteTableInputPoliciesResult:
    """
    Use this data source to query CCN route table input policies.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ccn.get_route_table_input_policies(ccn_id="ccn-06jek8tf",
        route_table_id="ccnrtb-4jv5ltb9")
    ```
    <!--End PulumiCodeChooser -->


    :param str ccn_id: CCN Instance ID.
    :param int policy_version: Policy version.
    :param str result_output_file: Used to save results.
    :param str route_table_id: CCN Route table ID.
    """
    __args__ = dict()
    __args__['ccnId'] = ccn_id
    __args__['policyVersion'] = policy_version
    __args__['resultOutputFile'] = result_output_file
    __args__['routeTableId'] = route_table_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ccn/getRouteTableInputPolicies:getRouteTableInputPolicies', __args__, opts=opts, typ=GetRouteTableInputPoliciesResult).value

    return AwaitableGetRouteTableInputPoliciesResult(
        ccn_id=pulumi.get(__ret__, 'ccn_id'),
        id=pulumi.get(__ret__, 'id'),
        policy_sets=pulumi.get(__ret__, 'policy_sets'),
        policy_version=pulumi.get(__ret__, 'policy_version'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        route_table_id=pulumi.get(__ret__, 'route_table_id'))


@_utilities.lift_output_func(get_route_table_input_policies)
def get_route_table_input_policies_output(ccn_id: Optional[pulumi.Input[str]] = None,
                                          policy_version: Optional[pulumi.Input[Optional[int]]] = None,
                                          result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                          route_table_id: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRouteTableInputPoliciesResult]:
    """
    Use this data source to query CCN route table input policies.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ccn.get_route_table_input_policies(ccn_id="ccn-06jek8tf",
        route_table_id="ccnrtb-4jv5ltb9")
    ```
    <!--End PulumiCodeChooser -->


    :param str ccn_id: CCN Instance ID.
    :param int policy_version: Policy version.
    :param str result_output_file: Used to save results.
    :param str route_table_id: CCN Route table ID.
    """
    ...
