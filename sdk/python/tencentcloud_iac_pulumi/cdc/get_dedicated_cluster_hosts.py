# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetDedicatedClusterHostsResult',
    'AwaitableGetDedicatedClusterHostsResult',
    'get_dedicated_cluster_hosts',
    'get_dedicated_cluster_hosts_output',
]

@pulumi.output_type
class GetDedicatedClusterHostsResult:
    """
    A collection of values returned by getDedicatedClusterHosts.
    """
    def __init__(__self__, dedicated_cluster_id=None, host_info_sets=None, id=None, result_output_file=None):
        if dedicated_cluster_id and not isinstance(dedicated_cluster_id, str):
            raise TypeError("Expected argument 'dedicated_cluster_id' to be a str")
        pulumi.set(__self__, "dedicated_cluster_id", dedicated_cluster_id)
        if host_info_sets and not isinstance(host_info_sets, list):
            raise TypeError("Expected argument 'host_info_sets' to be a list")
        pulumi.set(__self__, "host_info_sets", host_info_sets)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="dedicatedClusterId")
    def dedicated_cluster_id(self) -> str:
        return pulumi.get(self, "dedicated_cluster_id")

    @property
    @pulumi.getter(name="hostInfoSets")
    def host_info_sets(self) -> Sequence['outputs.GetDedicatedClusterHostsHostInfoSetResult']:
        """
        Dedicated Cluster Host Info.
        """
        return pulumi.get(self, "host_info_sets")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetDedicatedClusterHostsResult(GetDedicatedClusterHostsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDedicatedClusterHostsResult(
            dedicated_cluster_id=self.dedicated_cluster_id,
            host_info_sets=self.host_info_sets,
            id=self.id,
            result_output_file=self.result_output_file)


def get_dedicated_cluster_hosts(dedicated_cluster_id: Optional[str] = None,
                                result_output_file: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDedicatedClusterHostsResult:
    """
    Use this data source to query detailed information of CDC dedicated cluster hosts

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    hosts = tencentcloud.Cdc.get_dedicated_cluster_hosts(dedicated_cluster_id="cluster-262n63e8")
    ```
    <!--End PulumiCodeChooser -->


    :param str dedicated_cluster_id: Dedicated Cluster ID.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['dedicatedClusterId'] = dedicated_cluster_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cdc/getDedicatedClusterHosts:getDedicatedClusterHosts', __args__, opts=opts, typ=GetDedicatedClusterHostsResult).value

    return AwaitableGetDedicatedClusterHostsResult(
        dedicated_cluster_id=pulumi.get(__ret__, 'dedicated_cluster_id'),
        host_info_sets=pulumi.get(__ret__, 'host_info_sets'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_dedicated_cluster_hosts)
def get_dedicated_cluster_hosts_output(dedicated_cluster_id: Optional[pulumi.Input[str]] = None,
                                       result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDedicatedClusterHostsResult]:
    """
    Use this data source to query detailed information of CDC dedicated cluster hosts

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    hosts = tencentcloud.Cdc.get_dedicated_cluster_hosts(dedicated_cluster_id="cluster-262n63e8")
    ```
    <!--End PulumiCodeChooser -->


    :param str dedicated_cluster_id: Dedicated Cluster ID.
    :param str result_output_file: Used to save results.
    """
    ...
