# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['PrivateNatGatewayArgs', 'PrivateNatGateway']

@pulumi.input_type
class PrivateNatGatewayArgs:
    def __init__(__self__, *,
                 nat_gateway_name: pulumi.Input[str],
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 cross_domain: Optional[pulumi.Input[bool]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vpc_type: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a PrivateNatGateway resource.
        :param pulumi.Input[str] nat_gateway_name: Private network gateway name.
        :param pulumi.Input[str] ccn_id: Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        :param pulumi.Input[bool] cross_domain: Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        :param pulumi.Input[str] vpc_id: Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        :param pulumi.Input[bool] vpc_type: VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        pulumi.set(__self__, "nat_gateway_name", nat_gateway_name)
        if ccn_id is not None:
            pulumi.set(__self__, "ccn_id", ccn_id)
        if cross_domain is not None:
            pulumi.set(__self__, "cross_domain", cross_domain)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)
        if vpc_type is not None:
            pulumi.set(__self__, "vpc_type", vpc_type)

    @property
    @pulumi.getter(name="natGatewayName")
    def nat_gateway_name(self) -> pulumi.Input[str]:
        """
        Private network gateway name.
        """
        return pulumi.get(self, "nat_gateway_name")

    @nat_gateway_name.setter
    def nat_gateway_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "nat_gateway_name", value)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        """
        return pulumi.get(self, "ccn_id")

    @ccn_id.setter
    def ccn_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ccn_id", value)

    @property
    @pulumi.getter(name="crossDomain")
    def cross_domain(self) -> Optional[pulumi.Input[bool]]:
        """
        Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        """
        return pulumi.get(self, "cross_domain")

    @cross_domain.setter
    def cross_domain(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cross_domain", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="vpcType")
    def vpc_type(self) -> Optional[pulumi.Input[bool]]:
        """
        VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        return pulumi.get(self, "vpc_type")

    @vpc_type.setter
    def vpc_type(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "vpc_type", value)


@pulumi.input_type
class _PrivateNatGatewayState:
    def __init__(__self__, *,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 cross_domain: Optional[pulumi.Input[bool]] = None,
                 nat_gateway_name: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vpc_type: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering PrivateNatGateway resources.
        :param pulumi.Input[str] ccn_id: Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        :param pulumi.Input[bool] cross_domain: Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        :param pulumi.Input[str] nat_gateway_name: Private network gateway name.
        :param pulumi.Input[str] vpc_id: Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        :param pulumi.Input[bool] vpc_type: VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        if ccn_id is not None:
            pulumi.set(__self__, "ccn_id", ccn_id)
        if cross_domain is not None:
            pulumi.set(__self__, "cross_domain", cross_domain)
        if nat_gateway_name is not None:
            pulumi.set(__self__, "nat_gateway_name", nat_gateway_name)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)
        if vpc_type is not None:
            pulumi.set(__self__, "vpc_type", vpc_type)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        """
        return pulumi.get(self, "ccn_id")

    @ccn_id.setter
    def ccn_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ccn_id", value)

    @property
    @pulumi.getter(name="crossDomain")
    def cross_domain(self) -> Optional[pulumi.Input[bool]]:
        """
        Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        """
        return pulumi.get(self, "cross_domain")

    @cross_domain.setter
    def cross_domain(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cross_domain", value)

    @property
    @pulumi.getter(name="natGatewayName")
    def nat_gateway_name(self) -> Optional[pulumi.Input[str]]:
        """
        Private network gateway name.
        """
        return pulumi.get(self, "nat_gateway_name")

    @nat_gateway_name.setter
    def nat_gateway_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nat_gateway_name", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="vpcType")
    def vpc_type(self) -> Optional[pulumi.Input[bool]]:
        """
        VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        return pulumi.get(self, "vpc_type")

    @vpc_type.setter
    def vpc_type(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "vpc_type", value)


class PrivateNatGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 cross_domain: Optional[pulumi.Input[bool]] = None,
                 nat_gateway_name: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vpc_type: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Provides a resource to create a vpc private nat gateway

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        private_nat_gateway = tencentcloud.vpc.PrivateNatGateway("privateNatGateway",
            nat_gateway_name="xxx",
            vpc_id="xxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc private_nat_gateway can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpc/privateNatGateway:PrivateNatGateway private_nat_gateway private_nat_gateway_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ccn_id: Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        :param pulumi.Input[bool] cross_domain: Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        :param pulumi.Input[str] nat_gateway_name: Private network gateway name.
        :param pulumi.Input[str] vpc_id: Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        :param pulumi.Input[bool] vpc_type: VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PrivateNatGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vpc private nat gateway

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        private_nat_gateway = tencentcloud.vpc.PrivateNatGateway("privateNatGateway",
            nat_gateway_name="xxx",
            vpc_id="xxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc private_nat_gateway can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpc/privateNatGateway:PrivateNatGateway private_nat_gateway private_nat_gateway_id
        ```

        :param str resource_name: The name of the resource.
        :param PrivateNatGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PrivateNatGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 cross_domain: Optional[pulumi.Input[bool]] = None,
                 nat_gateway_name: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vpc_type: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PrivateNatGatewayArgs.__new__(PrivateNatGatewayArgs)

            __props__.__dict__["ccn_id"] = ccn_id
            __props__.__dict__["cross_domain"] = cross_domain
            if nat_gateway_name is None and not opts.urn:
                raise TypeError("Missing required property 'nat_gateway_name'")
            __props__.__dict__["nat_gateway_name"] = nat_gateway_name
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["vpc_type"] = vpc_type
        super(PrivateNatGateway, __self__).__init__(
            'tencentcloud:Vpc/privateNatGateway:PrivateNatGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ccn_id: Optional[pulumi.Input[str]] = None,
            cross_domain: Optional[pulumi.Input[bool]] = None,
            nat_gateway_name: Optional[pulumi.Input[str]] = None,
            vpc_id: Optional[pulumi.Input[str]] = None,
            vpc_type: Optional[pulumi.Input[bool]] = None) -> 'PrivateNatGateway':
        """
        Get an existing PrivateNatGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ccn_id: Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        :param pulumi.Input[bool] cross_domain: Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        :param pulumi.Input[str] nat_gateway_name: Private network gateway name.
        :param pulumi.Input[str] vpc_id: Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        :param pulumi.Input[bool] vpc_type: VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PrivateNatGatewayState.__new__(_PrivateNatGatewayState)

        __props__.__dict__["ccn_id"] = ccn_id
        __props__.__dict__["cross_domain"] = cross_domain
        __props__.__dict__["nat_gateway_name"] = nat_gateway_name
        __props__.__dict__["vpc_id"] = vpc_id
        __props__.__dict__["vpc_type"] = vpc_type
        return PrivateNatGateway(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> pulumi.Output[str]:
        """
        Cloud Connect Network type The Cloud Connect Network instance ID required to be bound to the private network NAT gateway.
        """
        return pulumi.get(self, "ccn_id")

    @property
    @pulumi.getter(name="crossDomain")
    def cross_domain(self) -> pulumi.Output[bool]:
        """
        Cross-domain parameters. Cross-domain binding of VPCs is supported only when the value is True.
        """
        return pulumi.get(self, "cross_domain")

    @property
    @pulumi.getter(name="natGatewayName")
    def nat_gateway_name(self) -> pulumi.Output[str]:
        """
        Private network gateway name.
        """
        return pulumi.get(self, "nat_gateway_name")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[str]:
        """
        Private Cloud instance ID. This parameter is required when creating a VPC type private network NAT gateway or a private network NAT gateway of private network gateway.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vpcType")
    def vpc_type(self) -> pulumi.Output[bool]:
        """
        VPC type private network NAT gateway. Only when the value is True will a VPC type private network NAT gateway be created.
        """
        return pulumi.get(self, "vpc_type")

