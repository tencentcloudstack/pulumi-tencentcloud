# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['OrgShareUnitArgs', 'OrgShareUnit']

@pulumi.input_type
class OrgShareUnitArgs:
    def __init__(__self__, *,
                 area: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a OrgShareUnit resource.
        :param pulumi.Input[str] area: Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        :param pulumi.Input[str] description: Shared unit description. Up to 128 characters.
        :param pulumi.Input[str] name: Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        """
        pulumi.set(__self__, "area", area)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def area(self) -> pulumi.Input[str]:
        """
        Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        return pulumi.get(self, "area")

    @area.setter
    def area(self, value: pulumi.Input[str]):
        pulumi.set(self, "area", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Shared unit description. Up to 128 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _OrgShareUnitState:
    def __init__(__self__, *,
                 area: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 unit_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OrgShareUnit resources.
        :param pulumi.Input[str] area: Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        :param pulumi.Input[str] description: Shared unit description. Up to 128 characters.
        :param pulumi.Input[str] name: Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        :param pulumi.Input[str] unit_id: Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        if area is not None:
            pulumi.set(__self__, "area", area)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if unit_id is not None:
            pulumi.set(__self__, "unit_id", unit_id)

    @property
    @pulumi.getter
    def area(self) -> Optional[pulumi.Input[str]]:
        """
        Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        return pulumi.get(self, "area")

    @area.setter
    def area(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Shared unit description. Up to 128 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="unitId")
    def unit_id(self) -> Optional[pulumi.Input[str]]:
        """
        Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        return pulumi.get(self, "unit_id")

    @unit_id.setter
    def unit_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "unit_id", value)


class OrgShareUnit(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a organization org_share_unit

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        org_share_unit = tencentcloud.organization.OrgShareUnit("orgShareUnit",
            area="ap-guangzhou",
            description="iac-test")
        ```

        ## Import

        organization org_share_unit can be imported using the id, e.g.

        ```sh
         $ pulumi import tencentcloud:Organization/orgShareUnit:OrgShareUnit org_share_unit area#unit_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] area: Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        :param pulumi.Input[str] description: Shared unit description. Up to 128 characters.
        :param pulumi.Input[str] name: Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrgShareUnitArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a organization org_share_unit

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        org_share_unit = tencentcloud.organization.OrgShareUnit("orgShareUnit",
            area="ap-guangzhou",
            description="iac-test")
        ```

        ## Import

        organization org_share_unit can be imported using the id, e.g.

        ```sh
         $ pulumi import tencentcloud:Organization/orgShareUnit:OrgShareUnit org_share_unit area#unit_id
        ```

        :param str resource_name: The name of the resource.
        :param OrgShareUnitArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrgShareUnitArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrgShareUnitArgs.__new__(OrgShareUnitArgs)

            if area is None and not opts.urn:
                raise TypeError("Missing required property 'area'")
            __props__.__dict__["area"] = area
            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["unit_id"] = None
        super(OrgShareUnit, __self__).__init__(
            'tencentcloud:Organization/orgShareUnit:OrgShareUnit',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            area: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            unit_id: Optional[pulumi.Input[str]] = None) -> 'OrgShareUnit':
        """
        Get an existing OrgShareUnit resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] area: Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        :param pulumi.Input[str] description: Shared unit description. Up to 128 characters.
        :param pulumi.Input[str] name: Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        :param pulumi.Input[str] unit_id: Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrgShareUnitState.__new__(_OrgShareUnitState)

        __props__.__dict__["area"] = area
        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["unit_id"] = unit_id
        return OrgShareUnit(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def area(self) -> pulumi.Output[str]:
        """
        Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        return pulumi.get(self, "area")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Shared unit description. Up to 128 characters.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Shared unit name. It only supports a combination of uppercase and lowercase letters, numbers, -, and _, with a length of 3-128 characters.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="unitId")
    def unit_id(self) -> pulumi.Output[str]:
        """
        Shared unit region. The regions that support sharing can be obtained through the DescribeShareAreas interface.
        """
        return pulumi.get(self, "unit_id")

