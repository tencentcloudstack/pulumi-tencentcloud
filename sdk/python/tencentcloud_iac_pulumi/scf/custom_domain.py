# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CustomDomainArgs', 'CustomDomain']

@pulumi.input_type
class CustomDomainArgs:
    def __init__(__self__, *,
                 domain: pulumi.Input[str],
                 endpoints_configs: pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]],
                 protocol: pulumi.Input[str],
                 cert_config: Optional[pulumi.Input['CustomDomainCertConfigArgs']] = None,
                 waf_config: Optional[pulumi.Input['CustomDomainWafConfigArgs']] = None):
        """
        The set of arguments for constructing a CustomDomain resource.
        :param pulumi.Input[str] domain: Domain names, pan-domain names are not supported.
        :param pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]] endpoints_configs: Routing configuration.
        :param pulumi.Input[str] protocol: Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        :param pulumi.Input['CustomDomainCertConfigArgs'] cert_config: Certificate configuration information, required for HTTPS protocol.
        :param pulumi.Input['CustomDomainWafConfigArgs'] waf_config: Web Application Firewall Configuration.
        """
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "endpoints_configs", endpoints_configs)
        pulumi.set(__self__, "protocol", protocol)
        if cert_config is not None:
            pulumi.set(__self__, "cert_config", cert_config)
        if waf_config is not None:
            pulumi.set(__self__, "waf_config", waf_config)

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Input[str]:
        """
        Domain names, pan-domain names are not supported.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: pulumi.Input[str]):
        pulumi.set(self, "domain", value)

    @property
    @pulumi.getter(name="endpointsConfigs")
    def endpoints_configs(self) -> pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]]:
        """
        Routing configuration.
        """
        return pulumi.get(self, "endpoints_configs")

    @endpoints_configs.setter
    def endpoints_configs(self, value: pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]]):
        pulumi.set(self, "endpoints_configs", value)

    @property
    @pulumi.getter
    def protocol(self) -> pulumi.Input[str]:
        """
        Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: pulumi.Input[str]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter(name="certConfig")
    def cert_config(self) -> Optional[pulumi.Input['CustomDomainCertConfigArgs']]:
        """
        Certificate configuration information, required for HTTPS protocol.
        """
        return pulumi.get(self, "cert_config")

    @cert_config.setter
    def cert_config(self, value: Optional[pulumi.Input['CustomDomainCertConfigArgs']]):
        pulumi.set(self, "cert_config", value)

    @property
    @pulumi.getter(name="wafConfig")
    def waf_config(self) -> Optional[pulumi.Input['CustomDomainWafConfigArgs']]:
        """
        Web Application Firewall Configuration.
        """
        return pulumi.get(self, "waf_config")

    @waf_config.setter
    def waf_config(self, value: Optional[pulumi.Input['CustomDomainWafConfigArgs']]):
        pulumi.set(self, "waf_config", value)


@pulumi.input_type
class _CustomDomainState:
    def __init__(__self__, *,
                 cert_config: Optional[pulumi.Input['CustomDomainCertConfigArgs']] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 endpoints_configs: Optional[pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 waf_config: Optional[pulumi.Input['CustomDomainWafConfigArgs']] = None):
        """
        Input properties used for looking up and filtering CustomDomain resources.
        :param pulumi.Input['CustomDomainCertConfigArgs'] cert_config: Certificate configuration information, required for HTTPS protocol.
        :param pulumi.Input[str] domain: Domain names, pan-domain names are not supported.
        :param pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]] endpoints_configs: Routing configuration.
        :param pulumi.Input[str] protocol: Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        :param pulumi.Input['CustomDomainWafConfigArgs'] waf_config: Web Application Firewall Configuration.
        """
        if cert_config is not None:
            pulumi.set(__self__, "cert_config", cert_config)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if endpoints_configs is not None:
            pulumi.set(__self__, "endpoints_configs", endpoints_configs)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if waf_config is not None:
            pulumi.set(__self__, "waf_config", waf_config)

    @property
    @pulumi.getter(name="certConfig")
    def cert_config(self) -> Optional[pulumi.Input['CustomDomainCertConfigArgs']]:
        """
        Certificate configuration information, required for HTTPS protocol.
        """
        return pulumi.get(self, "cert_config")

    @cert_config.setter
    def cert_config(self, value: Optional[pulumi.Input['CustomDomainCertConfigArgs']]):
        pulumi.set(self, "cert_config", value)

    @property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain names, pan-domain names are not supported.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain", value)

    @property
    @pulumi.getter(name="endpointsConfigs")
    def endpoints_configs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]]]:
        """
        Routing configuration.
        """
        return pulumi.get(self, "endpoints_configs")

    @endpoints_configs.setter
    def endpoints_configs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CustomDomainEndpointsConfigArgs']]]]):
        pulumi.set(self, "endpoints_configs", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[str]]:
        """
        Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter(name="wafConfig")
    def waf_config(self) -> Optional[pulumi.Input['CustomDomainWafConfigArgs']]:
        """
        Web Application Firewall Configuration.
        """
        return pulumi.get(self, "waf_config")

    @waf_config.setter
    def waf_config(self, value: Optional[pulumi.Input['CustomDomainWafConfigArgs']]):
        pulumi.set(self, "waf_config", value)


class CustomDomain(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cert_config: Optional[pulumi.Input[pulumi.InputType['CustomDomainCertConfigArgs']]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 endpoints_configs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['CustomDomainEndpointsConfigArgs']]]]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 waf_config: Optional[pulumi.Input[pulumi.InputType['CustomDomainWafConfigArgs']]] = None,
                 __props__=None):
        """
        Provides a resource to create a scf custom domain

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        scf_custom_domain = tencentcloud.scf.CustomDomain("scfCustomDomain",
            domain="xxxxxx",
            endpoints_configs=[tencentcloud.scf.CustomDomainEndpointsConfigArgs(
                function_name="xxxxxx",
                namespace="default",
                path_match="/aa/*",
                qualifier="$LATEST",
            )],
            protocol="HTTP",
            waf_config=tencentcloud.scf.CustomDomainWafConfigArgs(
                waf_open="CLOSE",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        scf scf_custom_domain can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Scf/customDomain:CustomDomain scf_custom_domain ${domain}
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['CustomDomainCertConfigArgs']] cert_config: Certificate configuration information, required for HTTPS protocol.
        :param pulumi.Input[str] domain: Domain names, pan-domain names are not supported.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['CustomDomainEndpointsConfigArgs']]]] endpoints_configs: Routing configuration.
        :param pulumi.Input[str] protocol: Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        :param pulumi.Input[pulumi.InputType['CustomDomainWafConfigArgs']] waf_config: Web Application Firewall Configuration.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CustomDomainArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a scf custom domain

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        scf_custom_domain = tencentcloud.scf.CustomDomain("scfCustomDomain",
            domain="xxxxxx",
            endpoints_configs=[tencentcloud.scf.CustomDomainEndpointsConfigArgs(
                function_name="xxxxxx",
                namespace="default",
                path_match="/aa/*",
                qualifier="$LATEST",
            )],
            protocol="HTTP",
            waf_config=tencentcloud.scf.CustomDomainWafConfigArgs(
                waf_open="CLOSE",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        scf scf_custom_domain can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Scf/customDomain:CustomDomain scf_custom_domain ${domain}
        ```

        :param str resource_name: The name of the resource.
        :param CustomDomainArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CustomDomainArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cert_config: Optional[pulumi.Input[pulumi.InputType['CustomDomainCertConfigArgs']]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 endpoints_configs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['CustomDomainEndpointsConfigArgs']]]]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 waf_config: Optional[pulumi.Input[pulumi.InputType['CustomDomainWafConfigArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CustomDomainArgs.__new__(CustomDomainArgs)

            __props__.__dict__["cert_config"] = cert_config
            if domain is None and not opts.urn:
                raise TypeError("Missing required property 'domain'")
            __props__.__dict__["domain"] = domain
            if endpoints_configs is None and not opts.urn:
                raise TypeError("Missing required property 'endpoints_configs'")
            __props__.__dict__["endpoints_configs"] = endpoints_configs
            if protocol is None and not opts.urn:
                raise TypeError("Missing required property 'protocol'")
            __props__.__dict__["protocol"] = protocol
            __props__.__dict__["waf_config"] = waf_config
        super(CustomDomain, __self__).__init__(
            'tencentcloud:Scf/customDomain:CustomDomain',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cert_config: Optional[pulumi.Input[pulumi.InputType['CustomDomainCertConfigArgs']]] = None,
            domain: Optional[pulumi.Input[str]] = None,
            endpoints_configs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['CustomDomainEndpointsConfigArgs']]]]] = None,
            protocol: Optional[pulumi.Input[str]] = None,
            waf_config: Optional[pulumi.Input[pulumi.InputType['CustomDomainWafConfigArgs']]] = None) -> 'CustomDomain':
        """
        Get an existing CustomDomain resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['CustomDomainCertConfigArgs']] cert_config: Certificate configuration information, required for HTTPS protocol.
        :param pulumi.Input[str] domain: Domain names, pan-domain names are not supported.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['CustomDomainEndpointsConfigArgs']]]] endpoints_configs: Routing configuration.
        :param pulumi.Input[str] protocol: Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        :param pulumi.Input[pulumi.InputType['CustomDomainWafConfigArgs']] waf_config: Web Application Firewall Configuration.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CustomDomainState.__new__(_CustomDomainState)

        __props__.__dict__["cert_config"] = cert_config
        __props__.__dict__["domain"] = domain
        __props__.__dict__["endpoints_configs"] = endpoints_configs
        __props__.__dict__["protocol"] = protocol
        __props__.__dict__["waf_config"] = waf_config
        return CustomDomain(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="certConfig")
    def cert_config(self) -> pulumi.Output['outputs.CustomDomainCertConfig']:
        """
        Certificate configuration information, required for HTTPS protocol.
        """
        return pulumi.get(self, "cert_config")

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Output[str]:
        """
        Domain names, pan-domain names are not supported.
        """
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="endpointsConfigs")
    def endpoints_configs(self) -> pulumi.Output[Sequence['outputs.CustomDomainEndpointsConfig']]:
        """
        Routing configuration.
        """
        return pulumi.get(self, "endpoints_configs")

    @property
    @pulumi.getter
    def protocol(self) -> pulumi.Output[str]:
        """
        Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="wafConfig")
    def waf_config(self) -> pulumi.Output['outputs.CustomDomainWafConfig']:
        """
        Web Application Firewall Configuration.
        """
        return pulumi.get(self, "waf_config")

