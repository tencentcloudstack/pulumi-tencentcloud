// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create events audit track
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.events.AuditTrack("example", {
 *     filters: {
 *         resourceFields: [
 *             {
 *                 actionType: "*",
 *                 eventNames: [
 *                     "AddSubAccount",
 *                     "AddSubAccountCheckingMFA",
 *                 ],
 *                 resourceType: "cam",
 *             },
 *             {
 *                 actionType: "*",
 *                 eventNames: ["*"],
 *                 resourceType: "cvm",
 *             },
 *             {
 *                 actionType: "*",
 *                 eventNames: ["*"],
 *                 resourceType: "tke",
 *             },
 *         ],
 *     },
 *     status: 1,
 *     storage: {
 *         storageName: "393953ac-5c1b-457d-911d-376271b1b4f2",
 *         storagePrefix: "cloudaudit",
 *         storageRegion: "ap-guangzhou",
 *         storageType: "cls",
 *     },
 *     trackForAllMembers: 0,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * events audit track can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Events/auditTrack:AuditTrack example 24283
 * ```
 */
export class AuditTrack extends pulumi.CustomResource {
    /**
     * Get an existing AuditTrack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuditTrackState, opts?: pulumi.CustomResourceOptions): AuditTrack {
        return new AuditTrack(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Events/auditTrack:AuditTrack';

    /**
     * Returns true if the given object is an instance of AuditTrack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuditTrack {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuditTrack.__pulumiType;
    }

    /**
     * Data filtering criteria.
     */
    public readonly filters!: pulumi.Output<outputs.Events.AuditTrackFilters>;
    /**
     * Tracking set name, which can only contain 3-48 letters, digits, hyphens, and underscores.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Tracking set status (0: Not enabled; 1: Enabled).
     */
    public readonly status!: pulumi.Output<number>;
    /**
     * Storage type of shipped data. Valid values: `cos`, `cls`.
     */
    public readonly storage!: pulumi.Output<outputs.Events.AuditTrackStorage>;
    /**
     * Whether to enable the feature of shipping organization members operation logs to the organization admin account or the trusted service admin account (0: Not enabled; 1: Enabled. This feature can only be enabled by the organization admin account or the trusted service admin account).
     */
    public readonly trackForAllMembers!: pulumi.Output<number | undefined>;
    /**
     * Whether the log list has come to an end. `true`: Yes. Pagination is not required.
     */
    public /*out*/ readonly trackId!: pulumi.Output<number>;

    /**
     * Create a AuditTrack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuditTrackArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuditTrackArgs | AuditTrackState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuditTrackState | undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storage"] = state ? state.storage : undefined;
            resourceInputs["trackForAllMembers"] = state ? state.trackForAllMembers : undefined;
            resourceInputs["trackId"] = state ? state.trackId : undefined;
        } else {
            const args = argsOrState as AuditTrackArgs | undefined;
            if ((!args || args.filters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filters'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.storage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storage'");
            }
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["storage"] = args ? args.storage : undefined;
            resourceInputs["trackForAllMembers"] = args ? args.trackForAllMembers : undefined;
            resourceInputs["trackId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuditTrack.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuditTrack resources.
 */
export interface AuditTrackState {
    /**
     * Data filtering criteria.
     */
    filters?: pulumi.Input<inputs.Events.AuditTrackFilters>;
    /**
     * Tracking set name, which can only contain 3-48 letters, digits, hyphens, and underscores.
     */
    name?: pulumi.Input<string>;
    /**
     * Tracking set status (0: Not enabled; 1: Enabled).
     */
    status?: pulumi.Input<number>;
    /**
     * Storage type of shipped data. Valid values: `cos`, `cls`.
     */
    storage?: pulumi.Input<inputs.Events.AuditTrackStorage>;
    /**
     * Whether to enable the feature of shipping organization members operation logs to the organization admin account or the trusted service admin account (0: Not enabled; 1: Enabled. This feature can only be enabled by the organization admin account or the trusted service admin account).
     */
    trackForAllMembers?: pulumi.Input<number>;
    /**
     * Whether the log list has come to an end. `true`: Yes. Pagination is not required.
     */
    trackId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AuditTrack resource.
 */
export interface AuditTrackArgs {
    /**
     * Data filtering criteria.
     */
    filters: pulumi.Input<inputs.Events.AuditTrackFilters>;
    /**
     * Tracking set name, which can only contain 3-48 letters, digits, hyphens, and underscores.
     */
    name?: pulumi.Input<string>;
    /**
     * Tracking set status (0: Not enabled; 1: Enabled).
     */
    status: pulumi.Input<number>;
    /**
     * Storage type of shipped data. Valid values: `cos`, `cls`.
     */
    storage: pulumi.Input<inputs.Events.AuditTrackStorage>;
    /**
     * Whether to enable the feature of shipping organization members operation logs to the organization admin account or the trusted service admin account (0: Not enabled; 1: Enabled. This feature can only be enabled by the organization admin account or the trusted service admin account).
     */
    trackForAllMembers?: pulumi.Input<number>;
}
