// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a forward domain of layer7 listener.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooProxy = new tencentcloud.gaap.Proxy("fooProxy", {
 *     bandwidth: 10,
 *     concurrent: 2,
 *     accessRegion: "SouthChina",
 *     realserverRegion: "NorthChina",
 * });
 * const fooLayer7Listener = new tencentcloud.gaap.Layer7Listener("fooLayer7Listener", {
 *     protocol: "HTTP",
 *     port: 80,
 *     proxyId: fooProxy.id,
 * });
 * const fooHttpDomain = new tencentcloud.gaap.HttpDomain("fooHttpDomain", {
 *     listenerId: fooLayer7Listener.id,
 *     domain: "www.qq.com",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * GAAP http domain can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Gaap/httpDomain:HttpDomain tencentcloud_gaap_http_domain.foo listener-11112222+HTTP+www.qq.com
 * ```
 */
export class HttpDomain extends pulumi.CustomResource {
    /**
     * Get an existing HttpDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HttpDomainState, opts?: pulumi.CustomResourceOptions): HttpDomain {
        return new HttpDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Gaap/httpDomain:HttpDomain';

    /**
     * Returns true if the given object is an instance of HttpDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HttpDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HttpDomain.__pulumiType;
    }

    /**
     * Indicates whether basic authentication is enable, default value is `false`.
     */
    public readonly basicAuth!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the basic authentication.
     */
    public readonly basicAuthId!: pulumi.Output<string>;
    /**
     * ID of the server certificate, default value is `default`.
     */
    public readonly certificateId!: pulumi.Output<string | undefined>;
    /**
     * It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate, default value is `default`.
     *
     * @deprecated It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
     */
    public readonly clientCertificateId!: pulumi.Output<string>;
    /**
     * ID list of the poly client certificate.
     */
    public readonly clientCertificateIds!: pulumi.Output<string[]>;
    /**
     * Forward domain of the layer7 listener.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Indicates whether SSL certificate authentication is enable, default value is `false`.
     */
    public readonly gaapAuth!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the SSL certificate.
     */
    public readonly gaapAuthId!: pulumi.Output<string>;
    /**
     * Group Id.
     */
    public readonly groupId!: pulumi.Output<string | undefined>;
    /**
     * Whether to use as the default domain name, the default is false.
     */
    public readonly isDefaultServer!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the layer7 listener.
     */
    public readonly listenerId!: pulumi.Output<string>;
    /**
     * Indicates whether realserver authentication is enable, default value is `false`.
     */
    public readonly realserverAuth!: pulumi.Output<boolean | undefined>;
    /**
     * CA certificate domain of the realserver. It has been deprecated.
     */
    public readonly realserverCertificateDomain!: pulumi.Output<string>;
    /**
     * It has been deprecated from version 1.28.0. Set `realserverCertificateIds` instead. CA certificate ID of the realserver.
     *
     * @deprecated It has been deprecated from version 1.28.0. Set `realserverCertificateIds` instead.
     */
    public readonly realserverCertificateId!: pulumi.Output<string>;
    /**
     * CA certificate ID list of the realserver.
     */
    public readonly realserverCertificateIds!: pulumi.Output<string[]>;

    /**
     * Create a HttpDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HttpDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HttpDomainArgs | HttpDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HttpDomainState | undefined;
            resourceInputs["basicAuth"] = state ? state.basicAuth : undefined;
            resourceInputs["basicAuthId"] = state ? state.basicAuthId : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["clientCertificateId"] = state ? state.clientCertificateId : undefined;
            resourceInputs["clientCertificateIds"] = state ? state.clientCertificateIds : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["gaapAuth"] = state ? state.gaapAuth : undefined;
            resourceInputs["gaapAuthId"] = state ? state.gaapAuthId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["isDefaultServer"] = state ? state.isDefaultServer : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["realserverAuth"] = state ? state.realserverAuth : undefined;
            resourceInputs["realserverCertificateDomain"] = state ? state.realserverCertificateDomain : undefined;
            resourceInputs["realserverCertificateId"] = state ? state.realserverCertificateId : undefined;
            resourceInputs["realserverCertificateIds"] = state ? state.realserverCertificateIds : undefined;
        } else {
            const args = argsOrState as HttpDomainArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.listenerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            resourceInputs["basicAuth"] = args ? args.basicAuth : undefined;
            resourceInputs["basicAuthId"] = args ? args.basicAuthId : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["clientCertificateId"] = args ? args.clientCertificateId : undefined;
            resourceInputs["clientCertificateIds"] = args ? args.clientCertificateIds : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["gaapAuth"] = args ? args.gaapAuth : undefined;
            resourceInputs["gaapAuthId"] = args ? args.gaapAuthId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["isDefaultServer"] = args ? args.isDefaultServer : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["realserverAuth"] = args ? args.realserverAuth : undefined;
            resourceInputs["realserverCertificateDomain"] = args ? args.realserverCertificateDomain : undefined;
            resourceInputs["realserverCertificateId"] = args ? args.realserverCertificateId : undefined;
            resourceInputs["realserverCertificateIds"] = args ? args.realserverCertificateIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HttpDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HttpDomain resources.
 */
export interface HttpDomainState {
    /**
     * Indicates whether basic authentication is enable, default value is `false`.
     */
    basicAuth?: pulumi.Input<boolean>;
    /**
     * ID of the basic authentication.
     */
    basicAuthId?: pulumi.Input<string>;
    /**
     * ID of the server certificate, default value is `default`.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate, default value is `default`.
     *
     * @deprecated It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * ID list of the poly client certificate.
     */
    clientCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forward domain of the layer7 listener.
     */
    domain?: pulumi.Input<string>;
    /**
     * Indicates whether SSL certificate authentication is enable, default value is `false`.
     */
    gaapAuth?: pulumi.Input<boolean>;
    /**
     * ID of the SSL certificate.
     */
    gaapAuthId?: pulumi.Input<string>;
    /**
     * Group Id.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Whether to use as the default domain name, the default is false.
     */
    isDefaultServer?: pulumi.Input<boolean>;
    /**
     * ID of the layer7 listener.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * Indicates whether realserver authentication is enable, default value is `false`.
     */
    realserverAuth?: pulumi.Input<boolean>;
    /**
     * CA certificate domain of the realserver. It has been deprecated.
     */
    realserverCertificateDomain?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.28.0. Set `realserverCertificateIds` instead. CA certificate ID of the realserver.
     *
     * @deprecated It has been deprecated from version 1.28.0. Set `realserverCertificateIds` instead.
     */
    realserverCertificateId?: pulumi.Input<string>;
    /**
     * CA certificate ID list of the realserver.
     */
    realserverCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a HttpDomain resource.
 */
export interface HttpDomainArgs {
    /**
     * Indicates whether basic authentication is enable, default value is `false`.
     */
    basicAuth?: pulumi.Input<boolean>;
    /**
     * ID of the basic authentication.
     */
    basicAuthId?: pulumi.Input<string>;
    /**
     * ID of the server certificate, default value is `default`.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate, default value is `default`.
     *
     * @deprecated It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * ID list of the poly client certificate.
     */
    clientCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forward domain of the layer7 listener.
     */
    domain: pulumi.Input<string>;
    /**
     * Indicates whether SSL certificate authentication is enable, default value is `false`.
     */
    gaapAuth?: pulumi.Input<boolean>;
    /**
     * ID of the SSL certificate.
     */
    gaapAuthId?: pulumi.Input<string>;
    /**
     * Group Id.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Whether to use as the default domain name, the default is false.
     */
    isDefaultServer?: pulumi.Input<boolean>;
    /**
     * ID of the layer7 listener.
     */
    listenerId: pulumi.Input<string>;
    /**
     * Indicates whether realserver authentication is enable, default value is `false`.
     */
    realserverAuth?: pulumi.Input<boolean>;
    /**
     * CA certificate domain of the realserver. It has been deprecated.
     */
    realserverCertificateDomain?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.28.0. Set `realserverCertificateIds` instead. CA certificate ID of the realserver.
     *
     * @deprecated It has been deprecated from version 1.28.0. Set `realserverCertificateIds` instead.
     */
    realserverCertificateId?: pulumi.Input<string>;
    /**
     * CA certificate ID list of the realserver.
     */
    realserverCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
}
