// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a layer7 listener of GAAP.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const fooProxy = new tencentcloud.gaap.Proxy("fooProxy", {
 *     bandwidth: 10,
 *     concurrent: 2,
 *     accessRegion: "SouthChina",
 *     realserverRegion: "NorthChina",
 * });
 * const fooLayer7Listener = new tencentcloud.gaap.Layer7Listener("fooLayer7Listener", {
 *     protocol: "HTTP",
 *     port: 80,
 *     proxyId: fooProxy.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * GAAP layer7 listener can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Gaap/layer7Listener:Layer7Listener tencentcloud_gaap_layer7_listener.foo listener-11112222
 * ```
 */
export class Layer7Listener extends pulumi.CustomResource {
    /**
     * Get an existing Layer7Listener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Layer7ListenerState, opts?: pulumi.CustomResourceOptions): Layer7Listener {
        return new Layer7Listener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Gaap/layer7Listener:Layer7Listener';

    /**
     * Returns true if the given object is an instance of Layer7Listener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Layer7Listener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Layer7Listener.__pulumiType;
    }

    /**
     * Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    public readonly authType!: pulumi.Output<number | undefined>;
    /**
     * Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    public readonly certificateId!: pulumi.Output<string | undefined>;
    /**
     * It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     *
     * @deprecated It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
     */
    public readonly clientCertificateId!: pulumi.Output<string>;
    /**
     * ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    public readonly clientCertificateIds!: pulumi.Output<string[]>;
    /**
     * Creation time of the layer7 listener.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    public readonly forwardProtocol!: pulumi.Output<string | undefined>;
    /**
     * Group ID.
     */
    public readonly groupId!: pulumi.Output<string | undefined>;
    /**
     * Name of the layer7 listener, the maximum length is 30.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Port of the layer7 listener.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * ID of the GAAP proxy.
     */
    public readonly proxyId!: pulumi.Output<string | undefined>;
    /**
     * Status of the layer7 listener.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
     */
    public readonly tlsCiphers!: pulumi.Output<string>;
    /**
     * TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
     */
    public readonly tlsSupportVersions!: pulumi.Output<string[]>;

    /**
     * Create a Layer7Listener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Layer7ListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Layer7ListenerArgs | Layer7ListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Layer7ListenerState | undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["clientCertificateId"] = state ? state.clientCertificateId : undefined;
            resourceInputs["clientCertificateIds"] = state ? state.clientCertificateIds : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["forwardProtocol"] = state ? state.forwardProtocol : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["proxyId"] = state ? state.proxyId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tlsCiphers"] = state ? state.tlsCiphers : undefined;
            resourceInputs["tlsSupportVersions"] = state ? state.tlsSupportVersions : undefined;
        } else {
            const args = argsOrState as Layer7ListenerArgs | undefined;
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["clientCertificateId"] = args ? args.clientCertificateId : undefined;
            resourceInputs["clientCertificateIds"] = args ? args.clientCertificateIds : undefined;
            resourceInputs["forwardProtocol"] = args ? args.forwardProtocol : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["proxyId"] = args ? args.proxyId : undefined;
            resourceInputs["tlsCiphers"] = args ? args.tlsCiphers : undefined;
            resourceInputs["tlsSupportVersions"] = args ? args.tlsSupportVersions : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Layer7Listener.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Layer7Listener resources.
 */
export interface Layer7ListenerState {
    /**
     * Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    authType?: pulumi.Input<number>;
    /**
     * Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     *
     * @deprecated It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    clientCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Creation time of the layer7 listener.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    forwardProtocol?: pulumi.Input<string>;
    /**
     * Group ID.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Name of the layer7 listener, the maximum length is 30.
     */
    name?: pulumi.Input<string>;
    /**
     * Port of the layer7 listener.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * ID of the GAAP proxy.
     */
    proxyId?: pulumi.Input<string>;
    /**
     * Status of the layer7 listener.
     */
    status?: pulumi.Input<number>;
    /**
     * Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
     */
    tlsCiphers?: pulumi.Input<string>;
    /**
     * TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
     */
    tlsSupportVersions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Layer7Listener resource.
 */
export interface Layer7ListenerArgs {
    /**
     * Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    authType?: pulumi.Input<number>;
    /**
     * Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     *
     * @deprecated It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    clientCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
     */
    forwardProtocol?: pulumi.Input<string>;
    /**
     * Group ID.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Name of the layer7 listener, the maximum length is 30.
     */
    name?: pulumi.Input<string>;
    /**
     * Port of the layer7 listener.
     */
    port: pulumi.Input<number>;
    /**
     * Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
     */
    protocol: pulumi.Input<string>;
    /**
     * ID of the GAAP proxy.
     */
    proxyId?: pulumi.Input<string>;
    /**
     * Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
     */
    tlsCiphers?: pulumi.Input<string>;
    /**
     * TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
     */
    tlsSupportVersions?: pulumi.Input<pulumi.Input<string>[]>;
}
