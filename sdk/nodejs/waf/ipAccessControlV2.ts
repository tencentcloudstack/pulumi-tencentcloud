// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a waf ip access control v2
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.waf.IpAccessControlV2("example", {
 *     actionType: 40,
 *     domain: "example.com",
 *     instanceId: "waf_2kxtlbky11bbcr4b",
 *     ipLists: [
 *         "10.0.0.10",
 *         "172.0.0.16",
 *         "192.168.0.30",
 *     ],
 *     jobDateTime: {
 *         timeTZone: "UTC+8",
 *         timeds: [{
 *             endDateTime: 0,
 *             startDateTime: 0,
 *         }],
 *     },
 *     jobType: "TimedJob",
 *     note: "note.",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * waf ip access control v2 can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2 example waf_2kxtlbky11bbcr4b#example.com#5503616778
 * ```
 */
export class IpAccessControlV2 extends pulumi.CustomResource {
    /**
     * Get an existing IpAccessControlV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpAccessControlV2State, opts?: pulumi.CustomResourceOptions): IpAccessControlV2 {
        return new IpAccessControlV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2';

    /**
     * Returns true if the given object is an instance of IpAccessControlV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpAccessControlV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpAccessControlV2.__pulumiType;
    }

    /**
     * 42: blocklist; 40: allowlist.
     */
    public readonly actionType!: pulumi.Output<number>;
    /**
     * Specific domain name, for example, test.qcloudwaf.com.
     * Global domain name, that is, global.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Instance ID.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * IP parameter list.
     */
    public readonly ipLists!: pulumi.Output<string[]>;
    /**
     * Details of scheduled configuration.
     */
    public readonly jobDateTime!: pulumi.Output<outputs.Waf.IpAccessControlV2JobDateTime>;
    /**
     * Scheduled configuration type.
     */
    public readonly jobType!: pulumi.Output<string>;
    /**
     * Remarks.
     */
    public readonly note!: pulumi.Output<string | undefined>;

    /**
     * Create a IpAccessControlV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpAccessControlV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpAccessControlV2Args | IpAccessControlV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpAccessControlV2State | undefined;
            resourceInputs["actionType"] = state ? state.actionType : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["ipLists"] = state ? state.ipLists : undefined;
            resourceInputs["jobDateTime"] = state ? state.jobDateTime : undefined;
            resourceInputs["jobType"] = state ? state.jobType : undefined;
            resourceInputs["note"] = state ? state.note : undefined;
        } else {
            const args = argsOrState as IpAccessControlV2Args | undefined;
            if ((!args || args.actionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actionType'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.ipLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipLists'");
            }
            resourceInputs["actionType"] = args ? args.actionType : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["ipLists"] = args ? args.ipLists : undefined;
            resourceInputs["jobDateTime"] = args ? args.jobDateTime : undefined;
            resourceInputs["jobType"] = args ? args.jobType : undefined;
            resourceInputs["note"] = args ? args.note : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpAccessControlV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpAccessControlV2 resources.
 */
export interface IpAccessControlV2State {
    /**
     * 42: blocklist; 40: allowlist.
     */
    actionType?: pulumi.Input<number>;
    /**
     * Specific domain name, for example, test.qcloudwaf.com.
     * Global domain name, that is, global.
     */
    domain?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * IP parameter list.
     */
    ipLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Details of scheduled configuration.
     */
    jobDateTime?: pulumi.Input<inputs.Waf.IpAccessControlV2JobDateTime>;
    /**
     * Scheduled configuration type.
     */
    jobType?: pulumi.Input<string>;
    /**
     * Remarks.
     */
    note?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpAccessControlV2 resource.
 */
export interface IpAccessControlV2Args {
    /**
     * 42: blocklist; 40: allowlist.
     */
    actionType: pulumi.Input<number>;
    /**
     * Specific domain name, for example, test.qcloudwaf.com.
     * Global domain name, that is, global.
     */
    domain: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * IP parameter list.
     */
    ipLists: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Details of scheduled configuration.
     */
    jobDateTime?: pulumi.Input<inputs.Waf.IpAccessControlV2JobDateTime>;
    /**
     * Scheduled configuration type.
     */
    jobType?: pulumi.Input<string>;
    /**
     * Remarks.
     */
    note?: pulumi.Input<string>;
}
