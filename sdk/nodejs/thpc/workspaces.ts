// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a THPC workspaces
 *
 * > **Note:** If spaceChargeType is UNDERWRITE, Not currently supported for deletion.
 *
 * ## Example Usage
 *
 * ### Create a PREPAID THPC workspaces
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-nanjing-1";
 * const images = tencentcloud.Images.getInstance({
 *     imageTypes: ["PUBLIC_IMAGE"],
 *     osName: "TencentOS Server 3.1 (TK4) UEFI",
 * });
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "172.16.0.0/16"});
 * // create subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: availabilityZone,
 *     vpcId: vpc.id,
 *     cidrBlock: "172.16.0.0/24",
 *     isMulticast: false,
 * });
 * // create security group
 * const exampleGroup = new tencentcloud.security.Group("exampleGroup", {
 *     description: "security group desc.",
 *     tags: {
 *         createBy: "Terraform",
 *     },
 * });
 * // create thpc workspaces
 * const exampleWorkspaces = new tencentcloud.thpc.Workspaces("exampleWorkspaces", {
 *     spaceName: "tf-example",
 *     spaceChargeType: "PREPAID",
 *     spaceType: "96A.96XLARGE2304",
 *     hpcClusterId: "hpc-l9anqcbl",
 *     imageId: images.then(images => images.images?.[0]?.imageId),
 *     securityGroupIds: [exampleGroup.id],
 *     placement: {
 *         zone: availabilityZone,
 *         projectId: 0,
 *     },
 *     spaceChargePrepaid: {
 *         period: 1,
 *         renewFlag: "NOTIFY_AND_AUTO_RENEW",
 *     },
 *     systemDisk: {
 *         diskSize: 100,
 *         diskType: "CLOUD_HSSD",
 *     },
 *     dataDisks: [{
 *         diskSize: 200,
 *         diskType: "CLOUD_HSSD",
 *         encrypt: false,
 *     }],
 *     virtualPrivateCloud: {
 *         vpcId: vpc.id,
 *         subnetId: subnet.id,
 *         asVpcGateway: false,
 *         ipv6AddressCount: 0,
 *     },
 *     internetAccessible: {
 *         internetChargeType: "TRAFFIC_POSTPAID_BY_HOUR",
 *         internetMaxBandwidthOut: 200,
 *         publicIpAssigned: true,
 *     },
 *     loginSettings: {
 *         password: "Password@123",
 *     },
 *     enhancedService: {
 *         securityService: {
 *             enabled: true,
 *         },
 *         monitorService: {
 *             enabled: true,
 *         },
 *         automationService: {
 *             enabled: true,
 *         },
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Create a UNDERWRITE THPC workspaces
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-nanjing-1";
 * const images = tencentcloud.Images.getInstance({
 *     imageTypes: ["PUBLIC_IMAGE"],
 *     osName: "TencentOS Server 3.1 (TK4) UEFI",
 * });
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "172.16.0.0/16"});
 * // create subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: availabilityZone,
 *     vpcId: vpc.id,
 *     cidrBlock: "172.16.0.0/24",
 *     isMulticast: false,
 * });
 * // create security group
 * const exampleGroup = new tencentcloud.security.Group("exampleGroup", {
 *     description: "security group desc.",
 *     tags: {
 *         createBy: "Terraform",
 *     },
 * });
 * // create thpc workspaces
 * const exampleWorkspaces = new tencentcloud.thpc.Workspaces("exampleWorkspaces", {
 *     spaceName: "tf-example",
 *     spaceChargeType: "UNDERWRITE",
 *     spaceType: "96A.96XLARGE2304",
 *     hpcClusterId: "hpc-l9anqcbl",
 *     imageId: images.then(images => images.images?.[0]?.imageId),
 *     securityGroupIds: [exampleGroup.id],
 *     placement: {
 *         zone: availabilityZone,
 *         projectId: 0,
 *     },
 *     spaceChargePrepaid: {
 *         period: 12,
 *         renewFlag: "NOTIFY_AND_AUTO_RENEW",
 *     },
 *     systemDisk: {
 *         diskSize: 100,
 *         diskType: "CLOUD_HSSD",
 *     },
 *     dataDisks: [{
 *         diskSize: 200,
 *         diskType: "CLOUD_HSSD",
 *         encrypt: false,
 *     }],
 *     virtualPrivateCloud: {
 *         vpcId: vpc.id,
 *         subnetId: subnet.id,
 *         asVpcGateway: false,
 *         ipv6AddressCount: 0,
 *         privateIpAddresses: ["172.16.0.2"],
 *     },
 *     internetAccessible: {
 *         internetChargeType: "BANDWIDTH_PREPAID",
 *         internetMaxBandwidthOut: 200,
 *         publicIpAssigned: true,
 *     },
 *     loginSettings: {
 *         keyIds: ["skey-qxjpz7uj"],
 *     },
 *     enhancedService: {
 *         securityService: {
 *             enabled: true,
 *         },
 *         monitorService: {
 *             enabled: true,
 *         },
 *         automationService: {
 *             enabled: true,
 *         },
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * THPC workspaces can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Thpc/workspaces:Workspaces example wks-gwg3ygz1
 * ```
 */
export class Workspaces extends pulumi.CustomResource {
    /**
     * Get an existing Workspaces resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspacesState, opts?: pulumi.CustomResourceOptions): Workspaces {
        return new Workspaces(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Thpc/workspaces:Workspaces';

    /**
     * Returns true if the given object is an instance of Workspaces.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workspaces {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workspaces.__pulumiType;
    }

    /**
     * CAM role name authorized to access.
     */
    public readonly camRoleName!: pulumi.Output<string | undefined>;
    /**
     * A string used to ensure the idempotence of the request. This string is generated by the customer and must be unique across different requests, with a maximum length of 64 ASCII characters. If this parameter is not specified, the idempotence of the request cannot be guaranteed. Example value: system-f3827db9-c58a-49cc-bf10-33fc1923a34a.
     */
    public readonly clientToken!: pulumi.Output<string | undefined>;
    /**
     * Workspace data disk information.
     */
    public readonly dataDisks!: pulumi.Output<outputs.Thpc.WorkspacesDataDisk[]>;
    /**
     * Placement Group ID.
     */
    public readonly disasterRecoverGroupId!: pulumi.Output<string | undefined>;
    /**
     * Enhanced Services.
     */
    public readonly enhancedService!: pulumi.Output<outputs.Thpc.WorkspacesEnhancedService | undefined>;
    /**
     * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * Hyper Computing Cluster ID.
     */
    public readonly hpcClusterId!: pulumi.Output<string | undefined>;
    /**
     * Image ID.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * Public network bandwidth settings.
     */
    public readonly internetAccessible!: pulumi.Output<outputs.Thpc.WorkspacesInternetAccessible>;
    /**
     * Workspace Login Settings.
     */
    public readonly loginSettings!: pulumi.Output<outputs.Thpc.WorkspacesLoginSettings | undefined>;
    /**
     * The position of the instance. This parameter allows you to specify attributes such as the availability zone, project, and host machine (when creating a sub-instance on CDH) that the instance belongs to. Note: If you do not specify the LaunchTemplate parameter, Placement is a mandatory parameter. If both Placement and LaunchTemplate are passed, the values in Placement override the corresponding values in LaunchTemplate by default.
     */
    public readonly placement!: pulumi.Output<outputs.Thpc.WorkspacesPlacement | undefined>;
    /**
     * CVM instance ID.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * Workspace Security Group.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * Prepaid mode: This refers to the parameters related to the annual and monthly subscription. By this parameter, you can specify the purchase duration of the prepaid instances, whether to set auto-renewal, and other attributes. If the instance's billing mode is prepaid, this parameter is required.
     */
    public readonly spaceChargePrepaid!: pulumi.Output<outputs.Thpc.WorkspacesSpaceChargePrepaid | undefined>;
    /**
     * Workspace billing type.
     */
    public readonly spaceChargeType!: pulumi.Output<string | undefined>;
    /**
     * Workspace Display Name.
     */
    public readonly spaceName!: pulumi.Output<string>;
    /**
     * Workspace specifications.
     */
    public readonly spaceType!: pulumi.Output<string | undefined>;
    /**
     * Workspace system disk information.
     */
    public readonly systemDisk!: pulumi.Output<outputs.Thpc.WorkspacesSystemDisk | undefined>;
    /**
     * Tag Description List.
     */
    public readonly tagSpecifications!: pulumi.Output<outputs.Thpc.WorkspacesTagSpecification[] | undefined>;
    /**
     * User Data for Workspace.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * VPC related information.
     */
    public readonly virtualPrivateCloud!: pulumi.Output<outputs.Thpc.WorkspacesVirtualPrivateCloud | undefined>;

    /**
     * Create a Workspaces resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkspacesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspacesArgs | WorkspacesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspacesState | undefined;
            resourceInputs["camRoleName"] = state ? state.camRoleName : undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["disasterRecoverGroupId"] = state ? state.disasterRecoverGroupId : undefined;
            resourceInputs["enhancedService"] = state ? state.enhancedService : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["hpcClusterId"] = state ? state.hpcClusterId : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["internetAccessible"] = state ? state.internetAccessible : undefined;
            resourceInputs["loginSettings"] = state ? state.loginSettings : undefined;
            resourceInputs["placement"] = state ? state.placement : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["spaceChargePrepaid"] = state ? state.spaceChargePrepaid : undefined;
            resourceInputs["spaceChargeType"] = state ? state.spaceChargeType : undefined;
            resourceInputs["spaceName"] = state ? state.spaceName : undefined;
            resourceInputs["spaceType"] = state ? state.spaceType : undefined;
            resourceInputs["systemDisk"] = state ? state.systemDisk : undefined;
            resourceInputs["tagSpecifications"] = state ? state.tagSpecifications : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["virtualPrivateCloud"] = state ? state.virtualPrivateCloud : undefined;
        } else {
            const args = argsOrState as WorkspacesArgs | undefined;
            resourceInputs["camRoleName"] = args ? args.camRoleName : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["disasterRecoverGroupId"] = args ? args.disasterRecoverGroupId : undefined;
            resourceInputs["enhancedService"] = args ? args.enhancedService : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["hpcClusterId"] = args ? args.hpcClusterId : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["internetAccessible"] = args ? args.internetAccessible : undefined;
            resourceInputs["loginSettings"] = args ? args.loginSettings : undefined;
            resourceInputs["placement"] = args ? args.placement : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["spaceChargePrepaid"] = args ? args.spaceChargePrepaid : undefined;
            resourceInputs["spaceChargeType"] = args ? args.spaceChargeType : undefined;
            resourceInputs["spaceName"] = args ? args.spaceName : undefined;
            resourceInputs["spaceType"] = args ? args.spaceType : undefined;
            resourceInputs["systemDisk"] = args ? args.systemDisk : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["virtualPrivateCloud"] = args ? args.virtualPrivateCloud : undefined;
            resourceInputs["resourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workspaces.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workspaces resources.
 */
export interface WorkspacesState {
    /**
     * CAM role name authorized to access.
     */
    camRoleName?: pulumi.Input<string>;
    /**
     * A string used to ensure the idempotence of the request. This string is generated by the customer and must be unique across different requests, with a maximum length of 64 ASCII characters. If this parameter is not specified, the idempotence of the request cannot be guaranteed. Example value: system-f3827db9-c58a-49cc-bf10-33fc1923a34a.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Workspace data disk information.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.Thpc.WorkspacesDataDisk>[]>;
    /**
     * Placement Group ID.
     */
    disasterRecoverGroupId?: pulumi.Input<string>;
    /**
     * Enhanced Services.
     */
    enhancedService?: pulumi.Input<inputs.Thpc.WorkspacesEnhancedService>;
    /**
     * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Hyper Computing Cluster ID.
     */
    hpcClusterId?: pulumi.Input<string>;
    /**
     * Image ID.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Public network bandwidth settings.
     */
    internetAccessible?: pulumi.Input<inputs.Thpc.WorkspacesInternetAccessible>;
    /**
     * Workspace Login Settings.
     */
    loginSettings?: pulumi.Input<inputs.Thpc.WorkspacesLoginSettings>;
    /**
     * The position of the instance. This parameter allows you to specify attributes such as the availability zone, project, and host machine (when creating a sub-instance on CDH) that the instance belongs to. Note: If you do not specify the LaunchTemplate parameter, Placement is a mandatory parameter. If both Placement and LaunchTemplate are passed, the values in Placement override the corresponding values in LaunchTemplate by default.
     */
    placement?: pulumi.Input<inputs.Thpc.WorkspacesPlacement>;
    /**
     * CVM instance ID.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Workspace Security Group.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Prepaid mode: This refers to the parameters related to the annual and monthly subscription. By this parameter, you can specify the purchase duration of the prepaid instances, whether to set auto-renewal, and other attributes. If the instance's billing mode is prepaid, this parameter is required.
     */
    spaceChargePrepaid?: pulumi.Input<inputs.Thpc.WorkspacesSpaceChargePrepaid>;
    /**
     * Workspace billing type.
     */
    spaceChargeType?: pulumi.Input<string>;
    /**
     * Workspace Display Name.
     */
    spaceName?: pulumi.Input<string>;
    /**
     * Workspace specifications.
     */
    spaceType?: pulumi.Input<string>;
    /**
     * Workspace system disk information.
     */
    systemDisk?: pulumi.Input<inputs.Thpc.WorkspacesSystemDisk>;
    /**
     * Tag Description List.
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.Thpc.WorkspacesTagSpecification>[]>;
    /**
     * User Data for Workspace.
     */
    userData?: pulumi.Input<string>;
    /**
     * VPC related information.
     */
    virtualPrivateCloud?: pulumi.Input<inputs.Thpc.WorkspacesVirtualPrivateCloud>;
}

/**
 * The set of arguments for constructing a Workspaces resource.
 */
export interface WorkspacesArgs {
    /**
     * CAM role name authorized to access.
     */
    camRoleName?: pulumi.Input<string>;
    /**
     * A string used to ensure the idempotence of the request. This string is generated by the customer and must be unique across different requests, with a maximum length of 64 ASCII characters. If this parameter is not specified, the idempotence of the request cannot be guaranteed. Example value: system-f3827db9-c58a-49cc-bf10-33fc1923a34a.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Workspace data disk information.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.Thpc.WorkspacesDataDisk>[]>;
    /**
     * Placement Group ID.
     */
    disasterRecoverGroupId?: pulumi.Input<string>;
    /**
     * Enhanced Services.
     */
    enhancedService?: pulumi.Input<inputs.Thpc.WorkspacesEnhancedService>;
    /**
     * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Hyper Computing Cluster ID.
     */
    hpcClusterId?: pulumi.Input<string>;
    /**
     * Image ID.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Public network bandwidth settings.
     */
    internetAccessible?: pulumi.Input<inputs.Thpc.WorkspacesInternetAccessible>;
    /**
     * Workspace Login Settings.
     */
    loginSettings?: pulumi.Input<inputs.Thpc.WorkspacesLoginSettings>;
    /**
     * The position of the instance. This parameter allows you to specify attributes such as the availability zone, project, and host machine (when creating a sub-instance on CDH) that the instance belongs to. Note: If you do not specify the LaunchTemplate parameter, Placement is a mandatory parameter. If both Placement and LaunchTemplate are passed, the values in Placement override the corresponding values in LaunchTemplate by default.
     */
    placement?: pulumi.Input<inputs.Thpc.WorkspacesPlacement>;
    /**
     * Workspace Security Group.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Prepaid mode: This refers to the parameters related to the annual and monthly subscription. By this parameter, you can specify the purchase duration of the prepaid instances, whether to set auto-renewal, and other attributes. If the instance's billing mode is prepaid, this parameter is required.
     */
    spaceChargePrepaid?: pulumi.Input<inputs.Thpc.WorkspacesSpaceChargePrepaid>;
    /**
     * Workspace billing type.
     */
    spaceChargeType?: pulumi.Input<string>;
    /**
     * Workspace Display Name.
     */
    spaceName?: pulumi.Input<string>;
    /**
     * Workspace specifications.
     */
    spaceType?: pulumi.Input<string>;
    /**
     * Workspace system disk information.
     */
    systemDisk?: pulumi.Input<inputs.Thpc.WorkspacesSystemDisk>;
    /**
     * Tag Description List.
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.Thpc.WorkspacesTagSpecification>[]>;
    /**
     * User Data for Workspace.
     */
    userData?: pulumi.Input<string>;
    /**
     * VPC related information.
     */
    virtualPrivateCloud?: pulumi.Input<inputs.Thpc.WorkspacesVirtualPrivateCloud>;
}
