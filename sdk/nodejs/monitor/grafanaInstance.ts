// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a monitor grafanaInstance
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-6";
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     vpcId: vpc.id,
 *     availabilityZone: availabilityZone,
 *     cidrBlock: "10.0.1.0/24",
 * });
 * const foo = new tencentcloud.monitor.GrafanaInstance("foo", {
 *     instanceName: "test-grafana",
 *     vpcId: vpc.id,
 *     subnetIds: [subnet.id],
 *     grafanaInitPassword: "1234567890",
 *     enableInternet: false,
 *     isDestroy: true,
 *     tags: {
 *         createdBy: "test",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * monitor grafanaInstance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import tencentcloud:Monitor/grafanaInstance:GrafanaInstance foo grafanaInstance_id
 * ```
 */
export class GrafanaInstance extends pulumi.CustomResource {
    /**
     * Get an existing GrafanaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GrafanaInstanceState, opts?: pulumi.CustomResourceOptions): GrafanaInstance {
        return new GrafanaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Monitor/grafanaInstance:GrafanaInstance';

    /**
     * Returns true if the given object is an instance of GrafanaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GrafanaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GrafanaInstance.__pulumiType;
    }

    /**
     * Whether to automatically use vouchers.
     */
    public readonly autoVoucher!: pulumi.Output<boolean | undefined>;
    /**
     * Control whether grafana could be accessed by internet.
     */
    public readonly enableInternet!: pulumi.Output<boolean>;
    /**
     * Grafana server admin password.
     */
    public readonly grafanaInitPassword!: pulumi.Output<string>;
    /**
     * Grafana instance id.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * Instance name.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * Grafana instance status, 1: Creating, 2: Running, 6: Stopped.
     */
    public /*out*/ readonly instanceStatus!: pulumi.Output<number>;
    /**
     * Grafana public address.
     */
    public /*out*/ readonly internalUrl!: pulumi.Output<string>;
    /**
     * Grafana intranet address.
     */
    public /*out*/ readonly internetUrl!: pulumi.Output<string>;
    /**
     * Whether to clean up completely, the default is false.
     */
    public readonly isDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * It has been deprecated from version 1.81.16. Whether to clean up completely, the default is false.
     *
     * @deprecated It has been deprecated from version 1.81.16.
     */
    public readonly isDistroy!: pulumi.Output<boolean | undefined>;
    /**
     * Grafana external url which could be accessed by user.
     */
    public /*out*/ readonly rootUrl!: pulumi.Output<string>;
    /**
     * Subnet Id array.
     */
    public readonly subnetIds!: pulumi.Output<string[]>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Vpc Id.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a GrafanaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GrafanaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GrafanaInstanceArgs | GrafanaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GrafanaInstanceState | undefined;
            resourceInputs["autoVoucher"] = state ? state.autoVoucher : undefined;
            resourceInputs["enableInternet"] = state ? state.enableInternet : undefined;
            resourceInputs["grafanaInitPassword"] = state ? state.grafanaInitPassword : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceStatus"] = state ? state.instanceStatus : undefined;
            resourceInputs["internalUrl"] = state ? state.internalUrl : undefined;
            resourceInputs["internetUrl"] = state ? state.internetUrl : undefined;
            resourceInputs["isDestroy"] = state ? state.isDestroy : undefined;
            resourceInputs["isDistroy"] = state ? state.isDistroy : undefined;
            resourceInputs["rootUrl"] = state ? state.rootUrl : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as GrafanaInstanceArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            resourceInputs["autoVoucher"] = args ? args.autoVoucher : undefined;
            resourceInputs["enableInternet"] = args ? args.enableInternet : undefined;
            resourceInputs["grafanaInitPassword"] = args ? args.grafanaInitPassword : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["isDestroy"] = args ? args.isDestroy : undefined;
            resourceInputs["isDistroy"] = args ? args.isDistroy : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["instanceStatus"] = undefined /*out*/;
            resourceInputs["internalUrl"] = undefined /*out*/;
            resourceInputs["internetUrl"] = undefined /*out*/;
            resourceInputs["rootUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GrafanaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GrafanaInstance resources.
 */
export interface GrafanaInstanceState {
    /**
     * Whether to automatically use vouchers.
     */
    autoVoucher?: pulumi.Input<boolean>;
    /**
     * Control whether grafana could be accessed by internet.
     */
    enableInternet?: pulumi.Input<boolean>;
    /**
     * Grafana server admin password.
     */
    grafanaInitPassword?: pulumi.Input<string>;
    /**
     * Grafana instance id.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Grafana instance status, 1: Creating, 2: Running, 6: Stopped.
     */
    instanceStatus?: pulumi.Input<number>;
    /**
     * Grafana public address.
     */
    internalUrl?: pulumi.Input<string>;
    /**
     * Grafana intranet address.
     */
    internetUrl?: pulumi.Input<string>;
    /**
     * Whether to clean up completely, the default is false.
     */
    isDestroy?: pulumi.Input<boolean>;
    /**
     * It has been deprecated from version 1.81.16. Whether to clean up completely, the default is false.
     *
     * @deprecated It has been deprecated from version 1.81.16.
     */
    isDistroy?: pulumi.Input<boolean>;
    /**
     * Grafana external url which could be accessed by user.
     */
    rootUrl?: pulumi.Input<string>;
    /**
     * Subnet Id array.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Vpc Id.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GrafanaInstance resource.
 */
export interface GrafanaInstanceArgs {
    /**
     * Whether to automatically use vouchers.
     */
    autoVoucher?: pulumi.Input<boolean>;
    /**
     * Control whether grafana could be accessed by internet.
     */
    enableInternet?: pulumi.Input<boolean>;
    /**
     * Grafana server admin password.
     */
    grafanaInitPassword?: pulumi.Input<string>;
    /**
     * Instance name.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Whether to clean up completely, the default is false.
     */
    isDestroy?: pulumi.Input<boolean>;
    /**
     * It has been deprecated from version 1.81.16. Whether to clean up completely, the default is false.
     *
     * @deprecated It has been deprecated from version 1.81.16.
     */
    isDistroy?: pulumi.Input<boolean>;
    /**
     * Subnet Id array.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Vpc Id.
     */
    vpcId?: pulumi.Input<string>;
}
