// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a teo certificate
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const certificate = new tencentcloud.teo.CertificateConfig("certificate", {
 *     host: "test.tencentcloud-terraform-provider.cn",
 *     mode: "eofreecert",
 *     zoneId: "zone-2o1t24kgy362",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Configure SSL certificate
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const certificate = new tencentcloud.teo.CertificateConfig("certificate", {
 *     host: "test.tencentcloud-terraform-provider.cn",
 *     mode: "sslcert",
 *     serverCertInfos: [{
 *         certId: "8xiUJIJd",
 *     }],
 *     zoneId: "zone-2o1t24kgy362",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * teo certificate can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Teo/certificateConfig:CertificateConfig certificate zone_id#host
 * ```
 */
export class CertificateConfig extends pulumi.CustomResource {
    /**
     * Get an existing CertificateConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateConfigState, opts?: pulumi.CustomResourceOptions): CertificateConfig {
        return new CertificateConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/certificateConfig:CertificateConfig';

    /**
     * Returns true if the given object is an instance of CertificateConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CertificateConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateConfig.__pulumiType;
    }

    /**
     * Acceleration domain name that needs to modify the certificate configuration.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * Mode of configuring the certificate, the values are: `disable`: Do not configure the certificate; `eofreecert`: Configure EdgeOne free certificate; `sslcert`: Configure SSL certificate. If not filled in, the default value is `disable`.
     */
    public readonly mode!: pulumi.Output<string>;
    /**
     * SSL certificate configuration, this parameter takes effect only when mode = sslcert, just enter the corresponding CertId. You can go to the SSL certificate list to view the CertId.
     */
    public readonly serverCertInfos!: pulumi.Output<outputs.Teo.CertificateConfigServerCertInfo[]>;
    /**
     * Site ID.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a CertificateConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateConfigArgs | CertificateConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateConfigState | undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["serverCertInfos"] = state ? state.serverCertInfos : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as CertificateConfigArgs | undefined;
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["serverCertInfos"] = args ? args.serverCertInfos : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CertificateConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CertificateConfig resources.
 */
export interface CertificateConfigState {
    /**
     * Acceleration domain name that needs to modify the certificate configuration.
     */
    host?: pulumi.Input<string>;
    /**
     * Mode of configuring the certificate, the values are: `disable`: Do not configure the certificate; `eofreecert`: Configure EdgeOne free certificate; `sslcert`: Configure SSL certificate. If not filled in, the default value is `disable`.
     */
    mode?: pulumi.Input<string>;
    /**
     * SSL certificate configuration, this parameter takes effect only when mode = sslcert, just enter the corresponding CertId. You can go to the SSL certificate list to view the CertId.
     */
    serverCertInfos?: pulumi.Input<pulumi.Input<inputs.Teo.CertificateConfigServerCertInfo>[]>;
    /**
     * Site ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CertificateConfig resource.
 */
export interface CertificateConfigArgs {
    /**
     * Acceleration domain name that needs to modify the certificate configuration.
     */
    host: pulumi.Input<string>;
    /**
     * Mode of configuring the certificate, the values are: `disable`: Do not configure the certificate; `eofreecert`: Configure EdgeOne free certificate; `sslcert`: Configure SSL certificate. If not filled in, the default value is `disable`.
     */
    mode?: pulumi.Input<string>;
    /**
     * SSL certificate configuration, this parameter takes effect only when mode = sslcert, just enter the corresponding CertId. You can go to the SSL certificate list to view the CertId.
     */
    serverCertInfos?: pulumi.Input<pulumi.Input<inputs.Teo.CertificateConfigServerCertInfo>[]>;
    /**
     * Site ID.
     */
    zoneId: pulumi.Input<string>;
}
