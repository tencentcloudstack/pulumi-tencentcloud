// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a teo accelerationDomain
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const accelerationDomain = new tencentcloud.teo.AccelerationDomain("accelerationDomain", {
 *     domainName: "aaa.makn.cn",
 *     originInfo: {
 *         origin: "150.109.8.1",
 *         originType: "IP_DOMAIN",
 *     },
 *     zoneId: "zone-2o0i41pv2h8c",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * teo acceleration_domain can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Teo/accelerationDomain:AccelerationDomain acceleration_domain zone_id#domain_name
 * ```
 */
export class AccelerationDomain extends pulumi.CustomResource {
    /**
     * Get an existing AccelerationDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccelerationDomainState, opts?: pulumi.CustomResourceOptions): AccelerationDomain {
        return new AccelerationDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/accelerationDomain:AccelerationDomain';

    /**
     * Returns true if the given object is an instance of AccelerationDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccelerationDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccelerationDomain.__pulumiType;
    }

    /**
     * CNAME address.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * Accelerated domain name.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * HTTP back-to-origin port, the value is 1-65535, effective when OriginProtocol=FOLLOW/HTTP, if not filled in, the default value is 80.
     */
    public readonly httpOriginPort!: pulumi.Output<number>;
    /**
     * HTTPS back-to-origin port. The value range is 1-65535. It takes effect when OriginProtocol=FOLLOW/HTTPS. If it is not filled in, the default value is 443.
     */
    public readonly httpsOriginPort!: pulumi.Output<number>;
    /**
     * IPv6 status, the value is: `follow`: follow the site IPv6 configuration; `on`: on; `off`: off. If not filled in, the default is: `follow`.
     */
    public readonly ipv6Status!: pulumi.Output<string>;
    /**
     * Details of the origin.
     */
    public readonly originInfo!: pulumi.Output<outputs.Teo.AccelerationDomainOriginInfo>;
    /**
     * Origin return protocol, possible values are: `FOLLOW`: protocol follow; `HTTP`: HTTP protocol back to source; `HTTPS`: HTTPS protocol back to source. If not filled in, the default is: `FOLLOW`.
     */
    public readonly originProtocol!: pulumi.Output<string>;
    /**
     * Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * ID of the site related with the accelerated domain name.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a AccelerationDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccelerationDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccelerationDomainArgs | AccelerationDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccelerationDomainState | undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["httpOriginPort"] = state ? state.httpOriginPort : undefined;
            resourceInputs["httpsOriginPort"] = state ? state.httpsOriginPort : undefined;
            resourceInputs["ipv6Status"] = state ? state.ipv6Status : undefined;
            resourceInputs["originInfo"] = state ? state.originInfo : undefined;
            resourceInputs["originProtocol"] = state ? state.originProtocol : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as AccelerationDomainArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.originInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originInfo'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["httpOriginPort"] = args ? args.httpOriginPort : undefined;
            resourceInputs["httpsOriginPort"] = args ? args.httpsOriginPort : undefined;
            resourceInputs["ipv6Status"] = args ? args.ipv6Status : undefined;
            resourceInputs["originInfo"] = args ? args.originInfo : undefined;
            resourceInputs["originProtocol"] = args ? args.originProtocol : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["cname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccelerationDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccelerationDomain resources.
 */
export interface AccelerationDomainState {
    /**
     * CNAME address.
     */
    cname?: pulumi.Input<string>;
    /**
     * Accelerated domain name.
     */
    domainName?: pulumi.Input<string>;
    /**
     * HTTP back-to-origin port, the value is 1-65535, effective when OriginProtocol=FOLLOW/HTTP, if not filled in, the default value is 80.
     */
    httpOriginPort?: pulumi.Input<number>;
    /**
     * HTTPS back-to-origin port. The value range is 1-65535. It takes effect when OriginProtocol=FOLLOW/HTTPS. If it is not filled in, the default value is 443.
     */
    httpsOriginPort?: pulumi.Input<number>;
    /**
     * IPv6 status, the value is: `follow`: follow the site IPv6 configuration; `on`: on; `off`: off. If not filled in, the default is: `follow`.
     */
    ipv6Status?: pulumi.Input<string>;
    /**
     * Details of the origin.
     */
    originInfo?: pulumi.Input<inputs.Teo.AccelerationDomainOriginInfo>;
    /**
     * Origin return protocol, possible values are: `FOLLOW`: protocol follow; `HTTP`: HTTP protocol back to source; `HTTPS`: HTTPS protocol back to source. If not filled in, the default is: `FOLLOW`.
     */
    originProtocol?: pulumi.Input<string>;
    /**
     * Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * ID of the site related with the accelerated domain name.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccelerationDomain resource.
 */
export interface AccelerationDomainArgs {
    /**
     * Accelerated domain name.
     */
    domainName: pulumi.Input<string>;
    /**
     * HTTP back-to-origin port, the value is 1-65535, effective when OriginProtocol=FOLLOW/HTTP, if not filled in, the default value is 80.
     */
    httpOriginPort?: pulumi.Input<number>;
    /**
     * HTTPS back-to-origin port. The value range is 1-65535. It takes effect when OriginProtocol=FOLLOW/HTTPS. If it is not filled in, the default value is 443.
     */
    httpsOriginPort?: pulumi.Input<number>;
    /**
     * IPv6 status, the value is: `follow`: follow the site IPv6 configuration; `on`: on; `off`: off. If not filled in, the default is: `follow`.
     */
    ipv6Status?: pulumi.Input<string>;
    /**
     * Details of the origin.
     */
    originInfo: pulumi.Input<inputs.Teo.AccelerationDomainOriginInfo>;
    /**
     * Origin return protocol, possible values are: `FOLLOW`: protocol follow; `HTTP`: HTTP protocol back to source; `HTTPS`: HTTPS protocol back to source. If not filled in, the default is: `FOLLOW`.
     */
    originProtocol?: pulumi.Input<string>;
    /**
     * Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * ID of the site related with the accelerated domain name.
     */
    zoneId: pulumi.Input<string>;
}
