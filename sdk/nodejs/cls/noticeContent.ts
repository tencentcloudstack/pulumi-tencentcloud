// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a cls notice content
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.cls.NoticeContent("example", {
 *     noticeContents: {
 *         recoveryContent: {
 *             content: "This is content.",
 *             headers: ["Content-Type:application/json"],
 *             title: "title",
 *         },
 *         triggerContent: {
 *             content: "This is content.",
 *             headers: ["Content-Type:application/json"],
 *             title: "title",
 *         },
 *         type: "Email",
 *     },
 *     type: 0,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * cls notice content can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Cls/noticeContent:NoticeContent example noticetemplate-b417f32a-bdf9-46c5-933e-28c23cd7a6b7
 * ```
 */
export class NoticeContent extends pulumi.CustomResource {
    /**
     * Get an existing NoticeContent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NoticeContentState, opts?: pulumi.CustomResourceOptions): NoticeContent {
        return new NoticeContent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cls/noticeContent:NoticeContent';

    /**
     * Returns true if the given object is an instance of NoticeContent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NoticeContent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NoticeContent.__pulumiType;
    }

    /**
     * Notice content name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Template detailed configuration.
     */
    public readonly noticeContents!: pulumi.Output<outputs.Cls.NoticeContentNoticeContents | undefined>;
    /**
     * Template content language. 0: Chinese 1: English.
     */
    public readonly type!: pulumi.Output<number | undefined>;

    /**
     * Create a NoticeContent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NoticeContentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NoticeContentArgs | NoticeContentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NoticeContentState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noticeContents"] = state ? state.noticeContents : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as NoticeContentArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noticeContents"] = args ? args.noticeContents : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NoticeContent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NoticeContent resources.
 */
export interface NoticeContentState {
    /**
     * Notice content name.
     */
    name?: pulumi.Input<string>;
    /**
     * Template detailed configuration.
     */
    noticeContents?: pulumi.Input<inputs.Cls.NoticeContentNoticeContents>;
    /**
     * Template content language. 0: Chinese 1: English.
     */
    type?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NoticeContent resource.
 */
export interface NoticeContentArgs {
    /**
     * Notice content name.
     */
    name?: pulumi.Input<string>;
    /**
     * Template detailed configuration.
     */
    noticeContents?: pulumi.Input<inputs.Cls.NoticeContentNoticeContents>;
    /**
     * Template content language. 0: Chinese 1: English.
     */
    type?: pulumi.Input<number>;
}
