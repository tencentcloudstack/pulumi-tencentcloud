// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a cls cloud product log task
 *
 * > **NOTE:** Using this resource will create new `logset` and `topic`
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.cls.CloudProductLogTask("example", {
 *     assumerName: "PostgreSQL",
 *     cloudProductRegion: "gz",
 *     clsRegion: "ap-guangzhou",
 *     instanceId: "postgres-1p7xvpc1",
 *     logType: "PostgreSQL-SLOW",
 *     logsetName: "tf-example",
 *     topicName: "tf-example",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * cls cloud product log task can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Cls/cloudProductLogTask:CloudProductLogTask example postgres-1p7xvpc1#PostgreSQL#PostgreSQL-SLOW#gz
 * ```
 */
export class CloudProductLogTask extends pulumi.CustomResource {
    /**
     * Get an existing CloudProductLogTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProductLogTaskState, opts?: pulumi.CustomResourceOptions): CloudProductLogTask {
        return new CloudProductLogTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cls/cloudProductLogTask:CloudProductLogTask';

    /**
     * Returns true if the given object is an instance of CloudProductLogTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudProductLogTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProductLogTask.__pulumiType;
    }

    /**
     * Cloud product identification, Values: CDS, CWP, CDB, TDSQL-C, MongoDB, TDStore, DCDB, MariaDB, PostgreSQL, BH, APIS.
     */
    public readonly assumerName!: pulumi.Output<string>;
    /**
     * Cloud product region. There are differences in the input format of different log types in different regions. Please refer to the following example:
     * - CDS(all log type): ap-guangzhou
     * - CDB-AUDIT: gz
     * - TDSQL-C-AUDIT: gz
     * - MongoDB-AUDIT: gz
     * - MongoDB-SlowLog: ap-guangzhou
     * - MongoDB-ErrorLog: ap-guangzhou
     * - TDMYSQL-SLOW: gz
     * - DCDB(all log type): gz
     * - MariaDB(all log type): gz
     * - PostgreSQL(all log type): gz
     * - BH(all log type): overseas-polaris(Domestic sites overseas)/fsi-polaris(Domestic sites finance)/general-polaris(Domestic sites)/intl-sg-prod(International sites)
     * - APIS(all log type): gz.
     */
    public readonly cloudProductRegion!: pulumi.Output<string>;
    /**
     * CLS target region.
     */
    public readonly clsRegion!: pulumi.Output<string>;
    /**
     * Log configuration extension information, generally used to store additional log delivery configurations.
     */
    public readonly extend!: pulumi.Output<string | undefined>;
    /**
     * Instance ID.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Log type, Values: CDS-AUDIT, CDS-RISK, CDB-AUDIT, TDSQL-C-AUDIT, MongoDB-AUDIT, MongoDB-SlowLog, MongoDB-ErrorLog, TDMYSQL-SLOW, DCDB-AUDIT, DCDB-SLOW, DCDB-ERROR, MariaDB-AUDIT, MariaDB-SLOW, MariaDB-ERROR, PostgreSQL-SLOW, PostgreSQL-ERROR, PostgreSQL-AUDIT, BH-FILELOG, BH-COMMANDLOG, APIS-ACCESS.
     */
    public readonly logType!: pulumi.Output<string>;
    /**
     * Log set ID.
     */
    public /*out*/ readonly logsetId!: pulumi.Output<string>;
    /**
     * Log set name, it will be automatically created.
     */
    public readonly logsetName!: pulumi.Output<string | undefined>;
    /**
     * Log theme ID.
     */
    public /*out*/ readonly topicId!: pulumi.Output<string>;
    /**
     * The name of the log topic, it will be automatically created.
     */
    public readonly topicName!: pulumi.Output<string | undefined>;

    /**
     * Create a CloudProductLogTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProductLogTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudProductLogTaskArgs | CloudProductLogTaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudProductLogTaskState | undefined;
            resourceInputs["assumerName"] = state ? state.assumerName : undefined;
            resourceInputs["cloudProductRegion"] = state ? state.cloudProductRegion : undefined;
            resourceInputs["clsRegion"] = state ? state.clsRegion : undefined;
            resourceInputs["extend"] = state ? state.extend : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["logType"] = state ? state.logType : undefined;
            resourceInputs["logsetId"] = state ? state.logsetId : undefined;
            resourceInputs["logsetName"] = state ? state.logsetName : undefined;
            resourceInputs["topicId"] = state ? state.topicId : undefined;
            resourceInputs["topicName"] = state ? state.topicName : undefined;
        } else {
            const args = argsOrState as CloudProductLogTaskArgs | undefined;
            if ((!args || args.assumerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assumerName'");
            }
            if ((!args || args.cloudProductRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProductRegion'");
            }
            if ((!args || args.clsRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clsRegion'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.logType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logType'");
            }
            resourceInputs["assumerName"] = args ? args.assumerName : undefined;
            resourceInputs["cloudProductRegion"] = args ? args.cloudProductRegion : undefined;
            resourceInputs["clsRegion"] = args ? args.clsRegion : undefined;
            resourceInputs["extend"] = args ? args.extend : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["logType"] = args ? args.logType : undefined;
            resourceInputs["logsetName"] = args ? args.logsetName : undefined;
            resourceInputs["topicName"] = args ? args.topicName : undefined;
            resourceInputs["logsetId"] = undefined /*out*/;
            resourceInputs["topicId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudProductLogTask.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudProductLogTask resources.
 */
export interface CloudProductLogTaskState {
    /**
     * Cloud product identification, Values: CDS, CWP, CDB, TDSQL-C, MongoDB, TDStore, DCDB, MariaDB, PostgreSQL, BH, APIS.
     */
    assumerName?: pulumi.Input<string>;
    /**
     * Cloud product region. There are differences in the input format of different log types in different regions. Please refer to the following example:
     * - CDS(all log type): ap-guangzhou
     * - CDB-AUDIT: gz
     * - TDSQL-C-AUDIT: gz
     * - MongoDB-AUDIT: gz
     * - MongoDB-SlowLog: ap-guangzhou
     * - MongoDB-ErrorLog: ap-guangzhou
     * - TDMYSQL-SLOW: gz
     * - DCDB(all log type): gz
     * - MariaDB(all log type): gz
     * - PostgreSQL(all log type): gz
     * - BH(all log type): overseas-polaris(Domestic sites overseas)/fsi-polaris(Domestic sites finance)/general-polaris(Domestic sites)/intl-sg-prod(International sites)
     * - APIS(all log type): gz.
     */
    cloudProductRegion?: pulumi.Input<string>;
    /**
     * CLS target region.
     */
    clsRegion?: pulumi.Input<string>;
    /**
     * Log configuration extension information, generally used to store additional log delivery configurations.
     */
    extend?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Log type, Values: CDS-AUDIT, CDS-RISK, CDB-AUDIT, TDSQL-C-AUDIT, MongoDB-AUDIT, MongoDB-SlowLog, MongoDB-ErrorLog, TDMYSQL-SLOW, DCDB-AUDIT, DCDB-SLOW, DCDB-ERROR, MariaDB-AUDIT, MariaDB-SLOW, MariaDB-ERROR, PostgreSQL-SLOW, PostgreSQL-ERROR, PostgreSQL-AUDIT, BH-FILELOG, BH-COMMANDLOG, APIS-ACCESS.
     */
    logType?: pulumi.Input<string>;
    /**
     * Log set ID.
     */
    logsetId?: pulumi.Input<string>;
    /**
     * Log set name, it will be automatically created.
     */
    logsetName?: pulumi.Input<string>;
    /**
     * Log theme ID.
     */
    topicId?: pulumi.Input<string>;
    /**
     * The name of the log topic, it will be automatically created.
     */
    topicName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudProductLogTask resource.
 */
export interface CloudProductLogTaskArgs {
    /**
     * Cloud product identification, Values: CDS, CWP, CDB, TDSQL-C, MongoDB, TDStore, DCDB, MariaDB, PostgreSQL, BH, APIS.
     */
    assumerName: pulumi.Input<string>;
    /**
     * Cloud product region. There are differences in the input format of different log types in different regions. Please refer to the following example:
     * - CDS(all log type): ap-guangzhou
     * - CDB-AUDIT: gz
     * - TDSQL-C-AUDIT: gz
     * - MongoDB-AUDIT: gz
     * - MongoDB-SlowLog: ap-guangzhou
     * - MongoDB-ErrorLog: ap-guangzhou
     * - TDMYSQL-SLOW: gz
     * - DCDB(all log type): gz
     * - MariaDB(all log type): gz
     * - PostgreSQL(all log type): gz
     * - BH(all log type): overseas-polaris(Domestic sites overseas)/fsi-polaris(Domestic sites finance)/general-polaris(Domestic sites)/intl-sg-prod(International sites)
     * - APIS(all log type): gz.
     */
    cloudProductRegion: pulumi.Input<string>;
    /**
     * CLS target region.
     */
    clsRegion: pulumi.Input<string>;
    /**
     * Log configuration extension information, generally used to store additional log delivery configurations.
     */
    extend?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Log type, Values: CDS-AUDIT, CDS-RISK, CDB-AUDIT, TDSQL-C-AUDIT, MongoDB-AUDIT, MongoDB-SlowLog, MongoDB-ErrorLog, TDMYSQL-SLOW, DCDB-AUDIT, DCDB-SLOW, DCDB-ERROR, MariaDB-AUDIT, MariaDB-SLOW, MariaDB-ERROR, PostgreSQL-SLOW, PostgreSQL-ERROR, PostgreSQL-AUDIT, BH-FILELOG, BH-COMMANDLOG, APIS-ACCESS.
     */
    logType: pulumi.Input<string>;
    /**
     * Log set name, it will be automatically created.
     */
    logsetName?: pulumi.Input<string>;
    /**
     * The name of the log topic, it will be automatically created.
     */
    topicName?: pulumi.Input<string>;
}
