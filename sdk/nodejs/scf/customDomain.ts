// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a scf custom domain
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const scfCustomDomain = new tencentcloud.scf.CustomDomain("scfCustomDomain", {
 *     domain: "xxxxxx",
 *     endpointsConfigs: [{
 *         functionName: "xxxxxx",
 *         namespace: "default",
 *         pathMatch: "/aa/*",
 *         qualifier: "$LATEST",
 *     }],
 *     protocol: "HTTP",
 *     wafConfig: {
 *         wafOpen: "CLOSE",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * scf scf_custom_domain can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Scf/customDomain:CustomDomain scf_custom_domain ${domain}
 * ```
 */
export class CustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing CustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDomainState, opts?: pulumi.CustomResourceOptions): CustomDomain {
        return new CustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Scf/customDomain:CustomDomain';

    /**
     * Returns true if the given object is an instance of CustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomDomain.__pulumiType;
    }

    /**
     * Certificate configuration information, required for HTTPS protocol.
     */
    public readonly certConfig!: pulumi.Output<outputs.Scf.CustomDomainCertConfig>;
    /**
     * Domain names, pan-domain names are not supported.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Routing configuration.
     */
    public readonly endpointsConfigs!: pulumi.Output<outputs.Scf.CustomDomainEndpointsConfig[]>;
    /**
     * Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * Web Application Firewall Configuration.
     */
    public readonly wafConfig!: pulumi.Output<outputs.Scf.CustomDomainWafConfig>;

    /**
     * Create a CustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomDomainArgs | CustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomDomainState | undefined;
            resourceInputs["certConfig"] = state ? state.certConfig : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["endpointsConfigs"] = state ? state.endpointsConfigs : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["wafConfig"] = state ? state.wafConfig : undefined;
        } else {
            const args = argsOrState as CustomDomainArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.endpointsConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointsConfigs'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["certConfig"] = args ? args.certConfig : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["endpointsConfigs"] = args ? args.endpointsConfigs : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["wafConfig"] = args ? args.wafConfig : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomDomain resources.
 */
export interface CustomDomainState {
    /**
     * Certificate configuration information, required for HTTPS protocol.
     */
    certConfig?: pulumi.Input<inputs.Scf.CustomDomainCertConfig>;
    /**
     * Domain names, pan-domain names are not supported.
     */
    domain?: pulumi.Input<string>;
    /**
     * Routing configuration.
     */
    endpointsConfigs?: pulumi.Input<pulumi.Input<inputs.Scf.CustomDomainEndpointsConfig>[]>;
    /**
     * Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Web Application Firewall Configuration.
     */
    wafConfig?: pulumi.Input<inputs.Scf.CustomDomainWafConfig>;
}

/**
 * The set of arguments for constructing a CustomDomain resource.
 */
export interface CustomDomainArgs {
    /**
     * Certificate configuration information, required for HTTPS protocol.
     */
    certConfig?: pulumi.Input<inputs.Scf.CustomDomainCertConfig>;
    /**
     * Domain names, pan-domain names are not supported.
     */
    domain: pulumi.Input<string>;
    /**
     * Routing configuration.
     */
    endpointsConfigs: pulumi.Input<pulumi.Input<inputs.Scf.CustomDomainEndpointsConfig>[]>;
    /**
     * Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
     */
    protocol: pulumi.Input<string>;
    /**
     * Web Application Firewall Configuration.
     */
    wafConfig?: pulumi.Input<inputs.Scf.CustomDomainWafConfig>;
}
