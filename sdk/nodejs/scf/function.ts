// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provide a resource to create a SCF function.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const foo = new tencentcloud.scf.Function("foo", {
 *     cosBucketName: "scf-code-1234567890",
 *     cosBucketRegion: "ap-guangzhou",
 *     cosObjectName: "code.zip",
 *     handler: "main.do_it",
 *     runtime: "Python3.6",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using Zip file
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const foo = new tencentcloud.scf.Function("foo", {
 *     dnsCache: true,
 *     enablePublicNet: true,
 *     handler: "first.do_it_first",
 *     intranetConfig: {
 *         ipFixed: "ENABLE",
 *     },
 *     runtime: "Python3.6",
 *     subnetId: "subnet-ljyn7h30",
 *     tags: {
 *         env: "test",
 *     },
 *     vpcId: "vpc-391sv4w3",
 *     zipFile: "/scf/first.zip",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using CFS config
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const foo = new tencentcloud.scf.Function("foo", {
 *     cfsConfigs: [{
 *         cfsId: "cfs-xxxxxxxx",
 *         localMountDir: "/mnt",
 *         mountInsId: "cfs-xxxxxxxx",
 *         remoteMountDir: "/",
 *         userGroupId: "10000",
 *         userId: "10000",
 *     }],
 *     handler: "main.do_it",
 *     runtime: "Python3.6",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using triggers
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const foo = new tencentcloud.scf.Function("foo", {
 *     handler: "first.do_it_first",
 *     runtime: "Python3.6",
 *     enablePublicNet: true,
 *     zipFile: "/scf/first.zip",
 *     triggers: [
 *         {
 *             name: "tf-test-fn-trigger",
 *             type: "timer",
 *             triggerDesc: "*&#47;5 * * * * * *",
 *         },
 *         {
 *             name: "scf-bucket-1308919341.cos.ap-guangzhou.myqcloud.com",
 *             cosRegion: "ap-guangzhou",
 *             type: "cos",
 *             triggerDesc: "{\"event\":\"cos:ObjectCreated:Put\",\"filter\":{\"Prefix\":\"\",\"Suffix\":\"\"}}",
 *         },
 *         {
 *             name: "tf-test-fn-trigger",
 *             type: "http",
 *             triggerDesc: JSON.stringify({
 *                 AuthType: "NONE",
 *                 NetConfig: {
 *                     EnableIntranet: true,
 *                     EnableExtranet: false,
 *                 },
 *             }),
 *         },
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * SCF function can be imported, e.g.
 *
 * -> __NOTE:__ function id is `<function namespace>+<function name>`
 *
 * ```sh
 * $ pulumi import tencentcloud:Scf/function:Function test default+test
 * ```
 */
export class Function extends pulumi.CustomResource {
    /**
     * Get an existing Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionState, opts?: pulumi.CustomResourceOptions): Function {
        return new Function(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Scf/function:Function';

    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Function {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Function.__pulumiType;
    }

    /**
     * Whether SCF function asynchronous attribute is enabled. `TRUE` is open, `FALSE` is close.
     */
    public readonly asyncRunEnable!: pulumi.Output<string>;
    /**
     * List of CFS configurations.
     */
    public readonly cfsConfigs!: pulumi.Output<outputs.Scf.FunctionCfsConfig[] | undefined>;
    /**
     * cls logset id of the SCF function.
     */
    public readonly clsLogsetId!: pulumi.Output<string>;
    /**
     * cls topic id of the SCF function.
     */
    public readonly clsTopicId!: pulumi.Output<string>;
    /**
     * SCF function code error message.
     */
    public /*out*/ readonly codeError!: pulumi.Output<string>;
    /**
     * SCF function code is correct.
     */
    public /*out*/ readonly codeResult!: pulumi.Output<string>;
    /**
     * SCF function code size, unit is M.
     */
    public /*out*/ readonly codeSize!: pulumi.Output<number>;
    /**
     * Cos bucket name of the SCF function, such as `cos-1234567890`, conflict with `zipFile`.
     */
    public readonly cosBucketName!: pulumi.Output<string | undefined>;
    /**
     * Cos bucket region of the SCF function, conflict with `zipFile`.
     */
    public readonly cosBucketRegion!: pulumi.Output<string | undefined>;
    /**
     * Cos object name of the SCF function, should have suffix `.zip` or `.jar`, conflict with `zipFile`.
     */
    public readonly cosObjectName!: pulumi.Output<string | undefined>;
    /**
     * Description of the SCF function. Description supports English letters, numbers, spaces, commas, newlines, periods and Chinese, the maximum length is 1000.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether to enable Dns caching capability, only the EVENT function is supported. Default is false.
     */
    public readonly dnsCache!: pulumi.Output<boolean | undefined>;
    /**
     * Whether EIP is a fixed IP.
     */
    public /*out*/ readonly eipFixed!: pulumi.Output<boolean>;
    /**
     * SCF function EIP list.
     */
    public /*out*/ readonly eips!: pulumi.Output<string[]>;
    /**
     * Indicates whether EIP config set to `ENABLE` when `enablePublicNet` was true. Default `false`.
     */
    public readonly enableEipConfig!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether public net config enabled. Default `false`. NOTE: only `vpcId` specified can disable public net config.
     */
    public readonly enablePublicNet!: pulumi.Output<boolean | undefined>;
    /**
     * Environment of the SCF function.
     */
    public readonly environment!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * SCF function code error code.
     */
    public /*out*/ readonly errNo!: pulumi.Output<number>;
    /**
     * Function type. The default value is Event. Enter Event if you need to create a trigger function. Enter HTTP if you need to create an HTTP function service.
     */
    public readonly funcType!: pulumi.Output<string | undefined>;
    /**
     * function ID.
     */
    public /*out*/ readonly functionId!: pulumi.Output<string>;
    /**
     * Handler of the SCF function. The format of name is `<filename>.<method_name>`, and it supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
     */
    public readonly handler!: pulumi.Output<string | undefined>;
    /**
     * SCF function domain name.
     */
    public /*out*/ readonly host!: pulumi.Output<string>;
    /**
     * Image of the SCF function, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`, `zipFile`.
     */
    public readonly imageConfigs!: pulumi.Output<outputs.Scf.FunctionImageConfig[] | undefined>;
    /**
     * Whether to automatically install dependencies.
     */
    public /*out*/ readonly installDependency!: pulumi.Output<boolean>;
    /**
     * Intranet access configuration.
     */
    public readonly intranetConfig!: pulumi.Output<outputs.Scf.FunctionIntranetConfig>;
    /**
     * Enable L5 for SCF function, default is `false`.
     */
    public readonly l5Enable!: pulumi.Output<boolean | undefined>;
    /**
     * The list of association layers.
     */
    public readonly layers!: pulumi.Output<outputs.Scf.FunctionLayer[] | undefined>;
    /**
     * Memory size of the SCF function, unit is MB. The default is `128`MB. The ladder is 128M.
     */
    public readonly memSize!: pulumi.Output<number | undefined>;
    /**
     * Modify time of SCF function trigger.
     */
    public /*out*/ readonly modifyTime!: pulumi.Output<string>;
    /**
     * Name of the SCF function. Name supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Namespace of the SCF function, default is `default`.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Role of the SCF function.
     */
    public readonly role!: pulumi.Output<string | undefined>;
    /**
     * Runtime of the SCF function, only supports `Python2.7`, `Python3.6`, `Nodejs6.10`, `Nodejs8.9`, `Nodejs10.15`, `Nodejs12.16`, `Php5.2`, `Php7.4`, `Go1`, `Java8`, and `CustomRuntime`, default is `Python2.7`.
     */
    public readonly runtime!: pulumi.Output<string | undefined>;
    /**
     * SCF function status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * SCF status description.
     */
    public /*out*/ readonly statusDesc!: pulumi.Output<string>;
    /**
     * Subnet ID of the SCF function.
     */
    public readonly subnetId!: pulumi.Output<string | undefined>;
    /**
     * Tags of the SCF function.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Timeout of the SCF function, unit is second. Default `3`. Available value is 1-900.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * SCF trigger details list. Each element contains the following attributes:
     */
    public /*out*/ readonly triggerInfos!: pulumi.Output<outputs.Scf.FunctionTriggerInfo[]>;
    /**
     * Trigger list of the SCF function, note that if you modify the trigger list, all existing triggers will be deleted, and then create triggers in the new list. Each element contains the following attributes:
     */
    public readonly triggers!: pulumi.Output<outputs.Scf.FunctionTrigger[] | undefined>;
    /**
     * SCF function vip.
     */
    public /*out*/ readonly vip!: pulumi.Output<string>;
    /**
     * VPC ID of the SCF function.
     */
    public readonly vpcId!: pulumi.Output<string | undefined>;
    /**
     * Zip file of the SCF function, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`.
     */
    public readonly zipFile!: pulumi.Output<string | undefined>;

    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FunctionArgs | FunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FunctionState | undefined;
            resourceInputs["asyncRunEnable"] = state ? state.asyncRunEnable : undefined;
            resourceInputs["cfsConfigs"] = state ? state.cfsConfigs : undefined;
            resourceInputs["clsLogsetId"] = state ? state.clsLogsetId : undefined;
            resourceInputs["clsTopicId"] = state ? state.clsTopicId : undefined;
            resourceInputs["codeError"] = state ? state.codeError : undefined;
            resourceInputs["codeResult"] = state ? state.codeResult : undefined;
            resourceInputs["codeSize"] = state ? state.codeSize : undefined;
            resourceInputs["cosBucketName"] = state ? state.cosBucketName : undefined;
            resourceInputs["cosBucketRegion"] = state ? state.cosBucketRegion : undefined;
            resourceInputs["cosObjectName"] = state ? state.cosObjectName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsCache"] = state ? state.dnsCache : undefined;
            resourceInputs["eipFixed"] = state ? state.eipFixed : undefined;
            resourceInputs["eips"] = state ? state.eips : undefined;
            resourceInputs["enableEipConfig"] = state ? state.enableEipConfig : undefined;
            resourceInputs["enablePublicNet"] = state ? state.enablePublicNet : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["errNo"] = state ? state.errNo : undefined;
            resourceInputs["funcType"] = state ? state.funcType : undefined;
            resourceInputs["functionId"] = state ? state.functionId : undefined;
            resourceInputs["handler"] = state ? state.handler : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["imageConfigs"] = state ? state.imageConfigs : undefined;
            resourceInputs["installDependency"] = state ? state.installDependency : undefined;
            resourceInputs["intranetConfig"] = state ? state.intranetConfig : undefined;
            resourceInputs["l5Enable"] = state ? state.l5Enable : undefined;
            resourceInputs["layers"] = state ? state.layers : undefined;
            resourceInputs["memSize"] = state ? state.memSize : undefined;
            resourceInputs["modifyTime"] = state ? state.modifyTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["runtime"] = state ? state.runtime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusDesc"] = state ? state.statusDesc : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["triggerInfos"] = state ? state.triggerInfos : undefined;
            resourceInputs["triggers"] = state ? state.triggers : undefined;
            resourceInputs["vip"] = state ? state.vip : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zipFile"] = state ? state.zipFile : undefined;
        } else {
            const args = argsOrState as FunctionArgs | undefined;
            resourceInputs["asyncRunEnable"] = args ? args.asyncRunEnable : undefined;
            resourceInputs["cfsConfigs"] = args ? args.cfsConfigs : undefined;
            resourceInputs["clsLogsetId"] = args ? args.clsLogsetId : undefined;
            resourceInputs["clsTopicId"] = args ? args.clsTopicId : undefined;
            resourceInputs["cosBucketName"] = args ? args.cosBucketName : undefined;
            resourceInputs["cosBucketRegion"] = args ? args.cosBucketRegion : undefined;
            resourceInputs["cosObjectName"] = args ? args.cosObjectName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsCache"] = args ? args.dnsCache : undefined;
            resourceInputs["enableEipConfig"] = args ? args.enableEipConfig : undefined;
            resourceInputs["enablePublicNet"] = args ? args.enablePublicNet : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["funcType"] = args ? args.funcType : undefined;
            resourceInputs["handler"] = args ? args.handler : undefined;
            resourceInputs["imageConfigs"] = args ? args.imageConfigs : undefined;
            resourceInputs["intranetConfig"] = args ? args.intranetConfig : undefined;
            resourceInputs["l5Enable"] = args ? args.l5Enable : undefined;
            resourceInputs["layers"] = args ? args.layers : undefined;
            resourceInputs["memSize"] = args ? args.memSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["runtime"] = args ? args.runtime : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["triggers"] = args ? args.triggers : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zipFile"] = args ? args.zipFile : undefined;
            resourceInputs["codeError"] = undefined /*out*/;
            resourceInputs["codeResult"] = undefined /*out*/;
            resourceInputs["codeSize"] = undefined /*out*/;
            resourceInputs["eipFixed"] = undefined /*out*/;
            resourceInputs["eips"] = undefined /*out*/;
            resourceInputs["errNo"] = undefined /*out*/;
            resourceInputs["functionId"] = undefined /*out*/;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["installDependency"] = undefined /*out*/;
            resourceInputs["modifyTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusDesc"] = undefined /*out*/;
            resourceInputs["triggerInfos"] = undefined /*out*/;
            resourceInputs["vip"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Function.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Function resources.
 */
export interface FunctionState {
    /**
     * Whether SCF function asynchronous attribute is enabled. `TRUE` is open, `FALSE` is close.
     */
    asyncRunEnable?: pulumi.Input<string>;
    /**
     * List of CFS configurations.
     */
    cfsConfigs?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionCfsConfig>[]>;
    /**
     * cls logset id of the SCF function.
     */
    clsLogsetId?: pulumi.Input<string>;
    /**
     * cls topic id of the SCF function.
     */
    clsTopicId?: pulumi.Input<string>;
    /**
     * SCF function code error message.
     */
    codeError?: pulumi.Input<string>;
    /**
     * SCF function code is correct.
     */
    codeResult?: pulumi.Input<string>;
    /**
     * SCF function code size, unit is M.
     */
    codeSize?: pulumi.Input<number>;
    /**
     * Cos bucket name of the SCF function, such as `cos-1234567890`, conflict with `zipFile`.
     */
    cosBucketName?: pulumi.Input<string>;
    /**
     * Cos bucket region of the SCF function, conflict with `zipFile`.
     */
    cosBucketRegion?: pulumi.Input<string>;
    /**
     * Cos object name of the SCF function, should have suffix `.zip` or `.jar`, conflict with `zipFile`.
     */
    cosObjectName?: pulumi.Input<string>;
    /**
     * Description of the SCF function. Description supports English letters, numbers, spaces, commas, newlines, periods and Chinese, the maximum length is 1000.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable Dns caching capability, only the EVENT function is supported. Default is false.
     */
    dnsCache?: pulumi.Input<boolean>;
    /**
     * Whether EIP is a fixed IP.
     */
    eipFixed?: pulumi.Input<boolean>;
    /**
     * SCF function EIP list.
     */
    eips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether EIP config set to `ENABLE` when `enablePublicNet` was true. Default `false`.
     */
    enableEipConfig?: pulumi.Input<boolean>;
    /**
     * Indicates whether public net config enabled. Default `false`. NOTE: only `vpcId` specified can disable public net config.
     */
    enablePublicNet?: pulumi.Input<boolean>;
    /**
     * Environment of the SCF function.
     */
    environment?: pulumi.Input<{[key: string]: any}>;
    /**
     * SCF function code error code.
     */
    errNo?: pulumi.Input<number>;
    /**
     * Function type. The default value is Event. Enter Event if you need to create a trigger function. Enter HTTP if you need to create an HTTP function service.
     */
    funcType?: pulumi.Input<string>;
    /**
     * function ID.
     */
    functionId?: pulumi.Input<string>;
    /**
     * Handler of the SCF function. The format of name is `<filename>.<method_name>`, and it supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
     */
    handler?: pulumi.Input<string>;
    /**
     * SCF function domain name.
     */
    host?: pulumi.Input<string>;
    /**
     * Image of the SCF function, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`, `zipFile`.
     */
    imageConfigs?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionImageConfig>[]>;
    /**
     * Whether to automatically install dependencies.
     */
    installDependency?: pulumi.Input<boolean>;
    /**
     * Intranet access configuration.
     */
    intranetConfig?: pulumi.Input<inputs.Scf.FunctionIntranetConfig>;
    /**
     * Enable L5 for SCF function, default is `false`.
     */
    l5Enable?: pulumi.Input<boolean>;
    /**
     * The list of association layers.
     */
    layers?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionLayer>[]>;
    /**
     * Memory size of the SCF function, unit is MB. The default is `128`MB. The ladder is 128M.
     */
    memSize?: pulumi.Input<number>;
    /**
     * Modify time of SCF function trigger.
     */
    modifyTime?: pulumi.Input<string>;
    /**
     * Name of the SCF function. Name supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace of the SCF function, default is `default`.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Role of the SCF function.
     */
    role?: pulumi.Input<string>;
    /**
     * Runtime of the SCF function, only supports `Python2.7`, `Python3.6`, `Nodejs6.10`, `Nodejs8.9`, `Nodejs10.15`, `Nodejs12.16`, `Php5.2`, `Php7.4`, `Go1`, `Java8`, and `CustomRuntime`, default is `Python2.7`.
     */
    runtime?: pulumi.Input<string>;
    /**
     * SCF function status.
     */
    status?: pulumi.Input<string>;
    /**
     * SCF status description.
     */
    statusDesc?: pulumi.Input<string>;
    /**
     * Subnet ID of the SCF function.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags of the SCF function.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Timeout of the SCF function, unit is second. Default `3`. Available value is 1-900.
     */
    timeout?: pulumi.Input<number>;
    /**
     * SCF trigger details list. Each element contains the following attributes:
     */
    triggerInfos?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionTriggerInfo>[]>;
    /**
     * Trigger list of the SCF function, note that if you modify the trigger list, all existing triggers will be deleted, and then create triggers in the new list. Each element contains the following attributes:
     */
    triggers?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionTrigger>[]>;
    /**
     * SCF function vip.
     */
    vip?: pulumi.Input<string>;
    /**
     * VPC ID of the SCF function.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Zip file of the SCF function, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`.
     */
    zipFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    /**
     * Whether SCF function asynchronous attribute is enabled. `TRUE` is open, `FALSE` is close.
     */
    asyncRunEnable?: pulumi.Input<string>;
    /**
     * List of CFS configurations.
     */
    cfsConfigs?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionCfsConfig>[]>;
    /**
     * cls logset id of the SCF function.
     */
    clsLogsetId?: pulumi.Input<string>;
    /**
     * cls topic id of the SCF function.
     */
    clsTopicId?: pulumi.Input<string>;
    /**
     * Cos bucket name of the SCF function, such as `cos-1234567890`, conflict with `zipFile`.
     */
    cosBucketName?: pulumi.Input<string>;
    /**
     * Cos bucket region of the SCF function, conflict with `zipFile`.
     */
    cosBucketRegion?: pulumi.Input<string>;
    /**
     * Cos object name of the SCF function, should have suffix `.zip` or `.jar`, conflict with `zipFile`.
     */
    cosObjectName?: pulumi.Input<string>;
    /**
     * Description of the SCF function. Description supports English letters, numbers, spaces, commas, newlines, periods and Chinese, the maximum length is 1000.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable Dns caching capability, only the EVENT function is supported. Default is false.
     */
    dnsCache?: pulumi.Input<boolean>;
    /**
     * Indicates whether EIP config set to `ENABLE` when `enablePublicNet` was true. Default `false`.
     */
    enableEipConfig?: pulumi.Input<boolean>;
    /**
     * Indicates whether public net config enabled. Default `false`. NOTE: only `vpcId` specified can disable public net config.
     */
    enablePublicNet?: pulumi.Input<boolean>;
    /**
     * Environment of the SCF function.
     */
    environment?: pulumi.Input<{[key: string]: any}>;
    /**
     * Function type. The default value is Event. Enter Event if you need to create a trigger function. Enter HTTP if you need to create an HTTP function service.
     */
    funcType?: pulumi.Input<string>;
    /**
     * Handler of the SCF function. The format of name is `<filename>.<method_name>`, and it supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
     */
    handler?: pulumi.Input<string>;
    /**
     * Image of the SCF function, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`, `zipFile`.
     */
    imageConfigs?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionImageConfig>[]>;
    /**
     * Intranet access configuration.
     */
    intranetConfig?: pulumi.Input<inputs.Scf.FunctionIntranetConfig>;
    /**
     * Enable L5 for SCF function, default is `false`.
     */
    l5Enable?: pulumi.Input<boolean>;
    /**
     * The list of association layers.
     */
    layers?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionLayer>[]>;
    /**
     * Memory size of the SCF function, unit is MB. The default is `128`MB. The ladder is 128M.
     */
    memSize?: pulumi.Input<number>;
    /**
     * Name of the SCF function. Name supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace of the SCF function, default is `default`.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Role of the SCF function.
     */
    role?: pulumi.Input<string>;
    /**
     * Runtime of the SCF function, only supports `Python2.7`, `Python3.6`, `Nodejs6.10`, `Nodejs8.9`, `Nodejs10.15`, `Nodejs12.16`, `Php5.2`, `Php7.4`, `Go1`, `Java8`, and `CustomRuntime`, default is `Python2.7`.
     */
    runtime?: pulumi.Input<string>;
    /**
     * Subnet ID of the SCF function.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags of the SCF function.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Timeout of the SCF function, unit is second. Default `3`. Available value is 1-900.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Trigger list of the SCF function, note that if you modify the trigger list, all existing triggers will be deleted, and then create triggers in the new list. Each element contains the following attributes:
     */
    triggers?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionTrigger>[]>;
    /**
     * VPC ID of the SCF function.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Zip file of the SCF function, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`.
     */
    zipFile?: pulumi.Input<string>;
}
