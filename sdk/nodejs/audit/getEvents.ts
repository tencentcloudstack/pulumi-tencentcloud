// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query the events list supported by the audit.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const events = tencentcloud.Audit.getEvents({
 *     endTime: 1727437441,
 *     isReturnLocation: 1,
 *     lookupAttributes: [
 *         {
 *             attributeKey: "ResourceType",
 *             attributeValue: "cvm",
 *         },
 *         {
 *             attributeKey: "OnlyRecordNotSeen",
 *             attributeValue: "0",
 *         },
 *         {
 *             attributeKey: "EventPlatform",
 *             attributeValue: "0",
 *         },
 *     ],
 *     maxResults: 50,
 *     startTime: 1727433841,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEvents(args: GetEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Audit/getEvents:getEvents", {
        "endTime": args.endTime,
        "isReturnLocation": args.isReturnLocation,
        "lookupAttributes": args.lookupAttributes,
        "maxResults": args.maxResults,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvents.
 */
export interface GetEventsArgs {
    /**
     * End timestamp in seconds (the time range for query is less than 30 days).
     */
    endTime: number;
    /**
     * Whether to return the IP location. `1`: yes, `0`: no.
     */
    isReturnLocation?: number;
    /**
     * Search condition. Valid values: `RequestId`, `EventName`, `ActionType` (write/read), `PrincipalId` (sub-account), `ResourceType`, `ResourceName`, `AccessKeyId`, `SensitiveAction`, `ApiErrorCode`, `CamErrorCode`, and `Tags` (Format of AttributeValue: [{"key":"*","value":"*"}]).
     */
    lookupAttributes?: inputs.Audit.GetEventsLookupAttribute[];
    /**
     * Max number of returned logs (up to 50).
     */
    maxResults?: number;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * Start timestamp in seconds (cannot be 90 days after the current time).
     */
    startTime: number;
}

/**
 * A collection of values returned by getEvents.
 */
export interface GetEventsResult {
    readonly endTime: number;
    /**
     * Logset. Note: `null` may be returned for this field, indicating that no valid values can be obtained.
     */
    readonly events: outputs.Audit.GetEventsEvent[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isReturnLocation?: number;
    readonly lookupAttributes?: outputs.Audit.GetEventsLookupAttribute[];
    readonly maxResults?: number;
    readonly resultOutputFile?: string;
    readonly startTime: number;
}
/**
 * Use this data source to query the events list supported by the audit.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const events = tencentcloud.Audit.getEvents({
 *     endTime: 1727437441,
 *     isReturnLocation: 1,
 *     lookupAttributes: [
 *         {
 *             attributeKey: "ResourceType",
 *             attributeValue: "cvm",
 *         },
 *         {
 *             attributeKey: "OnlyRecordNotSeen",
 *             attributeValue: "0",
 *         },
 *         {
 *             attributeKey: "EventPlatform",
 *             attributeValue: "0",
 *         },
 *     ],
 *     maxResults: 50,
 *     startTime: 1727433841,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEventsOutput(args: GetEventsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsResult> {
    return pulumi.output(args).apply((a: any) => getEvents(a, opts))
}

/**
 * A collection of arguments for invoking getEvents.
 */
export interface GetEventsOutputArgs {
    /**
     * End timestamp in seconds (the time range for query is less than 30 days).
     */
    endTime: pulumi.Input<number>;
    /**
     * Whether to return the IP location. `1`: yes, `0`: no.
     */
    isReturnLocation?: pulumi.Input<number>;
    /**
     * Search condition. Valid values: `RequestId`, `EventName`, `ActionType` (write/read), `PrincipalId` (sub-account), `ResourceType`, `ResourceName`, `AccessKeyId`, `SensitiveAction`, `ApiErrorCode`, `CamErrorCode`, and `Tags` (Format of AttributeValue: [{"key":"*","value":"*"}]).
     */
    lookupAttributes?: pulumi.Input<pulumi.Input<inputs.Audit.GetEventsLookupAttributeArgs>[]>;
    /**
     * Max number of returned logs (up to 50).
     */
    maxResults?: pulumi.Input<number>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * Start timestamp in seconds (cannot be 90 days after the current time).
     */
    startTime: pulumi.Input<number>;
}
