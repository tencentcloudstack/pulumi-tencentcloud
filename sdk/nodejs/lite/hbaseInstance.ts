// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a emr liteHbaseInstance
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const liteHbaseInstance = new tencentcloud.lite.HbaseInstance("liteHbaseInstance", {
 *     diskSize: 100,
 *     diskType: "CLOUD_HSSD",
 *     instanceName: "tf-test",
 *     nodeType: "8C32G",
 *     payMode: 0,
 *     tags: [{
 *         tagKey: "test",
 *         tagValue: "test",
 *     }],
 *     zoneSettings: [{
 *         nodeNum: 3,
 *         vpcSettings: {
 *             subnetId: "subnet-xxxxxx",
 *             vpcId: "vpc-xxxxxx",
 *         },
 *         zone: "ap-shanghai-2",
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * emr lite_hbase_instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Lite/hbaseInstance:HbaseInstance lite_hbase_instance lite_hbase_instance_id
 * ```
 */
export class HbaseInstance extends pulumi.CustomResource {
    /**
     * Get an existing HbaseInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HbaseInstanceState, opts?: pulumi.CustomResourceOptions): HbaseInstance {
        return new HbaseInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Lite/hbaseInstance:HbaseInstance';

    /**
     * Returns true if the given object is an instance of HbaseInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HbaseInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HbaseInstance.__pulumiType;
    }

    /**
     * Instance single-node disk capacity, in GB. The single-node disk capacity must be greater than or equal to 100 and less than or equal to 10000, with an adjustment step size of 20.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * Instance disk type, fill in CLOUD_HSSD to indicate performance cloud storage.
     */
    public readonly diskType!: pulumi.Output<string>;
    /**
     * Instance name. Length limit is 6-36 characters. Only Chinese characters, letters, numbers, -, and _ are allowed.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * Instance node type, can be filled in as 4C16G, 8C32G, 16C64G, 32C128G, case insensitive.
     */
    public readonly nodeType!: pulumi.Output<string>;
    /**
     * Instance pay mode. Value range: 0: indicates post pay mode, that is, pay-as-you-go.
     */
    public readonly payMode!: pulumi.Output<number>;
    /**
     * List of tags to bind to the instance.
     */
    public readonly tags!: pulumi.Output<outputs.Lite.HbaseInstanceTag[] | undefined>;
    /**
     * Detailed configuration of the instance availability zone, currently supports multiple availability zones, the number of availability zones can only be 1 or 3, including zone name, VPC information, and number of nodes. The total number of nodes across all zones must be greater than or equal to 3 and less than or equal to 50.
     */
    public readonly zoneSettings!: pulumi.Output<outputs.Lite.HbaseInstanceZoneSetting[]>;

    /**
     * Create a HbaseInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HbaseInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HbaseInstanceArgs | HbaseInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HbaseInstanceState | undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["diskType"] = state ? state.diskType : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["nodeType"] = state ? state.nodeType : undefined;
            resourceInputs["payMode"] = state ? state.payMode : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["zoneSettings"] = state ? state.zoneSettings : undefined;
        } else {
            const args = argsOrState as HbaseInstanceArgs | undefined;
            if ((!args || args.diskSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskSize'");
            }
            if ((!args || args.diskType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskType'");
            }
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.nodeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeType'");
            }
            if ((!args || args.payMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'payMode'");
            }
            if ((!args || args.zoneSettings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneSettings'");
            }
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["diskType"] = args ? args.diskType : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["nodeType"] = args ? args.nodeType : undefined;
            resourceInputs["payMode"] = args ? args.payMode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zoneSettings"] = args ? args.zoneSettings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HbaseInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HbaseInstance resources.
 */
export interface HbaseInstanceState {
    /**
     * Instance single-node disk capacity, in GB. The single-node disk capacity must be greater than or equal to 100 and less than or equal to 10000, with an adjustment step size of 20.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Instance disk type, fill in CLOUD_HSSD to indicate performance cloud storage.
     */
    diskType?: pulumi.Input<string>;
    /**
     * Instance name. Length limit is 6-36 characters. Only Chinese characters, letters, numbers, -, and _ are allowed.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Instance node type, can be filled in as 4C16G, 8C32G, 16C64G, 32C128G, case insensitive.
     */
    nodeType?: pulumi.Input<string>;
    /**
     * Instance pay mode. Value range: 0: indicates post pay mode, that is, pay-as-you-go.
     */
    payMode?: pulumi.Input<number>;
    /**
     * List of tags to bind to the instance.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Lite.HbaseInstanceTag>[]>;
    /**
     * Detailed configuration of the instance availability zone, currently supports multiple availability zones, the number of availability zones can only be 1 or 3, including zone name, VPC information, and number of nodes. The total number of nodes across all zones must be greater than or equal to 3 and less than or equal to 50.
     */
    zoneSettings?: pulumi.Input<pulumi.Input<inputs.Lite.HbaseInstanceZoneSetting>[]>;
}

/**
 * The set of arguments for constructing a HbaseInstance resource.
 */
export interface HbaseInstanceArgs {
    /**
     * Instance single-node disk capacity, in GB. The single-node disk capacity must be greater than or equal to 100 and less than or equal to 10000, with an adjustment step size of 20.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Instance disk type, fill in CLOUD_HSSD to indicate performance cloud storage.
     */
    diskType: pulumi.Input<string>;
    /**
     * Instance name. Length limit is 6-36 characters. Only Chinese characters, letters, numbers, -, and _ are allowed.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Instance node type, can be filled in as 4C16G, 8C32G, 16C64G, 32C128G, case insensitive.
     */
    nodeType: pulumi.Input<string>;
    /**
     * Instance pay mode. Value range: 0: indicates post pay mode, that is, pay-as-you-go.
     */
    payMode: pulumi.Input<number>;
    /**
     * List of tags to bind to the instance.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Lite.HbaseInstanceTag>[]>;
    /**
     * Detailed configuration of the instance availability zone, currently supports multiple availability zones, the number of availability zones can only be 1 or 3, including zone name, VPC information, and number of nodes. The total number of nodes across all zones must be greater than or equal to 3 and less than or equal to 50.
     */
    zoneSettings: pulumi.Input<pulumi.Input<inputs.Lite.HbaseInstanceZoneSetting>[]>;
}
