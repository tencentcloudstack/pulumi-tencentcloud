// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ProviderAssumeRole {
    /**
     * External role ID, which can be obtained by clicking the role name in the CAM console. It can contain 2-128 letters, digits, and symbols (=,.@:/-). Regex: [\w+=,.@:/-]*. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_EXTERNAL_ID`.
     */
    externalId?: pulumi.Input<string>;
    /**
     * A more restrictive policy when making the AssumeRole call. Its content must not contains `principal` elements. Notice: more syntax references, please refer to: [policies syntax logic](https://intl.cloud.tencent.com/document/product/598/10603).
     */
    policy?: pulumi.Input<string>;
    /**
     * The ARN of the role to assume. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_ARN`.
     */
    roleArn: pulumi.Input<string>;
    /**
     * The duration of the session when making the AssumeRole call. Its value ranges from 0 to 43200(seconds), and default is 7200 seconds. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_DURATION`.
     */
    sessionDuration: pulumi.Input<number>;
    /**
     * The session name to use when making the AssumeRole call. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_NAME`.
     */
    sessionName: pulumi.Input<string>;
}

export interface ProviderAssumeRoleWithSaml {
    /**
     * Player Access Description Name. It can be sourced from the `PROVIDER_ASSUME_ROLE_PRINCIPAL_ARN`.
     */
    principalArn: pulumi.Input<string>;
    /**
     * The ARN of the role to assume. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_ARN`.
     */
    roleArn: pulumi.Input<string>;
    /**
     * SAML assertion information encoded in base64. It can be sourced from the `PROVIDER_ASSUME_ROLE_SAML_ASSERTION`.
     */
    samlAssertion: pulumi.Input<string>;
    /**
     * The duration of the session when making the AssumeRoleWithSAML call. Its value ranges from 0 to 43200(seconds), and default is 7200 seconds. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_DURATION`.
     */
    sessionDuration: pulumi.Input<number>;
    /**
     * The session name to use when making the AssumeRole call. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_NAME`.
     */
    sessionName: pulumi.Input<string>;
}

export interface ProviderAssumeRoleWithWebIdentity {
    /**
     * The ARN of the role to assume. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_ARN`.
     */
    roleArn: pulumi.Input<string>;
    /**
     * The duration of the session when making the AssumeRoleWithWebIdentity call. Its value ranges from 0 to 43200(seconds), and default is 7200 seconds. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_DURATION`.
     */
    sessionDuration: pulumi.Input<number>;
    /**
     * The session name to use when making the AssumeRole call. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_NAME`.
     */
    sessionName: pulumi.Input<string>;
    /**
     * OIDC token issued by IdP. It can be sourced from the `PROVIDER_ASSUME_ROLE_WEB_IDENTITY_TOKEN`.
     */
    webIdentityToken: pulumi.Input<string>;
}
export namespace Address {
}

export namespace Antiddos {
    export interface CcBlackWhiteIpBlackWhiteIp {
        /**
         * ip address.
         */
        ip: pulumi.Input<string>;
        /**
         * ip mask.
         */
        mask: pulumi.Input<number>;
    }

    export interface CcPrecisionPolicyPolicyList {
        /**
         * Configuration fields can take values of cgi, ua, cookie, referer, accept, srcip.
         */
        fieldName: pulumi.Input<string>;
        /**
         * field type.
         */
        fieldType: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
        /**
         * Configuration item value comparison method, can take values of equal, not_ Equal, include.
         */
        valueOperator: pulumi.Input<string>;
    }

    export interface DdosGeoIpBlockConfigDdosGeoIpBlockConfig {
        /**
         * Blocking action, value [drop (intercept) trans (release)].
         */
        action: pulumi.Input<string>;
        /**
         * When RegionType is customized, an AreaList must be filled in, with a maximum of 128 entries;.
         */
        areaLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Region type, value [oversea (overseas) China (domestic) customized (custom region)].
         */
        regionType: pulumi.Input<string>;
    }

    export interface DdosSpeedLimitConfigDdosSpeedLimitConfig {
        /**
         * List of port ranges, up to 8, multiple; Separate and indicate the range with -; This port range must be filled in; Fill in style 1:0-65535, style 2: 80; 443; 1000-2000.
         */
        dstPortList?: pulumi.Input<string>;
        /**
         * This field has been deprecated. Please fill in the new field DstPortList.
         */
        dstPortScopes?: pulumi.Input<pulumi.Input<inputs.Antiddos.DdosSpeedLimitConfigDdosSpeedLimitConfigDstPortScope>[]>;
        /**
         * Speed limit mode, value [1 (based on source IP speed limit) 2 (based on destination port speed limit)].
         */
        mode: pulumi.Input<number>;
        /**
         * IP protocol numbers, values [ALL (all protocols) TCP (tcp protocol) UDP (udp protocol) SMP (smp protocol) 1; 2-100 (custom protocol number range, up to 8)] Note: When customizing the protocol number range, only the protocol number can be filled in, multiple ranges; Separation; When filling in ALL, no other agreements or agreements can be filled inNumber.
         */
        protocolList?: pulumi.Input<string>;
        /**
         * Speed limit values, each type of speed limit value can support up to 1; This field array has at least one speed limit value.
         */
        speedValues: pulumi.Input<pulumi.Input<inputs.Antiddos.DdosSpeedLimitConfigDdosSpeedLimitConfigSpeedValue>[]>;
    }

    export interface DdosSpeedLimitConfigDdosSpeedLimitConfigDstPortScope {
        /**
         * Starting port, ranging from 1 to 65535.
         */
        beginPort: pulumi.Input<number>;
        /**
         * end  port, ranging from 1 to 65535.
         */
        endPort: pulumi.Input<number>;
    }

    export interface DdosSpeedLimitConfigDdosSpeedLimitConfigSpeedValue {
        /**
         * Speed limit value type, value [1 (packet rate pps) 2 (bandwidth bps)].
         */
        type: pulumi.Input<number>;
        /**
         * value.
         */
        value: pulumi.Input<number>;
    }

    export interface DefaultAlarmThresholdDefaultAlarmConfig {
        /**
         * Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
         */
        alarmThreshold?: pulumi.Input<number>;
        /**
         * Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
         */
        alarmType?: pulumi.Input<number>;
    }

    export interface PacketFilterConfigPacketFilterConfig {
        /**
         * Action, value [drop (discard) transmit (release) dropBlack (discard and pull black) dropRst (intercept) dropBlackRst (intercept and pull black) forward (continue protection)].
         */
        action: pulumi.Input<string>;
        /**
         * The detection depth starting from the detection position, with a value of [0-1500].
         */
        depth?: pulumi.Input<number>;
        /**
         * The second detection depth starting from the second detection position, with a value of [01500].
         */
        depth2?: pulumi.Input<number>;
        /**
         * end destination port, ranging from 0 to 65535.
         */
        dportEnd: pulumi.Input<number>;
        /**
         * Starting destination port, ranging from 0 to 65535.
         */
        dportStart: pulumi.Input<number>;
        /**
         * Whether to include detection values, with a value of [0 (inclusive) and 1 (exclusive)].
         */
        isNot?: pulumi.Input<number>;
        /**
         * Whether the second detection includes detection values, with a value of [0 (inclusive) and 1 (exclusive)].
         */
        isNot2?: pulumi.Input<number>;
        /**
         * Detection position, value [beginL3 (IP header) beginL4 (TCP/UDP header) beginL5 (T payload) noMatch (mismatch)].
         */
        matchBegin?: pulumi.Input<string>;
        /**
         * Second detection position, value [beginL5 (load) noMatch (mismatch)].
         */
        matchBegin2?: pulumi.Input<string>;
        /**
         * When there is a second detection condition, the AND or relationship with the first detection condition, with the value [and (and relationship) none (fill in this value when there is no second detection condition)].
         */
        matchLogic?: pulumi.Input<string>;
        /**
         * Detection type, value [Sunday (keyword) pcre (regular expression)].
         */
        matchType?: pulumi.Input<string>;
        /**
         * The second detection type, with a value of [Sunday (keyword) pcre (regular expression)].
         */
        matchType2?: pulumi.Input<string>;
        /**
         * The offset from the detection position, with a value range of [0, Depth].
         */
        offset?: pulumi.Input<number>;
        /**
         * The offset from the second detection position, with a value range of [0, Depth2].
         */
        offset2?: pulumi.Input<number>;
        /**
         * Greater than message length, value 1+.
         */
        pktLenGt?: pulumi.Input<number>;
        /**
         * The maximum message length, ranging from 1 to 1500, must be greater than or equal to the minimum message length.
         */
        pktlenMax: pulumi.Input<number>;
        /**
         * Minimum message length, ranging from 1 to 1500.
         */
        pktlenMin: pulumi.Input<number>;
        /**
         * Protocol, value [TCP udp icmp all].
         */
        protocol: pulumi.Input<string>;
        /**
         * End source port, values range from 1 to 65535, must be greater than or equal to the start source port.
         */
        sportEnd: pulumi.Input<number>;
        /**
         * Starting source port, ranging from 0 to 65535.
         */
        sportStart: pulumi.Input<number>;
        /**
         * Detection value, key string or regular expression, value [When the detection type is Sunday, please fill in the string or hexadecimal bytecode, for example, x313233 corresponds to the hexadecimal word&gt;section code of the string &#39;123&#39;; when the detection type is pcre, please fill in the regular expression character string;].
         */
        str?: pulumi.Input<string>;
        /**
         * key string or regular expression, value [When the detection type is Sunday, please fill in the string or hexadecimal bytecode, for example, x313233 corresponds to the hexadecimal word&gt;section code of the string &#39;123&#39;; when the detection type is pcre, please fill in the regular expression character string;].
         */
        str2?: pulumi.Input<string>;
    }

    export interface PortAclConfigAclConfig {
        /**
         * Action, can take values: drop, transmit, forward.
         */
        action: pulumi.Input<string>;
        /**
         * end from port, with a range of 0~65535 values.
         */
        dPortEnd: pulumi.Input<number>;
        /**
         * Starting from port, with a range of 0~65535 values.
         */
        dPortStart: pulumi.Input<number>;
        /**
         * Protocol type, can take TCP, udp, all values.
         */
        forwardProtocol: pulumi.Input<string>;
        /**
         * The policy priority, the smaller the number, the higher the level, and the higher the matching of the rule, with values ranging from 1 to 1000. Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        priority?: pulumi.Input<number>;
        /**
         * end from the source port, with a value range of 0~65535.
         */
        sPortEnd: pulumi.Input<number>;
        /**
         * Starting from the source port, with a value range of 0~65535.
         */
        sPortStart: pulumi.Input<number>;
    }
}

export namespace ApiGateway {
    export interface ApiConstantParameter {
        /**
         * Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        desc?: pulumi.Input<string>;
        /**
         * Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        name?: pulumi.Input<string>;
        /**
         * Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        position?: pulumi.Input<string>;
    }

    export interface ApiMicroService {
        /**
         * Micro service cluster.
         */
        clusterId: pulumi.Input<string>;
        /**
         * Microservice name.
         */
        microServiceName: pulumi.Input<string>;
        /**
         * Microservice namespace.
         */
        namespaceId: pulumi.Input<string>;
    }

    export interface ApiOauthConfig {
        /**
         * Redirect address, used to guide users in login operations.
         */
        loginRedirectUrl?: pulumi.Input<string>;
        /**
         * Public key, used to verify user tokens.
         */
        publicKey: pulumi.Input<string>;
        /**
         * Token passes the position.
         */
        tokenLocation: pulumi.Input<string>;
    }

    export interface ApiRequestParameter {
        /**
         * Parameter default value.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter location.
         */
        position: pulumi.Input<string>;
        /**
         * If this parameter required. Default value: `false`.
         */
        required?: pulumi.Input<boolean>;
        /**
         * Parameter type.
         */
        type: pulumi.Input<string>;
    }

    export interface ApiResponseErrorCode {
        /**
         * Custom response configuration error code.
         */
        code: pulumi.Input<number>;
        /**
         * Custom error code conversion.
         */
        convertedCode?: pulumi.Input<number>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * Custom response configuration error message.
         */
        msg: pulumi.Input<string>;
        /**
         * Whether to enable error code conversion. Default value: `false`.
         */
        needConvert?: pulumi.Input<boolean>;
    }

    export interface ApiServiceConfigCosConfig {
        /**
         * The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        action: pulumi.Input<string>;
        /**
         * The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        authorization?: pulumi.Input<boolean>;
        /**
         * The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        bucketName: pulumi.Input<string>;
        /**
         * Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        pathMatchMode?: pulumi.Input<string>;
    }

    export interface ApiServiceParameter {
        /**
         * The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        name?: pulumi.Input<string>;
        /**
         * The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        position?: pulumi.Input<string>;
        /**
         * Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterDesc?: pulumi.Input<string>;
        /**
         * The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterName?: pulumi.Input<string>;
        /**
         * The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterPosition?: pulumi.Input<string>;
        /**
         * The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterType?: pulumi.Input<string>;
    }

    export interface ApiServiceTsfHealthCheckConf {
        /**
         * Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        errorThresholdPercentage?: pulumi.Input<number>;
        /**
         * Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        isHealthCheck?: pulumi.Input<boolean>;
        /**
         * Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        requestVolumeThreshold?: pulumi.Input<number>;
        /**
         * Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sleepWindowInMilliseconds?: pulumi.Input<number>;
    }

    export interface ApiServiceTsfLoadBalanceConf {
        /**
         * Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        isLoadBalance?: pulumi.Input<boolean>;
        /**
         * Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        method?: pulumi.Input<string>;
        /**
         * Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sessionStickRequired?: pulumi.Input<boolean>;
        /**
         * Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sessionStickTimeout?: pulumi.Input<number>;
    }

    export interface ApiTargetService {
        /**
         * docker ip.
         */
        dockerIp?: pulumi.Input<string>;
        /**
         * Host IP of the CVM.
         */
        hostIp: pulumi.Input<string>;
        /**
         * vm ip.
         */
        vmIp: pulumi.Input<string>;
        /**
         * vm port.
         */
        vmPort: pulumi.Input<number>;
        /**
         * vpc id.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ApiTargetServicesHealthCheckConf {
        /**
         * Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        errorThresholdPercentage?: pulumi.Input<number>;
        /**
         * Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        isHealthCheck?: pulumi.Input<boolean>;
        /**
         * Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        requestVolumeThreshold?: pulumi.Input<number>;
        /**
         * Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sleepWindowInMilliseconds?: pulumi.Input<number>;
    }

    export interface GetBindApiAppsStatusFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of the field.
         */
        values: string[];
    }

    export interface GetBindApiAppsStatusFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetUpstreamsFilter {
        /**
         * Fields that need to be filtered.
         */
        name: string;
        /**
         * The filtering value of the field.
         */
        values: string[];
    }

    export interface GetUpstreamsFilterArgs {
        /**
         * Fields that need to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * The filtering value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ImportOpenApiConstantParameter {
        /**
         * The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        name?: pulumi.Input<string>;
        /**
         * The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        position?: pulumi.Input<string>;
    }

    export interface ImportOpenApiMicroService {
        /**
         * Micro service cluster.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Microservice name.
         */
        microServiceName?: pulumi.Input<string>;
        /**
         * Microservice namespace.
         */
        namespaceId?: pulumi.Input<string>;
    }

    export interface ImportOpenApiOauthConfig {
        /**
         * Redirect address, used to guide users in login operations.
         */
        loginRedirectUrl?: pulumi.Input<string>;
        /**
         * Public key, used to verify user tokens.
         */
        publicKey?: pulumi.Input<string>;
        /**
         * Token passes the position.
         */
        tokenLocation?: pulumi.Input<string>;
    }

    export interface ImportOpenApiRequestParameter {
        /**
         * The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        name?: pulumi.Input<string>;
        /**
         * The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        position?: pulumi.Input<string>;
        /**
         * If this parameter required. Default value: `false`.
         */
        required?: pulumi.Input<boolean>;
        /**
         * Parameter type.
         */
        type?: pulumi.Input<string>;
    }

    export interface ImportOpenApiResponseErrorCode {
        /**
         * Custom response configuration error code.
         */
        code?: pulumi.Input<number>;
        /**
         * Custom error code conversion.
         */
        convertedCode?: pulumi.Input<number>;
        /**
         * Parameter description.
         */
        desc?: pulumi.Input<string>;
        /**
         * Custom response configuration error message.
         */
        msg?: pulumi.Input<string>;
        /**
         * Whether to enable error code conversion. Default value: `false`.
         */
        needConvert?: pulumi.Input<boolean>;
    }

    export interface ImportOpenApiServiceConfigCosConfig {
        /**
         * The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        action?: pulumi.Input<string>;
        /**
         * The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        authorization?: pulumi.Input<boolean>;
        /**
         * The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        bucketName?: pulumi.Input<string>;
        /**
         * Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        pathMatchMode?: pulumi.Input<string>;
    }

    export interface ImportOpenApiServiceParameter {
        /**
         * The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        name?: pulumi.Input<string>;
        /**
         * The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        position?: pulumi.Input<string>;
        /**
         * Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterDesc?: pulumi.Input<string>;
        /**
         * The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterName?: pulumi.Input<string>;
        /**
         * The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterPosition?: pulumi.Input<string>;
        /**
         * The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        relevantRequestParameterType?: pulumi.Input<string>;
    }

    export interface ImportOpenApiServiceTsfHealthCheckConf {
        /**
         * Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        errorThresholdPercentage?: pulumi.Input<number>;
        /**
         * Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        isHealthCheck?: pulumi.Input<boolean>;
        /**
         * Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        requestVolumeThreshold?: pulumi.Input<number>;
        /**
         * Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sleepWindowInMilliseconds?: pulumi.Input<number>;
    }

    export interface ImportOpenApiServiceTsfLoadBalanceConf {
        /**
         * Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        isLoadBalance?: pulumi.Input<boolean>;
        /**
         * Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        method?: pulumi.Input<string>;
        /**
         * Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sessionStickRequired?: pulumi.Input<boolean>;
        /**
         * Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        sessionStickTimeout?: pulumi.Input<number>;
    }

    export interface ServiceApiList {
        /**
         * Description of the API.
         */
        apiDesc?: pulumi.Input<string>;
        /**
         * ID of the API.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Name of the API.
         */
        apiName?: pulumi.Input<string>;
        /**
         * Method of the API.
         */
        method?: pulumi.Input<string>;
        /**
         * Path of the API.
         */
        path?: pulumi.Input<string>;
    }

    export interface ServiceUsagePlanList {
        /**
         * ID of the API.
         */
        apiId?: pulumi.Input<string>;
        /**
         * Binding type.
         */
        bindType?: pulumi.Input<string>;
        /**
         * ID of the usage plan.
         */
        usagePlanId?: pulumi.Input<string>;
        /**
         * Name of the usage plan.
         */
        usagePlanName?: pulumi.Input<string>;
    }

    export interface UpstreamHealthChecker {
        /**
         * Detect the requested path during active health checks. The default is&#39;/&#39;.
         */
        activeCheckHttpPath?: pulumi.Input<string>;
        /**
         * The time interval for active health checks is 5 seconds by default.
         */
        activeCheckInterval?: pulumi.Input<number>;
        /**
         * The detection request for active health check timed out in seconds. The default is 5 seconds.
         */
        activeCheckTimeout?: pulumi.Input<number>;
        /**
         * Identify whether active health checks are enabled.
         */
        enableActiveCheck: pulumi.Input<boolean>;
        /**
         * Identify whether passive health checks are enabled.
         */
        enablePassiveCheck: pulumi.Input<boolean>;
        /**
         * The HTTP status code that determines a successful request during a health check.
         */
        healthyHttpStatus: pulumi.Input<string>;
        /**
         * HTTP continuous error threshold. 0 means HTTP checking is disabled. Value range: [0, 254].
         */
        httpFailureThreshold: pulumi.Input<number>;
        /**
         * TCP continuous error threshold. 0 indicates disabling TCP checking. Value range: [0, 254].
         */
        tcpFailureThreshold: pulumi.Input<number>;
        /**
         * Continuous timeout threshold. 0 indicates disabling timeout checking. Value range: [0, 254].
         */
        timeoutThreshold: pulumi.Input<number>;
        /**
         * The HTTP status code that determines a failed request during a health check.
         */
        unhealthyHttpStatus: pulumi.Input<string>;
        /**
         * The automatic recovery time of abnormal node status, in seconds. When only passive checking is enabled, it must be set to a value&gt;0, otherwise the passive exception node will not be able to recover. The default is 30 seconds.
         *
         * The `k8sService` object supports the following:
         */
        unhealthyTimeout?: pulumi.Input<number>;
    }

    export interface UpstreamK8sService {
        /**
         * K8s cluster ID.
         */
        clusterId: pulumi.Input<string>;
        /**
         * Additional Selected Pod Label.
         */
        extraLabels: pulumi.Input<pulumi.Input<inputs.ApiGateway.UpstreamK8sServiceExtraLabel>[]>;
        /**
         * Customized service name, optional.
         */
        name?: pulumi.Input<string>;
        /**
         * Container namespace.
         */
        namespace: pulumi.Input<string>;
        /**
         * Port of service.
         */
        port: pulumi.Input<number>;
        /**
         * The name of the container service.
         */
        serviceName: pulumi.Input<string>;
        /**
         * weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface UpstreamK8sServiceExtraLabel {
        /**
         * Key of Label.
         */
        key: pulumi.Input<string>;
        /**
         * Value of Label.
         */
        value: pulumi.Input<string>;
    }

    export interface UpstreamNode {
        /**
         * The ID of the TKE clusterNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * IP or domain name.
         */
        host: pulumi.Input<string>;
        /**
         * K8S namespaceNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        nameSpace?: pulumi.Input<string>;
        /**
         * Port [0, 65535].
         */
        port: pulumi.Input<number>;
        /**
         * K8S container service nameNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * Source of Node, value range: K8SNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        source?: pulumi.Input<string>;
        /**
         * Dye labelNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Unique service name recorded internally by API gatewayNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        uniqueServiceName?: pulumi.Input<string>;
        /**
         * CVM instance IDNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        vmInstanceId?: pulumi.Input<string>;
        /**
         * Weight [0, 100], 0 is disabled.
         */
        weight: pulumi.Input<number>;
    }

    export interface UsagePlanAttachList {
        /**
         * The API ID, this value is empty if attach service.
         */
        apiId?: pulumi.Input<string>;
        /**
         * The API name, this value is empty if attach service.
         */
        apiName?: pulumi.Input<string>;
        /**
         * Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
         */
        createTime?: pulumi.Input<string>;
        /**
         * The environment name.
         */
        environment?: pulumi.Input<string>;
        /**
         * The API method, this value is empty if attach service.
         */
        method?: pulumi.Input<string>;
        /**
         * Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * The API path, this value is empty if attach service.
         */
        path?: pulumi.Input<string>;
        /**
         * The service ID.
         */
        serviceId?: pulumi.Input<string>;
        /**
         * The service name.
         */
        serviceName?: pulumi.Input<string>;
    }
}

export namespace As {
    export interface GetInstancesFilter {
        /**
         * Fields to be filtered. Valid names: `instance-id`: Filters by instance ID, `auto-scaling-group-id`: Filter by scaling group ID.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetInstancesFilterArgs {
        /**
         * Fields to be filtered. Valid names: `instance-id`: Filters by instance ID, `auto-scaling-group-id`: Filter by scaling group ID.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LifecycleHookLifecycleCommand {
        /**
         * Remote command ID. It is required to execute a command.
         */
        commandId: pulumi.Input<string>;
        /**
         * Custom parameter. The field type is JSON encoded string. For example, {"varA": "222"}.
         */
        parameters?: pulumi.Input<string>;
    }

    export interface LoadBalancerForwardLoadBalancer {
        /**
         * Application load balancer listener ID.
         */
        listenerId: pulumi.Input<string>;
        /**
         * Application load balancer instance ID.
         */
        loadBalancerId: pulumi.Input<string>;
        /**
         * Application load balancer location ID.
         */
        locationId?: pulumi.Input<string>;
        /**
         * Load balancer instance region. Default value is the region of current auto scaling group. The format is the same as the public parameter Region, for example: ap-guangzhou.
         */
        region?: pulumi.Input<string>;
        /**
         * List of TargetAttribute.
         */
        targetAttributes: pulumi.Input<pulumi.Input<inputs.As.LoadBalancerForwardLoadBalancerTargetAttribute>[]>;
    }

    export interface LoadBalancerForwardLoadBalancerTargetAttribute {
        /**
         * Target port.
         */
        port: pulumi.Input<number>;
        /**
         * Target weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface ScalingConfigDataDisk {
        /**
         * Indicates whether the disk remove after instance terminated. Default is `false`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. valid when diskTypePolicy is ORIGINAL.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ScalingConfigHostNameSettings {
        /**
         * The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
         */
        hostName: pulumi.Input<string>;
        /**
         * The style of the host name of the cloud server, the value range includes `ORIGINAL` and `UNIQUE`, the default is `ORIGINAL`; `ORIGINAL`, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; `UNIQUE`, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
         */
        hostNameStyle?: pulumi.Input<string>;
    }

    export interface ScalingConfigInstanceNameSettings {
        /**
         * CVM instance name.
         */
        instanceName: pulumi.Input<string>;
        /**
         * Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default is `ORIGINAL`.
         */
        instanceNameStyle?: pulumi.Input<string>;
    }

    export interface ScalingGroupForwardBalancerId {
        /**
         * Listener ID for application load balancers.
         */
        listenerId: pulumi.Input<string>;
        /**
         * ID of available load balancers.
         */
        loadBalancerId: pulumi.Input<string>;
        /**
         * ID of forwarding rules.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * Attribute list of target rules.
         */
        targetAttributes: pulumi.Input<pulumi.Input<inputs.As.ScalingGroupForwardBalancerIdTargetAttribute>[]>;
    }

    export interface ScalingGroupForwardBalancerIdTargetAttribute {
        /**
         * Port number.
         */
        port: pulumi.Input<number>;
        /**
         * Weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface StartInstanceRefreshRefreshSettings {
        /**
         * Backend service health check status for instances, defaults to FALSE. This setting takes effect only for scaling groups bound with application load balancers. When enabled, if an instance fails the check after being refreshed, its load balancer port weight remains 0 and is marked as a refresh failure. Valid values: <br><li>TRUE: Enable the check.</li> <li>FALSE: Do not enable the check.
         */
        checkInstanceTargetHealth?: pulumi.Input<boolean>;
        /**
         * Rolling update settings parameters. RefreshMode is the rolling update. This parameter must be filled in.Note: This field may return null, indicating that no valid value can be obtained.
         */
        rollingUpdateSettings: pulumi.Input<inputs.As.StartInstanceRefreshRefreshSettingsRollingUpdateSettings>;
    }

    export interface StartInstanceRefreshRefreshSettingsRollingUpdateSettings {
        /**
         * Batch quantity. The batch quantity should be a positive integer greater than 0, but cannot exceed the total number of instances pending refresh.
         */
        batchNumber: pulumi.Input<number>;
        /**
         * Pause policy between batches. Default value: Automatic. Valid values: <br><li>FIRST_BATCH_PAUSE: Pause after the first batch update completes.</li> <li>BATCH_INTERVAL_PAUSE: Pause between each batch update.</li> <li>AUTOMATIC: No pauses.
         */
        batchPause?: pulumi.Input<string>;
        /**
         * Maximum Extra Quantity. After setting this parameter, a batch of pay-as-you-go extra instances will be created according to the launch configuration before the rolling update starts, and the extra instances will be destroyed after the rolling update is completed.
         */
        maxSurge?: pulumi.Input<number>;
    }
}

export namespace Audit {
    export interface GetEventsLookupAttribute {
        /**
         * Valid values: RequestId, EventName, ReadOnly, Username, ResourceType, ResourceName, AccessKeyId, and EventId
         * Note: `null` may be returned for this field, indicating that no valid values can be obtained.
         */
        attributeKey: string;
        /**
         * Value of `AttributeValue`
         * Note: `null` may be returned for this field, indicating that no valid values can be obtained.
         */
        attributeValue?: string;
    }

    export interface GetEventsLookupAttributeArgs {
        /**
         * Valid values: RequestId, EventName, ReadOnly, Username, ResourceType, ResourceName, AccessKeyId, and EventId
         * Note: `null` may be returned for this field, indicating that no valid values can be obtained.
         */
        attributeKey: pulumi.Input<string>;
        /**
         * Value of `AttributeValue`
         * Note: `null` may be returned for this field, indicating that no valid values can be obtained.
         */
        attributeValue?: pulumi.Input<string>;
    }

    export interface TrackStorage {
        /**
         * Designated to store user ID.
         */
        storageAccountId?: pulumi.Input<string>;
        /**
         * Designated to store user appid.
         */
        storageAppId?: pulumi.Input<string>;
        /**
         * Track Storage name:- when StorageType is `cls`, StorageName is cls topicId- when StorageType is `cos`, StorageName is cos bucket name that does not contain `-APPID`.
         */
        storageName: pulumi.Input<string>;
        /**
         * Storage path prefix.
         */
        storagePrefix: pulumi.Input<string>;
        /**
         * Storage region.
         */
        storageRegion: pulumi.Input<string>;
        /**
         * Track Storage type, optional:- `cos`- `cls`.
         */
        storageType: pulumi.Input<string>;
    }
}

export namespace Audits {
}

export namespace Availability {
}

export namespace Batch {
    export interface ApplyAccountBaselinesBaselineConfigItem {
        /**
         * Account Factory baseline item configuration. Different items have different parameters.Note: This field may return null, indicating that no valid values can be obtained.
         */
        configuration?: pulumi.Input<string>;
        /**
         * A unique identifier for an Account Factory baseline item, which can only contain English letters, digits, and @,._[]-:()+=. It must be 2-128 characters long.Note: This field may return null, indicating that no valid values can be obtained.
         */
        identifier?: pulumi.Input<string>;
    }
}

export namespace Bi {
    export interface DatasourceCloudServiceType {
        /**
         * Instance Id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Service type, Cloud.
         */
        type: pulumi.Input<string>;
    }

}

export namespace Cam {
    export interface MfaFlagActionFlag {
        /**
         * Phone.
         */
        phone?: pulumi.Input<number>;
        /**
         * Soft token.
         */
        stoken?: pulumi.Input<number>;
        /**
         * Wechat.
         */
        wechat?: pulumi.Input<number>;
    }

    export interface MfaFlagLoginFlag {
        /**
         * Phone.
         */
        phone?: pulumi.Input<number>;
        /**
         * Soft token.
         */
        stoken?: pulumi.Input<number>;
        /**
         * Wechat.
         */
        wechat?: pulumi.Input<number>;
    }

    export interface PolicyVersionPolicyVersion {
        /**
         * Strategic version creation timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
         */
        createDate?: pulumi.Input<string>;
        /**
         * Strategic grammar textNote: This field may return NULL, indicating that the valid value cannot be obtained.
         */
        document?: pulumi.Input<string>;
        /**
         * Whether it is an effective version.0 means not, 1 means yesNote: This field may return NULL, indicating that the valid value cannot be obtained.
         */
        isDefaultVersion?: pulumi.Input<number>;
        /**
         * Strategic version numberNote: This field may return NULL, indicating that the valid value cannot be obtained.
         */
        versionId?: pulumi.Input<number>;
    }

    export interface TagRoleAttachmentTag {
        /**
         * Label.
         */
        key: pulumi.Input<string>;
        /**
         * Label.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Cat {
    export interface TaskSetBatchTasks {
        /**
         * Task name.
         */
        name: pulumi.Input<string>;
        /**
         * Target address.
         */
        targetAddress: pulumi.Input<string>;
    }
}

export namespace Cbs {
}

export namespace Ccn {
    export interface GetCrossBorderRegionBandwidthLimitsFilter {
        /**
         * attribute name.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetCrossBorderRegionBandwidthLimitsFilterArgs {
        /**
         * attribute name.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRoutesFilter {
        /**
         * Field to be filtered. Support `route-id`, `cidr-block`, `instance-type`, `instance-region`, `instance-id`, `route-table-id`.
         */
        name: string;
        /**
         * Filter value of the field.
         */
        values: string[];
    }

    export interface GetRoutesFilterArgs {
        /**
         * Field to be filtered. Support `route-id`, `cidr-block`, `instance-type`, `instance-region`, `instance-id`, `route-table-id`.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstancesAcceptAttachInstance {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Attachment Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Region.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        routeTableId?: pulumi.Input<string>;
    }

    export interface InstancesRejectAttachInstance {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Attachment Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Region.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        routeTableId?: pulumi.Input<string>;
    }

    export interface InstancesResetAttachInstance {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Attachment Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Region.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        routeTableId?: pulumi.Input<string>;
    }

    export interface RouteTableAssociateInstanceConfigInstance {
        /**
         * Instances ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Cloud networking supports instance types: VPC, DIRECTCONNECT, BMVPC, EDGE, EDGE_TUNNEL, EDGE_VPNGW, VPNGW.
         */
        instanceType: pulumi.Input<string>;
    }

    export interface RouteTableBroadcastPoliciesPolicy {
        /**
         * Routing behavior, `accept` allows, `drop` rejects.
         */
        action: pulumi.Input<string>;
        /**
         * propagation conditions.
         */
        broadcastConditions: pulumi.Input<pulumi.Input<inputs.Ccn.RouteTableBroadcastPoliciesPolicyBroadcastCondition>[]>;
        /**
         * Policy description.
         */
        description: pulumi.Input<string>;
        /**
         * Routing conditions.
         */
        routeConditions: pulumi.Input<pulumi.Input<inputs.Ccn.RouteTableBroadcastPoliciesPolicyRouteCondition>[]>;
    }

    export interface RouteTableBroadcastPoliciesPolicyBroadcastCondition {
        /**
         * Matching mode, `1` precise matching, `0` fuzzy matching.
         */
        matchPattern: pulumi.Input<number>;
        /**
         * condition type.
         */
        name: pulumi.Input<string>;
        /**
         * List of conditional values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RouteTableBroadcastPoliciesPolicyRouteCondition {
        /**
         * Matching mode, `1` precise matching, `0` fuzzy matching.
         */
        matchPattern: pulumi.Input<number>;
        /**
         * condition type.
         */
        name: pulumi.Input<string>;
        /**
         * List of conditional values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RouteTableInputPoliciesPolicy {
        /**
         * Routing behavior, `accept` allows, `drop` rejects.
         */
        action: pulumi.Input<string>;
        /**
         * Policy description.
         */
        description: pulumi.Input<string>;
        /**
         * Routing conditions.
         */
        routeConditions: pulumi.Input<pulumi.Input<inputs.Ccn.RouteTableInputPoliciesPolicyRouteCondition>[]>;
    }

    export interface RouteTableInputPoliciesPolicyRouteCondition {
        /**
         * Matching mode, `1` precise matching, `0` fuzzy matching.
         */
        matchPattern: pulumi.Input<number>;
        /**
         * condition type.
         */
        name: pulumi.Input<string>;
        /**
         * List of conditional values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RouteTableSelectionPoliciesSelectionPolicy {
        /**
         * description.
         */
        description: pulumi.Input<string>;
        /**
         * Instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Type: Private Network: VPC, Dedicated Gateway: DIRECTCONNECT, Blackstone Private Network: BMVPC, EDGE Device: EDGE, EDGE Tunnel: EDGE_TUNNEL, EDGE Gateway: EDGE_VPNGW, VPN Gateway: VPNGW.
         */
        instanceType: pulumi.Input<string>;
        /**
         * route table ID.
         */
        routeTableId: pulumi.Input<string>;
        /**
         * Source CIDR.
         */
        sourceCidrBlock: pulumi.Input<string>;
    }
}

export namespace Cdc {
}

export namespace Cdh {
    export interface InstanceHostResource {
        /**
         * The number of available CPU cores of the instance.
         */
        cpuAvailableNum?: pulumi.Input<number>;
        /**
         * The number of total CPU cores of the instance.
         */
        cpuTotalNum?: pulumi.Input<number>;
        /**
         * Instance disk available capacity, unit in GB.
         */
        diskAvailableSize?: pulumi.Input<number>;
        /**
         * Instance disk total capacity, unit in GB.
         */
        diskTotalSize?: pulumi.Input<number>;
        /**
         * Type of the disk.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Instance memory available capacity, unit in GB.
         */
        memoryAvailableSize?: pulumi.Input<number>;
        /**
         * Instance memory total capacity, unit in GB.
         */
        memoryTotalSize?: pulumi.Input<number>;
    }
}

export namespace Cdn {
    export interface DomainAuthentication {
        /**
         * Authentication switching, available values: `on`, `off`.
         */
        switch?: pulumi.Input<string>;
        /**
         * Timestamp hotlink protection mode A configuration.
         */
        typeA?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeA>;
        /**
         * Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
         */
        typeB?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeB>;
        /**
         * Timestamp hotlink protection mode C configuration.
         */
        typeC?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeC>;
        /**
         * Timestamp hotlink protection mode D configuration.
         */
        typeD?: pulumi.Input<inputs.Cdn.DomainAuthenticationTypeD>;
    }

    export interface DomainAuthenticationTypeA {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
        /**
         * Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
         */
        signParam: pulumi.Input<string>;
    }

    export interface DomainAuthenticationTypeB {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
    }

    export interface DomainAuthenticationTypeC {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
        /**
         * Timestamp formation, available values: `dec`, `hex`.
         */
        timeFormat?: pulumi.Input<string>;
    }

    export interface DomainAuthenticationTypeD {
        /**
         * Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
         */
        backupSecretKey?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime: pulumi.Input<number>;
        /**
         * File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
         */
        fileExtensions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
         */
        filterType: pulumi.Input<string>;
        /**
         * The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
         */
        secretKey: pulumi.Input<string>;
        /**
         * Timestamp formation, available values: `dec`, `hex`.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
         */
        timeParam?: pulumi.Input<string>;
    }

    export interface DomainAwsPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainBandWidthAlert {
        /**
         * Alert percentage.
         */
        alertPercentage?: pulumi.Input<number>;
        /**
         * Switch alert.
         */
        alertSwitch?: pulumi.Input<string>;
        /**
         * threshold of bps.
         */
        bpsThreshold?: pulumi.Input<number>;
        /**
         * Counter measure.
         */
        counterMeasure?: pulumi.Input<string>;
        /**
         * Last trigger time.
         */
        lastTriggerTime?: pulumi.Input<string>;
        /**
         * Last trigger time of overseas.
         */
        lastTriggerTimeOverseas?: pulumi.Input<string>;
        /**
         * Metric.
         */
        metric?: pulumi.Input<string>;
        /**
         * Specify statistic item configuration.
         */
        statisticItem?: pulumi.Input<inputs.Cdn.DomainBandWidthAlertStatisticItem>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainBandWidthAlertStatisticItem {
        /**
         * Alert percentage.
         */
        alertPercentage?: pulumi.Input<number>;
        /**
         * Switch alert.
         */
        alertSwitch?: pulumi.Input<string>;
        /**
         * threshold of bps.
         */
        bpsThreshold?: pulumi.Input<number>;
        /**
         * Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
         */
        counterMeasure?: pulumi.Input<string>;
        /**
         * Cycle of checking in minutes, values `60`, `1440`.
         */
        cycle?: pulumi.Input<number>;
        /**
         * Metric.
         */
        metric?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
        /**
         * Type of statistic item.
         */
        type?: pulumi.Input<string>;
        /**
         * Time of auto unblock.
         */
        unblockTime?: pulumi.Input<number>;
    }

    export interface DomainCacheKey {
        /**
         * Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
         */
        fullUrlCache?: pulumi.Input<string>;
        /**
         * Specifies whether the cache key is case sensitive.
         */
        ignoreCase?: pulumi.Input<string>;
        /**
         * Path-specific cache key configuration.
         */
        keyRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainCacheKeyKeyRule>[]>;
        /**
         * Request parameter contained in CacheKey.
         */
        queryString?: pulumi.Input<inputs.Cdn.DomainCacheKeyQueryString>;
    }

    export interface DomainCacheKeyKeyRule {
        /**
         * Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
         */
        fullUrlCache?: pulumi.Input<string>;
        /**
         * Whether caches are case insensitive.
         */
        ignoreCase?: pulumi.Input<string>;
        /**
         * Request parameter contained in CacheKey.
         */
        queryString: pulumi.Input<inputs.Cdn.DomainCacheKeyKeyRuleQueryString>;
        /**
         * List of rule paths for each `keyRules`: `/` for `index`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify rule tag, default value is `user`.
         */
        ruleTag?: pulumi.Input<string>;
        /**
         * Rule type, available: `file`, `directory`, `path`, `index`.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainCacheKeyKeyRuleQueryString {
        /**
         * Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
         */
        action?: pulumi.Input<string>;
        /**
         * Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
         */
        switch?: pulumi.Input<string>;
        /**
         * Array of included/excluded query strings (separated by `;`).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainCacheKeyQueryString {
        /**
         * Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
         */
        action?: pulumi.Input<string>;
        /**
         * Whether to sort again, values `on`, `off` (Default).
         */
        reorder?: pulumi.Input<string>;
        /**
         * Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
         */
        switch?: pulumi.Input<string>;
        /**
         * Array of included/excluded query strings (separated by `;`).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainCompression {
        /**
         * List of compression rules.
         */
        compressionRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainCompressionCompressionRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainCompressionCompressionRule {
        /**
         * List of algorithms, available: `gzip` and `brotli`.
         */
        algorithms: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Must be set as true, enables compression.
         */
        compress: pulumi.Input<boolean>;
        /**
         * List of file extensions like `jpg`, `txt`.
         */
        fileExtensions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The maximum file size to trigger compression (in bytes).
         */
        maxLength: pulumi.Input<number>;
        /**
         * The minimum file size to trigger compression (in bytes).
         */
        minLength: pulumi.Input<number>;
        /**
         * List of rule paths for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        rulePaths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rule type, available: `all`, `file`, `directory`, `path`, `contentType`.
         */
        ruleType?: pulumi.Input<string>;
    }

    export interface DomainDownstreamCapping {
        /**
         * List of capping rule.
         */
        cappingRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainDownstreamCappingCappingRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainDownstreamCappingCappingRule {
        /**
         * Capping rule kbps threshold.
         */
        kbpsThreshold: pulumi.Input<number>;
        /**
         * List of capping rule path.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Capping rule type.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainErrorPage {
        /**
         * List of error page rule.
         */
        pageRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainErrorPagePageRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainErrorPagePageRule {
        /**
         * Redirect code of error page rules.
         */
        redirectCode: pulumi.Input<number>;
        /**
         * Redirect url of error page rules.
         */
        redirectUrl: pulumi.Input<string>;
        /**
         * Status code of error page rules.
         */
        statusCode: pulumi.Input<number>;
    }

    export interface DomainHttpsConfig {
        /**
         * Client certificate configuration information.
         */
        clientCertificateConfig?: pulumi.Input<inputs.Cdn.DomainHttpsConfigClientCertificateConfig>;
        /**
         * Configuration of forced HTTP or HTTPS redirects.
         */
        forceRedirect?: pulumi.Input<inputs.Cdn.DomainHttpsConfigForceRedirect>;
        /**
         * HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
         */
        http2Switch?: pulumi.Input<string>;
        /**
         * HTTPS configuration switch. Valid values are `on` and `off`.
         */
        httpsSwitch: pulumi.Input<string>;
        /**
         * OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
         */
        ocspStaplingSwitch?: pulumi.Input<string>;
        /**
         * Server certificate configuration information.
         */
        serverCertificateConfig?: pulumi.Input<inputs.Cdn.DomainHttpsConfigServerCertificateConfig>;
        /**
         * Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
         */
        spdySwitch?: pulumi.Input<string>;
        /**
         * Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
         */
        tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
         */
        verifyClient?: pulumi.Input<string>;
    }

    export interface DomainHttpsConfigClientCertificateConfig {
        /**
         * Client Certificate PEM format, requires Base64 encoding.
         */
        certificateContent: pulumi.Input<string>;
        /**
         * Client certificate name.
         */
        certificateName?: pulumi.Input<string>;
        /**
         * Deploy time of client certificate.
         */
        deployTime?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime?: pulumi.Input<string>;
    }

    export interface DomainHttpsConfigForceRedirect {
        /**
         * Whether to return the newly added header during force redirection. Values: `on`, `off`.
         */
        carryHeaders?: pulumi.Input<string>;
        /**
         * Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
         */
        redirectStatusCode?: pulumi.Input<number>;
        /**
         * Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
         */
        redirectType?: pulumi.Input<string>;
        /**
         * Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DomainHttpsConfigServerCertificateConfig {
        /**
         * Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
         */
        certificateContent?: pulumi.Input<string>;
        /**
         * Server certificate ID.
         */
        certificateId?: pulumi.Input<string>;
        /**
         * Server certificate name.
         */
        certificateName?: pulumi.Input<string>;
        /**
         * Deploy time of server certificate.
         */
        deployTime?: pulumi.Input<string>;
        /**
         * Signature expiration time in second. The maximum value is 630720000.
         */
        expireTime?: pulumi.Input<string>;
        /**
         * Certificate remarks.
         */
        message?: pulumi.Input<string>;
        /**
         * Server key information. This is required when uploading an external certificate.
         */
        privateKey?: pulumi.Input<string>;
    }

    export interface DomainHwPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainIpFilter {
        /**
         * Ip filter rules, This feature is only available to selected beta customers.
         */
        filterRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainIpFilterFilterRule>[]>;
        /**
         * IP `blacklist`/`whitelist` type.
         */
        filterType?: pulumi.Input<string>;
        /**
         * Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
         */
        filters?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Return code, available values: 400-499.
         */
        returnCode?: pulumi.Input<number>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainIpFilterFilterRule {
        /**
         * Ip filter `blacklist`/`whitelist` type of filter rules.
         */
        filterType: pulumi.Input<string>;
        /**
         * Ip filter rule list, supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
         */
        filters: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Content list for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ip filter rule type of filter rules, available: `all`, `file`, `directory`, `path`.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainIpFreqLimit {
        /**
         * Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
         */
        qps?: pulumi.Input<number>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainMaxAge {
        /**
         * List of Max Age rule configuration.
         */
        maxAgeRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainMaxAgeMaxAgeRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainMaxAgeMaxAgeRule {
        /**
         * Whether to follow origin, values: `on`/`off`, if set to `on`, the `maxAgeTime` will be ignored.
         */
        followOrigin?: pulumi.Input<string>;
        /**
         * List of rule paths for each `maxAgeType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
         */
        maxAgeContents: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Max Age time in seconds, this can set to `0` that stands for no cache.
         */
        maxAgeTime: pulumi.Input<number>;
        /**
         * The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
         */
        maxAgeType: pulumi.Input<string>;
    }

    export interface DomainOrigin {
        /**
         * Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backupOriginType`.
         */
        backupOriginLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name.
         */
        backupOriginType?: pulumi.Input<string>;
        /**
         * Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
         */
        backupServerName?: pulumi.Input<string>;
        /**
         * When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
         */
        cosPrivateAccess?: pulumi.Input<string>;
        /**
         * Object storage back to the source vendor. Required when the source station type is a third-party storage source station (third_party). Optional values include the following: `awsS3`: AWS S3; `aliOss`: Alibaba Cloud OSS; `hwObs`: Huawei OBS; `qiniuKodo`: Qiniu Cloud kodo; `others`: other vendors' object storage, only supports object storage compatible with AWS signature algorithm, such as Tencent Cloud Financial Zone COS. Example value: `hwObs`.
         */
        originCompany?: pulumi.Input<string>;
        /**
         * Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `originType`.
         */
        originLists: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
         */
        originPullProtocol?: pulumi.Input<string>;
        /**
         * Master origin server type. The following types are supported: `domain`: Domain name, `domainv6`: IPv6 domain name, `cos`: COS bucket address, `thirdParty`: Third-party object storage origin, `igtm`: IGTM origin, `ip`: IP address, `ipv6`: One IPv6 address, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipDomain`: IP addresses and domain names (only available to beta users), `ipDomainv6`: Multiple IPv4 addresses and one IPv6 domain name, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipv6Domainv6`: Multiple IPv6 addresses and one IPv6 domain name, `domainDomainv6`: Multiple IPv4 domain names and one IPv6 domain name, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name, `ipIpv6Domainv6`: Multiple IPv4 and IPv6 addresses and one IPv6 domain name, `ipDomainDomainv6`: Multiple IPv4 addresses and IPv4 domain names and one IPv6 domain name, `ipv6DomainDomainv6`: Multiple IPv4 domain names and IPv6 addresses and one IPv6 domain name, `ipIpv6DomainDomainv6`: Multiple IPv4 and IPv6 addresses and IPv4 domain names and one IPv6 domain name.
         */
        originType: pulumi.Input<string>;
        /**
         * Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
         */
        serverName?: pulumi.Input<string>;
    }

    export interface DomainOriginPullOptimization {
        /**
         * Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
         */
        optimizationType?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainOriginPullTimeout {
        /**
         * The origin-pull connection timeout (in seconds). Valid range: 5-60.
         */
        connectTimeout: pulumi.Input<number>;
        /**
         * The origin-pull receipt timeout (in seconds). Valid range: 10-60.
         */
        receiveTimeout: pulumi.Input<number>;
    }

    export interface DomainOssPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainOthersPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Bucket.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainPostMaxSize {
        /**
         * Maximum size in MB, value range is `[1, 200]`.
         */
        maxSize?: pulumi.Input<number>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainQnPrivateAccess {
        /**
         * Access ID.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Key.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainReferer {
        /**
         * List of referer rules.
         */
        refererRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainRefererRefererRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainRefererRefererRule {
        /**
         * Whether to allow emptpy.
         */
        allowEmpty: pulumi.Input<boolean>;
        /**
         * Referer type.
         */
        refererType: pulumi.Input<string>;
        /**
         * Referer list.
         */
        referers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Referer rule path list.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Referer rule type.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainRequestHeader {
        /**
         * Custom request header configuration rules.
         */
        headerRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainRequestHeaderHeaderRule>[]>;
        /**
         * Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DomainRequestHeaderHeaderRule {
        /**
         * Response header mode.
         */
        headerMode: pulumi.Input<string>;
        /**
         * response header name of rule.
         */
        headerName: pulumi.Input<string>;
        /**
         * response header value of rule.
         */
        headerValue: pulumi.Input<string>;
        /**
         * response rule paths of rule.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * response rule type of rule.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainResponseHeader {
        /**
         * List of response header rule.
         */
        headerRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainResponseHeaderHeaderRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainResponseHeaderHeaderRule {
        /**
         * Response header mode.
         */
        headerMode: pulumi.Input<string>;
        /**
         * response header name of rule.
         */
        headerName: pulumi.Input<string>;
        /**
         * response header value of rule.
         */
        headerValue: pulumi.Input<string>;
        /**
         * response rule paths of rule.
         */
        rulePaths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * response rule type of rule.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface DomainRuleCach {
        /**
         * Cache expiration time setting, the unit is second, the maximum can be set to 365 days.
         */
        cacheTime: pulumi.Input<number>;
        /**
         * Advanced cache expiration configuration. When it is turned on, it will compare the max-age value returned by the origin site with the cache expiration time set in CacheRules, and take the minimum value to cache at the node. Valid values are `on` and `off`. Default value is `off`.
         */
        compareMaxAge?: pulumi.Input<string>;
        /**
         * Follow the source station configuration switch. Valid values are `on` and `off`.
         */
        followOriginSwitch?: pulumi.Input<string>;
        /**
         * Specify whether to enable heuristic cache, only available while `followOriginSwitch` enabled, values: `on`, `off` (Default).
         */
        heuristicCacheSwitch?: pulumi.Input<string>;
        /**
         * Specify heuristic cache time in second, only available while `followOriginSwitch` and `heuristicCacheSwitch` enabled.
         */
        heuristicCacheTime?: pulumi.Input<number>;
        /**
         * Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules. Valid values are `on` and `off`. Default value is `off`.
         */
        ignoreCacheControl?: pulumi.Input<string>;
        /**
         * Ignore the Set-Cookie header of the origin site. Valid values are `on` and `off`. Default value is `off`. This parameter is for white-list customer.
         */
        ignoreSetCookie?: pulumi.Input<string>;
        /**
         * Cache configuration switch. Valid values are `on` and `off`.
         */
        noCacheSwitch?: pulumi.Input<string>;
        /**
         * Always check back to origin. Valid values are `on` and `off`. Default value is `off`.
         */
        reValidate?: pulumi.Input<string>;
        /**
         * Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html, `index`: fill /.
         */
        rulePaths?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * Cache configuration switch. Valid values are `on` and `off`.
         */
        switch?: pulumi.Input<string>;
    }

    export interface DomainStatusCodeCache {
        /**
         * List of cache rule.
         */
        cacheRules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainStatusCodeCacheCacheRule>[]>;
        /**
         * Configuration switch, available values: `on`, `off` (default).
         */
        switch: pulumi.Input<string>;
    }

    export interface DomainStatusCodeCacheCacheRule {
        /**
         * Status code cache expiration time (in seconds).
         */
        cacheTime: pulumi.Input<number>;
        /**
         * Code of status cache. available values: `403`, `404`.
         */
        statusCode: pulumi.Input<string>;
    }

    export interface UrlPurgePurgeHistory {
        /**
         * Purge task create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Purge flush type of `flush` or `delete`.
         */
        flushType?: pulumi.Input<string>;
        /**
         * Purge category in of `url` or `path`.
         */
        purgeType?: pulumi.Input<string>;
        /**
         * Purge status of `fail`, `done`, `process`.
         */
        status?: pulumi.Input<string>;
        /**
         * Task id of last operation.
         */
        taskId?: pulumi.Input<string>;
        /**
         * Purge url.
         */
        url?: pulumi.Input<string>;
    }

    export interface UrlPushPushHistory {
        /**
         * Specify push area. NOTE: only push same area cache contents.
         */
        area?: pulumi.Input<string>;
        /**
         * Push task create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Push progress in percent.
         */
        percent?: pulumi.Input<number>;
        /**
         * Push status of `fail`, `done`, `process` or `invalid` (4xx, 5xx response).
         */
        status?: pulumi.Input<string>;
        /**
         * Push task id.
         */
        taskId?: pulumi.Input<string>;
        /**
         * Push task update time.
         */
        updateTime?: pulumi.Input<string>;
        /**
         * Push url.
         */
        url?: pulumi.Input<string>;
    }
}

export namespace Cdwdoris {
    export interface GetInstancesSearchTag {
        /**
         * 1 means only the tag key is entered without a value, and 0 means both the key and the value are entered.
         */
        allValue?: number;
        /**
         * Tag key.
         */
        tagKey?: string;
        /**
         * Tag value.
         */
        tagValue?: string;
    }

    export interface GetInstancesSearchTagArgs {
        /**
         * 1 means only the tag key is entered without a value, and 0 means both the key and the value are entered.
         */
        allValue?: pulumi.Input<number>;
        /**
         * Tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface InstanceBeSpec {
        /**
         * Quantities.
         */
        count: pulumi.Input<number>;
        /**
         * Cloud disk size.
         */
        diskSize: pulumi.Input<number>;
        /**
         * Specification name.
         */
        specName: pulumi.Input<string>;
    }

    export interface InstanceChargeProperties {
        /**
         * Billing type: `PREPAID` for prepayment, and `POSTPAID_BY_HOUR` for postpayment. Note: This field may return null, indicating that no valid values can be obtained.
         */
        chargeType?: pulumi.Input<string>;
        /**
         * Whether to automatically renew. 1 means automatic renewal is enabled. Note: This field may return null, indicating that no valid values can be obtained.
         */
        renewFlag?: pulumi.Input<number>;
        /**
         * Billing duration Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeSpan?: pulumi.Input<number>;
        /**
         * Billing time unit, and `m` means month, etc. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeUnit?: pulumi.Input<string>;
    }

    export interface InstanceFeSpec {
        /**
         * Quantities.
         */
        count: pulumi.Input<number>;
        /**
         * Cloud disk size.
         */
        diskSize: pulumi.Input<number>;
        /**
         * Specification name.
         */
        specName: pulumi.Input<string>;
    }

    export interface InstanceTag {
        /**
         * Tag key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface InstanceUserMultiZoneInfos {
        /**
         * Subnet ID Note: This field may return null, indicating that no valid values can be obtained.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The number of available IP addresses in the current subnet Note: This field may return null, indicating that no valid values can be obtained.
         */
        subnetIpNum?: pulumi.Input<number>;
        /**
         * Availability zone Note: This field may return null, indicating that no valid values can be obtained.
         */
        zone?: pulumi.Input<string>;
    }

    export interface WorkloadGroupWorkloadGroup {
        /**
         * Cpu hard limit. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cpuHardLimit?: pulumi.Input<string>;
        /**
         * CPU weight. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cpuShare?: pulumi.Input<number>;
        /**
         * Whether to allow over-allocation. Note: This field may return null, indicating that no valid value can be obtained.
         */
        enableMemoryOverCommit?: pulumi.Input<boolean>;
        /**
         * Memory limit, the sum of the memory limit values of all resource groups should be less than or equal to 100. Note: This field may return null, indicating that no valid value can be obtained.
         */
        memoryLimit?: pulumi.Input<number>;
        /**
         * Workload group name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        workloadGroupName?: pulumi.Input<string>;
    }
}

export namespace Cdwpg {
    export interface InstanceChargeProperties {
        /**
         * Charge type, vaild values: PREPAID, POSTPAID_BY_HOUR.
         */
        chargeType?: pulumi.Input<string>;
        /**
         * 0-no automatic renewal,1-automatic renewalNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        renewFlag: pulumi.Input<number>;
        /**
         * Time RangeNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        timeSpan: pulumi.Input<number>;
        /**
         * Time Unit,Generally h and mNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        timeUnit: pulumi.Input<string>;
    }

    export interface InstanceResource {
        /**
         * resource count.
         */
        count: pulumi.Input<number>;
        /**
         * disk Information.
         */
        diskSpec: pulumi.Input<inputs.Cdwpg.InstanceResourceDiskSpec>;
        /**
         * resource name.
         */
        specName: pulumi.Input<string>;
        /**
         * resource type.
         */
        type: pulumi.Input<string>;
    }

    export interface InstanceResourceDiskSpec {
        /**
         * disk count.
         */
        diskCount: pulumi.Input<number>;
        /**
         * disk size.
         */
        diskSize: pulumi.Input<number>;
        /**
         * disk type.
         */
        diskType: pulumi.Input<string>;
    }
}

export namespace Cfs {
}

export namespace Cfw {
    export interface NatInstanceNewModeItems {
        /**
         * List of egress elastic public network IPs bound in the new mode.
         */
        eips: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of vpcs connected in new mode.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VpcInstanceVpcFwInstance {
        /**
         * Deploy regional information.
         */
        fwDeploy: pulumi.Input<inputs.Cfw.VpcInstanceVpcFwInstanceFwDeploy>;
        /**
         * Firewall instance ID (passed in editing scenario).
         */
        fwInsId?: pulumi.Input<string>;
        /**
         * Firewall instance name.
         */
        name: pulumi.Input<string>;
        /**
         * List of VpcIds accessed in private network mode; only used in private network mode.
         */
        vpcIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VpcInstanceVpcFwInstanceFwDeploy {
        /**
         * Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if it is empty, off-site disaster recovery will not be used by default.
         */
        crossAZone?: pulumi.Input<number>;
        /**
         * Firewall Deployment Region.
         */
        deployRegion: pulumi.Input<string>;
        /**
         * Bandwidth, unit: Mbps.
         */
        width: pulumi.Input<number>;
        /**
         * Zone list.
         */
        zoneSets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VpcPolicyBetaList {
        /**
         * Last execution time. Note: This field may return null, indicating that no valid value can be obtained.
         */
        lastTime?: pulumi.Input<string>;
        /**
         * Task id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        taskId?: pulumi.Input<number>;
        /**
         * Mission name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        taskName?: pulumi.Input<string>;
    }
}

export namespace Chdfs {
    export interface AccessRuleAccessRule {
        /**
         * rule access mode, 1: read only, 2: read &amp; wirte.
         */
        accessMode?: pulumi.Input<number>;
        /**
         * single rule id.
         */
        accessRuleId?: pulumi.Input<number>;
        /**
         * rule address, IP OR IP SEG.
         */
        address?: pulumi.Input<string>;
        /**
         * rule create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * rule priority, range 1 - 100, value less higher priority.
         */
        priority?: pulumi.Input<number>;
    }

    export interface LifeCycleRuleLifeCycleRule {
        /**
         * rule create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * single rule id.
         */
        lifeCycleRuleId?: pulumi.Input<number>;
        /**
         * rule name.
         */
        lifeCycleRuleName?: pulumi.Input<string>;
        /**
         * rule op path.
         */
        path?: pulumi.Input<string>;
        /**
         * rule status, 1:open, 2:close.
         */
        status?: pulumi.Input<number>;
        /**
         * life cycle rule transition list.
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.Chdfs.LifeCycleRuleLifeCycleRuleTransition>[]>;
    }

    export interface LifeCycleRuleLifeCycleRuleTransition {
        /**
         * trigger days(n day).
         */
        days: pulumi.Input<number>;
        /**
         * transition type, 1: archive, 2: delete, 3: low rate.
         */
        type: pulumi.Input<number>;
    }
}

export namespace Ci {
    export interface MediaAnimationTemplateContainer {
        /**
         * Package format.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaAnimationTemplateTimeInterval {
        /**
         * duration, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        duration?: pulumi.Input<string>;
        /**
         * Starting time, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
    }

    export interface MediaAnimationTemplateVideo {
        /**
         * Animation per second frame number, Priority: AnimateFramesPerSecond &gt; AnimateOnlyKeepKeyFrame &gt; AnimateTimeIntervalOfFrame.
         */
        animateFramesPerSecond?: pulumi.Input<string>;
        /**
         * GIFs are kept only Keyframe, Priority: AnimateFramesPerSecond &gt; AnimateOnlyKeepKeyFrame &gt; AnimateTimeIntervalOfFrame.
         */
        animateOnlyKeepKeyFrame?: pulumi.Input<string>;
        /**
         * Animation frame extraction every time, (0, video duration], Animation frame extraction time interval, If TimeInterval.Duration is set, it is less than this value.
         */
        animateTimeIntervalOfFrame?: pulumi.Input<string>;
        /**
         * Codec format `gif`, `webp`.
         */
        codec: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Set relative quality, [1, 100), webp image quality setting takes effect, gif has no quality parameter.
         */
        quality?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplate {
        /**
         * audio parameters, the target file does not require Audio information, need to set Audio.Remove to true.
         */
        audio?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateAudio>;
        /**
         * mixing parameters.
         */
        audioMixes?: pulumi.Input<pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateAudioMix>[]>;
        /**
         * Package format.
         */
        concatFragments: pulumi.Input<pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateConcatFragment>[]>;
        /**
         * Only splicing without transcoding.
         */
        container: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateContainer>;
        /**
         * video information, do not upload Video, which is equivalent to deleting video information.
         */
        video?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateVideo>;
    }

    export interface MediaConcatTemplateConcatTemplateAudio {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3, support 1, 2.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling Rate- Unit: Hz- Optional 11025, 22050, 32000, 44100, 48000, 96000- Different packages, mp3 supports different sampling rates, as shown in the table below.
         */
        samplerate?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateAudioMix {
        /**
         * The media address of the audio track that needs to be mixed.
         */
        audioSource: pulumi.Input<string>;
        /**
         * Mix Fade Configuration.
         */
        effectConfig?: pulumi.Input<inputs.Ci.MediaConcatTemplateConcatTemplateAudioMixEffectConfig>;
        /**
         * Mixing mode Repeat: background sound loop, Once: The background sound is played once.
         */
        mixMode?: pulumi.Input<string>;
        /**
         * Whether to replace the original audio of the Input media file with the mixed audio track media.
         */
        replace?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateAudioMixEffectConfig {
        /**
         * bgm transition fade-in duration, support floating point numbers.
         */
        bgmFadeTime?: pulumi.Input<string>;
        /**
         * Enable bgm conversion fade in.
         */
        enableBgmFade?: pulumi.Input<string>;
        /**
         * enable fade out.
         */
        enableEndFadeout?: pulumi.Input<string>;
        /**
         * enable fade in.
         */
        enableStartFadein?: pulumi.Input<string>;
        /**
         * fade out time, greater than 0, support floating point numbers.
         */
        endFadeoutTime?: pulumi.Input<string>;
        /**
         * Fade in duration, greater than 0, support floating point numbers.
         */
        startFadeinTime?: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateConcatFragment {
        /**
         * node type, `start`, `end`.
         */
        mode: pulumi.Input<string>;
        /**
         * Splicing object address.
         */
        url: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateContainer {
        /**
         * Container format: mp4, flv, hls, ts, mp3, aac.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaConcatTemplateConcatTemplateVideo {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * Codec format `H.264`.
         */
        codec: pulumi.Input<string>;
        /**
         * Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
         */
        crf?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Rotation angle, Value range: [0, 360), Unit: degree.
         */
        rotate?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaPicProcessTemplatePicProcess {
        /**
         * Whether to return the original image information.
         */
        isPicInfo?: pulumi.Input<string>;
        /**
         * Image processing rules, 1: basic image processing, please refer to the basic image processing document, 2: image compression, please refer to the image compression document, 3: blind watermark, please refer to the blind watermark document.
         */
        processRule: pulumi.Input<string>;
    }

    export interface MediaSmartCoverTemplateSmartCover {
        /**
         * Number of screenshots, [1,10].
         */
        count?: pulumi.Input<string>;
        /**
         * cover deduplication, true/false.
         */
        deleteDuplicates?: pulumi.Input<string>;
        /**
         * Image Format, value jpg, png, webp.
         */
        format: pulumi.Input<string>;
        /**
         * Height, value range: [128, 4096], unit: px, if only Height is set, Width is calculated according to the original video ratio.
         */
        height?: pulumi.Input<string>;
        /**
         * Width, value range: [128, 4096], unit: px, if only Width is set, Height is calculated according to the original ratio of the video.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaSnapshotTemplateSnapshot {
        /**
         * Screenshot black screen detection parameters, Valid when IsCheckBlack=true, Value reference range [30, 100], indicating the proportion of black pixels, the smaller the value, the smaller the proportion of black pixels, Start&gt;0, the parameter setting is invalid, no filter black screen, Start =0 parameter is valid, the start time of the frame capture is the first frame non-black screen start.
         */
        blackLevel?: pulumi.Input<string>;
        /**
         * Screenshot image processing parameters, for example: imageMogr2/format/png.
         */
        ciParam?: pulumi.Input<string>;
        /**
         * Number of screenshots, range (0 10000].
         */
        count: pulumi.Input<string>;
        /**
         * high, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video.
         */
        height?: pulumi.Input<string>;
        /**
         * Whether to enable black screen detection true/false.
         */
        isCheckBlack?: pulumi.Input<string>;
        /**
         * Whether to check the number of screenshots forcibly, when using custom interval mode to take screenshots, the video time is not long enough to capture Count screenshots, you can switch to average screenshot mode to capture Count screenshots.
         */
        isCheckCount?: pulumi.Input<string>;
        /**
         * Screenshot mode, value range: {Interval, Average, KeyFrame}- Interval means interval mode Average means average mode- KeyFrame represents the key frame mode- Interval mode: Start, TimeInterval, The Count parameter takes effect. When Count is set and TimeInterval is not set, Indicates to capture all frames, a total of Count pictures- Average mode: Start, the Count parameter takes effect. express.
         */
        mode?: pulumi.Input<string>;
        /**
         * Screenshot black screen detection parameters, Valid when IsCheckBlack=true, The threshold for judging whether a pixel is a black point, value range: [0, 255].
         */
        pixelBlackThreshold?: pulumi.Input<string>;
        /**
         * Screenshot output mode parameters, Value range: {OnlySnapshot, OnlySprite, SnapshotAndSprite}, OnlySnapshot means output only screenshot mode OnlySprite means only output sprite mode SnapshotAndSprite means output screenshot and sprite mode.
         */
        snapshotOutMode?: pulumi.Input<string>;
        /**
         * Screenshot output configuration.
         */
        spriteSnapshotConfig?: pulumi.Input<inputs.Ci.MediaSnapshotTemplateSnapshotSpriteSnapshotConfig>;
        /**
         * Starting time, [0 video duration] in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
        /**
         * Screenshot time interval, (0 3600], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        timeInterval?: pulumi.Input<string>;
        /**
         * wide, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaSnapshotTemplateSnapshotSpriteSnapshotConfig {
        /**
         * Single image height Value range: [8, 4096], Unit: px.
         */
        cellHeight?: pulumi.Input<string>;
        /**
         * Single image width Value range: [8, 4096], Unit: px.
         */
        cellWidth?: pulumi.Input<string>;
        /**
         * See `https://www.ffmpeg.org/ffmpeg-utils.html#color-syntax` for details on supported colors.
         */
        color: pulumi.Input<string>;
        /**
         * Number of screenshot columns, value range: [1, 10000].
         */
        columns: pulumi.Input<string>;
        /**
         * Number of screenshot lines, value range: [1, 10000].
         */
        lines: pulumi.Input<string>;
        /**
         * screenshot margin size, Value range: [8, 4096], Unit: px.
         */
        margin?: pulumi.Input<string>;
        /**
         * screenshot padding size, Value range: [8, 4096], Unit: px.
         */
        padding?: pulumi.Input<string>;
    }

    export interface MediaSpeechRecognitionTemplateSpeechRecognition {
        /**
         * Number of voice channels: 1 means mono. EngineModelType supports only mono for non-telephone scenarios, and 2 means dual channels (only 8kZh engine model supports dual channels, which should correspond to both sides of the call).
         */
        channelNum: pulumi.Input<string>;
        /**
         * Whether to perform intelligent conversion of Arabic numerals (currently supports Mandarin Chinese engine): 0 means no conversion, directly output Chinese numbers, 1 means intelligently convert to Arabic numerals according to the scene, 3 means enable math-related digital conversion, the default value is 0.
         */
        convertNumMode?: pulumi.Input<string>;
        /**
         * Engine model type, divided into phone scene and non-phone scene, phone scene: 8k_zh: phone 8k Chinese Mandarin general (can be used for dual-channel audio), 8k_zh_s: phone 8k Chinese Mandarin speaker separation (only for monophonic audio), 8k_en: Telephone 8k English; non-telephone scene: 16k_zh: 16k Mandarin Chinese, 16k_zh_video: 16k audio and video field, 16k_en: 16k English, 16k_ca: 16k Cantonese, 16k_ja: 16k Japanese, 16k_zh_edu: Chinese education, 16k_en_edu: English education, 16k_zh_medical: medical, 16k_th: Thai, 16k_zh_dialect: multi-dialect, supports 23 dialects.
         */
        engineModelType: pulumi.Input<string>;
        /**
         * Whether to filter dirty words (currently supports Mandarin Chinese engine): 0 means not to filter dirty words, 1 means to filter dirty words, 2 means to replace dirty words with *, the default value is 0.
         */
        filterDirty?: pulumi.Input<string>;
        /**
         * Whether to pass modal particles (currently supports Mandarin Chinese engine): 0 means not to filter modal particles, 1 means partial filtering, 2 means strict filtering, and the default value is 0.
         */
        filterModal?: pulumi.Input<string>;
        /**
         * Whether to filter punctuation (currently supports Mandarin Chinese engine): 0 means no filtering, 1 means filtering end-of-sentence punctuation, 2 means filtering all punctuation, the default value is 0.
         */
        filterPunc?: pulumi.Input<string>;
        /**
         * Output file type, optional txt, srt. The default is txt.
         */
        outputFileType?: pulumi.Input<string>;
        /**
         * Recognition result return form: 0 means the recognition result text (including segmented time stamps), 1 is the detailed recognition result at the word level granularity, without punctuation, and includes the speech rate value (a list of word time stamps, generally used to generate subtitle scenes), 2 Detailed recognition results at word-level granularity (including punctuation and speech rate values)..
         */
        resTextFormat?: pulumi.Input<string>;
        /**
         * Whether to enable speaker separation: 0 means not enabled, 1 means enabled (only supports 8k_zh, 16k_zh, 16k_zh_video, monophonic audio), the default value is 0, Note: 8K telephony scenarios suggest using dual-channel to distinguish between the two parties, set ChannelNum=2 is enough, no need to enable speaker separation.
         */
        speakerDiarization?: pulumi.Input<string>;
        /**
         * The number of speakers to be separated (need to be used in conjunction with enabling speaker separation), value range: 0-10, 0 means automatic separation (currently only supports <= 6 people), 1-10 represents the number of specified speakers to be separated. The default value is 0.
         */
        speakerNumber?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateAudio {
        /**
         * Codec format, value aac, mp3, flac, amr, Vorbis, opus, pcm_s16le.
         */
        codec: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateContainer {
        /**
         * Fragment configuration, valid when format is hls and dash.
         */
        clipConfig?: pulumi.Input<inputs.Ci.MediaTranscodeProTemplateContainerClipConfig>;
        /**
         * Package format.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateContainerClipConfig {
        /**
         * Fragmentation duration, default 5s.
         */
        duration?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateTimeInterval {
        /**
         * duration, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        duration?: pulumi.Input<string>;
        /**
         * Starting time, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateTransConfig {
        /**
         * Resolution adjustment method, value scale, crop, pad, none, When the aspect ratio of the output video is different from the original video, adjust the resolution accordingly according to this parameter.
         */
        adjDarMethod?: pulumi.Input<string>;
        /**
         * Audio bit rate adjustment mode, value 0, 1; when the output audio bit rate is greater than the original audio bit rate, 0 means use the original audio bit rate; 1 means return transcoding failed, Take effect when IsCheckAudioBitrate is true.
         */
        audioBitrateAdjMethod?: pulumi.Input<string>;
        /**
         * Whether to delete the MetaData information in the file, true, false, When false, keep source file information.
         */
        deleteMetadata?: pulumi.Input<string>;
        /**
         * Whether to check the audio code rate, true, false, When false, transcode according to configuration parameters.
         */
        isCheckAudioBitrate?: pulumi.Input<string>;
        /**
         * Whether to check the resolution, when it is false, transcode according to the configuration parameters.
         */
        isCheckReso?: pulumi.Input<string>;
        /**
         * Whether to check the video code rate, when it is false, transcode according to the configuration parameters.
         */
        isCheckVideoBitrate?: pulumi.Input<string>;
        /**
         * Whether to enable HDR to SDR true, false.
         */
        isHdr2Sdr?: pulumi.Input<string>;
        /**
         * Resolution adjustment mode, value 0, 1; 0 means use the original video resolution; 1 means return transcoding failed, Take effect when IsCheckReso is true.
         */
        resoAdjMethod?: pulumi.Input<string>;
        /**
         * Video bit rate adjustment method, value 0, 1; when the output video bit rate is greater than the original video bit rate, 0 means use the original video bit rate; 1 means return transcoding failed, Take effect when IsCheckVideoBitrate is true.
         */
        videoBitrateAdjMethod?: pulumi.Input<string>;
    }

    export interface MediaTranscodeProTemplateVideo {
        /**
         * Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
         */
        bitrate?: pulumi.Input<string>;
        /**
         * Codec format, default value: `H.264`, when format is WebM, it is VP8, value range: `H.264`, `H.265`, `VP8`, `VP9`, `AV1`.
         */
        codec?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * field pattern.
         */
        interlaced?: pulumi.Input<string>;
        /**
         * encoding level, Support baseline, main, high, auto- When Pixfmt is auto, this parameter can only be set to auto, when it is set to other options, the parameter value will be set to auto- baseline: suitable for mobile devices- main: suitable for standard resolution devices- high: suitable for high-resolution devices- Only H.264 supports this parameter.
         */
        profile?: pulumi.Input<string>;
        /**
         * Rotation angle, Value range: [0, 360), Unit: degree.
         */
        rotate?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateAudio {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac/flac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3/opus, support 1, 2- When Codec is set to Vorbis, only 2 is supported- When Codec is set to amr, only 1 is supported- When Codec is set to pcm_s16le, only 1 and 2 are supported- When the encapsulation format is dash, 8 is not supported.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3, flac, amr, Vorbis, opus, pcm_s16le.
         */
        codec?: pulumi.Input<string>;
        /**
         * Keep dual audio tracks, the value is true, false. This parameter is invalid when Video.Codec is H.265.
         */
        keepTwoTracks?: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Sampling bit width- When Codec is set to aac, support fltp- When Codec is set to mp3, fltp, s16p, s32p are supported- When Codec is set to flac, s16, s32, s16p, s32p are supported- When Codec is set to amr, support s16, s16p- When Codec is set to opus, support s16- When Codec is set to pcm_s16le, support s16- When Codec is set to Vorbis, support fltp- This parameter is invalid when Video.Codec is H.265.
         */
        sampleFormat?: pulumi.Input<string>;
        /**
         * Sampling Rate- Unit: Hz- Optional 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000, 88200, 96000- Different packages, mp3 supports different sampling rates, as shown in the table below- When Codec is set to amr, only 8000 is supported- When Codec is set to opus, it supports 8000, 16000, 24000, 48000.
         */
        samplerate?: pulumi.Input<string>;
        /**
         * Convert track, the value is true, false. This parameter is invalid when Video.Codec is H.265.
         */
        switchTrack?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateAudioMix {
        /**
         * The media address of the audio track that needs to be mixed.
         */
        audioSource: pulumi.Input<string>;
        /**
         * Mix Fade Configuration.
         */
        effectConfig?: pulumi.Input<inputs.Ci.MediaTranscodeTemplateAudioMixEffectConfig>;
        /**
         * Mixing mode Repeat: background sound loop, Once: The background sound is played once.
         */
        mixMode?: pulumi.Input<string>;
        /**
         * Whether to replace the original audio of the Input media file with the mixed audio track media.
         */
        replace?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateAudioMixEffectConfig {
        /**
         * bgm transition fade-in duration, support floating point numbers.
         */
        bgmFadeTime?: pulumi.Input<string>;
        /**
         * Enable bgm conversion fade in.
         */
        enableBgmFade?: pulumi.Input<string>;
        /**
         * enable fade out.
         */
        enableEndFadeout?: pulumi.Input<string>;
        /**
         * enable fade in.
         */
        enableStartFadein?: pulumi.Input<string>;
        /**
         * fade out time, greater than 0, support floating point numbers.
         */
        endFadeoutTime?: pulumi.Input<string>;
        /**
         * Fade in duration, greater than 0, support floating point numbers.
         */
        startFadeinTime?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateContainer {
        /**
         * Fragment configuration, valid when format is hls and dash.
         */
        clipConfig?: pulumi.Input<inputs.Ci.MediaTranscodeTemplateContainerClipConfig>;
        /**
         * Package format.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateContainerClipConfig {
        /**
         * Fragmentation duration, default 5s.
         */
        duration?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateTimeInterval {
        /**
         * duration, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        duration?: pulumi.Input<string>;
        /**
         * Starting time, [0 video duration], in seconds, Support float format, the execution accuracy is accurate to milliseconds.
         */
        start?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateTransConfig {
        /**
         * Resolution adjustment method, value scale, crop, pad, none, When the aspect ratio of the output video is different from the original video, adjust the resolution accordingly according to this parameter.
         */
        adjDarMethod?: pulumi.Input<string>;
        /**
         * Audio bit rate adjustment mode, value 0, 1; when the output audio bit rate is greater than the original audio bit rate, 0 means use the original audio bit rate; 1 means return transcoding failed, Take effect when IsCheckAudioBitrate is true.
         */
        audioBitrateAdjMethod?: pulumi.Input<string>;
        /**
         * Whether to delete the MetaData information in the file, true, false, When false, keep source file information.
         */
        deleteMetadata?: pulumi.Input<string>;
        /**
         * hls encryption configuration.
         */
        hlsEncrypt?: pulumi.Input<inputs.Ci.MediaTranscodeTemplateTransConfigHlsEncrypt>;
        /**
         * Whether to check the audio code rate, true, false, When false, transcode according to configuration parameters.
         */
        isCheckAudioBitrate?: pulumi.Input<string>;
        /**
         * Whether to check the resolution, when it is false, transcode according to the configuration parameters.
         */
        isCheckReso?: pulumi.Input<string>;
        /**
         * Whether to check the video code rate, when it is false, transcode according to the configuration parameters.
         */
        isCheckVideoBitrate?: pulumi.Input<string>;
        /**
         * Whether to enable HDR to SDR true, false.
         */
        isHdr2Sdr?: pulumi.Input<string>;
        /**
         * Resolution adjustment mode, value 0, 1; 0 means use the original video resolution; 1 means return transcoding failed, Take effect when IsCheckReso is true.
         */
        resoAdjMethod?: pulumi.Input<string>;
        /**
         * Video bit rate adjustment method, value 0, 1; when the output video bit rate is greater than the original video bit rate, 0 means use the original video bit rate; 1 means return transcoding failed, Take effect when IsCheckVideoBitrate is true.
         */
        videoBitrateAdjMethod?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateTransConfigHlsEncrypt {
        /**
         * Whether to enable HLS encryption, support encryption when Container.Format is hls.
         */
        isHlsEncrypt?: pulumi.Input<string>;
        /**
         * HLS encrypted key, this parameter is only meaningful when IsHlsEncrypt is true.
         */
        uriKey?: pulumi.Input<string>;
    }

    export interface MediaTranscodeTemplateVideo {
        /**
         * Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
         */
        bitrate?: pulumi.Input<string>;
        /**
         * buffer size, Value range: [1000, 128000], Unit: Kb, This parameter is not supported when Codec is VP8/VP9.
         */
        bufsize?: pulumi.Input<string>;
        /**
         * Codec format, default value: `H.264`, when format is WebM, it is VP8, value range: `H.264`, `H.265`, `VP8`, `VP9`, `AV1`.
         */
        codec?: pulumi.Input<string>;
        /**
         * Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
         */
        crf?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * The maximum number of frames between key frames, value range: [1, 100000].
         */
        gop?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Adaptive length,true, false, This parameter is not supported when Codec is VP8/VP9/AV1.
         */
        longShortMode?: pulumi.Input<string>;
        /**
         * Peak video bit rate, Value range: [10, 50000], Unit: Kbps, This parameter is not supported when Codec is VP8/VP9.
         */
        maxrate?: pulumi.Input<string>;
        /**
         * video color format, H.264 support: yuv420p, yuv422p, yuv444p, yuvj420p, yuvj422p, yuvj444p, auto, H.265 support: yuv420p, yuv420p10le, auto, This parameter is not supported when Codec is VP8/VP9/AV1.
         */
        pixfmt?: pulumi.Input<string>;
        /**
         * Video Algorithm Presets- H.264 supports this parameter, the values are veryfast, fast, medium, slow, slower- VP8 supports this parameter, the value is good, realtime- AV1 supports this parameter, the value is 5 (recommended value), 4- H.265 and VP9 do not support this parameter.
         */
        preset?: pulumi.Input<string>;
        /**
         * encoding level, Support baseline, main, high, auto- When Pixfmt is auto, this parameter can only be set to auto, when it is set to other options, the parameter value will be set to auto- baseline: suitable for mobile devices- main: suitable for standard resolution devices- high: suitable for high-resolution devices- Only H.264 supports this parameter.
         */
        profile?: pulumi.Input<string>;
        /**
         * Whether to delete the video stream, true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Rotation angle, Value range: [0, 360), Unit: degree.
         */
        rotate?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateAudio {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3, support 1, 2.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3.
         */
        codec: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * Sampling Rate- Unit: Hz- Optional 11025, 22050, 32000, 44100, 48000, 96000- Different packages, mp3 supports different sampling rates, as shown in the table below.
         */
        samplerate?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateAudioMix {
        /**
         * The media address of the audio track that needs to be mixed.
         */
        audioSource: pulumi.Input<string>;
        /**
         * Mix Fade Configuration.
         */
        effectConfig?: pulumi.Input<inputs.Ci.MediaVideoMontageTemplateAudioMixEffectConfig>;
        /**
         * Mixing mode Repeat: background sound loop, Once: The background sound is played once.
         */
        mixMode?: pulumi.Input<string>;
        /**
         * Whether to replace the original audio of the Input media file with the mixed audio track media.
         */
        replace?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateAudioMixEffectConfig {
        /**
         * bgm transition fade-in duration, support floating point numbers.
         */
        bgmFadeTime?: pulumi.Input<string>;
        /**
         * Enable bgm conversion fade in.
         */
        enableBgmFade?: pulumi.Input<string>;
        /**
         * enable fade out.
         */
        enableEndFadeout?: pulumi.Input<string>;
        /**
         * enable fade in.
         */
        enableStartFadein?: pulumi.Input<string>;
        /**
         * fade out time, greater than 0, support floating point numbers.
         */
        endFadeoutTime?: pulumi.Input<string>;
        /**
         * Fade in duration, greater than 0, support floating point numbers.
         */
        startFadeinTime?: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateContainer {
        /**
         * Container format: mp4, flv, hls, ts, mkv.
         */
        format: pulumi.Input<string>;
    }

    export interface MediaVideoMontageTemplateVideo {
        /**
         * Bit rate of video output file, value range: [10, 50000], unit: Kbps, auto means adaptive bit rate.
         */
        bitrate?: pulumi.Input<string>;
        /**
         * Codec format `H.264`.
         */
        codec: pulumi.Input<string>;
        /**
         * Bit rate-quality control factor, value range: (0, 51], If Crf is set, the setting of Bitrate will be invalid, When Bitrate is empty, the default is 25.
         */
        crf?: pulumi.Input<string>;
        /**
         * Frame rate, value range: (0, 60], Unit: fps.
         */
        fps?: pulumi.Input<string>;
        /**
         * High, value range: [128, 4096], Unit: px, If only Height is set, Width is calculated according to the original ratio of the video, must be even.
         */
        height?: pulumi.Input<string>;
        /**
         * Whether to delete the source audio stream, the value is true, false.
         */
        remove?: pulumi.Input<string>;
        /**
         * width, value range: [128, 4096], Unit: px, If only Width is set, Height is calculated according to the original ratio of the video, must be even.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaVideoProcessTemplateColorEnhance {
        /**
         * Contrast, value range: [0, 100], empty string (indicates automatic analysis).
         */
        contrast?: pulumi.Input<string>;
        /**
         * colorcorrection, value range: [0, 100], empty string (indicating automatic analysis).
         */
        correction?: pulumi.Input<string>;
        /**
         * Whether color enhancement is turned on.
         */
        enable?: pulumi.Input<string>;
        /**
         * Saturation, value range: [0, 100], empty string (indicating automatic analysis).
         */
        saturation?: pulumi.Input<string>;
    }

    export interface MediaVideoProcessTemplateMsSharpen {
        /**
         * Whether detail enhancement is enabled.
         */
        enable?: pulumi.Input<string>;
        /**
         * Enhancement level, value range: [0, 10], empty string (indicates automatic analysis).
         */
        sharpenLevel?: pulumi.Input<string>;
    }

    export interface MediaVoiceSeparateTemplateAudioConfig {
        /**
         * Original audio bit rate, unit: Kbps, Value range: [8, 1000].
         */
        bitrate?: pulumi.Input<string>;
        /**
         * number of channels- When Codec is set to aac/flac, support 1, 2, 4, 5, 6, 8- When Codec is set to mp3, support 1, 2- When Codec is set to amr, only 1 is supported.
         */
        channels?: pulumi.Input<string>;
        /**
         * Codec format, value aac, mp3, flac, amr.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling Rate- 1: Unit: Hz- 2: Optional 8000, 11025, 22050, 32000, 44100, 48000, 96000- 3: When Codec is set to aac/flac, 8000 is not supported- 4: When Codec is set to mp3, 8000 and 96000 are not supported- 5: When Codec is set to amr, only 8000 is supported.
         */
        samplerate?: pulumi.Input<string>;
    }

    export interface MediaWatermarkTemplateWatermark {
        /**
         * Horizontal offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ], 2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Top, Bottom and Center, the parameter is invalid.
         */
        dx: pulumi.Input<string>;
        /**
         * Vertical offset, 1: In the picture watermark, if Background is true, when locMode is Relativity, it is %, value range: [-300 0]; when locMode is Absolute, it is px, value range: [-4096 0] ],2: In the picture watermark, if Background is false, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096],3: In text watermark, when locMode is Relativity, it is %, value range: [0 100]; when locMode is Absolute, it is px, value range: [0 4096], 4: When Pos is Left, Right and Center, the parameter is invalid.
         */
        dy: pulumi.Input<string>;
        /**
         * Watermark end time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Image watermark node.
         */
        image?: pulumi.Input<inputs.Ci.MediaWatermarkTemplateWatermarkImage>;
        /**
         * Offset method, Relativity: proportional, Absolute: fixed position.
         */
        locMode: pulumi.Input<string>;
        /**
         * Reference position, TopRight, TopLeft, BottomRight, BottomLeft, Left, Right, Top, Bottom, Center.
         */
        pos: pulumi.Input<string>;
        /**
         * Watermark start time, 1: [0 video duration], 2: unit is second, 3: support float format, execution accuracy is accurate to milliseconds.
         */
        startTime?: pulumi.Input<string>;
        /**
         * Text Watermark Node.
         */
        text?: pulumi.Input<inputs.Ci.MediaWatermarkTemplateWatermarkText>;
        /**
         * Watermark type, Text: text watermark, Image: image watermark.
         */
        type: pulumi.Input<string>;
    }

    export interface MediaWatermarkTemplateWatermarkImage {
        /**
         * Whether the background image.
         */
        background: pulumi.Input<string>;
        /**
         * High, 1: When the Mode is Original, it does not support setting the width of the watermark image, 2: When the Mode is Proportion, the unit is %, the value range of the background image: [100 300]; the value range of the foreground image: [1 100], relative to Video width, up to 4096px, 3: When Mode is Fixed, the unit is px, value range: [8, 4096], 4: If only Width is set, Height is calculated according to the proportion of the watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Size mode, Original: original size, Proportion: proportional, Fixed: fixed size.
         */
        mode: pulumi.Input<string>;
        /**
         * Transparency, value range: [1 100], unit %.
         */
        transparency: pulumi.Input<string>;
        /**
         * Address of watermark map (pass in after Urlencode is required).
         */
        url: pulumi.Input<string>;
        /**
         * Width, 1: When the Mode is Original, it does not support setting the width of the watermark image, 2: When the Mode is Proportion, the unit is %, the value range of the background image: [100 300]; the value range of the foreground image: [1 100], relative to Video width, up to 4096px, 3: When Mode is Fixed, the unit is px, value range: [8, 4096], 4: If only Width is set, Height is calculated according to the proportion of the watermark image.
         */
        width?: pulumi.Input<string>;
    }

    export interface MediaWatermarkTemplateWatermarkText {
        /**
         * Font color, format: 0xRRGGBB.
         */
        fontColor: pulumi.Input<string>;
        /**
         * Font size, value range: [5 100], unit px.
         */
        fontSize: pulumi.Input<string>;
        /**
         * font type.
         */
        fontType: pulumi.Input<string>;
        /**
         * Watermark content, the length does not exceed 64 characters, only supports Chinese, English, numbers, _, - and *.
         */
        text: pulumi.Input<string>;
        /**
         * Transparency, value range: [1 100], unit %.
         */
        transparency: pulumi.Input<string>;
    }
}

export namespace Ckafka {
    export interface AclRuleRuleList {
        /**
         * The default is *, which means that any host can be accessed. Currently, ckafka does not support host and ip network segment.
         */
        host: pulumi.Input<string>;
        /**
         * Acl operation mode, enumeration value (all operations All, read Read, write Write).
         */
        operation: pulumi.Input<string>;
        /**
         * permission type, (Deny|Allow).
         */
        permissionType: pulumi.Input<string>;
        /**
         * User list, the default is User:, which means that any user can access, and the current user can only be the user included in the user list. The input format needs to be prefixed with [User:]. For example, user A is passed in as User:A.
         */
        principal: pulumi.Input<string>;
    }

    export interface ConnectResourceClickhouseConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Password for Clickhouse connection source.
         */
        password: pulumi.Input<string>;
        /**
         * Clickhouse connection port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resources for Click House connection sources.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether the Clickhouse connection source is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * The username of the clickhouse connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceDorisConnectParam {
        /**
         * Doris http CLB port, Usually mapped to port 8040 of be.
         */
        bePort?: pulumi.Input<number>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Doris  password.
         */
        password: pulumi.Input<string>;
        /**
         * Doris jdbc CLB port, Usually mapped to port 9030 of fe.
         */
        port: pulumi.Input<number>;
        /**
         * Doris  instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * Doris Whether the connection source is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * Doris vip, When it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * Doris vpcId, When it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Doris  The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceDtsConnectParam {
        /**
         * Id of the Dts consumption group.
         */
        groupId: pulumi.Input<string>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * The password of the Dts consumption group.
         */
        password: pulumi.Input<string>;
        /**
         * Dts port.
         */
        port: pulumi.Input<number>;
        /**
         * Dts instance Id.
         */
        resource: pulumi.Input<string>;
        /**
         * Topic subscribed by Dts.
         */
        topic: pulumi.Input<string>;
        /**
         * The account number of the Dts consumption group.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceEsConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Es The password of the connection source.
         */
        password: pulumi.Input<string>;
        /**
         * Es port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resource of Es connection source.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether the Es connection source is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Es The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceKafkaConnectParam {
        /**
         * Kafka broker ip, Mandatory when self-built.
         */
        brokerAddress?: pulumi.Input<string>;
        /**
         * Whether to update to the associated Dip task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * CKafka instanceId region, Required when crossing regions.
         */
        region?: pulumi.Input<string>;
        /**
         * Kafka instanceId, When it is a Tencent Cloud instance, it is required.
         */
        resource?: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
    }

    export interface ConnectResourceMariadbConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * MariaDB password.
         */
        password: pulumi.Input<string>;
        /**
         * MariaDB port.
         */
        port: pulumi.Input<number>;
        /**
         * MariaDB instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * MariaDB The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceMongodbConnectParam {
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Password for the source of the Mongo DB connection.
         */
        password: pulumi.Input<string>;
        /**
         * MongoDB port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resource of Mongo DB connection source.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether the Mongo DB connection source is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * The username of the Mongo DB connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceMysqlConnectParam {
        /**
         * Required when type is TDSQL C_MYSQL.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * Mysql connection source password.
         */
        password: pulumi.Input<string>;
        /**
         * MySQL port.
         */
        port: pulumi.Input<number>;
        /**
         * Instance resource of My SQL connection source.
         */
        resource: pulumi.Input<string>;
        /**
         * Mysql Whether the connection source is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Username of Mysql connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourcePostgresqlConnectParam {
        /**
         * Required when type is TDSQL C_POSTGRESQL.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Whether to update to the associated Datahub task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * PostgreSQL password.
         */
        password: pulumi.Input<string>;
        /**
         * PostgreSQL port.
         */
        port: pulumi.Input<number>;
        /**
         * PostgreSQL instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * PostgreSQL Whether the connection source is a self-built cluster, default: false.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * PostgreSQL The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface ConnectResourceSqlserverConnectParam {
        /**
         * Whether to update to the associated Dip task, default: false.
         */
        isUpdate?: pulumi.Input<boolean>;
        /**
         * SQLServer password.
         */
        password: pulumi.Input<string>;
        /**
         * SQLServer port.
         */
        port: pulumi.Input<number>;
        /**
         * SQLServer instanceId.
         */
        resource: pulumi.Input<string>;
        /**
         * SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * SQLServer The username of the connection source.
         */
        userName: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResource {
        /**
         * ClickHouse config, Type CLICKHOUSE requierd.
         */
        clickHouseParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClickHouseParam>;
        /**
         * Cls configuration, Required when Type is CLS.
         */
        clsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClsParam>;
        /**
         * Cos configuration, required when Type is COS.
         */
        cosParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceCosParam>;
        /**
         * Ctsdb configuration, Required when Type is CTSDB.
         */
        ctsdbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceCtsdbParam>;
        /**
         * Dts configuration, required when Type is DTS.
         */
        dtsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceDtsParam>;
        /**
         * Es configuration, required when Type is ES.
         */
        esParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParam>;
        /**
         * EB configuration, required when type is EB.
         */
        eventBusParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEventBusParam>;
        /**
         * ckafka configuration, required when Type is KAFKA.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceKafkaParam>;
        /**
         * MariaDB configuration, Required when Type is MARIADB.
         */
        mariaDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMariaDbParam>;
        /**
         * MongoDB config, Required when Type is MONGODB.
         */
        mongoDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMongoDbParam>;
        /**
         * MySQL configuration, Required when Type is MYSQL.
         */
        mySqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMySqlParam>;
        /**
         * PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
         */
        postgreSqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourcePostgreSqlParam>;
        /**
         * Scf configuration, Required when Type is SCF.
         */
        scfParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceScfParam>;
        /**
         * SQLServer configuration, Required when Type is SQLSERVER.
         */
        sqlServerParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceSqlServerParam>;
        /**
         * Tdw configuration, required when Type is TDW.
         */
        tdwParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceTdwParam>;
        /**
         * Topic configuration, Required when Type is Topic.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceTopicParam>;
        /**
         * resource type.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceClickHouseParam {
        /**
         * ClickHouse cluster.
         */
        cluster: pulumi.Input<string>;
        /**
         * ClickHouse database name.
         */
        database: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClickHouseParamDropCls>;
        /**
         * Whether ClickHouse discards the message that fails to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * ClickHouse ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * ClickHouse passwd.
         */
        password?: pulumi.Input<string>;
        /**
         * ClickHouse port.
         */
        port?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * ClickHouse schema.
         */
        schemas: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceClickHouseParamSchema>[]>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * ClickHouse table.
         */
        table: pulumi.Input<string>;
        /**
         * ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
         */
        type?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * ClickHouse user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceClickHouseParamDropCls {
        /**
         * cls LogSet id.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * account.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * cls topic.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceClickHouseParamSchema {
        /**
         * Whether the column item is allowed to be empty.
         */
        allowNull: pulumi.Input<boolean>;
        /**
         * column name.
         */
        columnName: pulumi.Input<string>;
        /**
         * The json Key name corresponding to this column.
         */
        jsonKey: pulumi.Input<string>;
        /**
         * type of table column.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceClsParam {
        /**
         * Required when Decode Json is false.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * Whether the produced information is in json format.
         */
        decodeJson: pulumi.Input<boolean>;
        /**
         * LogSet id.
         */
        logSet?: pulumi.Input<string>;
        /**
         * cls id.
         */
        resource: pulumi.Input<string>;
        /**
         * Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
         */
        timeField?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceCosParam {
        /**
         * The size of aggregated messages MB.
         */
        aggregateBatchSize?: pulumi.Input<number>;
        /**
         * time interval.
         */
        aggregateInterval?: pulumi.Input<number>;
        /**
         * cos bucket name.
         */
        bucketName: pulumi.Input<string>;
        /**
         * Partition format formatted according to strptime time.
         */
        directoryTimeFormat?: pulumi.Input<string>;
        /**
         * The file format after message aggregation csv|json.
         */
        formatOutputType?: pulumi.Input<string>;
        /**
         * ObjectKey.
         */
        objectKey?: pulumi.Input<string>;
        /**
         * Dumped object directory prefix.
         */
        objectKeyPrefix?: pulumi.Input<string>;
        /**
         * region code.
         */
        region: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceCtsdbParam {
        /**
         * Ctsdb metric.
         */
        ctsdbMetric?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceDtsParam {
        /**
         * Dts consumer group Id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Dts consumer group passwd.
         */
        groupPassword?: pulumi.Input<string>;
        /**
         * Dts account.
         */
        groupUser?: pulumi.Input<string>;
        /**
         * Dts connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Dts connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Dts instance Id.
         */
        resource: pulumi.Input<string>;
        /**
         * Dts topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
         */
        tranSql?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceEsParam {
        /**
         * key for data in non-json format.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
         */
        databasePrimaryKey?: pulumi.Input<string>;
        /**
         * Es date suffix.
         */
        dateFormat?: pulumi.Input<string>;
        /**
         * The field name of the document ID value dumped into Es.
         */
        documentIdField?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropCls>;
        /**
         * dead letter queue.
         */
        dropDlq?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlq>;
        /**
         * Whether Es discards messages in non-json format.
         */
        dropInvalidJsonMessage?: pulumi.Input<boolean>;
        /**
         * Whether Es discards the message of parsing failure.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Es index name.
         */
        index?: pulumi.Input<string>;
        /**
         * Es custom index name type, STRING, JSONPATH, the default is STRING.
         */
        indexType?: pulumi.Input<string>;
        /**
         * Es Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Es connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Resource.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Es UserName.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceEsParamDropCls {
        /**
         * cls LogSet id.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * account.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * cls topic.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlq {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlqKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlqTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlqKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * enable dead letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * the partition num of the topic.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps(query per seconds) limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * instance resource.
         */
        resource: pulumi.Input<string>;
        /**
         * instance name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * whether the cluster is built by yourself instead of cloud product.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * when Offset type timestamp is required.
         */
        startTime?: pulumi.Input<number>;
        /**
         * maps of table to topic, required when multi topic is selected.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping>[]>;
        /**
         * Topic name, use `,` when more than 1 topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * whether to use multi table.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceEsParamDropDlqTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Topic TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourceEventBusParam {
        /**
         * SCF function name.
         */
        functionName?: pulumi.Input<string>;
        /**
         * SCF namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF version and alias.
         */
        qualifier?: pulumi.Input<string>;
        /**
         * instance id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * resource type. EB_COS/EB_ES/EB_CLS.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * enable dead letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * the partition num of the topic.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps(query per seconds) limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * instance resource.
         */
        resource: pulumi.Input<string>;
        /**
         * instance name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * whether the cluster is built by yourself instead of cloud product.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * when Offset type timestamp is required.
         */
        startTime?: pulumi.Input<number>;
        /**
         * maps of table to topic, required when multi topic is selected.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceKafkaParamTableMapping>[]>;
        /**
         * Topic name, use `,` when more than 1 topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * whether to use multi table.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskSourceResourceKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMariaDbParam {
        /**
         * MariaDB database name, * for all database.
         */
        database: pulumi.Input<string>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MariaDB connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMongoDbParam {
        /**
         * MongoDB collection.
         */
        collection: pulumi.Input<string>;
        /**
         * Whether to copy the stock data, the default parameter is true.
         */
        copyExisting: pulumi.Input<boolean>;
        /**
         * MongoDB database name.
         */
        database: pulumi.Input<string>;
        /**
         * Mongo DB connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
         */
        listeningEvent?: pulumi.Input<string>;
        /**
         * MongoDB database password.
         */
        password?: pulumi.Input<string>;
        /**
         * aggregation pipeline.
         */
        pipeline?: pulumi.Input<string>;
        /**
         * MongoDB connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Master-slave priority, default master node.
         */
        readPreference?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * MongoDB database user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMySqlParam {
        /**
         * the name of the column to be monitored.
         */
        dataSourceIncrementColumn?: pulumi.Input<string>;
        /**
         * TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
         */
        dataSourceIncrementMode?: pulumi.Input<string>;
        /**
         * TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
         */
        dataSourceMonitorMode?: pulumi.Input<string>;
        /**
         * When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
         */
        dataSourceMonitorResource?: pulumi.Input<string>;
        /**
         * HEAD means copy stock + incremental data, TAIL means copy only incremental data.
         */
        dataSourceStartFrom?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping>[]>;
        /**
         * MySQL database name, * is the whole database.
         */
        database: pulumi.Input<string>;
        /**
         * The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
         */
        ddlTopic?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourceMySqlParamDropCls>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MySQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * database name of signal table.
         */
        signalDatabase?: pulumi.Input<string>;
        /**
         * whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
         */
        table: pulumi.Input<string>;
        /**
         * Regular expression for routing events to specific topics, defaults to (.*).
         */
        topicRegex?: pulumi.Input<string>;
        /**
         * TopicRegex, $1, $2.
         */
        topicReplacement?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Column Name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current ColumnSize.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current Column DecimalDigits.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceMySqlParamDropCls {
        /**
         * cls LogSet id.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * account.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * cls topic.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskSourceResourcePostgreSqlParam {
        /**
         * Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
         */
        dataFormat?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping>[]>;
        /**
         * PostgreSQL database name.
         */
        database: pulumi.Input<string>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * (decoderbufs/pgoutput), default decoderbufs.
         */
        pluginName: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * PostgreSQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * never|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Column Name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current ColumnSize.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current Column DecimalDigits.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceScfParam {
        /**
         * The maximum number of messages sent in each batch, the default is 1000.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * SCF function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * The number of retries after the SCF call fails, the default is 5.
         */
        maxRetries?: pulumi.Input<number>;
        /**
         * SCF cloud function namespace, the default is default.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF cloud function version and alias, the default is DEFAULT.
         */
        qualifier?: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceSqlServerParam {
        /**
         * SQLServer database name.
         */
        database: pulumi.Input<string>;
        /**
         * SQLServer connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceTdwParam {
        /**
         * Tdw bid.
         */
        bid: pulumi.Input<string>;
        /**
         * default true.
         */
        isDomestic?: pulumi.Input<boolean>;
        /**
         * TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
         */
        tdwHost?: pulumi.Input<string>;
        /**
         * TDW port, default 8099.
         */
        tdwPort?: pulumi.Input<number>;
        /**
         * Tdw tid.
         */
        tid: pulumi.Input<string>;
    }

    export interface DatahubTaskSourceResourceTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Topic TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResource {
        /**
         * ClickHouse config, Type CLICKHOUSE requierd.
         */
        clickHouseParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClickHouseParam>;
        /**
         * Cls configuration, Required when Type is CLS.
         */
        clsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClsParam>;
        /**
         * Cos configuration, required when Type is COS.
         */
        cosParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceCosParam>;
        /**
         * Ctsdb configuration, Required when Type is CTSDB.
         */
        ctsdbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceCtsdbParam>;
        /**
         * Dts configuration, required when Type is DTS.
         */
        dtsParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceDtsParam>;
        /**
         * Es configuration, required when Type is ES.
         */
        esParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParam>;
        /**
         * EB configuration, required when type is EB.
         */
        eventBusParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEventBusParam>;
        /**
         * ckafka configuration, required when Type is KAFKA.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceKafkaParam>;
        /**
         * MariaDB configuration, Required when Type is MARIADB.
         */
        mariaDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMariaDbParam>;
        /**
         * MongoDB config, Required when Type is MONGODB.
         */
        mongoDbParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMongoDbParam>;
        /**
         * MySQL configuration, Required when Type is MYSQL.
         */
        mySqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMySqlParam>;
        /**
         * PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
         */
        postgreSqlParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourcePostgreSqlParam>;
        /**
         * Scf configuration, Required when Type is SCF.
         */
        scfParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceScfParam>;
        /**
         * SQLServer configuration, Required when Type is SQLSERVER.
         */
        sqlServerParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceSqlServerParam>;
        /**
         * Tdw configuration, required when Type is TDW.
         */
        tdwParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceTdwParam>;
        /**
         * Topic configuration, Required when Type is Topic.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceTopicParam>;
        /**
         * Resource Type.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceClickHouseParam {
        /**
         * ClickHouse cluster.
         */
        cluster: pulumi.Input<string>;
        /**
         * ClickHouse database name.
         */
        database: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClickHouseParamDropCls>;
        /**
         * Whether ClickHouse discards the message that fails to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * ClickHouse ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * ClickHouse passwd.
         */
        password?: pulumi.Input<string>;
        /**
         * ClickHouse port.
         */
        port?: pulumi.Input<number>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * ClickHouse schema.
         */
        schemas: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceClickHouseParamSchema>[]>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * ClickHouse table.
         */
        table: pulumi.Input<string>;
        /**
         * ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
         */
        type?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * ClickHouse user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceClickHouseParamDropCls {
        /**
         * cls LogSet id.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * account.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * cls topic.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceClickHouseParamSchema {
        /**
         * Whether the column item is allowed to be empty.
         */
        allowNull: pulumi.Input<boolean>;
        /**
         * column name.
         */
        columnName: pulumi.Input<string>;
        /**
         * The json Key name corresponding to this column.
         */
        jsonKey: pulumi.Input<string>;
        /**
         * type of table column.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceClsParam {
        /**
         * Required when Decode Json is false.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * Whether the produced information is in json format.
         */
        decodeJson: pulumi.Input<boolean>;
        /**
         * LogSet id.
         */
        logSet?: pulumi.Input<string>;
        /**
         * cls id.
         */
        resource: pulumi.Input<string>;
        /**
         * Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
         */
        timeField?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceCosParam {
        /**
         * The size of aggregated messages MB.
         */
        aggregateBatchSize?: pulumi.Input<number>;
        /**
         * time interval.
         */
        aggregateInterval?: pulumi.Input<number>;
        /**
         * cos bucket name.
         */
        bucketName: pulumi.Input<string>;
        /**
         * Partition format formatted according to strptime time.
         */
        directoryTimeFormat?: pulumi.Input<string>;
        /**
         * The file format after message aggregation csv|json.
         */
        formatOutputType?: pulumi.Input<string>;
        /**
         * ObjectKey.
         */
        objectKey?: pulumi.Input<string>;
        /**
         * Dumped object directory prefix.
         */
        objectKeyPrefix?: pulumi.Input<string>;
        /**
         * region code.
         */
        region: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceCtsdbParam {
        /**
         * Ctsdb metric.
         */
        ctsdbMetric?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceDtsParam {
        /**
         * Dts consumer group Id.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Dts consumer group passwd.
         */
        groupPassword?: pulumi.Input<string>;
        /**
         * Dts account.
         */
        groupUser?: pulumi.Input<string>;
        /**
         * Dts connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Dts connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Dts instance Id.
         */
        resource: pulumi.Input<string>;
        /**
         * Dts topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
         */
        tranSql?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceEsParam {
        /**
         * key for data in non-json format.
         */
        contentKey?: pulumi.Input<string>;
        /**
         * When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
         */
        databasePrimaryKey?: pulumi.Input<string>;
        /**
         * Es date suffix.
         */
        dateFormat?: pulumi.Input<string>;
        /**
         * The field name of the document ID value dumped into Es.
         */
        documentIdField?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropCls>;
        /**
         * dead letter queue.
         */
        dropDlq?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlq>;
        /**
         * Whether Es discards messages in non-json format.
         */
        dropInvalidJsonMessage?: pulumi.Input<boolean>;
        /**
         * Whether Es discards the message of parsing failure.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Es index name.
         */
        index?: pulumi.Input<string>;
        /**
         * Es custom index name type, STRING, JSONPATH, the default is STRING.
         */
        indexType?: pulumi.Input<string>;
        /**
         * Es Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Es connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Resource.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * instance vip.
         */
        serviceVip?: pulumi.Input<string>;
        /**
         * instance vpc id.
         */
        uniqVpcId?: pulumi.Input<string>;
        /**
         * Es UserName.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceEsParamDropCls {
        /**
         * cls LogSet id.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * account.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * cls topic.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlq {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlqKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlqTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlqKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * enable dead letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * the partition num of the topic.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps(query per seconds) limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * instance resource.
         */
        resource: pulumi.Input<string>;
        /**
         * instance name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * whether the cluster is built by yourself instead of cloud product.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * when Offset type timestamp is required.
         */
        startTime?: pulumi.Input<number>;
        /**
         * maps of table to topic, required when multi topic is selected.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping>[]>;
        /**
         * Topic name, use `,` when more than 1 topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * whether to use multi table.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceEsParamDropDlqTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Topic TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourceEventBusParam {
        /**
         * SCF function name.
         */
        functionName?: pulumi.Input<string>;
        /**
         * SCF namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF version and alias.
         */
        qualifier?: pulumi.Input<string>;
        /**
         * instance id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * resource type. EB_COS/EB_ES/EB_CLS.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * enable dead letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * the partition num of the topic.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps(query per seconds) limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * instance resource.
         */
        resource: pulumi.Input<string>;
        /**
         * instance name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * whether the cluster is built by yourself instead of cloud product.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * when Offset type timestamp is required.
         */
        startTime?: pulumi.Input<number>;
        /**
         * maps of table to topic, required when multi topic is selected.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceKafkaParamTableMapping>[]>;
        /**
         * Topic name, use `,` when more than 1 topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * whether to use multi table.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTargetResourceKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMariaDbParam {
        /**
         * MariaDB database name, * for all database.
         */
        database: pulumi.Input<string>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MariaDB connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMongoDbParam {
        /**
         * MongoDB collection.
         */
        collection: pulumi.Input<string>;
        /**
         * Whether to copy the stock data, the default parameter is true.
         */
        copyExisting: pulumi.Input<boolean>;
        /**
         * MongoDB database name.
         */
        database: pulumi.Input<string>;
        /**
         * Mongo DB connection ip.
         */
        ip?: pulumi.Input<string>;
        /**
         * Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
         */
        listeningEvent?: pulumi.Input<string>;
        /**
         * MongoDB database password.
         */
        password?: pulumi.Input<string>;
        /**
         * aggregation pipeline.
         */
        pipeline?: pulumi.Input<string>;
        /**
         * MongoDB connection port.
         */
        port?: pulumi.Input<number>;
        /**
         * Master-slave priority, default master node.
         */
        readPreference?: pulumi.Input<string>;
        /**
         * resource id.
         */
        resource: pulumi.Input<string>;
        /**
         * Whether it is a self-built cluster.
         */
        selfBuilt?: pulumi.Input<boolean>;
        /**
         * MongoDB database user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMySqlParam {
        /**
         * the name of the column to be monitored.
         */
        dataSourceIncrementColumn?: pulumi.Input<string>;
        /**
         * TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
         */
        dataSourceIncrementMode?: pulumi.Input<string>;
        /**
         * TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
         */
        dataSourceMonitorMode?: pulumi.Input<string>;
        /**
         * When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
         */
        dataSourceMonitorResource?: pulumi.Input<string>;
        /**
         * HEAD means copy stock + incremental data, TAIL means copy only incremental data.
         */
        dataSourceStartFrom?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping>[]>;
        /**
         * MySQL database name, * is the whole database.
         */
        database: pulumi.Input<string>;
        /**
         * The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
         */
        ddlTopic?: pulumi.Input<string>;
        /**
         * When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
         */
        dropCls?: pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourceMySqlParamDropCls>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
         */
        includeContentChanges?: pulumi.Input<string>;
        /**
         * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
         */
        includeQuery?: pulumi.Input<boolean>;
        /**
         * When the Table input is a prefix, the value of this item is true, otherwise it is false.
         */
        isTablePrefix?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * output format, DEFAULT, CANAL_1, CANAL_2.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * MySQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * database name of signal table.
         */
        signalDatabase?: pulumi.Input<string>;
        /**
         * whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
         */
        table: pulumi.Input<string>;
        /**
         * Regular expression for routing events to specific topics, defaults to (.*).
         */
        topicRegex?: pulumi.Input<string>;
        /**
         * TopicRegex, $1, $2.
         */
        topicReplacement?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Column Name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current ColumnSize.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current Column DecimalDigits.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceMySqlParamDropCls {
        /**
         * cls LogSet id.
         */
        dropClsLogSet?: pulumi.Input<string>;
        /**
         * account.
         */
        dropClsOwneruin?: pulumi.Input<string>;
        /**
         * The region where the cls is delivered.
         */
        dropClsRegion?: pulumi.Input<string>;
        /**
         * cls topic.
         */
        dropClsTopicId?: pulumi.Input<string>;
        /**
         * Whether to deliver to cls.
         */
        dropInvalidMessageToCls?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTargetResourcePostgreSqlParam {
        /**
         * Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
         */
        dataFormat?: pulumi.Input<string>;
        /**
         * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
         */
        dataTargetInsertMode?: pulumi.Input<string>;
        /**
         * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
         */
        dataTargetPrimaryKeyField?: pulumi.Input<string>;
        /**
         * Mapping relationship between tables and messages.
         */
        dataTargetRecordMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping>[]>;
        /**
         * PostgreSQL database name.
         */
        database: pulumi.Input<string>;
        /**
         * Whether to discard messages that fail to parse, the default is true.
         */
        dropInvalidMessage?: pulumi.Input<boolean>;
        /**
         * Whether the input table is a regular expression.
         */
        isTableRegular?: pulumi.Input<boolean>;
        /**
         * Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
         */
        keyColumns?: pulumi.Input<string>;
        /**
         * (decoderbufs/pgoutput), default decoderbufs.
         */
        pluginName: pulumi.Input<string>;
        /**
         * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
         */
        recordWithSchema?: pulumi.Input<boolean>;
        /**
         * PostgreSQL connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * never|initial, default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping {
        /**
         * Whether the message is allowed to be empty.
         */
        allowNull?: pulumi.Input<boolean>;
        /**
         * Whether it is an auto-increment column.
         */
        autoIncrement?: pulumi.Input<boolean>;
        /**
         * Column Name.
         */
        columnName?: pulumi.Input<string>;
        /**
         * current ColumnSize.
         */
        columnSize?: pulumi.Input<string>;
        /**
         * current Column DecimalDigits.
         */
        decimalDigits?: pulumi.Input<string>;
        /**
         * Database table default parameters.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * Database table extra fields.
         */
        extraInfo?: pulumi.Input<string>;
        /**
         * The key name of the message.
         */
        jsonKey?: pulumi.Input<string>;
        /**
         * message type.
         */
        type?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceScfParam {
        /**
         * The maximum number of messages sent in each batch, the default is 1000.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * SCF function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * The number of retries after the SCF call fails, the default is 5.
         */
        maxRetries?: pulumi.Input<number>;
        /**
         * SCF cloud function namespace, the default is default.
         */
        namespace?: pulumi.Input<string>;
        /**
         * SCF cloud function version and alias, the default is DEFAULT.
         */
        qualifier?: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceSqlServerParam {
        /**
         * SQLServer database name.
         */
        database: pulumi.Input<string>;
        /**
         * SQLServer connection Id.
         */
        resource: pulumi.Input<string>;
        /**
         * schema_only|initial default initial.
         */
        snapshotMode?: pulumi.Input<string>;
        /**
         * SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
         */
        table: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceTdwParam {
        /**
         * Tdw bid.
         */
        bid: pulumi.Input<string>;
        /**
         * default true.
         */
        isDomestic?: pulumi.Input<boolean>;
        /**
         * TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
         */
        tdwHost?: pulumi.Input<string>;
        /**
         * TDW port, default 8099.
         */
        tdwPort?: pulumi.Input<number>;
        /**
         * Tdw tid.
         */
        tid: pulumi.Input<string>;
    }

    export interface DatahubTaskTargetResourceTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Topic TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformParam {
        /**
         * Analysis result.
         */
        analyseResults?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamAnalyseResult>[]>;
        /**
         * parsing format, JSON | DELIMITER| REGULAR.
         */
        analysisFormat: pulumi.Input<string>;
        /**
         * Raw data.
         */
        content: pulumi.Input<string>;
        /**
         * Whether to keep parsing failure data.
         */
        failureParam: pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParam>;
        /**
         * filter.
         */
        filterParams?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFilterParam>[]>;
        /**
         * Map.
         */
        mapParams?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamMapParam>[]>;
        /**
         * output format.
         */
        outputFormat: pulumi.Input<string>;
        /**
         * delimiter, regular expression.
         */
        regex?: pulumi.Input<string>;
        /**
         * Test Results.
         */
        result?: pulumi.Input<string>;
        /**
         * Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
         */
        sourceType: pulumi.Input<string>;
        /**
         * Whether the underlying engine uses eb.
         */
        useEventBus?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformParamAnalyseResult {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
         */
        type?: pulumi.Input<string>;
        /**
         * value.
         */
        value?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamFailureParam {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParamKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParamTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamFailureParamKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * enable dead letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * the partition num of the topic.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps(query per seconds) limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * instance resource.
         */
        resource: pulumi.Input<string>;
        /**
         * instance name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * whether the cluster is built by yourself instead of cloud product.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * when Offset type timestamp is required.
         */
        startTime?: pulumi.Input<number>;
        /**
         * maps of table to topic, required when multi topic is selected.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformParamFailureParamKafkaParamTableMapping>[]>;
        /**
         * Topic name, use `,` when more than 1 topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * whether to use multi table.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformParamFailureParamKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamFailureParamTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Topic TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformParamFilterParam {
        /**
         * Key.
         */
        key: pulumi.Input<string>;
        /**
         * Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
         */
        matchMode: pulumi.Input<string>;
        /**
         * REGULAR.
         */
        type?: pulumi.Input<string>;
        /**
         * Value.
         */
        value: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformParamMapParam {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
         */
        type?: pulumi.Input<string>;
        /**
         * value.
         */
        value?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParam {
        /**
         * data process.
         */
        batchAnalyse?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamBatchAnalyse>;
        /**
         * Raw data.
         */
        content: pulumi.Input<string>;
        /**
         * fail process.
         */
        failureParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParam>;
        /**
         * processing chain.
         */
        fieldChains: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChain>[]>;
        /**
         * filter.
         */
        filterParams?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFilterParam>[]>;
        /**
         * Whether to keep the data source Topic metadata information (source Topic, Partition, Offset), the default is false.
         */
        keepMetadata?: pulumi.Input<boolean>;
        /**
         * output format, JSON, ROW, default JSON.
         */
        outputFormat?: pulumi.Input<string>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The output format is ROW Required.
         */
        rowParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamRowParam>;
        /**
         * data source.
         */
        sourceType?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamBatchAnalyse {
        /**
         * ONE BY ONE single output, MERGE combined output.
         */
        format: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFailureParam {
        /**
         * dlq type, CKAFKA|TOPIC.
         */
        dlqType?: pulumi.Input<string>;
        /**
         * Ckafka type dlq.
         */
        kafkaParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParamKafkaParam>;
        /**
         * retry times.
         */
        maxRetryAttempts?: pulumi.Input<number>;
        /**
         * retry interval.
         */
        retryInterval?: pulumi.Input<number>;
        /**
         * DIP Topic type dead letter queue.
         */
        topicParam?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParamTopicParam>;
        /**
         * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
         */
        type: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFailureParamKafkaParam {
        /**
         * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * enable dead letter queue.
         */
        enableToleration?: pulumi.Input<boolean>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * the partition num of the topic.
         */
        partitionNum?: pulumi.Input<number>;
        /**
         * Qps(query per seconds) limit.
         */
        qpsLimit?: pulumi.Input<number>;
        /**
         * instance resource.
         */
        resource: pulumi.Input<string>;
        /**
         * instance name.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * whether the cluster is built by yourself instead of cloud product.
         */
        selfBuilt: pulumi.Input<boolean>;
        /**
         * when Offset type timestamp is required.
         */
        startTime?: pulumi.Input<number>;
        /**
         * maps of table to topic, required when multi topic is selected.
         */
        tableMappings?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFailureParamKafkaParamTableMapping>[]>;
        /**
         * Topic name, use `,` when more than 1 topic.
         */
        topic?: pulumi.Input<string>;
        /**
         * Topic id.
         */
        topicId?: pulumi.Input<string>;
        /**
         * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
        /**
         * whether to use multi table.
         */
        useTableMapping?: pulumi.Input<boolean>;
        /**
         * Zone ID.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFailureParamKafkaParamTableMapping {
        /**
         * database name.
         */
        database: pulumi.Input<string>;
        /**
         * table name,use, to separate.
         */
        table: pulumi.Input<string>;
        /**
         * Topic name.
         */
        topic: pulumi.Input<string>;
        /**
         * Topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFailureParamTopicParam {
        /**
         * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
         */
        compressionType?: pulumi.Input<string>;
        /**
         * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
         */
        msgMultiple?: pulumi.Input<number>;
        /**
         * Offset type, initial position earliest, latest position latest, time point position timestamp.
         */
        offsetType?: pulumi.Input<string>;
        /**
         * The topic name of the topic sold separately.
         */
        resource: pulumi.Input<string>;
        /**
         * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Topic TopicId.
         */
        topicId?: pulumi.Input<string>;
        /**
         * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
         */
        useAutoCreateTopic?: pulumi.Input<boolean>;
    }

    export interface DatahubTaskTransformsParamFieldChain {
        /**
         * analyze.
         */
        analyse: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyse>;
        /**
         * Parsing results in JSON format.
         */
        analyseJsonResult?: pulumi.Input<string>;
        /**
         * Analysis result.
         */
        analyseResults?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResult>[]>;
        /**
         * Test Results.
         */
        result?: pulumi.Input<string>;
        /**
         * data processing.
         */
        sMTs?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMT>[]>;
        /**
         * secondary analysis.
         */
        secondaryAnalyse?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyse>;
        /**
         * Secondary parsing results in JSON format.
         */
        secondaryAnalyseJsonResult?: pulumi.Input<string>;
        /**
         * Secondary Analysis Results.
         */
        secondaryAnalyseResults?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyse {
        /**
         * Parsing format, JSON, DELIMITER delimiter, REGULAR regular extraction, SOURCE processing all results of the upper layer.
         */
        format: pulumi.Input<string>;
        /**
         * KEY to be processed again - KEY expression.
         */
        inputValue?: pulumi.Input<string>;
        /**
         * KEY to be processed again - mode.
         */
        inputValueType?: pulumi.Input<string>;
        /**
         * delimiter, regular expression.
         */
        regex?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResult {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
         */
        operate: pulumi.Input<string>;
        /**
         * OriginalValue.
         */
        originalValue?: pulumi.Input<string>;
        /**
         * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
         */
        schemeType: pulumi.Input<string>;
        /**
         * value.
         */
        value?: pulumi.Input<string>;
        /**
         * VALUE process.
         */
        valueOperate?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate>;
        /**
         * VALUE process chain.
         */
        valueOperates?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
        /**
         * Time conversion, required when TYPE=DATE.
         */
        date?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate>;
        /**
         * Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
         */
        jsonPathReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace>;
        /**
         * Key-value secondary analysis, must be passed when TYPE=KV.
         */
        kV?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV>;
        /**
         * Regular replacement, required when TYPE=REGEX REPLACE.
         */
        regexReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace>;
        /**
         * replace, TYPE=REPLACE is required.
         */
        replace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The value supports one split and multiple values, required when TYPE=SPLIT.
         */
        split?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit>;
        /**
         * Substr, TYPE=SUBSTR is required.
         */
        substr?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr>;
        /**
         * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
         */
        type: pulumi.Input<string>;
        /**
         * Url parsing.
         */
        urlDecode?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
        /**
         * Time format.
         */
        format?: pulumi.Input<string>;
        /**
         * input type, string|unix.
         */
        targetType?: pulumi.Input<string>;
        /**
         * default GMT+8.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
        /**
         * Replacement value, Jsonpath expression or string.
         */
        newValue: pulumi.Input<string>;
        /**
         * Replaced value, Jsonpath expression.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
        /**
         * delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Keep the source Key, the default is false not to keep.
         */
        keepOriginalKey?: pulumi.Input<string>;
        /**
         * Key-value secondary analysis delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * Regular.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * been replaced value.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
        /**
         * cut-off position.
         */
        end: pulumi.Input<number>;
        /**
         * interception starting position.
         */
        start: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
        /**
         * code.
         */
        charsetName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMT {
        /**
         * KEY.
         */
        key: pulumi.Input<string>;
        /**
         * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
         */
        operate: pulumi.Input<string>;
        /**
         * OriginalValue.
         */
        originalValue?: pulumi.Input<string>;
        /**
         * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
         */
        schemeType: pulumi.Input<string>;
        /**
         * VALUE.
         */
        value?: pulumi.Input<string>;
        /**
         * VALUE process.
         */
        valueOperate?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperate>;
        /**
         * VALUE process chain.
         */
        valueOperates?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperate>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperate {
        /**
         * Time conversion, required when TYPE=DATE.
         */
        date?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateDate>;
        /**
         * Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
         */
        jsonPathReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace>;
        /**
         * Key-value secondary analysis, must be passed when TYPE=KV.
         */
        kV?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateKV>;
        /**
         * Regular replacement, required when TYPE=REGEX REPLACE.
         */
        regexReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace>;
        /**
         * replace, TYPE=REPLACE is required.
         */
        replace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateReplace>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The value supports one split and multiple values, required when TYPE=SPLIT.
         */
        split?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateSplit>;
        /**
         * Substr, TYPE=SUBSTR is required.
         */
        substr?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr>;
        /**
         * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
         */
        type: pulumi.Input<string>;
        /**
         * Url parsing.
         */
        urlDecode?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateDate {
        /**
         * Time format.
         */
        format?: pulumi.Input<string>;
        /**
         * input type, string|unix.
         */
        targetType?: pulumi.Input<string>;
        /**
         * default GMT+8.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
        /**
         * Replacement value, Jsonpath expression or string.
         */
        newValue: pulumi.Input<string>;
        /**
         * Replaced value, Jsonpath expression.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateKV {
        /**
         * delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Keep the source Key, the default is false not to keep.
         */
        keepOriginalKey?: pulumi.Input<string>;
        /**
         * Key-value secondary analysis delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * Regular.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * been replaced value.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
        /**
         * cut-off position.
         */
        end: pulumi.Input<number>;
        /**
         * interception starting position.
         */
        start: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
        /**
         * code.
         */
        charsetName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyse {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult {
        /**
         * KEY.
         */
        key: pulumi.Input<string>;
        /**
         * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
         */
        operate: pulumi.Input<string>;
        /**
         * OriginalValue.
         */
        originalValue?: pulumi.Input<string>;
        /**
         * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
         */
        schemeType: pulumi.Input<string>;
        /**
         * VALUE.
         */
        value?: pulumi.Input<string>;
        /**
         * VALUE process.
         */
        valueOperate?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate>;
        /**
         * VALUE process chain.
         */
        valueOperates?: pulumi.Input<pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate>[]>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
        /**
         * Time conversion, required when TYPE=DATE.
         */
        date?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate>;
        /**
         * Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
         */
        jsonPathReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace>;
        /**
         * Key-value secondary analysis, must be passed when TYPE=KV.
         */
        kV?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV>;
        /**
         * Regular replacement, required when TYPE=REGEX REPLACE.
         */
        regexReplace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace>;
        /**
         * replace, TYPE=REPLACE is required.
         */
        replace?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace>;
        /**
         * result.
         */
        result?: pulumi.Input<string>;
        /**
         * The value supports one split and multiple values, required when TYPE=SPLIT.
         */
        split?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit>;
        /**
         * Substr, TYPE=SUBSTR is required.
         */
        substr?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr>;
        /**
         * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
         */
        type: pulumi.Input<string>;
        /**
         * Url parsing.
         */
        urlDecode?: pulumi.Input<inputs.Ckafka.DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
        /**
         * Time format.
         */
        format?: pulumi.Input<string>;
        /**
         * input type, string|unix.
         */
        targetType?: pulumi.Input<string>;
        /**
         * default GMT+8.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
        /**
         * Replacement value, Jsonpath expression or string.
         */
        newValue: pulumi.Input<string>;
        /**
         * Replaced value, Jsonpath expression.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
        /**
         * delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Keep the source Key, the default is false not to keep.
         */
        keepOriginalKey?: pulumi.Input<string>;
        /**
         * Key-value secondary analysis delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * Regular.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
        /**
         * new value.
         */
        newValue: pulumi.Input<string>;
        /**
         * been replaced value.
         */
        oldValue: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
        /**
         * delimiter.
         */
        regex: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
        /**
         * cut-off position.
         */
        end: pulumi.Input<number>;
        /**
         * interception starting position.
         */
        start: pulumi.Input<number>;
    }

    export interface DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
        /**
         * code.
         */
        charsetName?: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamFilterParam {
        /**
         * Key.
         */
        key: pulumi.Input<string>;
        /**
         * Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
         */
        matchMode: pulumi.Input<string>;
        /**
         * REGULAR.
         */
        type?: pulumi.Input<string>;
        /**
         * Value.
         */
        value: pulumi.Input<string>;
    }

    export interface DatahubTaskTransformsParamRowParam {
        /**
         * delimiter.
         */
        entryDelimiter?: pulumi.Input<string>;
        /**
         * key, value delimiter.
         */
        keyValueDelimiter?: pulumi.Input<string>;
        /**
         * row content, KEY_VALUE, VALUE.
         */
        rowContent: pulumi.Input<string>;
    }

    export interface GetInstancesFilter {
        /**
         * The field that needs to be filtered.
         */
        name: string;
        /**
         * The filtered value of the field.
         */
        values: string[];
    }

    export interface GetInstancesFilterArgs {
        /**
         * The field that needs to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * The filtered value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceConfig {
        /**
         * Automatic creation. true: enabled, false: not enabled.
         */
        autoCreateTopicEnable: pulumi.Input<boolean>;
        /**
         * If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
         */
        defaultNumPartitions: pulumi.Input<number>;
        /**
         * If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
         */
        defaultReplicationFactor: pulumi.Input<number>;
    }

    export interface InstanceDynamicRetentionConfig {
        /**
         * Minimum retention time, in minutes.
         */
        bottomRetention?: pulumi.Input<number>;
        /**
         * Disk quota threshold (in percentage) for triggering the message retention time change event.
         */
        diskQuotaPercentage?: pulumi.Input<number>;
        /**
         * Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
         */
        enable?: pulumi.Input<number>;
        /**
         * Percentage by which the message retention time is shortened each time.
         */
        stepForwardPercentage?: pulumi.Input<number>;
    }

    export interface InstanceTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface RouteBrokerVipList {
        /**
         * Virtual IP.
         */
        vip?: pulumi.Input<string>;
        /**
         * Virtual port.
         */
        vport?: pulumi.Input<string>;
    }

    export interface RouteVipList {
        /**
         * Virtual IP.
         */
        vip?: pulumi.Input<string>;
        /**
         * Virtual port.
         */
        vport?: pulumi.Input<string>;
    }
}

export namespace Clb {
    export interface AttachmentTarget {
        /**
         * Eni IP address of the backend server, conflict with `instanceId` but must specify one of them.
         */
        eniIp?: pulumi.Input<string>;
        /**
         * CVM Instance Id of the backend server, conflict with `eniIp` but must specify one of them.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Port of the backend server. Valid value ranges: (0~65535).
         */
        port: pulumi.Input<number>;
        /**
         * Forwarding weight of the backend service. Valid value ranges: (0~100). defaults to `10`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface FunctionTargetsAttachmentFunctionTargets {
        /**
         * Information about cloud functions.Note: This field may return null, indicating that no valid value can be obtained.
         */
        function: pulumi.Input<inputs.Clb.FunctionTargetsAttachmentFunctionTargetsFunction>;
        /**
         * Weight. The default is `10`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface FunctionTargetsAttachmentFunctionTargetsFunction {
        /**
         * The name of function.
         */
        functionName: pulumi.Input<string>;
        /**
         * The namespace of function.
         */
        functionNamespace: pulumi.Input<string>;
        /**
         * The version name or alias of the function.
         */
        functionQualifier: pulumi.Input<string>;
        /**
         * Identifies the type of FunctionQualifier parameter, possible values: VERSION, ALIAS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        functionQualifierType?: pulumi.Input<string>;
    }

    export interface GetClusterResourcesFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter values.
         */
        values: string[];
    }

    export interface GetClusterResourcesFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetCrossTargetsFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter values.
         */
        values: string[];
    }

    export interface GetCrossTargetsFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetExclusiveClustersFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetExclusiveClustersFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstanceDetailFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetInstanceDetailFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetListenersByTargetsBackend {
        /**
         * Private network IP to be queried, which can be of the CVM or ENI.
         */
        privateIp: string;
        /**
         * VPC ID.
         */
        vpcId: string;
    }

    export interface GetListenersByTargetsBackendArgs {
        /**
         * Private network IP to be queried, which can be of the CVM or ENI.
         */
        privateIp: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface GetResourcesFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetResourcesFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetTargetGroupListFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter value array.
         */
        values: string[];
    }

    export interface GetTargetGroupListFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value array.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceSnatIp {
        /**
         * Snat IP address, If set to empty will auto allocated.
         */
        ip?: pulumi.Input<string>;
        /**
         * Snat subnet ID.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface ListenerRuleOauth {
        /**
         * Enable or disable authentication. True: Enabled; False: Disabled.
         */
        oauthEnable?: pulumi.Input<boolean>;
        /**
         * After all IAPs fail, the request is rejected or released. BYPASS: PASS; REJECT: Reject.
         */
        oauthFailureStatus?: pulumi.Input<string>;
    }

    export interface ReplaceCertForLbsCertificate {
        /**
         * Content of the uploaded client certificate. When SSLMode = mutual, if there is no CertCaId, this parameter is required.
         */
        certCaContent?: pulumi.Input<string>;
        /**
         * ID of a client certificate. When the listener adopts mutual authentication (i.e., SSLMode = mutual), if you leave this parameter empty, you must upload the client certificate, including CertCaContent and CertCaName.
         */
        certCaId?: pulumi.Input<string>;
        /**
         * Name of the uploaded client CA certificate. When SSLMode = mutual, if there is no CertCaId, this parameter is required.
         */
        certCaName?: pulumi.Input<string>;
        /**
         * Content of the uploaded server certificate. If there is no CertId, this parameter is required.
         */
        certContent?: pulumi.Input<string>;
        /**
         * ID of a server certificate. If you leave this parameter empty, you must upload the certificate, including CertContent, CertKey, and CertName.
         */
        certId?: pulumi.Input<string>;
        /**
         * Key of the uploaded server certificate. If there is no CertId, this parameter is required.
         */
        certKey?: pulumi.Input<string>;
        /**
         * Name of the uploaded server certificate. If there is no CertId, this parameter is required.
         */
        certName?: pulumi.Input<string>;
        /**
         * Authentication type. Value range: UNIDIRECTIONAL (unidirectional authentication), MUTUAL (mutual authentication).
         */
        sslMode?: pulumi.Input<string>;
    }

    export interface SnatIpIp {
        /**
         * Snat IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Subnet ID.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface TargetGroupAttachmentsAssociation {
        /**
         * Listener ID.
         */
        listenerId?: pulumi.Input<string>;
        /**
         * CLB instance ID, when the binding target is target group, loadBalancerId in associations is required.
         */
        loadBalancerId?: pulumi.Input<string>;
        /**
         * Forwarding rule ID.
         */
        locationId?: pulumi.Input<string>;
        /**
         * Target group ID, when the binding target is clb, the targetGroupId in associations is required.
         */
        targetGroupId?: pulumi.Input<string>;
    }

    export interface TargetGroupTargetGroupInstance {
        /**
         * The internal ip of target group instance.
         */
        bindIp: pulumi.Input<string>;
        /**
         * The new port of target group instance.
         */
        newPort?: pulumi.Input<number>;
        /**
         * The port of target group instance.
         */
        port: pulumi.Input<number>;
        /**
         * The weight of target group instance.
         */
        weight?: pulumi.Input<number>;
    }
}

export namespace Clickhouse {
    export interface AccountPermissionDatabasePrivilegeList {
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Database privileges. Valid valuse: SELECT, INSERT_ALL, ALTER, TRUNCATE, DROP_TABLE, CREATE_TABLE, DROP_DATABASE.
         */
        databasePrivileges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table privilege list.
         */
        tablePrivilegeLists?: pulumi.Input<pulumi.Input<inputs.Clickhouse.AccountPermissionDatabasePrivilegeListTablePrivilegeList>[]>;
    }

    export interface AccountPermissionDatabasePrivilegeListTablePrivilegeList {
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
        /**
         * Table privileges. Valid values: SELECT, INSERT_ALL, ALTER, TRUNCATE, DROP_TABLE.
         */
        tablePrivileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BackupStrategyDataBackupStrategy {
        /**
         * Back up the list of tables.
         */
        backUpTables: pulumi.Input<pulumi.Input<inputs.Clickhouse.BackupStrategyDataBackupStrategyBackUpTable>[]>;
        /**
         * Execution hour.
         */
        executeHour: pulumi.Input<number>;
        /**
         * Retention days.
         */
        retainDays: pulumi.Input<number>;
        /**
         * The day of the week is separated by commas. For example: 2 represents Tuesday.
         */
        weekDays: pulumi.Input<string>;
    }

    export interface BackupStrategyDataBackupStrategyBackUpTable {
        /**
         * Database.
         */
        database: pulumi.Input<string>;
        /**
         * Table ip.
         */
        ips?: pulumi.Input<string>;
        /**
         * Ip address of cvm.
         */
        rip?: pulumi.Input<string>;
        /**
         * Table.
         */
        table: pulumi.Input<string>;
        /**
         * Back up the list of tables.
         */
        totalBytes: pulumi.Input<number>;
        /**
         * Virtual clusters.
         */
        vCluster?: pulumi.Input<string>;
        /**
         * ZK path.
         */
        zooPath?: pulumi.Input<string>;
    }

    export interface BackupStrategyMetaBackupStrategy {
        /**
         * Execution hour.
         */
        executeHour?: pulumi.Input<number>;
        /**
         * Retention days.
         */
        retainDays?: pulumi.Input<number>;
        /**
         * The day of the week is separated by commas. For example: 2 represents Tuesday.
         */
        weekDays?: pulumi.Input<string>;
    }

    export interface InstanceCommonSpec {
        /**
         * Node count. NOTE: Only support value 3.
         */
        count: pulumi.Input<number>;
        /**
         * Disk size.
         */
        diskSize: pulumi.Input<number>;
        /**
         * Spec name.
         */
        specName: pulumi.Input<string>;
    }

    export interface InstanceDataSpec {
        /**
         * Data spec count.
         */
        count: pulumi.Input<number>;
        /**
         * Disk size.
         */
        diskSize: pulumi.Input<number>;
        /**
         * Spec name.
         */
        specName: pulumi.Input<string>;
    }

    export interface KeyvalConfigItems {
        /**
         * Instance config key.
         */
        confKey: pulumi.Input<string>;
        /**
         * Instance config value.
         */
        confValue: pulumi.Input<string>;
    }

    export interface XmlConfigModifyConfContext {
        /**
         * Configuration file name.
         */
        fileName: pulumi.Input<string>;
        /**
         * Path to save configuration file.
         */
        filePath?: pulumi.Input<string>;
        /**
         * New content of configuration file, base64 encoded.
         */
        newConfValue: pulumi.Input<string>;
    }
}

export namespace Cls {
    export interface AlarmAlarmTarget {
        /**
         * search end time of offset.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * logset id.
         */
        logsetId: pulumi.Input<string>;
        /**
         * the number of alarm object.
         */
        number: pulumi.Input<number>;
        /**
         * query rules.
         */
        query: pulumi.Input<string>;
        /**
         * search start time of offset.
         */
        startTimeOffset: pulumi.Input<number>;
        /**
         * Retrieve grammar rules, 0: Lucene syntax, 1: CQL syntax, Default value is 0.
         */
        syntaxRule?: pulumi.Input<number>;
        /**
         * topic id.
         */
        topicId: pulumi.Input<string>;
    }

    export interface AlarmAnalysis {
        /**
         * configuration.
         */
        configInfos?: pulumi.Input<pulumi.Input<inputs.Cls.AlarmAnalysisConfigInfo>[]>;
        /**
         * analysis content.
         */
        content: pulumi.Input<string>;
        /**
         * analysis name.
         */
        name: pulumi.Input<string>;
        /**
         * analysis type.
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmAnalysisConfigInfo {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface AlarmCallBack {
        /**
         * callback body.
         */
        body: pulumi.Input<string>;
        /**
         * callback headers.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AlarmMonitorTime {
        /**
         * time period or point in time.
         */
        time: pulumi.Input<number>;
        /**
         * Period for periodic execution, Fixed for regular execution.
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmNoticeNoticeReceiver {
        /**
         * end time allowed to receive messages.
         */
        endTime?: pulumi.Input<string>;
        /**
         * index.
         */
        index?: pulumi.Input<number>;
        /**
         * receiver channels, Email,Sms,WeChat or Phone.
         */
        receiverChannels: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * receiver id.
         */
        receiverIds: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * receiver type, Uin or Group.
         */
        receiverType: pulumi.Input<string>;
        /**
         * start time allowed to receive messages.
         */
        startTime?: pulumi.Input<string>;
    }

    export interface AlarmNoticeWebCallback {
        /**
         * abandoned.
         */
        body?: pulumi.Input<string>;
        /**
         * callback type, WeCom or Http.
         */
        callbackType: pulumi.Input<string>;
        /**
         * abandoned.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * index.
         */
        index?: pulumi.Input<number>;
        /**
         * Method, POST or PUT.
         */
        method?: pulumi.Input<string>;
        /**
         * callback url.
         */
        url: pulumi.Input<string>;
    }

    export interface CkafkaConsumerCkafka {
        /**
         * instance id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * instance name.
         */
        instanceName: pulumi.Input<string>;
        /**
         * topic id of ckafka.
         */
        topicId: pulumi.Input<string>;
        /**
         * topic name of ckafka.
         */
        topicName: pulumi.Input<string>;
        /**
         * vip.
         */
        vip: pulumi.Input<string>;
        /**
         * vport.
         */
        vport: pulumi.Input<string>;
    }

    export interface CkafkaConsumerContent {
        /**
         * whether to deliver the TAG info.
         */
        enableTag: pulumi.Input<boolean>;
        /**
         * metadata info list.
         */
        metaFields: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * whether to tiling tag json.
         */
        tagJsonNotTiled?: pulumi.Input<boolean>;
        /**
         * delivery timestamp precision,1 for second, 2 for millisecond.
         */
        timestampAccuracy?: pulumi.Input<number>;
    }

    export interface ConfigExcludePath {
        /**
         * Type. Valid values: File, Path.
         */
        type?: pulumi.Input<string>;
        /**
         * Specific content corresponding to Type.
         */
        value?: pulumi.Input<string>;
    }

    export interface ConfigExtraContainerFile {
        /**
         * Container name.
         */
        container: pulumi.Input<string>;
        /**
         * Pod label to be excluded.
         */
        excludeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespaces to be excluded, separated by separators, such as A, B.
         */
        excludeNamespace?: pulumi.Input<string>;
        /**
         * log name.
         */
        filePattern: pulumi.Input<string>;
        /**
         * Pod label info.
         */
        includeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Log Path.
         */
        logPath: pulumi.Input<string>;
        /**
         * Namespace. There can be multiple namespaces, separated by separators, such as A, B.
         */
        namespace: pulumi.Input<string>;
        /**
         * Workload info.
         */
        workload?: pulumi.Input<inputs.Cls.ConfigExtraContainerFileWorkload>;
    }

    export interface ConfigExtraContainerFileWorkload {
        /**
         * container name.
         */
        container?: pulumi.Input<string>;
        /**
         * workload type.
         */
        kind: pulumi.Input<string>;
        /**
         * workload name.
         */
        name: pulumi.Input<string>;
        /**
         * namespace.
         */
        namespace?: pulumi.Input<string>;
    }

    export interface ConfigExtraContainerStdout {
        /**
         * Is all containers.
         */
        allContainers: pulumi.Input<boolean>;
        /**
         * Pod label to be excluded.
         */
        excludeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespaces to be excluded, separated by separators, such as A, B.
         */
        excludeNamespace?: pulumi.Input<string>;
        /**
         * Pod label info.
         */
        includeLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespace. There can be multiple namespaces, separated by separators, such as A, B.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Workload info.
         */
        workloads?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtraContainerStdoutWorkload>[]>;
    }

    export interface ConfigExtraContainerStdoutWorkload {
        /**
         * container name.
         */
        container?: pulumi.Input<string>;
        /**
         * workload type.
         */
        kind: pulumi.Input<string>;
        /**
         * workload name.
         */
        name: pulumi.Input<string>;
        /**
         * namespace.
         */
        namespace?: pulumi.Input<string>;
    }

    export interface ConfigExtraExcludePath {
        /**
         * Type. Valid values: File, Path.
         */
        type?: pulumi.Input<string>;
        /**
         * Specific content corresponding to Type.
         */
        value?: pulumi.Input<string>;
    }

    export interface ConfigExtraExtractRule {
        /**
         * Size of the data to be rewound in incremental collection mode. Default value: -1 (full collection).
         */
        backtracking?: pulumi.Input<number>;
        /**
         * First-Line matching rule, which is valid only if logType is multilineLog or fullregex_log.
         */
        beginRegex?: pulumi.Input<string>;
        /**
         * Delimiter for delimited log, which is valid only if logType is delimiter_log.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * Log keys to be filtered and the corresponding regex.
         */
        filterKeyRegexes?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtraExtractRuleFilterKeyRegex>[]>;
        /**
         * Key name of each extracted field. An empty key indicates to discard the field. This parameter is valid only if logType is delimiter_log. jsonLog logs use the key of JSON itself.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Full log matching rule, which is valid only if logType is fullregex_log.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * Time field format. For more information, please see the output parameters of the time format description of the strftime function in C language.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Time field key name. timeKey and timeFormat must appear in pair.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * Unmatched log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * Whether to upload the logs that failed to be parsed. Valid values: true: yes; false: no.
         */
        unMatchUpLoadSwitch?: pulumi.Input<boolean>;
    }

    export interface ConfigExtraExtractRuleFilterKeyRegex {
        /**
         * Log key to be filtered.
         */
        key?: pulumi.Input<string>;
        /**
         * Filter rule regex corresponding to key.
         */
        regex?: pulumi.Input<string>;
    }

    export interface ConfigExtraHostFile {
        /**
         * Metadata info.
         */
        customLabels?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Log file name.
         */
        filePattern: pulumi.Input<string>;
        /**
         * Log file dir.
         */
        logPath: pulumi.Input<string>;
    }

    export interface ConfigExtractRule {
        /**
         * syslog system log collection specifies the address and port that the collector listens to.
         */
        address?: pulumi.Input<string>;
        /**
         * Size of the data to be rewound in incremental collection mode. Default value: -1 (full collection).
         */
        backtracking?: pulumi.Input<number>;
        /**
         * First-Line matching rule, which is valid only if logType is multilineLog or fullregex_log.
         */
        beginRegex?: pulumi.Input<string>;
        /**
         * Delimiter for delimited log, which is valid only if logType is delimiter_log.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * Log keys to be filtered and the corresponding regex.
         */
        filterKeyRegexes?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtractRuleFilterKeyRegex>[]>;
        /**
         * GBK encoding. Default 0.
         */
        isGbk?: pulumi.Input<number>;
        /**
         * standard json. Default 0.
         */
        jsonStandard?: pulumi.Input<number>;
        /**
         * Key name of each extracted field. An empty key indicates to discard the field. This parameter is valid only if logType is delimiter_log. jsonLog logs use the key of JSON itself.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Full log matching rule, which is valid only if logType is fullregex_log.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * metadata tags.
         */
        metaTags?: pulumi.Input<pulumi.Input<inputs.Cls.ConfigExtractRuleMetaTag>[]>;
        /**
         * metadata type.
         */
        metadataType?: pulumi.Input<number>;
        /**
         * parse protocol.
         */
        parseProtocol?: pulumi.Input<string>;
        /**
         * metadata path regex.
         */
        pathRegex?: pulumi.Input<string>;
        /**
         * syslog protocol, tcp or udp.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Time field format. For more information, please see the output parameters of the time format description of the strftime function in C language.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Time field key name. timeKey and timeFormat must appear in pair.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * Unmatched log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * Whether to upload the logs that failed to be parsed. Valid values: true: yes; false: no.
         */
        unMatchUpLoadSwitch?: pulumi.Input<boolean>;
    }

    export interface ConfigExtractRuleFilterKeyRegex {
        /**
         * Log key to be filtered.
         */
        key?: pulumi.Input<string>;
        /**
         * Filter rule regex corresponding to key.
         */
        regex?: pulumi.Input<string>;
    }

    export interface ConfigExtractRuleMetaTag {
        /**
         * tag key.
         */
        key?: pulumi.Input<string>;
        /**
         * tag value.
         */
        value?: pulumi.Input<string>;
    }

    export interface CosRechargeExtractRuleInfo {
        /**
         * syslog address.
         */
        address?: pulumi.Input<string>;
        /**
         * backtracking data volume in incremental acquisition mode.
         */
        backtracking?: pulumi.Input<number>;
        /**
         * begin line regex.
         */
        beginRegex?: pulumi.Input<string>;
        /**
         * log delimiter.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * rules that need to filter logs.
         */
        filterKeyRegexes?: pulumi.Input<pulumi.Input<inputs.Cls.CosRechargeExtractRuleInfoFilterKeyRegex>[]>;
        /**
         * gbk encoding.
         */
        isGbk?: pulumi.Input<number>;
        /**
         * is standard json.
         */
        jsonStandard?: pulumi.Input<number>;
        /**
         * key list.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * log regex.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * metadata tag list.
         */
        metaTags?: pulumi.Input<pulumi.Input<inputs.Cls.CosRechargeExtractRuleInfoMetaTag>[]>;
        /**
         * metadata type.
         */
        metadataType?: pulumi.Input<number>;
        /**
         * parse protocol.
         */
        parseProtocol?: pulumi.Input<string>;
        /**
         * metadata path regex.
         */
        pathRegex?: pulumi.Input<string>;
        /**
         * syslog protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * time format.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * time key.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * parsing failure log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * whether to upload the parsing failure log.
         */
        unMatchUpLoadSwitch?: pulumi.Input<boolean>;
    }

    export interface CosRechargeExtractRuleInfoFilterKeyRegex {
        /**
         * need filter log key.
         */
        key: pulumi.Input<string>;
        /**
         * need filter log regex.
         */
        regex: pulumi.Input<string>;
    }

    export interface CosRechargeExtractRuleInfoMetaTag {
        /**
         * metadata key.
         */
        key?: pulumi.Input<string>;
        /**
         * metadata value.
         */
        value?: pulumi.Input<string>;
    }

    export interface CosShipperCompress {
        /**
         * Compression format. Valid values: gzip, lzop, none (no compression).
         */
        format: pulumi.Input<string>;
    }

    export interface CosShipperContent {
        /**
         * CSV format content description.Note: this field may return null, indicating that no valid values can be obtained.
         */
        csv?: pulumi.Input<inputs.Cls.CosShipperContentCsv>;
        /**
         * Content format. Valid values: json, csv.
         */
        format: pulumi.Input<string>;
        /**
         * JSON format content description.Note: this field may return null, indicating that no valid values can be obtained.
         */
        json?: pulumi.Input<inputs.Cls.CosShipperContentJson>;
    }

    export interface CosShipperContentCsv {
        /**
         * Field delimiter.
         */
        delimiter: pulumi.Input<string>;
        /**
         * Field delimiter.
         */
        escapeChar: pulumi.Input<string>;
        /**
         * Names of keys.Note: this field may return null, indicating that no valid values can be obtained.
         */
        keys: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Content used to populate non-existing fields.
         */
        nonExistingField: pulumi.Input<string>;
        /**
         * Whether to print key on the first row of the CSV file.
         */
        printKey: pulumi.Input<boolean>;
    }

    export interface CosShipperContentJson {
        /**
         * Enablement flag.
         */
        enableTag: pulumi.Input<boolean>;
        /**
         * Metadata information list
         * Note: this field may return null, indicating that no valid values can be obtained..
         */
        metaFields: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CosShipperFilterRule {
        /**
         * Filter rule key.
         */
        key: pulumi.Input<string>;
        /**
         * Filter rule.
         */
        regex: pulumi.Input<string>;
        /**
         * Filter rule value.
         */
        value: pulumi.Input<string>;
    }

    export interface DataTransformDstResource {
        /**
         * Alias.
         */
        alias: pulumi.Input<string>;
        /**
         * Dst topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface GetLogsetsFilter {
        /**
         * Fields that need to be filtered. Support: `logsetName`, `logsetId`, `tagKey`, `tag:tagKey`.
         */
        key: string;
        /**
         * The values that need to be filtered.
         */
        values: string[];
    }

    export interface GetLogsetsFilterArgs {
        /**
         * Fields that need to be filtered. Support: `logsetName`, `logsetId`, `tagKey`, `tag:tagKey`.
         */
        key: pulumi.Input<string>;
        /**
         * The values that need to be filtered.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface IndexRule {
        /**
         * The key value index is automatically configured. If it is empty, it means that the function is not enabled.
         */
        dynamicIndex?: pulumi.Input<inputs.Cls.IndexRuleDynamicIndex>;
        /**
         * Full-Text index configuration.
         */
        fullText?: pulumi.Input<inputs.Cls.IndexRuleFullText>;
        /**
         * Key-Value index configuration.
         */
        keyValue?: pulumi.Input<inputs.Cls.IndexRuleKeyValue>;
        /**
         * Metafield index configuration.
         */
        tag?: pulumi.Input<inputs.Cls.IndexRuleTag>;
    }

    export interface IndexRuleDynamicIndex {
        /**
         * index automatic configuration switch.
         */
        status: pulumi.Input<boolean>;
    }

    export interface IndexRuleFullText {
        /**
         * Case sensitivity.
         */
        caseSensitive: pulumi.Input<boolean>;
        /**
         * Whether Chinese characters are contained.
         */
        containZH: pulumi.Input<boolean>;
        /**
         * Full-Text index delimiter. Each character in the string represents a delimiter.
         */
        tokenizer: pulumi.Input<string>;
    }

    export interface IndexRuleKeyValue {
        /**
         * Case sensitivity.
         */
        caseSensitive: pulumi.Input<boolean>;
        /**
         * Key-Value pair information of the index to be created. Up to 100 key-value pairs can be configured.
         */
        keyValues?: pulumi.Input<pulumi.Input<inputs.Cls.IndexRuleKeyValueKeyValue>[]>;
    }

    export interface IndexRuleKeyValueKeyValue {
        /**
         * When a key value or metafield index needs to be configured for a field, the metafield Key does not need to be prefixed with __TAG__. and is consistent with the one when logs are uploaded. __TAG__. will be prefixed automatically for display in the console..
         */
        key: pulumi.Input<string>;
        /**
         * Field index description information.
         */
        value?: pulumi.Input<inputs.Cls.IndexRuleKeyValueKeyValueValue>;
    }

    export interface IndexRuleKeyValueKeyValueValue {
        /**
         * Whether Chinese characters are contained.
         */
        containZH?: pulumi.Input<boolean>;
        /**
         * Whether the analysis feature is enabled for the field.
         */
        sqlFlag?: pulumi.Input<boolean>;
        /**
         * Field delimiter, which is meaningful only if the field type is text. Each character in the entered string represents a delimiter.
         */
        tokenizer?: pulumi.Input<string>;
        /**
         * Field type. Valid values: long, text, double.
         */
        type: pulumi.Input<string>;
    }

    export interface IndexRuleTag {
        /**
         * Case sensitivity.
         */
        caseSensitive: pulumi.Input<boolean>;
        /**
         * Key-Value pair information of the index to be created. Up to 100 key-value pairs can be configured.
         */
        keyValues?: pulumi.Input<pulumi.Input<inputs.Cls.IndexRuleTagKeyValue>[]>;
    }

    export interface IndexRuleTagKeyValue {
        /**
         * When a key value or metafield index needs to be configured for a field, the metafield Key does not need to be prefixed with __TAG__. and is consistent with the one when logs are uploaded. __TAG__. will be prefixed automatically for display in the console..
         */
        key: pulumi.Input<string>;
        /**
         * Field index description information.
         */
        value?: pulumi.Input<inputs.Cls.IndexRuleTagKeyValueValue>;
    }

    export interface IndexRuleTagKeyValueValue {
        /**
         * Whether Chinese characters are contained.
         */
        containZH?: pulumi.Input<boolean>;
        /**
         * Whether the analysis feature is enabled for the field.
         */
        sqlFlag?: pulumi.Input<boolean>;
        /**
         * Field delimiter, which is meaningful only if the field type is text. Each character in the entered string represents a delimiter.
         */
        tokenizer?: pulumi.Input<string>;
        /**
         * Field type. Valid values: long, text, double.
         */
        type: pulumi.Input<string>;
    }

    export interface KafkaRechargeLogRechargeRule {
        /**
         * default time from.
         */
        defaultTimeSrc?: pulumi.Input<number>;
        /**
         * user default time.
         */
        defaultTimeSwitch: pulumi.Input<boolean>;
        /**
         * encoding format.
         */
        encodingFormat: pulumi.Input<number>;
        /**
         * log key list.
         */
        keys?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * log regex.
         */
        logRegex?: pulumi.Input<string>;
        /**
         * metadata.
         */
        metadatas?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * recharge type.
         */
        rechargeType: pulumi.Input<string>;
        /**
         * time format.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * time key.
         */
        timeKey?: pulumi.Input<string>;
        /**
         * time regex.
         */
        timeRegex?: pulumi.Input<string>;
        /**
         * time zone.
         */
        timeZone?: pulumi.Input<string>;
        /**
         * parse failed log key.
         */
        unMatchLogKey?: pulumi.Input<string>;
        /**
         * is push parse failed log.
         */
        unMatchLogSwitch?: pulumi.Input<boolean>;
        /**
         * parse failed log time from.
         */
        unMatchLogTimeSrc?: pulumi.Input<number>;
    }

    export interface KafkaRechargeProtocol {
        /**
         * encryption type.
         */
        mechanism?: pulumi.Input<string>;
        /**
         * user password.
         */
        password?: pulumi.Input<string>;
        /**
         * protocol type.
         */
        protocol?: pulumi.Input<string>;
        /**
         * username.
         */
        userName?: pulumi.Input<string>;
    }

    export interface MachineGroupMachineGroupType {
        /**
         * Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
         */
        type: pulumi.Input<string>;
        /**
         * Machine description list.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NoticeContentNoticeContents {
        /**
         * Template for Alarm Recovery Notification Content.
         */
        recoveryContent?: pulumi.Input<inputs.Cls.NoticeContentNoticeContentsRecoveryContent>;
        /**
         * Alarm triggered notification content template.
         */
        triggerContent?: pulumi.Input<inputs.Cls.NoticeContentNoticeContentsTriggerContent>;
        /**
         * Channel type. Email: Email; Sms: SMS; WeChat: WeChat; Phone: Telephone; WeCom: Enterprise WeChat; DingTalk: DingTalk; Lark: Feishu; HTTP: Custom callback.
         */
        type: pulumi.Input<string>;
    }

    export interface NoticeContentNoticeContentsRecoveryContent {
        /**
         * Notification content template body information.
         */
        content?: pulumi.Input<string>;
        /**
         * Request headers: In HTTP requests, request headers contain additional information sent by the client to the server, such as user agent, authorization credentials, expected response format, etc. Only `custom callback` supports this configuration.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Notification content template title information. Some notification channel types do not support 'title', please refer to the Tencent Cloud Console page.
         */
        title?: pulumi.Input<string>;
    }

    export interface NoticeContentNoticeContentsTriggerContent {
        /**
         * Notification content template body information.
         */
        content?: pulumi.Input<string>;
        /**
         * Request headers: In HTTP requests, request headers contain additional information sent by the client to the server, such as user agent, authorization credentials, expected response format, etc. Only `custom callback` supports this configuration.
         */
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Notification content template title information. Some notification channel types do not support 'title', please refer to the Tencent Cloud Console page.
         */
        title?: pulumi.Input<string>;
    }

    export interface ScheduledSqlDstResource {
        /**
         * topic type.
         */
        bizType?: pulumi.Input<number>;
        /**
         * metric name.
         */
        metricName?: pulumi.Input<string>;
        /**
         * topic region.
         */
        region?: pulumi.Input<string>;
        /**
         * dst topic id.
         */
        topicId: pulumi.Input<string>;
    }

    export interface TopicExtends {
        /**
         * Log topic authentication free configuration information.
         */
        anonymousAccess?: pulumi.Input<inputs.Cls.TopicExtendsAnonymousAccess>;
    }

    export interface TopicExtendsAnonymousAccess {
        /**
         * Operation list, supporting trackLog (JS/HTTP upload log) and realtimeProducer (kafka protocol upload log).
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.Cls.TopicExtendsAnonymousAccessCondition>[]>;
        /**
         * Operation list, supporting trackLog (JS/HTTP upload log) and realtimeProducer (kafka protocol upload log).
         */
        operations?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface TopicExtendsAnonymousAccessCondition {
        /**
         * Condition attribute, currently only VpcID is supported.
         */
        attributes?: pulumi.Input<string>;
        /**
         * The value of the corresponding conditional attribute.
         */
        conditionValue?: pulumi.Input<string>;
        /**
         * Conditional rule, 1: equal, 2: not equal.
         */
        rule?: pulumi.Input<number>;
    }
}

export namespace Cos {
    export interface BatchManifest {
        /**
         * The location information of the list of objects.
         */
        location: pulumi.Input<inputs.Cos.BatchManifestLocation>;
        /**
         * Format information that describes the list of objects. If it is a CSV file, this element describes the fields contained in the manifest.
         */
        spec: pulumi.Input<inputs.Cos.BatchManifestSpec>;
    }

    export interface BatchManifestLocation {
        /**
         * Specifies the etag of the object list. Length 1-1024 bytes.
         */
        etag: pulumi.Input<string>;
        /**
         * Specifies the unique resource identifier of the object manifest, which is 1-1024 bytes long.
         */
        objectArn: pulumi.Input<string>;
        /**
         * Specifies the version of the object manifest ID, which is 1-1024 bytes long.
         */
        objectVersionId?: pulumi.Input<string>;
    }

    export interface BatchManifestSpec {
        /**
         * Describes the fields contained in the listing, which you need to use to specify CSV file fields when Format is COSBatchOperations_CSV_V1. Legal fields are: Ignore, Bucket, Key, VersionId.
         */
        fields?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the format information for the list of objects. Legal fields are: COSBatchOperations_CSV_V1, COSInventoryReport_CSV_V1.
         */
        format: pulumi.Input<string>;
    }

    export interface BatchOperation {
        /**
         * Specifies the specific parameters for the batch restore operation for archive storage type objects in the inventory.
         */
        cosInitiateRestoreObject?: pulumi.Input<inputs.Cos.BatchOperationCosInitiateRestoreObject>;
        /**
         * Specifies the specific parameters for the batch copy operation on the objects in the list.
         */
        cosPutObjectCopy?: pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopy>;
    }

    export interface BatchOperationCosInitiateRestoreObject {
        /**
         * Sets the number of days after which the copy will be automatically expired and deleted, an integer in the range of 1-365.
         */
        expirationInDays: pulumi.Input<number>;
        /**
         * Select archive recovery model. Available values: Bulk, Standard.
         */
        jobTier: pulumi.Input<string>;
    }

    export interface BatchOperationCosPutObjectCopy {
        /**
         * This element specifies how ACL is copied. Valid values:
         * - Copy: inherits the source object ACL
         * - Replaced: replace source ACL
         * - Add: add a new ACL based on the source ACL.
         */
        accessControlDirective?: pulumi.Input<string>;
        /**
         * Controls the specific access to the object.
         */
        accessControlGrants?: pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyAccessControlGrants>;
        /**
         * Defines the ACL property of the object. Valid values: private, public-read.
         */
        cannedAccessControlList?: pulumi.Input<string>;
        /**
         * This element specifies whether to copy object metadata from the source object or replace it with metadata in the < NewObjectMetadata > element. Valid values are: Copy, Replaced, Add. Copy: inherit source object metadata; Replaced: replace source metadata; Add: add new metadata based on source metadata.
         */
        metadataDirective?: pulumi.Input<string>;
        /**
         * When the object is modified after the specified time, the operation is performed, otherwise 412 is returned.
         */
        modifiedSinceConstraint?: pulumi.Input<number>;
        /**
         * Configure the metadata for the object.
         */
        newObjectMetadata?: pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyNewObjectMetadata>;
        /**
         * The label of the configuration object, which must be specified when the < TaggingDirective > value is Replace or Add.
         */
        newObjectTaggings?: pulumi.Input<pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyNewObjectTagging>[]>;
        /**
         * Specifies whether the prefix of the source object needs to be replaced. A value of true indicates the replacement object prefix, which needs to be used with <ResourcesPrefix> and <TargetKeyPrefix>. Default value: false.
         */
        prefixReplace?: pulumi.Input<boolean>;
        /**
         * This field is valid only when the < PrefixReplace > value is true. Specify the source object prefix to be replaced, and the replacement directory should end with `/`. Can be empty with a maximum length of 1024 bytes.
         */
        resourcesPrefix?: pulumi.Input<string>;
        /**
         * Sets the storage level of the object. Enumerated value: STANDARD,STANDARD_IA. Default value: STANDARD.
         */
        storageClass?: pulumi.Input<string>;
        /**
         * This element specifies whether to copy the object tag from the source object or replace it with the tag in the < NewObjectTagging > element. Valid values are: Copy, Replaced, Add. Copy: inherits the source object tag; Replaced: replaces the source tag; Add: adds a new tag based on the source tag.
         */
        taggingDirective?: pulumi.Input<string>;
        /**
         * This field is valid only when the <PrefixReplace> value is true. This value represents the replaced prefix, and the replacement directory should end with /. Can be empty with a maximum length of 1024 bytes.
         */
        targetKeyPrefix?: pulumi.Input<string>;
        /**
         * Sets the target bucket for the Copy. Use qcs to specify, for example, qcs::cos:ap-chengdu:uid/1250000000:examplebucket-1250000000.
         */
        targetResource: pulumi.Input<string>;
        /**
         * When the object has not been modified after the specified time, the operation is performed, otherwise 412 is returned.
         */
        unmodifiedSinceConstraint?: pulumi.Input<number>;
    }

    export interface BatchOperationCosPutObjectCopyAccessControlGrants {
        /**
         * User name.
         */
        displayName?: pulumi.Input<string>;
        /**
         * User ID (UIN) in qcs format. For example: qcs::cam::uin/100000000001:uin/100000000001.
         */
        identifier: pulumi.Input<string>;
        /**
         * Specify a permission to be granted. Enumerated value: READ,WRITE,FULL_CONTROL.
         */
        permission: pulumi.Input<string>;
        /**
         * Specifies the type of Identifier. Currently, only user ID is supported. Enumerated value: ID.
         */
        typeIdentifier: pulumi.Input<string>;
    }

    export interface BatchOperationCosPutObjectCopyNewObjectMetadata {
        /**
         * The caching instructions defined in RFC 2616 are saved as object metadata.
         */
        cacheControl?: pulumi.Input<string>;
        /**
         * The file name defined in RFC 2616 is saved as object metadata.
         */
        contentDisposition?: pulumi.Input<string>;
        /**
         * The encoding format defined in RFC 2616 is saved as object metadata.
         */
        contentEncoding?: pulumi.Input<string>;
        /**
         * The content types defined in RFC 2616 are saved as object metadata.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The cache expiration time defined in RFC 2616 is saved as object metadata.
         */
        httpExpiresDate?: pulumi.Input<string>;
        /**
         * Server encryption algorithm. Currently, only AES256 is supported.
         */
        sseAlgorithm?: pulumi.Input<string>;
        /**
         * Includes user-defined metadata.
         */
        userMetadatas?: pulumi.Input<pulumi.Input<inputs.Cos.BatchOperationCosPutObjectCopyNewObjectMetadataUserMetadata>[]>;
    }

    export interface BatchOperationCosPutObjectCopyNewObjectMetadataUserMetadata {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface BatchOperationCosPutObjectCopyNewObjectTagging {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface BatchReport {
        /**
         * Delivery bucket for task completion reports.
         */
        bucket: pulumi.Input<string>;
        /**
         * Whether to output the task completion report.
         */
        enabled: pulumi.Input<string>;
        /**
         * Task completion report format information. Legal value: Report_CSV_V1.
         */
        format: pulumi.Input<string>;
        /**
         * Prefix information for the task completion report. Length 0-256 bytes.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Task completion report the task information that needs to be recorded to determine whether to record the execution information of all operations or the information of failed operations. Legal values: AllTasks, FailedTasksOnly.
         */
        reportScope: pulumi.Input<string>;
    }

    export interface BucketCorsRule {
        /**
         * Specifies which headers are allowed.
         */
        allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
         */
        allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which origins are allowed.
         */
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies expose header in the response.
         */
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies time in seconds that browser can cache the response for a preflight request.
         */
        maxAgeSeconds?: pulumi.Input<number>;
    }

    export interface BucketDomainCertificateAttachmentDomainCertificate {
        /**
         * Certificate info.
         */
        certificate: pulumi.Input<inputs.Cos.BucketDomainCertificateAttachmentDomainCertificateCertificate>;
        /**
         * The name of domain.
         */
        domain: pulumi.Input<string>;
    }

    export interface BucketDomainCertificateAttachmentDomainCertificateCertificate {
        /**
         * Certificate type.
         */
        certType: pulumi.Input<string>;
        /**
         * Custom certificate.
         */
        customCert: pulumi.Input<inputs.Cos.BucketDomainCertificateAttachmentDomainCertificateCertificateCustomCert>;
    }

    export interface BucketDomainCertificateAttachmentDomainCertificateCertificateCustomCert {
        /**
         * Public key of certificate.
         */
        cert: pulumi.Input<string>;
        /**
         * Private key of certificate.
         */
        privateKey: pulumi.Input<string>;
    }

    export interface BucketInventoryDestination {
        /**
         * ID of the bucket owner.
         */
        accountId?: pulumi.Input<string>;
        /**
         * Bucket name.
         */
        bucket: pulumi.Input<string>;
        /**
         * Server-side encryption for the inventory result.
         */
        encryption?: pulumi.Input<inputs.Cos.BucketInventoryDestinationEncryption>;
        /**
         * Format of the inventory result. Valid value: CSV.
         */
        format: pulumi.Input<string>;
        /**
         * Prefix of the inventory result.
         */
        prefix?: pulumi.Input<string>;
    }

    export interface BucketInventoryDestinationEncryption {
        /**
         * Encryption with COS-managed key. This field can be left empty.
         */
        sseCos?: pulumi.Input<string>;
    }

    export interface BucketInventoryFilter {
        /**
         * Creation time range of the objects to analyze.
         */
        period?: pulumi.Input<inputs.Cos.BucketInventoryFilterPeriod>;
        /**
         * Prefix of the objects to analyze.
         */
        prefix?: pulumi.Input<string>;
    }

    export interface BucketInventoryFilterPeriod {
        /**
         * Creation end time of the objects to analyze. The parameter is a timestamp in seconds, for example, 1568688762.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Creation start time of the objects to analyze. The parameter is a timestamp in seconds, for example, 1568688761.
         */
        startTime?: pulumi.Input<string>;
    }

    export interface BucketInventoryOptionalFields {
        /**
         * Optional analysis items to include in the inventory result. The optional fields include Size, LastModifiedDate, StorageClass, ETag, IsMultipartUploaded, ReplicationStatus, Tag, Crc64, and x-cos-meta-*.
         */
        fields?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BucketInventorySchedule {
        /**
         * Frequency of the inventory job. Enumerated values: Daily, Weekly.
         */
        frequency: pulumi.Input<string>;
    }

    export interface BucketLifecycleRule {
        /**
         * Set the maximum time a multipart upload is allowed to remain running.
         */
        abortIncompleteMultipartUpload?: pulumi.Input<inputs.Cos.BucketLifecycleRuleAbortIncompleteMultipartUpload>;
        /**
         * Specifies a period in the object's expire (documented below).
         */
        expiration?: pulumi.Input<inputs.Cos.BucketLifecycleRuleExpiration>;
        /**
         * Object key prefix identifying one or more objects to which the rule applies.
         */
        filterPrefix: pulumi.Input<string>;
        /**
         * A unique identifier for the rule. It can be up to 255 characters.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies when non current object versions shall expire.
         */
        nonCurrentExpiration?: pulumi.Input<inputs.Cos.BucketLifecycleRuleNonCurrentExpiration>;
        /**
         * Specifies a period in the non current object's transitions.
         */
        nonCurrentTransitions?: pulumi.Input<pulumi.Input<inputs.Cos.BucketLifecycleRuleNonCurrentTransition>[]>;
        /**
         * Specifies a period in the object's transitions (documented below).
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.Cos.BucketLifecycleRuleTransition>[]>;
    }

    export interface BucketLifecycleRuleAbortIncompleteMultipartUpload {
        /**
         * Specifies the number of days after the multipart upload starts that the upload must be completed. The maximum value is 3650.
         */
        daysAfterInitiation: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleExpiration {
        /**
         * Specifies the date after which you want the corresponding action to take effect.
         */
        date?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * Indicates whether the delete marker of an expired object will be removed.
         */
        deleteMarker?: pulumi.Input<boolean>;
    }

    export interface BucketLifecycleRuleNonCurrentExpiration {
        /**
         * Number of days after non current object creation when the specific rule action takes effect. The maximum value is 3650.
         */
        nonCurrentDays?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleNonCurrentTransition {
        /**
         * Number of days after non current object creation when the specific rule action takes effect.
         */
        nonCurrentDays?: pulumi.Input<number>;
        /**
         * Specifies the storage class to which you want the non current object to transition. Available values include `STANDARD_IA`, `MAZ_STANDARD_IA`, `INTELLIGENT_TIERING`, `MAZ_INTELLIGENT_TIERING`, `ARCHIVE`, `DEEP_ARCHIVE`. For more information, please refer to: https://cloud.tencent.com/document/product/436/33417.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketLifecycleRuleTransition {
        /**
         * Specifies the date after which you want the corresponding action to take effect.
         */
        date?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * Specifies the storage class to which you want the object to transition. Available values include `STANDARD_IA`, `MAZ_STANDARD_IA`, `INTELLIGENT_TIERING`, `MAZ_INTELLIGENT_TIERING`, `ARCHIVE`, `DEEP_ARCHIVE`. For more information, please refer to: https://cloud.tencent.com/document/product/436/33417.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketOriginDomainRule {
        /**
         * Specify domain host.
         */
        domain: pulumi.Input<string>;
        /**
         * Domain status, default: `ENABLED`.
         */
        status?: pulumi.Input<string>;
        /**
         * Specify origin domain type, available values: `REST`, `WEBSITE`, `ACCELERATE`, default: `REST`.
         */
        type?: pulumi.Input<string>;
    }

    export interface BucketOriginPullRule {
        /**
         * Specifies the custom headers that you can add for COS to access your origin server.
         */
        customHttpHeaders?: pulumi.Input<{[key: string]: any}>;
        /**
         * Specifies the pass through headers when accessing the origin server.
         */
        followHttpHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies whether to pass through COS request query string when accessing the origin server.
         */
        followQueryString?: pulumi.Input<boolean>;
        /**
         * Specifies whether to follow 3XX redirect to another origin server to pull data from.
         */
        followRedirection?: pulumi.Input<boolean>;
        /**
         * Allows only a domain name or IP address. You can optionally append a port number to the address.
         */
        host: pulumi.Input<string>;
        /**
         * Triggers the origin-pull rule when the requested file name matches this prefix.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Priority of origin-pull rules, do not set the same value for multiple rules.
         */
        priority: pulumi.Input<number>;
        /**
         * the protocol used for COS to access the specified origin server. The available value include `HTTP`, `HTTPS` and `FOLLOW`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * If `true`, COS will not return 3XX status code when pulling data from an origin server. Current available zone: ap-beijing, ap-shanghai, ap-singapore, ap-mumbai.
         */
        syncBackToSource?: pulumi.Input<boolean>;
    }

    export interface BucketReplicaRule {
        /**
         * Destination bucket identifier, format: `qcs::cos:<region>::<bucketname-appid>`. NOTE: destination bucket must enable versioning.
         */
        destinationBucket: pulumi.Input<string>;
        /**
         * Storage class of destination, available values: `STANDARD`, `INTELLIGENT_TIERING`, `STANDARD_IA`. default is following current class of destination.
         */
        destinationStorageClass?: pulumi.Input<string>;
        /**
         * Name of a specific rule.
         */
        id?: pulumi.Input<string>;
        /**
         * Prefix matching policy. Policies cannot overlap; otherwise, an error will be returned. To match the root directory, leave this parameter empty.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Status identifier, available values: `Enabled`, `Disabled`.
         */
        status: pulumi.Input<string>;
    }

    export interface BucketWebsite {
        /**
         * `Endpoint` of the static website.
         */
        endpoint?: pulumi.Input<string>;
        /**
         * An absolute path to the document to return in case of a 4XX error.
         */
        errorDocument?: pulumi.Input<string>;
        /**
         * COS returns this index document when requests are made to the root domain or any of the subfolders.
         */
        indexDocument?: pulumi.Input<string>;
        /**
         * Redirects all request configurations. Valid values: http, https. Default is `http`.
         */
        redirectAllRequestsTo?: pulumi.Input<string>;
    }

}

export namespace Csip {
    export interface RiskCenterAsset {
        /**
         * Multi-cloud asset unique idNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        arn?: pulumi.Input<string>;
        /**
         * Ip/ domain name/asset id, database id, etc.
         */
        asset?: pulumi.Input<string>;
        /**
         * Asset nameNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        assetName?: pulumi.Input<string>;
        /**
         * Asset classificationNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        assetType?: pulumi.Input<string>;
        /**
         * Asset typeNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * RegionNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        region?: pulumi.Input<string>;
    }

    export interface RiskCenterTaskAdvanceCfg {
        /**
         * Configure advanced risk Settings.
         */
        cfgRisks?: pulumi.Input<pulumi.Input<inputs.Csip.RiskCenterTaskAdvanceCfgCfgRisk>[]>;
        /**
         * Advanced Port Risk Configuration.
         */
        portRisks?: pulumi.Input<pulumi.Input<inputs.Csip.RiskCenterTaskAdvanceCfgPortRisk>[]>;
        /**
         * Advanced vulnerability risk configuration.
         */
        vulRisks?: pulumi.Input<pulumi.Input<inputs.Csip.RiskCenterTaskAdvanceCfgVulRisk>[]>;
        /**
         * Weak password risk advanced configuration.
         */
        weakPwdRisks?: pulumi.Input<pulumi.Input<inputs.Csip.RiskCenterTaskAdvanceCfgWeakPwdRisk>[]>;
    }

    export interface RiskCenterTaskAdvanceCfgCfgRisk {
        /**
         * Whether to enable, 0- No, 1- Enable.
         */
        enable: pulumi.Input<number>;
        /**
         * Detection item ID.
         */
        itemId: pulumi.Input<string>;
        /**
         * Resource type.
         */
        resourceType: pulumi.Input<string>;
    }

    export interface RiskCenterTaskAdvanceCfgPortRisk {
        /**
         * Detection item type, 0-system defined, 1-user-defined.
         */
        checkType: pulumi.Input<number>;
        /**
         * Description of detection items.
         */
        detail: pulumi.Input<string>;
        /**
         * Whether to enable, 0- No, 1- Enable.
         */
        enable: pulumi.Input<number>;
        /**
         * Port collection, separated by commas.
         */
        portSets: pulumi.Input<string>;
    }

    export interface RiskCenterTaskAdvanceCfgVulRisk {
        /**
         * Whether to enable, 0- No, 1- Enable.
         */
        enable: pulumi.Input<number>;
        /**
         * Risk ID.
         */
        riskId: pulumi.Input<string>;
    }

    export interface RiskCenterTaskAdvanceCfgWeakPwdRisk {
        /**
         * Detection item ID.
         */
        checkItemId: pulumi.Input<number>;
        /**
         * Whether to enable, 0- No, 1- Enable.
         */
        enable: pulumi.Input<number>;
    }
}

export namespace Css {
    export interface PlayDomainCertAttachmentDomainInfo {
        /**
         * domain name.
         */
        domainName: pulumi.Input<string>;
        /**
         * Whether to enable the https rule for the domain name. 1: enable, 0: disabled, -1: remain unchanged.
         */
        status: pulumi.Input<number>;
    }

    export interface PullStreamTaskWatermarkList {
        /**
         * pic height.
         */
        height: pulumi.Input<number>;
        /**
         * position type, 0:left top, 1:right top, 2:right bot, 3: left bot.
         */
        location: pulumi.Input<number>;
        /**
         * watermark picture url.
         */
        pictureUrl: pulumi.Input<string>;
        /**
         * pic width.
         */
        width: pulumi.Input<number>;
        /**
         * x position.
         */
        xPosition: pulumi.Input<number>;
        /**
         * y position.
         */
        yPosition: pulumi.Input<number>;
    }

    export interface RecordTemplateAacParam {
        /**
         * Classification of on-demand applications. This field may return null, indicating that no valid value can be obtained.
         */
        classId?: pulumi.Input<number>;
        /**
         * Whether to enable recording in the current format. The default value is 0. 0: No, 1: Yes.
         */
        enable?: pulumi.Input<number>;
        /**
         * Task flow. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedure?: pulumi.Input<string>;
        /**
         * Recording interval. Unit: second, default: 1800. Value range: 30-7200. This parameter is invalid for HLS. When recording HLS, a file is generated from streaming to streaming.
         */
        recordInterval?: pulumi.Input<number>;
        /**
         * Video storage strategy. Normal: standard storage. Cold: low frequency storage. Note: This field may return null, indicating that no valid value can be obtained.
         */
        storageMode?: pulumi.Input<string>;
        /**
         * Recording storage duration. Unit: second. Value range: 0 - 1500 days. 0: indicates permanent storage.
         */
        storageTime?: pulumi.Input<number>;
        /**
         * Record file name.Special placeholders supported are: `StreamID`: Stream ID,`StartYear`: Start time - year,`StartMonth`: Start time - month,`StartDay`: Start time - day,`StartHour`: Start time - hour,`StartMinute`: Start time - minutes,`StartSecond`: Start time - seconds,`StartMillisecond`: Start time - milliseconds,`EndYear`: End time - year,`EndMonth`: End time - month,`EndDay`: End time - day,`EndHour`: End time - hour,`EndMinute`: End time - minutes,`EndSecond`: End time - seconds,`EndMillisecond`: End time - millisecondsIf the default recording file name is not set as ,`StreamID`,`StartYear`,`StartMonth`,`StartDay`,`StartHour`,`StartMinute`,`StartSecond`,`EndYear`,`EndMonth`,`EndDay`,`EndHour`,`EndMinute`,`EndSecond`.
         */
        vodFileName?: pulumi.Input<string>;
        /**
         * The ID of the on-demand sub app.
         */
        vodSubAppId?: pulumi.Input<number>;
    }

    export interface RecordTemplateFlvParam {
        /**
         * Classification of on-demand applications. Note: This field may return null, indicating that no valid value can be obtained.
         */
        classId?: pulumi.Input<number>;
        /**
         * Whether to enable recording in the current format. The default value is 0. 0: No, 1: Yes.
         */
        enable?: pulumi.Input<number>;
        /**
         * Task flow. This field may return null, indicating that no valid value can be obtained.
         */
        procedure?: pulumi.Input<string>;
        /**
         * Recording interval.  Unit: second, default: 1800.  Value range: 30-7200.  This parameter is invalid for HLS. When recording HLS, a file is generated from streaming to streaming.
         */
        recordInterval?: pulumi.Input<number>;
        /**
         * Video storage strategy. Normal: standard storage. Cold: low frequency storage. This field may return null, indicating that no valid value can be obtained.
         */
        storageMode?: pulumi.Input<string>;
        /**
         * Recording storage duration.  Unit: second. Value range: 0 - 1500 days.  0: indicates permanent storage.
         */
        storageTime?: pulumi.Input<number>;
        /**
         * Record file name.Special placeholders supported are: `StreamID`: Stream ID,`StartYear`: Start time - year,`StartMonth`: Start time - month,`StartDay`: Start time - day,`StartHour`: Start time - hour,`StartMinute`: Start time - minutes,`StartSecond`: Start time - seconds,`StartMillisecond`: Start time - milliseconds,`EndYear`: End time - year,`EndMonth`: End time - month,`EndDay`: End time - day,`EndHour`: End time - hour,`EndMinute`: End time - minutes,`EndSecond`: End time - seconds,`EndMillisecond`: End time - millisecondsIf the default recording file name is not set as ,`StreamID`_ ,`StartYear`-,`StartMonth`-,`StartDay`-,`StartHour`-,`StartMinute`-,`StartSecond`_ ,`EndYear`-,`EndMonth`-,`EndDay`-,`EndHour`-,`EndMinute`-,`EndSecond`.
         */
        vodFileName?: pulumi.Input<string>;
        /**
         * The ID of the vodSub app.
         */
        vodSubAppId?: pulumi.Input<number>;
    }

    export interface RecordTemplateFlvSpecialParam {
        /**
         * Whether to enable the transfer while recording is valid only in the flv format.
         */
        uploadInRecording?: pulumi.Input<boolean>;
    }

    export interface RecordTemplateHlsParam {
        /**
         * Classification of on-demand applications. Note: This field may return null, indicating that no valid value can be obtained.
         */
        classId?: pulumi.Input<number>;
        /**
         * Whether to enable recording in the current format. The default value is 0. 0: No, 1: Yes.
         */
        enable?: pulumi.Input<number>;
        /**
         * Task flow. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedure?: pulumi.Input<string>;
        /**
         * Recording interval. Unit: second, default: 1800. Value range: 30-7200. This parameter is invalid for HLS. When recording HLS, a file is generated from streaming to streaming.
         */
        recordInterval?: pulumi.Input<number>;
        /**
         * Video storage strategy. Normal: standard storage. Cold: low frequency storage. Note: This field may return null, indicating that no valid value can be obtained.
         */
        storageMode?: pulumi.Input<string>;
        /**
         * Recording storage duration. Unit: second. Value range: 0 - 1500 days. 0: indicates permanent storage.
         */
        storageTime?: pulumi.Input<number>;
        /**
         * Record file name.Special placeholders supported are: `StreamID`: Stream ID,`StartYear`: Start time - year,`StartMonth`: Start time - month,`StartDay`: Start time - day,`StartHour`: Start time - hour,`StartMinute`: Start time - minutes,`StartSecond`: Start time - seconds,`StartMillisecond`: Start time - milliseconds,`EndYear`: End time - year,`EndMonth`: End time - month,`EndDay`: End time - day,`EndHour`: End time - hour,`EndMinute`: End time - minutes,`EndSecond`: End time - seconds,`EndMillisecond`: End time - millisecondsIf the default recording file name is not set as ,`StreamID`,`StartYear`,`StartMonth`,`StartDay`,`StartHour`,`StartMinute`,`StartSecond`,`EndYear`,`EndMonth`,`EndDay`,`EndHour`,`EndMinute`,`EndSecond`.
         */
        vodFileName?: pulumi.Input<string>;
        /**
         * The ID of the vodSub app.
         */
        vodSubAppId?: pulumi.Input<number>;
    }

    export interface RecordTemplateHlsSpecialParam {
        /**
         * HLS freewheeling timeout. Value range [0, 1800].
         */
        flowContinueDuration?: pulumi.Input<number>;
    }

    export interface RecordTemplateMp3Param {
        /**
         * Classification of vod applications. Note: This field may return null, indicating that no valid value can be obtained.
         */
        classId?: pulumi.Input<number>;
        /**
         * Whether to enable recording in the current format. The default value is 0. 0: No, 1: Yes.
         */
        enable?: pulumi.Input<number>;
        /**
         * Task flow. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedure?: pulumi.Input<string>;
        /**
         * Recording interval. Unit: second, default: 1800. Value range: 30-7200. This parameter is invalid for HLS. When recording HLS, a file is generated from streaming to streaming.
         */
        recordInterval?: pulumi.Input<number>;
        /**
         * Video storage strategy. Normal: standard storage. Cold: low frequency storage. Note: This field may return null, indicating that no valid value can be obtained.
         */
        storageMode?: pulumi.Input<string>;
        /**
         * Recording storage duration. Unit: second. Value range: 0 - 1500 days. 0: indicates permanent storage.
         */
        storageTime?: pulumi.Input<number>;
        /**
         * Record file name.Special placeholders supported are: `StreamID`: Stream ID,`StartYear`: Start time - year,`StartMonth`: Start time - month,`StartDay`: Start time - day,`StartHour`: Start time - hour,`StartMinute`: Start time - minutes,`StartSecond`: Start time - seconds,`StartMillisecond`: Start time - milliseconds,`EndYear`: End time - year,`EndMonth`: End time - month,`EndDay`: End time - day,`EndHour`: End time - hour,`EndMinute`: End time - minutes,`EndSecond`: End time - seconds,`EndMillisecond`: End time - millisecondsIf the default recording file name is not set as ,`StreamID`,`StartYear`,`StartMonth`,`StartDay`,`StartHour`,`StartMinute`, `StartSecond`,`EndYear`,`EndMonth`,`EndDay`,`EndHour`,`EndMinute`,`EndSecond`.
         */
        vodFileName?: pulumi.Input<string>;
        /**
         * The ID of the on-demand sub app.
         */
        vodSubAppId?: pulumi.Input<number>;
    }

    export interface RecordTemplateMp4Param {
        /**
         * Classification of on-demand applications. Note: This field may return null, indicating that no valid value can be obtained.
         */
        classId?: pulumi.Input<number>;
        /**
         * Whether to enable recording in the current format. The default value is 0. 0: No, 1: Yes.
         */
        enable?: pulumi.Input<number>;
        /**
         * Task flow. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedure?: pulumi.Input<string>;
        /**
         * Recording interval. Unit: second, default: 1800. Value range: 30-7200. This parameter is invalid for HLS. When recording HLS, a file is generated from streaming to streaming.
         */
        recordInterval?: pulumi.Input<number>;
        /**
         * Video storage strategy. Normal: standard storage. Cold: low frequency storage. Note: This field may return null, indicating that no valid value can be obtained.
         */
        storageMode?: pulumi.Input<string>;
        /**
         * Recording storage duration. Unit: second. Value range: 0 - 1500 days. 0: indicates permanent storage.
         */
        storageTime?: pulumi.Input<number>;
        /**
         * Record file name.Special placeholders supported are: `StreamID`: Stream ID,`StartYear`: Start time - year,`StartMonth`: Start time - month,`StartDay`: Start time - day,`StartHour`: Start time - hour,`StartMinute`: Start time - minutes,`StartSecond`: Start time - seconds,`StartMillisecond`: Start time - milliseconds,`EndYear`: End time - year,`EndMonth`: End time - month,`EndDay`: End time - day,`EndHour`: End time - hour,`EndMinute`: End time - minutes,`EndSecond`: End time - seconds,`EndMillisecond`: End time - millisecondsIf the default recording file name is not set as ,`StreamID`,`StartYear`,`StartMonth`,`StartDay`,`StartHour`,`StartMinute`,`StartSecond`,`EndYear`,`EndMonth`,`EndDay`,`EndHour`,`EndMinute`,`EndSecond`.
         */
        vodFileName?: pulumi.Input<string>;
        /**
         * The ID of the on-demand sub app.
         */
        vodSubAppId?: pulumi.Input<number>;
    }

    export interface StreamMonitorInputList {
        /**
         * Description content.limit 256 bytes.
         */
        description?: pulumi.Input<string>;
        /**
         * Wait monitor input push path.limit 32 bytes.
         */
        inputApp?: pulumi.Input<string>;
        /**
         * Wait monitor input push domain.limit 128 bytes.
         */
        inputDomain?: pulumi.Input<string>;
        /**
         * Wait monitor input stream name.limit 256 bytes.
         */
        inputStreamName: pulumi.Input<string>;
        /**
         * Wait monitor input stream push url.
         */
        inputUrl?: pulumi.Input<string>;
    }

    export interface StreamMonitorNotifyPolicy {
        /**
         * Callback url.limit [0,512].only http or https.
         */
        callbackUrl?: pulumi.Input<string>;
        /**
         * Notify policy type.0: not notify.1: use global policy.
         */
        notifyPolicyType?: pulumi.Input<number>;
    }

    export interface StreamMonitorOutputInfo {
        /**
         * Monitor task play path.limit 32 bytes.
         */
        outputApp?: pulumi.Input<string>;
        /**
         * Monitor task output play domain.limit 128 bytes.
         */
        outputDomain?: pulumi.Input<string>;
        /**
         * Monitor task output height, limit[1, 1080].
         */
        outputStreamHeight: pulumi.Input<number>;
        /**
         * Monitor task output stream name.limit 256 bytes.
         */
        outputStreamName?: pulumi.Input<string>;
        /**
         * Output stream width, limit[1, 1920].
         */
        outputStreamWidth: pulumi.Input<number>;
    }
}

export namespace Cvm {
    export interface ActionTimerActionTimer {
        /**
         * Execution time, expressed according to ISO8601 standard and using UTC time. The format is YYYY-MM-DDThh:mm:ssZ. For example, 2018-05-29T11:26:40Z, the execution time must be 5 minutes longer than the current time.
         */
        actionTime?: pulumi.Input<string>;
        /**
         * Timer action, currently only supports destroying one value: TerminateInstances.
         */
        timerAction?: pulumi.Input<string>;
    }

    export interface ChcConfigBmcVirtualPrivateCloud {
        /**
         * Whether to use a CVM instance as a public gateway. The public gateway is only available when the instance has a public IP and resides in a VPC. Valid values:&lt;br&gt;&lt;li&gt;TRUE: yes;&lt;br&gt;&lt;li&gt;FALSE: no&lt;br&gt;&lt;br&gt;Default: FALSE.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * Number of IPv6 addresses randomly generated for the ENI.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of VPC subnet IPs. You can use this parameter when creating instances or modifying VPC attributes of instances. Currently you can specify multiple IPs in one subnet only when creating multiple instances at the same time.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC subnet ID in the format subnet-xxx. To obtain valid subnet IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call DescribeSubnets and look for the unSubnetId fields in the response. If you specify DEFAULT for both SubnetId and VpcId when creating an instance, the default VPC will be used.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID in the format of vpc-xxx. To obtain valid VPC IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call the DescribeVpcEx API and look for the unVpcId fields in the response. If you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ChcConfigDeployVirtualPrivateCloud {
        /**
         * Whether to use a CVM instance as a public gateway. The public gateway is only available when the instance has a public IP and resides in a VPC. Valid values:&lt;br&gt;&lt;li&gt;TRUE: yes;&lt;br&gt;&lt;li&gt;FALSE: no&lt;br&gt;&lt;br&gt;Default: FALSE.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * Number of IPv6 addresses randomly generated for the ENI.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of VPC subnet IPs. You can use this parameter when creating instances or modifying VPC attributes of instances. Currently you can specify multiple IPs in one subnet only when creating multiple instances at the same time.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC subnet ID in the format subnet-xxx. To obtain valid subnet IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call DescribeSubnets and look for the unSubnetId fields in the response. If you specify DEFAULT for both SubnetId and VpcId when creating an instance, the default VPC will be used.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID in the format of vpc-xxx. To obtain valid VPC IDs, you can log in to the [console](https://console.tencentcloud.com/vpc/vpc?rid=1) or call the DescribeVpcEx API and look for the unVpcId fields in the response. If you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface GetChcHostsFilter {
        /**
         * Filter name.
         */
        name: string;
        /**
         * Filter values.
         */
        values: string[];
    }

    export interface GetChcHostsFilterArgs {
        /**
         * Filter name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstancesModificationFilter {
        /**
         * Fields to be filtered.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetInstancesModificationFilterArgs {
        /**
         * Fields to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ImportImageTagSpecification {
        /**
         * Resource type. Valid values: instance (CVM), host (CDH), image (for image), and keypair (for key). Note: This field may return null, indicating that no valid values can be obtained.
         */
        resourceType: pulumi.Input<string>;
        /**
         * Tag pairs Note: This field may return null, indicating that no valid values can be obtained.
         */
        tags: pulumi.Input<pulumi.Input<inputs.Cvm.ImportImageTagSpecificationTag>[]>;
    }

    export interface ImportImageTagSpecificationTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateActionTimer {
        /**
         * Execution time.
         */
        actionTime?: pulumi.Input<string>;
        /**
         * Extended data.
         */
        externals?: pulumi.Input<inputs.Cvm.LaunchTemplateActionTimerExternals>;
        /**
         * Timer name.
         */
        timerAction?: pulumi.Input<string>;
    }

    export interface LaunchTemplateActionTimerExternals {
        /**
         * Release address.
         */
        releaseAddress?: pulumi.Input<boolean>;
        /**
         * HDD local storage attributes.
         */
        storageBlockAttr?: pulumi.Input<inputs.Cvm.LaunchTemplateActionTimerExternalsStorageBlockAttr>;
        /**
         * Unsupported network type.
         */
        unsupportNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LaunchTemplateActionTimerExternalsStorageBlockAttr {
        /**
         * The maximum capacity of HDD local storage.
         */
        maxSize: pulumi.Input<number>;
        /**
         * The minimum capacity of HDD local storage.
         */
        minSize: pulumi.Input<number>;
        /**
         * The type of HDD local storage.
         */
        type: pulumi.Input<string>;
    }

    export interface LaunchTemplateDataDisk {
        /**
         * Cloud Dedicated Cluster(CDC) ID.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * Whether the data disk is destroyed along with the instance, true or false.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Data disk ID.
         */
        diskId?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         */
        diskSize: pulumi.Input<number>;
        /**
         * The type of data disk.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Whether the data disk is encrypted, TRUE or FALSE.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * The id of custom CMK.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Cloud disk performance, MB/s.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface LaunchTemplateEnhancedService {
        /**
         * Enable TencentCloud Automation Tools(TAT).
         */
        automationService?: pulumi.Input<inputs.Cvm.LaunchTemplateEnhancedServiceAutomationService>;
        /**
         * Enable cloud monitor service.
         */
        monitorService?: pulumi.Input<inputs.Cvm.LaunchTemplateEnhancedServiceMonitorService>;
        /**
         * Enable cloud security service.
         */
        securityService?: pulumi.Input<inputs.Cvm.LaunchTemplateEnhancedServiceSecurityService>;
    }

    export interface LaunchTemplateEnhancedServiceAutomationService {
        /**
         * Whether to enable TencentCloud Automation Tools(TAT), TRUE or FALSE.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateEnhancedServiceMonitorService {
        /**
         * Whether to enable cloud monitor service, TRUE or FALSE.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateEnhancedServiceSecurityService {
        /**
         * Whether to enable cloud security service, TRUE or FALSE.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateInstanceChargePrepaid {
        /**
         * The period of purchasing instances.
         */
        period: pulumi.Input<number>;
        /**
         * Automatic renew flag.
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface LaunchTemplateInstanceMarketOptions {
        /**
         * Market option type, currently only supports value: spot.
         */
        marketType?: pulumi.Input<string>;
        /**
         * Bidding related options.
         */
        spotOptions: pulumi.Input<inputs.Cvm.LaunchTemplateInstanceMarketOptionsSpotOptions>;
    }

    export interface LaunchTemplateInstanceMarketOptionsSpotOptions {
        /**
         * Bidding.
         */
        maxPrice: pulumi.Input<string>;
        /**
         * Bidding request type, currently only supported type: one-time.
         */
        spotInstanceType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateInternetAccessible {
        /**
         * The ID of bandwidth package.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * The type of internet charge.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Internet outbound bandwidth upper limit, Mbps.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * Whether to allocate public network IP, TRUE or FALSE.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateLoginSettings {
        /**
         * Keep the original settings of the mirror.
         */
        keepImageLogin?: pulumi.Input<string>;
        /**
         * List of key ID.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The login password of instance.
         */
        password?: pulumi.Input<string>;
    }

    export interface LaunchTemplatePlacement {
        /**
         * The CDH ID list of the instance(input).
         */
        hostIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * It has been deprecated from version 1.81.108. Specify the host machine ip.
         *
         * @deprecated It has been deprecated from version 1.81.108.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The project ID of the instance.
         */
        projectId?: pulumi.Input<number>;
        /**
         * The available zone ID of the instance.
         */
        zone: pulumi.Input<string>;
    }

    export interface LaunchTemplateSystemDisk {
        /**
         * Cloud Dedicated Cluster(CDC) ID.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * System disk ID.
         */
        diskId?: pulumi.Input<string>;
        /**
         * The size of system disk.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * The type of system disk.
         */
        diskType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateTagSpecification {
        /**
         * The type of resource.
         */
        resourceType: pulumi.Input<string>;
        /**
         * Tag list.
         */
        tags: pulumi.Input<pulumi.Input<inputs.Cvm.LaunchTemplateTagSpecificationTag>[]>;
    }

    export interface LaunchTemplateTagSpecificationTag {
        /**
         * The key of tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value of tag.
         */
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionActionTimer {
        /**
         * Execution time, displayed according to ISO8601 standard, and UTC time is used. The format is YYYY-MM-DDThh:mm:ssZ. For example, 2018-05-29T11:26:40Z, the execution must be at least 5 minutes later than the current time.
         */
        actionTime?: pulumi.Input<string>;
        /**
         * Additional data.
         */
        externals?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionActionTimerExternals>;
        /**
         * Timer name. Currently TerminateInstances is the only supported value.
         */
        timerAction?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionActionTimerExternals {
        /**
         * Release address.
         */
        releaseAddress?: pulumi.Input<boolean>;
        /**
         * Information on local HDD storage.
         */
        storageBlockAttr?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionActionTimerExternalsStorageBlockAttr>;
        /**
         * Not supported network.
         */
        unsupportNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LaunchTemplateVersionActionTimerExternalsStorageBlockAttr {
        /**
         * Maximum capacity of local HDD storage.
         */
        maxSize: pulumi.Input<number>;
        /**
         * Minimum capacity of local HDD storage.
         */
        minSize: pulumi.Input<number>;
        /**
         * Local HDD storage type. Value: LOCAL_PRO.
         */
        type: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionDataDisk {
        /**
         * ID of the dedicated cluster to which the instance belongs.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * Whether to terminate the data disk when its CVM is terminated. Default value: `true`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * System disk ID. System disks whose type is LOCAL_BASIC or LOCAL_SSD do not have an ID and do not support this parameter. It is only used as a response parameter for APIs such as DescribeInstances, and cannot be used as a request parameter for APIs such as RunInstances.
         */
        diskId?: pulumi.Input<string>;
        /**
         * Data disk size (in GB). The minimum adjustment increment is 10 GB. The value range varies by data disk type.
         */
        diskSize: pulumi.Input<number>;
        /**
         * The type of data disk.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specifies whether the data disk is encrypted.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID. The size of the selected data disk snapshot must be smaller than that of the data disk. Note: This field may return null, indicating that no valid value is found.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Cloud disk performance in MB/s.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface LaunchTemplateVersionEnhancedService {
        /**
         * Whether to enable the TAT service. If this parameter is not specified, the TAT service is enabled for public images and disabled for other images by default.
         */
        automationService?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionEnhancedServiceAutomationService>;
        /**
         * Enables cloud monitor service. If this parameter is not specified, the cloud monitor service will be enabled by default.
         */
        monitorService?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionEnhancedServiceMonitorService>;
        /**
         * Enables cloud security service. If this parameter is not specified, the cloud security service will be enabled by default.
         */
        securityService?: pulumi.Input<inputs.Cvm.LaunchTemplateVersionEnhancedServiceSecurityService>;
    }

    export interface LaunchTemplateVersionEnhancedServiceAutomationService {
        /**
         * Whether to enable the TAT service.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionEnhancedServiceMonitorService {
        /**
         * Whether to enable Cloud Monitor.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionEnhancedServiceSecurityService {
        /**
         * Whether to enable Cloud Security.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionInstanceChargePrepaid {
        /**
         * Subscription period; unit: month; valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60.
         */
        period: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically &lt;br&gt;&lt;br&gt;Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionInstanceMarketOptions {
        /**
         * Market option type. Currently spot is the only supported value.
         */
        marketType?: pulumi.Input<string>;
        /**
         * Options related to bidding.
         */
        spotOptions: pulumi.Input<inputs.Cvm.LaunchTemplateVersionInstanceMarketOptionsSpotOptions>;
    }

    export interface LaunchTemplateVersionInstanceMarketOptionsSpotOptions {
        /**
         * Bidding price.
         */
        maxPrice: pulumi.Input<string>;
        /**
         * Bidding request type. Currently only one-time is supported.
         */
        spotInstanceType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionInternetAccessible {
        /**
         * Bandwidth package ID.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * Network connection billing plan.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * The maximum outbound bandwidth of the public network, in Mbps. The default value is 0 Mbps.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * Whether to assign a public IP.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateVersionLoginSettings {
        /**
         * Whether to keep the original settings of an image.
         */
        keepImageLogin?: pulumi.Input<string>;
        /**
         * List of key IDs. After an instance is associated with a key, you can access the instance with the private key in the key pair.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Login password of the instance.
         */
        password?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionPlacement {
        /**
         * ID list of CDHs from which the instance can be created. If you have purchased CDHs and specify this parameter, the instances you purchase will be randomly deployed on the CDHs.
         */
        hostIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * IPs of the hosts to create CVMs.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ID of the project to which the instance belongs. This parameter can be obtained from the projectId returned by DescribeProject. If this is left empty, the default project is used.
         */
        projectId?: pulumi.Input<number>;
        /**
         * ID of the availability zone where the instance resides. You can call the DescribeZones API and obtain the ID in the returned Zone field.
         */
        zone: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionSystemDisk {
        /**
         * ID of the dedicated cluster to which the instance belongs.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * System disk ID. System disks whose type is LOCAL_BASIC or LOCAL_SSD do not have an ID and do not support this parameter. It is only used as a response parameter for APIs such as DescribeInstances, and cannot be used as a request parameter for APIs such as RunInstances.
         */
        diskId?: pulumi.Input<string>;
        /**
         * System disk size; unit: GB; default value: 50 GB.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * The type of system disk. Default value: the type of hard disk currently in stock.
         */
        diskType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionTagSpecification {
        /**
         * The type of resource that the tag is bound to.
         */
        resourceType: pulumi.Input<string>;
        /**
         * List of tags.
         */
        tags: pulumi.Input<pulumi.Input<inputs.Cvm.LaunchTemplateVersionTagSpecificationTag>[]>;
    }

    export interface LaunchTemplateVersionTagSpecificationTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateVersionVirtualPrivateCloud {
        /**
         * Whether to use a CVM instance as a public gateway. The public gateway is only available when the instance has a public IP and resides in a VPC.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * Number of IPv6 addresses randomly generated for the ENI.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of VPC subnet IPs. You can use this parameter when creating instances or modifying VPC attributes of instances. Currently you can specify multiple IPs in one subnet only when creating multiple instances at the same time.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC subnet ID in the format subnet-xxx, if you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID in the format of vpc-xxx, if you specify DEFAULT for both VpcId and SubnetId when creating an instance, the default VPC will be used.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface LaunchTemplateVirtualPrivateCloud {
        /**
         * Is it used as a Public network gateway, TRUE or FALSE.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * The number of ipv6 addresses for Elastic Network Interface.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * The address of private ip.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The id of subnet.
         */
        subnetId: pulumi.Input<string>;
        /**
         * The id of VPC.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ModifyInstanceDiskTypeDataDisk {
        /**
         * ID of the dedicated cluster to which the instance belongs.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * Whether to terminate the data disk when its CVM is terminated. Valid values:
         * - TRUE: terminate the data disk when its CVM is terminated. This value only supports pay-as-you-go cloud disks billed on an hourly basis.
         * - FALSE: retain the data disk when its CVM is terminated.
         * Default value: TRUE.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Data disk ID. Note that it's not available for LOCAL_BASIC and LOCAL_SSD disks.
         */
        diskId?: pulumi.Input<string>;
        /**
         * Data disk size (in GB). The minimum adjustment increment is 10 GB. The value range varies by data disk type. The default value is 0, indicating that no data disk is purchased. For more information, see the product documentation.
         */
        diskSize: pulumi.Input<number>;
        /**
         * Data disk type. Valid values:
         * - LOCAL_BASIC: local hard disk;
         * - LOCAL_SSD: local SSD hard disk;
         * - LOCAL_NVME: local NVME hard disk, which is strongly related to InstanceType and cannot be specified;
         * - LOCAL_PRO: local HDD hard disk, which is strongly related to InstanceType and cannot be specified;
         * - CLOUD_BASIC: ordinary cloud disk;
         * - CLOUD_PREMIUM: high-performance cloud disk;
         * - CLOUD_SSD:SSD cloud disk;
         * - CLOUD_HSSD: enhanced SSD cloud disk;
         * - CLOUD_TSSD: extremely fast SSD cloud disk;
         * - CLOUD_BSSD: general-purpose SSD cloud disk;
         * Default value: LOCAL_BASIC.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specifies whether the data disk is encrypted. Valid values:
         * - TRUE: encrypted
         * - FALSE: not encrypted
         * Default value: FALSE.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * ID of the custom CMK in the format of UUID or “kms-abcd1234”. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID. The size of the selected data disk snapshot must be smaller than that of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Cloud disk performance, in MB/s.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface ModifyInstanceDiskTypeSystemDisk {
        /**
         * ID of the dedicated cluster to which the instance belongs.
         */
        cdcId?: pulumi.Input<string>;
        /**
         * System disk ID. System disks whose type is LOCAL_BASIC or LOCAL_SSD do not have an ID and do not support this parameter.
         */
        diskId?: pulumi.Input<string>;
        /**
         * System disk size; unit: GB; default value: 50 GB.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * System disk type. Valid values:- LOCAL_BASIC: local disk
         * - LOCAL_SSD: local SSD disk
         * - CLOUD_BASIC: ordinary cloud disk
         * - CLOUD_SSD: SSD cloud disk
         * - CLOUD_PREMIUM: Premium cloud storage
         * - CLOUD_BSSD: Balanced SSD
         * The disk currently in stock will be used by default.
         */
        diskType?: pulumi.Input<string>;
    }

    export interface RenewHostHostChargePrepaid {
        /**
         * The duration of purchasing an instance, unit: month. Value range: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
         */
        period: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values:&lt;br&gt;&lt;li&gt;NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically&lt;br&gt;&lt;li&gt;NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically&lt;br&gt;&lt;li&gt;DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically&lt;br&gt;&lt;br&gt;Default value: NOTIFY_AND_AUTO_RENEW。If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface RenewInstanceInstanceChargePrepaid {
        /**
         * Subscription period; unit: month; valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60. Note: This field may return null, indicating that no valid value is found.
         */
        period: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values:
         */
        renewFlag?: pulumi.Input<string>;
    }
}

export namespace Cwp {
    export interface GetMachinesSimpleFilter {
        /**
         * exact match. true or false.
         */
        exactMatch?: boolean;
        /**
         * Only supported Keywords, Version and TagId.
         */
        name: string;
        /**
         * If `name` is `Keywords`: enter keyword query; If `name` is `Version`: enter PRO_VERSION: Professional Edition | BASIC_VERSION: Basic | Flagship: Flagship | ProtectedMachines: Professional+Flagship | UnFlagship: Non Flagship | PRO_POST_PAY: Professional Edition Pay by Volume | PRO_PRE_PAY: Professional Edition Monthly Package query; If `name` is `TagId`: enter tag ID query.
         */
        values: string[];
    }

    export interface GetMachinesSimpleFilterArgs {
        /**
         * exact match. true or false.
         */
        exactMatch?: pulumi.Input<boolean>;
        /**
         * Only supported Keywords, Version and TagId.
         */
        name: pulumi.Input<string>;
        /**
         * If `name` is `Keywords`: enter keyword query; If `name` is `Version`: enter PRO_VERSION: Professional Edition | BASIC_VERSION: Basic | Flagship: Flagship | ProtectedMachines: Professional+Flagship | UnFlagship: Non Flagship | PRO_POST_PAY: Professional Edition Pay by Volume | PRO_PRE_PAY: Professional Edition Monthly Package query; If `name` is `TagId`: enter tag ID query.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Cynosdb {
    export interface AccountPrivilegesDatabasePrivilege {
        /**
         * Database.
         */
        db: pulumi.Input<string>;
        /**
         * Database privileges.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesTablePrivilege {
        /**
         * Database name.
         */
        db: pulumi.Input<string>;
        /**
         * Table privileges.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
    }

    export interface AuditLogFileFilter {
        /**
         * Affects the number of rows. Indicates that the audit log whose number of affected rows is greater than this value is filtered.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * The name of database.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client host.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of audit policy.
         */
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Return the number of rows.
         */
        sentRows?: pulumi.Input<number>;
        /**
         * SQL statement. Support fuzzy matching.
         */
        sql?: pulumi.Input<string>;
        /**
         * SQL type. currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlType?: pulumi.Input<string>;
        /**
         * SQL type. Supports simultaneous query of multiple types. currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. Support passing multiple sql statements.
         */
        sqls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of table.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of thread.
         */
        threadIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterDatabasesUserHostPrivilege {
        /**
         * .
         */
        dbHost: pulumi.Input<string>;
        /**
         * .
         */
        dbPrivilege: pulumi.Input<string>;
        /**
         * Authorized Users.
         */
        dbUserName: pulumi.Input<string>;
    }

    export interface ClusterParamItem {
        /**
         * Param expected value to set.
         */
        currentValue: pulumi.Input<string>;
        /**
         * Name of param, e.g. `characterSetServer`.
         */
        name: pulumi.Input<string>;
        /**
         * Param old value, indicates the value which already set, this value is required when modifying current_value.
         */
        oldValue?: pulumi.Input<string>;
    }

    export interface ClusterRoGroupAddr {
        /**
         * IP address for read-write connection.
         */
        ip?: pulumi.Input<string>;
        /**
         * Port of CynosDB cluster.
         */
        port?: pulumi.Input<number>;
    }

    export interface ClusterRoGroupInstance {
        /**
         * ID of instance.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Name of instance.
         */
        instanceName?: pulumi.Input<string>;
    }

    export interface ClusterRwGroupAddr {
        /**
         * IP address for read-write connection.
         */
        ip?: pulumi.Input<string>;
        /**
         * Port of CynosDB cluster.
         */
        port?: pulumi.Input<number>;
    }

    export interface ClusterRwGroupInstance {
        /**
         * ID of instance.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Name of instance.
         */
        instanceName?: pulumi.Input<string>;
    }

    export interface ExportInstanceErrorLogsErrorLogItemExport {
        /**
         * log content.
         */
        content?: pulumi.Input<string>;
        /**
         * Log level, optional values note, warning, error.
         */
        level?: pulumi.Input<string>;
        /**
         * time.
         */
        timestamp?: pulumi.Input<string>;
    }

    export interface GetAccountAllGrantPrivilegesAccount {
        /**
         * Account.
         */
        accountName: string;
        /**
         * Host, default `%`.
         */
        host?: string;
    }

    export interface GetAccountAllGrantPrivilegesAccountArgs {
        /**
         * Account.
         */
        accountName: pulumi.Input<string>;
        /**
         * Host, default `%`.
         */
        host?: pulumi.Input<string>;
    }

    export interface GetAuditLogsFilter {
        /**
         * Affects the number of rows. Indicates that filtering affects audit logs with rows greater than this value.
         */
        affectRows?: number;
        /**
         * Database name.
         */
        dbNames?: string[];
        /**
         * Execution time. Unit: ms. Indicates audit logs with a filter execution time greater than this value.
         */
        execTime?: number;
        /**
         * Client address.
         */
        hosts?: string[];
        /**
         * Audit policy name.
         */
        policyNames?: string[];
        /**
         * Returns the number of rows.
         */
        sentRows?: number;
        /**
         * SQL statement. Supports fuzzy matching.
         */
        sql?: string;
        /**
         * SQL type. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlType?: string;
        /**
         * SQL type. Supports simultaneous querying of multiple types. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: string[];
        /**
         * SQL statement. Supports passing multiple SQL statements.
         */
        sqls?: string[];
        /**
         * Table name.
         */
        tableNames?: string[];
        /**
         * Thread ID.
         */
        threadIds?: string[];
        /**
         * User name.
         */
        users?: string[];
    }

    export interface GetAuditLogsFilterArgs {
        /**
         * Affects the number of rows. Indicates that filtering affects audit logs with rows greater than this value.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * Database name.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. Unit: ms. Indicates audit logs with a filter execution time greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client address.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Audit policy name.
         */
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Returns the number of rows.
         */
        sentRows?: pulumi.Input<number>;
        /**
         * SQL statement. Supports fuzzy matching.
         */
        sql?: pulumi.Input<string>;
        /**
         * SQL type. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlType?: pulumi.Input<string>;
        /**
         * SQL type. Supports simultaneous querying of multiple types. Currently supported: SELECT, Insert, UPDATE, DELETE, CREATE, DROP, ALT, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. Supports passing multiple SQL statements.
         */
        sqls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Thread ID.
         */
        threadIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetProxyNodeFilter {
        /**
         * Exact match or not.
         */
        exactMatch?: boolean;
        /**
         * Search Fields. Supported: Status, ProxyNodeId, ClusterId.
         */
        name?: string;
        /**
         * Search String.
         */
        names: string[];
        /**
         * Operator.
         */
        operator?: string;
        /**
         * Search String.
         */
        values: string[];
    }

    export interface GetProxyNodeFilterArgs {
        /**
         * Exact match or not.
         */
        exactMatch?: pulumi.Input<boolean>;
        /**
         * Search Fields. Supported: Status, ProxyNodeId, ClusterId.
         */
        name?: pulumi.Input<string>;
        /**
         * Search String.
         */
        names: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Operator.
         */
        operator?: pulumi.Input<string>;
        /**
         * Search String.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceParamInstanceParamList {
        /**
         * Current value of parameter.
         */
        currentValue: pulumi.Input<string>;
        /**
         * Parameter Name.
         */
        paramName: pulumi.Input<string>;
    }

    export interface ParamTemplateParamList {
        /**
         * Current value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Parameter Name.
         */
        paramName?: pulumi.Input<string>;
    }

    export interface ProxyEndPointInstanceWeight {
        /**
         * Instance Id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance Weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface ProxyProxyZone {
        /**
         * Number of proxy nodes.
         */
        proxyNodeCount?: pulumi.Input<number>;
        /**
         * Proxy node availability zone.
         */
        proxyNodeZone?: pulumi.Input<string>;
    }

    export interface ProxyRoInstance {
        /**
         * instance id.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * weight.
         */
        weight?: pulumi.Input<number>;
    }

    export interface RollBackClusterRollbackDatabase {
        /**
         * New database name.
         */
        newDatabase: pulumi.Input<string>;
        /**
         * Old database name.
         */
        oldDatabase: pulumi.Input<string>;
    }

    export interface RollBackClusterRollbackTable {
        /**
         * New database name.
         */
        database: pulumi.Input<string>;
        /**
         * Tables.
         */
        tables: pulumi.Input<pulumi.Input<inputs.Cynosdb.RollBackClusterRollbackTableTable>[]>;
    }

    export interface RollBackClusterRollbackTableTable {
        /**
         * New table name.
         */
        newTable: pulumi.Input<string>;
        /**
         * Old table name.
         */
        oldTable: pulumi.Input<string>;
    }
}

export namespace Dayu {
    export interface CcHttpPolicyRuleList {
        /**
         * Operator of the rule. Valid values: `include`, `notInclude`, `equal`.
         */
        operator?: pulumi.Input<string>;
        /**
         * Key of the rule. Valid values: `host`, `cgi`, `ua`, `referer`.
         */
        skey?: pulumi.Input<string>;
        /**
         * Rule value, then length should be less than 31 bytes.
         */
        value?: pulumi.Input<string>;
    }

    export interface CcHttpsPolicyRuleList {
        /**
         * Operator of the rule. Valid values are `include` and `equal`.
         */
        operator: pulumi.Input<string>;
        /**
         * Key of the rule. Valid values are `cgi`, `ua` and `referer`.
         */
        skey: pulumi.Input<string>;
        /**
         * Rule value, then length should be less than 31 bytes.
         */
        value: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcBlackWhiteIp {
        /**
         * Blacklist and whitelist IP addresses.
         */
        blackWhiteIp: pulumi.Input<string>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Modify time.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * Protocol.
         */
        protocol: pulumi.Input<string>;
        /**
         * IP type, value [black(blacklist IP), white (whitelist IP)].
         */
        type: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcGeoIpPolicy {
        /**
         * User action, drop or arg.
         */
        action: pulumi.Input<string>;
        /**
         * The list of region IDs that the user selects to block.
         */
        areaLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Modify time.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * Protocol, preferably HTTP, HTTPS.
         */
        protocol: pulumi.Input<string>;
        /**
         * Regional types, divided into china, oversea and customized.
         */
        regionType: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionPolicy {
        /**
         * Domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Ip address.
         */
        ip: pulumi.Input<string>;
        /**
         * Policy mode (discard or captcha).
         */
        policyAction: pulumi.Input<string>;
        /**
         * Policy Id.
         */
        policyId?: pulumi.Input<string>;
        /**
         * A list of policies.
         */
        policys: pulumi.Input<pulumi.Input<inputs.Dayu.CcPolicyV2CcPrecisionPolicyPolicy>[]>;
        /**
         * Protocol.
         */
        protocol: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionPolicyPolicy {
        /**
         * Configuration item types, currently only support value.
         */
        fieldName: pulumi.Input<string>;
        /**
         * Configuration fields with the desirable values cgi, ua, cookie, referer, accept, srcip.
         */
        fieldType: pulumi.Input<string>;
        /**
         * Configure the value.
         */
        value: pulumi.Input<string>;
        /**
         * Configure the item-value comparison mode, which can be taken as the value of evaluate, not_equal, include.
         */
        valueOperator: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionReqLimit {
        /**
         * Domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Instance id.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Ip address.
         */
        ip?: pulumi.Input<string>;
        /**
         * Protection rating, the optional value of default means default policy, loose means loose, and strict means strict.
         */
        level: pulumi.Input<string>;
        /**
         * The CC Frequency Limit Policy Item field.
         */
        policys: pulumi.Input<pulumi.Input<inputs.Dayu.CcPolicyV2CcPrecisionReqLimitPolicy>[]>;
        /**
         * Protocol, preferably HTTP, HTTPS.
         */
        protocol: pulumi.Input<string>;
    }

    export interface CcPolicyV2CcPrecisionReqLimitPolicy {
        /**
         * The frequency limit policy mode, the optional value of arg indicates the verification code, and drop indicates the discard.
         */
        action: pulumi.Input<string>;
        /**
         * Cookies, one of the three policy entries can only be filled in.
         */
        cookie?: pulumi.Input<string>;
        /**
         * The duration of the frequency limit policy can be taken from 1 to 86400 per second.
         */
        executeDuration: pulumi.Input<number>;
        /**
         * The policy item is compared, and the optional value include indicates inclusion, and equal means equal.
         */
        mode: pulumi.Input<string>;
        /**
         * Statistical period, take values 1, 10, 30, 60, in seconds.
         */
        period: pulumi.Input<number>;
        /**
         * The number of requests, the value is 1 to 20000.
         */
        requestNum: pulumi.Input<number>;
        /**
         * Uri, one of the three policy entries can only be filled in.
         */
        uri?: pulumi.Input<string>;
        /**
         * User-Agent, only one of the three policy entries can be filled in.
         */
        userAgent?: pulumi.Input<string>;
    }

    export interface CcPolicyV2Threshold {
        /**
         * domain.
         */
        domain: pulumi.Input<string>;
        /**
         * Cleaning threshold, -1 indicates that the `default` mode is turned on.
         */
        threshold: pulumi.Input<number>;
    }

    export interface DdosIpAttachmentV2BoundIpList {
        /**
         * Category of product that can be bound. Valid values: public (CVM and CLB), bm (BM), eni (ENI), vpngw (VPN gateway), natgw (NAT gateway), waf (WAF), fpc (financial products), gaap (GAAP), and other (hosted IP). This field is required when you perform binding.
         */
        bizType?: pulumi.Input<string>;
        /**
         * Sub-product category. Valid values: cvm (CVM), lb (Load balancer), eni (ENI), vpngw (VPN gateway), natgw (NAT gateway), waf (WAF), fpc (financial products), gaap (GAAP), eip (BM EIP) and other (managed IP). This field is required when you perform binding.
         */
        deviceType?: pulumi.Input<string>;
        /**
         * Anti-DDoS instance ID of the IP. This field is required only when the instance is bound to an IP. For example, this field InstanceId will be eni-* if the instance ID is bound to an ENI IP; none if there is no instance to bind to a managed IP.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * IP address.
         */
        ip: pulumi.Input<string>;
    }

    export interface DdosPolicyDropOption {
        /**
         * The number of new connections based on destination IP that trigger suppression of connections. Valid value ranges: (0~4294967295).
         */
        badConnThreshold: pulumi.Input<number>;
        /**
         * Indicate whether to check null connection or not.
         */
        checkSyncConn: pulumi.Input<boolean>;
        /**
         * Connection timeout of abnormal connection check. Valid value ranges: (0~65535).
         */
        connTimeout: pulumi.Input<number>;
        /**
         * The limit of concurrent connections based on destination IP. Valid value ranges: (0~4294967295).
         */
        dConnLimit: pulumi.Input<number>;
        /**
         * The limit of new connections based on destination IP. Valid value ranges: (0~4294967295).
         */
        dNewLimit: pulumi.Input<number>;
        /**
         * Indicate whether to drop abroad traffic or not.
         */
        dropAbroad: pulumi.Input<boolean>;
        /**
         * Indicate whether to drop ICMP protocol or not.
         */
        dropIcmp: pulumi.Input<boolean>;
        /**
         * Indicate whether to drop other protocols(exclude TCP/UDP/ICMP) or not.
         */
        dropOther: pulumi.Input<boolean>;
        /**
         * Indicate whether to drop TCP protocol or not.
         */
        dropTcp: pulumi.Input<boolean>;
        /**
         * Indicate to drop UDP protocol or not.
         */
        dropUdp: pulumi.Input<boolean>;
        /**
         * The limit of ICMP traffic rate. Valid value ranges: (0~4294967295)(Mbps).
         */
        icmpMbpsLimit: pulumi.Input<number>;
        /**
         * Indicate to enable null connection or not.
         */
        nullConnEnable: pulumi.Input<boolean>;
        /**
         * The limit of other protocols(exclude TCP/UDP/ICMP) traffic rate. Valid value ranges: (0~4294967295)(Mbps).
         */
        otherMbpsLimit: pulumi.Input<number>;
        /**
         * The limit of concurrent connections based on source IP. Valid value ranges: (0~4294967295).
         */
        sConnLimit: pulumi.Input<number>;
        /**
         * The limit of new connections based on source IP. Valid value ranges: (0~4294967295).
         */
        sNewLimit: pulumi.Input<number>;
        /**
         * The limit of syn of abnormal connection check. Valid value ranges: (0~100).
         */
        synLimit: pulumi.Input<number>;
        /**
         * The percentage of syn in ack of abnormal connection check. Valid value ranges: (0~100).
         */
        synRate?: pulumi.Input<number>;
        /**
         * The limit of TCP traffic. Valid value ranges: (0~4294967295)(Mbps).
         */
        tcpMbpsLimit: pulumi.Input<number>;
        /**
         * The limit of UDP traffic rate. Valid value ranges: (0~4294967295)(Mbps).
         */
        udpMbpsLimit: pulumi.Input<number>;
    }

    export interface DdosPolicyPacketFilter {
        /**
         * Action of port to take. Valid values: `drop`, `dropBlack`,`dropRst`,`dropBlackRst`,`transmit`.`drop`(drop the packet), `dropBlack`(drop the packet and black the ip),`dropRst`(drop the packet and disconnect),`dropBlackRst`(drop the packet, black the ip and disconnect),`transmit`(transmit the packet).
         */
        action?: pulumi.Input<string>;
        /**
         * End port of the destination. Valid value ranges: (0~65535). It must be greater than `dStartPort`.
         */
        dEndPort?: pulumi.Input<number>;
        /**
         * Start port of the destination. Valid value ranges: (0~65535).
         */
        dStartPort?: pulumi.Input<number>;
        /**
         * The depth of match. Valid value ranges: (0~1500).
         */
        depth?: pulumi.Input<number>;
        /**
         * Indicate whether to include the key word/regular expression or not.
         */
        isInclude?: pulumi.Input<boolean>;
        /**
         * Indicate whether to check load or not, `beginL5` means to match and `noMatch` means not.
         */
        matchBegin?: pulumi.Input<string>;
        /**
         * The key word or regular expression.
         */
        matchStr?: pulumi.Input<string>;
        /**
         * Match type. Valid values: `sunday` and `pcre`. `sunday` means key word match while `pcre` means regular match.
         */
        matchType?: pulumi.Input<string>;
        /**
         * The offset of match. Valid value ranges: (0~1500).
         */
        offset?: pulumi.Input<number>;
        /**
         * The max length of the packet. Valid value ranges: (0~1500)(Mbps). It must be greater than `pktLengthMin`.
         */
        pktLengthMax?: pulumi.Input<number>;
        /**
         * The minimum length of the packet. Valid value ranges: (0~1500)(Mbps).
         */
        pktLengthMin?: pulumi.Input<number>;
        /**
         * Protocol. Valid values: `tcp`, `udp`, `icmp`, `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * End port of the source. Valid value ranges: (0~65535). It must be greater than `sStartPort`.
         */
        sEndPort?: pulumi.Input<number>;
        /**
         * Start port of the source. Valid value ranges: (0~65535).
         */
        sStartPort?: pulumi.Input<number>;
    }

    export interface DdosPolicyPortFilter {
        /**
         * Action of port to take. Valid values: `drop`, `transmit`.
         */
        action?: pulumi.Input<string>;
        /**
         * End port. Valid value ranges: (0~65535). It must be greater than `startPort`.
         */
        endPort?: pulumi.Input<number>;
        /**
         * The type of forbidden port. Valid values: `0`, `1`, `2`. `0` for destination ports make effect, `1` for source ports make effect. `2` for both destination and source ports.
         */
        kind?: pulumi.Input<number>;
        /**
         * Protocol. Valid values are `tcp`, `udp`, `icmp`, `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Start port. Valid value ranges: (0~65535).
         */
        startPort?: pulumi.Input<number>;
    }

    export interface DdosPolicyV2Acl {
        /**
         * Action, optional values: drop, transmit, forward.
         */
        action: pulumi.Input<string>;
        /**
         * The destination port ends, and the value range is 0~65535.
         */
        dPortEnd: pulumi.Input<number>;
        /**
         * The destination port starts, and the value range is 0~65535.
         */
        dPortStart: pulumi.Input<number>;
        /**
         * Protocol type, desirable values tcp, udp, all.
         */
        forwardProtocol: pulumi.Input<string>;
        /**
         * Policy priority, the lower the number, the higher the level, the higher the rule matches, taking a value of 1-1000.Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        priority: pulumi.Input<number>;
        /**
         * The source port ends, and the acceptable value ranges from 0 to 65535.
         */
        sPortEnd: pulumi.Input<number>;
        /**
         * The source port starts, and the value range is 0~65535.
         */
        sPortStart: pulumi.Input<number>;
    }

    export interface DdosPolicyV2BlackWhiteIp {
        /**
         * Ip of resource instance.
         */
        ip: pulumi.Input<string>;
        /**
         * IP type, value [`black`(blacklist IP), `white` (whitelist IP)].
         */
        ipType: pulumi.Input<string>;
    }

    export interface DdosPolicyV2DdosConnectLimit {
        /**
         * Based on connection suppression trigger threshold, value range [0,4294967295].
         */
        badConnThreshold: pulumi.Input<number>;
        /**
         * Abnormal connection detection condition, connection timeout, value range [0,65535].
         */
        connTimeout: pulumi.Input<number>;
        /**
         * Concurrent connection control based on destination IP+ destination port.
         */
        dstConnLimit: pulumi.Input<number>;
        /**
         * Limit on the number of news per second based on the destination IP.
         */
        dstNewLimit: pulumi.Input<number>;
        /**
         * Abnormal connection detection conditions, empty connection guard switch, value range[0,1].
         */
        nullConnEnable: pulumi.Input<number>;
        /**
         * Concurrent connection control based on source IP + destination IP.
         */
        sdConnLimit: pulumi.Input<number>;
        /**
         * The limit on the number of news per second based on source IP + destination IP.
         */
        sdNewLimit: pulumi.Input<number>;
        /**
         * Anomaly connection detection condition, syn threshold, value range [0,100].
         */
        synLimit: pulumi.Input<number>;
        /**
         * Anomalous connection detection condition, percentage of syn ack, value range [0,100].
         */
        synRate: pulumi.Input<number>;
    }

    export interface DdosPolicyV2DdosGeoIpBlockConfig {
        /**
         * Block action, take the value [`drop`, `trans`].
         */
        action: pulumi.Input<string>;
        /**
         * When the RegionType is customized, the AreaList must be filled in, and a maximum of 128 must be filled in.
         */
        areaLists: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Zone type, value [oversea (overseas),china (domestic),customized (custom region)].
         */
        regionType: pulumi.Input<string>;
    }

    export interface DdosPolicyV2DdosSpeedLimitConfig {
        /**
         * Bandwidth bps.
         */
        bandwidth: pulumi.Input<number>;
        /**
         * List of port ranges, up to 8, multiple; Separated, the range is represented with -; this port range must be filled in; fill in the style 1:0-65535, style 2:80; 443; 1000-2000.
         */
        dstPortList: pulumi.Input<string>;
        /**
         * Speed limit mode, take the value [1 (speed limit based on source IP),2 (speed limit based on destination port)].
         */
        mode: pulumi.Input<number>;
        /**
         * Packet rate pps.
         */
        packetRate: pulumi.Input<number>;
        /**
         * IP protocol numbers, take the value[ ALL (all protocols),TCP (tcp protocol),UDP (udp protocol),SMP (smp protocol),1; 2-100 (custom protocol number range, up to 8)].
         */
        protocolList: pulumi.Input<string>;
    }

    export interface DdosPolicyV2PacketFilter {
        /**
         * Action, take the value [drop,transmit,drop_black (discard and black out),drop_rst (Interception),drop_black_rst (intercept and block),forward].
         */
        action: pulumi.Input<string>;
        /**
         * The end destination port, take the value 1~65535, which must be greater than or equal to the starting destination port.
         */
        dPortEnd: pulumi.Input<number>;
        /**
         * From the destination port, take the value 0~65535.
         */
        dPortStart: pulumi.Input<number>;
        /**
         * Detection depth from the detection position, value [0,1500].
         */
        depth: pulumi.Input<number>;
        /**
         * Second detection depth starting from the second detection position, value [0,1500].
         */
        depth2: pulumi.Input<number>;
        /**
         * Whether to include the detected value, take the value [0 (included),1 (not included)].
         */
        isNot: pulumi.Input<number>;
        /**
         * Whether the second detection contains the detected value, the value [0 (included),1 (not included)].
         */
        isNot2: pulumi.Input<number>;
        /**
         * Detect position, take the value [beginL3 (IP header),begin_l4 (TCP/UDP header),begin_l5 (T load), noMatch (mismatch)].
         */
        matchBegin: pulumi.Input<string>;
        /**
         * The second detection position. take the value [beginL3 (IP header),begin_l4 (TCP/UDP header),begin_l5 (T load), noMatch (mismatch)].
         */
        matchBegin2: pulumi.Input<string>;
        /**
         * When there is a second detection condition, the and/or relationship with the first detection condition, takes the value [And (and relationship),none (fill in this value when there is no second detection condition)].
         */
        matchLogic: pulumi.Input<string>;
        /**
         * Detection type, value [sunday (keyword),pcre (regular expression)].
         */
        matchType: pulumi.Input<string>;
        /**
         * The second type of detection, takes the value [sunday (keyword),pcre (regular expression)].
         */
        matchType2: pulumi.Input<string>;
        /**
         * Offset from detection position, value range [0, Depth].
         */
        offset: pulumi.Input<number>;
        /**
         * Offset from the second detection position, value range [0,Depth2].
         */
        offset2: pulumi.Input<number>;
        /**
         * The maximum message length, taken from 1 to 1500, must be greater than or equal to the minimum message length.
         */
        pktlenMax: pulumi.Input<number>;
        /**
         * Minimum message length, 1-1500.
         */
        pktlenMin: pulumi.Input<number>;
        /**
         * Protocol, value [tcp udp icmp all].
         */
        protocol: pulumi.Input<string>;
        /**
         * End source port, take the value 1~65535, must be greater than or equal to the starting source port.
         */
        sPortEnd: pulumi.Input<number>;
        /**
         * Start the source port, take the value 0~65535.
         */
        sPortStart: pulumi.Input<number>;
        /**
         * Detect values, key strings or regular expressions, take the value [When the detection type is sunday, please fill in the string or hexadecimal bytecode, for example 13233 corresponds to the hexadecimal bytecode of the string `123`;When the detection type is pcre, please fill in the regular expression string;].
         */
        str: pulumi.Input<string>;
        /**
         * The second detection value, the key string or regular expression, takes the value [When the detection type is sunday, please fill in the string or hexadecimal bytecode, for example 13233 corresponds to the hexadecimal bytecode of the string `123`;When the detection type is pcre, please fill in the regular expression string;].
         */
        str2: pulumi.Input<string>;
    }

    export interface DdosPolicyV2ProtocolBlockConfig {
        /**
         * ICMP block, value [0 (block off), 1 (block on)].
         */
        dropIcmp: pulumi.Input<number>;
        /**
         * Other block, value [0 (block off), 1 (block on)].
         */
        dropOther: pulumi.Input<number>;
        /**
         * TCP block, value [0 (block off), 1 (block on)].
         */
        dropTcp: pulumi.Input<number>;
        /**
         * UDP block, value [0 (block off), 1 (block on)].
         */
        dropUdp: pulumi.Input<number>;
    }

    export interface DdosPolicyV2WaterPrintConfig {
        /**
         * List of forwarding listeners to which the watermark belongs.
         */
        listeners: pulumi.Input<pulumi.Input<inputs.Dayu.DdosPolicyV2WaterPrintConfigListener>[]>;
        /**
         * Watermark offset, value range: [0-100].
         */
        offset: pulumi.Input<number>;
        /**
         * Whether it is enabled, value [0 (manual open), 1 (immediate operation)].
         */
        openStatus: pulumi.Input<number>;
        /**
         * Watermark check mode, value [`checkall`(normal mode), `shortfpcheckall`(simplified mode)].
         */
        verify: pulumi.Input<string>;
    }

    export interface DdosPolicyV2WaterPrintConfigListener {
        /**
         * Forwarding protocol, value [TCP, UDP].
         */
        forwardProtocol: pulumi.Input<string>;
        /**
         * Lower limit of forwarding listening port. Values: [1-65535].
         */
        frontendPort: pulumi.Input<number>;
        /**
         * Upper limit of forwarding listening port. Values: [1-65535].
         */
        frontendPortEnd: pulumi.Input<number>;
    }

    export interface DdosPolicyWatermarkFilter {
        /**
         * Indicate whether to auto-remove the watermark or not.
         */
        autoRemove?: pulumi.Input<boolean>;
        /**
         * The offset of watermark. Valid value ranges: (0~1500).
         */
        offset?: pulumi.Input<number>;
        /**
         * Indicate whether to open watermark or not. It muse be set `true` when any field of watermark was set.
         */
        openSwitch?: pulumi.Input<boolean>;
        /**
         * Port range of TCP, the format is like `2000-3000`.
         */
        tcpPortLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Port range of TCP, the format is like `2000-3000`.
         */
        udpPortLists?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DdosPolicyWatermarkKey {
        /**
         * Content of the watermark.
         */
        content?: pulumi.Input<string>;
        /**
         * Create time of the DDoS policy.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Id of the watermark.
         */
        id?: pulumi.Input<string>;
        /**
         * Indicate whether to open watermark or not. It muse be set `true` when any field of watermark was set.
         */
        openSwitch?: pulumi.Input<boolean>;
    }

    export interface L4RuleSourceList {
        /**
         * Source IP or domain, valid format of ip is like `1.1.1.1` and valid format of host source is like `abc.com`.
         */
        source: pulumi.Input<string>;
        /**
         * Weight of the source, the valid value ranges from 0 to 100.
         */
        weight: pulumi.Input<number>;
    }

    export interface L4RuleV2Rules {
        /**
         * session hold switch.
         */
        keepEnable: pulumi.Input<boolean>;
        /**
         * The keeptime of the layer 4 rule.
         */
        keeptime: pulumi.Input<number>;
        /**
         * LB type of the rule, `1` for weight cycling and `2` for IP hash.
         */
        lbType: pulumi.Input<number>;
        /**
         * Protocol of the rule.
         */
        protocol: pulumi.Input<string>;
        /**
         * Corresponding regional information.
         */
        region: pulumi.Input<number>;
        /**
         * Remove the watermark state.
         */
        removeSwitch: pulumi.Input<boolean>;
        /**
         * Name of the rule.
         */
        ruleName: pulumi.Input<string>;
        /**
         * Source list of the rule.
         */
        sourceLists: pulumi.Input<pulumi.Input<inputs.Dayu.L4RuleV2RulesSourceList>[]>;
        /**
         * The source port of the layer 4 rule.
         */
        sourcePort: pulumi.Input<number>;
        /**
         * Source type, `1` for source of host, `2` for source of IP.
         */
        sourceType: pulumi.Input<number>;
        /**
         * The virtual port of the layer 4 rule.
         */
        virtualPort: pulumi.Input<number>;
    }

    export interface L4RuleV2RulesSourceList {
        /**
         * Source IP or domain.
         */
        source: pulumi.Input<string>;
        /**
         * Weight of the source.
         */
        weight: pulumi.Input<number>;
    }

    export interface L7RuleV2Rule {
        /**
         * HTTPS protocol CC protection status, value [0 (off), 1 (on)], defaule is 0.
         */
        ccEnable?: pulumi.Input<number>;
        /**
         * The source of the certificate must be filled in when the forwarding protocol is https, the value [2 (Tencent Cloud Hosting Certificate)], and 0 when the forwarding protocol is http.
         */
        certType?: pulumi.Input<number>;
        /**
         * Domain of the rule.
         */
        domain: pulumi.Input<string>;
        /**
         * Whether to enable the Https protocol to use Http back-to-source, take the value [0 (off), 1 (on)], do not fill in the default is off, defaule is 0.
         */
        httpsToHttpEnable?: pulumi.Input<number>;
        /**
         * session hold switch.
         */
        keepEnable: pulumi.Input<number>;
        /**
         * The keeptime of the layer 4 rule.
         */
        keeptime: pulumi.Input<number>;
        /**
         * LB type of the rule, `1` for weight cycling and `2` for IP hash.
         */
        lbType: pulumi.Input<number>;
        /**
         * Protocol of the rule.
         */
        protocol: pulumi.Input<string>;
        sourceLists: pulumi.Input<pulumi.Input<inputs.Dayu.L7RuleV2RuleSourceList>[]>;
        /**
         * Source type, `1` for source of host, `2` for source of IP.
         */
        sourceType: pulumi.Input<number>;
        /**
         * When the certificate source is a Tencent Cloud managed certificate, this field must be filled in with the managed certificate ID.
         */
        sslId?: pulumi.Input<string>;
    }

    export interface L7RuleV2RuleSourceList {
        /**
         * Source IP or domain.
         */
        source: pulumi.Input<string>;
        /**
         * Weight of the source.
         */
        weight: pulumi.Input<number>;
    }
}

export namespace Dbbrain {
    export interface GetSlowLogTopSqlsSchemaList {
        /**
         * DB name.
         */
        schema: string;
    }

    export interface GetSlowLogTopSqlsSchemaListArgs {
        /**
         * DB name.
         */
        schema: pulumi.Input<string>;
    }

    export interface ModifyDiagDbInstanceOperationInstanceConfs {
        /**
         * Database inspection switch, Yes/No.
         */
        dailyInspection?: pulumi.Input<string>;
        /**
         * Instance overview switch, Yes/No.
         */
        overviewDisplay?: pulumi.Input<string>;
    }

    export interface SqlFilterSessionToken {
        /**
         * password.
         */
        password: pulumi.Input<string>;
        /**
         * user name.
         */
        user: pulumi.Input<string>;
    }

    export interface TdsqlAuditLogFilter {
        /**
         * Number of affected rows. Indicates filtering audit logs whose affected rows are greater than this value.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * Database name.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. The unit is: us. It means to filter the audit logs whose execution time is greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client Address.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Return the number of rows. It means to filter the audit log with the number of returned rows greater than this value.
         */
        sentRows?: pulumi.Input<number>;
        /**
         * Username.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Dc {
    export interface GetPublicDirectConnectTunnelRoutesFilter {
        /**
         * Fields to be filtered.
         */
        name: string;
        /**
         * filter value of the field.
         */
        values: string[];
    }

    export interface GetPublicDirectConnectTunnelRoutesFilterArgs {
        /**
         * Fields to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * filter value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Dcdb {
    export interface AccountPrivilegesAccount {
        /**
         * account host.
         */
        host: pulumi.Input<string>;
        /**
         * account name.
         */
        user: pulumi.Input<string>;
    }

    export interface AccountPrivilegesColumnPrivileges {
        /**
         * Database column name.
         */
        column: pulumi.Input<string>;
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Database table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesDatabasePrivileges {
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesTablePrivileges {
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Database table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesViewPrivileges {
        /**
         * The name of database.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Database view name.
         */
        view: pulumi.Input<string>;
    }

    export interface DbInstanceInitParam {
        /**
         * The name of parameter.
         */
        param: pulumi.Input<string>;
        /**
         * The value of parameter.
         */
        value: pulumi.Input<string>;
    }

    export interface DbInstanceResourceTag {
        /**
         * The key of tag.
         */
        tagKey: pulumi.Input<string>;
        /**
         * The value of tag.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface DbParametersParams {
        /**
         * The name of parameter.
         */
        param: pulumi.Input<string>;
        /**
         * The value of parameter.
         */
        value: pulumi.Input<string>;
    }

    export interface GetUpgradePriceAddShardConfig {
        /**
         * The number of new shards.
         */
        shardCount: number;
        /**
         * Shard memory size in GB.
         */
        shardMemory: number;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: number;
    }

    export interface GetUpgradePriceAddShardConfigArgs {
        /**
         * The number of new shards.
         */
        shardCount: pulumi.Input<number>;
        /**
         * Shard memory size in GB.
         */
        shardMemory: pulumi.Input<number>;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: pulumi.Input<number>;
    }

    export interface GetUpgradePriceExpandShardConfig {
        /**
         * List of shard ID.
         */
        shardInstanceIds: string[];
        /**
         * Shard memory size in GB.
         */
        shardMemory: number;
        /**
         * Shard node count.
         */
        shardNodeCount?: number;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: number;
    }

    export interface GetUpgradePriceExpandShardConfigArgs {
        /**
         * List of shard ID.
         */
        shardInstanceIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Shard memory size in GB.
         */
        shardMemory: pulumi.Input<number>;
        /**
         * Shard node count.
         */
        shardNodeCount?: pulumi.Input<number>;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: pulumi.Input<number>;
    }

    export interface GetUpgradePriceSplitShardConfig {
        /**
         * List of shard ID.
         */
        shardInstanceIds: string[];
        /**
         * Shard memory size in GB.
         */
        shardMemory: number;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: number;
        /**
         * Data split ratio, fixed at 50%.
         */
        splitRate: number;
    }

    export interface GetUpgradePriceSplitShardConfigArgs {
        /**
         * List of shard ID.
         */
        shardInstanceIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Shard memory size in GB.
         */
        shardMemory: pulumi.Input<number>;
        /**
         * Shard storage capacity in GB.
         */
        shardStorage: pulumi.Input<number>;
        /**
         * Data split ratio, fixed at 50%.
         */
        splitRate: pulumi.Input<number>;
    }

    export interface HourdbInstanceResourceTag {
        /**
         * tag key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue: pulumi.Input<string>;
    }
}

export namespace Dcx {
    export interface ExtraConfigBfdInfo {
        /**
         * detect interval.
         */
        interval?: pulumi.Input<number>;
        /**
         * detect times.
         */
        probeFailedTimes?: pulumi.Input<number>;
    }

    export interface ExtraConfigBgpPeer {
        /**
         * user idc BGP Asn.
         */
        asn?: pulumi.Input<number>;
        /**
         * user bgp key.
         */
        authKey?: pulumi.Input<string>;
    }

    export interface ExtraConfigNqaInfo {
        /**
         * detect ip.
         */
        destinationIp?: pulumi.Input<string>;
        /**
         * detect interval.
         */
        interval?: pulumi.Input<number>;
        /**
         * detect times.
         */
        probeFailedTimes?: pulumi.Input<number>;
    }

    export interface ExtraConfigRouteFilterPrefixes {
        /**
         * user network prefixes.
         */
        cidr?: pulumi.Input<string>;
    }

}

export namespace Dlc {
    export interface AddUsersToWorkGroupAttachmentAddInfo {
        /**
         * User id set, matched with CAM side uin.
         */
        userIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Work group id.
         */
        workGroupId: pulumi.Input<number>;
    }

    export interface AttachUserPolicyOperationPolicySet {
        /**
         * For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
         */
        catalog: pulumi.Input<string>;
        /**
         * For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
         */
        column?: pulumi.Input<string>;
        /**
         * The time when the permission was created. Leave the input parameter blank.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
         */
        dataEngine?: pulumi.Input<string>;
        /**
         * Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
         */
        database: pulumi.Input<string>;
        /**
         * For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
         */
        function?: pulumi.Input<string>;
        /**
         * Policy id.
         */
        id?: pulumi.Input<number>;
        /**
         * Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
         */
        mode?: pulumi.Input<string>;
        /**
         * Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
         */
        operation: pulumi.Input<string>;
        /**
         * Operator, do not fill in the input parameters.
         */
        operator?: pulumi.Input<string>;
        /**
         * Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
         */
        policyType?: pulumi.Input<string>;
        /**
         * Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
         */
        reAuth?: pulumi.Input<boolean>;
        /**
         * Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
         */
        source?: pulumi.Input<string>;
        /**
         * The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
         */
        sourceId?: pulumi.Input<number>;
        /**
         * The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
         */
        sourceName?: pulumi.Input<string>;
        /**
         * For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
         */
        table: pulumi.Input<string>;
        /**
         * For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
         */
        view?: pulumi.Input<string>;
    }

    export interface AttachWorkGroupPolicyOperationPolicySet {
        /**
         * For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
         */
        catalog: pulumi.Input<string>;
        /**
         * For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
         */
        column?: pulumi.Input<string>;
        /**
         * The time when the permission was created. Leave the input parameter blank.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
         */
        dataEngine?: pulumi.Input<string>;
        /**
         * Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
         */
        database: pulumi.Input<string>;
        /**
         * For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
         */
        function?: pulumi.Input<string>;
        /**
         * Policy id.
         */
        id?: pulumi.Input<number>;
        /**
         * Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
         */
        mode?: pulumi.Input<string>;
        /**
         * Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
         */
        operation: pulumi.Input<string>;
        /**
         * Operator, do not fill in the input parameters.
         */
        operator?: pulumi.Input<string>;
        /**
         * Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
         */
        policyType?: pulumi.Input<string>;
        /**
         * Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
         */
        reAuth?: pulumi.Input<boolean>;
        /**
         * Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
         */
        source?: pulumi.Input<string>;
        /**
         * The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
         */
        sourceId?: pulumi.Input<number>;
        /**
         * The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
         */
        sourceName?: pulumi.Input<string>;
        /**
         * For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
         */
        table: pulumi.Input<string>;
        /**
         * For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
         */
        view?: pulumi.Input<string>;
    }

    export interface BindWorkGroupsToUserAttachmentAddInfo {
        /**
         * User id, matched with CAM side uin.
         */
        userId: pulumi.Input<string>;
        /**
         * Work group id set.
         */
        workGroupIds: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface DataEngineCrontabResumeSuspendStrategy {
        /**
         * Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
         */
        resumeTime?: pulumi.Input<string>;
        /**
         * Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
         */
        suspendStrategy?: pulumi.Input<number>;
        /**
         * Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
         */
        suspendTime?: pulumi.Input<string>;
    }

    export interface DataEngineDataEngineConfigPair {
        /**
         * Configuration items.
         */
        configItem: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        configValue: pulumi.Input<string>;
    }

    export interface DataEngineSessionResourceTemplate {
        /**
         * Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
         */
        driverSize?: pulumi.Input<string>;
        /**
         * Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
         */
        executorMaxNumbers?: pulumi.Input<number>;
        /**
         * Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
         */
        executorNums?: pulumi.Input<number>;
        /**
         * Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
         */
        executorSize?: pulumi.Input<string>;
    }

    export interface DetachUserPolicyOperationPolicySet {
        /**
         * For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
         */
        catalog: pulumi.Input<string>;
        /**
         * For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
         */
        column?: pulumi.Input<string>;
        /**
         * The time when the permission was created. Leave the input parameter blank.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
         */
        dataEngine?: pulumi.Input<string>;
        /**
         * Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
         */
        database: pulumi.Input<string>;
        /**
         * For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
         */
        function?: pulumi.Input<string>;
        /**
         * Policy id.
         */
        id?: pulumi.Input<number>;
        /**
         * Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
         */
        mode?: pulumi.Input<string>;
        /**
         * Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
         */
        operation: pulumi.Input<string>;
        /**
         * Operator, do not fill in the input parameters.
         */
        operator?: pulumi.Input<string>;
        /**
         * Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
         */
        policyType?: pulumi.Input<string>;
        /**
         * Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
         */
        reAuth?: pulumi.Input<boolean>;
        /**
         * Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
         */
        source?: pulumi.Input<string>;
        /**
         * The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
         */
        sourceId?: pulumi.Input<number>;
        /**
         * The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
         */
        sourceName?: pulumi.Input<string>;
        /**
         * For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
         */
        table: pulumi.Input<string>;
        /**
         * For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
         */
        view?: pulumi.Input<string>;
    }

    export interface DetachWorkGroupPolicyOperationPolicySet {
        /**
         * For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
         */
        catalog: pulumi.Input<string>;
        /**
         * For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
         */
        column?: pulumi.Input<string>;
        /**
         * The time when the permission was created. Leave the input parameter blank.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
         */
        dataEngine?: pulumi.Input<string>;
        /**
         * Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
         */
        database: pulumi.Input<string>;
        /**
         * For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
         */
        function?: pulumi.Input<string>;
        /**
         * Policy id.
         */
        id?: pulumi.Input<number>;
        /**
         * Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
         */
        mode?: pulumi.Input<string>;
        /**
         * Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
         */
        operation: pulumi.Input<string>;
        /**
         * Operator, do not fill in the input parameters.
         */
        operator?: pulumi.Input<string>;
        /**
         * Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
         */
        policyType?: pulumi.Input<string>;
        /**
         * Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
         */
        reAuth?: pulumi.Input<boolean>;
        /**
         * Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
         */
        source?: pulumi.Input<string>;
        /**
         * The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
         */
        sourceId?: pulumi.Input<number>;
        /**
         * The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
         */
        sourceName?: pulumi.Input<string>;
        /**
         * For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
         */
        table: pulumi.Input<string>;
        /**
         * For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
         */
        view?: pulumi.Input<string>;
    }

    export interface GetCheckDataEngineConfigPairsValidityDataEngineConfigPair {
        /**
         * Configuration item.
         */
        configItem: string;
        /**
         * Configuration value.
         */
        configValue: string;
    }

    export interface GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs {
        /**
         * Configuration item.
         */
        configItem: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        configValue: pulumi.Input<string>;
    }

    export interface GetDescribeUserInfoFilter {
        /**
         * Attribute name. If there are multiple Filters, the relationship between Filters is a logical OR (OR) relationship.
         */
        name: string;
        /**
         * Attribute value, if there are multiple Values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: string[];
    }

    export interface GetDescribeUserInfoFilterArgs {
        /**
         * Attribute name. If there are multiple Filters, the relationship between Filters is a logical OR (OR) relationship.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute value, if there are multiple Values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDescribeWorkGroupInfoFilter {
        /**
         * Attribute name. If there are multiple Filters, the relationship between filters is a logical or (OR) relationship.
         */
        name: string;
        /**
         * Attribute value, if there are multiple values in the same filter, the relationship between values under the same filter is a logical or relationship.
         */
        values: string[];
    }

    export interface GetDescribeWorkGroupInfoFilterArgs {
        /**
         * Attribute name. If there are multiple Filters, the relationship between filters is a logical or (OR) relationship.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute value, if there are multiple values in the same filter, the relationship between values under the same filter is a logical or relationship.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface UpdateRowFilterOperationPolicy {
        /**
         * For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
         */
        catalog: pulumi.Input<string>;
        /**
         * For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
         */
        column?: pulumi.Input<string>;
        /**
         * The time when the permission was created. Leave the input parameter blank.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
         */
        dataEngine?: pulumi.Input<string>;
        /**
         * Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
         */
        database: pulumi.Input<string>;
        /**
         * For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
         */
        function?: pulumi.Input<string>;
        /**
         * Policy id.
         */
        id?: pulumi.Input<number>;
        /**
         * Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
         */
        mode?: pulumi.Input<string>;
        /**
         * Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
         */
        operation: pulumi.Input<string>;
        /**
         * Operator, do not fill in the input parameters.
         */
        operator?: pulumi.Input<string>;
        /**
         * Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
         */
        policyType?: pulumi.Input<string>;
        /**
         * Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
         */
        reAuth?: pulumi.Input<boolean>;
        /**
         * Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
         */
        source?: pulumi.Input<string>;
        /**
         * The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
         */
        sourceId?: pulumi.Input<number>;
        /**
         * The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
         */
        sourceName?: pulumi.Input<string>;
        /**
         * For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
         */
        table: pulumi.Input<string>;
        /**
         * For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
         */
        view?: pulumi.Input<string>;
    }

    export interface UserDataEngineConfigDataEngineConfigPair {
        /**
         * Config key.
         */
        configItem: pulumi.Input<string>;
        /**
         * Config value.
         */
        configValue: pulumi.Input<string>;
    }

    export interface UserDataEngineConfigSessionResourceTemplate {
        /**
         * Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
         */
        driverSize?: pulumi.Input<string>;
        /**
         * Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
         */
        executorMaxNumbers?: pulumi.Input<number>;
        /**
         * Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
         */
        executorNums?: pulumi.Input<number>;
        /**
         * Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
         */
        executorSize?: pulumi.Input<string>;
    }
}

export namespace Dnats {
}

export namespace Dnspod {
    export interface GetDomainListTag {
        /**
         * Field to be filtered.
         */
        tagKey: string;
        /**
         * Filter value of the field.
         */
        tagValues: string[];
    }

    export interface GetDomainListTagArgs {
        /**
         * Field to be filtered.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Filter value of the field.
         */
        tagValues: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Domains {
}

export namespace Dts {
    export interface CompareTaskObjects {
        /**
         * object items.
         */
        objectItems?: pulumi.Input<pulumi.Input<inputs.Dts.CompareTaskObjectsObjectItem>[]>;
        /**
         * object mode.
         */
        objectMode: pulumi.Input<string>;
    }

    export interface CompareTaskObjectsObjectItem {
        /**
         * database mode.
         */
        dbMode?: pulumi.Input<string>;
        /**
         * database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * schema name.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * table mode.
         */
        tableMode?: pulumi.Input<string>;
        /**
         * table list.
         */
        tables?: pulumi.Input<pulumi.Input<inputs.Dts.CompareTaskObjectsObjectItemTable>[]>;
        /**
         * view mode.
         */
        viewMode?: pulumi.Input<string>;
        /**
         * view list.
         */
        views?: pulumi.Input<pulumi.Input<inputs.Dts.CompareTaskObjectsObjectItemView>[]>;
    }

    export interface CompareTaskObjectsObjectItemTable {
        /**
         * table name.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface CompareTaskObjectsObjectItemView {
        /**
         * view name.
         */
        viewName?: pulumi.Input<string>;
    }

    export interface GetMigrateJobsTagFilter {
        /**
         * tag key.
         */
        tagKey?: string;
        /**
         * tag value.
         */
        tagValue?: string;
    }

    export interface GetMigrateJobsTagFilterArgs {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface GetSyncJobsTagFilter {
        /**
         * tag key.
         */
        tagKey?: string;
        /**
         * tag value.
         */
        tagValue?: string;
    }

    export interface GetSyncJobsTagFilterArgs {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface MigrateJobDstInfo {
        /**
         * AccessType.
         */
        accessType: pulumi.Input<string>;
        /**
         * DatabaseType.
         */
        databaseType: pulumi.Input<string>;
        /**
         * ExtraAttr.
         */
        extraAttrs?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobDstInfoExtraAttr>[]>;
        /**
         * Info.
         */
        infos: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobDstInfoInfo>[]>;
        /**
         * NodeType.
         */
        nodeType: pulumi.Input<string>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Supplier.
         */
        supplier?: pulumi.Input<string>;
    }

    export interface MigrateJobDstInfoExtraAttr {
        /**
         * Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface MigrateJobDstInfoInfo {
        /**
         * Account.
         */
        account?: pulumi.Input<string>;
        /**
         * AccountMode.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * AccountRole.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * CcnGwId.
         */
        ccnGwId?: pulumi.Input<string>;
        /**
         * CvmInstanceId.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * DbKernel.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * EngineVersion.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Host.
         */
        host?: pulumi.Input<string>;
        /**
         * InstanceId.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Port.
         */
        port?: pulumi.Input<number>;
        /**
         * Role.
         */
        role?: pulumi.Input<string>;
        /**
         * SubnetId.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * TmpSecretId.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * TmpSecretKey.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * TmpToken.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * UniqDcgId.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * UniqVpnGwId.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * User.
         */
        user?: pulumi.Input<string>;
        /**
         * VpcId.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOption {
        /**
         * Consistency.
         */
        consistency?: pulumi.Input<inputs.Dts.MigrateJobMigrateOptionConsistency>;
        /**
         * Migration object option, you need to tell the migration service which library table objects to migrate.
         */
        databaseTable: pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTable>;
        /**
         * ExtraAttr.
         */
        extraAttrs?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionExtraAttr>[]>;
        /**
         * IsDstReadOnly.
         */
        isDstReadOnly?: pulumi.Input<boolean>;
        /**
         * IsMigrateAccount.
         */
        isMigrateAccount?: pulumi.Input<boolean>;
        /**
         * IsOverrideRoot.
         */
        isOverrideRoot?: pulumi.Input<boolean>;
        /**
         * MigrateType.
         */
        migrateType?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionConsistency {
        /**
         * ConsistencyOption.
         */
        mode?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionDatabaseTable {
        /**
         * AdvancedObjects.
         */
        advancedObjects?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The database list.
         */
        databases?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabase>[]>;
        /**
         * Object mode. eg:all,partial.
         */
        objectMode: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabase {
        /**
         * DB selection mode:all (for all objects under the current object), partial (partial objects), when the ObjectMode is partial, this item is required.
         */
        dbMode?: pulumi.Input<string>;
        /**
         * database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * EventMode.
         */
        eventMode?: pulumi.Input<string>;
        /**
         * Events.
         */
        events?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * FunctionMode.
         */
        functionMode?: pulumi.Input<string>;
        /**
         * Functions.
         */
        functions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * New database name.
         */
        newDbName?: pulumi.Input<string>;
        /**
         * schema name after migration or synchronization.
         */
        newSchemaName?: pulumi.Input<string>;
        /**
         * ProcedureMode.
         */
        procedureMode?: pulumi.Input<string>;
        /**
         * Procedures.
         */
        procedures?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * RoleMode.
         */
        roleMode?: pulumi.Input<string>;
        /**
         * Roles.
         */
        roles?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabaseRole>[]>;
        /**
         * schema mode: all,partial.
         */
        schemaMode?: pulumi.Input<string>;
        /**
         * schema name.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * table mode: all,partial.
         */
        tableMode?: pulumi.Input<string>;
        /**
         * tables list.
         */
        tables?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabaseTable>[]>;
        /**
         * TriggerMode.
         */
        triggerMode?: pulumi.Input<string>;
        /**
         * Triggers.
         */
        triggers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ViewMode.
         */
        viewMode?: pulumi.Input<string>;
        /**
         * Views.
         */
        views?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobMigrateOptionDatabaseTableDatabaseView>[]>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabaseRole {
        /**
         * NewRoleName.
         */
        newRoleName?: pulumi.Input<string>;
        /**
         * RoleName.
         */
        roleName?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabaseTable {
        /**
         * new table name.
         */
        newTableName?: pulumi.Input<string>;
        /**
         * table edit mode.
         */
        tableEditMode?: pulumi.Input<string>;
        /**
         * table name.
         */
        tableName?: pulumi.Input<string>;
        /**
         * temporary tables.
         */
        tmpTables?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MigrateJobMigrateOptionDatabaseTableDatabaseView {
        /**
         * NewViewName.
         */
        newViewName?: pulumi.Input<string>;
        /**
         * ViewName.
         */
        viewName?: pulumi.Input<string>;
    }

    export interface MigrateJobMigrateOptionExtraAttr {
        /**
         * Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface MigrateJobSrcInfo {
        /**
         * AccessType.
         */
        accessType: pulumi.Input<string>;
        /**
         * DatabaseType.
         */
        databaseType: pulumi.Input<string>;
        /**
         * ExtraAttr.
         */
        extraAttrs?: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobSrcInfoExtraAttr>[]>;
        /**
         * Info.
         */
        infos: pulumi.Input<pulumi.Input<inputs.Dts.MigrateJobSrcInfoInfo>[]>;
        /**
         * NodeType.
         */
        nodeType: pulumi.Input<string>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Supplier.
         */
        supplier?: pulumi.Input<string>;
    }

    export interface MigrateJobSrcInfoExtraAttr {
        /**
         * Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface MigrateJobSrcInfoInfo {
        /**
         * Account.
         */
        account?: pulumi.Input<string>;
        /**
         * AccountMode.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * AccountRole.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * CcnGwId.
         */
        ccnGwId?: pulumi.Input<string>;
        /**
         * CvmInstanceId.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * DbKernel.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * EngineVersion.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Host.
         */
        host?: pulumi.Input<string>;
        /**
         * InstanceId.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Password.
         */
        password?: pulumi.Input<string>;
        /**
         * Port.
         */
        port?: pulumi.Input<number>;
        /**
         * Role.
         */
        role?: pulumi.Input<string>;
        /**
         * SubnetId.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * TmpSecretId.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * TmpSecretKey.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * TmpToken.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * UniqDcgId.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * UniqVpnGwId.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * User.
         */
        user?: pulumi.Input<string>;
        /**
         * VpcId.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MigrateServiceTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface SyncConfigDstInfo {
        /**
         * The account to which the instance belongs. This field is required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        account?: pulumi.Input<string>;
        /**
         * The account to which the resource belongs is empty or self (represents resources within this account), other (represents cross-account resources). Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * The role during cross-account synchronization, only [a-zA-Z0-9-_]+ is allowed, if it is a cross-account instance, this field is required. Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * Cloud networking ID, which is required for the cloud networking access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ccnId?: pulumi.Input<string>;
        /**
         * CVM instance short ID, which is the same as the instance ID displayed on the cloud server console page. If it is a self-built instance of CVM, this field needs to be passed. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * The network environment to which the database belongs. It is required when AccessType is Cloud Network (CCN). `UserIDC` represents the user IDC. `TencentVPC` represents Tencent Cloud VPC. Note: This field may return null, indicating that no valid value can be obtained.
         */
        databaseNetEnv?: pulumi.Input<string>;
        /**
         * Database kernel type, used to distinguish different kernels in tdsql: percona, mariadb, mysql. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * Database name, when the database is cdwpg, it needs to be provided. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbName?: pulumi.Input<string>;
        /**
         * Whether to use encrypted transmission, UnEncrypted means not to use encrypted transmission, Encrypted means to use encrypted transmission, the default is UnEncrypted. Note: This field may return null, indicating that no valid value can be obtained.
         */
        encryptConn?: pulumi.Input<string>;
        /**
         * Database version, valid only when the instance is an RDS instance, ignored by other instances, the format is: 5.6 or 5.7, the default is 5.6. Note: This field may return null, indicating that no valid value can be obtained.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Database instance id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * The IP address of the instance, which is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ip?: pulumi.Input<string>;
        /**
         * Password, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        password?: pulumi.Input<string>;
        /**
         * Instance port, this item is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The english name of region. Note: This field may return null, indicating that no valid value can be obtained.
         */
        region?: pulumi.Input<string>;
        /**
         * The node type of tdsql mysql version, the enumeration value is proxy, set. Note: This field may return null, indicating that no valid value can be obtained.
         */
        role?: pulumi.Input<string>;
        /**
         * External role id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        roleExternalId?: pulumi.Input<string>;
        /**
         * The subnet ID under the private network, this item is required for the private network, leased line, and VPN access methods. Note: This field may return null, indicating that no valid value can be obtained.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Cloud vendor type, when the instance is an RDS instance, fill in aliyun, in other cases fill in others, the default is others. Note: This field may return null, indicating that no valid value can be obtained.
         */
        supplier?: pulumi.Input<string>;
        /**
         * Temporary key Id, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * Temporary key Key, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * Temporary Token, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * Leased line gateway ID, which is required for the leased line access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * VPN gateway ID, which is required for the VPN access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * Username, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        user?: pulumi.Input<string>;
        /**
         * Private network ID, which is required for access methods of private network, leased line, and VPN. Note: This field may return null, indicating that no valid value can be obtained.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface SyncConfigObjects {
        /**
         * For advanced object types, such as function and procedure, when an advanced object needs to be synchronized, the initialization type must include the structure initialization type, that is, the value of the Options.InitType field is Structure or Full. Note: This field may return null, indicating that no valid value can be obtained.
         */
        advancedObjects?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Synchronization object, not null when Mode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        databases?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigObjectsDatabase>[]>;
        /**
         * Migration object type Partial (partial object). Note: This field may return null, indicating that no valid value can be obtained.
         */
        mode?: pulumi.Input<string>;
        /**
         * OnlineDDL type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        onlineDdl?: pulumi.Input<inputs.Dts.SyncConfigObjectsOnlineDdl>;
    }

    export interface SyncConfigObjectsDatabase {
        /**
         * DB selection mode: All (for all objects under the current object), Partial (for some objects), when the Mode is Partial, this item is required. Note that synchronization of advanced objects does not depend on this value. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbMode?: pulumi.Input<string>;
        /**
         * The name of the library that needs to be migrated or synchronized. This item is required when the ObjectMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbName?: pulumi.Input<string>;
        /**
         * Event migration mode, all (for all objects under the current object), partial (partial objects). Note: This field may return null, indicating that no valid value can be obtained.
         */
        eventMode?: pulumi.Input<string>;
        /**
         * When EventMode is partial, specify the name of the event to be migrated. Note: This field may return null, indicating that no valid value can be obtained.
         */
        events?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Select the mode to be synchronized, Partial is a part, all is an entire selection. Note: This field may return null, indicating that no valid value can be obtained.
         */
        functionMode?: pulumi.Input<string>;
        /**
         * Required when the FunctionMode value is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        functions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the library after migration or synchronization, which is the same as the source library by default. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newDbName?: pulumi.Input<string>;
        /**
         * Schema name after migration or synchronization. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newSchemaName?: pulumi.Input<string>;
        /**
         * Select the mode to be synchronized, Partial is part, All is the whole selection. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedureMode?: pulumi.Input<string>;
        /**
         * Required when the value of ProcedureMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        procedures?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Migrated or synchronized schemaNote: This field may return null, indicating that no valid value can be obtained.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * Table selection mode: All (for all objects under the current object), Partial (for some objects), this item is required when the DBMode is Partial. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableMode?: pulumi.Input<string>;
        /**
         * A collection of table graph objects, when TableMode is Partial, this item needs to be filled in. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tables?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigObjectsDatabaseTable>[]>;
        /**
         * Trigger migration mode, all (for all objects under the current object), partial (partial objects). Note: This field may return null, indicating that no valid value can be obtained.
         */
        triggerMode?: pulumi.Input<string>;
        /**
         * When TriggerMode is partial, specify the name of the trigger to be migrated. Note: This field may return null, indicating that no valid value can be obtained.
         */
        triggers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * View selection mode: All is all view objects under the current object, Partial is part of the view objects. Note: This field may return null, indicating that no valid value can be obtained.
         */
        viewMode?: pulumi.Input<string>;
        /**
         * View object collection, when ViewMode is Partial, this item needs to be filled in. Note: This field may return null, indicating that no valid value can be obtained.
         */
        views?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigObjectsDatabaseView>[]>;
    }

    export interface SyncConfigObjectsDatabaseTable {
        /**
         * Filter condition. Note: This field may return null, indicating that no valid value can be obtained.
         */
        filterCondition?: pulumi.Input<string>;
        /**
         * New table name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newTableName?: pulumi.Input<string>;
        /**
         * Table name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface SyncConfigObjectsDatabaseView {
        /**
         * New view name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        newViewName?: pulumi.Input<string>;
        /**
         * View name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        viewName?: pulumi.Input<string>;
    }

    export interface SyncConfigObjectsOnlineDdl {
        /**
         * status.
         */
        status?: pulumi.Input<string>;
    }

    export interface SyncConfigOptions {
        /**
         * Whether to add additional columns. Note: This field may return null, indicating that no valid value can be obtained.
         */
        addAdditionalColumn?: pulumi.Input<boolean>;
        /**
         * Detailed options for conflict handling, such as conditional rows and conditional actions in conditional overrides. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conflictHandleOption?: pulumi.Input<inputs.Dts.SyncConfigOptionsConflictHandleOption>;
        /**
         * Conflict handling options, ReportError (error report, the default value), Ignore (ignore), Cover (cover), ConditionCover (condition coverage). Note: This field may return null, indicating that no valid value can be obtained.
         */
        conflictHandleType?: pulumi.Input<string>;
        /**
         * DDL synchronization options, specifically describe which DDLs to synchronize. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ddlOptions?: pulumi.Input<pulumi.Input<inputs.Dts.SyncConfigOptionsDdlOption>[]>;
        /**
         * The processing of the table with the same name, ReportErrorAfterCheck (pre-check and report error, default), InitializeAfterDelete (delete and re-initialize), ExecuteAfterIgnore (ignore and continue to execute). Note: This field may return null, indicating that no valid value can be obtained.
         */
        dealOfExistSameTable?: pulumi.Input<string>;
        /**
         * Synchronous initialization options, Data (full data initialization), Structure (structure initialization), Full (full data and structure initialization, default), None (incremental only). Note: This field may return null, indicating that no valid value can be obtained.
         */
        initType?: pulumi.Input<string>;
        /**
         * DML and DDL options to be synchronized, Insert (insert operation), Update (update operation), Delete (delete operation), DDL (structure synchronization), leave blank (not selected), PartialDDL (custom, work with DdlOptions). Note: This field may return null, indicating that no valid value can be obtained.
         */
        opTypes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SyncConfigOptionsConflictHandleOption {
        /**
         * Columns covered by the condition. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conditionColumn?: pulumi.Input<string>;
        /**
         * Conditional Override Operation. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conditionOperator?: pulumi.Input<string>;
        /**
         * Conditional Override Priority Processing. Note: This field may return null, indicating that no valid value can be obtained.
         */
        conditionOrderInSrcAndDst?: pulumi.Input<string>;
    }

    export interface SyncConfigOptionsDdlOption {
        /**
         * Ddl type, such as Database, Table, View, Index, etc. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ddlObject?: pulumi.Input<string>;
        /**
         * The specific value of ddl, the possible values for Database [Create,Drop,Alter].The possible values for Table [Create,Drop,Alter,Truncate,Rename].The possible values for View[Create,Drop].For the possible values of Index [Create, Drop]. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ddlValues?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SyncConfigSrcInfo {
        /**
         * The account to which the instance belongs. This field is required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        account?: pulumi.Input<string>;
        /**
         * The account to which the resource belongs is empty or self (represents resources within this account), other (represents cross-account resources). Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountMode?: pulumi.Input<string>;
        /**
         * The role during cross-account synchronization, only [a-zA-Z0-9-_]+ is allowed, if it is a cross-account instance, this field is required. Note: This field may return null, indicating that no valid value can be obtained.
         */
        accountRole?: pulumi.Input<string>;
        /**
         * Cloud networking ID, which is required for the cloud networking access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ccnId?: pulumi.Input<string>;
        /**
         * CVM instance short ID, which is the same as the instance ID displayed on the cloud server console page. If it is a self-built instance of CVM, this field needs to be passed. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cvmInstanceId?: pulumi.Input<string>;
        /**
         * The network environment to which the database belongs. It is required when AccessType is Cloud Network (CCN). `UserIDC` represents the user IDC. `TencentVPC` represents Tencent Cloud VPC. Note: This field may return null, indicating that no valid value can be obtained.
         */
        databaseNetEnv?: pulumi.Input<string>;
        /**
         * Database kernel type, used to distinguish different kernels in tdsql: percona, mariadb, mysql. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbKernel?: pulumi.Input<string>;
        /**
         * Database name, when the database is cdwpg, it needs to be provided. Note: This field may return null, indicating that no valid value can be obtained.
         */
        dbName?: pulumi.Input<string>;
        /**
         * Whether to use encrypted transmission, UnEncrypted means not to use encrypted transmission, Encrypted means to use encrypted transmission, the default is UnEncrypted. Note: This field may return null, indicating that no valid value can be obtained.
         */
        encryptConn?: pulumi.Input<string>;
        /**
         * Database version, valid only when the instance is an RDS instance, ignored by other instances, the format is: 5.6 or 5.7, the default is 5.6. Note: This field may return null, indicating that no valid value can be obtained.
         */
        engineVersion?: pulumi.Input<string>;
        /**
         * Database instance id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * The IP address of the instance, which is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ip?: pulumi.Input<string>;
        /**
         * Password, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        password?: pulumi.Input<string>;
        /**
         * Instance port, this item is required when the access type is non-cdb. Note: This field may return null, indicating that no valid value can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The english name of region. Note: This field may return null, indicating that no valid value can be obtained.
         */
        region?: pulumi.Input<string>;
        /**
         * The node type of tdsql mysql version, the enumeration value is proxy, set. Note: This field may return null, indicating that no valid value can be obtained.
         */
        role?: pulumi.Input<string>;
        /**
         * External role id. Note: This field may return null, indicating that no valid value can be obtained.
         */
        roleExternalId?: pulumi.Input<string>;
        /**
         * The subnet ID under the private network, this item is required for the private network, leased line, and VPN access methods. Note: This field may return null, indicating that no valid value can be obtained.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Cloud vendor type, when the instance is an RDS instance, fill in aliyun, in other cases fill in others, the default is others. Note: This field may return null, indicating that no valid value can be obtained.
         */
        supplier?: pulumi.Input<string>;
        /**
         * Temporary key Id, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * Temporary key Key, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * Temporary Token, required if it is a cross-account instance. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tmpToken?: pulumi.Input<string>;
        /**
         * Leased line gateway ID, which is required for the leased line access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqDcgId?: pulumi.Input<string>;
        /**
         * VPN gateway ID, which is required for the VPN access type. Note: This field may return null, indicating that no valid value can be obtained.
         */
        uniqVpnGwId?: pulumi.Input<string>;
        /**
         * Username, required for instances that require username and password authentication for access. Note: This field may return null, indicating that no valid value can be obtained.
         */
        user?: pulumi.Input<string>;
        /**
         * Private network ID, which is required for access methods of private network, leased line, and VPN. Note: This field may return null, indicating that no valid value can be obtained.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface SyncJobTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }
}

export namespace Eb {
    export interface EventConnectorConnectionDescription {
        /**
         * apigw parameter,Note: This field may return null, indicating that no valid value can be obtained.
         */
        apiGwParams?: pulumi.Input<inputs.Eb.EventConnectorConnectionDescriptionApiGwParams>;
        /**
         * ckafka parameter, note: this field may return null, indicating that no valid value can be obtained.
         */
        ckafkaParams?: pulumi.Input<inputs.Eb.EventConnectorConnectionDescriptionCkafkaParams>;
        /**
         * Resource qcs six-segment style, more reference [resource six-segment style](https://cloud.tencent.com/document/product/598/10606).
         */
        resourceDescription: pulumi.Input<string>;
    }

    export interface EventConnectorConnectionDescriptionApiGwParams {
        /**
         * POST.
         */
        method: pulumi.Input<string>;
        /**
         * HTTPS.
         */
        protocol: pulumi.Input<string>;
    }

    export interface EventConnectorConnectionDescriptionCkafkaParams {
        /**
         * kafka offset.
         */
        offset: pulumi.Input<string>;
        /**
         * ckafka  topic.
         */
        topicName: pulumi.Input<string>;
    }

    export interface EventTargetTargetDescription {
        /**
         * Ckafka parameters.
         */
        ckafkaTargetParams?: pulumi.Input<inputs.Eb.EventTargetTargetDescriptionCkafkaTargetParams>;
        /**
         * ElasticSearch parameters.
         */
        esTargetParams?: pulumi.Input<inputs.Eb.EventTargetTargetDescriptionEsTargetParams>;
        /**
         * QCS resource six-stage format, more references [resource six-stage format](https://cloud.tencent.com/document/product/598/10606).
         */
        resourceDescription: pulumi.Input<string>;
        /**
         * cloud function parameters.
         */
        scfParams?: pulumi.Input<inputs.Eb.EventTargetTargetDescriptionScfParams>;
    }

    export interface EventTargetTargetDescriptionCkafkaTargetParams {
        /**
         * retry strategy.
         */
        retryPolicy: pulumi.Input<inputs.Eb.EventTargetTargetDescriptionCkafkaTargetParamsRetryPolicy>;
        /**
         * The ckafka topic to deliver to.
         */
        topicName: pulumi.Input<string>;
    }

    export interface EventTargetTargetDescriptionCkafkaTargetParamsRetryPolicy {
        /**
         * Maximum number of retries.
         */
        maxRetryAttempts: pulumi.Input<number>;
        /**
         * Retry Interval Unit: Seconds.
         */
        retryInterval: pulumi.Input<number>;
    }

    export interface EventTargetTargetDescriptionEsTargetParams {
        /**
         * index prefix.
         */
        indexPrefix: pulumi.Input<string>;
        /**
         * DTS index configuration.
         */
        indexSuffixMode: pulumi.Input<string>;
        /**
         * es template type.
         */
        indexTemplateType?: pulumi.Input<string>;
        /**
         * network connection type.
         */
        netMode: pulumi.Input<string>;
        /**
         * DTS event configuration.
         */
        outputMode: pulumi.Input<string>;
        /**
         * es log rotation granularity.
         */
        rotationInterval: pulumi.Input<string>;
    }

    export interface EventTargetTargetDescriptionScfParams {
        /**
         * Maximum number of events for batch delivery.
         */
        batchEventCount?: pulumi.Input<number>;
        /**
         * Maximum waiting time for bulk delivery.
         */
        batchTimeout?: pulumi.Input<number>;
        /**
         * Enable batch delivery.
         */
        enableBatchDelivery?: pulumi.Input<boolean>;
    }

    export interface EventTransformTransformation {
        /**
         * Describe how to filter data.
         */
        etlFilter?: pulumi.Input<inputs.Eb.EventTransformTransformationEtlFilter>;
        /**
         * Describe how to extract data.
         */
        extraction?: pulumi.Input<inputs.Eb.EventTransformTransformationExtraction>;
        /**
         * Describe how to convert data.
         */
        transform?: pulumi.Input<inputs.Eb.EventTransformTransformationTransform>;
    }

    export interface EventTransformTransformationEtlFilter {
        /**
         * Grammatical Rules are consistent.
         */
        filter: pulumi.Input<string>;
    }

    export interface EventTransformTransformationExtraction {
        /**
         * JsonPath, if not specified, the default value $.
         */
        extractionInputPath: pulumi.Input<string>;
        /**
         * Value: `TEXT`, `JSON`.
         */
        format: pulumi.Input<string>;
        /**
         * Only Text needs to be passed.
         */
        textParams?: pulumi.Input<inputs.Eb.EventTransformTransformationExtractionTextParams>;
    }

    export interface EventTransformTransformationExtractionTextParams {
        /**
         * Fill in the regular expression: length 128.
         */
        regex?: pulumi.Input<string>;
        /**
         * `Comma`, `|`, `tab`, `space`, `newline`, `%`, `#`, the limit length is 1.
         */
        separator?: pulumi.Input<string>;
    }

    export interface EventTransformTransformationTransform {
        /**
         * Describe how the data is transformed.
         */
        outputStructs: pulumi.Input<pulumi.Input<inputs.Eb.EventTransformTransformationTransformOutputStruct>[]>;
    }

    export interface EventTransformTransformationTransformOutputStruct {
        /**
         * Corresponding to the key in the output json.
         */
        key: pulumi.Input<string>;
        /**
         * You can fill in the json-path and also support constants or built-in keyword date types.
         */
        value: pulumi.Input<string>;
        /**
         * The data type of value, optional values: `STRING`, `NUMBER`, `BOOLEAN`, `NULL`, `SYS_VARIABLE`, `JSONPATH`.
         */
        valueType: pulumi.Input<string>;
    }

    export interface GetBusFilter {
        /**
         * The name of the filter key.
         */
        name: string;
        /**
         * One or more filter values.
         */
        values: string[];
    }

    export interface GetBusFilterArgs {
        /**
         * The name of the filter key.
         */
        name: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetSearchFilter {
        /**
         * LogFilters array.
         */
        filters?: inputs.Eb.GetSearchFilterFilter[];
        /**
         * filter field name.
         */
        key?: string;
        /**
         * operator, congruent eq, not equal neq, similar like, exclude similar not like, less than lt, less than and equal to lte, greater than gt, greater than and equal to gte, in range range, not in range norange.
         */
        operator?: string;
        /**
         * The logical relationship of the level filters, the value AND or OR.
         */
        type?: string;
        /**
         * Filter value, range operation needs to enter two values at the same time, separated by commas.
         */
        value?: string;
    }

    export interface GetSearchFilterArgs {
        /**
         * LogFilters array.
         */
        filters?: pulumi.Input<pulumi.Input<inputs.Eb.GetSearchFilterFilterArgs>[]>;
        /**
         * filter field name.
         */
        key?: pulumi.Input<string>;
        /**
         * operator, congruent eq, not equal neq, similar like, exclude similar not like, less than lt, less than and equal to lte, greater than gt, greater than and equal to gte, in range range, not in range norange.
         */
        operator?: pulumi.Input<string>;
        /**
         * The logical relationship of the level filters, the value AND or OR.
         */
        type?: pulumi.Input<string>;
        /**
         * Filter value, range operation needs to enter two values at the same time, separated by commas.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetSearchFilterFilter {
        /**
         * filter field name.
         */
        key: string;
        /**
         * operator, congruent eq, not equal neq, similar like, exclude similar not like, less than lt, less than and equal to lte, greater than gt, greater than and equal to gte, within range range, not within range norange.
         */
        operator: string;
        /**
         * Filter values, range operations need to enter two values at the same time, separated by commas.
         */
        value: string;
    }

    export interface GetSearchFilterFilterArgs {
        /**
         * filter field name.
         */
        key: pulumi.Input<string>;
        /**
         * operator, congruent eq, not equal neq, similar like, exclude similar not like, less than lt, less than and equal to lte, greater than gt, greater than and equal to gte, within range range, not within range norange.
         */
        operator: pulumi.Input<string>;
        /**
         * Filter values, range operations need to enter two values at the same time, separated by commas.
         */
        value: pulumi.Input<string>;
    }

    export interface PutEventsEventList {
        /**
         * Event data, the content is controlled by the system that created the event, the current datacontenttype only supports application/json;charset=utf-8, so this field is a json string.
         */
        data: pulumi.Input<string>;
        /**
         * Event source information, new product reporting must comply with EB specifications.
         */
        source: pulumi.Input<string>;
        /**
         * Detailed description of the event source, customizable, optional. The cloud service defaults to the standard qcs resource representation syntax: qcs::dts:ap-guangzhou:appid/uin:xxx.
         */
        subject: pulumi.Input<string>;
        /**
         * The timestamp in milliseconds when the event occurred,time.Now().UnixNano()/1e6.
         */
        time?: pulumi.Input<number>;
        /**
         * Event type, customizable, optional. The cloud service writes COS:Created:PostObject by default, use: to separate the type field.
         */
        type: pulumi.Input<string>;
    }
}

export namespace Eip {
}

export namespace Eips {
}

export namespace Elasticsearch {
    export interface DiagnoseDiagnoseJobMeta {
        /**
         * Intelligent operation and maintenance diagnostic item description.
         */
        jobDescription?: pulumi.Input<string>;
        /**
         * English name of diagnosis item for intelligent operation and maintenance.
         */
        jobName?: pulumi.Input<string>;
        /**
         * Chinese name of intelligent operation and maintenance diagnosis item.
         */
        jobZhName?: pulumi.Input<string>;
    }

    export interface InstanceCosBackup {
        /**
         * Automatic backup execution time (accurate to the hour), e.g. `22:00`.
         */
        backupTime: pulumi.Input<string>;
        /**
         * Whether to enable automatic backup of cos.
         */
        isAutoBackup: pulumi.Input<boolean>;
    }

    export interface InstanceEsAcl {
        /**
         * Blacklist of kibana access.
         */
        blackLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whitelist of kibana access.
         */
        whiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceMultiZoneInfo {
        /**
         * Availability zone.
         */
        availabilityZone: pulumi.Input<string>;
        /**
         * The ID of a VPC subnetwork.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface InstanceNodeInfoList {
        /**
         * Node disk size. Unit is GB, and default value is `100`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Node disk type. Valid values are `CLOUD_SSD`, `CLOUD_PREMIUM`, `CLOUD_HSSD`, `CLOUD_BSSD`, `CLOUD_BIGDATA` and `CLOUD_HIGHIO`. The default value is `CLOUD_SSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Decides to encrypt this disk or not.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Number of nodes.
         */
        nodeNum: pulumi.Input<number>;
        /**
         * Node specification, and valid values refer to [document of tencentcloud](https://intl.cloud.tencent.com/document/product/845/18376).
         */
        nodeType: pulumi.Input<string>;
        /**
         * Node type. Valid values are `hotData`, `warmData` and `dedicatedMaster`. The default value is 'hotData`.
         */
        type?: pulumi.Input<string>;
    }

    export interface InstanceWebNodeTypeInfo {
        /**
         * Visual node number.
         */
        nodeNum: pulumi.Input<number>;
        /**
         * Visual node specifications.
         */
        nodeType: pulumi.Input<string>;
    }

    export interface LogstashOperationDuration {
        /**
         * day of week, from Monday to Sunday, value range: [0, 6]notes: may return null when missing.
         */
        periods: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * operation end time.
         */
        timeEnd: pulumi.Input<string>;
        /**
         * operation start time.
         */
        timeStart: pulumi.Input<string>;
        /**
         * time zone, for example: UTC+8.
         */
        timeZone: pulumi.Input<string>;
    }

    export interface LogstashPipelinePipeline {
        /**
         * Pipeline batch processing delay.
         */
        batchDelay: pulumi.Input<number>;
        /**
         * Pipe batch size.
         */
        batchSize: pulumi.Input<number>;
        /**
         * Pipeline configuration content.
         */
        config: pulumi.Input<string>;
        /**
         * Pipeline description information.
         */
        pipelineDesc: pulumi.Input<string>;
        /**
         * Pipeline id.
         */
        pipelineId: pulumi.Input<string>;
        /**
         * Number of pipeline buffer queue checkpoint writes.
         */
        queueCheckPointWrites: pulumi.Input<number>;
        /**
         * Pipeline buffer queue size.
         */
        queueMaxBytes: pulumi.Input<string>;
        /**
         * Pipeline buffer queue type.
         */
        queueType: pulumi.Input<string>;
        /**
         * Number of Worker of pipe.
         */
        workers: pulumi.Input<number>;
    }
}

export namespace Emr {
    export interface ClusterPlacementInfo {
        /**
         * Project id.
         */
        projectId?: pulumi.Input<number>;
        /**
         * Zone.
         */
        zone: pulumi.Input<string>;
    }

    export interface ClusterPreExecutedFileSetting {
        /**
         * Execution script parameters.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Script file name.
         */
        cosFileName?: pulumi.Input<string>;
        /**
         * The cos address of the script.
         */
        cosFileUri?: pulumi.Input<string>;
        /**
         * Cos secretId.
         */
        cosSecretId?: pulumi.Input<string>;
        /**
         * Cos secretKey.
         */
        cosSecretKey?: pulumi.Input<string>;
        /**
         * Remark.
         */
        remark?: pulumi.Input<string>;
        /**
         * Run order.
         */
        runOrder?: pulumi.Input<number>;
        /**
         * `resourceAfter` or `clusterAfter`.
         */
        whenRun?: pulumi.Input<string>;
    }

    export interface ClusterResourceSpec {
        /**
         * The number of common node.
         */
        commonCount?: pulumi.Input<number>;
        /**
         * Resource details.
         */
        commonResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecCommonResourceSpec>;
        /**
         * The number of core node.
         */
        coreCount?: pulumi.Input<number>;
        /**
         * Resource details.
         */
        coreResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecCoreResourceSpec>;
        /**
         * The number of master node.
         */
        masterCount?: pulumi.Input<number>;
        /**
         * Resource details.
         */
        masterResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecMasterResourceSpec>;
        /**
         * The number of core node.
         */
        taskCount?: pulumi.Input<number>;
        /**
         * Resource details.
         */
        taskResourceSpec?: pulumi.Input<inputs.Emr.ClusterResourceSpecTaskResourceSpec>;
    }

    export interface ClusterResourceSpecCommonResourceSpec {
        /**
         * Number of CPU cores.
         */
        cpu?: pulumi.Input<number>;
        /**
         * Data disk capacity.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * disk types. Value range:
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_BASIC: Represents Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Memory size in M.
         */
        memSize?: pulumi.Input<number>;
        /**
         * Cloud disk list. When the data disk is a cloud disk, use diskType and diskSize parameters directly, and use multiDisks for excess parts.
         */
        multiDisks?: pulumi.Input<pulumi.Input<inputs.Emr.ClusterResourceSpecCommonResourceSpecMultiDisk>[]>;
        /**
         * Root disk capacity.
         */
        rootSize?: pulumi.Input<number>;
        /**
         * Node specification description, such as CVM.SA2.
         */
        spec?: pulumi.Input<string>;
        /**
         * Storage type. Value range:
         * - 4: Represents cloud SSD;
         * - 5: Represents efficient cloud disk;
         * - 6: Represents enhanced SSD Cloud Block Storage;
         * - 11: Represents throughput Cloud Block Storage;
         * - 12: Represents extremely fast SSD Cloud Block Storage.
         */
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecCommonResourceSpecMultiDisk {
        /**
         * Number of cloud disks of this type.
         */
        count?: pulumi.Input<number>;
        /**
         * Cloud disk type
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_HSSD: Represents enhanced SSD Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Cloud disk size.
         */
        volume?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecCoreResourceSpec {
        /**
         * Number of CPU cores.
         */
        cpu?: pulumi.Input<number>;
        /**
         * Data disk capacity.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * disk types. Value range:
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_BASIC: Represents Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Memory size in M.
         */
        memSize?: pulumi.Input<number>;
        /**
         * Cloud disk list. When the data disk is a cloud disk, use diskType and diskSize parameters directly, and use multiDisks for excess parts.
         */
        multiDisks?: pulumi.Input<pulumi.Input<inputs.Emr.ClusterResourceSpecCoreResourceSpecMultiDisk>[]>;
        /**
         * Root disk capacity.
         */
        rootSize?: pulumi.Input<number>;
        /**
         * Node specification description, such as CVM.SA2.
         */
        spec?: pulumi.Input<string>;
        /**
         * Storage type. Value range:
         * - 4: Represents cloud SSD;
         * - 5: Represents efficient cloud disk;
         * - 6: Represents enhanced SSD Cloud Block Storage;
         * - 11: Represents throughput Cloud Block Storage;
         * - 12: Represents extremely fast SSD Cloud Block Storage.
         */
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecCoreResourceSpecMultiDisk {
        /**
         * Number of cloud disks of this type.
         */
        count?: pulumi.Input<number>;
        /**
         * Cloud disk type
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_HSSD: Represents enhanced SSD Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Cloud disk size.
         */
        volume?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecMasterResourceSpec {
        /**
         * Number of CPU cores.
         */
        cpu?: pulumi.Input<number>;
        /**
         * Data disk capacity.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * disk types. Value range:
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_BASIC: Represents Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Memory size in M.
         */
        memSize?: pulumi.Input<number>;
        /**
         * Cloud disk list. When the data disk is a cloud disk, use diskType and diskSize parameters directly, and use multiDisks for excess parts.
         */
        multiDisks?: pulumi.Input<pulumi.Input<inputs.Emr.ClusterResourceSpecMasterResourceSpecMultiDisk>[]>;
        /**
         * Root disk capacity.
         */
        rootSize?: pulumi.Input<number>;
        /**
         * Node specification description, such as CVM.SA2.
         */
        spec?: pulumi.Input<string>;
        /**
         * Storage type. Value range:
         * - 4: Represents cloud SSD;
         * - 5: Represents efficient cloud disk;
         * - 6: Represents enhanced SSD Cloud Block Storage;
         * - 11: Represents throughput Cloud Block Storage;
         * - 12: Represents extremely fast SSD Cloud Block Storage.
         */
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecMasterResourceSpecMultiDisk {
        /**
         * Number of cloud disks of this type.
         */
        count?: pulumi.Input<number>;
        /**
         * Cloud disk type
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_HSSD: Represents enhanced SSD Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Cloud disk size.
         */
        volume?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecTaskResourceSpec {
        /**
         * Number of CPU cores.
         */
        cpu?: pulumi.Input<number>;
        /**
         * Data disk capacity.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * disk types. Value range:
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_BASIC: Represents Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Memory size in M.
         */
        memSize?: pulumi.Input<number>;
        /**
         * Cloud disk list. When the data disk is a cloud disk, use diskType and diskSize parameters directly, and use multiDisks for excess parts.
         */
        multiDisks?: pulumi.Input<pulumi.Input<inputs.Emr.ClusterResourceSpecTaskResourceSpecMultiDisk>[]>;
        /**
         * Root disk capacity.
         */
        rootSize?: pulumi.Input<number>;
        /**
         * Node specification description, such as CVM.SA2.
         */
        spec?: pulumi.Input<string>;
        /**
         * Storage type. Value range:
         * - 4: Represents cloud SSD;
         * - 5: Represents efficient cloud disk;
         * - 6: Represents enhanced SSD Cloud Block Storage;
         * - 11: Represents throughput Cloud Block Storage;
         * - 12: Represents extremely fast SSD Cloud Block Storage.
         */
        storageType?: pulumi.Input<number>;
    }

    export interface ClusterResourceSpecTaskResourceSpecMultiDisk {
        /**
         * Number of cloud disks of this type.
         */
        count?: pulumi.Input<number>;
        /**
         * Cloud disk type
         * - CLOUD_SSD: Represents cloud SSD;
         * - CLOUD_PREMIUM: Represents efficient cloud disk;
         * - CLOUD_HSSD: Represents enhanced SSD Cloud Block Storage.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Cloud disk size.
         */
        volume?: pulumi.Input<number>;
    }

    export interface ClusterTerminateNodeInfo {
        /**
         * Destroy resource list.
         */
        cvmInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Value range of destruction node type: `MASTER`, `TASK`, `CORE`, `ROUTER`.
         */
        nodeFlag?: pulumi.Input<string>;
    }

    export interface GetAutoScaleRecordsFilter {
        /**
         * Key. Note: This field may return null, indicating that no valid value can be obtained.
         */
        key: string;
        /**
         * Value. Note: This field may return null, indicating that no valid value can be obtained.
         */
        value: string;
    }

    export interface GetAutoScaleRecordsFilterArgs {
        /**
         * Key. Note: This field may return null, indicating that no valid value can be obtained.
         */
        key: pulumi.Input<string>;
        /**
         * Value. Note: This field may return null, indicating that no valid value can be obtained.
         */
        value: pulumi.Input<string>;
    }

}

export namespace Eni {
    export interface InstanceIpv4 {
        /**
         * Description of the IP, maximum length 25.
         */
        description?: pulumi.Input<string>;
        /**
         * Intranet IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Indicates whether the IP is primary.
         */
        primary: pulumi.Input<boolean>;
    }

    export interface InstanceIpv4Info {
        /**
         * Description of the IP, maximum length 25.
         */
        description?: pulumi.Input<string>;
        /**
         * Intranet IP.
         */
        ip?: pulumi.Input<string>;
        /**
         * Indicates whether the IP is primary.
         */
        primary?: pulumi.Input<boolean>;
    }

    export interface Ipv4AddressPrivateIpAddress {
        /**
         * EIP instance ID, such as `eip-11112222`.
         */
        addressId?: pulumi.Input<string>;
        /**
         * Private IP description.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether the public IP is blocked.
         */
        isWanIpBlocked?: pulumi.Input<boolean>;
        /**
         * Whether it is a primary IP.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * Private IP address.
         */
        privateIpAddress: pulumi.Input<string>;
        /**
         * Public IP address.
         */
        publicIpAddress?: pulumi.Input<string>;
        /**
         * IP service level. Values: PT` (Gold), `AU` (Silver), `AG `(Bronze) and DEFAULT` (Default).
         */
        qosLevel?: pulumi.Input<string>;
        /**
         * IP status: `PENDING`: Creating, `MIGRATING`: Migrating, `DELETING`: Deleting, `AVAILABLE`: Available.
         */
        state?: pulumi.Input<string>;
    }

    export interface Ipv6AddressIpv6Address {
        /**
         * `IPv6` address, in the form of: `3402:4e00:20:100:0:8cd9:2a67:71f3`.
         */
        address: pulumi.Input<string>;
        /**
         * `EIP` instance `ID`, such as:`eip-hxlqja90`.
         */
        addressId?: pulumi.Input<string>;
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Whether the public network IP is blocked.
         */
        isWanIpBlocked?: pulumi.Input<boolean>;
        /**
         * Whether to master `IP`.
         */
        primary?: pulumi.Input<boolean>;
        /**
         * `IPv6` address status: `PENDING`: pending, `MIGRATING`: migrating, `DELETING`: deleting, `AVAILABLE`: available.
         */
        state?: pulumi.Input<string>;
    }
}

export namespace Enis {
}

export namespace Events {
    export interface AuditTrackFilters {
        /**
         * Resource filtering conditions.
         */
        resourceFields?: pulumi.Input<pulumi.Input<inputs.Events.AuditTrackFiltersResourceField>[]>;
    }

    export interface AuditTrackFiltersResourceField {
        /**
         * Tracking set event type (`Read`: Read; `Write`: Write; `*`: All).
         */
        actionType: pulumi.Input<string>;
        /**
         * The list of API names of tracking set events. When `ResourceType` is `*`, the value of `EventNames` must be `*`. When `ResourceType` is a specified product, the value of `EventNames` can be `*`. When `ResourceType` is `cos` or `cls`, up to 10 APIs are supported.
         */
        eventNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The product to which the tracking set event belongs. The value can be a single product such as `cos`, or `*` that indicates all products.
         */
        resourceType: pulumi.Input<string>;
    }

    export interface AuditTrackStorage {
        /**
         * Designated to store user ID.
         */
        storageAccountId?: pulumi.Input<string>;
        /**
         * Designated to store user app ID.
         */
        storageAppId?: pulumi.Input<string>;
        /**
         * Storage name. For COS, the storage name is the custom bucket name, which can contain up to 50 lowercase letters, digits, and hyphens. It cannot contain "-APPID" and cannot start or end with a hyphen. For CLS, the storage name is the log topic ID, which can contain 1-50 characters.
         */
        storageName: pulumi.Input<string>;
        /**
         * Storage directory prefix. The COS log file prefix can only contain 3-40 letters and digits.
         */
        storagePrefix: pulumi.Input<string>;
        /**
         * StorageRegion *string `json:'StorageRegion,omitnil,omitempty' name: 'StorageRegion'`.
         */
        storageRegion: pulumi.Input<string>;
        /**
         * Storage type (Valid values: cos, cls).
         */
        storageType: pulumi.Input<string>;
    }
}

export namespace Gaap {
    export interface CustomHeaderHeader {
        /**
         * Header name.
         */
        headerName: pulumi.Input<string>;
        /**
         * Header value.
         */
        headerValue: pulumi.Input<string>;
    }

    export interface GetProxyGroupsFilter {
        /**
         * Filter conditions.
         */
        name: string;
        /**
         * filtering value.
         */
        values: string[];
    }

    export interface GetProxyGroupsFilterArgs {
        /**
         * Filter conditions.
         */
        name: pulumi.Input<string>;
        /**
         * filtering value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetProxyGroupsTagSet {
        /**
         * Tag Key.
         */
        tagKey: string;
        /**
         * Tag Value.
         */
        tagValue: string;
    }

    export interface GetProxyGroupsTagSetArgs {
        /**
         * Tag Key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Tag Value.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface HttpRuleRealserver {
        /**
         * ID of the GAAP realserver.
         */
        id: pulumi.Input<string>;
        /**
         * IP of the GAAP realserver.
         */
        ip: pulumi.Input<string>;
        /**
         * Port of the GAAP realserver.
         */
        port: pulumi.Input<number>;
        /**
         * Scheduling weight, default value is `1`. Valid value ranges: (1~100).
         */
        weight?: pulumi.Input<number>;
    }

    export interface Layer4ListenerRealserverBindSet {
        /**
         * ID of the GAAP realserver.
         */
        id: pulumi.Input<string>;
        /**
         * IP of the GAAP realserver.
         */
        ip: pulumi.Input<string>;
        /**
         * Port of the GAAP realserver.
         */
        port: pulumi.Input<number>;
        /**
         * Scheduling weight, default value is `1`. The range of values is [1,100].
         */
        weight?: pulumi.Input<number>;
    }
}

export namespace Ha {
}

export namespace Identity {
    export interface CenterRoleConfigurationPermissionCustomPoliciesAttachmentPolicy {
        /**
         * Role policy add time.
         */
        addTime?: pulumi.Input<string>;
        /**
         * Role policy document.
         */
        rolePolicyDocument: pulumi.Input<string>;
        /**
         * Role policy name.
         */
        rolePolicyName: pulumi.Input<string>;
        /**
         * Role policy type.
         */
        rolePolicyType?: pulumi.Input<string>;
    }

}

export namespace Image {
    export interface GetInstanceFilter {
        /**
         * Key of the filter, valid keys: `image-id`, `image-type`, `image-name`.
         */
        name: string;
        /**
         * Values of the filter.
         */
        values: string[];
    }

    export interface GetInstanceFilterArgs {
        /**
         * Key of the filter, valid keys: `image-id`, `image-type`, `image-name`.
         */
        name: pulumi.Input<string>;
        /**
         * Values of the filter.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Images {
}

export namespace Instance {
    export interface GetTypesFilter {
        /**
         * The filter name. Valid values: `zone`, `instance-family` and `instance-charge-type`.
         */
        name: string;
        /**
         * The filter values.
         */
        values: string[];
    }

    export interface GetTypesFilterArgs {
        /**
         * The filter name. Valid values: `zone`, `instance-family` and `instance-charge-type`.
         */
        name: pulumi.Input<string>;
        /**
         * The filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceDataDisk {
        /**
         * Data disk ID used to initialize the data disk. When data disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
         */
        dataDiskId?: pulumi.Input<string>;
        /**
         * Size of the data disk, and unit is GB.
         */
        dataDiskSize: pulumi.Input<number>;
        /**
         * Snapshot ID of the data disk. The selected data disk snapshot size must be smaller than the data disk size.
         */
        dataDiskSnapshotId?: pulumi.Input<string>;
        /**
         * Data disk type. For more information about limits on different data disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, LOCAL_NVME: local NVME disk, specified in the InstanceType, LOCAL_PRO: local HDD disk, specified in the InstanceType, CLOUD_BASIC: HDD cloud disk, CLOUD_PREMIUM: Premium Cloud Storage, CLOUD_SSD: SSD, CLOUD_HSSD: Enhanced SSD, CLOUD_TSSD: Tremendous SSD, CLOUD_BSSD: Balanced SSD.
         */
        dataDiskType: pulumi.Input<string>;
        /**
         * Decides whether the disk is deleted with instance(only applied to `CLOUD_BASIC`, `CLOUD_SSD` and `CLOUD_PREMIUM` disk with `POSTPAID_BY_HOUR` instance), default is true.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Decides whether the disk is deleted with instance(only applied to `CLOUD_BASIC`, `CLOUD_SSD` and `CLOUD_PREMIUM` disk with `PREPAID` instance), default is false.
         */
        deleteWithInstancePrepaid?: pulumi.Input<boolean>;
        /**
         * Decides whether the disk is encrypted. Default is `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD`.
         */
        throughputPerformance?: pulumi.Input<number>;
    }
}

export namespace Instances {
}

export namespace Invite {
    export interface OrganizationMemberOperationAuthFile {
        /**
         * File name.
         */
        name: pulumi.Input<string>;
        /**
         * File path.
         */
        url: pulumi.Input<string>;
    }

    export interface OrganizationMemberOperationTag {
        /**
         * Tag key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue: pulumi.Input<string>;
    }
}

export namespace Key {
}

export namespace Kms {
    export interface OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprint {
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * identity.
         */
        identity: pulumi.Input<string>;
    }
}

export namespace Kubernetes {
    export interface ClusterAttachmentWorkerConfig {
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigGpuArgs>;
        /**
         * This argument was deprecated, use `unschedulable` instead. Indicate to schedule the adding node or not. Default is true.
         *
         * @deprecated This argument was deprecated, use `unschedulable` instead.
         */
        isSchedule?: pulumi.Input<boolean>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
         */
        preStartUserScript?: pulumi.Input<string>;
        /**
         * Node taint.
         */
        taints?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigTaint>[]>;
        /**
         * Base64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ClusterAttachmentWorkerConfigOverrides {
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigOverridesDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * This argument was no longer supported by TencentCloud TKE. Docker graph path. Default is `/var/lib/docker`.
         *
         * @deprecated This argument was no longer supported by TencentCloud TKE.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * This argument was no longer supported by TencentCloud TKE. Custom parameter information related to the node. This is a white-list parameter.
         *
         * @deprecated This argument was no longer supported by TencentCloud TKE.
         */
        extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.ClusterAttachmentWorkerConfigOverridesGpuArgs>;
        /**
         * This argument was deprecated, use `unschedulable` instead. Indicate to schedule the adding node or not. Default is true.
         *
         * @deprecated This argument was deprecated, use `unschedulable` instead.
         */
        isSchedule?: pulumi.Input<boolean>;
        /**
         * This argument was no longer supported by TencentCloud TKE. Mount target. Default is not mounting.
         *
         * @deprecated This argument was no longer supported by TencentCloud TKE.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * This argument was no longer supported by TencentCloud TKE. Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
         *
         * @deprecated This argument was no longer supported by TencentCloud TKE.
         */
        preStartUserScript?: pulumi.Input<string>;
        /**
         * This argument was no longer supported by TencentCloud TKE. Base64-encoded User Data text, the length limit is 16KB.
         *
         * @deprecated This argument was no longer supported by TencentCloud TKE.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigOverridesDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentWorkerConfigOverridesGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ClusterAttachmentWorkerConfigTaint {
        /**
         * Effect of the taint.
         */
        effect?: pulumi.Input<string>;
        /**
         * Key of the taint.
         */
        key?: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value?: pulumi.Input<string>;
    }

    export interface ClusterAuthOptions {
        /**
         * If set to `true`, the rbac rule will be created automatically which allow anonymous user to access '/.well-known/openid-configuration' and '/openid/v1/jwks'.
         */
        autoCreateDiscoveryAnonymousAuth?: pulumi.Input<boolean>;
        /**
         * Specify service-account-issuer. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
         */
        issuer?: pulumi.Input<string>;
        /**
         * Specify service-account-jwks-uri. If useTkeDefault is set to `true`, please do not set this field, it will be ignored anyway.
         */
        jwksUri?: pulumi.Input<string>;
        /**
         * If set to `true`, the issuer and jwksUri will be generated automatically by tke, please do not set issuer and jwks_uri, and they will be ignored.
         */
        useTkeDefault?: pulumi.Input<boolean>;
    }

    export interface ClusterClusterAudit {
        /**
         * when you want to close the cluster audit log or delete the cluster, you can use this parameter to determine whether the audit log set and topic created by default will be deleted.
         */
        deleteAuditLogAndTopic?: pulumi.Input<boolean>;
        /**
         * Specify weather the Cluster Audit enabled. NOTE: Enable Cluster Audit will also auto install Log Agent.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specify id of existing CLS log set, or auto create a new set by leave it empty.
         */
        logSetId?: pulumi.Input<string>;
        /**
         * Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
         */
        topicId?: pulumi.Input<string>;
    }

    export interface ClusterClusterExtraArgs {
        /**
         * The customized parameters for kube-apiserver.
         */
        kubeApiservers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The customized parameters for kube-controller-manager.
         */
        kubeControllerManagers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The customized parameters for kube-scheduler.
         */
        kubeSchedulers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterEventPersistence {
        /**
         * when you want to close the cluster event persistence or delete the cluster, you can use this parameter to determine whether the event persistence log set and topic created by default will be deleted.
         */
        deleteEventLogAndTopic?: pulumi.Input<boolean>;
        /**
         * Specify weather the Event Persistence enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specify id of existing CLS log set, or auto create a new set by leave it empty.
         */
        logSetId?: pulumi.Input<string>;
        /**
         * Specify id of existing CLS log topic, or auto create a new topic by leave it empty.
         */
        topicId?: pulumi.Input<string>;
    }

    export interface ClusterExistInstance {
        /**
         * Custom mode cluster, you can specify the number of pods for each node. corresponding to the existed_instances_para.instance_ids parameter.
         */
        desiredPodNumbers?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Reinstallation parameters of an existing instance.
         */
        instancesPara?: pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesPara>;
        /**
         * Role of existed node. value:MASTER_ETCD or WORKER.
         */
        nodeRole?: pulumi.Input<string>;
    }

    export interface ClusterExistInstanceInstancesPara {
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * Cluster IDs.
         */
        instanceIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Advanced Node Settings. commonly used to attach existing instances.
         */
        masterConfig?: pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesParaMasterConfig>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterExistInstanceInstancesParaMasterConfig {
        /**
         * Configurations of data disk.
         */
        dataDisk?: pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesParaMasterConfigDataDisk>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNumber?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesParaMasterConfigExtraArgs>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesParaMasterConfigGpuArgs>;
        /**
         * Node label list.
         */
        labels?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesParaMasterConfigLabel>[]>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Node taint.
         */
        taints?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterExistInstanceInstancesParaMasterConfigTaint>[]>;
        /**
         * Set whether the joined nodes participate in scheduling, with a default value of 0, indicating participation in scheduling; Non 0 means not participating in scheduling.
         */
        unschedulable?: pulumi.Input<number>;
        /**
         * User script encoded in base64, which will be executed after the k8s component runs. The user needs to ensure the script's reentrant and retry logic. The script and its generated log files can be viewed in the node path /data/ccs_userscript/. If the node needs to be initialized before joining the schedule, it can be used in conjunction with the `unschedulable` parameter. After the final initialization of the userScript is completed, add the command "kubectl uncordon nodename --kubeconfig=/root/.kube/config" to add the node to the schedule.
         */
        userScript?: pulumi.Input<string>;
    }

    export interface ClusterExistInstanceInstancesParaMasterConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ClusterExistInstanceInstancesParaMasterConfigExtraArgs {
        /**
         * Kubelet custom parameter. The parameter format is ["k1=v1", "k1=v2"].
         */
        kubelets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterExistInstanceInstancesParaMasterConfigGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ClusterExistInstanceInstancesParaMasterConfigLabel {
        /**
         * Name of map.
         */
        name: pulumi.Input<string>;
        /**
         * Value of map.
         */
        value: pulumi.Input<string>;
    }

    export interface ClusterExistInstanceInstancesParaMasterConfigTaint {
        /**
         * Effect of the taint.
         */
        effect?: pulumi.Input<string>;
        /**
         * Key of the taint.
         */
        key?: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value?: pulumi.Input<string>;
    }

    export interface ClusterExtensionAddon {
        /**
         * Add-on name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter of the add-on resource object in JSON string format, please check the example at the top of page for reference.
         */
        param: pulumi.Input<string>;
    }

    export interface ClusterLogAgent {
        /**
         * Whether the log agent enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Kubelet root directory as the literal.
         */
        kubeletRootDir?: pulumi.Input<string>;
    }

    export interface ClusterMasterAttachmentExtraArgs {
        /**
         * etcd custom parameters. Only supports independent clusters.
         */
        etcds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Kube apiserver custom parameters. The parameter format is ["k1=v1", "k1=v2"].
         */
        kubeApiServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Kube controller manager custom parameters.
         */
        kubeControllerManagers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * kube scheduler custom parameters.
         */
        kubeSchedulers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterMasterAttachmentMasterConfig {
        /**
         * Configurations of data disk.
         */
        dataDisk?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfigDataDisk>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNumber?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfigExtraArgs>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfigGpuArgs>;
        /**
         * Node label list.
         */
        labels?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfigLabel>[]>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Node taint.
         */
        taints?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfigTaint>[]>;
        /**
         * Set whether the joined nodes participate in scheduling, with a default value of 0, indicating participation in scheduling; Non 0 means not participating in scheduling.
         */
        unschedulable?: pulumi.Input<number>;
        /**
         * User script encoded in base64, which will be executed after the k8s component runs. The user needs to ensure the script's reentrant and retry logic. The script and its generated log files can be viewed in the node path /data/ccs_userscript/. If the node needs to be initialized before joining the schedule, it can be used in conjunction with the `unschedulable` parameter. After the final initialization of the userScript is completed, add the command "kubectl uncordon nodename --kubeconfig=/root/.kube/config" to add the node to the schedule.
         */
        userScript?: pulumi.Input<string>;
    }

    export interface ClusterMasterAttachmentMasterConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ClusterMasterAttachmentMasterConfigExtraArgs {
        /**
         * Kubelet custom parameter. The parameter format is ["k1=v1", "k1=v2"].
         */
        kubelets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterMasterAttachmentMasterConfigGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ClusterMasterAttachmentMasterConfigLabel {
        /**
         * Name of map.
         */
        name: pulumi.Input<string>;
        /**
         * Value of map.
         */
        value: pulumi.Input<string>;
    }

    export interface ClusterMasterAttachmentMasterConfigTaint {
        /**
         * Effect of the taint.
         */
        effect?: pulumi.Input<string>;
        /**
         * Key of the taint.
         */
        key?: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value?: pulumi.Input<string>;
    }

    export interface ClusterMasterConfig {
        /**
         * Indicates which availability zone will be used.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * CAM role name authorized to access.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Number of cvm.
         */
        count?: pulumi.Input<number>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterMasterConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
         */
        disasterRecoverGroupIds?: pulumi.Input<string>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
         */
        hostname?: pulumi.Input<string>;
        /**
         * Id of cvm hpc cluster.
         */
        hpcClusterId?: pulumi.Input<string>;
        /**
         * The valid image id, format of img-xxx. Note: `imgId` will be replaced with the image corresponding to TKE `clusterOs`.
         */
        imgId?: pulumi.Input<string>;
        /**
         * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Name of the CVMs.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is 0.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<string>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private network ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
         */
        systemDiskType?: pulumi.Input<string>;
        /**
         * ase64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterMasterConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Indicates whether to encrypt data disk, default `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ClusterNodePoolGlobalConfig {
        /**
         * Indicates which scale-out method will be used when there are multiple scaling groups. Valid values: `random` - select a random scaling group, `most-pods` - select the scaling group that can schedule the most pods, `least-waste` - select the scaling group that can ensure the fewest remaining resources after Pod scheduling.
         */
        expander?: pulumi.Input<string>;
        /**
         * Whether to ignore DaemonSet pods by default when calculating resource usage.
         */
        ignoreDaemonSetsUtilization?: pulumi.Input<boolean>;
        /**
         * Indicates whether to enable scale-in.
         */
        isScaleInEnabled?: pulumi.Input<boolean>;
        /**
         * Max concurrent scale-in volume.
         */
        maxConcurrentScaleIn?: pulumi.Input<number>;
        /**
         * Number of minutes after cluster scale-out when the system starts judging whether to perform scale-in.
         */
        scaleInDelay?: pulumi.Input<number>;
        /**
         * Number of consecutive minutes of idleness after which the node is subject to scale-in.
         */
        scaleInUnneededTime?: pulumi.Input<number>;
        /**
         * Percentage of node resource usage below which the node is considered to be idle.
         */
        scaleInUtilizationThreshold?: pulumi.Input<number>;
        /**
         * During scale-in, ignore nodes with local storage pods.
         */
        skipNodesWithLocalStorage?: pulumi.Input<boolean>;
        /**
         * During scale-in, ignore nodes with pods in the kube-system namespace that are not managed by DaemonSet.
         */
        skipNodesWithSystemPods?: pulumi.Input<boolean>;
    }

    export interface ClusterResourceDeleteOption {
        /**
         * The deletion mode of CBS resources when the cluster is deleted, `terminate` (destroy), `retain` (retain). Other resources are deleted by default.
         */
        deleteMode: pulumi.Input<string>;
        /**
         * Resource type, valid values are `CBS`, `CLB`, and `CVM`.
         */
        resourceType: pulumi.Input<string>;
        /**
         * Whether to skip resources with deletion protection enabled, the default is false.
         */
        skipDeletionProtection?: pulumi.Input<boolean>;
    }

    export interface ClusterWorkerConfig {
        /**
         * Indicates which availability zone will be used.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * CAM role name authorized to access.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Number of cvm.
         */
        count?: pulumi.Input<number>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterWorkerConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
         */
        disasterRecoverGroupIds?: pulumi.Input<string>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
         */
        hostname?: pulumi.Input<string>;
        /**
         * Id of cvm hpc cluster.
         */
        hpcClusterId?: pulumi.Input<string>;
        /**
         * The valid image id, format of img-xxx. Note: `imgId` will be replaced with the image corresponding to TKE `clusterOs`.
         */
        imgId?: pulumi.Input<string>;
        /**
         * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Name of the CVMs.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is 0.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<string>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private network ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
         */
        systemDiskType?: pulumi.Input<string>;
        /**
         * ase64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ClusterWorkerConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Indicates whether to encrypt data disk, default `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ClusterWorkerInstancesList {
        /**
         * Information of the cvm when it is failed.
         */
        failedReason?: pulumi.Input<string>;
        /**
         * ID of the cvm.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Role of the cvm.
         */
        instanceRole?: pulumi.Input<string>;
        /**
         * State of the cvm.
         */
        instanceState?: pulumi.Input<string>;
        /**
         * LAN IP of the cvm.
         */
        lanIp?: pulumi.Input<string>;
    }

    export interface EncryptionProtectionKmsConfiguration {
        /**
         * kms id.
         */
        keyId?: pulumi.Input<string>;
        /**
         * kms region.
         */
        kmsRegion?: pulumi.Input<string>;
    }

    export interface GetClusterInstancesFilter {
        /**
         * The attribute name, if there are multiple filters, the relationship between the filters is a logical AND relationship.
         */
        name: string;
        /**
         * Attribute values, if there are multiple values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: string[];
    }

    export interface GetClusterInstancesFilterArgs {
        /**
         * The attribute name, if there are multiple filters, the relationship between the filters is a logical AND relationship.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute values, if there are multiple values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetClusterNativeNodePoolsFilter {
        /**
         * The attribute name, if there are multiple filters, the relationship between the filters is a logical AND relationship.
         */
        name: string;
        /**
         * Attribute values, if there are multiple values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: string[];
    }

    export interface GetClusterNativeNodePoolsFilterArgs {
        /**
         * The attribute name, if there are multiple filters, the relationship between the filters is a logical AND relationship.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute values, if there are multiple values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetClusterNodePoolsFilter {
        /**
         * The attribute name, if there are multiple filters, the relationship between the filters is a logical AND relationship.
         */
        name: string;
        /**
         * Attribute values, if there are multiple values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: string[];
    }

    export interface GetClusterNodePoolsFilterArgs {
        /**
         * The attribute name, if there are multiple filters, the relationship between the filters is a logical AND relationship.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute values, if there are multiple values in the same filter, the relationship between values under the same filter is a logical OR relationship.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface HealthCheckPolicyRule {
        /**
         * Enable repair or not.
         */
        autoRepairEnabled: pulumi.Input<boolean>;
        /**
         * Enable detection of this project or not.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Health check rule details.
         */
        name: pulumi.Input<string>;
    }

    export interface NativeNodePoolAnnotation {
        /**
         * Name in the map table.
         */
        name: pulumi.Input<string>;
        /**
         * Value in the map table.
         */
        value: pulumi.Input<string>;
    }

    export interface NativeNodePoolLabel {
        /**
         * Name in the map table.
         */
        name: pulumi.Input<string>;
        /**
         * Value in map table.
         */
        value: pulumi.Input<string>;
    }

    export interface NativeNodePoolNative {
        /**
         * Whether to enable self-healing ability.
         */
        autoRepair?: pulumi.Input<boolean>;
        /**
         * Native node pool data disk list.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeDataDisk>[]>;
        /**
         * Whether to enable elastic scaling.
         */
        enableAutoscaling?: pulumi.Input<boolean>;
        /**
         * Fault self-healing rule name.
         */
        healthCheckPolicyName?: pulumi.Input<string>;
        /**
         * Native node pool hostName pattern string.
         */
        hostNamePattern?: pulumi.Input<string>;
        /**
         * Billing configuration for yearly and monthly models.
         */
        instanceChargePrepaid?: pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeInstanceChargePrepaid>;
        /**
         * Node billing type. `PREPAID` is a yearly and monthly subscription, `POSTPAID_BY_HOUR` is a pay-as-you-go plan. The default is `POSTPAID_BY_HOUR`.
         */
        instanceChargeType: pulumi.Input<string>;
        /**
         * Model list.
         */
        instanceTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Public network bandwidth settings.
         */
        internetAccessible?: pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeInternetAccessible>;
        /**
         * Node pool ssh public key id array.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Kubelet custom parameters.
         */
        kubeletArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Predefined scripts.
         */
        lifecycle?: pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeLifecycle>;
        /**
         * Node pool type. Example value: `NativeCVM` or `Native`. Default is `Native`.
         */
        machineType?: pulumi.Input<string>;
        /**
         * Node pool management parameter settings.
         */
        management?: pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeManagement>;
        /**
         * Desired number of nodes.
         */
        replicas?: pulumi.Input<number>;
        /**
         * Runtime root directory.
         */
        runtimeRootDir?: pulumi.Input<string>;
        /**
         * Node pool scaling configuration.
         */
        scaling?: pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeScaling>;
        /**
         * Security group list.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Subnet list.
         */
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * System disk configuration.
         */
        systemDisk: pulumi.Input<inputs.Kubernetes.NativeNodePoolNativeSystemDisk>;
    }

    export interface NativeNodePoolNativeDataDisk {
        /**
         * Whether to automatically format the disk and mount it.
         */
        autoFormatAndMount: pulumi.Input<boolean>;
        /**
         * Mount device name or partition name.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Cloud disk size (G).
         */
        diskSize: pulumi.Input<number>;
        /**
         * Cloud disk type. Valid values: `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_SSD`: cloud SSD disk, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD, `LOCAL_NVME`: local NVME disk.
         */
        diskType: pulumi.Input<string>;
        /**
         * Pass in this parameter to create an encrypted cloud disk. The value is fixed to `ENCRYPT`.
         */
        encrypt?: pulumi.Input<string>;
        /**
         * File system (ext3/ext4/xfs).
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Customize the key when purchasing an encrypted disk. When this parameter is passed in, the Encrypt parameter is not empty.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount directory.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Snapshot ID. If passed in, the cloud disk will be created based on this snapshot. The snapshot type must be a data disk snapshot.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Cloud disk performance, unit: MB/s. Use this parameter to purchase additional performance for the cloud disk.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface NativeNodePoolNativeInstanceChargePrepaid {
        /**
         * Postpaid billing cycle, unit (month): 1, 2, 3, 4, 5,, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60.
         */
        period: pulumi.Input<number>;
        /**
         * Prepaid renewal method:
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface NativeNodePoolNativeInternetAccessible {
        /**
         * Bandwidth package ID. Note: When ChargeType is BANDWIDTH_PACKAG, the value cannot be empty; otherwise, the value must be empty.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * Network billing method. Optional value is `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
         */
        chargeType: pulumi.Input<string>;
        /**
         * Maximum bandwidth output. Note: When chargeType is `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_POSTPAID_BY_HOUR`, the valid range is 1~100. When chargeType is `BANDWIDTH_PACKAG`, the valid range is 1~2000.
         */
        maxBandwidthOut: pulumi.Input<number>;
    }

    export interface NativeNodePoolNativeLifecycle {
        /**
         * Custom script after node initialization.
         */
        postInit?: pulumi.Input<string>;
        /**
         * Custom script before node initialization.
         */
        preInit?: pulumi.Input<string>;
    }

    export interface NativeNodePoolNativeManagement {
        /**
         * Hosts configuration.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Kernel parameter configuration.
         */
        kernelArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Dns configuration.
         */
        nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NativeNodePoolNativeScaling {
        /**
         * Node pool expansion strategy. `ZoneEquality`: multiple availability zones are broken up; `ZonePriority`: the preferred availability zone takes precedence.
         */
        createPolicy?: pulumi.Input<string>;
        /**
         * Maximum number of replicas in node pool.
         */
        maxReplicas?: pulumi.Input<number>;
        /**
         * Minimum number of replicas in node pool.
         */
        minReplicas?: pulumi.Input<number>;
    }

    export interface NativeNodePoolNativeSystemDisk {
        /**
         * Cloud disk size (G).
         */
        diskSize: pulumi.Input<number>;
        /**
         * Cloud disk type. Valid values: `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_SSD`: cloud SSD disk, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD.
         */
        diskType: pulumi.Input<string>;
    }

    export interface NativeNodePoolTag {
        /**
         * The resource type bound to the label.
         */
        resourceType?: pulumi.Input<string>;
        /**
         * Tag pair list.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.Kubernetes.NativeNodePoolTagTag>[]>;
    }

    export interface NativeNodePoolTagTag {
        /**
         * Tag Key.
         */
        key?: pulumi.Input<string>;
        /**
         * Tag Value.
         */
        value?: pulumi.Input<string>;
    }

    export interface NativeNodePoolTaint {
        /**
         * Effect of the taint.
         */
        effect?: pulumi.Input<string>;
        /**
         * Key of the taint.
         */
        key?: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value?: pulumi.Input<string>;
    }

    export interface NodePoolAnnotation {
        /**
         * Name in the map table.
         */
        name: pulumi.Input<string>;
        /**
         * Value in the map table.
         */
        value: pulumi.Input<string>;
    }

    export interface NodePoolAutoScalingConfig {
        /**
         * Backup CVM instance types if specified instance type sold out or mismatch.
         */
        backupInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * Name of cam role.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.NodePoolAutoScalingConfigDataDisk>[]>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        hostName?: pulumi.Input<string>;
        /**
         * The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        hostNameStyle?: pulumi.Input<string>;
        /**
         * Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (in month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default value: `ORIGINAL`. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
         */
        instanceNameStyle?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is `0`.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ordered security groups to which a CVM instance belongs.
         */
        orderlySecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Password to access.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * The order of elements in this field cannot be guaranteed. Use `orderlySecurityGroupIds` instead. Security groups to which a CVM instance belongs.
         *
         * @deprecated The order of elements in this field cannot be guaranteed. Use `orderlySecurityGroupIds` instead.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Type of spot instance, only support `one-time` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
         */
        spotInstanceType?: pulumi.Input<string>;
        /**
         * Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
         */
        spotMaxPrice?: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * Type of a CVM disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`. Default is `CLOUD_PREMIUM`.
         */
        systemDiskType?: pulumi.Input<string>;
    }

    export interface NodePoolAutoScalingConfigDataDisk {
        /**
         * Indicates whether the disk remove after instance terminated. Default is `false`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `dataSize` > 460GB.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface NodePoolNodeConfig {
        /**
         * Configurations of data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.NodePoolNodeConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when the cluster is podCIDR.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Docker graph path. Default is `/var/lib/docker`.
         */
        dockerGraphPath?: pulumi.Input<string>;
        /**
         * Custom parameter information related to the node. This is a white-list parameter.
         */
        extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * GPU driver parameters.
         */
        gpuArgs?: pulumi.Input<inputs.Kubernetes.NodePoolNodeConfigGpuArgs>;
        /**
         * Indicate to schedule the adding node or not. Default is true.
         */
        isSchedule?: pulumi.Input<boolean>;
        /**
         * Mount target. Default is not mounting.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
         */
        preStartUserScript?: pulumi.Input<string>;
        /**
         * Base64-encoded User Data text, the length limit is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface NodePoolNodeConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface NodePoolNodeConfigGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface NodePoolTaint {
        /**
         * Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
         */
        effect: pulumi.Input<string>;
        /**
         * Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
         */
        key: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value: pulumi.Input<string>;
    }

    export interface ScaleWorkerDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * Mount target.
         */
        mountTarget?: pulumi.Input<string>;
    }

    export interface ScaleWorkerGpuArgs {
        /**
         * CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        cuda?: pulumi.Input<{[key: string]: any}>;
        /**
         * cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `docName`: Doc name of cuDNN; `devName`: Dev name of cuDNN.
         */
        cudnn?: pulumi.Input<{[key: string]: any}>;
        /**
         * Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
         */
        customDriver?: pulumi.Input<{[key: string]: any}>;
        /**
         * GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
         */
        driver?: pulumi.Input<{[key: string]: any}>;
        /**
         * Whether to enable MIG.
         */
        migEnable?: pulumi.Input<boolean>;
    }

    export interface ScaleWorkerTaint {
        /**
         * Effect of the taint.
         */
        effect?: pulumi.Input<string>;
        /**
         * Key of the taint.
         */
        key?: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value?: pulumi.Input<string>;
    }

    export interface ScaleWorkerWorkerConfig {
        /**
         * Indicates which availability zone will be used.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * CAM role name authorized to access.
         */
        camRoleName?: pulumi.Input<string>;
        /**
         * Number of cvm.
         */
        count?: pulumi.Input<number>;
        /**
         * Configurations of cvm data disk.
         */
        dataDisks?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ScaleWorkerWorkerConfigDataDisk>[]>;
        /**
         * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desiredPodNum` or none.
         */
        desiredPodNum?: pulumi.Input<number>;
        /**
         * Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
         */
        disasterRecoverGroupIds?: pulumi.Input<string>;
        /**
         * To specify whether to enable cloud monitor service. Default is TRUE.
         */
        enhancedMonitorService?: pulumi.Input<boolean>;
        /**
         * To specify whether to enable cloud security service. Default is TRUE.
         */
        enhancedSecurityService?: pulumi.Input<boolean>;
        /**
         * The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
         */
        hostname?: pulumi.Input<string>;
        /**
         * Id of cvm hpc cluster.
         */
        hpcClusterId?: pulumi.Input<string>;
        /**
         * The valid image id, format of img-xxx.
         */
        imgId?: pulumi.Input<string>;
        /**
         * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
         */
        instanceChargeType?: pulumi.Input<string>;
        /**
         * The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
         */
        instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
        /**
         * Name of the CVMs.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Specified types of CVM instance.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Max bandwidth of Internet access in Mbps. Default is 0.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * ID list of keys, should be set if `password` not set.
         */
        keyIds?: pulumi.Input<string>;
        /**
         * Password to access, should be set if `keyIds` not set.
         */
        password?: pulumi.Input<string>;
        /**
         * Specify whether to assign an Internet IP address.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
        /**
         * Security groups to which a CVM instance belongs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private network ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Volume of system disk in GB. Default is `50`.
         */
        systemDiskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
         */
        systemDiskType?: pulumi.Input<string>;
        /**
         * User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ScaleWorkerWorkerConfigDataDisk {
        /**
         * Indicate whether to auto format and mount or not. Default is `false`.
         *
         * @deprecated This argument was deprecated, use `dataDisk` instead.
         */
        autoFormatAndMount?: pulumi.Input<boolean>;
        /**
         * The name of the device or partition to mount.
         *
         * @deprecated This argument was deprecated, use `dataDisk` instead.
         */
        diskPartition?: pulumi.Input<string>;
        /**
         * Volume of disk in GB. Default is `0`.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Indicates whether to encrypt data disk, default `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * File system, e.g. `ext3/ext4/xfs`.
         *
         * @deprecated This argument was deprecated, use `dataDisk` instead.
         */
        fileSystem?: pulumi.Input<string>;
        /**
         * ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Mount target.
         *
         * @deprecated This argument was deprecated, use `dataDisk` instead.
         */
        mountTarget?: pulumi.Input<string>;
        /**
         * Data disk snapshot ID.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ScaleWorkerWorkerInstancesList {
        /**
         * Information of the cvm when it is failed.
         */
        failedReason?: pulumi.Input<string>;
        /**
         * ID of the cvm.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Role of the cvm.
         */
        instanceRole?: pulumi.Input<string>;
        /**
         * State of the cvm.
         */
        instanceState?: pulumi.Input<string>;
        /**
         * LAN IP of the cvm.
         */
        lanIp?: pulumi.Input<string>;
    }

    export interface ServerlessNodePoolServerlessNode {
        /**
         * display name of serverless node.
         */
        displayName?: pulumi.Input<string>;
        /**
         * subnet id of serverless node.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface ServerlessNodePoolTaint {
        /**
         * Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
         */
        effect: pulumi.Input<string>;
        /**
         * Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
         */
        key: pulumi.Input<string>;
        /**
         * Value of the taint.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Lighthouse {
    export interface DiskAutoMountConfiguration {
        /**
         * The file system type. Value: ext4, xfs. Only instances of the Linux operating system can pass in this parameter, and if it is not passed, it defaults to ext4.
         */
        fileSystemType?: pulumi.Input<string>;
        /**
         * Instance ID to be mounted. The specified instance must be in the Running state.
         */
        instanceId: pulumi.Input<string>;
        /**
         * The mount point within the instance. Only instances of the Linux operating system can pass in this parameter, and if it is not passed, it will be mounted under the /data/disk path by default.
         */
        mountPoint?: pulumi.Input<string>;
    }

    export interface DiskDiskChargePrepaid {
        /**
         * new purchase cycle.
         */
        period: pulumi.Input<number>;
        /**
         * Automatic renewal flag. Value: `NOTIFY_AND_AUTO_RENEW`: Notice expires and auto-renews. `NOTIFY_AND_MANUAL_RENEW`: Notification expires without automatic renewal, users need to manually renew. `DISABLE_NOTIFY_AND_AUTO_RENEW`: No automatic renewal and no notification. Default: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the disk will be automatically renewed monthly when the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
        /**
         * newly purchased unit. Default: m.
         */
        timeUnit?: pulumi.Input<string>;
    }

    export interface FirewallRuleFirewallRule {
        /**
         * Valid values are ACCEPT, DROP. Default value is ACCEPT.
         */
        action?: pulumi.Input<string>;
        /**
         * IP range or IP (mutually exclusive). Default value is 0.0.0.0/0, which indicates all sources.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Firewall rule description.
         */
        firewallRuleDescription?: pulumi.Input<string>;
        /**
         * Port. Valid values are ALL, one single port, multiple ports separated by commas, or port range indicated by a minus sign.
         */
        port?: pulumi.Input<string>;
        /**
         * Protocol. Valid values are TCP, UDP, ICMP, ALL.
         */
        protocol: pulumi.Input<string>;
    }

    export interface FirewallTemplateTemplateRule {
        /**
         * Action. Values: ACCEPT, DROP. The default is `ACCEPT`.
         */
        action?: pulumi.Input<string>;
        /**
         * Network segment or IP (mutually exclusive). The default is `0.0.0.0`, indicating all sources.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Firewall rule description.
         */
        firewallRuleDescription?: pulumi.Input<string>;
        /**
         * Port. Values: ALL, Separate ports, comma-separated discrete ports, minus sign-separated port ranges.
         */
        port?: pulumi.Input<string>;
        /**
         * Protocol. Values: TCP, UDP, ICMP, ALL.
         */
        protocol: pulumi.Input<string>;
    }

    export interface GetBundleFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetBundleFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDiskConfigFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetDiskConfigFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDisksFilter {
        /**
         * Fields to be filtered. Valid names: `disk-id`: Filters by disk id; `instance-id`: Filter by instance id; `disk-name`: Filter by disk name; `zone`: Filter by zone; `disk-usage`: Filter by disk usage(Values: `SYSTEM_DISK` or `DATA_DISK`); `disk-state`: Filter by disk state.
         */
        name: string;
        /**
         * Value of the field.
         */
        values: string[];
    }

    export interface GetDisksFilterArgs {
        /**
         * Fields to be filtered. Valid names: `disk-id`: Filters by disk id; `instance-id`: Filter by instance id; `disk-name`: Filter by disk name; `zone`: Filter by zone; `disk-usage`: Filter by disk usage(Values: `SYSTEM_DISK` or `DATA_DISK`); `disk-state`: Filter by disk state.
         */
        name: pulumi.Input<string>;
        /**
         * Value of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetModifyInstanceBundleFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetModifyInstanceBundleFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetResetInstanceBlueprintFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter value of field.
         */
        values: string[];
    }

    export interface GetResetInstanceBlueprintFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter value of field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceContainer {
        /**
         * The command to run.
         */
        command?: pulumi.Input<string>;
        /**
         * Container image address.
         */
        containerImage?: pulumi.Input<string>;
        /**
         * Container name.
         */
        containerName?: pulumi.Input<string>;
        /**
         * List of environment variables.
         */
        envs?: pulumi.Input<pulumi.Input<inputs.Lighthouse.InstanceContainerEnv>[]>;
        /**
         * List of mappings of container ports and host ports.
         */
        publishPorts?: pulumi.Input<pulumi.Input<inputs.Lighthouse.InstanceContainerPublishPort>[]>;
        /**
         * List of container mount volumes.
         */
        volumes?: pulumi.Input<pulumi.Input<inputs.Lighthouse.InstanceContainerVolume>[]>;
    }

    export interface InstanceContainerEnv {
        /**
         * Environment variable key.
         */
        key: pulumi.Input<string>;
        /**
         * Environment variable value.
         */
        value: pulumi.Input<string>;
    }

    export interface InstanceContainerPublishPort {
        /**
         * Container port.
         */
        containerPort: pulumi.Input<number>;
        /**
         * Host port.
         */
        hostPort: pulumi.Input<number>;
        /**
         * External IP. It defaults to 0.0.0.0.
         */
        ip?: pulumi.Input<string>;
        /**
         * The protocol defaults to tcp. Valid values: tcp, udp and sctp.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface InstanceContainerVolume {
        /**
         * Container path.
         */
        containerPath: pulumi.Input<string>;
        /**
         * Host path.
         */
        hostPath: pulumi.Input<string>;
    }

    export interface InstanceLoginConfiguration {
        /**
         * whether auto generate password. if false, need set password.
         */
        autoGeneratePassword: pulumi.Input<string>;
        /**
         * Login password.
         */
        password?: pulumi.Input<string>;
    }

    export interface RenewDiskRenewDiskChargePrepaid {
        /**
         * Current instance expiration time. Such as 2018-01-01 00:00:00. Specifying this parameter can align the expiration time of the instance attached to the disk. One of this parameter and Period must be specified, and cannot be specified at the same time.
         */
        curInstanceDeadline?: pulumi.Input<string>;
        /**
         * Renewal period.
         */
        period?: pulumi.Input<number>;
        /**
         * Automatic renewal falg. Value:NOTIFY_AND_AUTO_RENEW: Notice expires and auto-renews.NOTIFY_AND_MANUAL_RENEW: Notification expires without automatic renewal, users need to manually renew.DISABLE_NOTIFY_AND_AUTO_RENEW: No automatic renewal and no notification.Default: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the disk will be automatically renewed monthly when the account balance is sufficient.
         */
        renewFlag?: pulumi.Input<string>;
        /**
         * newly purchased unit. Default: m.
         */
        timeUnit?: pulumi.Input<string>;
    }

    export interface RenewInstanceInstanceChargePrepaid {
        /**
         * The duration of purchasing an instance. Unit is month. Valid values are (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60).
         */
        period: pulumi.Input<number>;
        /**
         * Automatic renewal logo. Values:
         */
        renewFlag?: pulumi.Input<string>;
    }
}

export namespace Lite {
    export interface GetHbaseInstancesFilter {
        /**
         * Field name.
         */
        name: string;
        /**
         * Filter field value.
         */
        values: string[];
    }

    export interface GetHbaseInstancesFilterArgs {
        /**
         * Field name.
         */
        name: pulumi.Input<string>;
        /**
         * Filter field value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface HbaseInstanceTag {
        /**
         * Tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface HbaseInstanceZoneSetting {
        /**
         * Number of nodes.
         */
        nodeNum: pulumi.Input<number>;
        /**
         * Private network related information configuration. This parameter can be used to specify the ID of the private network, subnet ID, and other information.
         */
        vpcSettings: pulumi.Input<inputs.Lite.HbaseInstanceZoneSettingVpcSettings>;
        /**
         * The availability zone to which the instance belongs, such as ap-guangzhou-1.
         */
        zone: pulumi.Input<string>;
    }

    export interface HbaseInstanceZoneSettingVpcSettings {
        /**
         * Subnet ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        vpcId: pulumi.Input<string>;
    }
}

export namespace Mariadb {
    export interface AccountPrivilegesAccounts {
        /**
         * user host.
         */
        host: pulumi.Input<string>;
        /**
         * user name.
         */
        user: pulumi.Input<string>;
    }

    export interface AccountPrivilegesColumnPrivilege {
        /**
         * Column name.
         */
        column: pulumi.Input<string>;
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesDatabasePrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesFunctionPrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesProcedurePrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Procedure name.
         */
        procedure: pulumi.Input<string>;
    }

    export interface AccountPrivilegesTablePrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        table: pulumi.Input<string>;
    }

    export interface AccountPrivilegesViewPrivilege {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Permission information.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * View name.
         */
        view: pulumi.Input<string>;
    }

    export interface InstanceInitParam {
        /**
         * parameter name.
         */
        param: pulumi.Input<string>;
        /**
         * parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface ParametersParam {
        /**
         * parameter name.
         */
        param: pulumi.Input<string>;
        /**
         * parameter value.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Mdl {
    export interface StreamLiveInputInputSetting {
        /**
         * Application name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
         */
        appName?: pulumi.Input<string>;
        /**
         * Delayed time (ms) for playback, which is valid if `Type` is `RTMP_PUSH`Value range: 0 (default) or 10000-600000The value must be a multiple of 1,000.Note: This field may return `null`, indicating that no valid value was found.
         */
        delayTime?: pulumi.Input<number>;
        /**
         * RTP/UDP input address, which does not need to be entered for the input parameter.Note: this field may return null, indicating that no valid values can be obtained.
         */
        inputAddress?: pulumi.Input<string>;
        /**
         * The domain of an SRT_PUSH address. If this is a request parameter, you do not need to specify it.Note: This field may return `null`, indicating that no valid value was found.
         */
        inputDomain?: pulumi.Input<string>;
        /**
         * The password, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
         */
        password?: pulumi.Input<string>;
        /**
         * Source type for stream pulling and relaying. To pull content from private-read COS buckets under the current account, set this parameter to `TencentCOS`; otherwise, leave it empty.Note: this field may return `null`, indicating that no valid value was found.
         */
        sourceType?: pulumi.Input<string>;
        /**
         * Source URL, which is valid if `Type` is `RTMP_PULL`, `HLS_PULL`, or `MP4_PULL` and can contain 1-512 charactersNote: This field may return `null`, indicating that no valid value was found.
         */
        sourceUrl?: pulumi.Input<string>;
        /**
         * Stream name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
         */
        streamName?: pulumi.Input<string>;
        /**
         * The username, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
         */
        userName?: pulumi.Input<string>;
    }
}

export namespace Mongodb {
    export interface InstanceAccountAuthRole {
        /**
         * Permission information of the current account. 0: No permission. 1: read-only. 2: Write only. 3: Read and write.
         */
        mask: pulumi.Input<number>;
        /**
         * Refers to the name of the database with the current account permissions.*: Indicates all databases. db.name: Indicates the database of a specific name.
         */
        namespace: pulumi.Input<string>;
    }

    export interface InstanceAddNodeList {
        /**
         * The node role that needs to be added.
         * - SECONDARY: Mongod node;
         * - READONLY: read-only node;
         * - MONGOS: Mongos node.
         */
        role: pulumi.Input<string>;
        /**
         * The availability zone corresponding to the node.
         * - single availability zone, where all nodes are in the same availability zone;
         * - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
         */
        zone: pulumi.Input<string>;
    }

    export interface InstanceBackupDownloadTaskBackupSet {
        /**
         * Replication Id.
         */
        replicaSetId: pulumi.Input<string>;
    }

    export interface InstanceRemoveNodeList {
        /**
         * The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
         */
        nodeName: pulumi.Input<string>;
        /**
         * The node role that needs to be deleted.
         * - SECONDARY: Mongod node;
         * - READONLY: read-only node;
         * - MONGOS: Mongos node.
         */
        role: pulumi.Input<string>;
        /**
         * The availability zone corresponding to the node.
         * - single availability zone, where all nodes are in the same availability zone;
         * - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
         */
        zone: pulumi.Input<string>;
    }

    export interface InstanceStandbyInstanceList {
        /**
         * Indicates the ID of standby instance.
         */
        standbyInstanceId?: pulumi.Input<string>;
        /**
         * Indicates the region of standby instance.
         */
        standbyInstanceRegion?: pulumi.Input<string>;
    }

    export interface InstanceTransparentDataEncryptionKeyInfoList {
        /**
         * Instance and key binding time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Master Key ID.
         */
        keyId?: pulumi.Input<string>;
        /**
         * Master key name.
         */
        keyName?: pulumi.Input<string>;
        /**
         * Key origin.
         */
        keyOrigin?: pulumi.Input<string>;
        /**
         * Purpose of the key.
         */
        keyUsage?: pulumi.Input<string>;
        /**
         * Key status.
         */
        status?: pulumi.Input<string>;
    }
}

export namespace Monitor {
    export interface AlarmNoticeClsNotice {
        /**
         * Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
         */
        enable?: pulumi.Input<number>;
        /**
         * Log collection Id.
         */
        logSetId: pulumi.Input<string>;
        /**
         * Regional.
         */
        region: pulumi.Input<string>;
        /**
         * Theme Id.
         */
        topicId: pulumi.Input<string>;
    }

    export interface AlarmNoticeUrlNotice {
        /**
         * Notification End Time Seconds at the start of a day.
         */
        endTime?: pulumi.Input<number>;
        /**
         * If passed verification `0` is no, `1` is yes. Default `0`.
         */
        isValid?: pulumi.Input<number>;
        /**
         * Notification Start Time Number of seconds at the start of a day.
         */
        startTime?: pulumi.Input<number>;
        /**
         * Callback URL (limited to 256 characters).
         */
        url: pulumi.Input<string>;
        /**
         * Verification code.
         */
        validationCode?: pulumi.Input<string>;
        /**
         * Notification period 1-7 indicates Monday to Sunday.
         */
        weekdays?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface AlarmNoticeUserNotice {
        /**
         * The number of seconds since the notification end time 00:00:00 (value range 0-86399).
         */
        endTime: pulumi.Input<number>;
        /**
         * User group ID list.
         */
        groupIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Contact notification required 0= No 1= Yes.
         */
        needPhoneArriveNotice?: pulumi.Input<number>;
        /**
         * Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
         */
        noticeWays: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
         */
        phoneCallType?: pulumi.Input<string>;
        /**
         * Number of seconds between polls (value range: 60-900).
         */
        phoneCircleInterval?: pulumi.Input<number>;
        /**
         * Number of telephone polls (value range: 1-5).
         */
        phoneCircleTimes?: pulumi.Input<number>;
        /**
         * Number of seconds between calls in a polling session (value range: 60-900).
         */
        phoneInnerInterval?: pulumi.Input<number>;
        /**
         * Telephone polling list.
         */
        phoneOrders?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Recipient Type USER=User GROUP=User Group.
         */
        receiverType: pulumi.Input<string>;
        /**
         * The number of seconds since the notification start time 00:00:00 (value range 0-86399).
         */
        startTime: pulumi.Input<number>;
        /**
         * User UID List.
         */
        userIds?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Notification period 1-7 indicates Monday to Sunday.
         */
        weekdays?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface AlarmPolicyConditions {
        /**
         * The and or relation of indicator alarm rule.
         */
        isUnionRule?: pulumi.Input<number>;
        /**
         * A list of metric trigger condition.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.Monitor.AlarmPolicyConditionsRule>[]>;
    }

    export interface AlarmPolicyConditionsRule {
        /**
         * Number of periods.
         */
        continuePeriod?: pulumi.Input<number>;
        /**
         * Metric display name, which is used in the output parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * Filter condition for one single trigger rule. Must set it when create tke-xxx rules.
         */
        filter?: pulumi.Input<inputs.Monitor.AlarmPolicyConditionsRuleFilter>;
        /**
         * Whether the alarm frequency increases exponentially.
         */
        isPowerNotice?: pulumi.Input<number>;
        /**
         * Metric name or event name.
         */
        metricName?: pulumi.Input<string>;
        /**
         * Alarm interval in seconds.
         */
        noticeFrequency?: pulumi.Input<number>;
        /**
         * Operator.
         */
        operator?: pulumi.Input<string>;
        /**
         * Statistical period in seconds.
         */
        period?: pulumi.Input<number>;
        /**
         * Trigger condition type.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * Unit, which is used in the output parameter.
         */
        unit?: pulumi.Input<string>;
        /**
         * Threshold.
         */
        value?: pulumi.Input<string>;
    }

    export interface AlarmPolicyConditionsRuleFilter {
        /**
         * JSON string generated by serializing the AlarmPolicyDimension two-dimensional array.
         */
        dimensions?: pulumi.Input<string>;
        /**
         * Filter condition type. Valid values: DIMENSION (uses dimensions for filtering).
         */
        type?: pulumi.Input<string>;
    }

    export interface AlarmPolicyEventCondition {
        /**
         * Number of periods.
         */
        continuePeriod?: pulumi.Input<number>;
        /**
         * Metric display name, which is used in the output parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * Filter condition for one single trigger rule. Must set it when create tke-xxx rules.
         */
        filter?: pulumi.Input<inputs.Monitor.AlarmPolicyEventConditionFilter>;
        /**
         * Whether the alarm frequency increases exponentially.
         */
        isPowerNotice?: pulumi.Input<number>;
        /**
         * Metric name or event name.
         */
        metricName?: pulumi.Input<string>;
        /**
         * Alarm interval in seconds.
         */
        noticeFrequency?: pulumi.Input<number>;
        /**
         * Operator.
         */
        operator?: pulumi.Input<string>;
        /**
         * Statistical period in seconds.
         */
        period?: pulumi.Input<number>;
        /**
         * Trigger condition type.
         */
        ruleType?: pulumi.Input<string>;
        /**
         * Unit, which is used in the output parameter.
         */
        unit?: pulumi.Input<string>;
        /**
         * Threshold.
         */
        value?: pulumi.Input<string>;
    }

    export interface AlarmPolicyEventConditionFilter {
        /**
         * JSON string generated by serializing the AlarmPolicyDimension two-dimensional array.
         */
        dimensions?: pulumi.Input<string>;
        /**
         * Filter condition type. Valid values: DIMENSION (uses dimensions for filtering).
         */
        type?: pulumi.Input<string>;
    }

    export interface AlarmPolicyFilter {
        /**
         * JSON string generated by serializing the AlarmPolicyDimension two-dimensional array.
         */
        dimensions?: pulumi.Input<string>;
        /**
         * Filter condition type. Valid values: DIMENSION (uses dimensions for filtering).
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmPolicyPolicyTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface AlarmPolicyTriggerTask {
        /**
         * Configuration information in JSON format.
         */
        taskConfig: pulumi.Input<string>;
        /**
         * Triggered task type.
         */
        type: pulumi.Input<string>;
    }

    export interface BindingReceiverReceivers {
        /**
         * End of alarm period. Meaning with `startTime`.
         */
        endTime?: pulumi.Input<number>;
        /**
         * Method of warning notification.Optional `CALL`,`EMAIL`,`SITE`,`SMS`,`WECHAT`.
         */
        notifyWays: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alert sending language. Optional `en-US`,`zh-CN`.
         */
        receiveLanguage?: pulumi.Input<string>;
        /**
         * Alarm receive group ID list.
         */
        receiverGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Receive type. Optional `group`,`user`.
         */
        receiverType: pulumi.Input<string>;
        /**
         * Alarm receiver ID list.
         */
        receiverUserLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Alarm period start time. Valid value ranges: (0~86399). which removes the date after it is converted to Beijing time as a Unix timestamp, for example 7200 means '10:0:0'.
         */
        startTime?: pulumi.Input<number>;
    }

    export interface GetAlarmHistoryNamespace {
        /**
         * Monitor type.
         */
        monitorType: string;
        /**
         * Policy type.
         */
        namespace: string;
    }

    export interface GetAlarmHistoryNamespaceArgs {
        /**
         * Monitor type.
         */
        monitorType: pulumi.Input<string>;
        /**
         * Policy type.
         */
        namespace: pulumi.Input<string>;
    }

    export interface GetAlarmPolicyTriggerTask {
        /**
         * Configuration information in JSON format, such as {Key1:Value1,Key2:Value2}Note: this field may return null, indicating that no valid values can be obtained.
         */
        taskConfig: string;
        /**
         * Triggered task type. Valid value: AS (auto scaling)Note: this field may return null, indicating that no valid values can be obtained.
         */
        type: string;
    }

    export interface GetAlarmPolicyTriggerTaskArgs {
        /**
         * Configuration information in JSON format, such as {Key1:Value1,Key2:Value2}Note: this field may return null, indicating that no valid values can be obtained.
         */
        taskConfig: pulumi.Input<string>;
        /**
         * Triggered task type. Valid value: AS (auto scaling)Note: this field may return null, indicating that no valid values can be obtained.
         */
        type: pulumi.Input<string>;
    }

    export interface GetDataDimension {
        /**
         * Instance dimension name, eg: `InstanceId` for cvm.
         */
        name: string;
        /**
         * Instance dimension value, eg: `ins-j0hk02zo` for cvm.
         */
        value: string;
    }

    export interface GetDataDimensionArgs {
        /**
         * Instance dimension name, eg: `InstanceId` for cvm.
         */
        name: pulumi.Input<string>;
        /**
         * Instance dimension value, eg: `ins-j0hk02zo` for cvm.
         */
        value: pulumi.Input<string>;
    }

    export interface GetProductEventDimension {
        /**
         * Instance dimension name, eg: `deviceWanIp` for internet ip.
         */
        name?: string;
        /**
         * Instance dimension value, eg: `119.119.119.119` for internet ip.
         */
        value?: string;
    }

    export interface GetProductEventDimensionArgs {
        /**
         * Instance dimension name, eg: `deviceWanIp` for internet ip.
         */
        name?: pulumi.Input<string>;
        /**
         * Instance dimension value, eg: `119.119.119.119` for internet ip.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetStatisticDataCondition {
        /**
         * Dimension.
         */
        key: string;
        /**
         * Operator. Valid values: eq (equal to), ne (not equal to), in.
         */
        operator: string;
        /**
         * Dimension value. If Operator is eq or ne, only the first element will be used.
         */
        values: string[];
    }

    export interface GetStatisticDataConditionArgs {
        /**
         * Dimension.
         */
        key: pulumi.Input<string>;
        /**
         * Operator. Valid values: eq (equal to), ne (not equal to), in.
         */
        operator: pulumi.Input<string>;
        /**
         * Dimension value. If Operator is eq or ne, only the first element will be used.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetTmpInstancesTagFilter {
        /**
         * The key of the tag.
         */
        key: string;
        /**
         * The value of the tag.
         */
        value: string;
    }

    export interface GetTmpInstancesTagFilterArgs {
        /**
         * The key of the tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value of the tag.
         */
        value: pulumi.Input<string>;
    }

    export interface GrafanaSsoAccountRole {
        /**
         * Grafana organization id string.
         */
        organization: pulumi.Input<string>;
        /**
         * Grafana role, one of {Admin,Editor,Viewer}.
         */
        role: pulumi.Input<string>;
    }

    export interface PolicyBindingObjectDimension {
        /**
         * Represents a collection of dimensions of an object instance, json format.eg:'{"unInstanceId":"ins-ot3cq4bi"}'.
         */
        dimensionsJson: pulumi.Input<string>;
        /**
         * Object unique ID.
         */
        uniqueId?: pulumi.Input<string>;
    }

    export interface TmpAlertGroupCustomReceiver {
        /**
         * Time ranges which allow alert message send.
         */
        allowedTimeRanges?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpAlertGroupCustomReceiverAllowedTimeRange>[]>;
        /**
         * Only effect when alertmanager in user cluster, this cluster id.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Only effect when alertmanager in user cluster, this cluster type (tke|eks|tdcc).
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Custom receiver type, webhook|alertmanager.
         */
        type?: pulumi.Input<string>;
        /**
         * Custom receiver address, can be accessed by process in prometheus instance subnet.
         */
        url?: pulumi.Input<string>;
    }

    export interface TmpAlertGroupCustomReceiverAllowedTimeRange {
        /**
         * Time range end, seconds since 0 o'clock.
         */
        end?: pulumi.Input<string>;
        /**
         * Time range start, seconds since 0 o'clock.
         */
        start?: pulumi.Input<string>;
    }

    export interface TmpAlertGroupRule {
        /**
         * Annotation of alert rule. `summary`, `description` is special annotation in prometheus, mapping `Alarm Object`, `Alarm Information` in alarm message.
         */
        annotations?: pulumi.Input<{[key: string]: any}>;
        /**
         * Rule alarm duration.
         */
        duration?: pulumi.Input<string>;
        /**
         * Prometheus alert expression.
         */
        expr?: pulumi.Input<string>;
        /**
         * Labels of alert rule.
         */
        labels?: pulumi.Input<{[key: string]: any}>;
        /**
         * Alert rule name.
         */
        ruleName?: pulumi.Input<string>;
        /**
         * Rule state. `2`-enable, `3`-disable, default `2`.
         */
        state?: pulumi.Input<number>;
    }

    export interface TmpAlertRuleAnnotation {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpAlertRuleLabel {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRule {
        /**
         * If the alarm policy is derived from the CRD resource definition of the user cluster, the ClusterId is the cluster ID to which it belongs.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        id?: pulumi.Input<string>;
        /**
         * Policy name.
         */
        name: pulumi.Input<string>;
        /**
         * Alarm channels, which may be returned using null in the template.
         */
        notification?: pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleNotification>;
        /**
         * A list of rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleRule>[]>;
        /**
         * If the alarm is sent from a template, the TemplateId is the template id.
         */
        templateId?: pulumi.Input<string>;
        /**
         * Last modified time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleNotification {
        /**
         * If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
         */
        alertManager?: pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleNotificationAlertManager>;
        /**
         * Whether it is enabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
         */
        notifyWays?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Telephone alerts reach notifications.
         */
        phoneArriveNotice?: pulumi.Input<boolean>;
        /**
         * Effective end timeTelephone alarm wheel interval. Units: Seconds.
         */
        phoneCircleInterval?: pulumi.Input<number>;
        /**
         * PhoneCircleTimes.
         */
        phoneCircleTimes?: pulumi.Input<number>;
        /**
         * Telephone alarm wheel intervals. Units: Seconds.
         */
        phoneInnerInterval?: pulumi.Input<number>;
        /**
         * Telephone alarm sequence.
         */
        phoneNotifyOrders?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Alert Receiving Group (User Group).
         */
        receiverGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Convergence time.
         */
        repeatInterval?: pulumi.Input<string>;
        /**
         * Effective end time.
         */
        timeRangeEnd?: pulumi.Input<string>;
        /**
         * The time from which it takes effect.
         */
        timeRangeStart?: pulumi.Input<string>;
        /**
         * The channel type, which defaults to amp, supports the following `amp`, `webhook`, `alertmanager`.
         */
        type: pulumi.Input<string>;
        /**
         * If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        webHook?: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleNotificationAlertManager {
        /**
         * The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Alertmanager url.
         */
        url: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleRule {
        /**
         * Refer to annotations in prometheus rule.
         */
        annotations?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleRuleAnnotation>[]>;
        /**
         * A description of the rule.
         */
        describe?: pulumi.Input<string>;
        /**
         * Time of duration.
         */
        for: pulumi.Input<string>;
        /**
         * Extra labels.
         */
        labels: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeAlertPolicyAlertRuleRuleLabel>[]>;
        /**
         * Rule name.
         */
        name: pulumi.Input<string>;
        /**
         * Prometheus statement.
         */
        rule: pulumi.Input<string>;
        /**
         * Alarm rule status.
         */
        ruleState?: pulumi.Input<number>;
        /**
         * Alert sending template.
         */
        template: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleRuleAnnotation {
        /**
         * Name of map.
         */
        name: pulumi.Input<string>;
        /**
         * Value of map.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpTkeAlertPolicyAlertRuleRuleLabel {
        /**
         * Name of map.
         */
        name: pulumi.Input<string>;
        /**
         * Value of map.
         */
        value: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgents {
        /**
         * An id identify the cluster, like `cls-xxxxxx`.
         */
        clusterId: pulumi.Input<string>;
        /**
         * the name of the cluster.
         */
        clusterName?: pulumi.Input<string>;
        /**
         * Type of cluster.
         */
        clusterType: pulumi.Input<string>;
        /**
         * Whether to enable the public network CLB.
         */
        enableExternal: pulumi.Input<boolean>;
        /**
         * All metrics collected by the cluster will carry these labels.
         */
        externalLabels?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsExternalLabel>[]>;
        /**
         * Pod configuration for components deployed in the cluster.
         */
        inClusterPodConfig?: pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsInClusterPodConfig>;
        /**
         * Whether to install the default collection configuration.
         */
        notInstallBasicScrape?: pulumi.Input<boolean>;
        /**
         * Whether to collect indicators, true means drop all indicators, false means collect default indicators.
         */
        notScrape?: pulumi.Input<boolean>;
        /**
         * Limitation of region.
         */
        region: pulumi.Input<string>;
        /**
         * agent state, `normal`, `abnormal`.
         */
        status?: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgentsExternalLabel {
        /**
         * Indicator name.
         */
        name: pulumi.Input<string>;
        /**
         * Index value.
         */
        value?: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgentsInClusterPodConfig {
        /**
         * Whether to use HostNetWork.
         */
        hostNet: pulumi.Input<boolean>;
        /**
         * Specify the pod to run the node.
         */
        nodeSelectors?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsInClusterPodConfigNodeSelector>[]>;
        /**
         * Tolerate Stain.
         */
        tolerations?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeClusterAgentAgentsInClusterPodConfigToleration>[]>;
    }

    export interface TmpTkeClusterAgentAgentsInClusterPodConfigNodeSelector {
        /**
         * The pod configuration name of the component deployed in the cluster.
         */
        name?: pulumi.Input<string>;
        /**
         * Pod configuration values for components deployed in the cluster.
         */
        value?: pulumi.Input<string>;
    }

    export interface TmpTkeClusterAgentAgentsInClusterPodConfigToleration {
        /**
         * blemish effect to match.
         */
        effect?: pulumi.Input<string>;
        /**
         * The taint key to which the tolerance applies.
         */
        key?: pulumi.Input<string>;
        /**
         * key-value relationship.
         */
        operator?: pulumi.Input<string>;
    }

    export interface TmpTkeConfigPodMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name. The naming rule is: namespace/name. If you don't have any namespace, use the default namespace: kube-system, otherwise use the specified one.
         */
        name: pulumi.Input<string>;
        /**
         * Used for output parameters, if the configuration comes from a template, it is the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeConfigRawJob {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for output parameters, if the configuration comes from a template, it is the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeConfigServiceMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name. The naming rule is: namespace/name. If you don't have any namespace, use the default namespace: kube-system, otherwise use the specified one.
         */
        name: pulumi.Input<string>;
        /**
         * Used for output parameters, if the configuration comes from a template, it is the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeGlobalNotificationNotification {
        /**
         * Alert manager, if Type is `alertmanager`, this field is required.
         */
        alertManagers?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeGlobalNotificationNotificationAlertManager>[]>;
        /**
         * Alarm notification switch.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Alarm notification method, Valid values: `SMS`, `EMAIL`, `CALL`, `WECHAT`.
         */
        notifyWays?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Phone Alarm Reach Notification, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneArriveNotice?: pulumi.Input<boolean>;
        /**
         * Telephone alarm off-wheel interval, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneCircleInterval?: pulumi.Input<number>;
        /**
         * Number of phone alerts (user group), NotifyWay is `CALL`, and this parameter is used.
         */
        phoneCircleTimes?: pulumi.Input<number>;
        /**
         * Interval between telephone alarm rounds, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneInnerInterval?: pulumi.Input<number>;
        /**
         * Phone alert sequence, NotifyWay is `CALL`, and this parameter is used.
         */
        phoneNotifyOrders?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Alarm receiving group(user group).
         */
        receiverGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Convergence time.
         */
        repeatInterval?: pulumi.Input<string>;
        /**
         * Effective end time.
         */
        timeRangeEnd?: pulumi.Input<string>;
        /**
         * Effective start time.
         */
        timeRangeStart?: pulumi.Input<string>;
        /**
         * Alarm notification type, Valid values: `amp`, `webhook`, `alertmanager`.
         */
        type: pulumi.Input<string>;
        /**
         * Web hook, if Type is `webhook`, this field is required.
         */
        webHook?: pulumi.Input<string>;
    }

    export interface TmpTkeGlobalNotificationNotificationAlertManager {
        /**
         * Cluster id.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Cluster type.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Alert manager url.
         */
        url: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateAttachmentTargets {
        /**
         * ID of the cluster.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Name the cluster.
         */
        clusterName?: pulumi.Input<string>;
        /**
         * Cluster type.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * instance id.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Name of the prometheus instance.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * target area.
         */
        region: pulumi.Input<string>;
        /**
         * Last sync template time.
         */
        syncTime?: pulumi.Input<string>;
        /**
         * Template version currently in use.
         */
        version?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplate {
        /**
         * Template description.
         */
        describe?: pulumi.Input<string>;
        /**
         * Whether the system-supplied default template is used for outgoing references.
         */
        isDefault?: pulumi.Input<boolean>;
        /**
         * Template dimensions, the following types are supported `instance` instance level, `cluster` cluster level.
         */
        level: pulumi.Input<string>;
        /**
         * Template name.
         */
        name: pulumi.Input<string>;
        /**
         * Effective when Level is a cluster, A list of PodMonitors rules in the template.
         */
        podMonitors?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplatePodMonitor>[]>;
        /**
         * Effective when Level is a cluster, A list of RawJobs rules in the template.
         */
        rawJobs?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplateRawJob>[]>;
        /**
         * Effective when Level is instance, A list of aggregation rules in the template.
         */
        recordRules?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplateRecordRule>[]>;
        /**
         * Effective when Level is a cluster, A list of ServiceMonitor rules in the template.
         */
        serviceMonitors?: pulumi.Input<pulumi.Input<inputs.Monitor.TmpTkeTemplateTemplateServiceMonitor>[]>;
        /**
         * The ID of the template, which is used for the outgoing reference.
         */
        templateId?: pulumi.Input<string>;
        /**
         * Last updated, for outgoing references.
         */
        updateTime?: pulumi.Input<string>;
        /**
         * Whether the system-supplied default template is used for outgoing references.
         */
        version?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplatePodMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplateRawJob {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplateRecordRule {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }

    export interface TmpTkeTemplateTemplateServiceMonitor {
        /**
         * Config.
         */
        config: pulumi.Input<string>;
        /**
         * Name.
         */
        name: pulumi.Input<string>;
        /**
         * Used for the argument, if the configuration comes to the template, the template id.
         */
        templateId?: pulumi.Input<string>;
    }
}

export namespace Mps {
    export interface AdaptiveDynamicStreamingTemplateStreamInfo {
        /**
         * Audio parameter information.
         */
        audio: pulumi.Input<inputs.Mps.AdaptiveDynamicStreamingTemplateStreamInfoAudio>;
        /**
         * Whether to remove audio stream, value:0: reserved.1: remove.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video stream, value:0: reserved.1: remove.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Video parameter information.
         */
        video: pulumi.Input<inputs.Mps.AdaptiveDynamicStreamingTemplateStreamInfoVideo>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoAudio {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of audio stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoVideo {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Filling type, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling type:stretch: Stretching, stretching each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave black, keep the video aspect ratio unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and use Gaussian blur for the rest of the edge.Default value: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of the height (or short side) of the video streaming, value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents the short side of the video.close: At this point, Width represents the width of the video, and Height represents the height of the video.Default value: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of the width (or long side) of the video streaming, value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface AiAnalysisTemplateClassificationConfigure {
        /**
         * Ai classification task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiAnalysisTemplateCoverConfigure {
        /**
         * Ai cover task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiAnalysisTemplateFrameTagConfigure {
        /**
         * Ai frame tag task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiAnalysisTemplateTagConfigure {
        /**
         * Ai tag task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateAsrFullTextConfigure {
        /**
         * Generated subtitle file format, if left blank or blank string means no subtitle file will be generated, optional value:vtt: Generate WebVTT subtitle files.
         */
        subtitleFormat?: pulumi.Input<string>;
        /**
         * Asr full text recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateAsrWordsConfigure {
        /**
         * Keyword filter label, specify the label of the keyword to be returned. If not filled or empty, all results will be returned.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Asr word recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateFaceConfigure {
        /**
         * Default face filter tag, specify the tag of the default face that needs to be returned. If not filled or empty, all default face results will be returned. Label optional value:entertainment, sport, politician.
         */
        defaultLibraryLabelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Face library selection, optional value:Default, UserDefine, AllDefault value: All, use the system default face library and user-defined face library.
         */
        faceLibrary?: pulumi.Input<string>;
        /**
         * Face recognition filter score, when the recognition result reaches the score above, the recognition result will be returned. The default is 95 points. Value range: 0 - 100.
         */
        score?: pulumi.Input<number>;
        /**
         * Ai face recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
        /**
         * User-defined face filter tag, specify the tag of the user-defined face that needs to be returned. If not filled or empty, all custom face results will be returned.The maximum number of tags is 100, and the length of each tag is up to 16 characters.
         */
        userDefineLibraryLabelSets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AiRecognitionTemplateOcrFullTextConfigure {
        /**
         * Ocr full text recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface AiRecognitionTemplateOcrWordsConfigure {
        /**
         * Keyword filter label, specify the label of the keyword to be returned. If not filled or empty, all results will be returned.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Ocr words recognition task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplatePoliticalConfigure {
        /**
         * Political asr control parameters.
         */
        asrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplatePoliticalConfigureAsrReviewInfo>;
        /**
         * Political image control parameters.
         */
        imgReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplatePoliticalConfigureImgReviewInfo>;
        /**
         * Political ocr control parameters.
         */
        ocrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplatePoliticalConfigureOcrReviewInfo>;
    }

    export interface ContentReviewTemplatePoliticalConfigureAsrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined asr review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplatePoliticalConfigureImgReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 90 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * Terrorism image filter tag, if the review result contains the selected tag, the result will be returned, if the filter tag is empty, all the review results will be returned, the optional value is:guns, crowd, bloody, police, banners, militant, explosion, terrorists, scenario.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 80 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * Terrorism image task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplatePoliticalConfigureOcrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined ocr text review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplatePornConfigure {
        /**
         * Voice pornography control parameters.
         */
        asrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplatePornConfigureAsrReviewInfo>;
        /**
         * Porn image Identification Control Parameters.
         */
        imgReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplatePornConfigureImgReviewInfo>;
        /**
         * Ocr pornography control parameters.
         */
        ocrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplatePornConfigureOcrReviewInfo>;
    }

    export interface ContentReviewTemplatePornConfigureAsrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined asr review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplatePornConfigureImgReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 90 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * Terrorism image filter tag, if the review result contains the selected tag, the result will be returned, if the filter tag is empty, all the review results will be returned, the optional value is:guns, crowd, bloody, police, banners, militant, explosion, terrorists, scenario.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 80 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * Terrorism image task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplatePornConfigureOcrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined ocr text review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateProhibitedConfigure {
        /**
         * Voice Prohibition Control Parameters.Note: This field may return null, indicating that no valid value can be obtained.
         */
        asrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplateProhibitedConfigureAsrReviewInfo>;
        /**
         * Ocr Prohibition Control Parameters.Note: This field may return null, indicating that no valid value can be obtained.
         */
        ocrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplateProhibitedConfigureOcrReviewInfo>;
    }

    export interface ContentReviewTemplateProhibitedConfigureAsrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined asr review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateProhibitedConfigureOcrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined ocr text review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateTerrorismConfigure {
        /**
         * Terrorism image task control parameters.
         */
        imgReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplateTerrorismConfigureImgReviewInfo>;
        /**
         * Ocr terrorism task Control Parameters.
         */
        ocrReviewInfo: pulumi.Input<inputs.Mps.ContentReviewTemplateTerrorismConfigureOcrReviewInfo>;
    }

    export interface ContentReviewTemplateTerrorismConfigureImgReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 90 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * Terrorism image filter tag, if the review result contains the selected tag, the result will be returned, if the filter tag is empty, all the review results will be returned, the optional value is:guns, crowd, bloody, police, banners, militant, explosion, terrorists, scenario.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 80 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * Terrorism image task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateTerrorismConfigureOcrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined ocr text review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateUserDefineConfigure {
        /**
         * User-defined asr text review control parameters.
         */
        asrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplateUserDefineConfigureAsrReviewInfo>;
        /**
         * User-defined face review control parameters.
         */
        faceReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplateUserDefineConfigureFaceReviewInfo>;
        /**
         * User-defined ocr text review control parameters.
         */
        ocrReviewInfo?: pulumi.Input<inputs.Mps.ContentReviewTemplateUserDefineConfigureOcrReviewInfo>;
    }

    export interface ContentReviewTemplateUserDefineConfigureAsrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * User-defined asr tags, the review result contains the selected tag and returns the result, if the filter tag is empty, all review results are returned. If you want to use the tag filtering function, when adding a asr library, you need to add the corresponding character tag.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined asr review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateUserDefineConfigureFaceReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * User-defined face review tags, the review result contains the selected tag and returns the result, if the filter tag is empty, all review results are returned. If you want to use the tag filtering function, when adding a face library, you need to add the corresponding character tag.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined face review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface ContentReviewTemplateUserDefineConfigureOcrReviewInfo {
        /**
         * The score threshold for judging suspected violations. When the smart review reaches the score above, it is considered suspected violations. If it is not filled, the default is 100 points. Value range: 0~100.
         */
        blockConfidence?: pulumi.Input<number>;
        /**
         * User-defined ocr tags, the review result contains the selected tag and returns the result, if the filter tag is empty, all review results are returned. If you want to use the tag filtering function, when adding a ocr library, you need to add the corresponding character tag.The maximum number of tags is 10, and the length of each tag is up to 16 characters.
         */
        labelSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The score threshold for judging whether manual review is required for violations. When the intelligent review reaches the score above, it is considered that manual review is required. If it is not filled, the default is 75 points. Value range: 0~100.
         */
        reviewConfidence?: pulumi.Input<number>;
        /**
         * User-defined ocr text review task switch, optional value:ON/OFF.
         */
        switch: pulumi.Input<string>;
    }

    export interface EditMediaOperationFileInfo {
        /**
         * End time offset of video clipping in seconds.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Video input information.
         */
        inputInfo: pulumi.Input<inputs.Mps.EditMediaOperationFileInfoInputInfo>;
        /**
         * Start time offset of video clipping in seconds.
         */
        startTimeOffset?: pulumi.Input<number>;
    }

    export interface EditMediaOperationFileInfoInputInfo {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.EditMediaOperationFileInfoInputInfoCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.EditMediaOperationFileInfoInputInfoS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.EditMediaOperationFileInfoInputInfoUrlInputInfo>;
    }

    export interface EditMediaOperationFileInfoInputInfoCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface EditMediaOperationFileInfoInputInfoS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface EditMediaOperationFileInfoInputInfoUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface EditMediaOperationOutputConfig {
        /**
         * Format. Valid values: `mp4` (default), `hls`, `mov`, `flv`, `avi`.
         */
        container?: pulumi.Input<string>;
        /**
         * The editing mode. Valid values are `normal` and `fast`. The default is `normal`, which indicates precise editing.
         */
        type?: pulumi.Input<string>;
    }

    export interface EditMediaOperationOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.EditMediaOperationOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.EditMediaOperationOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS. `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface EditMediaOperationOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface EditMediaOperationOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface EditMediaOperationTaskNotifyConfig {
        /**
         * The AWS SQS queue. This parameter is required if `NotifyType` is `AWS-SQS`.Note: This field may return null, indicating that no valid values can be obtained.
         */
        awsSqs?: pulumi.Input<inputs.Mps.EditMediaOperationTaskNotifyConfigAwsSqs>;
        /**
         * The CMQ or TDMQ-CMQ model. Valid values: Queue, Topic.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ region, such as `sh` (Shanghai) or `bj` (Beijing).
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * Workflow notification method. Valid values: Finish, Change. If this parameter is left empty, `Finish` will be used.
         */
        notifyMode?: pulumi.Input<string>;
        /**
         * The notification type. Valid values: `CMQ`: This value is no longer used. Please use `TDMQ-CMQ` instead. `TDMQ-CMQ`: Message queue. `URL`: If `NotifyType` is set to `URL`, HTTP callbacks are sent to the URL specified by `NotifyUrl`. HTTP and JSON are used for the callbacks. The packet contains the response parameters of the `ParseNotification` API. `SCF`: This notification type is not recommended. You need to configure it in the SCF console. `AWS-SQS`: AWS queue. This type is only supported for AWS tasks, and the queue must be in the same region as the AWS bucket. If you do not pass this parameter or pass in an empty string, `CMQ` will be used. To use a different notification type, specify this parameter accordingly.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback URL, required if `NotifyType` is set to `URL`.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ queue to receive notifications. This parameter is valid when `CmqModel` is `Queue`.
         */
        queueName?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ topic to receive notifications. This parameter is valid when `CmqModel` is `Topic`.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface EditMediaOperationTaskNotifyConfigAwsSqs {
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
        /**
         * The name of the SQS queue.
         */
        sqsQueueName: pulumi.Input<string>;
        /**
         * The region of the SQS queue.
         */
        sqsRegion: pulumi.Input<string>;
    }

    export interface FlowInputGroup {
        /**
         * The input IP whitelist, the format is CIDR.
         */
        allowIpLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Input description with a length of [0, 255].
         */
        description?: pulumi.Input<string>;
        /**
         * The active/standby switch of the input, [OPEN|CLOSE] is optional, and the default is CLOSE.
         */
        failOver?: pulumi.Input<string>;
        /**
         * Input HLS_PULL configuration information.
         */
        hlsPullSettings?: pulumi.Input<inputs.Mps.FlowInputGroupHlsPullSettings>;
        /**
         * Input name, you can fill in uppercase and lowercase letters, numbers and underscores, and the length is [1, 32].
         */
        inputName: pulumi.Input<string>;
        /**
         * Input protocol, optional [SRT|RTP|RTMP|RTMP_PULL].
         */
        protocol: pulumi.Input<string>;
        /**
         * Delay broadcast smooth streaming configuration information.
         */
        resilientStream?: pulumi.Input<inputs.Mps.FlowInputGroupResilientStream>;
        /**
         * Input RTMP_PULL configuration information.
         */
        rtmpPullSettings?: pulumi.Input<inputs.Mps.FlowInputGroupRtmpPullSettings>;
        /**
         * RTP configuration information.
         */
        rtpSettings?: pulumi.Input<inputs.Mps.FlowInputGroupRtpSettings>;
        /**
         * Input RTSP_PULL configuration information.
         */
        rtspPullSettings?: pulumi.Input<inputs.Mps.FlowInputGroupRtspPullSettings>;
        /**
         * The input SRT configuration information.
         */
        srtSettings?: pulumi.Input<inputs.Mps.FlowInputGroupSrtSettings>;
    }

    export interface FlowInputGroupHlsPullSettings {
        /**
         * There is only one origin address of the HLS origin station.
         */
        sourceAddresses: pulumi.Input<pulumi.Input<inputs.Mps.FlowInputGroupHlsPullSettingsSourceAddress>[]>;
    }

    export interface FlowInputGroupHlsPullSettingsSourceAddress {
        /**
         * The URL address of the RTSP source site.
         */
        url: pulumi.Input<string>;
    }

    export interface FlowInputGroupResilientStream {
        /**
         * Delay time, in seconds, currently supports a range of 10 to 300 seconds. Note: This field may return null, indicating that no valid value can be obtained.
         */
        bufferTime?: pulumi.Input<number>;
        /**
         * Whether to enable the delayed broadcast smooth spit stream, true is enabled, false is not enabled, and the default is not enabled. Note: This field may return null, indicating that no valid value can be obtained.
         */
        enable?: pulumi.Input<boolean>;
    }

    export interface FlowInputGroupRtmpPullSettings {
        /**
         * The source site address of the RTMP source site, there can only be one.
         */
        sourceAddresses: pulumi.Input<pulumi.Input<inputs.Mps.FlowInputGroupRtmpPullSettingsSourceAddress>[]>;
    }

    export interface FlowInputGroupRtmpPullSettingsSourceAddress {
        /**
         * StreamKey information of the RTMP source site.
         */
        streamKey: pulumi.Input<string>;
        /**
         * TcUrl address of the RTMP source server.
         */
        tcUrl: pulumi.Input<string>;
    }

    export interface FlowInputGroupRtpSettings {
        /**
         * Defaults to none, optional values[none].
         */
        fec?: pulumi.Input<string>;
        /**
         * Idle timeout, the default is 5000, the unit is ms, and the range is [1000, 10000].
         */
        idleTimeout?: pulumi.Input<number>;
    }

    export interface FlowInputGroupRtspPullSettings {
        /**
         * The source site address of the RTSP source site, there can only be one.
         */
        sourceAddresses: pulumi.Input<pulumi.Input<inputs.Mps.FlowInputGroupRtspPullSettingsSourceAddress>[]>;
    }

    export interface FlowInputGroupRtspPullSettingsSourceAddress {
        /**
         * The URL address of the RTSP source site.
         */
        url: pulumi.Input<string>;
    }

    export interface FlowInputGroupSrtSettings {
        /**
         * Delay, default 0, unit ms, range [0, 3000].
         */
        latency?: pulumi.Input<number>;
        /**
         * SRT mode, optional [LISTENER|CALLER], default is LISTENER.
         */
        mode?: pulumi.Input<string>;
        /**
         * The decryption key, which is empty by default, means no encryption. Only ascii code values can be filled in, and the length is [10, 79].
         */
        passphrase?: pulumi.Input<string>;
        /**
         * Key length, default is 0, optional [0|16|24|32].
         */
        pbKeyLen?: pulumi.Input<number>;
        /**
         * Peer timeout, default is 5000, unit ms, range is [1000, 10000].
         */
        peerIdleTimeout?: pulumi.Input<number>;
        /**
         * Peer delay, the default is 0, the unit is ms, and the range is [0, 3000].
         */
        peerLatency?: pulumi.Input<number>;
        /**
         * Receiving delay, default is 120, unit ms, range is [0, 3000].
         */
        recvLatency?: pulumi.Input<number>;
        /**
         * SRT peer address, required when Mode is CALLER, and only 1 set can be filled in.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<inputs.Mps.FlowInputGroupSrtSettingsSourceAddress>[]>;
        /**
         * Stream ID, optional uppercase and lowercase letters, numbers and special characters (.#!:&amp;,=_-), length 0~512. For specific format, please refer to:https://github.com/Haivision/srt/blob/master/docs/features/access-control.md#standard-keys.
         */
        streamId?: pulumi.Input<string>;
    }

    export interface FlowInputGroupSrtSettingsSourceAddress {
        /**
         * Peer IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Peer port.
         */
        port: pulumi.Input<number>;
    }

    export interface GetMediaMetaDataInputInfo {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: inputs.Mps.GetMediaMetaDataInputInfoCosInputInfo;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: inputs.Mps.GetMediaMetaDataInputInfoS3InputInfo;
        /**
         * The input type. Valid values:`COS`: A COS bucket address.`URL`: A URL.`AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: string;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: inputs.Mps.GetMediaMetaDataInputInfoUrlInputInfo;
    }

    export interface GetMediaMetaDataInputInfoArgs {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.GetMediaMetaDataInputInfoCosInputInfoArgs>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.GetMediaMetaDataInputInfoS3InputInfoArgs>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address.`URL`: A URL.`AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.GetMediaMetaDataInputInfoUrlInputInfoArgs>;
    }

    export interface GetMediaMetaDataInputInfoCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: string;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: string;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: string;
    }

    export interface GetMediaMetaDataInputInfoCosInputInfoArgs {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface GetMediaMetaDataInputInfoS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: string;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: string;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: string;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: string;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: string;
    }

    export interface GetMediaMetaDataInputInfoS3InputInfoArgs {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface GetMediaMetaDataInputInfoUrlInputInfo {
        /**
         * URL of a video.
         */
        url: string;
    }

    export interface GetMediaMetaDataInputInfoUrlInputInfoArgs {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface InputInputGroup {
        /**
         * The input IP whitelist, the format is CIDR.
         */
        allowIpLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The input description with a length of [0, 255].
         */
        description?: pulumi.Input<string>;
        /**
         * The active/standby switch of the input, [OPEN|CLOSE] is optional, and the default is CLOSE.
         */
        failOver?: pulumi.Input<string>;
        /**
         * Input HLS_PULL configuration information.
         */
        hlsPullSettings?: pulumi.Input<inputs.Mps.InputInputGroupHlsPullSettings>;
        /**
         * The input name, you can fill in uppercase and lowercase letters, numbers and underscores, and the length is [1, 32].
         */
        inputName: pulumi.Input<string>;
        /**
         * Input protocol, optional [SRT|RTP|RTMP|RTMP_PULL].
         */
        protocol: pulumi.Input<string>;
        /**
         * Delay broadcast smooth streaming configuration information.
         */
        resilientStream?: pulumi.Input<inputs.Mps.InputInputGroupResilientStream>;
        /**
         * Input RTMP_PULL configuration information.
         */
        rtmpPullSettings?: pulumi.Input<inputs.Mps.InputInputGroupRtmpPullSettings>;
        /**
         * Input RTP configuration information.
         */
        rtpSettings?: pulumi.Input<inputs.Mps.InputInputGroupRtpSettings>;
        /**
         * Input RTSP_PULL configuration information.
         */
        rtspPullSettings?: pulumi.Input<inputs.Mps.InputInputGroupRtspPullSettings>;
        /**
         * The input SRT configuration information.
         */
        srtSettings?: pulumi.Input<inputs.Mps.InputInputGroupSrtSettings>;
    }

    export interface InputInputGroupHlsPullSettings {
        /**
         * There is only one origin address of the HLS origin station.
         */
        sourceAddresses: pulumi.Input<pulumi.Input<inputs.Mps.InputInputGroupHlsPullSettingsSourceAddress>[]>;
    }

    export interface InputInputGroupHlsPullSettingsSourceAddress {
        /**
         * The URL address of the RTSP source site.
         */
        url: pulumi.Input<string>;
    }

    export interface InputInputGroupResilientStream {
        /**
         * Delay time, in seconds, currently supports a range of 10 to 300 seconds. Note: This field may return null, indicating that no valid value can be obtained.
         */
        bufferTime?: pulumi.Input<number>;
        /**
         * Whether to enable the delayed broadcast smooth spit stream, true is enabled, false is not enabled, and the default is not enabled. Note: This field may return null, indicating that no valid value can be obtained.
         */
        enable?: pulumi.Input<boolean>;
    }

    export interface InputInputGroupRtmpPullSettings {
        /**
         * The source site address of the RTMP source site, there can only be one.
         */
        sourceAddresses: pulumi.Input<pulumi.Input<inputs.Mps.InputInputGroupRtmpPullSettingsSourceAddress>[]>;
    }

    export interface InputInputGroupRtmpPullSettingsSourceAddress {
        /**
         * StreamKey information of the RTMP source site.
         */
        streamKey: pulumi.Input<string>;
        /**
         * TcUrl address of the RTMP source server.
         */
        tcUrl: pulumi.Input<string>;
    }

    export interface InputInputGroupRtpSettings {
        /**
         * Defaults to &#39;none&#39;, optional values[&#39;none&#39;].
         */
        fec?: pulumi.Input<string>;
        /**
         * Idle timeout, the default is 5000, the unit is ms, and the range is [1000, 10000].
         */
        idleTimeout?: pulumi.Input<number>;
    }

    export interface InputInputGroupRtspPullSettings {
        /**
         * The source site address of the RTSP source site, there can only be one.
         */
        sourceAddresses: pulumi.Input<pulumi.Input<inputs.Mps.InputInputGroupRtspPullSettingsSourceAddress>[]>;
    }

    export interface InputInputGroupRtspPullSettingsSourceAddress {
        /**
         * The URL address of the RTSP source site.
         */
        url: pulumi.Input<string>;
    }

    export interface InputInputGroupSrtSettings {
        /**
         * Delay, default 0, unit ms, range [0, 3000].
         */
        latency?: pulumi.Input<number>;
        /**
         * SRT mode, optional [LISTENER|CALLER], default is LISTENER.
         */
        mode?: pulumi.Input<string>;
        /**
         * The decryption key, which is empty by default, means no encryption. Only ascii code values can be filled in, and the length is [10, 79].
         */
        passphrase?: pulumi.Input<string>;
        /**
         * Key length, default is 0, optional [0|16|24|32].
         */
        pbKeyLen?: pulumi.Input<number>;
        /**
         * Peer timeout, default is 5000, unit ms, range is [1000, 10000].
         */
        peerIdleTimeout?: pulumi.Input<number>;
        /**
         * Peer delay, the default is 0, the unit is ms, and the range is [0, 3000].
         */
        peerLatency?: pulumi.Input<number>;
        /**
         * Receiving delay, default is 120, unit ms, range is [0, 3000].
         */
        recvLatency?: pulumi.Input<number>;
        /**
         * SRT peer address, required when Mode is CALLER, and only 1 set can be filled in.
         */
        sourceAddresses?: pulumi.Input<pulumi.Input<inputs.Mps.InputInputGroupSrtSettingsSourceAddress>[]>;
        /**
         * Stream ID, optional uppercase and lowercase letters, numbers and special characters (.#!:&amp;,=_-), length 0~512. Specific format can refer to:https://github.com/Haivision/srt/blob/master/docs/features/access-control.md#standard-keys.
         */
        streamId?: pulumi.Input<string>;
    }

    export interface InputInputGroupSrtSettingsSourceAddress {
        /**
         * Peer IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Peer port.
         */
        port: pulumi.Input<number>;
    }

    export interface OutputOutput {
        /**
         * IP whitelist list, the format is CIDR, such as 0.0.0.0/0. When the Protocol is RTMP_PULL, it is valid, and if it is empty, it means that the client IP is not limited.
         */
        allowIpLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Output description.
         */
        description: pulumi.Input<string>;
        /**
         * The maximum number of concurrent pull streams, the maximum is 4, and the default is 4. Only SRT or RTMP_PULL can set this parameter.
         */
        maxConcurrent?: pulumi.Input<number>;
        /**
         * The name of the output.
         */
        outputName: pulumi.Input<string>;
        /**
         * Output region.
         */
        outputRegion: pulumi.Input<string>;
        /**
         * Output protocol, optional [SRT|RTP|RTMP|RTMP_PULL].
         */
        protocol: pulumi.Input<string>;
        /**
         * Output RTMP configuration.
         */
        rtmpSettings?: pulumi.Input<inputs.Mps.OutputOutputRtmpSettings>;
        /**
         * Output RTP configuration.
         */
        rtpSettings?: pulumi.Input<inputs.Mps.OutputOutputRtpSettings>;
        /**
         * configuration of the output SRT.
         */
        srtSettings?: pulumi.Input<inputs.Mps.OutputOutputSrtSettings>;
    }

    export interface OutputOutputRtmpSettings {
        /**
         * RTMP Chunk size, range is [4096, 40960].
         */
        chunkSize?: pulumi.Input<number>;
        /**
         * The target address of the relay can be filled in 1~2.
         */
        destinations: pulumi.Input<pulumi.Input<inputs.Mps.OutputOutputRtmpSettingsDestination>[]>;
    }

    export interface OutputOutputRtmpSettingsDestination {
        /**
         * relayed StreamKey, in the format: stream?key=value.
         */
        streamKey: pulumi.Input<string>;
        /**
         * relayed URL, the format is: rtmp://domain/live.
         */
        url: pulumi.Input<string>;
    }

    export interface OutputOutputRtpSettings {
        /**
         * The target address of the relay can be filled in 1~2.
         */
        destinations: pulumi.Input<pulumi.Input<inputs.Mps.OutputOutputRtpSettingsDestination>[]>;
        /**
         * You can only fill in none.
         */
        fec: pulumi.Input<string>;
        /**
         * Idle timeout, unit ms.
         */
        idleTimeout: pulumi.Input<number>;
    }

    export interface OutputOutputRtpSettingsDestination {
        /**
         * Output IP.
         */
        ip: pulumi.Input<string>;
        /**
         * output port.
         */
        port: pulumi.Input<number>;
    }

    export interface OutputOutputSrtSettings {
        /**
         * The target address of the relay is required when Mode is CALLER, and only one group can be filled in.
         */
        destinations: pulumi.Input<pulumi.Input<inputs.Mps.OutputOutputSrtSettingsDestination>[]>;
        /**
         * The total delay of relaying SRT, the default is 0, the unit is ms, and the range is [0, 3000].
         */
        latency?: pulumi.Input<number>;
        /**
         * SRT mode, optional [LISTENER|CALLER], default is CALLER.
         */
        mode?: pulumi.Input<string>;
        /**
         * The encryption key for relaying SRT, which is empty by default, indicating no encryption. Only ascii code values can be filled in, and the length is [10, 79].
         */
        passphrase?: pulumi.Input<string>;
        /**
         * The key length of relay SRT, the default is 0, optional [0|16|24|32].
         */
        pbKeyLen?: pulumi.Input<number>;
        /**
         * The peer idle timeout for relaying SRT, the default is 5000, the unit is ms, and the range is [1000, 10000].
         */
        peerIdleTimeout?: pulumi.Input<number>;
        /**
         * The peer delay of relaying SRT, the default is 0, the unit is ms, and the range is [0, 3000].
         */
        peerLatency?: pulumi.Input<number>;
        /**
         * The reception delay of relay SRT, the default is 120, the unit is ms, the range is [0, 3000].
         */
        recvLatency?: pulumi.Input<number>;
        /**
         * relay the stream ID of SRT. You can choose uppercase and lowercase letters, numbers and special characters (.#!:&amp;,=_-). The length is 0~512.
         */
        streamId?: pulumi.Input<string>;
    }

    export interface OutputOutputSrtSettingsDestination {
        /**
         * Output IP.
         */
        ip: pulumi.Input<string>;
        /**
         * output port.
         */
        port: pulumi.Input<number>;
    }

    export interface ProcessLiveStreamOperationAiAnalysisTask {
        /**
         * Video content analysis template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * An extended parameter, whose value is a stringfied JSON.Note: This parameter is for customers with special requirements. It needs to be customized offline.Note: This field may return null, indicating that no valid values can be obtained.
         */
        extendedParameter?: pulumi.Input<string>;
    }

    export interface ProcessLiveStreamOperationAiContentReviewTask {
        /**
         * Video content audit template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface ProcessLiveStreamOperationAiQualityControlTask {
        /**
         * The channel extension parameter, which is a serialized JSON string.Note: This field may return null, indicating that no valid values can be obtained.
         */
        channelExtPara?: pulumi.Input<string>;
        /**
         * The ID of the quality control template.Note: This field may return null, indicating that no valid values can be obtained.
         */
        definition?: pulumi.Input<number>;
    }

    export interface ProcessLiveStreamOperationAiRecognitionTask {
        /**
         * Intelligent video recognition template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface ProcessLiveStreamOperationOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessLiveStreamOperationOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessLiveStreamOperationOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS.`AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessLiveStreamOperationOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessLiveStreamOperationOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to upload files to the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to upload files to the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessLiveStreamOperationTaskNotifyConfig {
        /**
         * CMQ model. There are two types: `Queue` and `Topic`. Currently, only `Queue` is supported.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * CMQ region, such as `sh` and `bj`.
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * The notification type, `CMQ` by default. If this parameter is set to `URL`, HTTP callbacks are sent to the URL specified by `NotifyUrl`.Note: If you do not pass this parameter or pass in an empty string, `CMQ` will be used. To use a different notification type, specify this parameter accordingly.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback URL, required if `NotifyType` is set to `URL`.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * This parameter is valid when the model is `Queue`, indicating the name of the CMQ queue for receiving event notifications.
         */
        queueName?: pulumi.Input<string>;
        /**
         * This parameter is valid when the model is `Topic`, indicating the name of the CMQ topic for receiving event notifications.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationAiAnalysisTask {
        /**
         * Video content analysis template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * An extended parameter, whose value is a stringfied JSON.Note: This parameter is for customers with special requirements. It needs to be customized offline.Note: This field may return null, indicating that no valid values can be obtained.
         */
        extendedParameter?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationAiContentReviewTask {
        /**
         * Video content audit template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationAiQualityControlTask {
        /**
         * The channel extension parameter, which is a serialized JSON string.Note: This field may return null, indicating that no valid values can be obtained.
         */
        channelExtPara?: pulumi.Input<string>;
        /**
         * The ID of the quality control template.Note: This field may return null, indicating that no valid values can be obtained.
         */
        definition?: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationAiRecognitionTask {
        /**
         * Intelligent video recognition template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationInputInfo {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationInputInfoCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationInputInfoS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationInputInfoUrlInputInfo>;
    }

    export interface ProcessMediaOperationInputInfoCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationInputInfoS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationInputInfoUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTask {
        /**
         * List of adaptive bitrate streaming tasks.
         */
        adaptiveDynamicStreamingTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSet>[]>;
        /**
         * List of animated image generating tasks.
         */
        animatedGraphicTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSet>[]>;
        /**
         * List of image sprite generating tasks.
         */
        imageSpriteTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskImageSpriteTaskSet>[]>;
        /**
         * List of sampled screencapturing tasks.
         */
        sampleSnapshotTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSet>[]>;
        /**
         * List of time point screencapturing tasks.
         */
        snapshotByTimeOffsetTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSet>[]>;
        /**
         * List of transcoding tasks.
         */
        transcodeTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSet>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSet {
        /**
         * The subtitle file to add.Note: This field may return null, indicating that no valid values can be obtained.
         */
        addOnSubtitles?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitle>[]>;
        /**
         * Adaptive bitrate streaming template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * The relative or absolute output path of the manifest file after being transcoded to adaptive bitrate streaming. If this parameter is left empty, a relative path in the following format will be used by default: `{inputName}_adaptiveDynamicStreaming_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of an output file after being transcoded to adaptive bitrate streaming. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: this field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorage>;
        /**
         * The relative output path of the segment file after being transcoded to adaptive bitrate streaming (in HLS format only). If this parameter is left empty, a relative path in the following format will be used by default: `{inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}_{segmentNumber}.{format}`.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * The relative output path of the substream file after being transcoded to adaptive bitrate streaming. If this parameter is left empty, a relative path in the following format will be used by default: `{inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}.{format}`.
         */
        subStreamObjectName?: pulumi.Input<string>;
        /**
         * List of up to 10 image or text watermarks.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSet>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitle {
        /**
         * The subtitle file.Note: This field may return null, indicating that no valid values can be obtained.
         */
        subtitle?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitle>;
        /**
         * The mode. Valid values:`subtitle-stream`: Add a subtitle track.`close-caption-708`: Embed CEA-708 subtitles in SEI frames.`close-caption-608`: Embed CEA-608 subtitles in SEI frames.Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitle {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitleCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitleS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitleUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitleCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitleS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetAddOnSubtitleSubtitleUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds.If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame;If this value is greater than 0 (e.g., n), the watermark will exist till second n;If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame.If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame;If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame;If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be:TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported:If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values:`once`: no longer appears after watermark playback ends.`repeatLastFrame`: stays on the last frame after watermark playback ends.`repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported:If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSet {
        /**
         * Animated image generating template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time of an animated image in a video in seconds.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * Output path to a generated animated image file, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_animatedGraphic_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a generated animated image file. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSetOutputStorage>;
        /**
         * Start time of an animated image in a video in seconds.
         */
        startTimeOffset: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSetOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSetOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSetOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSetOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskAnimatedGraphicTaskSetOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskImageSpriteTaskSet {
        /**
         * ID of an image sprite generating template.
         */
        definition: pulumi.Input<number>;
        /**
         * Rule of the `{number}` variable in the image sprite output path.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetObjectNumberFormat>;
        /**
         * Output path to a generated image sprite file, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_imageSprite_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a generated image sprite. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetOutputStorage>;
        /**
         * Output path to the WebVTT file after an image sprite is generated, which can only be a relative path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_imageSprite_{definition}.{format}`.
         */
        webVttObjectName?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskImageSpriteTaskSetOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSet {
        /**
         * Sampled screencapturing template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Rule of the `{number}` variable in the sampled screenshot output path.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetObjectNumberFormat>;
        /**
         * Output path to a generated sampled screenshot, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_sampleSnapshot_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a sampled screenshot. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetOutputStorage>;
        /**
         * List of up to 10 image or text watermarks.Note: This field may return null, indicating that no valid values can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSet>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds.If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame;If this value is greater than 0 (e.g., n), the watermark will exist till second n;If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame.If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame;If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame;If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be:TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported:If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values:`once`: no longer appears after watermark playback ends.`repeatLastFrame`: stays on the last frame after watermark playback ends.`repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported:If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSet {
        /**
         * ID of a time point screencapturing template.
         */
        definition: pulumi.Input<number>;
        /**
         * List of screenshot time points in the format of `s` or `%`:If the string ends in `s`, it means that the time point is in seconds; for example, `3.5s` means that the time point is the 3.5th second;If the string ends in `%`, it means that the time point is the specified percentage of the video duration; for example, `10%` means that the time point is 10% of the video duration.
         */
        extTimeOffsetSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rule of the `{number}` variable in the time point screenshot output path.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetObjectNumberFormat>;
        /**
         * Output path to a generated time point screenshot, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_snapshotByTimeOffset_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a generated time point screenshot file. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorage>;
        /**
         * List of time points of screenshots in &lt;font color=red&gt;seconds&lt;/font&gt;.
         */
        timeOffsetSets?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * List of up to 10 image or text watermarks.Note: This field may return null, indicating that no valid values can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSet>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds.If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame;If this value is greater than 0 (e.g., n), the watermark will exist till second n;If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame.If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame;If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame;If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be:TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported:If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values:`once`: no longer appears after watermark playback ends.`repeatLastFrame`: stays on the last frame after watermark playback ends.`repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported:If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSet {
        /**
         * ID of a video transcoding template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a transcoded video, in seconds.If this parameter is left empty or set to 0, the transcoded video will end at the same time as the original video.If this parameter is set to a positive number (n for example), the transcoded video will end at the nth second of the original video.If this parameter is set to a negative number (-n for example), the transcoded video will end at the nth second before the end of the original video.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Opening and closing credits parametersNote: this field may return `null`, indicating that no valid value was found.
         */
        headTailParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameter>;
        /**
         * List of blurs. Up to 10 ones can be supported.
         */
        mosaicSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetMosaicSet>[]>;
        /**
         * Rule of the `{number}` variable in the output path after transcoding.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetObjectNumberFormat>;
        /**
         * Path to a primary output file, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_transcode_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of an output file. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOutputStorage>;
        /**
         * Video transcoding custom parameter, which is valid when `Definition` is not 0.When any parameters in this structure are entered, they will be used to override corresponding parameters in templates.This parameter is used in highly customized scenarios. We recommend you only use `Definition` to specify the transcoding parameter.Note: this field may return `null`, indicating that no valid value was found.
         */
        overrideParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameter>;
        /**
         * Custom video transcoding parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the transcoding parameter preferably.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameter>;
        /**
         * Path to an output file part (the path to ts during transcoding to HLS), which can only be a relative path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_transcode_{definition}_{number}.{format}`.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * Start time offset of a transcoded video, in seconds.If this parameter is left empty or set to 0, the transcoded video will start at the same time as the original video.If this parameter is set to a positive number (n for example), the transcoded video will start at the nth second of the original video.If this parameter is set to a negative number (-n for example), the transcoded video will start at the nth second before the end of the original video.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * List of up to 10 image or text watermarks.Note: This field may return null, indicating that no valid values can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSet>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameter {
        /**
         * Opening credits list.
         */
        headSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSet>[]>;
        /**
         * Closing credits list.
         */
        tailSets?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSet>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSet {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSet {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetMosaicSet {
        /**
         * Origin position, which currently can only be:TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * End time offset of blur in seconds.If this parameter is left empty or 0 is entered, the blur will exist till the last video frame;If this value is greater than 0 (e.g., n), the blur will exist till second n;If this value is smaller than 0 (e.g., -n), the blur will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Blur height. % and px formats are supported:If the string ends in %, the `Height` of the blur will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;If the string ends in px, the `Height` of the blur will be in px; for example, `100px` means that `Height` is 100 px.Default value: 10%.
         */
        height?: pulumi.Input<string>;
        /**
         * Start time offset of blur in seconds. If this parameter is left empty or 0 is entered, the blur will appear upon the first video frame.If this parameter is left empty or 0 is entered, the blur will appear upon the first video frame;If this value is greater than 0 (e.g., n), the blur will appear at second n after the first video frame;If this value is smaller than 0 (e.g., -n), the blur will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Blur width. % and px formats are supported:If the string ends in %, the `Width` of the blur will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;If the string ends in px, the `Width` of the blur will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the blur relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `XPos` of the blur will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;If the string ends in px, the `XPos` of the blur will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * Vertical position of the origin of blur relative to the origin of coordinates of video. % and px formats are supported:If the string ends in %, the `YPos` of the blur will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;If the string ends in px, the `YPos` of the blur will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameter {
        /**
         * The subtitle file to add.Note: This field may return null, indicating that no valid values can be obtained.
         */
        addOnSubtitles?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitle>[]>;
        /**
         * The information of the external audio track to add.Note: This field may return null, indicating that no valid values can be obtained.
         */
        addonAudioStreams?: pulumi.Input<pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStream>[]>;
        /**
         * Audio stream configuration parameter.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAudioTemplate>;
        /**
         * Container format. Valid values: mp4, flv, hls, mp3, flac, ogg, and m4a; mp3, flac, ogg, and m4a are formats of audio files.
         */
        container?: pulumi.Input<string>;
        /**
         * Whether to remove audio data. Valid values:0: retain1: remove.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data. Valid values:0: retain1: remove.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * An extended field for transcoding.Note: This field may return null, indicating that no valid values can be obtained.
         */
        stdExtInfo?: pulumi.Input<string>;
        /**
         * The subtitle settings.Note: This field may return null, indicating that no valid values can be obtained.
         */
        subtitleTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate>;
        /**
         * The TSC transcoding parameters.Note: This field may return null, indicating that no valid values can be obtained.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterTehdConfig>;
        /**
         * Video stream configuration parameter.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterVideoTemplate>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitle {
        /**
         * The subtitle file.Note: This field may return null, indicating that no valid values can be obtained.
         */
        subtitle?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitle>;
        /**
         * The mode. Valid values:`subtitle-stream`: Add a subtitle track.`close-caption-708`: Embed CEA-708 subtitles in SEI frames.`close-caption-608`: Embed CEA-608 subtitles in SEI frames.Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitle {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitleCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitleS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitleUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitleCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitleS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddOnSubtitleSubtitleUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStream {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStreamCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStreamS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStreamUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStreamCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStreamS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAddonAudioStreamUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterAudioTemplate {
        /**
         * Audio channel system. Valid values:1: Mono2: Dual6: StereoWhen the media is packaged in audio format (FLAC, OGG, MP3, M4A), the sound channel cannot be set to stereo.Default value: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Audio stream bitrate in Kbps. Value range: 0 and [26, 256].If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Audio stream codec.When the outer `Container` parameter is `mp3`, the valid value is:libmp3lame.When the outer `Container` parameter is `ogg` or `flac`, the valid value is:flac.When the outer `Container` parameter is `m4a`, the valid values include:libfdk_aac;libmp3lame;ac3.When the outer `Container` parameter is `mp4` or `flv`, the valid values include:libfdk_aac: more suitable for mp4;libmp3lame: more suitable for flv.When the outer `Container` parameter is `hls`, the valid values include:libfdk_aac;libmp3lame.
         */
        codec?: pulumi.Input<string>;
        /**
         * Audio stream sample rate. Valid values:32,00044,10048,000In Hz.
         */
        sampleRate?: pulumi.Input<number>;
        /**
         * The audio tracks to retain. All audio tracks are retained by default.
         */
        streamSelects?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate {
        /**
         * The text transparency. Value range: 0-1.`0`: Fully transparent.`1`: Fully opaque.Default value: 1.Note: This field may return null, indicating that no valid values can be obtained.
         */
        fontAlpha?: pulumi.Input<number>;
        /**
         * The font color in 0xRRGGBB format. Default value: 0xFFFFFF (white).Note: This field may return null, indicating that no valid values can be obtained.
         */
        fontColor?: pulumi.Input<string>;
        /**
         * The font size (pixels). If this is not specified, the font size in the subtitle file will be used.Note: This field may return null, indicating that no valid values can be obtained.
         */
        fontSize?: pulumi.Input<string>;
        /**
         * The font. Valid values:`hei.ttf`: Heiti.`song.ttf`: Songti.`simkai.ttf`: Kaiti.`arial.ttf`: Arial.The default is `hei.ttf`.Note: This field may return null, indicating that no valid values can be obtained.
         */
        fontType?: pulumi.Input<string>;
        /**
         * The URL of the subtitles to add to the video.Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The subtitle track to add to the video. If both `Path` and `StreamIndex` are specified, `Path` will be used. You need to specify at least one of the two parameters.Note: This field may return null, indicating that no valid values can be obtained.
         */
        streamIndex?: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterTehdConfig {
        /**
         * Maximum bitrate, which is valid when `Type` is `TESHD`.If this parameter is left empty or 0 is entered, there will be no upper limit for bitrate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * TESHD type. Valid values:TEHD-100: TESHD-100.If this parameter is left empty, TESHD will not be enabled.
         */
        type?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetOverrideParameterVideoTemplate {
        /**
         * The video bitrate (Kbps). Value range: 0 and [128, 35000].If the value is 0, the bitrate of the video will be the same as that of the source video.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * The video codec. Valid values:`libx264`: H.264`libx265`: H.265`av1`: AOMedia Video 1Note: You must specify a resolution (not higher than 640 x 480) if the H.265 codec is used.Note: You can only use the AOMedia Video 1 codec for MP4 files.
         */
        codec?: pulumi.Input<string>;
        /**
         * Whether to enable adaptive encoding. Valid values:0: Disable1: EnableDefault value: 0. If this parameter is set to `1`, multiple streams with different resolutions and bitrates will be generated automatically. The highest resolution, bitrate, and quality of the streams are determined by the values of `width` and `height`, `Bitrate`, and `Vcrf` in `VideoTemplate` respectively. If these parameters are not set in `VideoTemplate`, the highest resolution generated will be the same as that of the source video, and the highest video quality will be close to VMAF 95. To use this parameter or learn about the billing details of adaptive encoding, please contact your sales rep.
         */
        contentAdaptStream?: pulumi.Input<number>;
        /**
         * The fill mode, which indicates how a video is resized when the video's original aspect ratio is different from the target aspect ratio. Valid values:stretch: Stretch the image frame by frame to fill the entire screen. The video image may become squashed or stretched after transcoding.black: Keep the image&#39;s original aspect ratio and fill the blank space with black bars.white: Keep the image's original aspect ratio and fill the blank space with white bars.gauss: Keep the image's original aspect ratio and apply Gaussian blur to the blank space.Default value: black.Note: Only `stretch` and `black` are supported for adaptive bitrate streaming.
         */
        fillType?: pulumi.Input<string>;
        /**
         * The video frame rate (Hz). Value range: [0, 100].If the value is 0, the frame rate will be the same as that of the source video.Note: For adaptive bitrate streaming, the value range of this parameter is [0, 60].
         */
        fps?: pulumi.Input<number>;
        /**
         * Frame interval between I keyframes. Value range: 0 and [1,100000].If this parameter is 0 or left empty, the system will automatically set the GOP length.
         */
        gop?: pulumi.Input<number>;
        /**
         * Maximum value of the height (or short side) of a video stream in px. Value range: 0 and [128, 4,096].If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Resolution adaption. Valid values:open: Enabled. When resolution adaption is enabled, `Width` indicates the long side of a video, while `Height` indicates the short side.close: Disabled. When resolution adaption is disabled, `Width` indicates the width of a video, while `Height` indicates the height.Default value: open.Note: When resolution adaption is enabled, `Width` cannot be smaller than `Height`.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * The control factor of video constant bitrate. Value range: [1, 51]If this parameter is specified, CRF (a bitrate control method) will be used for transcoding. (Video bitrate will no longer take effect.)It is not recommended to specify this parameter if there are no special requirements.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * Maximum value of the width (or long side) of a video stream in px. Value range: 0 and [128, 4,096].If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameter {
        /**
         * Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameterAudioTemplate>;
        /**
         * Container. Valid values: mp4; flv; hls; mp3; flac; ogg; m4a. Among them, mp3, flac, ogg, and m4a are for audio files.
         */
        container: pulumi.Input<string>;
        /**
         * Whether to remove audio data. Valid values:0: retain;1: remove.Default value: 0.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data. Valid values:0: retain;1: remove.Default value: 0.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * TESHD transcoding parameter.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameterTehdConfig>;
        /**
         * Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameterVideoTemplate>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameterAudioTemplate {
        /**
         * Audio channel system. Valid values:1: Mono2: Dual6: StereoWhen the media is packaged in audio format (FLAC, OGG, MP3, M4A), the sound channel cannot be set to stereo.Default value: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Audio stream bitrate in Kbps. Value range: 0 and [26, 256].If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Audio stream codec.When the outer `Container` parameter is `mp3`, the valid value is:libmp3lame.When the outer `Container` parameter is `ogg` or `flac`, the valid value is:flac.When the outer `Container` parameter is `m4a`, the valid values include:libfdk_aac;libmp3lame;ac3.When the outer `Container` parameter is `mp4` or `flv`, the valid values include:libfdk_aac: more suitable for mp4;libmp3lame: more suitable for flv.When the outer `Container` parameter is `hls`, the valid values include:libfdk_aac;libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Audio stream sample rate. Valid values:32,00044,10048,000In Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameterTehdConfig {
        /**
         * Maximum bitrate, which is valid when `Type` is `TESHD`.If this parameter is left empty or 0 is entered, there will be no upper limit for bitrate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * TESHD type. Valid values:TEHD-100: TESHD-100.If this parameter is left empty, TESHD will not be enabled.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetRawParameterVideoTemplate {
        /**
         * The video bitrate (Kbps). Value range: 0 and [128, 35000].If the value is 0, the bitrate of the video will be the same as that of the source video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * The video codec. Valid values:`libx264`: H.264`libx265`: H.265`av1`: AOMedia Video 1Note: You must specify a resolution (not higher than 640 x 480) if the H.265 codec is used.Note: You can only use the AOMedia Video 1 codec for MP4 files.
         */
        codec: pulumi.Input<string>;
        /**
         * The fill mode, which indicates how a video is resized when the video's original aspect ratio is different from the target aspect ratio. Valid values:stretch: Stretch the image frame by frame to fill the entire screen. The video image may become squashed or stretched after transcoding.black: Keep the image&#39;s original aspect ratio and fill the blank space with black bars.white: Keep the image's original aspect ratio and fill the blank space with white bars.gauss: Keep the image's original aspect ratio and apply Gaussian blur to the blank space.Default value: black.Note: Only `stretch` and `black` are supported for adaptive bitrate streaming.
         */
        fillType?: pulumi.Input<string>;
        /**
         * The video frame rate (Hz). Value range: [0, 100].If the value is 0, the frame rate will be the same as that of the source video.Note: For adaptive bitrate streaming, the value range of this parameter is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * Frame interval between I keyframes. Value range: 0 and [1,100000].If this parameter is 0 or left empty, the system will automatically set the GOP length.
         */
        gop?: pulumi.Input<number>;
        /**
         * Maximum value of the height (or short side) of a video stream in px. Value range: 0 and [128, 4,096].If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Resolution adaption. Valid values:open: Enabled. When resolution adaption is enabled, `Width` indicates the long side of a video, while `Height` indicates the short side.close: Disabled. When resolution adaption is disabled, `Width` indicates the width of a video, while `Height` indicates the height.Default value: open.Note: When resolution adaption is enabled, `Width` cannot be smaller than `Height`.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * The control factor of video constant bitrate. Value range: [1, 51]If this parameter is specified, CRF (a bitrate control method) will be used for transcoding. (Video bitrate will no longer take effect.)It is not recommended to specify this parameter if there are no special requirements.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * Maximum value of the width (or long side) of a video stream in px. Value range: 0 and [128, 4,096].If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds.If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame;If this value is greater than 0 (e.g., n), the watermark will exist till second n;If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame.If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame;If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame;If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be:TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported:If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values:`once`: no longer appears after watermark playback ends.`repeatLastFrame`: stays on the last frame after watermark playback ends.`repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported:If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values:`COS`: A COS bucket address. `URL`: A URL. `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ProcessMediaOperationOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values:`COS`: Tencent Cloud COS`&gt;AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationTaskNotifyConfig {
        /**
         * The AWS SQS queue. This parameter is required if `NotifyType` is `AWS-SQS`.Note: This field may return null, indicating that no valid values can be obtained.
         */
        awsSqa?: pulumi.Input<inputs.Mps.ProcessMediaOperationTaskNotifyConfigAwsSqa>;
        /**
         * The CMQ or TDMQ-CMQ model. Valid values: Queue, Topic.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ region, such as `sh` (Shanghai) or `bj` (Beijing).
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * Workflow notification method. Valid values: Finish, Change. If this parameter is left empty, `Finish` will be used.
         */
        notifyMode?: pulumi.Input<string>;
        /**
         * The notification type. Valid values:`CMQ`: This value is no longer used. Please use `TDMQ-CMQ` instead.`TDMQ-CMQ`: Message queue`URL`: If `NotifyType` is set to `URL`, HTTP callbacks are sent to the URL specified by `NotifyUrl`. HTTP and JSON are used for the callbacks. The packet contains the response parameters of the `ParseNotification` API.`SCF`: This notification type is not recommended. You need to configure it in the SCF console.`AWS-SQS`: AWS queue. This type is only supported for AWS tasks, and the queue must be in the same region as the AWS bucket.&lt;font color=red&gt;Note: If you do not pass this parameter or pass in an empty string, `CMQ` will be used. To use a different notification type, specify this parameter accordingly.&lt;/font&gt;.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback URL, required if `NotifyType` is set to `URL`.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ queue to receive notifications. This parameter is valid when `CmqModel` is `Queue`.
         */
        queueName?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ topic to receive notifications. This parameter is valid when `CmqModel` is `Topic`.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface ProcessMediaOperationTaskNotifyConfigAwsSqa {
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
        /**
         * The name of the SQS queue.
         */
        sqaQueueName: pulumi.Input<string>;
        /**
         * The region of the SQS queue.
         */
        sqaRegion: pulumi.Input<string>;
    }

    export interface ScheduleActivity {
        /**
         * The parameters of a subtask.Note: This field may return null, indicating that no valid values can be obtained.
         */
        activityPara?: pulumi.Input<inputs.Mps.ScheduleActivityActivityPara>;
        /**
         * The subtask type. `input`: The start. `output`: The end. `action-trans`: Transcoding. `action-samplesnapshot`: Sampled screencapturing. `action-AIAnalysis`: Content analysis. `action-AIRecognition`: Content recognition. `action-aiReview`: Content moderation. `action-animated-graphics`: Animated screenshot generation. `action-image-sprite`: Image sprite generation. `action-snapshotByTimeOffset`: Time point screencapturing. `action-adaptive-substream`: Adaptive bitrate streaming.Note: This field may return null, indicating that no valid values can be obtained.
         */
        activityType: pulumi.Input<string>;
        /**
         * The indexes of the subsequent actions. Note: This field may return null, indicating that no valid values can be obtained.
         */
        reardriveIndices?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface ScheduleActivityActivityPara {
        /**
         * An adaptive bitrate streaming task.
         */
        adaptiveDynamicStreamingTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTask>;
        /**
         * A content analysis task.
         */
        aiAnalysisTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAiAnalysisTask>;
        /**
         * A content moderation task.
         */
        aiContentReviewTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAiContentReviewTask>;
        /**
         * A content recognition task.
         */
        aiRecognitionTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAiRecognitionTask>;
        /**
         * An animated screenshot generation task.
         */
        animatedGraphicTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAnimatedGraphicTask>;
        /**
         * An image sprite generation task.
         */
        imageSpriteTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaImageSpriteTask>;
        /**
         * A sampled screencapturing task.
         */
        sampleSnapshotTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTask>;
        /**
         * A time point screencapturing task.
         */
        snapshotByTimeOffsetTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTask>;
        /**
         * A transcoding task.
         */
        transcodeTask?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTask>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTask {
        /**
         * Subtitle files to insert.Note: This field may return null, indicating that no valid value can be obtained.
         */
        addOnSubtitles?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitle>[]>;
        /**
         * Adaptive bitrate streaming template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * The relative or absolute output path of the manifest file after being transcoded to adaptive bitrate streaming. If this parameter is left empty, a relative path in the following format will be used by default: `{inputName}_adaptiveDynamicStreaming_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of an output file after being transcoded to adaptive bitrate streaming. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: this field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskOutputStorage>;
        /**
         * The relative output path of the segment file after being transcoded to adaptive bitrate streaming (in HLS format only). If this parameter is left empty, a relative path in the following format will be used by default: `{inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}_{segmentNumber}.{format}`.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * The relative output path of the substream file after being transcoded to adaptive bitrate streaming. If this parameter is left empty, a relative path in the following format will be used by default: `{inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}.{format}`.
         */
        subStreamObjectName?: pulumi.Input<string>;
        /**
         * List of up to 10 image or text watermarks.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSet>[]>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitle {
        /**
         * Subtitle file.Note: This field may return null, indicating that no valid value can be obtained.
         */
        subtitle?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitle>;
        /**
         * The inserting type. Valid values: `subtitle-stream`:Insert title track. `close-caption-708`:CEA-708 subtitle encode to SEI frame. `close-caption-608`:CEA-608 subtitle encode to SEI frame. Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitle {
        /**
         * The information of the COS object to process. This parameter is valid and required when Type is COS.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitleCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if Type is AWS-S3.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitleS3InputInfo>;
        /**
         * The input type. Valid values:  `COS`:A COS bucket address. `URL`:A URL. `AWS-S3`:An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when Type is URL.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitleUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitleCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitleS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskAddOnSubtitleSubtitleUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame; If this value is greater than 0 (e.g., n), the watermark will exist till second n; If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame; If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values: image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported: If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height; If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values: `once`: no longer appears after watermark playback ends. `repeatLastFrame`: stays on the last frame after watermark playback ends. `repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported: If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width; If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAdaptiveDynamicStreamingTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAiAnalysisTask {
        /**
         * Video content analysis template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * An extended parameter, whose value is a stringfied JSON.Note: This parameter is for customers with special requirements. It needs to be customized offline.Note: This field may return null, indicating that no valid values can be obtained.
         */
        extendedParameter?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAiContentReviewTask {
        /**
         * Video content audit template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaAiRecognitionTask {
        /**
         * Intelligent video recognition template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaAnimatedGraphicTask {
        /**
         * Animated image generating template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time of an animated image in a video in seconds.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * Output path to a generated animated image file, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_animatedGraphic_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a generated animated image file. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAnimatedGraphicTaskOutputStorage>;
        /**
         * Start time of an animated image in a video in seconds.
         */
        startTimeOffset: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaAnimatedGraphicTaskOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAnimatedGraphicTaskOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaAnimatedGraphicTaskOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAnimatedGraphicTaskOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaAnimatedGraphicTaskOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaImageSpriteTask {
        /**
         * ID of an image sprite generating template.
         */
        definition: pulumi.Input<number>;
        /**
         * Rule of the `{number}` variable in the image sprite output path.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaImageSpriteTaskObjectNumberFormat>;
        /**
         * Output path to a generated image sprite file, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_imageSprite_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a generated image sprite. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaImageSpriteTaskOutputStorage>;
        /**
         * Output path to the WebVTT file after an image sprite is generated, which can only be a relative path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_imageSprite_{definition}.{format}`.
         */
        webVttObjectName?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaImageSpriteTaskObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaImageSpriteTaskOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaImageSpriteTaskOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaImageSpriteTaskOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaImageSpriteTaskOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaImageSpriteTaskOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTask {
        /**
         * Sampled screencapturing template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Rule of the `{number}` variable in the sampled screenshot output path.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskObjectNumberFormat>;
        /**
         * Output path to a generated sampled screenshot, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_sampleSnapshot_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a sampled screenshot. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskOutputStorage>;
        /**
         * List of up to 10 image or text watermarks.Note: This field may return null, indicating that no valid values can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSet>[]>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame; If this value is greater than 0 (e.g., n), the watermark will exist till second n; If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame; If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values: image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported: If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height; If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values: `once`: no longer appears after watermark playback ends. `repeatLastFrame`: stays on the last frame after watermark playback ends. `repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported: If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width; If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSampleSnapshotTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTask {
        /**
         * ID of a time point screencapturing template.
         */
        definition: pulumi.Input<number>;
        /**
         * List of screenshot time points in the format of `s` or `%`: If the string ends in `s`, it means that the time point is in seconds; for example, `3.5s` means that the time point is the 3.5th second; If the string ends in `%`, it means that the time point is the specified percentage of the video duration; for example, `10%` means that the time point is 10% of the video duration.
         */
        extTimeOffsetSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rule of the `{number}` variable in the time point screenshot output path.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskObjectNumberFormat>;
        /**
         * Output path to a generated time point screenshot, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_snapshotByTimeOffset_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of a generated time point screenshot file. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskOutputStorage>;
        /**
         * List of up to 10 image or text watermarks.Note: This field may return null, indicating that no valid values can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSet>[]>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame; If this value is greater than 0 (e.g., n), the watermark will exist till second n; If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame; If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values: image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported: If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height; If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values: `once`: no longer appears after watermark playback ends. `repeatLastFrame`: stays on the last frame after watermark playback ends. `repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported: If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width; If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaSnapshotByTimeOffsetTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTask {
        /**
         * ID of a video transcoding template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a transcoded video, in seconds. If this parameter is left empty or set to 0, the transcoded video will end at the same time as the original video. If this parameter is set to a positive number (n for example), the transcoded video will end at the nth second of the original video. If this parameter is set to a negative number (-n for example), the transcoded video will end at the nth second before the end of the original video.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Opening and closing credits parametersNote: this field may return `null`, indicating that no valid value was found.
         */
        headTailParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameter>;
        /**
         * List of blurs. Up to 10 ones can be supported.
         */
        mosaicSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskMosaicSet>[]>;
        /**
         * Rule of the `{number}` variable in the output path after transcoding.Note: This field may return null, indicating that no valid values can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskObjectNumberFormat>;
        /**
         * Path to a primary output file, which can be a relative path or an absolute path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_transcode_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * Target bucket of an output file. If this parameter is left empty, the `OutputStorage` value of the upper folder will be inherited.Note: This field may return null, indicating that no valid values can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOutputStorage>;
        /**
         * Video transcoding custom parameter, which is valid when `Definition` is not 0.When any parameters in this structure are entered, they will be used to override corresponding parameters in templates.This parameter is used in highly customized scenarios. We recommend you only use `Definition` to specify the transcoding parameter.Note: this field may return `null`, indicating that no valid value was found.
         */
        overrideParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameter>;
        /**
         * Custom video transcoding parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the transcoding parameter preferably.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskRawParameter>;
        /**
         * Path to an output file part (the path to ts during transcoding to HLS), which can only be a relative path. If this parameter is left empty, the following relative path will be used by default: `{inputName}_transcode_{definition}_{number}.{format}`.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * Start time offset of a transcoded video, in seconds. If this parameter is left empty or set to 0, the transcoded video will start at the same time as the original video. If this parameter is set to a positive number (n for example), the transcoded video will start at the nth second of the original video. If this parameter is set to a negative number (-n for example), the transcoded video will start at the nth second before the end of the original video.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * List of up to 10 image or text watermarks.Note: This field may return null, indicating that no valid values can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSet>[]>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameter {
        /**
         * Opening credits list.
         */
        headSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSet>[]>;
        /**
         * Closing credits list.
         */
        tailSets?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSet>[]>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSet {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSetCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSetS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSetUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSetCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSetS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterHeadSetUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSet {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSetCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSetS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSetUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSetCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSetS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskHeadTailParameterTailSetUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskMosaicSet {
        /**
         * Origin position, which currently can only be: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * End time offset of blur in seconds. If this parameter is left empty or 0 is entered, the blur will exist till the last video frame; If this value is greater than 0 (e.g., n), the blur will exist till second n; If this value is smaller than 0 (e.g., -n), the blur will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Blur height. % and px formats are supported: If the string ends in %, the `Height` of the blur will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height; If the string ends in px, the `Height` of the blur will be in px; for example, `100px` means that `Height` is 100 px.Default value: 10%.
         */
        height?: pulumi.Input<string>;
        /**
         * Start time offset of blur in seconds. If this parameter is left empty or 0 is entered, the blur will appear upon the first video frame. If this parameter is left empty or 0 is entered, the blur will appear upon the first video frame; If this value is greater than 0 (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than 0 (e.g., -n), the blur will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Blur width. % and px formats are supported: If the string ends in %, the `Width` of the blur will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width; If the string ends in px, the `Width` of the blur will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the blur relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `XPos` of the blur will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the blur will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * Vertical position of the origin of blur relative to the origin of coordinates of video. % and px formats are supported: If the string ends in %, the `YPos` of the blur will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of the blur will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskObjectNumberFormat {
        /**
         * Increment of the `{number}` variable. Default value: 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * Start value of the `{number}` variable. Default value: 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * Minimum length of the `{number}` variable. A placeholder will be used if the variable length is below the minimum requirement. Default value: 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * Placeholder used when the `{number}` variable length is below the minimum requirement. Default value: 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameter {
        /**
         * Subtitle files to insert.Note: This field may return null, indicating that no valid value can be obtained.
         */
        addOnSubtitles?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitle>[]>;
        /**
         * The information of the external audio track to add.Note: This field may return null, indicating that no valid values can be obtained.
         */
        addonAudioStreams?: pulumi.Input<pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStream>[]>;
        /**
         * Audio stream configuration parameter.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAudioTemplate>;
        /**
         * Container format. Valid values: mp4, flv, hls, mp3, flac, ogg, and m4a; mp3, flac, ogg, and m4a are formats of audio files.
         */
        container?: pulumi.Input<string>;
        /**
         * Whether to remove audio data. Valid values: 0: retain 1: remove.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data. Valid values: 0: retain 1: remove.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Transcoding extension field.Note: This field may return null, indicating that no valid value can be obtained.
         */
        stdExtInfo?: pulumi.Input<string>;
        /**
         * The subtitle settings.
         */
        subtitleTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterSubtitleTemplate>;
        /**
         * TESHD transcoding parameter.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterTehdConfig>;
        /**
         * Video stream configuration parameter.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterVideoTemplate>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitle {
        /**
         * Subtitle file.Note: This field may return null, indicating that no valid value can be obtained.
         */
        subtitle?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitle>;
        /**
         * The inserting type. Valid values: `subtitle-stream`:Insert title track. `close-caption-708`:CEA-708 subtitle encode to SEI frame. `close-caption-608`:CEA-608 subtitle encode to SEI frame. Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitle {
        /**
         * The information of the COS object to process. This parameter is valid and required when Type is COS.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitleCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if Type is AWS-S3.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitleS3InputInfo>;
        /**
         * The input type. Valid values:  `COS`:A COS bucket address. `URL`:A URL. `AWS-S3`:An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when Type is URL.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitleUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitleCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitleS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddOnSubtitleSubtitleUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStream {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStreamCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStreamS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStreamUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStreamCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStreamS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAddonAudioStreamUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterAudioTemplate {
        /**
         * Audio channel system. Valid values: 1: Mono 2: Dual 6: StereoWhen the media is packaged in audio format (FLAC, OGG, MP3, M4A), the sound channel cannot be set to stereo.Default value: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Audio stream bitrate in Kbps. Value range: 0 and [26, 256].If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Audio stream codec.When the outer `Container` parameter is `mp3`, the valid value is: libmp3lame.When the outer `Container` parameter is `ogg` or `flac`, the valid value is: flac.When the outer `Container` parameter is `m4a`, the valid values include: libfdk_aac; libmp3lame; ac3.When the outer `Container` parameter is `mp4` or `flv`, the valid values include: libfdk_aac: more suitable for mp4; libmp3lame: more suitable for flv.When the outer `Container` parameter is `hls`, the valid values include: libfdk_aac; libmp3lame.
         */
        codec?: pulumi.Input<string>;
        /**
         * Audio stream sample rate. Valid values: 32,000 44,100 48,000In Hz.
         */
        sampleRate?: pulumi.Input<number>;
        /**
         * The audio tracks to retain. All audio tracks are retained by default.
         */
        streamSelects?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterSubtitleTemplate {
        /**
         * The text transparency. Value range: 0-1. 0: Completely transparent 1: Completely opaqueDefault value: 1.
         */
        fontAlpha?: pulumi.Input<number>;
        /**
         * The font color in 0xRRGGBB format. Default value: 0xFFFFFF (white).
         */
        fontColor?: pulumi.Input<string>;
        /**
         * The font size (pixels). If this is not specified, the font size in the subtitle file will be used.
         */
        fontSize?: pulumi.Input<string>;
        /**
         * The font type. Valid values: `hei.ttf` `song.ttf` `simkai.ttf` `arial.ttf` (for English only). The default is `hei.ttf`.
         */
        fontType?: pulumi.Input<string>;
        /**
         * The URL of the subtitles to add to the video.
         */
        path?: pulumi.Input<string>;
        /**
         * The subtitle track to add to the video. If both `Path` and `StreamIndex` are specified, `Path` will be used. You need to specify at least one of the two parameters.
         */
        streamIndex?: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterTehdConfig {
        /**
         * Maximum bitrate, which is valid when `Type` is `TESHD`.If this parameter is left empty or 0 is entered, there will be no upper limit for bitrate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * TESHD type. Valid values: TEHD-100: TESHD-100.If this parameter is left empty, TESHD will not be enabled.
         */
        type?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskOverrideParameterVideoTemplate {
        /**
         * The video bitrate (Kbps). Value range: 0 and [128, 35000].If the value is 0, the bitrate of the video will be the same as that of the source video.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * The video codec. Valid values: `libx264`: H.264 `libx265`: H.265 `av1`: AOMedia Video 1Note: You must specify a resolution (not higher than 640 x 480) if the H.265 codec is used.Note: You can only use the AOMedia Video 1 codec for MP4 files.
         */
        codec?: pulumi.Input<string>;
        /**
         * Whether to enable adaptive encoding. Valid values: 0: Disable 1: EnableDefault value: 0. If this parameter is set to `1`, multiple streams with different resolutions and bitrates will be generated automatically. The highest resolution, bitrate, and quality of the streams are determined by the values of `width` and `height`, `Bitrate`, and `Vcrf` in `VideoTemplate` respectively. If these parameters are not set in `VideoTemplate`, the highest resolution generated will be the same as that of the source video, and the highest video quality will be close to VMAF 95. To use this parameter or learn about the billing details of adaptive encoding, please contact your sales rep.
         */
        contentAdaptStream?: pulumi.Input<number>;
        /**
         * The fill mode, which indicates how a video is resized when the video's original aspect ratio is different from the target aspect ratio. Valid values: stretch: Stretch the image frame by frame to fill the entire screen. The video image may become squashed or stretched after transcoding. black: Keep the image&#39;s original aspect ratio and fill the blank space with black bars. white: Keep the image's original aspect ratio and fill the blank space with white bars. gauss: Keep the image's original aspect ratio and apply Gaussian blur to the blank space.Default value: black.Note: Only `stretch` and `black` are supported for adaptive bitrate streaming.
         */
        fillType?: pulumi.Input<string>;
        /**
         * The video frame rate (Hz). Value range: [0, 100].If the value is 0, the frame rate will be the same as that of the source video.Note: For adaptive bitrate streaming, the value range of this parameter is [0, 60].
         */
        fps?: pulumi.Input<number>;
        /**
         * Frame interval between I keyframes. Value range: 0 and [1,100000].If this parameter is 0 or left empty, the system will automatically set the GOP length.
         */
        gop?: pulumi.Input<number>;
        /**
         * Maximum value of the height (or short side) of a video stream in px. Value range: 0 and [128, 4,096]. If both `Width` and `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled; If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Resolution adaption. Valid values: open: Enabled. When resolution adaption is enabled, `Width` indicates the long side of a video, while `Height` indicates the short side. close: Disabled. When resolution adaption is disabled, `Width` indicates the width of a video, while `Height` indicates the height.Default value: open.Note: When resolution adaption is enabled, `Width` cannot be smaller than `Height`.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * The control factor of video constant bitrate. Value range: [1, 51]If this parameter is specified, CRF (a bitrate control method) will be used for transcoding. (Video bitrate will no longer take effect.)It is not recommended to specify this parameter if there are no special requirements.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * Maximum value of the width (or long side) of a video stream in px. Value range: 0 and [128, 4,096]. If both `Width` and `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled; If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskRawParameter {
        /**
         * Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskRawParameterAudioTemplate>;
        /**
         * Container. Valid values: mp4; flv; hls; mp3; flac; ogg; m4a. Among them, mp3, flac, ogg, and m4a are for audio files.
         */
        container: pulumi.Input<string>;
        /**
         * Whether to remove audio data. Valid values: 0: retain; 1: remove.Default value: 0.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data. Valid values: 0: retain; 1: remove.Default value: 0.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * TESHD transcoding parameter.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskRawParameterTehdConfig>;
        /**
         * Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskRawParameterVideoTemplate>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskRawParameterAudioTemplate {
        /**
         * Audio channel system. Valid values: 1: Mono 2: Dual 6: StereoWhen the media is packaged in audio format (FLAC, OGG, MP3, M4A), the sound channel cannot be set to stereo.Default value: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Audio stream bitrate in Kbps. Value range: 0 and [26, 256].If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Audio stream codec.When the outer `Container` parameter is `mp3`, the valid value is: libmp3lame.When the outer `Container` parameter is `ogg` or `flac`, the valid value is: flac.When the outer `Container` parameter is `m4a`, the valid values include: libfdk_aac; libmp3lame; ac3.When the outer `Container` parameter is `mp4` or `flv`, the valid values include: libfdk_aac: more suitable for mp4; libmp3lame: more suitable for flv.When the outer `Container` parameter is `hls`, the valid values include: libfdk_aac; libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Audio stream sample rate. Valid values: 32,000 44,100 48,000In Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskRawParameterTehdConfig {
        /**
         * Maximum bitrate, which is valid when `Type` is `TESHD`.If this parameter is left empty or 0 is entered, there will be no upper limit for bitrate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * TESHD type. Valid values: TEHD-100: TESHD-100.If this parameter is left empty, TESHD will not be enabled.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskRawParameterVideoTemplate {
        /**
         * The video bitrate (Kbps). Value range: 0 and [128, 35000].If the value is 0, the bitrate of the video will be the same as that of the source video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * The video codec. Valid values: `libx264`: H.264 `libx265`: H.265 `av1`: AOMedia Video 1Note: You must specify a resolution (not higher than 640 x 480) if the H.265 codec is used.Note: You can only use the AOMedia Video 1 codec for MP4 files.
         */
        codec: pulumi.Input<string>;
        /**
         * The fill mode, which indicates how a video is resized when the video's original aspect ratio is different from the target aspect ratio. Valid values: stretch: Stretch the image frame by frame to fill the entire screen. The video image may become squashed or stretched after transcoding. black: Keep the image&#39;s original aspect ratio and fill the blank space with black bars. white: Keep the image's original aspect ratio and fill the blank space with white bars. gauss: Keep the image's original aspect ratio and apply Gaussian blur to the blank space.Default value: black.Note: Only `stretch` and `black` are supported for adaptive bitrate streaming.
         */
        fillType?: pulumi.Input<string>;
        /**
         * The video frame rate (Hz). Value range: [0, 100].If the value is 0, the frame rate will be the same as that of the source video.Note: For adaptive bitrate streaming, the value range of this parameter is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * Frame interval between I keyframes. Value range: 0 and [1,100000].If this parameter is 0 or left empty, the system will automatically set the GOP length.
         */
        gop?: pulumi.Input<number>;
        /**
         * Maximum value of the height (or short side) of a video stream in px. Value range: 0 and [128, 4,096]. If both `Width` and `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled; If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Resolution adaption. Valid values: open: Enabled. When resolution adaption is enabled, `Width` indicates the long side of a video, while `Height` indicates the short side. close: Disabled. When resolution adaption is disabled, `Width` indicates the width of a video, while `Height` indicates the height.Default value: open.Note: When resolution adaption is enabled, `Width` cannot be smaller than `Height`.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * The control factor of video constant bitrate. Value range: [1, 51]If this parameter is specified, CRF (a bitrate control method) will be used for transcoding. (Video bitrate will no longer take effect.)It is not recommended to specify this parameter if there are no special requirements.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * Maximum value of the width (or long side) of a video stream in px. Value range: 0 and [128, 4,096]. If both `Width` and `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled; If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSet {
        /**
         * ID of a watermarking template.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will exist till the last video frame; If this value is greater than 0 (e.g., n), the watermark will exist till second n; If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Custom watermark parameter, which is valid if `Definition` is 0.This parameter is used in highly customized scenarios. We recommend you use `Definition` to specify the watermark parameter preferably.Custom watermark parameter is not available for screenshot.
         */
        rawParameter?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameter>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame. If this parameter is left empty or 0 is entered, the watermark will appear upon the first video frame; If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to 2,000,000 characters. This field is required only when the watermark type is `SVG`.SVG watermark is not available for screenshot.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to 100 characters. This field is required only when the watermark type is text.Text watermark is not available for screenshot.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameter {
        /**
         * Origin position, which currently can only be: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text.Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type. Valid values: image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplate {
        /**
         * Watermark height. % and px formats are supported: If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height; If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px.Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Input content of watermark image. JPEG and PNG images are supported.
         */
        imageContent: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Repeat type of an animated watermark. Valid values: `once`: no longer appears after watermark playback ends. `repeatLastFrame`: stays on the last frame after watermark playback ends. `repeat` (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Watermark width. % and px formats are supported: If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width; If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks.
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContentS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleActivityActivityParaTranscodeTaskWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface ScheduleOutputStorage {
        /**
         * The location to save the output object in COS. This parameter is valid and required when `Type` is COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.ScheduleOutputStorageCosOutputStorage>;
        /**
         * The AWS S3 bucket to save the output file. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3OutputStorage?: pulumi.Input<inputs.Mps.ScheduleOutputStorageS3OutputStorage>;
        /**
         * The storage type for a media processing output file. Valid values: `COS`: Tencent Cloud COS `AWS-S3`: AWS S3. This type is only supported for AWS tasks, and the output bucket must be in the same region as the bucket of the source file.
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleOutputStorageCosOutputStorage {
        /**
         * The bucket to which the output file of media processing is saved, such as `TopRankVideo-125xxx88`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The region of the output bucket, such as `ap-chongqing`. If this parameter is left empty, the value of the upper layer will be inherited.
         */
        region?: pulumi.Input<string>;
    }

    export interface ScheduleOutputStorageS3OutputStorage {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleTaskNotifyConfig {
        /**
         * The AWS SQS queue. This parameter is required if `NotifyType` is `AWS-SQS`.Note: This field may return null, indicating that no valid values can be obtained.
         */
        awsSqs?: pulumi.Input<inputs.Mps.ScheduleTaskNotifyConfigAwsSqs>;
        /**
         * The CMQ or TDMQ-CMQ model. Valid values: Queue, Topic.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ region, such as `sh` (Shanghai) or `bj` (Beijing).
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * Workflow notification method. Valid values: Finish, Change. If this parameter is left empty, `Finish` will be used.
         */
        notifyMode?: pulumi.Input<string>;
        /**
         * The notification type. Valid values: `CMQ`: This value is no longer used. Please use `TDMQ-CMQ` instead. `TDMQ-CMQ`: Message queue `URL`: If `NotifyType` is set to `URL`, HTTP callbacks are sent to the URL specified by `NotifyUrl`. HTTP and JSON are used for the callbacks. The packet contains the response parameters of the `ParseNotification` API. `SCF`: This notification type is not recommended. You need to configure it in the SCF console. `AWS-SQS`: AWS queue. This type is only supported for AWS tasks, and the queue must be in the same region as the AWS bucket.Note: If you do not pass this parameter or pass in an empty string, `CMQ` will be used. To use a different notification type, specify this parameter accordingly.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback URL, required if `NotifyType` is set to `URL`.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ queue to receive notifications. This parameter is valid when `CmqModel` is `Queue`.
         */
        queueName?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ topic to receive notifications. This parameter is valid when `CmqModel` is `Topic`.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface ScheduleTaskNotifyConfigAwsSqs {
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
        /**
         * The name of the SQS queue.
         */
        sqsQueueName: pulumi.Input<string>;
        /**
         * The region of the SQS queue.
         */
        sqsRegion: pulumi.Input<string>;
    }

    export interface ScheduleTrigger {
        /**
         * The AWS S3 trigger. This parameter is valid and required if `Type` is `AwsS3FileUpload`.Note: Currently, the key for the AWS S3 bucket, the trigger SQS queue, and the callback SQS queue must be the same.Note: This field may return null, indicating that no valid values can be obtained.
         */
        awsS3FileUploadTrigger?: pulumi.Input<inputs.Mps.ScheduleTriggerAwsS3FileUploadTrigger>;
        /**
         * This parameter is required and valid when `Type` is `CosFileUpload`, indicating the COS trigger rule.Note: This field may return null, indicating that no valid values can be obtained.
         */
        cosFileUploadTrigger?: pulumi.Input<inputs.Mps.ScheduleTriggerCosFileUploadTrigger>;
        /**
         * The trigger type. Valid values: `CosFileUpload`: Tencent Cloud COS trigger. `AwsS3FileUpload`: AWS S3 trigger. Currently, this type is only supported for transcoding tasks and schemes (not supported for workflows).
         */
        type: pulumi.Input<string>;
    }

    export interface ScheduleTriggerAwsS3FileUploadTrigger {
        /**
         * The AWS SQS queue. This parameter is required if `NotifyType` is `AWS-SQS`.Note: This field may return null, indicating that no valid values can be obtained.
         */
        awsSqs?: pulumi.Input<inputs.Mps.ScheduleTriggerAwsS3FileUploadTriggerAwsSqs>;
        /**
         * Input path directory bound to a workflow, such as `/movie/201907/`. If this parameter is left empty, the `/` root directory will be used.
         */
        dir?: pulumi.Input<string>;
        /**
         * Format list of files that can trigger a workflow, such as [mp4, flv, mov]. If this parameter is left empty, files in all formats can trigger the workflow.
         */
        formats?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to access the AWS S3 object.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to access the AWS S3 object.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface ScheduleTriggerAwsS3FileUploadTriggerAwsSqs {
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
        /**
         * The name of the SQS queue.
         */
        sqsQueueName: pulumi.Input<string>;
        /**
         * The region of the SQS queue.
         */
        sqsRegion: pulumi.Input<string>;
    }

    export interface ScheduleTriggerCosFileUploadTrigger {
        /**
         * Name of the COS bucket bound to a workflow, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path directory bound to a workflow, such as `/movie/201907/`. If this parameter is left empty, the `/` root directory will be used.
         */
        dir?: pulumi.Input<string>;
        /**
         * Format list of files that can trigger a workflow, such as [mp4, flv, mov]. If this parameter is left empty, files in all formats can trigger the workflow.
         */
        formats?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Region of the COS bucket bound to a workflow, such as `ap-chongiqng`.
         */
        region: pulumi.Input<string>;
    }

    export interface TranscodeTemplateAudioTemplate {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of frequency stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface TranscodeTemplateEnhanceConfig {
        /**
         * Video Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        videoEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhance>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhance {
        /**
         * De-artifact (glitch) configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        artifactRepair?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceArtifactRepair>;
        /**
         * Color Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        colorEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceColorEnhance>;
        /**
         * Video Noise Reduction Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        denoise?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceDenoise>;
        /**
         * Face Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        faceEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceFaceEnhance>;
        /**
         * Interpolation frame rate configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        frameRate?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceFrameRate>;
        /**
         * HDR configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        hdr?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceHdr>;
        /**
         * Comprehensive Enhanced Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        imageQualityEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceImageQualityEnhance>;
        /**
         * Low Light Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        lowLightEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceLowLightEnhance>;
        /**
         * De-scratch configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        scratchRepair?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceScratchRepair>;
        /**
         * Detail Enhancement Configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        sharpEnhance?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceSharpEnhance>;
        /**
         * Super resolution configuration.Note: This field may return null, indicating that no valid value can be obtained.
         */
        superResolution?: pulumi.Input<inputs.Mps.TranscodeTemplateEnhanceConfigVideoEnhanceSuperResolution>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceArtifactRepair {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceColorEnhance {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/normal/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceDenoise {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceFaceEnhance {
        /**
         * Intensity, value range: 0.0~1.0.Default value: 0.0.Note: This field may return null, indicating that no valid value can be obtained.
         */
        intensity?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceFrameRate {
        /**
         * Frame rate, value range: [0, 100], unit: Hz.Default value: 0.Note: For transcoding, this parameter will override the Fps inside the VideoTemplate.Note: This field may return null, indicating that no valid value can be obtained.
         */
        fps?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceHdr {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: HDR10/HLG.Default value: HDR10.Note: The encoding method of video needs to be libx265.Note: Video encoding bit depth is 10.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceImageQualityEnhance {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: weak/normal/strong.Default value: weak.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceLowLightEnhance {
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value: normal.Default value: normal.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceScratchRepair {
        /**
         * Intensity, value range: 0.0~1.0.Default value: 0.0.Note: This field may return null, indicating that no valid value can be obtained.
         */
        intensity?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceSharpEnhance {
        /**
         * Intensity, value range: 0.0~1.0.Default value: 0.0.Note: This field may return null, indicating that no valid value can be obtained.
         */
        intensity?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateEnhanceConfigVideoEnhanceSuperResolution {
        /**
         * Super resolution multiple, optional value:2: currently only supports 2x super resolution.Default value: 2.Note: This field may return null, indicating that no valid value can be obtained.
         */
        size?: pulumi.Input<number>;
        /**
         * Capability configuration switch, optional value: ON/OFF.Default value: ON.
         */
        switch?: pulumi.Input<string>;
        /**
         * Type, optional value:lq: super-resolution for low-definition video with more noise.hq: super resolution for high-definition video.Default value: lq.Note: This field may return null, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface TranscodeTemplateTehdConfig {
        /**
         * The upper limit of the video bit rate, which is valid when the Type specifies the ultra-fast HD type.Do not fill in or fill in 0 means that there is no upper limit on the video bit rate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extremely high-definition type, optional value:TEHD-100: Extreme HD-100.Not filling means that the ultra-fast high-definition is not enabled.
         */
        type: pulumi.Input<string>;
    }

    export interface TranscodeTemplateVideoTemplate {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Filling method, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling method:stretch: Stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave black, keep the aspect ratio of the video unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video unchanged, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and fill the rest of the edge with Gaussian blur.Default: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of video stream height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional values:```open: open, at this time, Width represents the long side of the video, Height represents the short side of the video.close: close, at this time, Width represents the width of the video, and Height represents the height of the video.Default: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of video stream width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WatermarkTemplateImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels. The value range is 0 or [8, 4096].Default value: 0px. Indicates that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * Watermark image[Base64](https://tools.ietf.org/html/rfc4648) encoded string. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<string>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges:once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixel, such as 100px means that the Width is 100 pixels. The value range is [8, 4096].Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WatermarkTemplateSvgTemplate {
        /**
         * The height of the watermark, supports px, W%, H%, S%, L% six formats:When the string ends with px, it means that the watermark Height unit is pixels, such as 100px means that the Height is 100 pixels; when filling 0px and Width is not 0px, it means that the height of the watermark is proportionally scaled according to the original SVG image; when both Width and Height are filled When 0px, it means that the height of the watermark takes the height of the original SVG image.When the string ends with W%, it means that the watermark Height is a percentage of the video width, such as 10W% means that the Height is 10% of the video width.When the string ends with H%, it means that the watermark Height is the percentage size of the video height, such as 10H% means that the Height is 10% of the video height.When the string ends with S%, it means that the watermark Height is the percentage size of the short side of the video, such as 10S% means that the Height is 10% of the short side of the video.When the string ends with L%, it means that the watermark Height is the percentage size of the long side of the video, such as 10L% means that the Height is 10% of the long side of the video.When the string ends with %, the meaning is the same as H%.Default value: 0px.
         */
        height?: pulumi.Input<string>;
        /**
         * The width of the watermark, supports px, %, W%, H%, S%, L% six formats.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels; when filling 0px and the Height is not 0px, it means that the width of the watermark is proportionally scaled according to the original SVG image; when both Width and Height are filled When 0px, it means that the width of the watermark takes the width of the original SVG image.When the string ends with W%, it means that the watermark Width is a percentage of the video width, such as 10W% means that the Width is 10% of the video width.When the string ends with H%, it means that the watermark Width is a percentage of the video height, such as 10H% means that the Width is 10% of the video height.When the string ends with S%, it means that the watermark Width is the percentage size of the short side of the video, such as 10S% means that the Width is 10% of the short side of the video.When the string ends with L%, it means that the watermark Width is the percentage size of the long side of the video, such as 10L% means that the Width is 10% of the long side of the video.When the string ends with %, it has the same meaning as W%.Default value: 10W%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WatermarkTemplateTextTemplate {
        /**
         * Text transparency, value range: (0, 1].0: fully transparent.1: fully opaque.Default value: 1.
         */
        fontAlpha: pulumi.Input<number>;
        /**
         * Font color, format: 0xRRGGBB, default value: 0xFFFFFF (white).
         */
        fontColor: pulumi.Input<string>;
        /**
         * Font size, format: Npx, N is a number.
         */
        fontSize: pulumi.Input<string>;
        /**
         * Font type, currently supports two:simkai.ttf: can support Chinese and English.arial.ttf: English only.
         */
        fontType: pulumi.Input<string>;
    }

    export interface WithdrawsWatermarkOperationInputInfo {
        /**
         * The information of the COS object to process. This parameter is valid and required when `Type` is `COS`.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WithdrawsWatermarkOperationInputInfoCosInputInfo>;
        /**
         * The information of the AWS S3 object processed. This parameter is required if `Type` is `AWS-S3`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        s3InputInfo?: pulumi.Input<inputs.Mps.WithdrawsWatermarkOperationInputInfoS3InputInfo>;
        /**
         * The input type. Valid values: `COS`: A COS bucket address.  `URL`: A URL.  `AWS-S3`: An AWS S3 bucket address. Currently, this type is only supported for transcoding tasks..
         */
        type: pulumi.Input<string>;
        /**
         * The URL of the object to process. This parameter is valid and required when `Type` is `URL`.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WithdrawsWatermarkOperationInputInfoUrlInputInfo>;
    }

    export interface WithdrawsWatermarkOperationInputInfoCosInputInfo {
        /**
         * The COS bucket of the object to process, such as `TopRankVideo-125xxx88`.
         */
        bucket: pulumi.Input<string>;
        /**
         * The path of the object to process, such as `/movie/201907/WildAnimal.mov`.
         */
        object: pulumi.Input<string>;
        /**
         * The region of the COS bucket, such as `ap-chongqing`.
         */
        region: pulumi.Input<string>;
    }

    export interface WithdrawsWatermarkOperationInputInfoS3InputInfo {
        /**
         * The AWS S3 bucket.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The path of the AWS S3 object.
         */
        s3Object: pulumi.Input<string>;
        /**
         * The region of the AWS S3 bucket.
         */
        s3Region: pulumi.Input<string>;
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
    }

    export interface WithdrawsWatermarkOperationInputInfoUrlInputInfo {
        /**
         * URL of a video.
         */
        url: pulumi.Input<string>;
    }

    export interface WithdrawsWatermarkOperationTaskNotifyConfig {
        /**
         * The AWS SQS queue. This parameter is required if `NotifyType` is `AWS-SQS`.Note: This field may return null, indicating that no valid values can be obtained.
         */
        awsSqs?: pulumi.Input<inputs.Mps.WithdrawsWatermarkOperationTaskNotifyConfigAwsSqs>;
        /**
         * The CMQ or TDMQ-CMQ model. Valid values: Queue, Topic.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ region, such as `sh` (Shanghai) or `bj` (Beijing).
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * Workflow notification method. Valid values: Finish, Change. If this parameter is left empty, `Finish` will be used.
         */
        notifyMode?: pulumi.Input<string>;
        /**
         * The notification type. Valid values:  `CMQ`: This value is no longer used. Please use `TDMQ-CMQ` instead.  `TDMQ-CMQ`: Message queue  `URL`: If `NotifyType` is set to `URL`, HTTP callbacks are sent to the URL specified by `NotifyUrl`. HTTP and JSON are used for the callbacks. The packet contains the response parameters of the `ParseNotification` API.  `SCF`: This notification type is not recommended. You need to configure it in the SCF console.  `AWS-SQS`: AWS queue. This type is only supported for AWS tasks, and the queue must be in the same region as the AWS bucket. Note: If you do not pass this parameter or pass in an empty string, `CMQ` will be used. To use a different notification type, specify this parameter accordingly.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback URL, required if `NotifyType` is set to `URL`.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ queue to receive notifications. This parameter is valid when `CmqModel` is `Queue`.
         */
        queueName?: pulumi.Input<string>;
        /**
         * The CMQ or TDMQ-CMQ topic to receive notifications. This parameter is valid when `CmqModel` is `Topic`.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface WithdrawsWatermarkOperationTaskNotifyConfigAwsSqs {
        /**
         * The key ID required to read from/write to the SQS queue.
         */
        s3SecretId?: pulumi.Input<string>;
        /**
         * The key required to read from/write to the SQS queue.
         */
        s3SecretKey?: pulumi.Input<string>;
        /**
         * The name of the SQS queue.
         */
        sqsQueueName: pulumi.Input<string>;
        /**
         * The region of the SQS queue.
         */
        sqsRegion: pulumi.Input<string>;
    }

    export interface WorkflowAiAnalysisTask {
        /**
         * Video Content Analysis Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Extension parameter whose value is a serialized json string.Note: This parameter is a customized demand parameter, which requires offline docking.Note: This field may return null, indicating that no valid value can be obtained.
         */
        extendedParameter?: pulumi.Input<string>;
    }

    export interface WorkflowAiContentReviewTask {
        /**
         * Video Content Review Template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface WorkflowAiRecognitionTask {
        /**
         * Video Intelligent Recognition Template ID.
         */
        definition: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTask {
        /**
         * Transfer Adaptive Code Stream Task List.
         */
        adaptiveDynamicStreamingTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSet>[]>;
        /**
         * Video Rotation Map Task List.
         */
        animatedGraphicTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAnimatedGraphicTaskSet>[]>;
        /**
         * Sprite image capture task list for video.
         */
        imageSpriteTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSet>[]>;
        /**
         * Screenshot task list for video sampling.
         */
        sampleSnapshotTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSet>[]>;
        /**
         * Screenshot the task list of the video according to the time point.
         */
        snapshotByTimeOffsetTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSet>[]>;
        /**
         * Video Transcoding Task List.
         */
        transcodeTaskSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSet>[]>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSet {
        /**
         * Transfer Adaptive Code Stream Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * After converting to an adaptive stream, the output path of the manifest file can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_adaptiveDynamicStreaming_{definition}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after converting to the adaptive code stream, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorage>;
        /**
         * After converting to an adaptive stream (only HLS), the output path of the fragmented file can only be a relative path. If not filled, the default is a relative path: `{inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}_{segmentNumber}.{format}`.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * After converting to an adaptive stream, the output path of the sub-stream file can only be a relative path. If not filled, the default is a relative path: {inputName}_adaptiveDynamicStreaming_{definition}_{subStreamNumber}.{format}`.
         */
        subStreamObjectName?: pulumi.Input<string>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAdaptiveDynamicStreamingTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAnimatedGraphicTaskSet {
        /**
         * Video turntable template id.
         */
        definition: pulumi.Input<number>;
        /**
         * The end time of the animation in the video, in seconds.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * The output path of the file after rotating the image, which can be a relative path or an absolute path. If not filled, the default is a relative path: {inputName}_animatedGraphic_{definition}.{format}.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the transcoded file, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorage>;
        /**
         * The start time of the animation in the video, in seconds.
         */
        startTimeOffset: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskAnimatedGraphicTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSet {
        /**
         * Sprite Illustration Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Rules for the `{number}` variable in the output path after intercepting the Sprite image.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSetObjectNumberFormat>;
        /**
         * After capturing the sprite image, the output path of the sprite image file can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_imageSprite_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after the sprite image is intercepted, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorage>;
        /**
         * After capturing the sprite image, the output path of the Web VTT file can only be a relative path. If not filled, the default is a relative path: `{inputName}_imageSprite_{definition}.{format}`.
         */
        webVttObjectName?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskImageSpriteTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSet {
        /**
         * Sample screenshot template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Rules for the `{number}` variable in the output path after sampling the screenshot.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetObjectNumberFormat>;
        /**
         * The output path of the image file after sampling the screenshot, which can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_sampleSnapshot_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after the screenshot at the time point, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorage>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSampleSnapshotTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSet {
        /**
         * Specified time point screenshot template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * Screenshot time point list, the time point supports two formats: s and %:;When the string ends with s, it means that the time point is in seconds, such as 3.5s means that the time point is the 3.5th second.When the string ends with %, it means that the time point is the percentage of the video duration, such as 10% means that the time point is the first 10% of the time in the video.
         */
        extTimeOffsetSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Rules for the `{number}` variable in the output path after the screenshot at the time point.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetObjectNumberFormat>;
        /**
         * The output path of the picture file after the snapshot at the time point can be a relative path or an absolute path. If not filled, the default is a relative path: `{inputName}_snapshotByTimeOffset_{definition}_{number}.{format}`.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the file after the screenshot at the time point, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorage>;
        /**
         * Screenshot time point list, the unit is &lt;font color=red&gt;seconds&lt;/font&gt;. This parameter is no longer recommended, it is recommended that you use the ExtTimeOffsetSet parameter.
         */
        timeOffsetSets?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskSnapshotByTimeOffsetTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSet {
        /**
         * Video Transcoding Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of video after transcoding, unit: second.Do not fill in or fill in 0, indicating that the transcoded video continues until the end of the original video.When the value is greater than 0 (assumed to be n), it means that the transcoded video lasts until the nth second of the original video and terminates.When the value is less than 0 (assumed to be -n), it means that the transcoded video lasts until n seconds before the end of the original video.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Opening and ending parameters.Note: This field may return null, indicating that no valid value can be obtained.
         */
        headTailParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameter>;
        /**
         * Mosaic list, up to 10 sheets can be supported.
         */
        mosaicSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetMosaicSet>[]>;
        /**
         * Rules for the `{number}` variable in the output path after transcoding.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectNumberFormat?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetObjectNumberFormat>;
        /**
         * The output path of the main file after transcoding can be a relative path or an absolute path. If not filled, the default is a relative path: {inputName}_transcode_{definition}.{format}.
         */
        outputObjectPath?: pulumi.Input<string>;
        /**
         * The target storage of the transcoded file, if not filled, it will inherit the OutputStorage value of the upper layer.Note: This field may return null, indicating that no valid value can be obtained.
         */
        outputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOutputStorage>;
        /**
         * Video transcoding custom parameters, valid when Definition is not filled with 0.When some transcoding parameters in this structure are filled in, the parameters in the transcoding template will be overwritten with the filled parameters.This parameter is used in highly customized scenarios, it is recommended that you only use Definition to specify transcoding parameters.Note: This field may return null, indicating that no valid value can be obtained.
         */
        overrideParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameter>;
        /**
         * Video transcoding custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios. It is recommended that you use Definition to specify transcoding parameters first.Note: This field may return null, indicating that no valid value can be obtained.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameter>;
        /**
         * The output path of the transcoded fragment file (the path of ts when transcoding HLS), can only be a relative path. If not filled, the default is: `{inputName}_transcode_{definition}_{number}.{format}.
         */
        segmentObjectName?: pulumi.Input<string>;
        /**
         * The start time offset of the transcoded video, unit: second.Do not fill in or fill in 0, indicating that the transcoded video starts from the beginning of the original video.When the value is greater than 0 (assumed to be n), it means that the transcoded video starts from the nth second position of the original video.When the value is less than 0 (assumed to be -n), it means that the transcoded video starts from the position n seconds before the end of the original video.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark list, support multiple pictures or text watermarks, up to 10.Note: This field may return null, indicating that no valid value can be obtained.
         */
        watermarkSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSet>[]>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameter {
        /**
         * Title list.
         */
        headSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSet>[]>;
        /**
         * Ending List.
         */
        tailSets?: pulumi.Input<pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSet>[]>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSet {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterHeadSetUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSet {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetHeadTailParameterTailSetUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetMosaicSet {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the coordinate origin is located in the upper left corner of the video image, and the origin of the mosaic is the upper left corner of the picture or textDefault: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * The end time offset of the mosaic, unit: second.Fill in or fill in 0, indicating that the mosaic continues until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the mosaic lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the mosaic lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * The height of the mosaic. Support %, px two formats.When the string ends with %, it means that the mosaic Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the mosaic Height unit is pixel, such as 100px means that the Height is 100 pixels.Default: 10%.
         */
        height?: pulumi.Input<string>;
        /**
         * The start time offset of the mosaic, unit: second. Do not fill or fill in 0, which means that the mosaic will start to appear when the screen appears.Fill in or fill in 0, which means that the mosaic will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the mosaic appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the mosaic starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * The width of the mosaic. Support %, px two formats:When the string ends with %, it means that the mosaic Width is the percentage size of the video width, such as 10% means that the Width is 10% of the video width.The string ends with px, indicating that the mosaic Width unit is pixels, such as 100px indicates that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetObjectNumberFormat {
        /**
         * The growth step of the `{number}` variable, the default is 1.
         */
        increment?: pulumi.Input<number>;
        /**
         * The starting value of `{number}` variable, the default is 0.
         */
        initialValue?: pulumi.Input<number>;
        /**
         * The minimum length of the `{number}` variable, if insufficient, placeholders will be filled. Default is 1.
         */
        minLength?: pulumi.Input<number>;
        /**
         * When the length of the `{number}` variable is insufficient, a placeholder is added. Default is 0.
         */
        placeHolder?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameter {
        /**
         * Audio stream configuration parameters.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterAudioTemplate>;
        /**
         * Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure audio files.
         */
        container?: pulumi.Input<string>;
        /**
         * Whether to remove audio data, value:0: reserved.1: remove.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data, value:0: reserved.1: remove.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Subtitle Stream Configuration Parameters.
         */
        subtitleTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate>;
        /**
         * Ultra-fast HD transcoding parameters.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterTehdConfig>;
        /**
         * Video streaming configuration parameters.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterVideoTemplate>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterAudioTemplate {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Encoding format of frequency stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec?: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate?: pulumi.Input<number>;
        /**
         * Specifies the audio track to preserve for the output. The default is to keep all sources.
         */
        streamSelects?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterSubtitleTemplate {
        /**
         * Text transparency, value range: (0, 1].0: fully transparent.1: fully opaque.Default: 1.
         */
        fontAlpha?: pulumi.Input<number>;
        /**
         * Font color, format: 0xRRGGBB, default value: 0xFFFFFF (white).
         */
        fontColor?: pulumi.Input<string>;
        /**
         * Font size, format: Npx, N is a value, if not specified, the subtitle file shall prevail.
         */
        fontSize?: pulumi.Input<string>;
        /**
         * Font type.hei.ttf, song.ttf, simkai.ttf, arial.ttf.Default: hei.ttf.
         */
        fontType?: pulumi.Input<string>;
        /**
         * The address of the subtitle file to be compressed into the video.
         */
        path?: pulumi.Input<string>;
        /**
         * Specifies the subtitle track to be compressed into the video. If there is a specified Path, the Path has a higher priority. Path and StreamIndex specify at least one.
         */
        streamIndex?: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterTehdConfig {
        /**
         * The upper limit of the video bit rate, which is valid when the Type specifies the ultra-fast HD type.Do not fill in or fill in 0 means that there is no upper limit on the video bit rate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extremely high-definition type, optional value:TEHD-100: Extreme HD-100.Not filling means that the ultra-fast high-definition is not enabled.
         */
        type?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetOverrideParameterVideoTemplate {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec?: pulumi.Input<string>;
        /**
         * Content Adaptive Encoding. optional value:0: not open.1: open.Default: 0.When this parameter is turned on, multiple code streams with different resolutions and different bit rates will be adaptively generated. The width and height of the VideoTemplate are the maximum resolutions among the multiple code streams, and the bit rates in the VideoTemplate are multiple code rates. The highest bit rate in the stream, the vcrf in VideoTemplate is the highest quality among multiple bit streams. When the resolution, bit rate and vcrf are not set, the highest resolution generated by the ContentAdaptStream parameter is the resolution of the video source, and the video quality is close to vmaf95. To enable this parameter or learn about billing details, please contact your Tencent Cloud Business.
         */
        contentAdaptStream?: pulumi.Input<number>;
        /**
         * Filling method, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling method:stretch: Stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched;.black: Leave black, keep the aspect ratio of the video unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video unchanged, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and fill the rest of the edge with Gaussian blur.Default: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps?: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of video stream height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional values:```open: open, at this time, Width represents the long side of the video, Height represents the short side of the video.close: close, at this time, Width represents the width of the video, and Height represents the height of the video.Default: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of video stream width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameter {
        /**
         * Audio stream configuration parameters, when RemoveAudio is 0, this field is required.
         */
        audioTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameterAudioTemplate>;
        /**
         * Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure audio files.
         */
        container: pulumi.Input<string>;
        /**
         * Whether to remove audio data, value:0: reserved.1: remove.Default: 0.
         */
        removeAudio?: pulumi.Input<number>;
        /**
         * Whether to remove video data, value:0: reserved.1: remove.Default: 0.
         */
        removeVideo?: pulumi.Input<number>;
        /**
         * Ultra-fast HD transcoding parameters.
         */
        tehdConfig?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameterTehdConfig>;
        /**
         * Video stream configuration parameters, when RemoveVideo is 0, this field is required.
         */
        videoTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetRawParameterVideoTemplate>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameterAudioTemplate {
        /**
         * Audio channel mode, optional values:`1: single channel.2: Dual channel.6: Stereo.When the package format of the media is an audio format (flac, ogg, mp3, m4a), the number of channels is not allowed to be set to stereo.Default: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps.When the value is 0, it means that the audio bit rate is consistent with the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of frequency stream.When the outer parameter Container is mp3, the optional value is:libmp3lame.When the outer parameter Container is ogg or flac, the optional value is:flac.When the outer parameter Container is m4a, the optional value is:libfdk_aac.libmp3lame.ac3.When the outer parameter Container is mp4 or flv, the optional value is:libfdk_aac: more suitable for mp4.libmp3lame: more suitable for flv.When the outer parameter Container is hls, the optional value is:libfdk_aac.libmp3lame.
         */
        codec: pulumi.Input<string>;
        /**
         * Sampling rate of audio stream, optional value.32000.44100.48000.Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameterTehdConfig {
        /**
         * The upper limit of the video bit rate, which is valid when the Type specifies the ultra-fast HD type.Do not fill in or fill in 0 means that there is no upper limit on the video bit rate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extremely high-definition type, optional value:TEHD-100: Extreme HD-100.Not filling means that the ultra-fast high-definition is not enabled.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetRawParameterVideoTemplate {
        /**
         * Bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps.When the value is 0, it means that the video bit rate is consistent with the original video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Encoding format of the video stream, optional value:libx264: H.264 encoding.libx265: H.265 encoding.av1: AOMedia Video 1 encoding.Note: Currently H.265 encoding must specify a resolution, and it needs to be within 640*480.Note: av1 encoded containers currently only support mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Filling method, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the original video, the processing method for transcoding is filling. Optional filling method:stretch: Stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched;.black: Leave black, keep the aspect ratio of the video unchanged, and fill the rest of the edge with black.white: Leave blank, keep the aspect ratio of the video unchanged, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the video unchanged, and fill the rest of the edge with Gaussian blur.Default: black.Note: Adaptive stream only supports stretch, black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate, value range: [0, 100], unit: Hz.When the value is 0, it means that the frame rate is consistent with the original video.Note: The value range for adaptive code rate is [0, 60].
         */
        fps: pulumi.Input<number>;
        /**
         * The interval between keyframe I frames, value range: 0 and [1, 100000], unit: number of frames.When filling 0 or not filling, the system will automatically set the gop length.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum value of video stream height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Adaptive resolution, optional values:```open: open, at this time, Width represents the long side of the video, Height represents the short side of the video.close: close, at this time, Width represents the width of the video, and Height represents the height of the video.Default: open.Note: In adaptive mode, Width cannot be smaller than Height.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * Video constant bit rate control factor, the value range is [1, 51].If this parameter is specified, the code rate control method of CRF will be used for transcoding (the video code rate will no longer take effect).If there is no special requirement, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum value of video stream width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified by the user.Default: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSet {
        /**
         * Watermark Template ID.
         */
        definition: pulumi.Input<number>;
        /**
         * End time offset of watermark, unit: second.Do not fill in or fill in 0, indicating that the watermark lasts until the end of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark lasts until the nth second and disappears.When the value is less than 0 (assumed to be -n), it means that the watermark lasts until it disappears n seconds before the end of the screen.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Watermark custom parameters, valid when Definition is filled with 0.This parameter is used in highly customized scenarios, it is recommended that you use Definition to specify watermark parameters first.Watermark custom parameters do not support screenshot watermarking.
         */
        rawParameter?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameter>;
        /**
         * The start time offset of the watermark, unit: second. Do not fill in or fill in 0, which means that the watermark will start to appear when the screen appears.Do not fill in or fill in 0, which means the watermark will appear from the beginning of the screen.When the value is greater than 0 (assumed to be n), it means that the watermark appears from the nth second of the screen.When the value is less than 0 (assumed to be -n), it means that the watermark starts to appear n seconds before the end of the screen.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content. The length cannot exceed 2000000 characters. Fill in only if the watermark type is SVG watermark.SVG watermark does not support screenshot watermarking.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content, the length does not exceed 100 characters. Fill in only when the watermark type is text watermark.Text watermark does not support screenshot watermarking.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameter {
        /**
         * Origin position, currently only supports:TopLeft: Indicates that the origin of the coordinates is at the upper left corner of the video image, and the origin of the watermark is the upper left corner of the picture or text.Default: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * Image watermark template, when Type is image, this field is required. When Type is text, this field is invalid.
         */
        imageTemplate?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplate>;
        /**
         * Watermark type, optional value:image: image watermark.
         */
        type: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark XPos specifies a percentage for the video width, such as 10% means that XPos is 10% of the video width.When the string ends with px, it means that the watermark XPos is the specified pixel, such as 100px means that the XPos is 100 pixels.Default: 0px.
         */
        xPos?: pulumi.Input<string>;
        /**
         * The vertical position of the origin of the watermark from the origin of the coordinates of the video image. Support %, px two formats:When the string ends with %, it means that the watermark YPos specifies a percentage for the video height, such as 10% means that YPos is 10% of the video height.When the string ends with px, it means that the watermark YPos is the specified pixel, such as 100px means that the YPos is 100 pixels.Default: 0px.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplate {
        /**
         * The height of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Height is the percentage size of the video height, such as 10% means that the Height is 10% of the video height.When the string ends with px, it means that the watermark Height unit is pixel, such as 100px means that the Height is 100 pixels.Default value: 0px, indicating that Height is scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The input content of the watermark image. Support jpeg, png image format.
         */
        imageContent: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContent>;
        /**
         * Watermark repeat type. Usage scenario: The watermark is a dynamic image. Ranges.once: After the dynamic watermark is played, it will no longer appear.repeat_last_frame: After the watermark is played, stay on the last frame.repeat: the watermark loops until the end of the video (default).
         */
        repeatType?: pulumi.Input<string>;
        /**
         * The width of the watermark. Support %, px two formats:When the string ends with %, it means that the watermark Width is a percentage of the video width, such as 10% means that the Width is 10% of the video width.When the string ends with px, it means that the watermark Width unit is pixels, such as 100px means that the Width is 100 pixels.Default: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContent {
        /**
         * Valid when Type is COS, this item is required, indicating media processing COS object information.
         */
        cosInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo>;
        /**
         * Enter the type of source object, which supports COS and URL.
         */
        type: pulumi.Input<string>;
        /**
         * Valid when Type is URL, this item is required, indicating media processing URL object information.Note: This field may return null, indicating that no valid value can be obtained.
         */
        urlInputInfo?: pulumi.Input<inputs.Mps.WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentCosInputInfo {
        /**
         * The name of the COS Bucket where the media processing object file is located.
         */
        bucket: pulumi.Input<string>;
        /**
         * Input path for media processing object files.
         */
        object: pulumi.Input<string>;
        /**
         * The park to which the COS Bucket where the media processing target file resides belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface WorkflowMediaProcessTaskTranscodeTaskSetWatermarkSetRawParameterImageTemplateImageContentUrlInputInfo {
        /**
         * Video URL.
         */
        url: pulumi.Input<string>;
    }

    export interface WorkflowOutputStorage {
        /**
         * Valid when Type is COS, this item is required, indicating the media processing COS output location.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosOutputStorage?: pulumi.Input<inputs.Mps.WorkflowOutputStorageCosOutputStorage>;
        /**
         * The type of media processing output object storage location, now only supports COS.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowOutputStorageCosOutputStorage {
        /**
         * The target Bucket name of the file output generated by media processing, if not filled, it means the upper layer.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The park of the target Bucket for the output of the file generated by media processing. If not filled, it means inheriting from the upper layer.
         */
        region?: pulumi.Input<string>;
    }

    export interface WorkflowTaskNotifyConfig {
        /**
         * CMQ or TDMQ-CMQ model, there are two kinds of Queue and Topic.
         */
        cmqModel?: pulumi.Input<string>;
        /**
         * Region of CMQ or TDMQ-CMQ, such as sh, bj, etc.
         */
        cmqRegion?: pulumi.Input<string>;
        /**
         * The mode of the workflow notification, the possible values are Finish and Change, leaving blank means Finish.
         */
        notifyMode?: pulumi.Input<string>;
        /**
         * Notification type, optional value:CMQ: offline, it is recommended to switch to TDMQ-CMQ.TDMQ-CMQ: message queue.URL: When the URL is specified, the HTTP callback is pushed to the address specified by NotifyUrl, the callback protocol is http+json, and the package body content is the same as the output parameters of the parsing event notification interface.SCF: not recommended, additional configuration of SCF in the console is required.Note: CMQ is the default when not filled or empty, if you need to use other types, you need to fill in the corresponding type value.
         */
        notifyType?: pulumi.Input<string>;
        /**
         * HTTP callback address, required when NotifyType is URL.
         */
        notifyUrl?: pulumi.Input<string>;
        /**
         * Valid when the model is Queue, indicating the queue name of the CMQ or TDMQ-CMQ that receives the event notification.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Valid when the model is a Topic, indicating the topic name of the CMQ or TDMQ-CMQ that receives event notifications.
         */
        topicName?: pulumi.Input<string>;
    }

    export interface WorkflowTrigger {
        /**
         * Mandatory and valid when Type is CosFileUpload, the rule is triggered for COS.Note: This field may return null, indicating that no valid value can be obtained.
         */
        cosFileUploadTrigger?: pulumi.Input<inputs.Mps.WorkflowTriggerCosFileUploadTrigger>;
        /**
         * The type of trigger, currently only supports CosFileUpload.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkflowTriggerCosFileUploadTrigger {
        /**
         * The name of the COS Bucket bound to the workflow.
         */
        bucket: pulumi.Input<string>;
        /**
         * The input path directory of the workflow binding must be an absolute path, that is, start and end with `/`.
         */
        dir?: pulumi.Input<string>;
        /**
         * A list of file formats that are allowed to be triggered by the workflow, if not filled in, it means that files of all formats can trigger the workflow.
         */
        formats?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The park to which the COS Bucket bound to the workflow belongs.
         */
        region: pulumi.Input<string>;
    }
}

export namespace Mysql {
    export interface AuditLogFileFilter {
        /**
         * Affects the number of rows. Indicates to filter audit logs whose number of affected rows is greater than this value.
         */
        affectRows?: pulumi.Input<number>;
        /**
         * Database name.
         */
        dbNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execution time. The unit is: ms. Indicates to filter audit logs whose execution time is greater than this value.
         */
        execTime?: pulumi.Input<number>;
        /**
         * Client address.
         */
        hosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of policy.
         */
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. support fuzzy matching.
         */
        sql?: pulumi.Input<string>;
        /**
         * SQL type. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlType?: pulumi.Input<string>;
        /**
         * SQL type. Supports simultaneous query of multiple types. Currently supported: SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, SET, REPLACE, EXECUTE.
         */
        sqlTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SQL statement. Support passing multiple sql statements.
         */
        sqls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name.
         */
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BackupDownloadRestrictionLimitVpc {
        /**
         * Restrict downloads from regions. Currently only the current region is supported.
         */
        region: pulumi.Input<string>;
        /**
         * List of vpcs to limit downloads.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ParamTemplateParamList {
        /**
         * The value of parameter.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * The name of parameter.
         */
        name?: pulumi.Input<string>;
    }

    export interface PasswordComplexityParamList {
        /**
         * Parameter value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name?: pulumi.Input<string>;
    }

    export interface PrivilegeColumn {
        /**
         * Column name.
         */
        columnName: pulumi.Input<string>;
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Column privilege.available values for Privileges:SELECT,INSERT,UPDATE,REFERENCES.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
    }

    export interface PrivilegeDatabase {
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Database privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PrivilegeTable {
        /**
         * Database name.
         */
        databaseName: pulumi.Input<string>;
        /**
         * Table privilege.available values for Privileges:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,REFERENCES,INDEX,ALTER,CREATE VIEW,SHOW VIEW,TRIGGER.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Table name.
         */
        tableName: pulumi.Input<string>;
    }

    export interface ProxyProxyNodeCustom {
        /**
         * Number of CPU cores.
         */
        cpu: pulumi.Input<number>;
        /**
         * Memory size.
         */
        mem: pulumi.Input<number>;
        /**
         * Number of nodes.
         */
        nodeCount: pulumi.Input<number>;
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * Zone.
         */
        zone: pulumi.Input<string>;
    }

    export interface RoGroupRoGroupInfo {
        /**
         * The minimum number of reserved instances. It can be set to any value less than or equal to the number of RO instances under this RO group. Note that if the setting value is greater than the number of RO instances, it will not be removed; if it is set to 0, all instances whose latency exceeds the limit will be removed.
         */
        minRoInGroup?: pulumi.Input<number>;
        /**
         * Delayed replication time.
         */
        replicationDelayTime?: pulumi.Input<number>;
        /**
         * RO group name.
         */
        roGroupName?: pulumi.Input<string>;
        /**
         * RO instance maximum latency threshold. The unit is seconds, the minimum value is 1. Note that the RO group must have enabled instance delay culling policy for this value to be valid.
         */
        roMaxDelayTime?: pulumi.Input<number>;
        /**
         * Whether to enable delayed culling of instances. Supported values are: 1 - on; 0 - not on. Note that if you enable instance delay culling, you must set the delay threshold (RoMaxDelayTime) parameter.
         */
        roOfflineDelay?: pulumi.Input<number>;
        /**
         * weight mode. Supported values include: `system` - automatically assigned by the system; `custom` - user-defined settings. Note that if the `custom` mode is set, the RO instance weight configuration (RoWeightValues) parameter must be set.
         */
        weightMode?: pulumi.Input<string>;
    }

    export interface RoGroupRoWeightValue {
        /**
         * RO instance ID.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Weights. The value range is [0, 100].
         */
        weight: pulumi.Input<number>;
    }

    export interface RollbackDatabase {
        /**
         * The original database name before rollback.
         */
        databaseName: pulumi.Input<string>;
        /**
         * The new database name after rollback.
         */
        newDatabaseName: pulumi.Input<string>;
    }

    export interface RollbackTable {
        /**
         * Database name.
         */
        database: pulumi.Input<string>;
        /**
         * Database table details.
         */
        tables: pulumi.Input<pulumi.Input<inputs.Mysql.RollbackTableTable>[]>;
    }

    export interface RollbackTableTable {
        /**
         * New database table name after rollback.
         */
        newTableName: pulumi.Input<string>;
        /**
         * The original database table name before rollback.
         */
        tableName: pulumi.Input<string>;
    }
}

export namespace Nat {
}

export namespace Oceanus {
    export interface GetClustersFilter {
        /**
         * The field to be filtered.
         */
        name: string;
        /**
         * The filtering values of the field.
         */
        values: string[];
    }

    export interface GetClustersFilterArgs {
        /**
         * The field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * The filtering values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetSystemResourceFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter values for the field.
         */
        values: string[];
    }

    export interface GetSystemResourceFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values for the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetTreeJobsFilter {
        /**
         * Field to be filtered. Can only be set `Zone` or `JobType` or `JobStatus`.
         */
        name: string;
        /**
         * Filter values for the field.
         */
        values: string[];
    }

    export interface GetTreeJobsFilterArgs {
        /**
         * Field to be filtered. Can only be set `Zone` or `JobType` or `JobStatus`.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values for the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetWorkSpacesFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter values for the field.
         */
        values: string[];
    }

    export interface GetWorkSpacesFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values for the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobConfigClazzLevel {
        /**
         * Java class full pathNote: This field may return null, indicating that no valid value can be obtained.
         */
        clazz: pulumi.Input<string>;
        /**
         * Log level TRACE, DEBUG, INFO, WARN, ERRORNote: This field may return null, indicating that no valid value can be obtained.
         */
        level: pulumi.Input<string>;
    }

    export interface JobConfigExpertModeConfiguration {
        /**
         * Job graphNote: This field may return null, indicating that no valid value can be obtained.
         */
        jobGraph?: pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationJobGraph>;
        /**
         * Node configurationNote: This field may return null, indicating that no valid value can be obtained.
         */
        nodeConfigs?: pulumi.Input<pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationNodeConfig>[]>;
        /**
         * Slot sharing groupsNote: This field may return null, indicating that no valid value can be obtained.
         */
        slotSharingGroups?: pulumi.Input<pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationSlotSharingGroup>[]>;
    }

    export interface JobConfigExpertModeConfigurationJobGraph {
        /**
         * Edge set of the running graphNote: This field may return null, indicating that no valid value can be obtained.
         */
        edges?: pulumi.Input<pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationJobGraphEdge>[]>;
        /**
         * Point set of the running graphNote: This field may return null, indicating that no valid value can be obtained.
         */
        nodes?: pulumi.Input<pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationJobGraphNode>[]>;
    }

    export interface JobConfigExpertModeConfigurationJobGraphEdge {
        /**
         * Starting node ID of the edgeNote: This field may return null, indicating that no valid value can be obtained.
         */
        source: pulumi.Input<number>;
        /**
         * Target node ID of the edgeNote: This field may return null, indicating that no valid value can be obtained.
         */
        target: pulumi.Input<number>;
    }

    export interface JobConfigExpertModeConfigurationJobGraphNode {
        /**
         * Node descriptionNote: This field may return null, indicating that no valid value can be obtained.
         */
        description: pulumi.Input<string>;
        /**
         * Node IDNote: This field may return null, indicating that no valid value can be obtained.
         */
        id: pulumi.Input<number>;
        /**
         * Node nameNote: This field may return null, indicating that no valid value can be obtained.
         */
        name: pulumi.Input<string>;
        /**
         * Node parallelismNote: This field may return null, indicating that no valid value can be obtained.
         */
        parallelism: pulumi.Input<number>;
    }

    export interface JobConfigExpertModeConfigurationNodeConfig {
        /**
         * Configuration propertiesNote: This field may return null, indicating that no valid value can be obtained.
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationNodeConfigConfiguration>[]>;
        /**
         * Node IDNote: This field may return null, indicating that no valid value can be obtained.
         */
        id: pulumi.Input<number>;
        /**
         * Node parallelismNote: This field may return null, indicating that no valid value can be obtained.
         */
        parallelism?: pulumi.Input<number>;
        /**
         * Slot sharing groupNote: This field may return null, indicating that no valid value can be obtained.
         */
        slotSharingGroup?: pulumi.Input<string>;
        /**
         * State TTL configuration of the node, separated by semicolonsNote: This field may return null, indicating that no valid value can be obtained.
         */
        stateTtl?: pulumi.Input<string>;
    }

    export interface JobConfigExpertModeConfigurationNodeConfigConfiguration {
        /**
         * System configuration key.
         */
        key: pulumi.Input<string>;
        /**
         * System configuration value.
         */
        value: pulumi.Input<string>;
    }

    export interface JobConfigExpertModeConfigurationSlotSharingGroup {
        /**
         * Description of the SlotSharingGroupNote: This field may return null, indicating that no valid value can be obtained.
         */
        description?: pulumi.Input<string>;
        /**
         * Name of the SlotSharingGroupNote: This field may return null, indicating that no valid value can be obtained.
         */
        name: pulumi.Input<string>;
        /**
         * Specification of the SlotSharingGroupNote: This field may return null, indicating that no valid value can be obtained.
         */
        spec: pulumi.Input<inputs.Oceanus.JobConfigExpertModeConfigurationSlotSharingGroupSpec>;
    }

    export interface JobConfigExpertModeConfigurationSlotSharingGroupSpec {
        /**
         * Applicable CPUNote: This field may return null, indicating that no valid value can be obtained.
         */
        cpu: pulumi.Input<number>;
        /**
         * Default is b, supporting units are b, kb, mb, gbNote: This field may return null, indicating that no valid value can be obtained.
         */
        heapMemory: pulumi.Input<string>;
        /**
         * Default is b, supporting units are b, kb, mb, gbNote: This field may return null, indicating that no valid value can be obtained.
         */
        managedMemory?: pulumi.Input<string>;
        /**
         * Default is b, supporting units are b, kb, mb, gbNote: This field may return null, indicating that no valid value can be obtained.
         */
        offHeapMemory?: pulumi.Input<string>;
    }

    export interface JobConfigProperty {
        /**
         * System configuration key.
         */
        key: pulumi.Input<string>;
        /**
         * System configuration value.
         */
        value: pulumi.Input<string>;
    }

    export interface JobConfigResourceRef {
        /**
         * Resource ID.
         */
        resourceId: pulumi.Input<string>;
        /**
         * Reference resource type, for example, setting the main resource to 1 represents the jar package where the main class is located.
         */
        type: pulumi.Input<number>;
        /**
         * Resource version ID, -1 indicates the latest version.
         */
        version: pulumi.Input<number>;
    }

    export interface ResourceConfigResourceLoc {
        /**
         * Json to describe resource location.
         */
        param: pulumi.Input<inputs.Oceanus.ResourceConfigResourceLocParam>;
        /**
         * The available storage types for resource location are currently limited to 1:COS.
         */
        storageType: pulumi.Input<number>;
    }

    export interface ResourceConfigResourceLocParam {
        /**
         * Resource bucket.
         */
        bucket: pulumi.Input<string>;
        /**
         * Resource path.
         */
        path: pulumi.Input<string>;
        /**
         * Resource region, if not set, use resource region, note: this field may return null, indicating that no valid values can be obtained.
         */
        region?: pulumi.Input<string>;
    }

    export interface ResourceResourceLoc {
        /**
         * Json to describe resource location.
         */
        param: pulumi.Input<inputs.Oceanus.ResourceResourceLocParam>;
        /**
         * The available storage types for resource location are currently limited to 1:COS.
         */
        storageType: pulumi.Input<number>;
    }

    export interface ResourceResourceLocParam {
        /**
         * Resource bucket.
         */
        bucket: pulumi.Input<string>;
        /**
         * Resource path.
         */
        path: pulumi.Input<string>;
        /**
         * Resource region, if not set, use resource region, note: this field may return null, indicating that no valid values can be obtained.
         */
        region?: pulumi.Input<string>;
    }

    export interface RunJobRunJobDescription {
        /**
         * Custom timestamp.
         */
        customTimestamp?: pulumi.Input<number>;
        /**
         * A certain version of the current job(Not passed by default as a non-draft job version).
         */
        jobConfigVersion?: pulumi.Input<number>;
        /**
         * Job ID.
         */
        jobId: pulumi.Input<string>;
        /**
         * The type of the run. 1 indicates start, and 2 indicates resume.
         */
        runType: pulumi.Input<number>;
        /**
         * Savepoint ID.
         */
        savepointId?: pulumi.Input<string>;
        /**
         * Savepoint path.
         */
        savepointPath?: pulumi.Input<string>;
        /**
         * Compatible with the startup parameters of the old SQL type job: specify the start time point of data source consumption (recommended to pass the value)Ensure that the parameter is LATEST, EARLIEST, T+Timestamp (example: T1557394288000).
         */
        startMode?: pulumi.Input<string>;
        /**
         * Use the historical version of the system dependency.
         */
        useOldSystemConnector?: pulumi.Input<boolean>;
    }

    export interface StopJobStopJobDescription {
        /**
         * Job Id.
         */
        jobId: pulumi.Input<string>;
        /**
         * Stop type,1 stopped 2 paused.
         */
        stopType: pulumi.Input<number>;
    }
}

export namespace Organization {
    export interface GetNodesTag {
        /**
         * Tag key.
         */
        tagKey: string;
        /**
         * Tag value.
         */
        tagValue: string;
    }

    export interface GetNodesTagArgs {
        /**
         * Tag key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface InstanceOrgPermission {
        /**
         * Permissions ID.
         */
        id?: pulumi.Input<number>;
        /**
         * Permission name.
         */
        name?: pulumi.Input<string>;
    }

    export interface OrgIdentityIdentityPolicy {
        /**
         * Customize policy content and follow CAM policy syntax. Valid and required when PolicyType is the 1-custom policy.
         */
        policyDocument?: pulumi.Input<string>;
        /**
         * CAM default policy ID. Valid and required when PolicyType is the 2-preset policy.
         */
        policyId?: pulumi.Input<number>;
        /**
         * CAM default policy name. Valid and required when PolicyType is the 2-preset policy.
         */
        policyName?: pulumi.Input<string>;
        /**
         * Policy type. Value 1-custom policy 2-preset policy; default value 2.
         */
        policyType?: pulumi.Input<number>;
    }

    export interface OrgMemberOrgPermission {
        /**
         * Permissions ID.
         */
        id?: pulumi.Input<number>;
        /**
         * Member name.
         */
        name?: pulumi.Input<string>;
    }

    export interface OrgShareUnitMemberMember {
        /**
         * Member uin.
         */
        shareMemberUin: pulumi.Input<number>;
    }
}

export namespace Placement {
}

export namespace Postgresql {
    export interface AccountPrivilegesOperationModifyPrivilegeSet {
        /**
         * Database objects and the user permissions on these objects. Note: This field may return null, indicating that no valid value can be obtained.
         */
        databasePrivilege?: pulumi.Input<inputs.Postgresql.AccountPrivilegesOperationModifyPrivilegeSetDatabasePrivilege>;
        /**
         * Required only when ModifyType is revokeObject. When the parameter is true, revoking permissions will cascade. The default value is false.
         */
        isCascade?: pulumi.Input<boolean>;
        /**
         * Supported modification method: grantObject, revokeObject, alterRole. grantObject represents granting permissions on object, revokeObject represents revoking permissions on object, and alterRole represents modifying the account type.
         */
        modifyType?: pulumi.Input<string>;
    }

    export interface AccountPrivilegesOperationModifyPrivilegeSetDatabasePrivilege {
        /**
         * Database object.If ObjectType is database, DatabaseName/SchemaName/TableName can be null.If ObjectType is schema, SchemaName/TableName can be null.If ObjectType is table, TableName can be null.If ObjectType is column, DatabaseName/SchemaName/TableName can&amp;#39;t be null.In all other cases, DatabaseName/SchemaName/TableName can be null. Note: This field may return null, indicating that no valid value can be obtained.
         */
        object?: pulumi.Input<inputs.Postgresql.AccountPrivilegesOperationModifyPrivilegeSetDatabasePrivilegeObject>;
        /**
         * Privileges the specific account has on database object. Note: This field may return null, indicating that no valid value can be obtained.
         */
        privilegeSets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountPrivilegesOperationModifyPrivilegeSetDatabasePrivilegeObject {
        /**
         * Database name to which the database object belongs. This parameter is mandatory when ObjectType is not database. Note: This field may return null, indicating that no valid value can be obtained.
         */
        databaseName?: pulumi.Input<string>;
        /**
         * Database object Name. Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectName: pulumi.Input<string>;
        /**
         * Supported database object types: account, database, schema, sequence, procedure, type, function, table, view, matview, column. Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectType: pulumi.Input<string>;
        /**
         * Schema name to which the database object belongs. This parameter is mandatory when ObjectType is not database or schema. Note: This field may return null, indicating that no valid value can be obtained.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * Table name to which the database object belongs. This parameter is mandatory when ObjectType is column. Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface CloneDbInstanceDbNodeSet {
        /**
         * Dedicated cluster ID.
         */
        dedicatedClusterId?: pulumi.Input<string>;
        /**
         * Node type. Valid values:
         * `Primary`;
         * `Standby`.
         */
        role: pulumi.Input<string>;
        /**
         * AZ where the node resides, such as ap-guangzhou-1.
         */
        zone: pulumi.Input<string>;
    }

    export interface CloneDbInstanceTagList {
        /**
         * Tag key.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface GetAccountPrivilegesDatabaseObjectSet {
        /**
         * Database name to which the database object belongs. This parameter is mandatory when ObjectType is not database.Note: This field may return null, indicating that no valid value can be obtained.
         */
        databaseName?: string;
        /**
         * Database object Name.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectName: string;
        /**
         * Supported database object types: account, database, schema, sequence, procedure, type, function, table, view, matview, column. Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectType: string;
        /**
         * Schema name to which the database object belongs. This parameter is mandatory when ObjectType is not database or schema.Note: This field may return null, indicating that no valid value can be obtained.
         */
        schemaName?: string;
        /**
         * Table name to which the database object belongs. This parameter is mandatory when ObjectType is column.Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableName?: string;
    }

    export interface GetAccountPrivilegesDatabaseObjectSetArgs {
        /**
         * Database name to which the database object belongs. This parameter is mandatory when ObjectType is not database.Note: This field may return null, indicating that no valid value can be obtained.
         */
        databaseName?: pulumi.Input<string>;
        /**
         * Database object Name.Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectName: pulumi.Input<string>;
        /**
         * Supported database object types: account, database, schema, sequence, procedure, type, function, table, view, matview, column. Note: This field may return null, indicating that no valid value can be obtained.
         */
        objectType: pulumi.Input<string>;
        /**
         * Schema name to which the database object belongs. This parameter is mandatory when ObjectType is not database or schema.Note: This field may return null, indicating that no valid value can be obtained.
         */
        schemaName?: pulumi.Input<string>;
        /**
         * Table name to which the database object belongs. This parameter is mandatory when ObjectType is column.Note: This field may return null, indicating that no valid value can be obtained.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface GetBackupDownloadUrlsBackupDownloadRestriction {
        /**
         * Whether IP is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        ipRestrictionEffect?: string;
        /**
         * Whether it is allowed to download IP list of the backup files.
         */
        ipSets?: string[];
        /**
         * Type of the network restrictions for downloading backup files. Valid values: `NONE` (backups can be downloaded over both private and public networks), `INTRANET` (backups can only be downloaded over the private network), `CUSTOMIZE` (backups can be downloaded over specified VPCs or at specified IPs).
         */
        restrictionType?: string;
        /**
         * Whether it is allowed to download the VPC ID list of the backup files.
         */
        vpcIdSets?: string[];
        /**
         * Whether VPC is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        vpcRestrictionEffect?: string;
    }

    export interface GetBackupDownloadUrlsBackupDownloadRestrictionArgs {
        /**
         * Whether IP is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        ipRestrictionEffect?: pulumi.Input<string>;
        /**
         * Whether it is allowed to download IP list of the backup files.
         */
        ipSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Type of the network restrictions for downloading backup files. Valid values: `NONE` (backups can be downloaded over both private and public networks), `INTRANET` (backups can only be downloaded over the private network), `CUSTOMIZE` (backups can be downloaded over specified VPCs or at specified IPs).
         */
        restrictionType?: pulumi.Input<string>;
        /**
         * Whether it is allowed to download the VPC ID list of the backup files.
         */
        vpcIdSets?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether VPC is allowed. Valid values: `ALLOW` (allow), `DENY` (deny).
         */
        vpcRestrictionEffect?: pulumi.Input<string>;
    }

    export interface GetBaseBackupsFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetBaseBackupsFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDedicatedClustersFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * Filter values.
         */
        values?: string[];
    }

    export interface GetDedicatedClustersFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetLogBackupsFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetLogBackupsFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetParameterTemplatesFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetParameterTemplatesFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetReadonlyGroupsFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * One or more filter values.
         */
        values?: string[];
    }

    export interface GetReadonlyGroupsFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * One or more filter values.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceBackupPlan {
        /**
         * List of backup period per week, available values: `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`. NOTE: At least specify two days.
         */
        backupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify days of the retention.
         */
        baseBackupRetentionPeriod?: pulumi.Input<number>;
        /**
         * Specify latest backup start time, format `hh:mm:ss`.
         */
        maxBackupStartTime?: pulumi.Input<string>;
        /**
         * Specify earliest backup start time, format `hh:mm:ss`.
         */
        minBackupStartTime?: pulumi.Input<string>;
    }

    export interface InstanceDbNodeSet {
        /**
         * Dedicated cluster ID.
         */
        dedicatedClusterId?: pulumi.Input<string>;
        /**
         * Indicates node type, available values:`Primary`, `Standby`. Default: `Standby`.
         */
        role?: pulumi.Input<string>;
        /**
         * Indicates the node available zone.
         */
        zone: pulumi.Input<string>;
    }

    export interface ParameterTemplateModifyParamEntrySet {
        /**
         * Modify the parameter value. The input parameters are passed in the form of strings, for example: decimal `0.1`, integer `1000`, enumeration `replica`.
         */
        expectedValue: pulumi.Input<string>;
        /**
         * The parameter name.
         */
        name: pulumi.Input<string>;
    }

    export interface ReadonlyGroupNetInfoList {
        /**
         * Ip address of the net info.
         */
        ip?: pulumi.Input<string>;
        /**
         * Port of the net info.
         */
        port?: pulumi.Input<number>;
    }
}

export namespace PrivateDns {
    export interface GetEndPointsFilter {
        /**
         * Parameter name.
         */
        name: string;
        /**
         * Array of parameter values.
         */
        values: string[];
    }

    export interface GetEndPointsFilterArgs {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Array of parameter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetForwardRulesFilter {
        /**
         * Parameter name.
         */
        name: string;
        /**
         * Array of parameter values.
         */
        values: string[];
    }

    export interface GetForwardRulesFilterArgs {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Array of parameter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetPrivateZoneListFilter {
        /**
         * name.
         */
        name: string;
        /**
         * values.
         */
        values: string[];
    }

    export interface GetPrivateZoneListFilterArgs {
        /**
         * name.
         */
        name: pulumi.Input<string>;
        /**
         * values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRecordsFilter {
        /**
         * Parameter name.
         */
        name: string;
        /**
         * Parameter values.
         */
        values: string[];
    }

    export interface GetRecordsFilterArgs {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneAccountVpcSet {
        /**
         * Region.
         */
        region: pulumi.Input<string>;
        /**
         * UIN of the VPC account.
         */
        uin: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        uniqVpcId: pulumi.Input<string>;
        /**
         * VPC NAME.
         */
        vpcName: pulumi.Input<string>;
    }

    export interface ZoneTagSet {
        /**
         * Key of Tag.
         */
        tagKey: pulumi.Input<string>;
        /**
         * Value of Tag.
         */
        tagValue: pulumi.Input<string>;
    }

    export interface ZoneVpcAttachmentAccountVpcSet {
        /**
         * Vpc region.
         */
        region: pulumi.Input<string>;
        /**
         * Vpc owner uin. To grant role authorization to this account.
         */
        uin: pulumi.Input<string>;
        /**
         * Uniq Vpc Id.
         */
        uniqVpcId: pulumi.Input<string>;
    }

    export interface ZoneVpcAttachmentVpcSet {
        /**
         * Vpc region.
         */
        region: pulumi.Input<string>;
        /**
         * Uniq Vpc Id.
         */
        uniqVpcId: pulumi.Input<string>;
    }

    export interface ZoneVpcSet {
        /**
         * VPC REGION.
         */
        region: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        uniqVpcId: pulumi.Input<string>;
    }
}

export namespace Projects {
}

export namespace Protocol {
}

export namespace Pts {
    export interface FileFileInfo {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobDataset {
        /**
         * File ID.
         */
        fileId?: pulumi.Input<string>;
        /**
         * Header data row.
         */
        headLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Parameter name array.
         */
        headerColumns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether the first line is the parameter name.
         */
        headerInFile: pulumi.Input<boolean>;
        /**
         * Number of file lines.
         */
        lineCount?: pulumi.Input<number>;
        /**
         * The file name where the test dataset is located.
         */
        name: pulumi.Input<string>;
        /**
         * Number of file bytes.
         */
        size?: pulumi.Input<number>;
        /**
         * Test whether the dataset is fragmented.
         */
        split: pulumi.Input<boolean>;
        /**
         * Trailing data row.
         */
        tailLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobDomainNameConfig {
        /**
         * DNS configuration.
         */
        dnsConfig?: pulumi.Input<inputs.Pts.JobDomainNameConfigDnsConfig>;
        /**
         * Domain name binding configuration.
         */
        hostAliases?: pulumi.Input<pulumi.Input<inputs.Pts.JobDomainNameConfigHostAlias>[]>;
    }

    export interface JobDomainNameConfigDnsConfig {
        /**
         * DNS IP List.
         */
        nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobDomainNameConfigHostAlias {
        /**
         * List of domain names to be bound.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The IP address to be bound.
         */
        ip?: pulumi.Input<string>;
    }

    export interface JobLoad {
        /**
         * Pressure distribution.
         */
        geoRegionsLoadDistributions?: pulumi.Input<pulumi.Input<inputs.Pts.JobLoadGeoRegionsLoadDistribution>[]>;
        /**
         * Pressure allocation.
         */
        loadSpec?: pulumi.Input<inputs.Pts.JobLoadLoadSpec>;
        /**
         * Source of stress.
         */
        vpcLoadDistribution?: pulumi.Input<inputs.Pts.JobLoadVpcLoadDistribution>;
    }

    export interface JobLoadGeoRegionsLoadDistribution {
        /**
         * Percentage.
         */
        percentage?: pulumi.Input<number>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Regional ID.
         */
        regionId: pulumi.Input<number>;
    }

    export interface JobLoadLoadSpec {
        /**
         * Configuration of concurrent pressure mode.
         */
        concurrency?: pulumi.Input<inputs.Pts.JobLoadLoadSpecConcurrency>;
        /**
         * Average number of requests per second.
         */
        requestsPerSecond?: pulumi.Input<inputs.Pts.JobLoadLoadSpecRequestsPerSecond>;
        /**
         * Built-in stress mode in script.
         */
        scriptOrigin?: pulumi.Input<inputs.Pts.JobLoadLoadSpecScriptOrigin>;
    }

    export interface JobLoadLoadSpecConcurrency {
        /**
         * Wait time for graceful termination of the task.
         */
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Number of runs.
         */
        iterationCount?: pulumi.Input<number>;
        /**
         * Maximum requests per second.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Multi-phase configuration array.
         */
        stages?: pulumi.Input<pulumi.Input<inputs.Pts.JobLoadLoadSpecConcurrencyStage>[]>;
    }

    export interface JobLoadLoadSpecConcurrencyStage {
        /**
         * Pressure time.
         */
        durationSeconds?: pulumi.Input<number>;
        /**
         * Number of virtual users.
         */
        targetVirtualUsers?: pulumi.Input<number>;
    }

    export interface JobLoadLoadSpecRequestsPerSecond {
        /**
         * Pressure time.
         */
        durationSeconds?: pulumi.Input<number>;
        /**
         * Elegant shutdown waiting time.
         */
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Maximum requests per second.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Number of resources.
         */
        resources?: pulumi.Input<number>;
        /**
         * Initial RPS.
         */
        startRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Target RPS, invalid input parameter.
         */
        targetRequestsPerSecond?: pulumi.Input<number>;
    }

    export interface JobLoadLoadSpecScriptOrigin {
        /**
         * Pressure testing time.
         */
        durationSeconds: pulumi.Input<number>;
        /**
         * Number of machines.
         */
        machineNumber: pulumi.Input<number>;
        /**
         * Machine specification.
         */
        machineSpecification: pulumi.Input<string>;
    }

    export interface JobLoadVpcLoadDistribution {
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Regional ID.
         */
        regionId: pulumi.Input<number>;
        /**
         * Subnet ID list.
         */
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC ID.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface JobPlugin {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobProtocol {
        /**
         * File ID.
         */
        fileId?: pulumi.Input<string>;
        /**
         * Protocol name.
         */
        name?: pulumi.Input<string>;
        /**
         * File name.
         */
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobRequestFile {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface JobTestScript {
        /**
         * Base64 encoded file content.
         */
        encodedContent?: pulumi.Input<string>;
        /**
         * Base64 encoded har structure.
         */
        encodedHttpArchive?: pulumi.Input<string>;
        /**
         * Script weight, range 1-100.
         */
        loadWeight?: pulumi.Input<number>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * Scene Type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ProjectTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface ScenarioDataset {
        /**
         * File ID.
         */
        fileId?: pulumi.Input<string>;
        /**
         * Header data row.
         */
        headLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Parameter name array.
         */
        headerColumns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether the first line is the parameter name.
         */
        headerInFile: pulumi.Input<boolean>;
        /**
         * Number of file lines.
         */
        lineCount?: pulumi.Input<number>;
        /**
         * The file name where the test dataset is located.
         */
        name: pulumi.Input<string>;
        /**
         * Number of file bytes.
         */
        size?: pulumi.Input<number>;
        /**
         * Test whether the dataset is fragmented.
         */
        split: pulumi.Input<boolean>;
        /**
         * Trailing data row.
         */
        tailLines?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioDomainNameConfig {
        /**
         * DNS configuration.
         */
        dnsConfig?: pulumi.Input<inputs.Pts.ScenarioDomainNameConfigDnsConfig>;
        /**
         * Domain name binding configuration.
         */
        hostAliases?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioDomainNameConfigHostAlias>[]>;
    }

    export interface ScenarioDomainNameConfigDnsConfig {
        /**
         * DNS IP List.
         */
        nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ScenarioDomainNameConfigHostAlias {
        /**
         * List of domain names to be bound.
         */
        hostNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The IP address to be bound.
         */
        ip?: pulumi.Input<string>;
    }

    export interface ScenarioLoad {
        /**
         * Pressure distribution.
         */
        geoRegionsLoadDistributions?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioLoadGeoRegionsLoadDistribution>[]>;
        /**
         * Pressure allocation.
         */
        loadSpec?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpec>;
        /**
         * Source of stress.
         */
        vpcLoadDistribution?: pulumi.Input<inputs.Pts.ScenarioLoadVpcLoadDistribution>;
    }

    export interface ScenarioLoadGeoRegionsLoadDistribution {
        /**
         * Percentage.
         */
        percentage?: pulumi.Input<number>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Regional ID.
         */
        regionId: pulumi.Input<number>;
    }

    export interface ScenarioLoadLoadSpec {
        /**
         * Configuration of concurrent pressure mode.
         */
        concurrency?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecConcurrency>;
        /**
         * Configuration of RPS pressure mode.
         */
        requestsPerSecond?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecRequestsPerSecond>;
        /**
         * Built-in stress mode in script.
         */
        scriptOrigin?: pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecScriptOrigin>;
    }

    export interface ScenarioLoadLoadSpecConcurrency {
        /**
         * Wait time for graceful termination of the task.
         */
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Number of runs.
         */
        iterationCount?: pulumi.Input<number>;
        /**
         * Maximum RPS.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Multi-phase configuration array.
         */
        stages?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioLoadLoadSpecConcurrencyStage>[]>;
    }

    export interface ScenarioLoadLoadSpecConcurrencyStage {
        /**
         * Pressure time.
         */
        durationSeconds?: pulumi.Input<number>;
        /**
         * Number of virtual users.
         */
        targetVirtualUsers?: pulumi.Input<number>;
    }

    export interface ScenarioLoadLoadSpecRequestsPerSecond {
        /**
         * Pressure time.
         */
        durationSeconds?: pulumi.Input<number>;
        /**
         * Elegant shutdown waiting time.
         */
        gracefulStopSeconds?: pulumi.Input<number>;
        /**
         * Maximum RPS.
         */
        maxRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Number of resources.
         */
        resources?: pulumi.Input<number>;
        /**
         * Initial RPS.
         */
        startRequestsPerSecond?: pulumi.Input<number>;
        /**
         * Target RPS, invalid input parameter.
         */
        targetRequestsPerSecond?: pulumi.Input<number>;
    }

    export interface ScenarioLoadLoadSpecScriptOrigin {
        /**
         * Pressure testing time.
         */
        durationSeconds: pulumi.Input<number>;
        /**
         * Number of machines.
         */
        machineNumber: pulumi.Input<number>;
        /**
         * Machine specification.
         */
        machineSpecification: pulumi.Input<string>;
    }

    export interface ScenarioLoadVpcLoadDistribution {
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Regional ID.
         */
        regionId: pulumi.Input<number>;
        /**
         * Subnet ID list.
         */
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * VPC ID.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface ScenarioPlugin {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioProtocol {
        /**
         * File ID.
         */
        fileId?: pulumi.Input<string>;
        /**
         * Protocol name.
         */
        name?: pulumi.Input<string>;
        /**
         * File name.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioRequestFile {
        /**
         * File id.
         */
        fileId?: pulumi.Input<string>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ScenarioSlaPolicy {
        /**
         * Alarm notification channel.
         */
        alertChannel?: pulumi.Input<inputs.Pts.ScenarioSlaPolicyAlertChannel>;
        /**
         * SLA rules.
         */
        slaRules?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioSlaPolicySlaRule>[]>;
    }

    export interface ScenarioSlaPolicyAlertChannel {
        /**
         * AMP consumer ID.
         */
        ampConsumerId?: pulumi.Input<string>;
        /**
         * Notification template ID.
         */
        noticeId?: pulumi.Input<string>;
    }

    export interface ScenarioSlaPolicySlaRule {
        /**
         * Whether to stop the stress test task.
         */
        abortFlag?: pulumi.Input<boolean>;
        /**
         * Aggregation method of pressure test index.
         */
        aggregation?: pulumi.Input<string>;
        /**
         * Pressure test index condition judgment symbol.
         */
        condition?: pulumi.Input<string>;
        /**
         * duraion.
         */
        for?: pulumi.Input<string>;
        /**
         * tag.
         */
        labelFilters?: pulumi.Input<pulumi.Input<inputs.Pts.ScenarioSlaPolicySlaRuleLabelFilter>[]>;
        /**
         * Pressure test index.
         */
        metric?: pulumi.Input<string>;
        /**
         * Threshold value.
         */
        value?: pulumi.Input<number>;
    }

    export interface ScenarioSlaPolicySlaRuleLabelFilter {
        /**
         * Label name.
         */
        labelName?: pulumi.Input<string>;
        /**
         * Label value.
         */
        labelValue?: pulumi.Input<string>;
    }

    export interface ScenarioTestScript {
        /**
         * Base64 encoded file content.
         */
        encodedContent?: pulumi.Input<string>;
        /**
         * Base64 encoded har structure.
         */
        encodedHttpArchive?: pulumi.Input<string>;
        /**
         * Script weight, range 1-100.
         */
        loadWeight?: pulumi.Input<number>;
        /**
         * File name.
         */
        name?: pulumi.Input<string>;
        /**
         * File size.
         */
        size?: pulumi.Input<number>;
        /**
         * File type.
         */
        type?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface TmpKeyGenerateCredential {
        /**
         * Temporary secret ID.
         */
        tmpSecretId?: pulumi.Input<string>;
        /**
         * Temporary secret key.
         */
        tmpSecretKey?: pulumi.Input<string>;
        /**
         * Temporary token.
         */
        token?: pulumi.Input<string>;
    }
}

export namespace Redis {
    export interface BackupDownloadRestrictionLimitVpc {
        /**
         * Customize the region of the VPC to which the backup file is downloaded.
         */
        region: pulumi.Input<string>;
        /**
         * Customize the list of VPCs to download backup files.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetBackupDownloadInfoLimitVpc {
        /**
         * Customize the region of the VPC to which the backup file is downloaded.
         */
        region: string;
        /**
         * Customize the list of VPCs to download backup files.
         */
        vpcLists: string[];
    }

    export interface GetBackupDownloadInfoLimitVpcArgs {
        /**
         * Customize the region of the VPC to which the backup file is downloaded.
         */
        region: pulumi.Input<string>;
        /**
         * Customize the list of VPCs to download backup files.
         */
        vpcLists: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceNodeInfo {
        /**
         * ID of the master or replica node.
         */
        id?: pulumi.Input<number>;
        /**
         * Indicates whether the node is master.
         */
        master?: pulumi.Input<boolean>;
        /**
         * ID of the availability zone of the master or replica node.
         */
        zoneId?: pulumi.Input<number>;
    }

    export interface ParamTemplateParamDetail {
        /**
         * Current value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Default value.
         */
        default?: pulumi.Input<string>;
        /**
         * Parameter template description.
         */
        description?: pulumi.Input<string>;
        /**
         * Enum values.
         */
        enumValues?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Maximum value.
         */
        max?: pulumi.Input<string>;
        /**
         * Minimum value.
         */
        min?: pulumi.Input<string>;
        /**
         * Parameter template name.
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates whether to reboot redis instance if modified.
         */
        needReboot?: pulumi.Input<number>;
        /**
         * Parameter type.
         */
        paramType?: pulumi.Input<string>;
    }

    export interface ParamTemplateParamsOverride {
        /**
         * Parameter key e.g. `timeout`, check https://www.tencentcloud.com/document/product/239/39796 for more reference.
         */
        key: pulumi.Input<string>;
        /**
         * Parameter value, check https://www.tencentcloud.com/document/product/239/39796 for more reference.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Reserved {
}

export namespace Rum {
}

export namespace Scf {
    export interface CustomDomainCertConfig {
        /**
         * SSL Certificates ID.
         */
        certificateId?: pulumi.Input<string>;
    }

    export interface CustomDomainEndpointsConfig {
        /**
         * Function name.
         */
        functionName: pulumi.Input<string>;
        /**
         * Function namespace.
         */
        namespace: pulumi.Input<string>;
        /**
         * Path, value specification: /,/*,/xxx,/xxx/a,/xxx/*.
         */
        pathMatch: pulumi.Input<string>;
        /**
         * Path rewriting policy.
         */
        pathRewrites?: pulumi.Input<pulumi.Input<inputs.Scf.CustomDomainEndpointsConfigPathRewrite>[]>;
        /**
         * Function alias or version.
         */
        qualifier: pulumi.Input<string>;
    }

    export interface CustomDomainEndpointsConfigPathRewrite {
        /**
         * Path that needs to be rerouted, value specification: /,/*,/xxx,/xxx/a,/xxx/*.
         */
        path: pulumi.Input<string>;
        /**
         * Replacement values: such as/, /$.
         */
        rewrite: pulumi.Input<string>;
        /**
         * Matching rules, value range: WildcardRules wildcard matching, ExactRules exact matching.
         */
        type: pulumi.Input<string>;
    }

    export interface CustomDomainWafConfig {
        /**
         * Web Application Firewall Instance ID.
         */
        wafInstanceId?: pulumi.Input<string>;
        /**
         * Whether the Web Application Firewall is turned on, value range:OPEN, CLOSE.
         */
        wafOpen?: pulumi.Input<string>;
    }

    export interface FunctionAliasRoutingConfig {
        /**
         * Additional version with rule-based routing.
         */
        additionalVersionMatches?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionAliasRoutingConfigAdditionalVersionMatch>[]>;
        /**
         * Additional version with random weight-based routing.
         */
        additionalVersionWeights?: pulumi.Input<pulumi.Input<inputs.Scf.FunctionAliasRoutingConfigAdditionalVersionWeight>[]>;
    }

    export interface FunctionAliasRoutingConfigAdditionalVersionMatch {
        /**
         * Rule requirements for range match:It should be described in an open or closed range, i.e., (a,b) or [a,b], where both a and b are integersRule requirements for exact match:Exact string match.
         */
        expression: pulumi.Input<string>;
        /**
         * Matching rule key. When the API is called, pass in the key to route the request to the specified version based on the matching ruleHeader method:Enter invoke.headers.User for key and pass in RoutingKey:{User:value} when invoking a function through invoke for invocation based on rule matching.
         */
        key: pulumi.Input<string>;
        /**
         * Match method. Valid values:range: Range matchexact: exact string match.
         */
        method: pulumi.Input<string>;
        /**
         * Function version name.
         */
        version: pulumi.Input<string>;
    }

    export interface FunctionAliasRoutingConfigAdditionalVersionWeight {
        /**
         * Function version name.
         */
        version: pulumi.Input<string>;
        /**
         * Version weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface FunctionCfsConfig {
        /**
         * File system instance ID.
         */
        cfsId: pulumi.Input<string>;
        /**
         * (Readonly) File system ip address.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Local mount directory.
         */
        localMountDir: pulumi.Input<string>;
        /**
         * File system mount instance ID.
         */
        mountInsId: pulumi.Input<string>;
        /**
         * (Readonly) File system subnet ID.
         */
        mountSubnetId?: pulumi.Input<string>;
        /**
         * (Readonly) File system virtual private network ID.
         */
        mountVpcId?: pulumi.Input<string>;
        /**
         * Remote mount directory.
         */
        remoteMountDir: pulumi.Input<string>;
        /**
         * ID of user group.
         */
        userGroupId: pulumi.Input<string>;
        /**
         * ID of user.
         */
        userId: pulumi.Input<string>;
    }

    export interface FunctionEventInvokeConfigAsyncTriggerConfig {
        /**
         * Message retention period.
         */
        msgTtl: pulumi.Input<number>;
        /**
         * Async retry configuration of function upon user error.
         */
        retryConfigs: pulumi.Input<pulumi.Input<inputs.Scf.FunctionEventInvokeConfigAsyncTriggerConfigRetryConfig>[]>;
    }

    export interface FunctionEventInvokeConfigAsyncTriggerConfigRetryConfig {
        /**
         * Number of retry attempts.
         */
        retryNum: pulumi.Input<number>;
    }

    export interface FunctionImageConfig {
        /**
         * the parameters of command.
         */
        args?: pulumi.Input<string>;
        /**
         * The command of entrypoint.
         */
        command?: pulumi.Input<string>;
        /**
         * Image accelerate switch.
         */
        containerImageAccelerate?: pulumi.Input<boolean>;
        /**
         * The entrypoint of app.
         */
        entryPoint?: pulumi.Input<string>;
        /**
         * Image function port setting. Default is `9000`, -1 indicates no port mirroring function. Other value ranges 0 ~ 65535.
         */
        imagePort?: pulumi.Input<number>;
        /**
         * The image type. personal or enterprise.
         */
        imageType: pulumi.Input<string>;
        /**
         * The uri of image.
         */
        imageUri: pulumi.Input<string>;
        /**
         * The registry id of TCR. When image type is enterprise, it must be set.
         */
        registryId?: pulumi.Input<string>;
    }

    export interface FunctionIntranetConfig {
        /**
         * If fixed intranet IP is enabled, this field returns the IP list used.
         */
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to enable fixed intranet IP, ENABLE is enabled, DISABLE is disabled.
         */
        ipFixed: pulumi.Input<string>;
    }

    export interface FunctionLayer {
        /**
         * The name of Layer.
         */
        layerName: pulumi.Input<string>;
        /**
         * The version of layer.
         */
        layerVersion: pulumi.Input<number>;
    }

    export interface FunctionTrigger {
        /**
         * Region of cos bucket. if `type` is `cos`, `cosRegion` is required.
         */
        cosRegion?: pulumi.Input<string>;
        /**
         * Name of the SCF function trigger, if `type` is `ckafka`, the format of name must be `<ckafkaInstanceId>-<topicId>`; if `type` is `cos`, the name is cos bucket id, other In any case, it can be combined arbitrarily. It can only contain English letters, numbers, connectors and underscores. The maximum length is 100.
         */
        name: pulumi.Input<string>;
        /**
         * TriggerDesc of the SCF function trigger, parameter format of `timer` is linux cron expression; parameter of `cos` type is json string `{"bucketUrl":"<name-appid>.cos.<region>.myqcloud.com","event":"cos:ObjectCreated:*","filter":{"Prefix":"","Suffix":""}}`, where `bucketUrl` is cos bucket (optional), `event` is the cos event trigger, `Prefix` is the corresponding file prefix filter condition, `Suffix` is the suffix filter condition, if not need filter condition can not pass; `cmq` type does not pass this parameter; `ckafka` type parameter format is json string `{"maxMsgNum":"1","offset":"latest"}`; `apigw` type parameter format is json string `{"api":{"authRequired":"FALSE","requestConfig":{"method":"ANY"},"isIntegratedResponse":"FALSE"},"service":{"serviceId":"service-dqzh68sg"},"release":{"environmentName":"test"}}`.
         */
        triggerDesc: pulumi.Input<string>;
        /**
         * Type of the SCF function trigger, support `cos`, `cls`, `timer`, `ckafka`, `http`, `apigw`, `cmq`.
         */
        type: pulumi.Input<string>;
    }

    export interface FunctionTriggerInfo {
        /**
         * Create time of SCF function trigger.
         */
        createTime?: pulumi.Input<string>;
        /**
         * User-defined parameters of SCF function trigger.
         */
        customArgument?: pulumi.Input<string>;
        /**
         * Whether SCF function trigger is enable.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Modify time of SCF function trigger.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * Name of the SCF function. Name supports 26 English letters, numbers, connectors, and underscores, it should start with a letter. The last character cannot be `-` or `_`. Available length is 2-60.
         */
        name?: pulumi.Input<string>;
        /**
         * TriggerDesc of the SCF function trigger, parameter format of `timer` is linux cron expression; parameter of `cos` type is json string `{"bucketUrl":"<name-appid>.cos.<region>.myqcloud.com","event":"cos:ObjectCreated:*","filter":{"Prefix":"","Suffix":""}}`, where `bucketUrl` is cos bucket (optional), `event` is the cos event trigger, `Prefix` is the corresponding file prefix filter condition, `Suffix` is the suffix filter condition, if not need filter condition can not pass; `cmq` type does not pass this parameter; `ckafka` type parameter format is json string `{"maxMsgNum":"1","offset":"latest"}`; `apigw` type parameter format is json string `{"api":{"authRequired":"FALSE","requestConfig":{"method":"ANY"},"isIntegratedResponse":"FALSE"},"service":{"serviceId":"service-dqzh68sg"},"release":{"environmentName":"test"}}`.
         */
        triggerDesc?: pulumi.Input<string>;
        /**
         * Type of the SCF function trigger, support `cos`, `cls`, `timer`, `ckafka`, `http`, `apigw`, `cmq`.
         */
        type?: pulumi.Input<string>;
    }

    export interface GetTriggersFilter {
        /**
         * Fields to be filtered. Up to 10 conditions allowed.Values of Name: VpcId, SubnetId, ClsTopicId, ClsLogsetId, Role, CfsId, CfsMountInsId, Eip. Values limit: 1.Name options: Status, Runtime, FunctionType, PublicNetStatus, AsyncRunEnable, TraceEnable. Values limit: 20.When Name is Runtime, CustomImage refers to the image type function.
         */
        name: string;
        /**
         * Filter values of the field.
         */
        values: string[];
    }

    export interface GetTriggersFilterArgs {
        /**
         * Fields to be filtered. Up to 10 conditions allowed.Values of Name: VpcId, SubnetId, ClsTopicId, ClsLogsetId, Role, CfsId, CfsMountInsId, Eip. Values limit: 1.Name options: Status, Runtime, FunctionType, PublicNetStatus, AsyncRunEnable, TraceEnable. Values limit: 20.When Name is Runtime, CustomImage refers to the image type function.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LayerContent {
        /**
         * Cos bucket name of the SCF layer, such as `cos-1234567890`, conflict with `zipFile`.
         */
        cosBucketName?: pulumi.Input<string>;
        /**
         * Cos bucket region of the SCF layer, conflict with `zipFile`.
         */
        cosBucketRegion?: pulumi.Input<string>;
        /**
         * Cos object name of the SCF layer, should have suffix `.zip` or `.jar`, conflict with `zipFile`.
         */
        cosObjectName?: pulumi.Input<string>;
        /**
         * Zip file of the SCF layer, conflict with `cosBucketName`, `cosObjectName`, `cosBucketRegion`.
         */
        zipFile?: pulumi.Input<string>;
    }

    export interface ProvisionedConcurrencyConfigTriggerAction {
        /**
         * The provision type. Value: Default Note: This field may return null, indicating that no valid value can be found.
         */
        provisionedType?: pulumi.Input<string>;
        /**
         * Trigger time of the scheduled action in Cron expression. Seven fields are required and should be separated with a space. Note: this field may return null, indicating that no valid values can be obtained.
         */
        triggerCronConfig: pulumi.Input<string>;
        /**
         * Scheduled action name Note: this field may return null, indicating that no valid values can be obtained.
         */
        triggerName: pulumi.Input<string>;
        /**
         * Target provisioned concurrency of the scheduled scaling action Note: this field may return null, indicating that no valid values can be obtained.
         */
        triggerProvisionedConcurrencyNum: pulumi.Input<number>;
    }
}

export namespace Security {
    export interface GroupRuleSetEgress {
        /**
         * Rule policy of security group. Valid values: `ACCEPT` and `DROP`.
         */
        action: pulumi.Input<string>;
        /**
         * Specify Group ID of Address template like `ipmg-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        addressTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Address template ID like `ipm-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        addressTemplateId?: pulumi.Input<string>;
        /**
         * An IP address network or CIDR segment. NOTE: `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` are exclusive and cannot be set in the same time; One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Description of the security group rule.
         */
        description?: pulumi.Input<string>;
        /**
         * An IPV6 address network or CIDR segment, and conflict with `sourceSecurityId` and `address_template_*`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        ipv6CidrBlock?: pulumi.Input<string>;
        /**
         * The security group rule index number, whose value dynamically changes with changes in security group rules.
         */
        policyIndex?: pulumi.Input<number>;
        /**
         * Range of the port. The available value can be one, multiple or one segment. E.g. `80`, `80,90` and `80-90`. Default to all ports, and conflicts with `service_template_*`.
         */
        port?: pulumi.Input<string>;
        /**
         * Type of IP protocol. Valid values: `TCP`, `UDP`, `ICMP`, `ICMPv6` and `ALL`. Default to all types protocol, and conflicts with `service_template_*`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Specify Group ID of Protocol template ID like `ppmg-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Protocol template ID like `ppm-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateId?: pulumi.Input<string>;
        /**
         * ID of the nested security group, and conflicts with `cidrBlock` and `address_template_*`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        sourceSecurityId?: pulumi.Input<string>;
    }

    export interface GroupRuleSetIngress {
        /**
         * Rule policy of security group. Valid values: `ACCEPT` and `DROP`.
         */
        action: pulumi.Input<string>;
        /**
         * Specify Group ID of Address template like `ipmg-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        addressTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Address template ID like `ipm-xxxxxxxx`, conflict with `sourceSecurityId` and `cidrBlock`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        addressTemplateId?: pulumi.Input<string>;
        /**
         * An IP address network or CIDR segment. NOTE: `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` are exclusive and cannot be set in the same time; One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Description of the security group rule.
         */
        description?: pulumi.Input<string>;
        /**
         * An IPV6 address network or CIDR segment, and conflict with `sourceSecurityId` and `address_template_*`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        ipv6CidrBlock?: pulumi.Input<string>;
        /**
         * The security group rule index number, whose value dynamically changes with changes in security group rules.
         */
        policyIndex?: pulumi.Input<number>;
        /**
         * Range of the port. The available value can be one, multiple or one segment. E.g. `80`, `80,90` and `80-90`. Default to all ports, and conflicts with `service_template_*`.
         */
        port?: pulumi.Input<string>;
        /**
         * Type of IP protocol. Valid values: `TCP`, `UDP`, `ICMP`, `ICMPv6` and `ALL`. Default to all types protocol, and conflicts with `service_template_*`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Specify Group ID of Protocol template ID like `ppmg-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateGroup?: pulumi.Input<string>;
        /**
         * Specify Protocol template ID like `ppm-xxxxxxxx`, conflict with `cidrBlock` and `port`.
         */
        serviceTemplateId?: pulumi.Input<string>;
        /**
         * ID of the nested security group, and conflicts with `cidrBlock` and `address_template_*`. NOTE: One of `cidrBlock`, `ipv6CidrBlock`, `sourceSecurityId` and `address_template_*` must be set.
         */
        sourceSecurityId?: pulumi.Input<string>;
    }
}

export namespace Ses {
    export interface BatchSendEmailAttachment {
        /**
         * Base64-encoded attachment content. You can send attachments of up to 4 MB in the total size.Note: The TencentCloud API supports a request packet of up to 8 MB in size, and the size of the attachmentcontent will increase by 1.5 times after Base64 encoding. Therefore, you need to keep the total size of allattachments below 4 MB. If the entire request exceeds 8 MB, the API will return an error.
         */
        content: pulumi.Input<string>;
        /**
         * Attachment name, which cannot exceed 255 characters. Some attachment types are not supported. For details, see [Attachment Types.](https://www.tencentcloud.com/document/product/1084/42373?has_map=1).
         */
        fileName: pulumi.Input<string>;
    }

    export interface BatchSendEmailCycleParam {
        /**
         * Start time of the task.
         */
        beginTime: pulumi.Input<string>;
        /**
         * Task recurrence in hours.
         */
        intervalTime: pulumi.Input<number>;
        /**
         * Specifies whether to end the cycle. This parameter is used to update the task. Valid values: 0: No; 1: Yes.
         */
        termCycle?: pulumi.Input<number>;
    }

    export interface BatchSendEmailTemplate {
        /**
         * Variable parameters in the template. Please use json.dump to format the JSON object into a string type.The object is a set of key-value pairs. Each key denotes a variable, which is represented by {{key}}. The key will be replaced with the correspondingvalue (represented by {{value}}) when sending the email.Note: The parameter value cannot be data of a complex type such as HTML.Example: {name:xxx,age:xx}.
         */
        templateData: pulumi.Input<string>;
        /**
         * Template ID. If you do not have any template, please create one.
         */
        templateId: pulumi.Input<number>;
    }

    export interface BatchSendEmailTimedParam {
        /**
         * Start time of a scheduled sending task.
         */
        beginTime: pulumi.Input<string>;
    }

    export interface DomainAttribute {
        /**
         * Values that need to be configured.
         */
        expectedValue?: pulumi.Input<string>;
        /**
         * Domain name.
         */
        sendDomain?: pulumi.Input<string>;
        /**
         * Record Type CNAME | A | TXT | MX.
         */
        type?: pulumi.Input<string>;
    }

    export interface ReceiverData {
        /**
         * Recipient email addresses.
         */
        email: pulumi.Input<string>;
        /**
         * Variable parameters in the template, please use json.dump to format the JSON object as a string type. The object is a set of key-value pairs, where each key represents a variable in the template, and the variables in the template are represented by {{key}}, and the corresponding values will be replaced with {{value}} when sent.Note: Parameter values cannot be complex data such as HTML. The total length of TemplateData (the entire JSON structure) should be less than 800 bytes.
         */
        templateData?: pulumi.Input<string>;
    }

    export interface SendEmailAttachment {
        /**
         * Base64-encoded attachment content. You can send attachments of up to 4 MB in the total size.Note: The TencentCloud API supports a request packet of up to 8 MB in size, and the size of the attachmentcontent will increase by 1.5 times after Base64 encoding. Therefore, you need to keep the total size of allattachments below 4 MB. If the entire request exceeds 8 MB, the API will return an error.
         */
        content: pulumi.Input<string>;
        /**
         * Attachment name, which cannot exceed 255 characters. Some attachment types are not supported. For details, see [Attachment Types.](https://www.tencentcloud.com/document/product/1084/42373?has_map=1).
         */
        fileName: pulumi.Input<string>;
    }

    export interface SendEmailTemplate {
        /**
         * Variable parameters in the template. Please use json.dump to format the JSON object into a string type.The object is a set of key-value pairs. Each key denotes a variable, which is represented by {{key}}. The key will be replaced with the correspondingvalue (represented by {{value}}) when sending the email.Note: The parameter value cannot be data of a complex type such as HTML.Example: {name:xxx,age:xx}.
         */
        templateData: pulumi.Input<string>;
        /**
         * Template ID. If you do not have any template, please create one.
         */
        templateId: pulumi.Input<number>;
    }

    export interface TemplateTemplateContent {
        /**
         * Html code after base64.
         */
        html?: pulumi.Input<string>;
        /**
         * Text content after base64.
         */
        text?: pulumi.Input<string>;
    }
}

export namespace Sg {
    export interface RuleData {
        /**
         * Description.
         */
        description: pulumi.Input<string>;
        /**
         * Destination example: `net`: IP/CIDR (192.168.0.2); `template`: parameter template (ipm-dyodhpby); `instance`: asset instance (ins-123456); `resourcegroup`: asset group (/all groups/group 1/subgroup 1); `tag`: resource tag ({"Key":"tag key","Value":"tag value"}); `region`: region (ap-gaungzhou).
         */
        destContent: pulumi.Input<string>;
        /**
         * Access destination type. Valid values: net|template|instance|resourcegroup|tag|region.
         */
        destType: pulumi.Input<string>;
        /**
         * Rule priority.
         */
        orderIndex?: pulumi.Input<string>;
        /**
         * The port to apply access control rules. Valid values: `-1/-1`: all ports, `80`: port 80.
         */
        port?: pulumi.Input<string>;
        /**
         * Protocol. TCP/UDP/ICMP/ANY.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The action that Cloud Firewall performs on the traffic. Valid values: `accept`: allow, `drop`: deny.
         */
        ruleAction: pulumi.Input<string>;
        /**
         * Parameter template ID of port and protocol type; mutually exclusive with Protocol and Port.
         */
        serviceTemplateId?: pulumi.Input<string>;
        /**
         * Source example: `net`: IP/CIDR (192.168.0.2); `template`: parameter template (ipm-dyodhpby); `instance`: asset instance (ins-123456); `resourcegroup`: asset group (/all groups/group 1/subgroup 1); `tag`: resource tag ({"Key":"tag key","Value":"tag value"}); `region`: region (ap-gaungzhou).
         */
        sourceContent: pulumi.Input<string>;
        /**
         * Access source type. Valid values: net|template|instance|resourcegroup|tag|region.
         */
        sourceType: pulumi.Input<string>;
    }
}

export namespace Sqlserver {
    export interface BusinessIntelligenceInstanceResourceTag {
        /**
         * Tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * Tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface ConfigInstanceParamParamList {
        /**
         * Parameter value.
         */
        currentValue?: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name?: pulumi.Input<string>;
    }

    export interface ConfigInstanceRoGroupWeightPair {
        /**
         * Read-only instance ID, in the format: mssqlro-3l3fgqn7.
         */
        readOnlyInstanceId: pulumi.Input<string>;
        /**
         * Read-only instance weight, the range is 0-100.
         */
        readOnlyWeight: pulumi.Input<number>;
    }

    export interface GeneralCloudInstanceResourceTag {
        /**
         * tag key.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface MigrationMigrateDbSet {
        /**
         * Name of the migration database.
         */
        dbName?: pulumi.Input<string>;
    }

    export interface MigrationRenameRestore {
        /**
         * When the new name of the library is used for offline migration, if it is not filled in, it will be named according to OldName. OldName and NewName cannot be filled in at the same time. OldName and NewName must be filled in and cannot be duplicate when used for cloning database.
         */
        newName?: pulumi.Input<string>;
        /**
         * The name of the library. If oldName does not exist, a failure is returned.It can be left blank when used for offline migration tasks.
         */
        oldName?: pulumi.Input<string>;
    }

    export interface MigrationSource {
        /**
         * ID of the migration source Cvm, used when MigrateType=2 (cloud server self-built SQL Server database).
         */
        cvmId?: pulumi.Input<string>;
        /**
         * The ID of the migration source instance, which is used when MigrateType=1 (TencentDB for SQLServers). The format is mssql-si2823jyl.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Migrate the intranet IP of the self-built database of the source Cvm, and use it when MigrateType=2 (self-built SQL Server database of the cloud server).
         */
        ip?: pulumi.Input<string>;
        /**
         * Password, MigrateType=1 or MigrateType=2.
         */
        password?: pulumi.Input<string>;
        /**
         * The port number of the self-built database of the migration source Cvm, which is used when MigrateType=2 (self-built SQL Server database of the cloud server).
         */
        port?: pulumi.Input<number>;
        /**
         * The subnet ID under the Vpc of the source Cvm is used when MigrateType=2 (ECS self-built SQL Server database). The format is as follows subnet-h9extioi.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * The source backup password for offline migration, MigrateType=4 or MigrateType=5.
         */
        urlPassword?: pulumi.Input<string>;
        /**
         * The source backup address for offline migration. MigrateType=4 or MigrateType=5.
         */
        urls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * User name, MigrateType=1 or MigrateType=2.
         */
        userName?: pulumi.Input<string>;
        /**
         * The Vpc network ID of the migration source Cvm is used when MigrateType=2 (cloud server self-built SQL Server database). The format is as follows vpc-6ys9ont9.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MigrationTarget {
        /**
         * The ID of the migration target instance, in the format mssql-si2823jyl.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Password of the migration target instance.
         */
        password?: pulumi.Input<string>;
        /**
         * User name of the migration target instance.
         */
        userName?: pulumi.Input<string>;
    }

    export interface PublishSubscribeDatabaseTuple {
        /**
         * Publish the database.
         */
        publishDatabase: pulumi.Input<string>;
        /**
         * Subscribe the database.
         */
        subscribeDatabase: pulumi.Input<string>;
    }

    export interface RestoreInstanceEncryption {
        /**
         * Database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * encryption, `enable` encrypted, `disable` unencrypted.
         */
        status?: pulumi.Input<string>;
    }

    export interface RestoreInstanceRenameRestore {
        /**
         * New database name. In offline migration, OldName will be used if NewName is left empty (OldName and NewName cannot be both empty). In database cloning, OldName and NewName must be both specified and cannot have the same value.
         */
        newName: pulumi.Input<string>;
        /**
         * Database name. If the OldName database does not exist, a failure will be returned.It can be left empty in offline migration tasks.
         */
        oldName: pulumi.Input<string>;
    }

    export interface RollbackInstanceEncryption {
        /**
         * Database name.
         */
        dbName?: pulumi.Input<string>;
        /**
         * encryption, `enable` encrypted, `disable` unencrypted.
         */
        status?: pulumi.Input<string>;
    }

    export interface RollbackInstanceRenameRestore {
        /**
         * New database name.
         */
        newName: pulumi.Input<string>;
        /**
         * Database name. If the OldName database does not exist, a failure will be returned. It can be left empty in offline migration tasks.
         */
        oldName: pulumi.Input<string>;
    }

    export interface StartXeventEventConfig {
        /**
         * Event type. Valid values: slow (set threshold for slow SQL ), blocked (set threshold for the blocking and deadlock).
         */
        eventType: pulumi.Input<string>;
        /**
         * Threshold in milliseconds. Valid values: 0(disable), non-zero (enable).
         */
        threshold: pulumi.Input<number>;
    }
}

export namespace Ssl {
    export interface CheckCertificateDomainVerificationOperationVerificationResult {
        /**
         * CA inspection results.
         */
        caCheck?: pulumi.Input<number>;
        /**
         * Detected values.
         */
        checkValues?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Domain name.
         */
        domain?: pulumi.Input<string>;
        /**
         * Whether frequent requests.
         */
        frequently?: pulumi.Input<boolean>;
        /**
         * Whether issued.
         */
        issued?: pulumi.Input<boolean>;
        /**
         * Local inspection results.
         */
        localCheck?: pulumi.Input<number>;
        /**
         * Check the reason for the failure.
         */
        localCheckFailReason?: pulumi.Input<string>;
        /**
         * Domain Verify Type.
         */
        verifyType?: pulumi.Input<string>;
    }

    export interface FreeCertificateDvAuth {
        /**
         * DV authentication key.
         */
        dvAuthKey?: pulumi.Input<string>;
        /**
         * DV authentication value.
         */
        dvAuthValue?: pulumi.Input<string>;
        /**
         * DV authentication type.
         */
        dvAuthVerifyType?: pulumi.Input<string>;
    }

    export interface GetDescribeHostApiGatewayInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostApiGatewayInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostCdnInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostCdnInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostClbInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostClbInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostCosInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostCosInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostDdosInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostDdosInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostLighthouseInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostLighthouseInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostLiveInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostLiveInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostTeoInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostTeoInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostTkeInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostTkeInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostVodInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostVodInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface GetDescribeHostWafInstanceListFilter {
        /**
         * Filter parameter key.
         */
        filterKey: string;
        /**
         * Filter parameter value.
         */
        filterValue: string;
    }

    export interface GetDescribeHostWafInstanceListFilterArgs {
        /**
         * Filter parameter key.
         */
        filterKey: pulumi.Input<string>;
        /**
         * Filter parameter value.
         */
        filterValue: pulumi.Input<string>;
    }

    export interface PayCertificateDvAuth {
        /**
         * DV authentication key.
         */
        dvAuthKey?: pulumi.Input<string>;
        /**
         * DV authentication value.
         */
        dvAuthValue?: pulumi.Input<string>;
        /**
         * DV authentication type.
         */
        dvAuthVerifyType?: pulumi.Input<string>;
    }

    export interface PayCertificateInformation {
        /**
         * The administrator's email address.
         */
        adminEmail: pulumi.Input<string>;
        /**
         * The first name of the administrator.
         */
        adminFirstName: pulumi.Input<string>;
        /**
         * The last name of the administrator.
         */
        adminLastName: pulumi.Input<string>;
        /**
         * Manager mobile phone number.
         */
        adminPhoneNum: pulumi.Input<string>;
        /**
         * Manager position.
         */
        adminPosition: pulumi.Input<string>;
        /**
         * Domain name for binding certificate.
         */
        certificateDomain: pulumi.Input<string>;
        /**
         * Contact email address.
         */
        contactEmail: pulumi.Input<string>;
        /**
         * Contact first name.
         */
        contactFirstName: pulumi.Input<string>;
        /**
         * Contact last name.
         */
        contactLastName: pulumi.Input<string>;
        /**
         * Contact phone number.
         */
        contactNumber: pulumi.Input<string>;
        /**
         * Contact position.
         */
        contactPosition: pulumi.Input<string>;
        /**
         * CSR content uploaded.
         */
        csrContent?: pulumi.Input<string>;
        /**
         * CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
         */
        csrType?: pulumi.Input<string>;
        /**
         * Array of uploaded domain names, multi-domain certificates can be uploaded.
         */
        domainLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private key password.
         */
        keyPassword?: pulumi.Input<string>;
        /**
         * Company address.
         */
        organizationAddress: pulumi.Input<string>;
        /**
         * Company city.
         */
        organizationCity: pulumi.Input<string>;
        /**
         * Country name, such as China: CN.
         */
        organizationCountry: pulumi.Input<string>;
        /**
         * Department name.
         */
        organizationDivision: pulumi.Input<string>;
        /**
         * Company name.
         */
        organizationName: pulumi.Input<string>;
        /**
         * The province where the company is located.
         */
        organizationRegion: pulumi.Input<string>;
        /**
         * Company landline area code.
         */
        phoneAreaCode: pulumi.Input<string>;
        /**
         * Company landline number.
         */
        phoneNumber: pulumi.Input<string>;
        /**
         * Company postal code.
         */
        postalCode: pulumi.Input<string>;
        /**
         * Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
         */
        verifyType: pulumi.Input<string>;
    }

    export interface UpdateCertificateInstanceOperationResourceTypesRegion {
        /**
         * Region list.
         */
        regions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Cloud resource type.
         */
        resourceType?: pulumi.Input<string>;
    }
}

export namespace Ssm {
    export interface ProductSecretPrivilegesList {
        /**
         * This value takes effect only when `PrivilegeName` is `ColumnPrivileges`, and the following parameters are required in this case:Database: explicitly indicate the database instance.TableName: explicitly indicate the table.
         */
        columnName?: pulumi.Input<string>;
        /**
         * This value takes effect only when `PrivilegeName` is `DatabasePrivileges`.
         */
        database?: pulumi.Input<string>;
        /**
         * Permission name. Valid values: `GlobalPrivileges`, `DatabasePrivileges`, `TablePrivileges`, `ColumnPrivileges`. When the permission is `DatabasePrivileges`, the database name must be specified by the `Database` parameter; When the permission is `TablePrivileges`, the database name and the table name in the database must be specified by the `Database` and `TableName` parameters; When the permission is `ColumnPrivileges`, the database name, table name in the database, and column name in the table must be specified by the `Database`, `TableName`, and `ColumnName` parameters.
         */
        privilegeName: pulumi.Input<string>;
        /**
         * Permission list. For the `Mysql` service, optional permission values are: 1. Valid values of `GlobalPrivileges`: SELECT,INSERT,UPDATE,DELETE,CREATE, PROCESS, DROP,REFERENCES,INDEX,ALTER,SHOW DATABASES,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER. Note: if this parameter is not passed in, it means to clear the permission. 2. Valid values of `DatabasePrivileges`: SELECT,INSERT,UPDATE,DELETE,CREATE, DROP,REFERENCES,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,ALTER ROUTINE,EVENT,TRIGGER. Note: if this parameter is not passed in, it means to clear the permission. 3. Valid values of `TablePrivileges`: SELECT,INSERT,UPDATE,DELETE,CREATE, DROP,REFERENCES,INDEX,ALTER,CREATE VIEW,SHOW VIEW, TRIGGER. Note: if this parameter is not passed in, it means to clear the permission. 4. Valid values of `ColumnPrivileges`: SELECT,INSERT,UPDATE,REFERENCES.Note: if this parameter is not passed in, it means to clear the permission.
         */
        privileges: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * This value takes effect only when `PrivilegeName` is `TablePrivileges`, and the `Database` parameter is required in this case to explicitly indicate the database instance.
         */
        tableName?: pulumi.Input<string>;
    }
}

export namespace Tat {
    export interface CommandTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface GetAgentFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter values of the field.
         */
        values: string[];
    }

    export interface GetAgentFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInvocationTaskFilter {
        /**
         * Field to be filtered.
         */
        name: string;
        /**
         * Filter values of the field.
         */
        values: string[];
    }

    export interface GetInvocationTaskFilterArgs {
        /**
         * Field to be filtered.
         */
        name: pulumi.Input<string>;
        /**
         * Filter values of the field.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InvokerScheduleSettings {
        /**
         * The next execution time of the invoker. This field is required if Policy is ONCE.
         */
        invokeTime?: pulumi.Input<string>;
        /**
         * Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
         */
        policy: pulumi.Input<string>;
        /**
         * Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
         */
        recurrence?: pulumi.Input<string>;
    }
}

export namespace Tcaplus {
    export interface IdlTableInfo {
        /**
         * Error messages for creating IDL file.
         */
        error?: pulumi.Input<string>;
        /**
         * Index key set of the TcaplusDB table.
         */
        indexKeySet?: pulumi.Input<string>;
        /**
         * Primary key fields of the TcaplusDB table.
         */
        keyFields?: pulumi.Input<string>;
        /**
         * Total size of primary key field of the TcaplusDB table.
         */
        sumKeyFieldSize?: pulumi.Input<number>;
        /**
         * Total size of non-primary key fields of the TcaplusDB table.
         */
        sumValueFieldSize?: pulumi.Input<number>;
        /**
         * Name of the TcaplusDB table.
         */
        tableName?: pulumi.Input<string>;
        /**
         * Non-primary key fields of the TcaplusDB table.
         */
        valueFields?: pulumi.Input<string>;
    }
}

export namespace Tcm {
    export interface AccessLogConfigCls {
        /**
         * Whether enable CLS.
         */
        enable: pulumi.Input<boolean>;
        /**
         * Log set of CLS.
         */
        logSet?: pulumi.Input<string>;
        /**
         * Log topic of CLS.
         */
        topic?: pulumi.Input<string>;
    }

    export interface AccessLogConfigSelectedRange {
        /**
         * Select all if true, default false.
         */
        all?: pulumi.Input<boolean>;
        /**
         * Items.
         */
        items?: pulumi.Input<pulumi.Input<inputs.Tcm.AccessLogConfigSelectedRangeItem>[]>;
    }

    export interface AccessLogConfigSelectedRangeItem {
        /**
         * Ingress gateway list.
         */
        gateways?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Namespace.
         */
        namespace?: pulumi.Input<string>;
    }

    export interface ClusterAttachmentClusterList {
        /**
         * TKE Cluster id.
         */
        clusterId: pulumi.Input<string>;
        /**
         * TKE cluster region.
         */
        region: pulumi.Input<string>;
        /**
         * Cluster role in mesh, REMOTE or MASTER.
         */
        role: pulumi.Input<string>;
        /**
         * Subnet id, only needed if it&#39;s standalone mesh.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Cluster type.
         */
        type: pulumi.Input<string>;
        /**
         * Cluster&#39;s VpcId.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface MeshConfig {
        /**
         * Sidecar inject configuration.
         */
        inject?: pulumi.Input<inputs.Tcm.MeshConfigInject>;
        /**
         * Istio configuration.
         */
        istio?: pulumi.Input<inputs.Tcm.MeshConfigIstio>;
        /**
         * Prometheus configuration.
         */
        prometheus?: pulumi.Input<inputs.Tcm.MeshConfigPrometheus>;
        /**
         * Default sidecar requests and limits.
         */
        sidecarResources?: pulumi.Input<inputs.Tcm.MeshConfigSidecarResources>;
        /**
         * Tracing config.
         */
        tracing?: pulumi.Input<inputs.Tcm.MeshConfigTracing>;
    }

    export interface MeshConfigInject {
        /**
         * IP ranges that should not be proxied.
         */
        excludeIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Let istio-proxy(sidecar) start first, before app container.
         */
        holdApplicationUntilProxyStarts?: pulumi.Input<boolean>;
        /**
         * Let istio-proxy(sidecar) stop last, after app container.
         */
        holdProxyUntilApplicationEnds?: pulumi.Input<boolean>;
    }

    export interface MeshConfigIstio {
        /**
         * Disable http retry.
         */
        disableHttpRetry?: pulumi.Input<boolean>;
        /**
         * Disable policy checks.
         */
        disablePolicyChecks?: pulumi.Input<boolean>;
        /**
         * Enable HTTP/1.0 support.
         */
        enablePilotHttp?: pulumi.Input<boolean>;
        /**
         * Outbound traffic policy, REGISTRY_ONLY or ALLOW_ANY, see https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-OutboundTrafficPolicy-Mode.
         */
        outboundTrafficPolicy: pulumi.Input<string>;
        /**
         * SmartDNS configuration.
         */
        smartDns?: pulumi.Input<inputs.Tcm.MeshConfigIstioSmartDns>;
        /**
         * Tracing config(Deprecated, please use MeshConfig.Tracing for configuration).
         */
        tracing?: pulumi.Input<inputs.Tcm.MeshConfigIstioTracing>;
    }

    export interface MeshConfigIstioSmartDns {
        /**
         * Enable auto allocate address.
         */
        istioMetaDnsAutoAllocate?: pulumi.Input<boolean>;
        /**
         * Enable dns proxy.
         */
        istioMetaDnsCapture?: pulumi.Input<boolean>;
    }

    export interface MeshConfigIstioTracing {
        /**
         * APM config.
         */
        apm?: pulumi.Input<inputs.Tcm.MeshConfigIstioTracingApm>;
        /**
         * Whether enable tracing.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Tracing sampling, 0.0-1.0.
         */
        sampling?: pulumi.Input<number>;
        /**
         * Third party zipkin config.
         */
        zipkin?: pulumi.Input<inputs.Tcm.MeshConfigIstioTracingZipkin>;
    }

    export interface MeshConfigIstioTracingApm {
        /**
         * Whether enable APM.
         */
        enable: pulumi.Input<boolean>;
        /**
         * Instance id of the APM.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
    }

    export interface MeshConfigIstioTracingZipkin {
        /**
         * Zipkin address.
         */
        address: pulumi.Input<string>;
    }

    export interface MeshConfigPrometheus {
        /**
         * Custom prometheus.
         */
        customProm?: pulumi.Input<inputs.Tcm.MeshConfigPrometheusCustomProm>;
        /**
         * Instance id.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
        /**
         * Subnet id.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Vpc id.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MeshConfigPrometheusCustomProm {
        /**
         * Authentication type of the prometheus.
         */
        authType: pulumi.Input<string>;
        /**
         * Whether it is public address, default false.
         */
        isPublicAddr?: pulumi.Input<boolean>;
        /**
         * Password of the prometheus, used in basic authentication type.
         */
        password?: pulumi.Input<string>;
        /**
         * Url of the prometheus.
         */
        url: pulumi.Input<string>;
        /**
         * Username of the prometheus, used in basic authentication type.
         */
        username?: pulumi.Input<string>;
        /**
         * Vpc id.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface MeshConfigSidecarResources {
        /**
         * Sidecar limits.
         */
        limits?: pulumi.Input<pulumi.Input<inputs.Tcm.MeshConfigSidecarResourcesLimit>[]>;
        /**
         * Sidecar requests.
         */
        requests?: pulumi.Input<pulumi.Input<inputs.Tcm.MeshConfigSidecarResourcesRequest>[]>;
    }

    export interface MeshConfigSidecarResourcesLimit {
        /**
         * Resource type name, `cpu/memory`.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource quantity, example: cpu-`100m`, memory-`1Gi`.
         */
        quantity?: pulumi.Input<string>;
    }

    export interface MeshConfigSidecarResourcesRequest {
        /**
         * Resource type name, `cpu/memory`.
         */
        name?: pulumi.Input<string>;
        /**
         * Resource quantity, example: cpu-`100m`, memory-`1Gi`.
         */
        quantity?: pulumi.Input<string>;
    }

    export interface MeshConfigTracing {
        /**
         * APM config.
         */
        apm?: pulumi.Input<inputs.Tcm.MeshConfigTracingApm>;
        /**
         * Whether enable tracing.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Tracing sampling, 0.0-1.0.
         */
        sampling?: pulumi.Input<number>;
        /**
         * Third party zipkin config.
         */
        zipkin?: pulumi.Input<inputs.Tcm.MeshConfigTracingZipkin>;
    }

    export interface MeshConfigTracingApm {
        /**
         * Whether enable APM.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Instance id of the APM.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
    }

    export interface MeshConfigTracingZipkin {
        /**
         * Zipkin address.
         */
        address: pulumi.Input<string>;
    }

    export interface MeshTagList {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Passthrough to other related product.
         */
        passthrough?: pulumi.Input<boolean>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface PrometheusAttachmentPrometheus {
        /**
         * Third party prometheus.
         */
        customProm?: pulumi.Input<inputs.Tcm.PrometheusAttachmentPrometheusCustomProm>;
        /**
         * Existed TMP id, auto create TMP if empty.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region for TMP.
         */
        region?: pulumi.Input<string>;
        /**
         * Subnet id for TMP.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Vpc id for TMP.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface PrometheusAttachmentPrometheusCustomProm {
        /**
         * Authentication type of the prometheus.
         */
        authType: pulumi.Input<string>;
        /**
         * Whether it is public address, default false.
         */
        isPublicAddr?: pulumi.Input<boolean>;
        /**
         * Password of the prometheus, used in basic authentication type.
         */
        password?: pulumi.Input<string>;
        /**
         * Url of the prometheus.
         */
        url: pulumi.Input<string>;
        /**
         * Username of the prometheus, used in basic authentication type.
         */
        username?: pulumi.Input<string>;
        /**
         * Vpc id.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface TracingConfigApm {
        /**
         * Whether enable APM.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Instance id of the APM.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Region.
         */
        region?: pulumi.Input<string>;
    }

    export interface TracingConfigZipkin {
        /**
         * Zipkin address.
         */
        address: pulumi.Input<string>;
    }
}

export namespace Tcmq {
    export interface GetQueueFilter {
        /**
         * Filter parameter name.
         */
        name?: string;
        /**
         * Value.
         */
        values?: string[];
    }

    export interface GetQueueFilterArgs {
        /**
         * Filter parameter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetTopicFilter {
        /**
         * Filter parameter name.
         */
        name?: string;
        /**
         * Value.
         */
        values?: string[];
    }

    export interface GetTopicFilterArgs {
        /**
         * Filter parameter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Tcr {
    export interface ImmutableTagRuleRule {
        /**
         * disable rule.
         */
        disabled?: pulumi.Input<boolean>;
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<number>;
        /**
         * namespace name.
         */
        nsName?: pulumi.Input<string>;
        /**
         * repository decoration type:repoMatches or repoExcludes.
         */
        repositoryDecoration: pulumi.Input<string>;
        /**
         * repository matching rules.
         */
        repositoryPattern: pulumi.Input<string>;
        /**
         * tag decoration type: matches or excludes.
         */
        tagDecoration: pulumi.Input<string>;
        /**
         * tag matching rules.
         */
        tagPattern: pulumi.Input<string>;
    }

    export interface InstanceReplication {
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<string>;
        /**
         * Replication region ID, check the example at the top of page to find out id of region.
         */
        regionId?: pulumi.Input<number>;
        /**
         * Replication region name.
         */
        regionName?: pulumi.Input<string>;
        /**
         * Specify whether to sync TCR cloud tags to COS Bucket. NOTE: You have to specify when adding, modifying will be ignored for now.
         */
        synTag?: pulumi.Input<boolean>;
    }

    export interface InstanceSecurityPolicy {
        /**
         * The public network IP address of the access source.
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Remarks of policy.
         */
        description?: pulumi.Input<string>;
        /**
         * Index of policy.
         */
        index?: pulumi.Input<number>;
        /**
         * Version of policy.
         */
        version?: pulumi.Input<string>;
    }

    export interface ManageReplicationOperationPeerReplicationOption {
        /**
         * whether to enable cross-master account instance synchronization.
         */
        enablePeerReplication: pulumi.Input<boolean>;
        /**
         * access permanent token of the instance to be synchronized.
         */
        peerRegistryToken: pulumi.Input<string>;
        /**
         * uin of the instance to be synchronized.
         */
        peerRegistryUin: pulumi.Input<string>;
    }

    export interface ManageReplicationOperationRule {
        /**
         * target namespace.
         */
        destNamespace: pulumi.Input<string>;
        /**
         * sync filters.
         */
        filters: pulumi.Input<pulumi.Input<inputs.Tcr.ManageReplicationOperationRuleFilter>[]>;
        /**
         * synchronization rule names.
         */
        name: pulumi.Input<string>;
        /**
         * whether to cover.
         */
        override: pulumi.Input<boolean>;
    }

    export interface ManageReplicationOperationRuleFilter {
        /**
         * type (name, tag, and resource).
         */
        type: pulumi.Input<string>;
        /**
         * empty by default.
         */
        value?: pulumi.Input<string>;
    }

    export interface NamespaceCveWhitelistItem {
        /**
         * Vulnerability Whitelist ID.
         */
        cveId?: pulumi.Input<string>;
    }

    export interface ServiceAccountPermission {
        /**
         * Actions, currently support: `tcr:PushRepository`, `tcr:PullRepository`, `tcr:CreateRepository`, `tcr:CreateHelmChart`, `tcr:DescribeHelmCharts`. Note: This field may return null, indicating that no valid value can be obtained.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * resource path, currently only supports Namespace. Note: This field may return null, indicating that no valid value can be obtained.
         */
        resource: pulumi.Input<string>;
    }

    export interface TagRetentionRuleRetentionRule {
        /**
         * The supported policies are latestPushedK (retain the latest `k` pushed versions) and nDaysSinceLastPush (retain pushed versions within the last `n` days).
         */
        key: pulumi.Input<string>;
        /**
         * corresponding values for rule settings.
         */
        value: pulumi.Input<number>;
    }

    export interface WebhookTriggerTrigger {
        /**
         * trigger rule.
         */
        condition: pulumi.Input<string>;
        /**
         * trigger description.
         */
        description?: pulumi.Input<string>;
        /**
         * enable trigger.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * trigger action.
         */
        eventTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<number>;
        /**
         * trigger name.
         */
        name: pulumi.Input<string>;
        /**
         * the namespace Id to which the trigger belongs.
         */
        namespaceId?: pulumi.Input<number>;
        /**
         * trigger target.
         */
        targets: pulumi.Input<pulumi.Input<inputs.Tcr.WebhookTriggerTriggerTarget>[]>;
    }

    export interface WebhookTriggerTriggerTarget {
        /**
         * target address.
         */
        address: pulumi.Input<string>;
        /**
         * custom Headers.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.Tcr.WebhookTriggerTriggerTargetHeader>[]>;
    }

    export interface WebhookTriggerTriggerTargetHeader {
        /**
         * Header Key.
         */
        key: pulumi.Input<string>;
        /**
         * Header Values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Tcss {
    export interface ImageRegistryConnDetectConfig {
        /**
         * Host Quuid.
         */
        quuid?: pulumi.Input<string>;
        /**
         * Host uuid.
         */
        uuid?: pulumi.Input<string>;
    }
}

export namespace Tdcpg {
}

export namespace Tdmq {
    export interface GetProInstancesFilter {
        /**
         * The name of the filter parameter.
         */
        name?: string;
        /**
         * value.
         */
        values?: string[];
    }

    export interface GetProInstancesFilterArgs {
        /**
         * The name of the filter parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetPublishersFilter {
        /**
         * The name of the filter parameter.
         */
        name?: string;
        /**
         * value.
         */
        values?: string[];
    }

    export interface GetPublishersFilterArgs {
        /**
         * The name of the filter parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetPublishersSort {
        /**
         * sorter.
         */
        name: string;
        /**
         * Ascending ASC, descending DESC.
         */
        order: string;
    }

    export interface GetPublishersSortArgs {
        /**
         * sorter.
         */
        name: pulumi.Input<string>;
        /**
         * Ascending ASC, descending DESC.
         */
        order: pulumi.Input<string>;
    }

    export interface GetRabbitmqNodeListFilter {
        /**
         * The name of the filter parameter.
         */
        name?: string;
        /**
         * value.
         */
        values?: string[];
    }

    export interface GetRabbitmqNodeListFilterArgs {
        /**
         * The name of the filter parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRabbitmqVipInstanceFilter {
        /**
         * The name of the filter parameter.
         */
        name?: string;
        /**
         * value.
         */
        values?: string[];
    }

    export interface GetRabbitmqVipInstanceFilterArgs {
        /**
         * The name of the filter parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NamespaceRetentionPolicy {
        /**
         * the size of message to retain.
         */
        sizeInMb?: pulumi.Input<number>;
        /**
         * the time of message to retain.
         */
        timeInMinutes?: pulumi.Input<number>;
    }

    export interface ProfessionalClusterVpc {
        /**
         * Id of Subnet.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Id of VPC.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface RocketmqClusterVpc {
        /**
         * Subnet ID.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Vpc ID.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface RocketmqVipInstanceIpRule {
        /**
         * Whether to allow or deny.
         */
        allow: pulumi.Input<boolean>;
        /**
         * IP address block information.
         */
        ipRule: pulumi.Input<string>;
        /**
         * Remark.
         */
        remark: pulumi.Input<string>;
    }

    export interface RocketmqVipInstanceVpcInfo {
        /**
         * Subnet ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * VPC ID.
         */
        vpcId: pulumi.Input<string>;
    }
}

export namespace Tem {
    export interface AppConfigConfigData {
        /**
         * key.
         */
        key: pulumi.Input<string>;
        /**
         * value.
         */
        value: pulumi.Input<string>;
    }

    export interface ApplicationServiceService {
        /**
         * ip address of application service.
         */
        ip?: pulumi.Input<string>;
        /**
         * port mapping item list.
         */
        portMappingItemLists?: pulumi.Input<pulumi.Input<inputs.Tem.ApplicationServiceServicePortMappingItemList>[]>;
        /**
         * application service name.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * ID of subnet instance, required when type is `VPC`.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * application service type: EXTERNAL | VPC | CLUSTER.
         */
        type?: pulumi.Input<string>;
        /**
         * ID of vpc instance, required when type is `VPC`.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface ApplicationServiceServicePortMappingItemList {
        /**
         * container port.
         */
        port?: pulumi.Input<number>;
        /**
         * UDP or TCP.
         */
        protocol?: pulumi.Input<string>;
        /**
         * application listen port.
         */
        targetPort?: pulumi.Input<number>;
    }

    export interface GatewayIngress {
        /**
         * ip version, support IPV4.
         */
        addressIpVersion: pulumi.Input<string>;
        /**
         * related CLB ID, support binding existing clb, does not support modification.
         */
        clbId?: pulumi.Input<string>;
        /**
         * creation time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * environment ID.
         */
        environmentId: pulumi.Input<string>;
        /**
         * gateway name.
         */
        ingressName: pulumi.Input<string>;
        /**
         * mixing HTTP and HTTPS.
         */
        mixed: pulumi.Input<boolean>;
        /**
         * redirect mode, support AUTO and NONE.
         */
        rewriteType?: pulumi.Input<string>;
        /**
         * proxy rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.Tem.GatewayIngressRule>[]>;
        /**
         * ingress TLS configurations.
         */
        tls?: pulumi.Input<pulumi.Input<inputs.Tem.GatewayIngressTl>[]>;
        /**
         * gateway vip.
         */
        vip?: pulumi.Input<string>;
    }

    export interface GatewayIngressRule {
        /**
         * host name.
         */
        host?: pulumi.Input<string>;
        /**
         * rule payload.
         */
        http: pulumi.Input<inputs.Tem.GatewayIngressRuleHttp>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface GatewayIngressRuleHttp {
        /**
         * path payload.
         */
        paths: pulumi.Input<pulumi.Input<inputs.Tem.GatewayIngressRuleHttpPath>[]>;
    }

    export interface GatewayIngressRuleHttpPath {
        /**
         * backend payload.
         */
        backend: pulumi.Input<inputs.Tem.GatewayIngressRuleHttpPathBackend>;
        /**
         * path.
         */
        path: pulumi.Input<string>;
    }

    export interface GatewayIngressRuleHttpPathBackend {
        /**
         * backend name.
         */
        serviceName: pulumi.Input<string>;
        /**
         * backend port.
         */
        servicePort: pulumi.Input<number>;
    }

    export interface GatewayIngressTl {
        /**
         * certificate ID.
         */
        certificateId: pulumi.Input<string>;
        /**
         * host names.
         */
        hosts: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * secret name, if you use a certificate, you don't need to fill in this field.
         */
        secretName?: pulumi.Input<string>;
    }

    export interface ScaleRuleAutoscaler {
        /**
         * name.
         */
        autoscalerName: pulumi.Input<string>;
        /**
         * scaler based on cron configuration.
         */
        cronHorizontalAutoscalers?: pulumi.Input<pulumi.Input<inputs.Tem.ScaleRuleAutoscalerCronHorizontalAutoscaler>[]>;
        /**
         * description.
         */
        description?: pulumi.Input<string>;
        /**
         * enable AutoScaler.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * scaler based on metrics.
         */
        horizontalAutoscalers?: pulumi.Input<pulumi.Input<inputs.Tem.ScaleRuleAutoscalerHorizontalAutoscaler>[]>;
        /**
         * maximal replica number.
         */
        maxReplicas: pulumi.Input<number>;
        /**
         * minimal replica number.
         */
        minReplicas: pulumi.Input<number>;
    }

    export interface ScaleRuleAutoscalerCronHorizontalAutoscaler {
        /**
         * enable scaler.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * name.
         */
        name: pulumi.Input<string>;
        /**
         * period.
         */
        period: pulumi.Input<string>;
        /**
         * priority.
         */
        priority: pulumi.Input<number>;
        /**
         * schedule payload.
         */
        schedules: pulumi.Input<pulumi.Input<inputs.Tem.ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule>[]>;
    }

    export interface ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule {
        /**
         * start time.
         */
        startAt: pulumi.Input<string>;
        /**
         * target replica number.
         */
        targetReplicas: pulumi.Input<number>;
    }

    export interface ScaleRuleAutoscalerHorizontalAutoscaler {
        /**
         * enable scaler.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * maximal replica number.
         */
        maxReplicas: pulumi.Input<number>;
        /**
         * metric name.
         */
        metrics: pulumi.Input<string>;
        /**
         * minimal replica number.
         */
        minReplicas: pulumi.Input<number>;
        /**
         * metric threshold.
         */
        threshold: pulumi.Input<number>;
    }

    export interface WorkloadDeployStrategyConf {
        /**
         * interval between batches.
         */
        batchInterval?: pulumi.Input<number>;
        /**
         * beta batch number.
         */
        betaBatchNum?: pulumi.Input<number>;
        /**
         * strategy type, 0 means auto, 1 means manual, 2 means manual with beta batch.
         */
        deployStrategyType: pulumi.Input<number>;
        /**
         * force update.
         */
        force?: pulumi.Input<boolean>;
        /**
         * minimal available instances duration deployment.
         */
        minAvailable?: pulumi.Input<number>;
        /**
         * total batch number.
         */
        totalBatchCount: pulumi.Input<number>;
    }

    export interface WorkloadEnvConf {
        /**
         * referenced config name when type=referenced.
         */
        config?: pulumi.Input<string>;
        /**
         * env key.
         */
        key: pulumi.Input<string>;
        /**
         * referenced secret name when type=referenced.
         */
        secret?: pulumi.Input<string>;
        /**
         * env type, support default, referenced.
         */
        type?: pulumi.Input<string>;
        /**
         * env value.
         */
        value: pulumi.Input<string>;
    }

    export interface WorkloadLiveness {
        /**
         * script.
         */
        exec?: pulumi.Input<string>;
        /**
         * initial delay seconds for liveness check.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * path.
         */
        path?: pulumi.Input<string>;
        /**
         * period seconds for liveness check.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * liveness check port.
         */
        port?: pulumi.Input<number>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * timeout seconds for liveness check.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * check type, support HttpGet, TcpSocket and Exec.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkloadReadiness {
        /**
         * script.
         */
        exec?: pulumi.Input<string>;
        /**
         * initial delay seconds for readiness check.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * path.
         */
        path?: pulumi.Input<string>;
        /**
         * period seconds for readiness check.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * readiness check port.
         */
        port?: pulumi.Input<number>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * timeout seconds for readiness check.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * check type, support HttpGet, TcpSocket and Exec.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkloadStartupProbe {
        /**
         * script.
         */
        exec?: pulumi.Input<string>;
        /**
         * initial delay seconds for startup check.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * path.
         */
        path?: pulumi.Input<string>;
        /**
         * period seconds for startup check.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * startup check port.
         */
        port?: pulumi.Input<number>;
        /**
         * protocol.
         */
        protocol?: pulumi.Input<string>;
        /**
         * timeout seconds for startup check.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * check type, support HttpGet, TcpSocket and Exec.
         */
        type: pulumi.Input<string>;
    }

    export interface WorkloadStorageConf {
        /**
         * volume ip.
         */
        storageVolIp: pulumi.Input<string>;
        /**
         * volume name.
         */
        storageVolName: pulumi.Input<string>;
        /**
         * volume path.
         */
        storageVolPath: pulumi.Input<string>;
    }

    export interface WorkloadStorageMountConf {
        /**
         * mount path.
         */
        mountPath: pulumi.Input<string>;
        /**
         * volume name.
         */
        volumeName: pulumi.Input<string>;
    }
}

export namespace Teo {
    export interface AccelerationDomainOriginInfo {
        /**
         * ID of the secondary origin group (valid when `OriginType=ORIGIN_GROUP`). If it is not specified, it indicates that secondary origins are not used.
         */
        backupOrigin?: pulumi.Input<string>;
        /**
         * The origin address. Enter the origin group ID if `OriginType=ORIGIN_GROUP`.
         */
        origin: pulumi.Input<string>;
        /**
         * The origin type. Values: `IP_DOMAIN`: IPv4/IPv6 address or domain name; `COS`: COS bucket address; `ORIGIN_GROUP`: Origin group; `AWS_S3`: AWS S3 bucket address; `SPACE`: EdgeOne Shield Space.
         */
        originType: pulumi.Input<string>;
        /**
         * Whether to authenticate access to the private object storage origin (valid when `OriginType=COS/AWS_S3`). Values: `on`: Enable private authentication; `off`: Disable private authentication. If this field is not specified, the default value `off` is used.
         */
        privateAccess?: pulumi.Input<string>;
        /**
         * The private authentication parameters. This field is valid when `PrivateAccess=on`.
         */
        privateParameters?: pulumi.Input<pulumi.Input<inputs.Teo.AccelerationDomainOriginInfoPrivateParameter>[]>;
    }

    export interface AccelerationDomainOriginInfoPrivateParameter {
        /**
         * The parameter name. Valid values: `AccessKeyId`: Access Key ID; `SecretAccessKey`: Secret Access Key.
         */
        name: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface ApplicationProxyIpv6 {
        /**
         * - `on`: Enable.- `off`: Disable.
         */
        switch: pulumi.Input<string>;
    }

    export interface CertificateConfigServerCertInfo {
        /**
         * Alias of the certificate.Note: This field may return null, indicating that no valid values can be obtained.
         */
        alias?: pulumi.Input<string>;
        /**
         * ID of the server certificate.Note: This field may return null, indicating that no valid values can be obtained.
         */
        certId: pulumi.Input<string>;
        /**
         * Domain name of the certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
         */
        commonName?: pulumi.Input<string>;
        /**
         * Time when the certificate is deployed. Note: This field may return null, indicating that no valid values can be obtained.
         */
        deployTime?: pulumi.Input<string>;
        /**
         * Time when the certificate expires. Note: This field may return null, indicating that no valid values can be obtained.
         */
        expireTime?: pulumi.Input<string>;
        /**
         * Signature algorithm. Note: This field may return null, indicating that no valid values can be obtained.
         */
        signAlgo?: pulumi.Input<string>;
        /**
         * Type of the certificate. Values: `default`: Default certificate; `upload`: Specified certificate; `managed`: Tencent Cloud-managed certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface FunctionRuleFunctionRuleCondition {
        /**
         * For edge function trigger rule conditions, if all items in the list are satisfied, then the condition is considered fulfilled.
         */
        ruleConditions: pulumi.Input<pulumi.Input<inputs.Teo.FunctionRuleFunctionRuleConditionRuleCondition>[]>;
    }

    export interface FunctionRuleFunctionRuleConditionRuleCondition {
        /**
         * Whether the parameter value is case insensitive. Default value: false.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
         */
        name?: pulumi.Input<string>;
        /**
         * Operator. Valid values:
         */
        operator: pulumi.Input<string>;
        /**
         * The match type. Values:
         */
        target: pulumi.Input<string>;
        /**
         * The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
         * - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
         * - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
         * - When `Target=all`, it indicates any site request.
         * - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
         * - When `Target=url`, enter the partial URL path under the current site, such as "/example".
         * - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
         * - When `Target=client_country`, enter the ISO-3166 country/region code.
         * - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
         * - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FunctionRuntimeEnvironmentEnvironmentVariable {
        /**
         * The name of the variable, which is limited to alphanumeric characters and the special characters `@`, `.`, `-`, and `_`. It can have a maximum of 64 bytes and should not be duplicated.
         */
        key: pulumi.Input<string>;
        /**
         * The type of the variable can have the following values:  - `string`: Represents a string type.  - `json`: Represents a JSON object type.
         */
        type: pulumi.Input<string>;
        /**
         * The value of the variable, which is limited to a maximum of 5000 bytes. The default value is empty.
         */
        value: pulumi.Input<string>;
    }

    export interface L4ProxyDdosProtectionConfig {
        /**
         * Exclusive DDoS protection specifications in the Chinese mainland. For details, see [Dedicated DDoS Mitigation Fee (Pay-as-You-Go)] (https://intl.cloud.tencent.com/document/product/1552/94162?from_cn_redirect=1). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `BASE30_MAX300`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 30 Gbps and an elastic protection bandwidth of up to 300 Gbps; `BASE60_MAX600`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 60 Gbps and an elastic protection bandwidth of up to 600 Gbps. If no parameters are filled, the default value PLATFORM is used.
         */
        levelMainland?: pulumi.Input<string>;
        /**
         * Exclusive DDoS protection specifications in the worldwide region (excluding the Chinese mainland). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `ANYCAST300`: Exclusive DDoS protection enabled, offering a total maximum protection bandwidth of 300 Gbps; `ANYCAST_ALLIN`: Exclusive DDoS protection enabled, utilizing all available protection resources for protection. When no parameters are filled, the default value PLATFORM is used.
         */
        levelOverseas?: pulumi.Input<string>;
        /**
         * Configuration of elastic protection bandwidth for exclusive DDoS protection in the Chinese mainland.Valid only when exclusive DDoS protection in the Chinese mainland is enabled (refer to the LevelMainland parameter configuration), and the value has the following limitations: When exclusive DDoS protection is enabled in the Chinese mainland and the 30 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE30_MAX300): the value range is 30 to 300 in Gbps; When exclusive DDoS protection is enabled in the Chinese mainland and the 60 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE60_MAX600): the value range is 60 to 600 in Gbps; When the default protection of the platform is used (the LevelMainland parameter value is PLATFORM): configuration is not supported, and the value of this parameter is invalid.
         */
        maxBandwidthMainland?: pulumi.Input<number>;
    }

    export interface OriginGroupRecord {
        /**
         * Whether to use private authentication, it takes effect when the origin site type RecordType=COS/AWS_S3, the values are:
         */
        private?: pulumi.Input<boolean>;
        /**
         * Parameters for private authentication. Only valid when `Private` is `true`.
         */
        privateParameters?: pulumi.Input<pulumi.Input<inputs.Teo.OriginGroupRecordPrivateParameter>[]>;
        /**
         * Origin site record value, does not include port information, can be: IPv4, IPv6, domain name format.
         */
        record: pulumi.Input<string>;
        /**
         * Origin record ID.
         */
        recordId?: pulumi.Input<string>;
        /**
         * Origin site type, the values are:
         */
        type?: pulumi.Input<string>;
        /**
         * The weight of the origin site, the value is 0-100. If it is not filled in, it means that the weight will not be set and the system will schedule it freely. If it is filled in with 0, it means that the weight is 0 and the traffic will not be scheduled to this origin site.
         */
        weight?: pulumi.Input<number>;
    }

    export interface OriginGroupRecordPrivateParameter {
        /**
         * Private authentication parameter name, the values are:
         */
        name: pulumi.Input<string>;
        /**
         * Private authentication parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface OriginGroupReference {
        /**
         * The instance ID of the reference type.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Instance name of the application type.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * Reference service type, the values are:
         */
        instanceType?: pulumi.Input<string>;
    }

    export interface RealtimeLogDeliveryCls {
        /**
         * Tencent Cloud CLS log set ID.
         */
        logSetId: pulumi.Input<string>;
        /**
         * The region where the Tencent Cloud CLS log set is located.
         */
        logSetRegion: pulumi.Input<string>;
        /**
         * Tencent Cloud CLS log topic ID.
         */
        topicId: pulumi.Input<string>;
    }

    export interface RealtimeLogDeliveryCustomEndpoint {
        /**
         * Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
         */
        accessId?: pulumi.Input<string>;
        /**
         * Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
         */
        compressType?: pulumi.Input<string>;
        /**
         * The custom request header carried when delivering logs. If the header name you fill in is the default header carried by EdgeOne log push, such as Content-Type, then the header value you fill in will overwrite the default value. The header value references a single variable ${batchSize} to obtain the number of logs included in each POST request.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.Teo.RealtimeLogDeliveryCustomEndpointHeader>[]>;
        /**
         * When sending logs via POST request, the application layer protocol type used can be: `http`: HTTP protocol; `https`: HTTPS protocol. If not filled in, the protocol type will be parsed according to the filled in URL address.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The custom HTTP interface address for real-time log delivery. Currently, only HTTP/HTTPS protocols are supported.
         */
        url: pulumi.Input<string>;
    }

    export interface RealtimeLogDeliveryCustomEndpointHeader {
        /**
         * HTTP header name.
         */
        name: pulumi.Input<string>;
        /**
         * HTTP header value.
         */
        value: pulumi.Input<string>;
    }

    export interface RealtimeLogDeliveryCustomField {
        /**
         * Whether to deliver this field. If left blank, this field will not be delivered.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Extract data from the specified location in the HTTP request and response. The values are: `ReqHeader`: extract the specified field value from the HTTP request header; `RspHeader`: extract the specified field value from the HTTP response header; `Cookie`: extract the specified field value from the Cookie.
         */
        name: pulumi.Input<string>;
        /**
         * The name of the parameter whose value needs to be extracted, for example: Accept-Language.
         */
        value: pulumi.Input<string>;
    }

    export interface RealtimeLogDeliveryDeliveryCondition {
        /**
         * Log filtering conditions, the detailed filtering conditions are as follows: - `EdgeResponseStatusCode`: filter according to the status code returned by the EdgeOne node to the client. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to 0; - `OriginResponseStatusCode`: filter according to the origin response status code. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to -1; - `SecurityAction`: filter according to the final disposal action after the request hits the security rule. Supported operators: `equal`; Optional options are as follows: `-`: unknown/miss; `Monitor`: observe; `JSChallenge`: JavaScript challenge; `Deny`: intercept; `Allow`: allow; `BlockIP`: IP ban; `Redirect`: redirect; `ReturnCustomPage`: return to a custom page; `ManagedChallenge`: managed challenge; `Silence`: silent; `LongDelay`: respond after a long wait; `ShortDelay`: respond after a short wait; -`SecurityModule`: filter according to the name of the security module that finally handles the request. Supported operators: `equal`; Optional options: `-`: unknown/missed; `CustomRule`: Web Protection - Custom Rules; `RateLimitingCustomRule`: Web Protection - Rate Limiting Rules; `ManagedRule`: Web Protection - Managed Rules; `L7DDoS`: Web Protection - CC Attack Protection; `BotManagement`: Bot Management - Bot Basic Management; `BotClientReputation`: Bot Management - Client Profile Analysis; `BotBehaviorAnalysis`: Bot Management - Bot Intelligent Analysis; `BotCustomRule`: Bot Management - Custom Bot Rules; `BotActiveDetection`: Bot Management - Active Feature Recognition.
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.Teo.RealtimeLogDeliveryDeliveryConditionCondition>[]>;
    }

    export interface RealtimeLogDeliveryDeliveryConditionCondition {
        /**
         * The key of the filter condition.
         */
        key: pulumi.Input<string>;
        /**
         * Query condition operator, operation types are: `equals`: equal; `notEquals`: not equal; `include`: include; `notInclude`: not include; `startWith`: start with value; `notStartWith`: not start with value; `endWith`: end with value; `notEndWith`: not end with value.
         */
        operator: pulumi.Input<string>;
        /**
         * The value of the filter condition.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RealtimeLogDeliveryLogFormat {
        /**
         * A string to be added before each log delivery batch. Each log delivery batch may contain multiple log records.
         */
        batchPrefix?: pulumi.Input<string>;
        /**
         * A string to append after each log delivery batch.
         */
        batchSuffix?: pulumi.Input<string>;
        /**
         * In a single log record, a string is inserted between fields as a separator. The possible values are: `	`: tab character; `,`: comma; `;`: semicolon.
         */
        fieldDelimiter?: pulumi.Input<string>;
        /**
         * The default output format type for log delivery. The possible values are: `json`: Use the default log output format JSON Lines. The fields in a single log are presented as key-value pairs; `csv`: Use the default log output format csv. Only field values are presented in a single log, without field names.
         */
        formatType: pulumi.Input<string>;
        /**
         * The string inserted between log records as a separator. The possible values are: `
         * `: newline character; `	`: tab character; `,`: comma.
         */
        recordDelimiter?: pulumi.Input<string>;
        /**
         * A string to prepend to each log record.
         */
        recordPrefix?: pulumi.Input<string>;
        /**
         * A string to append to each log record.
         *
         * The `s3` object supports the following:
         */
        recordSuffix?: pulumi.Input<string>;
    }

    export interface RealtimeLogDeliveryS3 {
        /**
         * Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
         */
        accessId: pulumi.Input<string>;
        /**
         * Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
         */
        accessKey: pulumi.Input<string>;
        /**
         * Bucket name and log storage directory, for example: `your_bucket_name/EO-logs/`. If this directory does not exist in the bucket, it will be created automatically.
         */
        bucket: pulumi.Input<string>;
        /**
         * Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
         */
        compressType?: pulumi.Input<string>;
        /**
         * URLs that do not include bucket names or paths, for example: `https://storage.googleapis.com`, `https://s3.ap-northeast-2.amazonaws.com`, `https://cos.ap-nanjing.myqcloud.com`.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The region where the bucket is located, for example: ap-northeast-2.
         */
        region: pulumi.Input<string>;
    }

    export interface RuleEngineRule {
        /**
         * Feature to be executed.
         */
        actions?: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleAction>[]>;
        /**
         * OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
         */
        ors: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleOr>[]>;
        /**
         * The nested rule.
         */
        subRules?: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRule>[]>;
    }

    export interface RuleEngineRuleAction {
        /**
         * Feature operation with a status code. Features of this type include:
         */
        codeAction?: pulumi.Input<inputs.Teo.RuleEngineRuleActionCodeAction>;
        /**
         * Common operation. Values:
         */
        normalAction?: pulumi.Input<inputs.Teo.RuleEngineRuleActionNormalAction>;
        /**
         * Feature operation with a request/response header. Features of this type include:
         */
        rewriteAction?: pulumi.Input<inputs.Teo.RuleEngineRuleActionRewriteAction>;
    }

    export interface RuleEngineRuleActionCodeAction {
        /**
         * Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
         */
        action: pulumi.Input<string>;
        /**
         * Operation parameter.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleActionCodeActionParameter>[]>;
    }

    export interface RuleEngineRuleActionCodeActionParameter {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * The status code.
         */
        statusCode: pulumi.Input<number>;
        /**
         * Parameter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleActionNormalAction {
        /**
         * Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleActionNormalActionParameter>[]>;
    }

    export interface RuleEngineRuleActionNormalActionParameter {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleActionRewriteAction {
        /**
         * Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleActionRewriteActionParameter>[]>;
    }

    export interface RuleEngineRuleActionRewriteActionParameter {
        /**
         * Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
         * - add: Add the HTTP header.
         * - set: Rewrite the HTTP header.
         * - del: Delete the HTTP header.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleOr {
        /**
         * Rule engine condition. This condition will be considered met if all items in the array are met.
         */
        ands: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleOrAnd>[]>;
    }

    export interface RuleEngineRuleOrAnd {
        /**
         * Whether the parameter value is case insensitive. Default value: false.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
         */
        name?: pulumi.Input<string>;
        /**
         * Operator. Valid values:
         */
        operator: pulumi.Input<string>;
        /**
         * The match type. Values:
         */
        target: pulumi.Input<string>;
        /**
         * The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
         * - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
         * - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
         * - When `Target=all`, it indicates any site request.
         * - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
         * - When `Target=url`, enter the partial URL path under the current site, such as "/example".
         * - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
         * - When `Target=client_country`, enter the ISO-3166 country/region code.
         * - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
         * - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRule {
        /**
         * Nested rule settings.
         */
        rules: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRule>[]>;
        /**
         * Tag of the rule.
         */
        tags?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRule {
        /**
         * Feature to be executed.
         */
        actions?: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleAction>[]>;
        /**
         * OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
         */
        ors: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleOr>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleAction {
        /**
         * Feature operation with a status code. Features of this type include:
         */
        codeAction?: pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionCodeAction>;
        /**
         * Common operation. Values:
         */
        normalAction?: pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionNormalAction>;
        /**
         * Feature operation with a request/response header. Features of this type include:
         */
        rewriteAction?: pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionRewriteAction>;
    }

    export interface RuleEngineRuleSubRuleRuleActionCodeAction {
        /**
         * Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
         */
        action: pulumi.Input<string>;
        /**
         * Operation parameter.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionCodeActionParameter>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionCodeActionParameter {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * The status code.
         */
        statusCode: pulumi.Input<number>;
        /**
         * Parameter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionNormalAction {
        /**
         * Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionNormalActionParameter>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionNormalActionParameter {
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionRewriteAction {
        /**
         * Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter.
         */
        parameters: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleActionRewriteActionParameter>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
        /**
         * Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
         * - add: Add the HTTP header.
         * - set: Rewrite the HTTP header.
         * - del: Delete the HTTP header.
         */
        action: pulumi.Input<string>;
        /**
         * Parameter name.
         */
        name: pulumi.Input<string>;
        /**
         * Parameter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleOr {
        /**
         * Rule engine condition. This condition will be considered met if all items in the array are met.
         */
        ands: pulumi.Input<pulumi.Input<inputs.Teo.RuleEngineRuleSubRuleRuleOrAnd>[]>;
    }

    export interface RuleEngineRuleSubRuleRuleOrAnd {
        /**
         * Whether the parameter value is case insensitive. Default value: false.
         */
        ignoreCase?: pulumi.Input<boolean>;
        /**
         * The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
         */
        name?: pulumi.Input<string>;
        /**
         * Operator. Valid values:
         */
        operator: pulumi.Input<string>;
        /**
         * The match type. Values:
         */
        target: pulumi.Input<string>;
        /**
         * The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
         * - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
         * - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
         * - When `Target=all`, it indicates any site request.
         * - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
         * - When `Target=url`, enter the partial URL path under the current site, such as "/example".
         * - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
         * - When `Target=client_country`, enter the ISO-3166 country/region code.
         * - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
         * - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SecurityIpGroupIpGroup {
        /**
         * IP group content. Only supports IP and IP mask.
         */
        contents: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Group ID.
         */
        groupId?: pulumi.Input<number>;
        /**
         * Group name.
         */
        name: pulumi.Input<string>;
    }

    export interface ZoneOwnershipVerification {
        /**
         * CNAME access, using DNS to resolve the information required for authentication. For details, please refer to [Site/Domain Name Ownership Verification ](https://cloud.tencent.com/document/product/1552/70789#7af6ecf8-afca-4e35-8811-b5797ed1bde5). Note: This field may return null, indicating that no valid value can be obtained.
         */
        dnsVerifications?: pulumi.Input<pulumi.Input<inputs.Teo.ZoneOwnershipVerificationDnsVerification>[]>;
    }

    export interface ZoneOwnershipVerificationDnsVerification {
        /**
         * Record type.
         */
        recordType?: pulumi.Input<string>;
        /**
         * Record the value.
         */
        recordValue?: pulumi.Input<string>;
        /**
         * Host record.
         */
        subdomain?: pulumi.Input<string>;
    }

    export interface ZoneSettingCache {
        /**
         * Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cache?: pulumi.Input<inputs.Teo.ZoneSettingCacheCache>;
        /**
         * Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        followOrigin?: pulumi.Input<inputs.Teo.ZoneSettingCacheFollowOrigin>;
        /**
         * No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        noCache?: pulumi.Input<inputs.Teo.ZoneSettingCacheNoCache>;
    }

    export interface ZoneSettingCacheCache {
        /**
         * Cache expiration time settings.
         * Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
         */
        cacheTime?: pulumi.Input<number>;
        /**
         * Cache configuration switch.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ZoneSettingCacheFollowOrigin {
        /**
         * Specifies whether to follow the origin server configuration.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ZoneSettingCacheKey {
        /**
         * Specifies whether to enable full-path cache.
         */
        fullUrlCache?: pulumi.Input<string>;
        /**
         * Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
         */
        ignoreCase?: pulumi.Input<string>;
        /**
         * Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
         */
        queryString?: pulumi.Input<inputs.Teo.ZoneSettingCacheKeyQueryString>;
    }

    export interface ZoneSettingCacheKeyQueryString {
        /**
         * `includeCustom`: Include the specified query strings.
         */
        action?: pulumi.Input<string>;
        /**
         * Whether to use QueryString as part of CacheKey.
         */
        switch: pulumi.Input<string>;
        /**
         * Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneSettingCacheNoCache {
        /**
         * Whether to cache the configuration.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ZoneSettingCachePrefresh {
        /**
         * Percentage of cache time before try to prefresh. Valid value range: 1-99.
         */
        percent?: pulumi.Input<number>;
        /**
         * Specifies whether to enable cache prefresh.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingClientIpHeader {
        /**
         * Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
         */
        headerName?: pulumi.Input<string>;
        /**
         * Specifies whether to enable client IP header.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingCompression {
        /**
         * Compression algorithms to select. Valid values: `brotli`, `gzip`.
         */
        algorithms?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether to enable Smart compression.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingForceRedirect {
        /**
         * Redirection status code.
         * - 301
         * - 302 Note: This field may return null, indicating that no valid value can be obtained.
         */
        redirectStatusCode?: pulumi.Input<number>;
        /**
         * Whether to enable force redirect.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingHttps {
        /**
         * HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
         */
        hsts?: pulumi.Input<inputs.Teo.ZoneSettingHttpsHsts>;
        /**
         * HTTP2 configuration switch.
         */
        http2?: pulumi.Input<string>;
        /**
         * OCSP configuration switch.
         */
        ocspStapling?: pulumi.Input<string>;
        /**
         * TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.
         * Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
         *
         * The `ipv6` object supports the following:
         */
        tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneSettingHttpsHsts {
        /**
         * Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
         */
        includeSubDomains?: pulumi.Input<string>;
        /**
         * MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
         */
        maxAge?: pulumi.Input<number>;
        /**
         * Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
         */
        preload?: pulumi.Input<string>;
        /**
         * `on`: Enable.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingIpv6 {
        /**
         * Cache configuration switch.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingMaxAge {
        /**
         * Specifies whether to follow the max cache age of the origin server.
         */
        followOrigin?: pulumi.Input<string>;
        /**
         * Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
         */
        maxAgeTime?: pulumi.Input<number>;
    }

    export interface ZoneSettingOfflineCache {
        /**
         * Whether to enable offline cache.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingOrigin {
        /**
         * Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
         */
        backupOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Origin-pull protocol.
         */
        originPullProtocol?: pulumi.Input<string>;
        /**
         * Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
         */
        origins?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ZoneSettingPostMaxSize {
        /**
         * Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
         */
        maxSize?: pulumi.Input<number>;
        /**
         * Specifies whether to enable custom setting of the maximum file size.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingQuic {
        /**
         * Whether to enable QUIC.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingSmartRouting {
        /**
         * Whether to enable HTTP2 origin-pull.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingUpstreamHttp2 {
        /**
         * Cache configuration switch.
         */
        switch: pulumi.Input<string>;
    }

    export interface ZoneSettingWebSocket {
        /**
         * Whether to enable custom WebSocket timeout setting. When it's off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
         */
        switch: pulumi.Input<string>;
        /**
         * Sets timeout period in seconds. Maximum value: 120.
         */
        timeout?: pulumi.Input<number>;
    }
}

export namespace Thpc {
    export interface WorkspacesDataDisk {
        /**
         * Sudden performance. PS: During testing.
         */
        burstPerformance?: pulumi.Input<boolean>;
        /**
         * Decides whether the disk is deleted with instance(only applied to `CLOUD_BASIC`, `CLOUD_SSD` and `CLOUD_PREMIUM` disk with `POSTPAID_BY_HOUR` instance), Default is true.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Data disk ID used to initialize the data disk. When data disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
         */
        diskId?: pulumi.Input<string>;
        /**
         * Size of the data disk, and unit is GB.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * Data disk type. For more information about limits on different data disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, LOCAL_NVME: local NVME disk, specified in the InstanceType, LOCAL_PRO: local HDD disk, specified in the InstanceType, CLOUD_BASIC: HDD cloud disk, CLOUD_PREMIUM: Premium Cloud Storage, CLOUD_SSD: SSD, CLOUD_HSSD: Enhanced SSD, CLOUD_TSSD: Tremendous SSD, CLOUD_BSSD: Balanced SSD.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Decides whether the disk is encrypted. Default is `false`.
         */
        encrypt?: pulumi.Input<boolean>;
        /**
         * Kms key ID.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Snapshot ID of the data disk. The selected data disk snapshot size must be smaller than the data disk size.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD`.
         */
        throughputPerformance?: pulumi.Input<number>;
    }

    export interface WorkspacesEnhancedService {
        /**
         * Enable the TencentCloud Automation Tools (TAT) service. If this parameter is not specified, the cloud automation tools service will be enabled by default.
         */
        automationService?: pulumi.Input<inputs.Thpc.WorkspacesEnhancedServiceAutomationService>;
        /**
         * Activate Tencent Cloud Observable Platform service. If this parameter is not specified, the Tencent Cloud Observable Platform service will be enabled by default.
         */
        monitorService?: pulumi.Input<inputs.Thpc.WorkspacesEnhancedServiceMonitorService>;
        /**
         * Activate cloud security services. If this parameter is not specified, cloud security services will be enabled by default.
         */
        securityService?: pulumi.Input<inputs.Thpc.WorkspacesEnhancedServiceSecurityService>;
    }

    export interface WorkspacesEnhancedServiceAutomationService {
        /**
         * Whether to enable.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface WorkspacesEnhancedServiceMonitorService {
        /**
         * Whether to enable.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface WorkspacesEnhancedServiceSecurityService {
        /**
         * Whether to enable.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface WorkspacesInternetAccessible {
        /**
         * Bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
         */
        bandwidthPackageId?: pulumi.Input<string>;
        /**
         * Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocatePublicIp` is false.
         */
        internetChargeType?: pulumi.Input<string>;
        /**
         * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocatePublicIp` is false.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
         */
        publicIpAssigned?: pulumi.Input<boolean>;
    }

    export interface WorkspacesLoginSettings {
        /**
         * The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
         */
        keyIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
         */
        password?: pulumi.Input<string>;
    }

    export interface WorkspacesPlacement {
        /**
         * The project the instance belongs to, default to 0.
         */
        projectId?: pulumi.Input<number>;
        /**
         * The available zone for the CVM instance.
         */
        zone: pulumi.Input<string>;
    }

    export interface WorkspacesSpaceChargePrepaid {
        /**
         * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
         */
        period?: pulumi.Input<number>;
        /**
         * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
         */
        renewFlag?: pulumi.Input<string>;
    }

    export interface WorkspacesSystemDisk {
        /**
         * Data disk ID used to initialize the data disk. When data disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
         */
        diskId?: pulumi.Input<string>;
        /**
         * Size of the system disk. unit is GB, Default is 50GB.
         */
        diskSize?: pulumi.Input<number>;
        /**
         * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
         */
        diskType?: pulumi.Input<string>;
    }

    export interface WorkspacesTagSpecification {
        /**
         * tags.
         */
        tags: pulumi.Input<pulumi.Input<inputs.Thpc.WorkspacesTagSpecificationTag>[]>;
    }

    export interface WorkspacesTagSpecificationTag {
        /**
         * Tag key.
         */
        key: pulumi.Input<string>;
        /**
         * Tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface WorkspacesVirtualPrivateCloud {
        /**
         * Is it used as a public network gateway.
         */
        asVpcGateway?: pulumi.Input<boolean>;
        /**
         * IPV6 address count.
         */
        ipv6AddressCount?: pulumi.Input<number>;
        /**
         * Array of private ip address.
         */
        privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
         */
        subnetId: pulumi.Input<string>;
        /**
         * The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
         */
        vpcId: pulumi.Input<string>;
    }
}

export namespace Trocket {
    export interface RocketmqInstanceIpRule {
        /**
         * Whether to allow release or not.
         */
        allow: pulumi.Input<boolean>;
        /**
         * IP.
         */
        ip: pulumi.Input<string>;
        /**
         * Remark.
         */
        remark: pulumi.Input<string>;
    }
}

export namespace Tse {
    export interface CngwCanaryRuleCanaryRule {
        /**
         * service weight configuration.
         */
        balancedServiceLists?: pulumi.Input<pulumi.Input<inputs.Tse.CngwCanaryRuleCanaryRuleBalancedServiceList>[]>;
        /**
         * parameter matching condition list.
         */
        conditionLists?: pulumi.Input<pulumi.Input<inputs.Tse.CngwCanaryRuleCanaryRuleConditionList>[]>;
        /**
         * the status of canary rule.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * priority. The value ranges from 0 to 100; the larger the value, the higher the priority; the priority cannot be repeated between different rules.
         */
        priority: pulumi.Input<number>;
        /**
         * service ID.
         */
        serviceId?: pulumi.Input<string>;
        /**
         * service name.
         */
        serviceName?: pulumi.Input<string>;
    }

    export interface CngwCanaryRuleCanaryRuleBalancedServiceList {
        /**
         * percent, 10 is 10%, valid values:0 to 100.
         */
        percent?: pulumi.Input<number>;
        /**
         * service ID, required when used as an input parameter.
         */
        serviceId?: pulumi.Input<string>;
        /**
         * service name, meaningless when used as an input parameter.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * upstream name, meaningless when used as an input parameter.
         */
        upstreamName?: pulumi.Input<string>;
    }

    export interface CngwCanaryRuleCanaryRuleConditionList {
        /**
         * delimiter. valid when operator is in or not in, reference value:`,`, `;`,`\n`.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * global configuration ID.
         */
        globalConfigId?: pulumi.Input<string>;
        /**
         * global configuration name.
         */
        globalConfigName?: pulumi.Input<string>;
        /**
         * parameter name.
         */
        key?: pulumi.Input<string>;
        /**
         * operator.Reference value:`le`,`eq`,`lt`,`ne`,`ge`,`gt`,`regex`,`exists`,`in`,`not in`,`prefix`,`exact`,`regex`.
         */
        operator?: pulumi.Input<string>;
        /**
         * type.Reference value:`path`,`method`,`query`,`header`,`cookie`,`body`,`system`.
         */
        type: pulumi.Input<string>;
        /**
         * parameter value.
         */
        value?: pulumi.Input<string>;
    }

    export interface CngwGatewayInstancePort {
        /**
         * Http port range.
         */
        httpPort?: pulumi.Input<string>;
        /**
         * Https port range.
         */
        httpsPort?: pulumi.Input<string>;
        /**
         * Tcp port range.
         */
        tcpPort?: pulumi.Input<string>;
        /**
         * Udp port range.
         */
        udpPort?: pulumi.Input<string>;
    }

    export interface CngwGatewayInternetConfig {
        /**
         * description of clb.
         */
        description?: pulumi.Input<string>;
        /**
         * internet type. Reference value: `IPV4`(default value), `IPV6`.
         */
        internetAddressVersion?: pulumi.Input<string>;
        /**
         * public network bandwidth.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * trade type of internet. Reference value: `BANDWIDTH`, `TRAFFIC`(default value).
         */
        internetPayMode?: pulumi.Input<string>;
        /**
         * primary availability zone.
         */
        masterZoneId?: pulumi.Input<string>;
        /**
         * Whether load balancing has multiple availability zones.
         */
        multiZoneFlag?: pulumi.Input<boolean>;
        /**
         * specification type of clb. Default shared type when this parameter is empty. Reference value:- SLA LCU-supported.
         */
        slaType?: pulumi.Input<string>;
        /**
         * alternate availability zone.
         */
        slaveZoneId?: pulumi.Input<string>;
    }

    export interface CngwGatewayNodeConfig {
        /**
         * node number, 2-50.
         */
        number: pulumi.Input<number>;
        /**
         * specification, 1c2g|2c4g|4c8g|8c16g.
         */
        specification: pulumi.Input<string>;
    }

    export interface CngwGatewayVpcConfig {
        /**
         * subnet ID. Assign an IP address to the engine in the VPC subnet. Reference value: subnet-ahde9me9.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * VPC ID. Assign an IP address to the engine in the VPC subnet. Reference value: vpc-conz6aix.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface CngwGroupInternetConfig {
        /**
         * description of clb.
         */
        description?: pulumi.Input<string>;
        /**
         * internet type. Reference value:- IPV4 (default value)- IPV6.
         */
        internetAddressVersion?: pulumi.Input<string>;
        /**
         * public network bandwidth.
         */
        internetMaxBandwidthOut?: pulumi.Input<number>;
        /**
         * trade type of internet. Reference value:- BANDWIDTH- TRAFFIC (default value).
         */
        internetPayMode?: pulumi.Input<string>;
        /**
         * primary availability zone.
         */
        masterZoneId?: pulumi.Input<string>;
        /**
         * Whether load balancing has multiple availability zones.
         */
        multiZoneFlag?: pulumi.Input<boolean>;
        /**
         * specification type of clb. Default shared type when this parameter is empty. Reference value:- SLA LCU-supported.
         */
        slaType?: pulumi.Input<string>;
        /**
         * alternate availability zone.
         */
        slaveZoneId?: pulumi.Input<string>;
    }

    export interface CngwGroupNodeConfig {
        /**
         * group node number, 2-50.
         */
        number: pulumi.Input<number>;
        /**
         * group specification, 1c2g|2c4g|4c8g|8c16g.
         */
        specification: pulumi.Input<string>;
    }

    export interface CngwNetworkAccessControlAccessControl {
        /**
         * Black list.
         */
        cidrBlackLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * White list.
         */
        cidrWhiteLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Access mode: `Whitelist`, `Blacklist`.
         */
        mode?: pulumi.Input<string>;
    }

    export interface CngwRouteHeader {
        /**
         * key of header.
         */
        key?: pulumi.Input<string>;
        /**
         * value of header.
         */
        value?: pulumi.Input<string>;
    }

    export interface CngwRouteRateLimitLimitDetail {
        /**
         * status of service rate limit.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * external redis information, maybe null.
         */
        externalRedis?: pulumi.Input<inputs.Tse.CngwRouteRateLimitLimitDetailExternalRedis>;
        /**
         * request headers that require rate limit.
         */
        header?: pulumi.Input<string>;
        /**
         * whether to hide the headers of client.
         */
        hideClientHeaders: pulumi.Input<boolean>;
        /**
         * whether to enable request queuing.
         */
        isDelay: pulumi.Input<boolean>;
        /**
         * basis for service rate limit.Reference value:`ip`,`service`,`consumer`,`credential`,`path`,`header`.
         */
        limitBy: pulumi.Input<string>;
        /**
         * queue time.
         */
        lineUpTime?: pulumi.Input<number>;
        /**
         * request paths that require rate limit.
         */
        path?: pulumi.Input<string>;
        /**
         * counter policy.Reference value:`local`,`redis`,`externalRedis`.
         */
        policy?: pulumi.Input<string>;
        /**
         * qps threshold.
         */
        qpsThresholds: pulumi.Input<pulumi.Input<inputs.Tse.CngwRouteRateLimitLimitDetailQpsThreshold>[]>;
        /**
         * response configuration, the response strategy is text, maybe null.
         */
        rateLimitResponse?: pulumi.Input<inputs.Tse.CngwRouteRateLimitLimitDetailRateLimitResponse>;
        /**
         * request forwarding address, maybe null.
         */
        rateLimitResponseUrl?: pulumi.Input<string>;
        /**
         * response strategy.Reference value:`url`: forward request according to url,`text`: response configuration,`default`: return directly.
         */
        responseType: pulumi.Input<string>;
    }

    export interface CngwRouteRateLimitLimitDetailExternalRedis {
        /**
         * redis ip, maybe null.
         */
        redisHost: pulumi.Input<string>;
        /**
         * redis password, maybe null.
         */
        redisPassword: pulumi.Input<string>;
        /**
         * redis port, maybe null.
         */
        redisPort: pulumi.Input<number>;
        /**
         * redis timeout, unit: `ms`, maybe null.
         */
        redisTimeout: pulumi.Input<number>;
    }

    export interface CngwRouteRateLimitLimitDetailQpsThreshold {
        /**
         * the max threshold.
         */
        max: pulumi.Input<number>;
        /**
         * qps threshold unit.Reference value:`second`,`minute`,`hour`,`day`,`month`,`year`.
         */
        unit: pulumi.Input<string>;
    }

    export interface CngwRouteRateLimitLimitDetailRateLimitResponse {
        /**
         * custom response body, maybe bull.
         */
        body?: pulumi.Input<string>;
        /**
         * headrs.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.Tse.CngwRouteRateLimitLimitDetailRateLimitResponseHeader>[]>;
        /**
         * http status code.
         */
        httpStatus?: pulumi.Input<number>;
    }

    export interface CngwRouteRateLimitLimitDetailRateLimitResponseHeader {
        /**
         * key of header.
         */
        key?: pulumi.Input<string>;
        /**
         * value of header.
         */
        value?: pulumi.Input<string>;
    }

    export interface CngwServiceRateLimitLimitDetail {
        /**
         * status of service rate limit.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * external redis information, maybe null.
         */
        externalRedis?: pulumi.Input<inputs.Tse.CngwServiceRateLimitLimitDetailExternalRedis>;
        /**
         * request headers that require rate limit.
         */
        header?: pulumi.Input<string>;
        /**
         * whether to hide the headers of client.
         */
        hideClientHeaders: pulumi.Input<boolean>;
        /**
         * whether to enable request queuing.
         */
        isDelay: pulumi.Input<boolean>;
        /**
         * basis for service rate limit.Reference value: `ip`, `service`, `consumer`, `credential`, `path`, `header`.
         */
        limitBy: pulumi.Input<string>;
        /**
         * queue time.
         */
        lineUpTime?: pulumi.Input<number>;
        /**
         * request paths that require rate limit.
         */
        path?: pulumi.Input<string>;
        /**
         * counter policy.Reference value: `local`, `redis`, `externalRedis`.
         */
        policy?: pulumi.Input<string>;
        /**
         * qps threshold.
         */
        qpsThresholds: pulumi.Input<pulumi.Input<inputs.Tse.CngwServiceRateLimitLimitDetailQpsThreshold>[]>;
        /**
         * response configuration, the response strategy is text, maybe null.
         */
        rateLimitResponse?: pulumi.Input<inputs.Tse.CngwServiceRateLimitLimitDetailRateLimitResponse>;
        /**
         * request forwarding address, maybe null.
         */
        rateLimitResponseUrl?: pulumi.Input<string>;
        /**
         * response strategy.Reference value: `url`: forward request according to url, `text`: response configuration, `default`: return directly.
         */
        responseType: pulumi.Input<string>;
    }

    export interface CngwServiceRateLimitLimitDetailExternalRedis {
        /**
         * redis ip, maybe null.
         */
        redisHost: pulumi.Input<string>;
        /**
         * redis password, maybe null.
         */
        redisPassword: pulumi.Input<string>;
        /**
         * redis port, maybe null.
         */
        redisPort: pulumi.Input<number>;
        /**
         * redis timeout, unit: `ms`, maybe null.
         */
        redisTimeout: pulumi.Input<number>;
    }

    export interface CngwServiceRateLimitLimitDetailQpsThreshold {
        /**
         * the max threshold.
         */
        max: pulumi.Input<number>;
        /**
         * qps threshold unit.Reference value:`second`, `minute`, `hour`, `day`, `month`, `year`.
         */
        unit: pulumi.Input<string>;
    }

    export interface CngwServiceRateLimitLimitDetailRateLimitResponse {
        /**
         * custom response body, maybe bull.
         */
        body?: pulumi.Input<string>;
        /**
         * headrs.
         */
        headers?: pulumi.Input<pulumi.Input<inputs.Tse.CngwServiceRateLimitLimitDetailRateLimitResponseHeader>[]>;
        /**
         * http status code.
         */
        httpStatus?: pulumi.Input<number>;
    }

    export interface CngwServiceRateLimitLimitDetailRateLimitResponseHeader {
        /**
         * key of header.
         */
        key?: pulumi.Input<string>;
        /**
         * value of header.
         */
        value?: pulumi.Input<string>;
    }

    export interface CngwServiceUpstreamInfo {
        /**
         * load balance algorithm,default: `round-robin`, `least-connections` and `consistenHashing` also support.
         */
        algorithm?: pulumi.Input<string>;
        /**
         * auto scaling group port of cvm.
         */
        autoScalingCvmPort?: pulumi.Input<number>;
        /**
         * auto scaling group ID of cvm.
         */
        autoScalingGroupId?: pulumi.Input<string>;
        /**
         * hook status in auto scaling group of cvm.
         */
        autoScalingHookStatus?: pulumi.Input<string>;
        /**
         * tat cmd status in auto scaling group of cvm.
         */
        autoScalingTatCmdStatus?: pulumi.Input<string>;
        /**
         * an IP address or domain name.
         */
        host?: pulumi.Input<string>;
        /**
         * namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * backend service port.valid values: `1` to `65535`.
         */
        port?: pulumi.Input<number>;
        /**
         * exact source service type.
         */
        realSourceType?: pulumi.Input<string>;
        /**
         * scf lambda name.
         */
        scfLambdaName?: pulumi.Input<string>;
        /**
         * scf lambda version.
         */
        scfLambdaQualifier?: pulumi.Input<string>;
        /**
         * scf lambda namespace.
         */
        scfNamespace?: pulumi.Input<string>;
        /**
         * scf lambda type.
         */
        scfType?: pulumi.Input<string>;
        /**
         * the name of the service in registry or kubernetes.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * slow start time, unit: `second`, when it is enabled, weight of the node is increased from 1 to the target value gradually.
         */
        slowStart?: pulumi.Input<number>;
        /**
         * service source ID.
         */
        sourceId?: pulumi.Input<string>;
        /**
         * the name of source service.
         */
        sourceName?: pulumi.Input<string>;
        /**
         * source service type.
         */
        sourceType?: pulumi.Input<string>;
        /**
         * provided when service type is IPList.
         */
        targets?: pulumi.Input<pulumi.Input<inputs.Tse.CngwServiceUpstreamInfoTarget>[]>;
    }

    export interface CngwServiceUpstreamInfoTarget {
        /**
         * created time.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * health.
         */
        health?: pulumi.Input<string>;
        /**
         * host.
         */
        host: pulumi.Input<string>;
        /**
         * port.
         */
        port: pulumi.Input<number>;
        /**
         * source of target.
         */
        source?: pulumi.Input<string>;
        /**
         * weight.
         */
        weight: pulumi.Input<number>;
    }

    export interface CngwStrategyConfig {
        /**
         * behavior configuration of metric
         * Note: This field may return null, indicating that a valid value is not available.
         */
        behavior?: pulumi.Input<inputs.Tse.CngwStrategyConfigBehavior>;
        /**
         * create time
         * Note: This field may return null, indicating that a valid value is not available.
         */
        createTime?: pulumi.Input<string>;
        /**
         * max number of replica for metric scaling.
         */
        maxReplicas?: pulumi.Input<number>;
        /**
         * metric list.
         */
        metrics?: pulumi.Input<pulumi.Input<inputs.Tse.CngwStrategyConfigMetric>[]>;
        /**
         * modify time
         * Note: This field may return null, indicating that a valid value is not available.
         */
        modifyTime?: pulumi.Input<string>;
        /**
         * strategy ID
         * Note: This field may return null, indicating that a valid value is not available.
         */
        strategyId?: pulumi.Input<string>;
    }

    export interface CngwStrategyConfigBehavior {
        /**
         * configuration of down scale
         * Note: This field may return null, indicating that a valid value is not available.
         */
        scaleDown?: pulumi.Input<inputs.Tse.CngwStrategyConfigBehaviorScaleDown>;
        /**
         * configuration of up scale
         * Note: This field may return null, indicating that a valid value is not available.
         */
        scaleUp?: pulumi.Input<inputs.Tse.CngwStrategyConfigBehaviorScaleUp>;
    }

    export interface CngwStrategyConfigBehaviorScaleDown {
        /**
         * policies of scale down
         * Note: This field may return null, indicating that a valid value is not available.
         */
        policies?: pulumi.Input<pulumi.Input<inputs.Tse.CngwStrategyConfigBehaviorScaleDownPolicy>[]>;
        /**
         * type of policy, default value: max
         * Note: This field may return null, indicating that a valid value is not available.
         */
        selectPolicy?: pulumi.Input<string>;
        /**
         * stability window time, unit:second, default 300 when scale down
         * Note: This field may return null, indicating that a valid value is not available.
         */
        stabilizationWindowSeconds?: pulumi.Input<number>;
    }

    export interface CngwStrategyConfigBehaviorScaleDownPolicy {
        /**
         * period of scale up
         * Note: This field may return null, indicating that a valid value is not available.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * type, default value: Pods
         * Note: This field may return null, indicating that a valid value is not available.
         */
        type?: pulumi.Input<string>;
        /**
         * value
         * Note: This field may return null, indicating that a valid value is not available.
         */
        value?: pulumi.Input<number>;
    }

    export interface CngwStrategyConfigBehaviorScaleUp {
        /**
         * policies of scale up
         * Note: This field may return null, indicating that a valid value is not available.
         */
        policies?: pulumi.Input<pulumi.Input<inputs.Tse.CngwStrategyConfigBehaviorScaleUpPolicy>[]>;
        /**
         * type of policy, default value: max
         * Note: This field may return null, indicating that a valid value is not available.
         */
        selectPolicy?: pulumi.Input<string>;
        /**
         * stability window time, unit:second, default 0 when scale up
         * Note: This field may return null, indicating that a valid value is not available.
         */
        stabilizationWindowSeconds?: pulumi.Input<number>;
    }

    export interface CngwStrategyConfigBehaviorScaleUpPolicy {
        /**
         * period of scale up
         * Note: This field may return null, indicating that a valid value is not available.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * type, default value: Pods
         * Note: This field may return null, indicating that a valid value is not available.
         */
        type?: pulumi.Input<string>;
        /**
         * value
         * Note: This field may return null, indicating that a valid value is not available.
         */
        value?: pulumi.Input<number>;
    }

    export interface CngwStrategyConfigMetric {
        /**
         * metric name. Reference value:
         * - cpu
         * - memory
         * Note: This field may return null, indicating that a valid value is not available.
         */
        resourceName?: pulumi.Input<string>;
        /**
         * target type of metric, currently only supports `Utilization`
         * Note: This field may return null, indicating that a valid value is not available.
         */
        targetType?: pulumi.Input<string>;
        /**
         * target value of metric
         * Note: This field may return null, indicating that a valid value is not available.
         */
        targetValue?: pulumi.Input<number>;
        /**
         * metric type. Deafault value
         * - Resource.
         */
        type?: pulumi.Input<string>;
    }

    export interface CngwStrategyCronConfig {
        /**
         * parameter list of timed scaling
         * Note: This field may return null, indicating that a valid value is not available.
         */
        params?: pulumi.Input<pulumi.Input<inputs.Tse.CngwStrategyCronConfigParam>[]>;
        /**
         * strategy ID
         * Note: This field may return null, indicating that a valid value is not available.
         */
        strategyId?: pulumi.Input<string>;
    }

    export interface CngwStrategyCronConfigParam {
        /**
         * cron expression of timed scaling, no input required
         * Note: This field may return null, indicating that a valid value is not available.
         */
        crontab?: pulumi.Input<string>;
        /**
         * period of timed scaling
         * Note: This field may return null, indicating that a valid value is not available.
         */
        period?: pulumi.Input<string>;
        /**
         * start time of timed scaling
         * Note: This field may return null, indicating that a valid value is not available.
         */
        startAt?: pulumi.Input<string>;
        /**
         * the number of target nodes for the timed scaling. Do not exceed the max number of replica for metric scaling
         * Note: This field may return null, indicating that a valid value is not available.
         */
        targetReplicas?: pulumi.Input<number>;
    }

    export interface GetGatewayCertificatesFilter {
        /**
         * Filter name.
         */
        key?: string;
        /**
         * Filter value.
         */
        value?: string;
    }

    export interface GetGatewayCertificatesFilterArgs {
        /**
         * Filter name.
         */
        key?: pulumi.Input<string>;
        /**
         * Filter value.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetGatewayServicesFilter {
        /**
         * filter name.
         */
        key?: string;
        /**
         * filter value.
         */
        value?: string;
    }

    export interface GetGatewayServicesFilterArgs {
        /**
         * filter name.
         */
        key?: pulumi.Input<string>;
        /**
         * filter value.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetGatewaysFilter {
        /**
         * filter name.
         */
        name: string;
        /**
         * filter value.
         */
        values: string[];
    }

    export interface GetGatewaysFilterArgs {
        /**
         * filter name.
         */
        name: pulumi.Input<string>;
        /**
         * filter value.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetGroupsFilter {
        /**
         * filter name.
         */
        name: string;
        /**
         * filter values.
         */
        values: string[];
    }

    export interface GetGroupsFilterArgs {
        /**
         * filter name.
         */
        name: pulumi.Input<string>;
        /**
         * filter values.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceEngineRegionInfo {
        /**
         * Engine node region.
         */
        engineRegion: pulumi.Input<string>;
        /**
         * The number of nodes allocated in this region.
         */
        replica: pulumi.Input<number>;
        /**
         * Cluster network information.
         */
        vpcInfos: pulumi.Input<pulumi.Input<inputs.Tse.InstanceEngineRegionInfoVpcInfo>[]>;
    }

    export interface InstanceEngineRegionInfoVpcInfo {
        /**
         * Intranet access addressNote: This field may return null, indicating that a valid value is not available..
         */
        intranetAddress?: pulumi.Input<string>;
        /**
         * Subnet ID.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Vpc Id.
         */
        vpcId: pulumi.Input<string>;
    }
}

export namespace Tsf {
    export interface ApiGroupBindedGatewayDeployGroup {
        /**
         * application ID.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * Application Name.
         */
        applicationName?: pulumi.Input<string>;
        /**
         * Application classification: V: virtual machine application, C: container application.
         */
        applicationType?: pulumi.Input<string>;
        /**
         * Cluster type, C: container, V: virtual machine.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * Gateway deployment group ID.
         */
        deployGroupId?: pulumi.Input<string>;
        /**
         * Gateway deployment group name.
         */
        deployGroupName?: pulumi.Input<string>;
        /**
         * Deployment group application status, values: Running, Waiting, Paused, Updating, RollingBack, Abnormal, Unknown.
         */
        groupStatus?: pulumi.Input<string>;
    }

    export interface ApplicationServiceConfigList {
        /**
         * Health check configuration.
         */
        healthCheck?: pulumi.Input<inputs.Tsf.ApplicationServiceConfigListHealthCheck>;
        /**
         * Service name.
         */
        name: pulumi.Input<string>;
        /**
         * List of port information.
         */
        ports: pulumi.Input<pulumi.Input<inputs.Tsf.ApplicationServiceConfigListPort>[]>;
    }

    export interface ApplicationServiceConfigListHealthCheck {
        /**
         * Health check path.
         */
        path?: pulumi.Input<string>;
    }

    export interface ApplicationServiceConfigListPort {
        /**
         * Port protocol.
         */
        protocol: pulumi.Input<string>;
        /**
         * Service port.
         */
        targetPort: pulumi.Input<number>;
    }

    export interface ClusterOperationInfo {
        /**
         * Add the control information of the instance button.
         */
        addInstances?: pulumi.Input<pulumi.Input<inputs.Tsf.ClusterOperationInfoAddInstance>[]>;
        /**
         * Destroy the control information of the machine.
         */
        destroys?: pulumi.Input<pulumi.Input<inputs.Tsf.ClusterOperationInfoDestroy>[]>;
        /**
         * Initialize the control information of the button.
         */
        inits?: pulumi.Input<pulumi.Input<inputs.Tsf.ClusterOperationInfoInit>[]>;
    }

    export interface ClusterOperationInfoAddInstance {
        /**
         * Reason for not showing.
         */
        disabledReason?: pulumi.Input<string>;
        /**
         * Is the button clickable.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * whether to show the button.
         */
        supported?: pulumi.Input<boolean>;
    }

    export interface ClusterOperationInfoDestroy {
        /**
         * Reason for not showing.
         */
        disabledReason?: pulumi.Input<string>;
        /**
         * Is the button clickable.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * whether to show the button.
         */
        supported?: pulumi.Input<boolean>;
    }

    export interface ClusterOperationInfoInit {
        /**
         * Reason for not showing.
         */
        disabledReason?: pulumi.Input<string>;
        /**
         * Is the button clickable.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * whether to show the button.
         */
        supported?: pulumi.Input<boolean>;
    }

    export interface DeployContainerGroupAgentProfileList {
        /**
         * Agent type.
         */
        agentType?: pulumi.Input<string>;
        /**
         * Agent version.
         */
        agentVersion?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupEnv {
        /**
         * env param name.
         */
        name: pulumi.Input<string>;
        /**
         * value of env.
         */
        value?: pulumi.Input<string>;
        /**
         * Kubernetes ValueFrom configuration. Note: This field may return null, indicating that no valid values can be obtained.
         */
        valueFrom?: pulumi.Input<inputs.Tsf.DeployContainerGroupEnvValueFrom>;
    }

    export interface DeployContainerGroupEnvValueFrom {
        /**
         * The FieldRef configuration of Kubernetes env. Note: This field may return null, indicating that no valid values can be obtained.
         */
        fieldRef?: pulumi.Input<inputs.Tsf.DeployContainerGroupEnvValueFromFieldRef>;
        /**
         * The ResourceFieldRef configuration of Kubernetes env. Note: This field may return null, indicating that no valid values can be obtained.
         */
        resourceFieldRef?: pulumi.Input<inputs.Tsf.DeployContainerGroupEnvValueFromResourceFieldRef>;
    }

    export interface DeployContainerGroupEnvValueFromFieldRef {
        /**
         * The FieldPath configuration of Kubernetes. Note: This field may return null, indicating that no valid values can be obtained.
         */
        fieldPath?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupEnvValueFromResourceFieldRef {
        /**
         * The Resource configuration of Kubernetes. Note: This field may return null, indicating that no valid values can be obtained.
         */
        resource?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupHealthCheckSettings {
        /**
         * Liveness probe. Note: This field may return null, indicating that no valid values can be obtained.
         */
        livenessProbe?: pulumi.Input<inputs.Tsf.DeployContainerGroupHealthCheckSettingsLivenessProbe>;
        /**
         * Readiness health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        readinessProbe?: pulumi.Input<inputs.Tsf.DeployContainerGroupHealthCheckSettingsReadinessProbe>;
    }

    export interface DeployContainerGroupHealthCheckSettingsLivenessProbe {
        /**
         * The health check method. HTTP: checks through an HTTP interface; CMD: checks by executing a command; TCP: checks by establishing a TCP connection. Note: This field may return null, indicating that no valid values can be obtained.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time delay for the container to start the health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupHealthCheckSettingsReadinessProbe {
        /**
         * The health check method. HTTP indicates checking through an HTTP interface, CMD indicates checking through executing a command, and TCP indicates checking through establishing a TCP connection. Note: This field may return null, indicating that no valid values can be obtained.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time to delay the start of the container health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupSchedulingStrategy {
        /**
         * NONE: Do not use scheduling strategy; CROSS_AZ: Deploy across availability zones. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type: pulumi.Input<string>;
    }

    export interface DeployContainerGroupServiceSetting {
        /**
         * 0: Public network, 1: Access within the cluster, 2: NodePort, 3: Access within VPC. Note: This field may return null, indicating that no valid values can be obtained.
         */
        accessType: pulumi.Input<number>;
        /**
         * When set to true and DisableService is also true, the previously created service will be deleted. Please use with caution. Note: This field may return null, indicating that no valid values can be obtained.
         */
        allowDeleteService?: pulumi.Input<boolean>;
        /**
         * Whether to create a Kubernetes service. The default value is false. Note: This field may return null, indicating that no valid values can be obtained.
         */
        disableService?: pulumi.Input<boolean>;
        /**
         * Whether the service is of headless type. Note: This field may return null, indicating that no valid values can be obtained.
         */
        headlessService?: pulumi.Input<boolean>;
        /**
         * Enable session affinity. true means enabled, false means disabled. The default value is false. Note: This field may return null, indicating that no valid values can be obtained.
         */
        openSessionAffinity?: pulumi.Input<boolean>;
        /**
         * Container port mapping. Note: This field may return null, indicating that no valid values can be obtained.
         */
        protocolPorts: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupServiceSettingProtocolPort>[]>;
        /**
         * Session affinity session time. The default value is 10800. Note: This field may return null, indicating that no valid values can be obtained.
         */
        sessionAffinityTimeoutSeconds?: pulumi.Input<number>;
        /**
         * subnet Id.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface DeployContainerGroupServiceSettingProtocolPort {
        /**
         * node port.
         */
        nodePort?: pulumi.Input<number>;
        /**
         * port.
         */
        port: pulumi.Input<number>;
        /**
         * TCP or UDP.
         */
        protocol: pulumi.Input<string>;
        /**
         * container port.
         */
        targetPort: pulumi.Input<number>;
    }

    export interface DeployContainerGroupVolumeInfoList {
        /**
         * volume config.
         */
        volumeConfig?: pulumi.Input<string>;
        /**
         * volume name.
         */
        volumeName: pulumi.Input<string>;
        /**
         * volume type.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface DeployContainerGroupVolumeMountInfoList {
        /**
         * Read and write access mode. 1: Read-only. 2: Read-write.
         */
        readOrWrite?: pulumi.Input<string>;
        /**
         * mount volume name.
         */
        volumeMountName: pulumi.Input<string>;
        /**
         * mount path.
         */
        volumeMountPath: pulumi.Input<string>;
        /**
         * mount subPath.
         */
        volumeMountSubPath?: pulumi.Input<string>;
    }

    export interface DeployContainerGroupWarmupSetting {
        /**
         * Preheating curvature, with a value between 1 and 5.
         */
        curvature?: pulumi.Input<number>;
        /**
         * Whether to enable preheating.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Whether to enable preheating protection. If protection is enabled and more than 50% of nodes are in preheating state, preheating will be aborted.
         */
        enabledProtection?: pulumi.Input<boolean>;
        /**
         * warmup time.
         */
        warmupTime?: pulumi.Input<number>;
    }

    export interface DeployVmGroupAgentProfileList {
        /**
         * Agent type.
         */
        agentType?: pulumi.Input<string>;
        /**
         * Agent version.
         */
        agentVersion?: pulumi.Input<string>;
    }

    export interface DeployVmGroupHealthCheckSettings {
        /**
         * Survival health check. Note: This field may return null, indicating that no valid value was found.
         */
        livenessProbe?: pulumi.Input<inputs.Tsf.DeployVmGroupHealthCheckSettingsLivenessProbe>;
        /**
         * Readiness health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        readinessProbe?: pulumi.Input<inputs.Tsf.DeployVmGroupHealthCheckSettingsReadinessProbe>;
    }

    export interface DeployVmGroupHealthCheckSettingsLivenessProbe {
        /**
         * Health check method. HTTP: check through HTTP interface; CMD: check through executing command; TCP: check through establishing TCP connection. Note: This field may return null, indicating that no valid value was found.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time delay for the container to start the health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployVmGroupHealthCheckSettingsReadinessProbe {
        /**
         * The health check method. HTTP indicates checking through an HTTP interface, CMD indicates checking through executing a command, and TCP indicates checking through establishing a TCP connection. Note: This field may return null, indicating that no valid values can be obtained.
         */
        actionType: pulumi.Input<string>;
        /**
         * The command to be executed for command check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from success to failure. Note: This field may return null, indicating that no valid values can be obtained.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * The time to delay the start of the container health check. Note: This field may return null, indicating that no valid values can be obtained.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * The request path for HTTP health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        path?: pulumi.Input<string>;
        /**
         * The time interval for performing health checks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The port used for health checks, ranging from 1 to 65535. Note: This field may return null, indicating that no valid values can be obtained.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol used for HTTP health checks. HTTP and HTTPS are supported. Note: This field may return null, indicating that no valid values can be obtained.
         */
        scheme?: pulumi.Input<string>;
        /**
         * The number of consecutive successful health checks required for the backend container to transition from failure to success. Note: This field may return null, indicating that no valid values can be obtained.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * The maximum timeout period for each health check response. Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeoutSeconds?: pulumi.Input<number>;
        /**
         * The type of readiness probe. TSF_DEFAULT represents the default readiness probe of TSF, while K8S_NATIVE represents the native readiness probe of Kubernetes. If this field is not specified, the native readiness probe of Kubernetes is used by default. Note: This field may return null, indicating that no valid values can be obtained.
         */
        type?: pulumi.Input<string>;
    }

    export interface DeployVmGroupWarmupSetting {
        /**
         * Preheating curvature, with a value between 1 and 5.
         */
        curvature?: pulumi.Input<number>;
        /**
         * Whether to enable preheating.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Whether to enable preheating protection. If protection is enabled and more than 50% of nodes are in preheating state, preheating will be aborted.
         */
        enabledProtection?: pulumi.Input<boolean>;
        /**
         * warmup time.
         */
        warmupTime?: pulumi.Input<number>;
    }

    export interface InstancesAttachmentInstanceAdvancedSettings {
        /**
         * Dockerd --graph specifies the value, default is /var/lib/docker Note: This field may return null, indicating that no valid values can be obtained.
         */
        dockerGraphPath: pulumi.Input<string>;
        /**
         * Data disk mount point, data disks are not mounted by default. Data disks with formatted ext3, ext4, xfs file systems will be mounted directly, other file systems or unformatted data disks will be automatically formatted as ext4 and mounted. Please back up your data! This setting does not take effect for cloud servers with no data disks or multiple data disks. Note: This field may return null, indicating that no valid values can be obtained.
         */
        mountTarget: pulumi.Input<string>;
    }

    export interface LaneLaneGroupList {
        /**
         * application ID.
         */
        applicationId?: pulumi.Input<string>;
        /**
         * application name.
         */
        applicationName?: pulumi.Input<string>;
        /**
         * cluster type.
         */
        clusterType?: pulumi.Input<string>;
        /**
         * creation time.
         */
        createTime?: pulumi.Input<number>;
        /**
         * Whether to enter the application.
         */
        entrance: pulumi.Input<boolean>;
        /**
         * Deployment group ID.
         */
        groupId: pulumi.Input<string>;
        /**
         * deployment group name.
         */
        groupName?: pulumi.Input<string>;
        /**
         * Swimlane deployment group ID.
         */
        laneGroupId?: pulumi.Input<string>;
        /**
         * Lane ID.
         */
        laneId?: pulumi.Input<string>;
        /**
         * Namespace ID.
         */
        namespaceId?: pulumi.Input<string>;
        /**
         * namespace name.
         */
        namespaceName?: pulumi.Input<string>;
        /**
         * update time.
         */
        updateTime?: pulumi.Input<number>;
    }

    export interface LaneRuleRuleTagList {
        /**
         * creation time.
         */
        createTime?: pulumi.Input<number>;
        /**
         * lane rule ID.
         */
        laneRuleId?: pulumi.Input<string>;
        /**
         * label ID.
         */
        tagId?: pulumi.Input<string>;
        /**
         * label name.
         */
        tagName: pulumi.Input<string>;
        /**
         * label operator.
         */
        tagOperator: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue: pulumi.Input<string>;
        /**
         * update time.
         */
        updateTime?: pulumi.Input<number>;
    }

    export interface TaskAdvanceSettings {
        /**
         * Subtask single-machine concurrency limit, the default value is 2.
         */
        subTaskConcurrency?: pulumi.Input<number>;
    }

    export interface TaskShardArgument {
        /**
         * Sharding parameter KEY, integer, range [1,1000].
         */
        shardKey: pulumi.Input<number>;
        /**
         * Shard parameter VALUE.
         */
        shardValue: pulumi.Input<string>;
    }

    export interface TaskTaskRule {
        /**
         * Cron type rule, cron expression.
         */
        expression?: pulumi.Input<string>;
        /**
         * time interval, in milliseconds.
         */
        repeatInterval?: pulumi.Input<number>;
        /**
         * trigger rule type, Cron/Repeat.
         */
        ruleType: pulumi.Input<string>;
    }

    export interface UnitRuleUnitRuleItemList {
        /**
         * rule description.
         */
        description?: pulumi.Input<string>;
        /**
         * destination namespace ID.
         */
        destNamespaceId: pulumi.Input<string>;
        /**
         * destination namespace name.
         */
        destNamespaceName: pulumi.Input<string>;
        /**
         * rule item name.
         */
        name: pulumi.Input<string>;
        /**
         * rule order, the smaller the higher the priority: the default is 0.
         */
        priority?: pulumi.Input<number>;
        /**
         * logical relationship: AND/OR.
         */
        relationship: pulumi.Input<string>;
        /**
         * rule item ID.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * Unitization rule ID.
         */
        unitRuleId?: pulumi.Input<string>;
        /**
         * list of rule labels.
         */
        unitRuleTagLists?: pulumi.Input<pulumi.Input<inputs.Tsf.UnitRuleUnitRuleItemListUnitRuleTagList>[]>;
    }

    export interface UnitRuleUnitRuleItemListUnitRuleTagList {
        /**
         * rule ID.
         */
        ruleId?: pulumi.Input<string>;
        /**
         * label name.
         */
        tagField: pulumi.Input<string>;
        /**
         * Operator: IN/NOT_IN/EQUAL/NOT_EQUAL/REGEX.
         */
        tagOperator: pulumi.Input<string>;
        /**
         * Tag Type: U(User Tag).
         */
        tagType: pulumi.Input<string>;
        /**
         * tag value.
         */
        tagValue: pulumi.Input<string>;
        /**
         * Unitization rule item ID.
         */
        unitRuleItemId?: pulumi.Input<string>;
    }
}

export namespace Vod {
    export interface AdaptiveDynamicStreamingTemplateStreamInfo {
        /**
         * Audio parameter information.
         */
        audio: pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfoAudio>;
        /**
         * Whether to remove audio stream. Valid values: `false`: no, `true`: yes. `false` by default.
         */
        removeAudio?: pulumi.Input<boolean>;
        /**
         * Whether to remove video stream. Valid values: `false`: no, `true`: yes. `false` by default.
         */
        removeVideo?: pulumi.Input<boolean>;
        /**
         * Extremely fast HD transcoding parameters.
         */
        tehdConfig?: pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfoTehdConfig>;
        /**
         * Video parameter information.
         */
        video: pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfoVideo>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoAudio {
        /**
         * Audio channel system. Valid values: mono, dual, stereo. Default value: dual.
         */
        audioChannel?: pulumi.Input<string>;
        /**
         * Audio stream bitrate in Kbps. Value range: `0` and `[26, 256]`. If the value is `0`, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Audio stream encoder. Valid value are: `libfdkAac` and `libmp3lame`. while `libfdkAac` is recommended.
         */
        codec: pulumi.Input<string>;
        /**
         * Audio stream sample rate. Valid values: `32000`, `44100`, `48000`Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoTehdConfig {
        /**
         * Video bitrate limit, which is valid when Type specifies extreme speed HD type. If you leave it empty or enter 0, there is no video bitrate limit.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * Extreme high-speed HD type, available values:
         * - TEHD-100: super high definition-100th;
         * - OFF: turn off Ultra High definition.
         */
        type: pulumi.Input<string>;
    }

    export interface AdaptiveDynamicStreamingTemplateStreamInfoVideo {
        /**
         * Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Video stream encoder. Valid values: `libx264`,`libx265`,`av1`. `libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
         */
        codec: pulumi.Input<string>;
        /**
         * Encoding label, valid only if the encoding format of the video stream is H.265 encoding. Available values:
         * - hvc1: stands for hvc1 tag;
         * - hev1: stands for the hev1 tag;
         * Default value: hvc1.
         */
        codecTag?: pulumi.Input<string>;
        /**
         * Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Default value: black. Note: this field may return null, indicating that no valid values can be obtained.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
         */
        fps: pulumi.Input<number>;
        /**
         * Interval between Keyframe I frames, value range: 0 and [1, 100000], unit: number of frames. When you fill in 0 or leave it empty, the gop length is automatically set.
         */
        gop?: pulumi.Input<number>;
        /**
         * Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        height?: pulumi.Input<number>;
        /**
         * Whether the transcoding output still maintains HDR when the original video is HDR (High Dynamic Range). Value range:
         * - ON: if the original file is HDR, the transcoding output remains HDR;, otherwise the transcoding output is SDR (Standard Dynamic Range);
         * - OFF: regardless of whether the original file is HDR or SDR, the transcoding output is SDR;
         * Default value: OFF.
         */
        preserveHdrSwitch?: pulumi.Input<string>;
        /**
         * Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Default value: `true`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        resolutionAdaptive?: pulumi.Input<boolean>;
        /**
         * Video constant bit rate control factor, value range is [1,51].
         * Note:
         * - If this parameter is specified, the bitrate control method of CRF will be used for transcoding (the video bitrate will no longer take effect);
         * - This field is required when the video stream encoding format is H.266. The recommended value is 28;
         * - If there are no special requirements, it is not recommended to specify this parameter.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        width?: pulumi.Input<number>;
    }

    export interface ProcedureTemplateAiAnalysisTask {
        /**
         * Video content analysis template ID.
         */
        definition?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateAiRecognitionTask {
        /**
         * Intelligent video recognition template ID.
         */
        definition?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTask {
        /**
         * List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        adaptiveDynamicStreamingTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList>[]>;
        /**
         * List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        animatedGraphicTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList>[]>;
        /**
         * List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        coverBySnapshotTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList>[]>;
        /**
         * List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        imageSpriteTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskImageSpriteTaskList>[]>;
        /**
         * List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        sampleSnapshotTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList>[]>;
        /**
         * List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        snapshotByTimeOffsetTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList>[]>;
        /**
         * List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        transcodeTaskLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList {
        /**
         * Adaptive bitrate streaming template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * Subtitle list, element is subtitle ID, support multiple subtitles, up to 16.
         */
        subtitleLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList {
        /**
         * Animated image generating template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time of animated image in video in seconds.
         */
        endTimeOffset: pulumi.Input<number>;
        /**
         * Start time of animated image in video in seconds.
         */
        startTimeOffset: pulumi.Input<number>;
    }

    export interface ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList {
        /**
         * Time point screen capturing template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
         */
        positionType: pulumi.Input<string>;
        /**
         * Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
         */
        positionValue: pulumi.Input<number>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskImageSpriteTaskList {
        /**
         * Image sprite generating template ID.
         */
        definition: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList {
        /**
         * Sampled screen capturing template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList {
        /**
         * Time point screen capturing template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
         */
        extTimeOffsetLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of time points for screencapturing in milliseconds. Note: this field may return null, indicating that no valid values can be obtained.
         */
        timeOffsetLists?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskList {
        /**
         * opyright watermark.
         */
        copyRightWatermark?: pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListCopyRightWatermark>;
        /**
         * Video transcoding template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * List of video opening/closing credits configuration template IDs. You can enter up to 10 IDs.
         */
        headTailLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListHeadTailList>[]>;
        /**
         * List of blurs. Up to 10 ones can be supported.
         */
        mosaicLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList>[]>;
        /**
         * Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Digital watermark.
         */
        traceWatermark?: pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListTraceWatermark>;
        /**
         * List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
         */
        watermarkLists?: pulumi.Input<pulumi.Input<inputs.Vod.ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList>[]>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListCopyRightWatermark {
        /**
         * Copyright information, maximum length is 200 characters.
         */
        text?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListHeadTailList {
        /**
         * Video opening/closing credits configuration template ID.
         */
        definition?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList {
        /**
         * Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text. Default value: TopLeft.
         */
        coordinateOrigin?: pulumi.Input<string>;
        /**
         * End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px. Default value: `10%`.
         */
        height?: pulumi.Input<string>;
        /**
         * Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px. Default value: `10%`.
         */
        width?: pulumi.Input<string>;
        /**
         * The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px. Default value: `0px`.
         */
        xPos?: pulumi.Input<string>;
        /**
         * Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px. Default value: `0px`.
         */
        yPos?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListTraceWatermark {
        /**
         * Whether to use digital watermarks. This parameter is required. Valid values: ON, OFF.
         */
        switch?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList {
        /**
         * Watermarking template ID.
         */
        definition: pulumi.Input<string>;
        /**
         * End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
         */
        endTimeOffset?: pulumi.Input<number>;
        /**
         * Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
         */
        startTimeOffset?: pulumi.Input<number>;
        /**
         * SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
         */
        svgContent?: pulumi.Input<string>;
        /**
         * Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
         */
        textContent?: pulumi.Input<string>;
    }

    export interface ProcedureTemplateReviewAudioVideoTask {
        /**
         * Review template.
         */
        definition?: pulumi.Input<string>;
        /**
         * The type of moderated content. Valid values:
         */
        reviewContents?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SuperPlayerConfigDrmStreamingInfo {
        /**
         * ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
         */
        simpleAesDefinition?: pulumi.Input<string>;
    }

    export interface SuperPlayerConfigResolutionName {
        /**
         * Length of video short side in px.
         */
        minEdgeLength: pulumi.Input<number>;
        /**
         * Display name.
         */
        name: pulumi.Input<string>;
    }

    export interface TranscodeTemplateAudioTemplate {
        /**
         * Audio channel system. Valid values:1: mono-channel2: dual-channel6: stereoYou cannot set the sound channel as stereo for media files in container formats for audios (FLAC, OGG, MP3, M4A).Default value: 2.
         */
        audioChannel?: pulumi.Input<number>;
        /**
         * Audio stream bitrate in Kbps. Value range: 0 and [26, 256].If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
         */
        bitrate: pulumi.Input<number>;
        /**
         * The audio codec.If `Container` is `mp3`, the valid value is:`libmp3lame`If `Container` is `ogg` or `flac`, the valid value is:`flac`If `Container` is `m4a`, the valid values are:`libfdkAac``libmp3lame``ac3`If `Container` is `mp4` or `flv`, the valid values are:`libfdkAac` (Recommended for MP4)`libmp3lame` (Recommended for FLV)`mp2`If `Container` is `hls`, the valid value is:`libfdkAac`If `Format` is `HLS` or `MPEG-DASH`, the valid value is:`libfdkAac`If `Container` is `wav`, the valid value is:`pcm16`.
         */
        codec: pulumi.Input<string>;
        /**
         * The audio sample rate. Valid values:`16000` (valid only if `Codec` is `pcm16`)`32000``44100``48000`Unit: Hz.
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface TranscodeTemplateTehdConfig {
        /**
         * Maximum bitrate, which is valid when `Type` is `TESHD`.If this parameter is left blank or 0 is entered, there will be no upper limit for bitrate.
         */
        maxVideoBitrate?: pulumi.Input<number>;
        /**
         * TESHD transcoding type. Valid values: TEHD-100, OFF (default).
         */
        type: pulumi.Input<string>;
    }

    export interface TranscodeTemplateVideoTemplate {
        /**
         * Bitrate of video stream in Kbps. Value range: 0 and [128, 35,000].If the value is 0, the bitrate of the video will be the same as that of the source video.
         */
        bitrate: pulumi.Input<number>;
        /**
         * The video codec. Valid values:libx264: H.264; libx265: H.265; av1: AOMedia Video 1; H.266: H.266. The AOMedia Video 1 and H.266 codecs can only be used for MP4 files. Only CRF is supported for H.266 currently.
         */
        codec: pulumi.Input<string>;
        /**
         * The codec tag. This parameter is valid only if the H.265 codec is used. Valid values:hvc1hev1Default value: hvc1.
         */
        codecTag?: pulumi.Input<string>;
        /**
         * Fill type, the way of processing a screenshot when the configured aspect ratio is different from that of the source video. Valid values:stretch: stretches the video image frame by frame to fill the screen. The video image may become squashed or stretched after transcoding.black: fills the uncovered area with black color, without changing the image&#39;s aspect ratio.white: fills the uncovered area with white color, without changing the image&#39;s aspect ratio.gauss: applies Gaussian blur to the uncovered area, without changing the image&#39;s aspect ratio.Default value: black.
         */
        fillType?: pulumi.Input<string>;
        /**
         * Video frame rate in Hz. Value range: [0,100].If the value is 0, the frame rate will be the same as that of the source video.
         */
        fps: pulumi.Input<number>;
        /**
         * I-frame interval in frames. Valid values: 0 and 1-100000.When this parameter is set to 0 or left empty, `Gop` will be automatically set.
         */
        gop?: pulumi.Input<number>;
        /**
         * The maximum video height (or short side) in pixels. Value range: 0 and [128, 8192].If both `Width` and `Height` are 0, the output resolution will be the same as that of the source video.If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.If neither `Width` nor `Height` is 0, the specified width and height will be used.Default value: 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Whether to output an HDR (high dynamic range) video if the source video is HDR. Valid values:ON: If the source video is HDR, output an HDR video; if not, output an SDR (standard dynamic range) video.OFF: Output an SDR video regardless of whether the source video is HDR.Default value: OFF.
         */
        preserveHdrSwitch?: pulumi.Input<string>;
        /**
         * Resolution adaption. Valid values:open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.Default value: open.Note: this field may return null, indicating that no valid values can be obtained.
         */
        resolutionAdaptive?: pulumi.Input<string>;
        /**
         * The video constant rate factor (CRF). Value range: 1-51.If this parameter is specified, CRF encoding will be used and the bitrate parameter will be ignored.If `Codec` is `H.266`, this parameter is required (`28` is recommended).We don't recommend using this parameter unless you have special requirements.
         */
        vcrf?: pulumi.Input<number>;
        /**
         * The maximum video width (or long side) in pixels. Value range: 0 and [128, 8192].If both `Width` and `Height` are 0, the output resolution will be the same as that of the source video.If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.If neither `Width` nor `Height` is 0, the specified width and height will be used.Default value: 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface WatermarkTemplateImageTemplate {
        /**
         * Watermark height. % and px formats are supported: If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;  If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px. Valid values: 0 or [8,4096]. Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
         */
        height?: pulumi.Input<string>;
        /**
         * The [Base64](https://tools.ietf.org/html/rfc4648) encoded string of a watermark image. Only JPEG, PNG, and GIF images are supported.
         */
        imageContent: pulumi.Input<string>;
        /**
         * Repeat type of an animated watermark. Valid values: once: no longer appears after watermark playback ends.  repeat_last_frame: stays on the last frame after watermark playback ends.  repeat (default): repeats the playback until the video ends.
         */
        repeatType?: pulumi.Input<string>;
        /**
         * Image watermark transparency: 0: completely opaque  100: completely transparent Default value: 0.
         */
        transparency?: pulumi.Input<number>;
        /**
         * Watermark width. % and px formats are supported: If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width. For example, `10%` means that `Width` is 10% of the video width;  If the string ends in px, the `Width` of the watermark will be in pixels. For example, `100px` means that `Width` is 100 pixels. Value range: [8, 4096]. Default value: 10%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WatermarkTemplateSvgTemplate {
        /**
         * Watermark height, which supports six formats of px, %, W%, H%, S%, and L%: If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px; if `0px` is entered and `Width` is not `0px`, the watermark height will be proportionally scaled based on the source SVG image; if `0px` is entered for both `Width` and `Height`, the watermark height will be the height of the source SVG image;  If the string ends in `W%`, the `Height` of the watermark will be the specified percentage of the video width; for example, `10W%` means that `Height` is 10% of the video width;  If the string ends in `H%`, the `Height` of the watermark will be the specified percentage of the video height; for example, `10H%` means that `Height` is 10% of the video height;  If the string ends in `S%`, the `Height` of the watermark will be the specified percentage of the short side of the video; for example, `10S%` means that `Height` is 10% of the short side of the video;  If the string ends in `L%`, the `Height` of the watermark will be the specified percentage of the long side of the video; for example, `10L%` means that `Height` is 10% of the long side of the video;  If the string ends in %, the meaning is the same as `H%`. Default value: 0 px.
         */
        height?: pulumi.Input<string>;
        /**
         * Watermark width, which supports six formats of px, %, W%, H%, S%, and L%: If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px; if `0px` is entered and `Height` is not `0px`, the watermark width will be proportionally scaled based on the source SVG image; if `0px` is entered for both `Width` and `Height`, the watermark width will be the width of the source SVG image;  If the string ends in `W%`, the `Width` of the watermark will be the specified percentage of the video width; for example, `10W%` means that `Width` is 10% of the video width;  If the string ends in `H%`, the `Width` of the watermark will be the specified percentage of the video height; for example, `10H%` means that `Width` is 10% of the video height;  If the string ends in `S%`, the `Width` of the watermark will be the specified percentage of the short side of the video; for example, `10S%` means that `Width` is 10% of the short side of the video;  If the string ends in `L%`, the `Width` of the watermark will be the specified percentage of the long side of the video; for example, `10L%` means that `Width` is 10% of the long side of the video;  If the string ends in %, the meaning is the same as `W%`. Default value: 10W%.
         */
        width?: pulumi.Input<string>;
    }

    export interface WatermarkTemplateTextTemplate {
        /**
         * Text transparency. Value range: (0, 1] 0: completely transparent  1: completely opaque Default value: 1.
         */
        fontAlpha: pulumi.Input<number>;
        /**
         * Font color in 0xRRGGBB format. Default value: 0xFFFFFF (white).
         */
        fontColor: pulumi.Input<string>;
        /**
         * Font size in Npx format where N is a numeric value.
         */
        fontSize: pulumi.Input<string>;
        /**
         * Font type. Currently, two types are supported: simkai.ttf: both Chinese and English are supported;  arial.ttf: only English is supported.
         */
        fontType: pulumi.Input<string>;
    }
}

export namespace Vpc {
    export interface FlowLogFlowLogStorage {
        /**
         * Specify storage instance id, required while `storageType` is `ckafka`.
         */
        storageId?: pulumi.Input<string>;
        /**
         * Specify storage topic id, required while `storageType` is `ckafka`.
         */
        storageTopic?: pulumi.Input<string>;
    }

    export interface GetClassicLinkInstancesFilter {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: string;
        /**
         * The attribute value. If there are multiple Values for one Filter, the logical relation between these Values under the same Filter is `OR`.
         */
        values: string[];
    }

    export interface GetClassicLinkInstancesFilterArgs {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: pulumi.Input<string>;
        /**
         * The attribute value. If there are multiple Values for one Filter, the logical relation between these Values under the same Filter is `OR`.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetCvmInstancesFilter {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: string;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: string[];
    }

    export interface GetCvmInstancesFilterArgs {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetNetDetectStatesFilter {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: string;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: string[];
    }

    export interface GetNetDetectStatesFilterArgs {
        /**
         * The attribute name. If more than one Filter exists, the logical relation between these Filters is `AND`.
         */
        name: pulumi.Input<string>;
        /**
         * Attribute value. If multiple values exist in one filter, the logical relationship between these values is `OR`. For a `bool` parameter, the valid values include `TRUE` and `FALSE`.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface Ipv6SubnetCidrBlockIpv6SubnetCidrBlocks {
        /**
         * `IPv6` subnet segment. Such as: `3402:4e00:20:1001::/64`.
         */
        ipv6CidrBlock: pulumi.Input<string>;
        /**
         * Subnet instance `ID`. Such as:`subnet-pxir56ns`.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface NetworkAclQuintupleNetworkAclQuintupleSet {
        /**
         * Network ACL quintuple outbound rule.
         */
        egresses?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclQuintupleNetworkAclQuintupleSetEgress>[]>;
        /**
         * Network ACL quintuple inbound rule.
         */
        ingresses?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclQuintupleNetworkAclQuintupleSetIngress>[]>;
    }

    export interface NetworkAclQuintupleNetworkAclQuintupleSetEgress {
        /**
         * Action, ACCEPT or DROP.
         */
        action?: pulumi.Input<string>;
        /**
         * Creation time, used as an output parameter of DescribeNetworkAclQuintupleEntries.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Destination CIDR.
         */
        destinationCidr?: pulumi.Input<string>;
        /**
         * Destination port (all, single port, range). When Protocol is ALL or ICMP, Port cannot be specified.
         */
        destinationPort?: pulumi.Input<string>;
        /**
         * Direction, INGRESS or EGRESS, is used as an output parameter of DescribeNetworkAclQuintupleEntries.
         */
        networkAclDirection?: pulumi.Input<string>;
        /**
         * Unique ID of a network ACL entry.
         */
        networkAclQuintupleEntryId?: pulumi.Input<string>;
        /**
         * Priority, starting from 1.
         */
        priority?: pulumi.Input<number>;
        /**
         * Protocol, value: TCP,UDP, ICMP, ALL.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Source CIDR.
         */
        sourceCidr?: pulumi.Input<string>;
        /**
         * Source port (all, single port, range). When Protocol is ALL or ICMP, Port cannot be specified.
         */
        sourcePort?: pulumi.Input<string>;
    }

    export interface NetworkAclQuintupleNetworkAclQuintupleSetIngress {
        /**
         * Action, ACCEPT or DROP.
         */
        action?: pulumi.Input<string>;
        /**
         * Creation time, used as an output parameter of DescribeNetworkAclQuintupleEntries.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Destination CIDR.
         */
        destinationCidr?: pulumi.Input<string>;
        /**
         * Destination port (all, single port, range). When Protocol is ALL or ICMP, Port cannot be specified.
         */
        destinationPort?: pulumi.Input<string>;
        /**
         * Direction, INGRESS or EGRESS, is used as an output parameter of DescribeNetworkAclQuintupleEntries.
         */
        networkAclDirection?: pulumi.Input<string>;
        /**
         * Unique ID of a network ACL entry.
         */
        networkAclQuintupleEntryId?: pulumi.Input<string>;
        /**
         * Priority, starting from 1.
         */
        priority?: pulumi.Input<number>;
        /**
         * Protocol, value: TCP,UDP, ICMP, ALL.
         */
        protocol?: pulumi.Input<string>;
        /**
         * 源CIDR。.
         */
        sourceCidr?: pulumi.Input<string>;
        /**
         * source port (all, single port, range). When the protocol is ALL or ICMP, the port cannot be specified.
         */
        sourcePort?: pulumi.Input<string>;
    }

    export interface SnapshotPolicyAttachmentInstance {
        /**
         * InstanceId.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Instance name.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * The region where the instance is located.
         */
        instanceRegion: pulumi.Input<string>;
        /**
         * Instance type, currently supports set: `securitygroup`.
         */
        instanceType: pulumi.Input<string>;
        /**
         * Snapshot policy Id.
         */
        snapshotPolicyId?: pulumi.Input<string>;
    }

    export interface SnapshotPolicyBackupPolicy {
        /**
         * Backup cycle time, the value can be monday, tuesday, wednesday, thursday, friday, saturday, sunday.
         */
        backupDay: pulumi.Input<string>;
        /**
         * Backup time point, format:HH:mm:ss.
         */
        backupTime: pulumi.Input<string>;
    }
}

export namespace Vpn {
    export interface ConnectionBgpConfig {
        /**
         * Cloud BGP address. It must be allocated from within the BGP tunnel network segment.
         */
        localBgpIp: pulumi.Input<string>;
        /**
         * User side BGP address. It must be allocated from within the BGP tunnel network segment.
         */
        remoteBgpIp: pulumi.Input<string>;
        /**
         * BGP tunnel segment.
         */
        tunnelCidr: pulumi.Input<string>;
    }

    export interface ConnectionHealthCheckConfig {
        /**
         * Detection interval, Tencent Cloud's interval between two health checks, range [1000-5000], Unit: ms.
         */
        probeInterval?: pulumi.Input<number>;
        /**
         * Detection times, perform route switching after N consecutive health check failures, range [3-8], Unit: times.
         */
        probeThreshold?: pulumi.Input<number>;
        /**
         * Detection timeout, range [10-5000], Unit: ms.
         */
        probeTimeout?: pulumi.Input<number>;
        /**
         * Detection mode, default is `NQA`, cannot be modified.
         */
        probeType?: pulumi.Input<string>;
    }

    export interface ConnectionSecurityGroupPolicy {
        /**
         * Local cidr block.
         */
        localCidrBlock: pulumi.Input<string>;
        /**
         * Remote cidr block list.
         */
        remoteCidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CustomerGatewayConfigurationDownloadCustomerGatewayVendor {
        /**
         * Platform.
         */
        platform: pulumi.Input<string>;
        /**
         * SoftwareVersion.
         */
        softwareVersion: pulumi.Input<string>;
        /**
         * VendorName.
         */
        vendorName: pulumi.Input<string>;
    }

}

export namespace Waf {
    export interface AntiInfoLeakStrategy {
        /**
         * Matching Content. If field is returncode support: 400, 403, 404, 4xx, 500, 501, 502, 504, 5xx; If field is information support: idcard, phone, bankcard; If field is keywords users input matching content themselves.
         */
        content: pulumi.Input<string>;
        /**
         * Matching Fields. support: returncode, keywords, information.
         */
        field: pulumi.Input<string>;
    }

    export interface ClbDomainLoadBalancerSet {
        /**
         * Unique ID of listener in LB.
         */
        listenerId: pulumi.Input<string>;
        /**
         * Listener name.
         */
        listenerName: pulumi.Input<string>;
        /**
         * LoadBalancer unique ID.
         */
        loadBalancerId: pulumi.Input<string>;
        /**
         * LoadBalancer name.
         */
        loadBalancerName: pulumi.Input<string>;
        /**
         * Network type for load balancer.
         */
        loadBalancerType?: pulumi.Input<string>;
        /**
         * VPCID for load balancer, public network is -1, and internal network is filled in according to actual conditions.
         */
        numericalVpcId?: pulumi.Input<number>;
        /**
         * Protocol of listener, http or https.
         */
        protocol: pulumi.Input<string>;
        /**
         * LoadBalancer region.
         */
        region: pulumi.Input<string>;
        /**
         * LoadBalancer IP.
         */
        vip: pulumi.Input<string>;
        /**
         * LoadBalancer port.
         */
        vport: pulumi.Input<number>;
        /**
         * LoadBalancer zone.
         */
        zone: pulumi.Input<string>;
    }

    export interface CustomRuleStrategy {
        /**
         * Matching parameters.
         */
        arg: pulumi.Input<string>;
        /**
         * Logical symbol.
         */
        compareFunc: pulumi.Input<string>;
        /**
         * Matching Content.
         */
        content: pulumi.Input<string>;
        /**
         * Matching Fields.
         */
        field: pulumi.Input<string>;
    }

    export interface CustomWhiteRuleStrategy {
        /**
         * Matching parameters.
         */
        arg: pulumi.Input<string>;
        /**
         * Logical symbol.
         */
        compareFunc: pulumi.Input<string>;
        /**
         * Matching Content.
         */
        content: pulumi.Input<string>;
        /**
         * Matching Fields.
         */
        field: pulumi.Input<string>;
    }

    export interface IpAccessControlItem {
        /**
         * Action value 40 is whitelist, 42 is blacklist.
         */
        action: pulumi.Input<number>;
        /**
         * ID of the resource.
         */
        id?: pulumi.Input<string>;
        /**
         * IP address.
         */
        ip: pulumi.Input<string>;
        /**
         * Note info.
         */
        note: pulumi.Input<string>;
        /**
         * Source.
         */
        source?: pulumi.Input<string>;
        /**
         * Valid status.
         */
        validStatus?: pulumi.Input<number>;
        /**
         * Effective date, with a second level timestamp value. For example, 1680570420 represents 2023-04-04 09:07:00; 2019571199 means permanently effective.
         */
        validTs: pulumi.Input<number>;
    }

    export interface IpAccessControlV2JobDateTime {
        /**
         * Time parameters for periodic execution
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        crons?: pulumi.Input<pulumi.Input<inputs.Waf.IpAccessControlV2JobDateTimeCron>[]>;
        /**
         * Time zone
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeTZone?: pulumi.Input<string>;
        /**
         * Time parameters for scheduled execution
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        timeds?: pulumi.Input<pulumi.Input<inputs.Waf.IpAccessControlV2JobDateTimeTimed>[]>;
    }

    export interface IpAccessControlV2JobDateTimeCron {
        /**
         * Days in each month for execution
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        days?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * End time
         *
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Start time
         *
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        startTime?: pulumi.Input<string>;
        /**
         * Days of each week for execution
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        wDays?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface IpAccessControlV2JobDateTimeTimed {
        /**
         * End timestamp, in seconds
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        endDateTime?: pulumi.Input<number>;
        /**
         * Start timestamp, in seconds
         * Note: This field may return null, indicating that no valid values can be obtained.
         */
        startDateTime?: pulumi.Input<number>;
    }

    export interface SaasDomainPort {
        /**
         * Nginx server ID.
         */
        nginxServerId?: pulumi.Input<string>;
        /**
         * Listening port.
         */
        port: pulumi.Input<string>;
        /**
         * The listening protocol of listening port.
         */
        protocol: pulumi.Input<string>;
        /**
         * The upstream port for listening port.
         */
        upstreamPort: pulumi.Input<string>;
        /**
         * The upstream protocol for listening port.
         */
        upstreamProtocol: pulumi.Input<string>;
    }
}

export namespace Wedata {
    export interface BaselineAlarmRuleDto {
        /**
         * Important;Urgent;Normal.
         */
        alarmLevelType?: pulumi.Input<string>;
        /**
         * Alarm Rule ID.
         */
        alarmRuleId?: pulumi.Input<string>;
    }

    export interface BaselineBaselineCreateAlarmRuleRequest {
        /**
         * Alarm Level, 1. Normal, 2. Important, 3. Urgent (default is 1. Normal)Note: This field may return null, indicating no valid value.
         */
        alarmLevel?: pulumi.Input<number>;
        /**
         * Alarm Recipient IDsNote: This field may return null, indicating no valid value.
         */
        alarmRecipientIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alarm Recipient Type: 1. Specified Personnel, 2. Task Owner, 3. Duty Roster (default is 1. Specified Personnel)Note: This field may return null, indicating no valid value.
         */
        alarmRecipientType?: pulumi.Input<number>;
        /**
         * Alarm RecipientsNote: This field may return null, indicating no valid value.
         */
        alarmRecipients?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alarm Types, 1. Failure Alarm, 2. Timeout Alarm, 3. Success Alarm, 4. Baseline Violation, 5. Baseline Warning, 6. Baseline Task Failure (default is 1. Failure Alarm)Note: This field may return null, indicating no valid value.
         */
        alarmTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Alarm Methods, 1. Email, 2. SMS, 3. WeChat, 4. Voice, 5. Enterprise WeChat, 6. HTTP, 7. Enterprise WeChat Group; Alarm method code list (default is 1. Email)Note: This field may return null, indicating no valid value.
         */
        alarmWays?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Creator UINNote: This field may return null, indicating no valid value.
         */
        creator?: pulumi.Input<string>;
        /**
         * Creator NameNote: This field may return null, indicating no valid value.
         */
        creatorId?: pulumi.Input<string>;
        /**
         * Extended Information, 1. Estimated Runtime (default), 2. Estimated Completion Time, 3. Estimated Scheduling Time, 4. Incomplete within the Cycle; Value Types: 1. Specified Value, 2. Historical Average (default is 1. Specified Value)Note: This field may return null, indicating no valid value.
         */
        extInfo?: pulumi.Input<string>;
        /**
         * Monitoring ObjectsNote: This field may return null, indicating no valid value.
         */
        monitorObjectIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Monitoring Type, 1. Task, 2. Workflow, 3. Project, 4. Baseline (default is 1. Task)Note: This field may return null, indicating no valid value.
         */
        monitorType?: pulumi.Input<number>;
        /**
         * Project NameNote: This field may return null, indicating no valid value.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Rule NameNote: This field may return null, indicating no valid value.
         */
        ruleName?: pulumi.Input<string>;
    }

    export interface BaselinePromiseTask {
        /**
         * Project ID.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Task Scheduling Cycle.
         */
        taskCycle?: pulumi.Input<string>;
        /**
         * Task ID.
         */
        taskId?: pulumi.Input<string>;
        /**
         * Task Owner Name.
         */
        taskInChargeName?: pulumi.Input<string>;
        /**
         * Task Owner ID.
         */
        taskInChargeUin?: pulumi.Input<string>;
        /**
         * Task Name.
         */
        taskName?: pulumi.Input<string>;
        /**
         * Workflow ID.
         */
        workflowId?: pulumi.Input<string>;
        /**
         * Workflow Name.
         */
        workflowName?: pulumi.Input<string>;
    }

    export interface DqRuleCompareRule {
        /**
         * Periodic Indicates the default period of a template, in secondsNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        cycleStep?: pulumi.Input<number>;
        /**
         * Comparison condition listNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        items?: pulumi.Input<pulumi.Input<inputs.Wedata.DqRuleCompareRuleItem>[]>;
    }

    export interface DqRuleCompareRuleItem {
        /**
         * Comparison type 1. Fixed value 2. Fluctuating value 3. Comparison of value range 4. Enumeration range comparison 5. Do not compareNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        compareType?: pulumi.Input<number>;
        /**
         * Comparison operation type &amp;lt; &amp;lt;= == =&amp;gt; &amp;gt;Note: This field may return null, indicating that a valid value cannot be obtained.
         */
        operator?: pulumi.Input<string>;
        /**
         * Quality statistics Type 1. Absolute value 2. Increase 3. Decrease 4. C contains 5. N C does not containNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        valueComputeType?: pulumi.Input<number>;
        /**
         * Compare the threshold listNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        valueLists?: pulumi.Input<pulumi.Input<inputs.Wedata.DqRuleCompareRuleItemValueList>[]>;
    }

    export interface DqRuleCompareRuleItemValueList {
        /**
         * Threshold valueNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        value?: pulumi.Input<string>;
        /**
         * Threshold type 1. Low threshold 2. High threshold 3. Common threshold 4. Enumerated valueNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        valueType?: pulumi.Input<number>;
    }

    export interface DqRuleFieldConfig {
        /**
         * Library table variableNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        tableConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.DqRuleFieldConfigTableConfig>[]>;
        /**
         * Where variableNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        whereConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.DqRuleFieldConfigWhereConfig>[]>;
    }

    export interface DqRuleFieldConfigTableConfig {
        /**
         * Database idNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        databaseId?: pulumi.Input<string>;
        /**
         * Database nameNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        databaseName?: pulumi.Input<string>;
        /**
         * Field variableNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.DqRuleFieldConfigTableConfigFieldConfig>[]>;
        /**
         * Table idNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        tableId?: pulumi.Input<string>;
        /**
         * Table keyNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        tableKey?: pulumi.Input<string>;
        /**
         * Table nameNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        tableName?: pulumi.Input<string>;
    }

    export interface DqRuleFieldConfigTableConfigFieldConfig {
        /**
         * Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldDataType?: pulumi.Input<string>;
        /**
         * Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldKey?: pulumi.Input<string>;
        /**
         * Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldValue?: pulumi.Input<string>;
    }

    export interface DqRuleFieldConfigWhereConfig {
        /**
         * Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldDataType?: pulumi.Input<string>;
        /**
         * Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldKey?: pulumi.Input<string>;
        /**
         * Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
         */
        fieldValue?: pulumi.Input<string>;
    }

    export interface FunctionResourceList {
        /**
         * Resource ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Resource MD5 Value.
         */
        md5?: pulumi.Input<string>;
        /**
         * Resource Name.
         */
        name: pulumi.Input<string>;
        /**
         * Resource Path.
         */
        path: pulumi.Input<string>;
        /**
         * Resource Type.
         */
        type?: pulumi.Input<string>;
    }

    export interface GetDataSourceListFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * Filter value.
         */
        values?: string[];
    }

    export interface GetDataSourceListFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Filter value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDataSourceListOrderField {
        /**
         * OrderFields rule.
         */
        direction: string;
        /**
         * OrderFields name.
         */
        name: string;
    }

    export interface GetDataSourceListOrderFieldArgs {
        /**
         * OrderFields rule.
         */
        direction: pulumi.Input<string>;
        /**
         * OrderFields name.
         */
        name: pulumi.Input<string>;
    }

    export interface GetDataSourceWithoutInfoFilter {
        /**
         * Filter name.
         */
        name?: string;
        /**
         * Filter value.
         */
        values?: string[];
    }

    export interface GetDataSourceWithoutInfoFilterArgs {
        /**
         * Filter name.
         */
        name?: pulumi.Input<string>;
        /**
         * Filter value.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDataSourceWithoutInfoOrderField {
        /**
         * OrderFields rule.
         */
        direction: string;
        /**
         * OrderFields name.
         */
        name: string;
    }

    export interface GetDataSourceWithoutInfoOrderFieldArgs {
        /**
         * OrderFields rule.
         */
        direction: pulumi.Input<string>;
        /**
         * OrderFields name.
         */
        name: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfo {
        /**
         * User App Id.
         */
        appId?: pulumi.Input<string>;
        /**
         * Task configuration.
         */
        configs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoConfig>[]>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Creator User ID.
         */
        creatorUin?: pulumi.Input<string>;
        /**
         * Data proxy url.
         */
        dataProxyUrls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execute context.
         */
        executeContexts?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoExecuteContext>[]>;
        /**
         * Executor group name.
         */
        executorGroupName?: pulumi.Input<string>;
        /**
         * Executor resource ID.
         */
        executorId?: pulumi.Input<string>;
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoExtConfig>[]>;
        /**
         * Whether the task been submitted.
         */
        hasVersion?: pulumi.Input<boolean>;
        /**
         * InLong manager url.
         */
        inLongManagerUrl?: pulumi.Input<string>;
        /**
         * InLong manager version.
         */
        inLongManagerVersion?: pulumi.Input<string>;
        /**
         * InLong stream id.
         */
        inLongStreamId?: pulumi.Input<string>;
        /**
         * Incharge user.
         */
        incharge?: pulumi.Input<string>;
        /**
         * Input datasource type.
         */
        inputDatasourceType?: pulumi.Input<string>;
        /**
         * Instance version.
         */
        instanceVersion?: pulumi.Input<number>;
        /**
         * The last time the task was run.
         */
        lastRunTime?: pulumi.Input<string>;
        /**
         * Whether the task been locked.
         */
        locked?: pulumi.Input<boolean>;
        /**
         * User locked task.
         */
        locker?: pulumi.Input<string>;
        /**
         * Node mapping.
         */
        mappings?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoMapping>[]>;
        /**
         * Number of reads.
         */
        numRecordsIn?: pulumi.Input<number>;
        /**
         * Number of writes.
         */
        numRecordsOut?: pulumi.Input<number>;
        /**
         * Times of restarts.
         */
        numRestarts?: pulumi.Input<number>;
        /**
         * Offline task scheduling configuration.
         */
        offlineTaskAddEntity?: pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity>;
        /**
         * Operator User ID.
         */
        operatorUin?: pulumi.Input<string>;
        /**
         * Output datasource type.
         */
        outputDatasourceType?: pulumi.Input<string>;
        /**
         * Owner User ID.
         */
        ownerUin?: pulumi.Input<string>;
        /**
         * Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
         */
        readPhase?: pulumi.Input<number>;
        /**
         * Read latency.
         */
        readerDelay?: pulumi.Input<number>;
        /**
         * The amount of resources consumed by real-time task.
         */
        runningCu?: pulumi.Input<number>;
        /**
         * Task scheduling id (job id such as oceanus or us).
         */
        scheduleTaskId?: pulumi.Input<string>;
        /**
         * Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
         */
        status?: pulumi.Input<number>;
        /**
         * The time the task was stopped.
         */
        stopTime?: pulumi.Input<string>;
        /**
         * Whether the task version has been submitted for operation and maintenance.
         */
        submit?: pulumi.Input<boolean>;
        /**
         * Resource tiering status, 0: in progress, 1: successful, 2: failed.
         */
        switchResource?: pulumi.Input<number>;
        /**
         * Synchronization type: 1. Whole database synchronization, 2. Single table synchronization.
         */
        syncType?: pulumi.Input<number>;
        /**
         * Task alarm regular.
         */
        taskAlarmRegularLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Inlong Task Group ID.
         */
        taskGroupId?: pulumi.Input<string>;
        /**
         * Task display mode, 0: canvas mode, 1: form mode.
         */
        taskMode?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updateTime?: pulumi.Input<string>;
        /**
         * The workflow id to which the task belongs.
         */
        workflowId?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoExecuteContext {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoMapping {
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoMappingExtConfig>[]>;
        /**
         * Schema mapping information.
         */
        schemaMappings?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoMappingSchemaMapping>[]>;
        /**
         * Sink node ID.
         */
        sinkId?: pulumi.Input<string>;
        /**
         * Source node ID.
         */
        sourceId?: pulumi.Input<string>;
        /**
         * Source node schema information.
         */
        sourceSchemas?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoMappingSourceSchema>[]>;
    }

    export interface IntegrationOfflineTaskTaskInfoMappingExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoMappingSchemaMapping {
        /**
         * Schema ID from sink node.
         */
        sinkSchemaId: pulumi.Input<string>;
        /**
         * Schema ID from source node.
         */
        sourceSchemaId: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoMappingSourceSchema {
        /**
         * Schema alias.
         */
        alias?: pulumi.Input<string>;
        /**
         * Schema comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Schema ID.
         */
        id: pulumi.Input<string>;
        /**
         * Schema name.
         */
        name: pulumi.Input<string>;
        /**
         * Schema extended attributes.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty>[]>;
        /**
         * Schema type.
         */
        type: pulumi.Input<string>;
        /**
         * Schema value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty {
        /**
         * Attributes name.
         */
        name?: pulumi.Input<string>;
        /**
         * Attributes value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity {
        /**
         * Crontab expression.
         */
        crontabExpression?: pulumi.Input<string>;
        /**
         * Scheduling type, 0: crontab type, 1: minutes, 2: hours, 3: days, 4: weeks, 5: months, 6: one-time, 7: user-driven, 10: elastic period (week), 11: elastic period (month), 12: year, 13: instant trigger.
         */
        cycleType?: pulumi.Input<number>;
        /**
         * Scheduling execution end time.
         */
        executionEndTime?: pulumi.Input<string>;
        /**
         * Scheduling execution start time.
         */
        executionStartTime?: pulumi.Input<string>;
        /**
         * Whether to retry.
         */
        retriable?: pulumi.Input<number>;
        /**
         * Retry waiting time, unit is minutes.
         */
        retryWait?: pulumi.Input<number>;
        /**
         * Self-dependent rules, 1: Ordered serial one at a time, queued execution, 2: Unordered serial one at a time, not queued execution, 3: Parallel, multiple at once.
         */
        selfDepend?: pulumi.Input<number>;
        /**
         * Number of retries.
         */
        tryLimit?: pulumi.Input<number>;
    }

    export interface IntegrationRealtimeTaskTaskInfo {
        /**
         * User App Id.
         */
        appId?: pulumi.Input<string>;
        /**
         * Task configuration.
         */
        configs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoConfig>[]>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Creator User ID.
         */
        creatorUin?: pulumi.Input<string>;
        /**
         * Data proxy url.
         */
        dataProxyUrls?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Execute context.
         */
        executeContexts?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoExecuteContext>[]>;
        /**
         * Executor group name.
         */
        executorGroupName?: pulumi.Input<string>;
        /**
         * Executor resource ID.
         */
        executorId?: pulumi.Input<string>;
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoExtConfig>[]>;
        /**
         * Whether the task been submitted.
         */
        hasVersion?: pulumi.Input<boolean>;
        /**
         * InLong manager url.
         */
        inLongManagerUrl?: pulumi.Input<string>;
        /**
         * InLong manager version.
         */
        inLongManagerVersion?: pulumi.Input<string>;
        /**
         * InLong stream id.
         */
        inLongStreamId?: pulumi.Input<string>;
        /**
         * Incharge user.
         */
        incharge?: pulumi.Input<string>;
        /**
         * Input datasource type.
         */
        inputDatasourceType?: pulumi.Input<string>;
        /**
         * Instance version.
         */
        instanceVersion?: pulumi.Input<number>;
        /**
         * The last time the task was run.
         */
        lastRunTime?: pulumi.Input<string>;
        /**
         * Whether the task been locked.
         */
        locked?: pulumi.Input<boolean>;
        /**
         * User locked task.
         */
        locker?: pulumi.Input<string>;
        /**
         * Node mapping.
         */
        mappings?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoMapping>[]>;
        /**
         * Task Node Information.
         */
        nodes?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNode>[]>;
        /**
         * Number of reads.
         */
        numRecordsIn?: pulumi.Input<number>;
        /**
         * Number of writes.
         */
        numRecordsOut?: pulumi.Input<number>;
        /**
         * Times of restarts.
         */
        numRestarts?: pulumi.Input<number>;
        /**
         * Operator User ID.
         */
        operatorUin?: pulumi.Input<string>;
        /**
         * Output datasource type.
         */
        outputDatasourceType?: pulumi.Input<string>;
        /**
         * Owner User ID.
         */
        ownerUin?: pulumi.Input<string>;
        /**
         * Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
         */
        readPhase?: pulumi.Input<number>;
        /**
         * Read latency.
         */
        readerDelay?: pulumi.Input<number>;
        /**
         * The amount of resources consumed by real-time task.
         */
        runningCu?: pulumi.Input<number>;
        /**
         * Task scheduling id (job id such as oceanus or us).
         */
        scheduleTaskId?: pulumi.Input<string>;
        /**
         * Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
         */
        status?: pulumi.Input<number>;
        /**
         * The time the task was stopped.
         */
        stopTime?: pulumi.Input<string>;
        /**
         * Whether the task version has been submitted for operation and maintenance.
         */
        submit?: pulumi.Input<boolean>;
        /**
         * Resource tiering status, 0: in progress, 1: successful, 2: failed.
         */
        switchResource?: pulumi.Input<number>;
        /**
         * Task alarm regular.
         */
        taskAlarmRegularLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Inlong Task Group ID.
         */
        taskGroupId?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updateTime?: pulumi.Input<string>;
        /**
         * The workflow id to which the task belongs.
         */
        workflowId?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoExecuteContext {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoMapping {
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoMappingExtConfig>[]>;
        /**
         * Schema mapping information.
         */
        schemaMappings?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoMappingSchemaMapping>[]>;
        /**
         * Sink node ID.
         */
        sinkId?: pulumi.Input<string>;
        /**
         * Source node ID.
         */
        sourceId?: pulumi.Input<string>;
        /**
         * Source node schema information.
         */
        sourceSchemas?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoMappingSourceSchema>[]>;
    }

    export interface IntegrationRealtimeTaskTaskInfoMappingExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoMappingSchemaMapping {
        /**
         * Schema ID from sink node.
         */
        sinkSchemaId: pulumi.Input<string>;
        /**
         * Schema ID from source node.
         */
        sourceSchemaId: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoMappingSourceSchema {
        /**
         * Schema alias.
         */
        alias?: pulumi.Input<string>;
        /**
         * Schema comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Schema ID.
         */
        id: pulumi.Input<string>;
        /**
         * Schema name.
         */
        name: pulumi.Input<string>;
        /**
         * Schema extended attributes.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty>[]>;
        /**
         * Schema type.
         */
        type: pulumi.Input<string>;
        /**
         * Schema value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty {
        /**
         * Attributes name.
         */
        name?: pulumi.Input<string>;
        /**
         * Attributes value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNode {
        /**
         * User App Id.
         */
        appId?: pulumi.Input<string>;
        /**
         * Node configuration information.
         */
        configs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeConfig>[]>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Creator User ID.
         */
        creatorUin?: pulumi.Input<string>;
        /**
         * Data source type: MYSQL, POSTGRE, ORACLE, SQLSERVER, FTP, HIVE, HDFS, ICEBERG, KAFKA, HBASE, SPARK, TBASE, DB2, DM, GAUSSDB, GBASE, IMPALA, ES, S3_DATAINSIGHT, GREENPLUM, PHOENIX, SAP_HANA, SFTP, OCEANBASE, CLICKHOUSE, KUDU, VERTICA, REDIS, COS, DLC, DORIS, CKAFKA, DTS_KAFKA, S3, CDW, TDSQLC, TDSQL, MONGODB, SYBASE, REST_API, StarRocks, TCHOUSE_X.
         */
        dataSourceType?: pulumi.Input<string>;
        /**
         * Datasource ID.
         */
        datasourceId?: pulumi.Input<string>;
        /**
         * Node Description.
         */
        description?: pulumi.Input<string>;
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeExtConfig>[]>;
        /**
         * Node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Node Name.
         */
        name?: pulumi.Input<string>;
        /**
         * Node mapping.
         */
        nodeMapping?: pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeNodeMapping>;
        /**
         * Node type: INPUT,OUTPUT,JOIN,FILTER,TRANSFORM.
         */
        nodeType?: pulumi.Input<string>;
        /**
         * Operator User ID.
         */
        operatorUin?: pulumi.Input<string>;
        /**
         * Owner User ID.
         */
        ownerUin?: pulumi.Input<string>;
        /**
         * Project ID.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Schema information.
         */
        schemas?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeSchema>[]>;
        /**
         * The task id to which the node belongs.
         */
        taskId?: pulumi.Input<string>;
        /**
         * Update time.
         */
        updateTime?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeNodeMapping {
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig>[]>;
        /**
         * Schema mapping information.
         */
        schemaMappings?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping>[]>;
        /**
         * Sink node ID.
         */
        sinkId?: pulumi.Input<string>;
        /**
         * Source node ID.
         */
        sourceId?: pulumi.Input<string>;
        /**
         * Source node schema information.
         */
        sourceSchemas?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema>[]>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping {
        /**
         * Schema ID from sink node.
         */
        sinkSchemaId: pulumi.Input<string>;
        /**
         * Schema ID from source node.
         */
        sourceSchemaId: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema {
        /**
         * Schema alias.
         */
        alias?: pulumi.Input<string>;
        /**
         * Schema comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Schema ID.
         */
        id: pulumi.Input<string>;
        /**
         * Schema name.
         */
        name: pulumi.Input<string>;
        /**
         * Schema extended attributes.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty>[]>;
        /**
         * Schema type.
         */
        type: pulumi.Input<string>;
        /**
         * Schema value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty {
        /**
         * Attributes name.
         */
        name?: pulumi.Input<string>;
        /**
         * Attributes value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeSchema {
        /**
         * Schema alias.
         */
        alias?: pulumi.Input<string>;
        /**
         * Schema comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Schema ID.
         */
        id: pulumi.Input<string>;
        /**
         * Schema name.
         */
        name: pulumi.Input<string>;
        /**
         * Schema extended attributes.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationRealtimeTaskTaskInfoNodeSchemaProperty>[]>;
        /**
         * Schema type.
         */
        type: pulumi.Input<string>;
        /**
         * Schema value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationRealtimeTaskTaskInfoNodeSchemaProperty {
        /**
         * Attributes name.
         */
        name?: pulumi.Input<string>;
        /**
         * Attributes value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfo {
        /**
         * User App Id.
         */
        appId?: pulumi.Input<string>;
        /**
         * Node configuration information.
         */
        configs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoConfig>[]>;
        /**
         * Create time.
         */
        createTime?: pulumi.Input<string>;
        /**
         * Creator User ID.
         */
        creatorUin?: pulumi.Input<string>;
        /**
         * Datasource ID.
         */
        datasourceId?: pulumi.Input<string>;
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoExtConfig>[]>;
        /**
         * Node mapping.
         */
        nodeMapping?: pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoNodeMapping>;
        /**
         * Operator User ID.
         */
        operatorUin?: pulumi.Input<string>;
        /**
         * Owner User ID.
         */
        ownerUin?: pulumi.Input<string>;
        /**
         * Schema information.
         */
        schemas?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoSchema>[]>;
        /**
         * Update time.
         */
        updateTime?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoNodeMapping {
        /**
         * Node extension configuration information.
         */
        extConfigs?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoNodeMappingExtConfig>[]>;
        /**
         * Schema mapping information.
         */
        schemaMappings?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping>[]>;
        /**
         * Sink node ID.
         */
        sinkId?: pulumi.Input<string>;
        /**
         * Source node ID.
         */
        sourceId?: pulumi.Input<string>;
        /**
         * Source node schema information.
         */
        sourceSchemas?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoNodeMappingSourceSchema>[]>;
    }

    export interface IntegrationTaskNodeNodeInfoNodeMappingExtConfig {
        /**
         * Configuration name.
         */
        name?: pulumi.Input<string>;
        /**
         * Configuration value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping {
        /**
         * Schema ID from sink node.
         */
        sinkSchemaId: pulumi.Input<string>;
        /**
         * Schema ID from source node.
         */
        sourceSchemaId: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoNodeMappingSourceSchema {
        /**
         * Schema alias.
         */
        alias?: pulumi.Input<string>;
        /**
         * Schema comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Schema ID.
         */
        id: pulumi.Input<string>;
        /**
         * Schema name.
         */
        name: pulumi.Input<string>;
        /**
         * Schema extended attributes.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty>[]>;
        /**
         * Schema type.
         */
        type: pulumi.Input<string>;
        /**
         * Schema value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty {
        /**
         * Attributes name.
         */
        name?: pulumi.Input<string>;
        /**
         * Attributes value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoSchema {
        /**
         * Schema alias.
         */
        alias?: pulumi.Input<string>;
        /**
         * Schema comment.
         */
        comment?: pulumi.Input<string>;
        /**
         * Schema ID.
         */
        id: pulumi.Input<string>;
        /**
         * Schema name.
         */
        name: pulumi.Input<string>;
        /**
         * Schema extended attributes.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.Wedata.IntegrationTaskNodeNodeInfoSchemaProperty>[]>;
        /**
         * Schema type.
         */
        type: pulumi.Input<string>;
        /**
         * Schema value.
         */
        value?: pulumi.Input<string>;
    }

    export interface IntegrationTaskNodeNodeInfoSchemaProperty {
        /**
         * Attributes name.
         */
        name?: pulumi.Input<string>;
        /**
         * Attributes value.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace config {
}
