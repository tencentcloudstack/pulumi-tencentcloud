// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a controlcenter batch apply account baselines
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.batch.ApplyAccountBaselines("example", {
 *     baselineConfigItems: [{
 *         configuration: "{\"Images\":[{\"Region\":\"ap-guangzhou\",\"ImageId\":\"img-mcdsiqrx\",\"ImageName\":\"demo1\"}, {\"Region\":\"ap-guangzhou\",\"ImageId\":\"img-esxgkots\",\"ImageName\":\"demo2\"}]}",
 *         identifier: "TCC-AF_SHARE_IMAGE",
 *     }],
 *     memberUinLists: [
 *         10037652245,
 *         10037652240,
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class ApplyAccountBaselines extends pulumi.CustomResource {
    /**
     * Get an existing ApplyAccountBaselines resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplyAccountBaselinesState, opts?: pulumi.CustomResourceOptions): ApplyAccountBaselines {
        return new ApplyAccountBaselines(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Batch/applyAccountBaselines:ApplyAccountBaselines';

    /**
     * Returns true if the given object is an instance of ApplyAccountBaselines.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplyAccountBaselines {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplyAccountBaselines.__pulumiType;
    }

    /**
     * List of baseline item configuration information.
     */
    public readonly baselineConfigItems!: pulumi.Output<outputs.Batch.ApplyAccountBaselinesBaselineConfigItem[]>;
    /**
     * Member account UIN, which is also the UIN of the account to which the baseline is applied.
     */
    public readonly memberUinLists!: pulumi.Output<number[]>;

    /**
     * Create a ApplyAccountBaselines resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplyAccountBaselinesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplyAccountBaselinesArgs | ApplyAccountBaselinesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplyAccountBaselinesState | undefined;
            resourceInputs["baselineConfigItems"] = state ? state.baselineConfigItems : undefined;
            resourceInputs["memberUinLists"] = state ? state.memberUinLists : undefined;
        } else {
            const args = argsOrState as ApplyAccountBaselinesArgs | undefined;
            if ((!args || args.baselineConfigItems === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineConfigItems'");
            }
            if ((!args || args.memberUinLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memberUinLists'");
            }
            resourceInputs["baselineConfigItems"] = args ? args.baselineConfigItems : undefined;
            resourceInputs["memberUinLists"] = args ? args.memberUinLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplyAccountBaselines.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplyAccountBaselines resources.
 */
export interface ApplyAccountBaselinesState {
    /**
     * List of baseline item configuration information.
     */
    baselineConfigItems?: pulumi.Input<pulumi.Input<inputs.Batch.ApplyAccountBaselinesBaselineConfigItem>[]>;
    /**
     * Member account UIN, which is also the UIN of the account to which the baseline is applied.
     */
    memberUinLists?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a ApplyAccountBaselines resource.
 */
export interface ApplyAccountBaselinesArgs {
    /**
     * List of baseline item configuration information.
     */
    baselineConfigItems: pulumi.Input<pulumi.Input<inputs.Batch.ApplyAccountBaselinesBaselineConfigItem>[]>;
    /**
     * Member account UIN, which is also the UIN of the account to which the baseline is applied.
     */
    memberUinLists: pulumi.Input<pulumi.Input<number>[]>;
}
