// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a COS resource to create a COS bucket and set its attributes.
 *
 * ## Example Usage
 *
 * ### Private Bucket
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const privateBucket = new tencentcloud.cos.Bucket("privateBucket", {
 *     bucket: appId.then(appId => `private-bucket-${appId}`),
 *     acl: "private",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Private Bucket with CDC cluster
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const privateBucket = new tencentcloud.cos.Bucket("privateBucket", {
 *     bucket: appId.then(appId => `private-bucket-${appId}`),
 *     cdcId: "cluster-262n63e8",
 *     acl: "private",
 *     versioningEnable: true,
 *     forceClean: true,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Enable SSE-KMS encryption
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const example = new tencentcloud.kms.Key("example", {
 *     alias: "tf-example-kms-key",
 *     description: "example of kms key",
 *     keyRotationEnabled: false,
 *     isEnabled: true,
 *     tags: {
 *         createdBy: "terraform",
 *     },
 * });
 * const bucketBasic = new tencentcloud.cos.Bucket("bucketBasic", {
 *     bucket: appId.then(appId => `tf-bucket-cdc-${appId}`),
 *     acl: "private",
 *     encryptionAlgorithm: "KMS",
 *     kmsId: example.id,
 *     versioningEnable: true,
 *     accelerationEnable: true,
 *     forceClean: true,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Creation of multiple available zone bucket
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const multiZoneBucket = new tencentcloud.cos.Bucket("multiZoneBucket", {
 *     bucket: appId.then(appId => `multi-zone-bucket-${appId}`),
 *     acl: "private",
 *     multiAz: true,
 *     versioningEnable: true,
 *     forceClean: true,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using verbose acl
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const bucketWithAcl = new tencentcloud.cos.Bucket("bucketWithAcl", {
 *     bucket: appId.then(appId => `bucketwith-acl-${appId}`),
 *     aclBody: `<AccessControlPolicy>
 * 	<Owner>
 * 		<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
 * 		<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
 * 	</Owner>
 * 	<AccessControlList>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
 * 				<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
 * 			</Grantee>
 * 			<Permission>READ</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
 * 				<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
 * 				<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
 * 			</Grantee>
 * 			<Permission>FULL_CONTROL</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
 * 				<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
 * 				<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
 * 			</Grantee>
 * 			<Permission>WRITE_ACP</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
 * 				<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
 * 			</Grantee>
 * 			<Permission>READ_ACP</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
 * 				<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
 * 			</Grantee>
 * 			<Permission>WRITE_ACP</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
 * 				<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
 * 				<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
 * 			</Grantee>
 * 			<Permission>READ</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
 * 				<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
 * 				<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
 * 			</Grantee>
 * 			<Permission>WRITE</Permission>
 * 		</Grant>
 * 		<Grant>
 * 			<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
 * 				<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
 * 			</Grantee>
 * 			<Permission>FULL_CONTROL</Permission>
 * 		</Grant>
 * 	</AccessControlList>
 * </AccessControlPolicy>
 * `,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Static Website
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const bucketWithStaticWebsite = new tencentcloud.cos.Bucket("bucketWithStaticWebsite", {
 *     bucket: appId.then(appId => `bucket-with-static-website-${appId}`),
 *     website: {
 *         indexDocument: "index.html",
 *         errorDocument: "error.html",
 *     },
 * });
 * export const endpointTest = bucketWithStaticWebsite.website.apply(website => website?.endpoint);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using CORS
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const bucketWithCors = new tencentcloud.cos.Bucket("bucketWithCors", {
 *     bucket: appId.then(appId => `bucket-with-cors-${appId}`),
 *     acl: "public-read-write",
 *     corsRules: [{
 *         allowedOrigins: ["http://*.abc.com"],
 *         allowedMethods: [
 *             "PUT",
 *             "POST",
 *         ],
 *         allowedHeaders: ["*"],
 *         maxAgeSeconds: 300,
 *         exposeHeaders: ["Etag"],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using CORS with CDC
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const bucketWithCors = new tencentcloud.cos.Bucket("bucketWithCors", {
 *     bucket: appId.then(appId => `bucket-with-cors-${appId}`),
 *     cdcId: "cluster-262n63e8",
 *     corsRules: [{
 *         allowedOrigins: ["http://*.abc.com"],
 *         allowedMethods: [
 *             "PUT",
 *             "POST",
 *         ],
 *         allowedHeaders: ["*"],
 *         maxAgeSeconds: 300,
 *         exposeHeaders: ["Etag"],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using object lifecycle
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const bucketWithLifecycle = new tencentcloud.cos.Bucket("bucketWithLifecycle", {
 *     bucket: appId.then(appId => `bucket-with-lifecycle-${appId}`),
 *     acl: "public-read-write",
 *     lifecycleRules: [{
 *         filterPrefix: "path1/",
 *         transitions: [{
 *             days: 30,
 *             storageClass: "STANDARD_IA",
 *         }],
 *         expiration: {
 *             days: 90,
 *         },
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using object lifecycle with CDC
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const bucketWithLifecycle = new tencentcloud.cos.Bucket("bucketWithLifecycle", {
 *     bucket: appId.then(appId => `bucket-with-lifecycle-${appId}`),
 *     cdcId: "cluster-262n63e8",
 *     acl: "private",
 *     lifecycleRules: [{
 *         filterPrefix: "path1/",
 *         expiration: {
 *             days: 90,
 *         },
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Using replication
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const info = tencentcloud.User.getInfo({});
 * const appId = info.then(info => info.appId);
 * const uin = info.then(info => info.uin);
 * const ownerUin = info.then(info => info.ownerUin);
 * const region = "ap-guangzhou";
 * const bucketReplicate = new tencentcloud.cos.Bucket("bucketReplicate", {
 *     bucket: appId.then(appId => `bucket-replicate-${appId}`),
 *     acl: "private",
 *     versioningEnable: true,
 * });
 * const bucketWithReplication = new tencentcloud.cos.Bucket("bucketWithReplication", {
 *     bucket: appId.then(appId => `bucket-with-replication-${appId}`),
 *     acl: "private",
 *     versioningEnable: true,
 *     replicaRole: Promise.all([ownerUin, uin]).then(([ownerUin, uin]) => `qcs::cam::uin/${ownerUin}:uin/${uin}`),
 *     replicaRules: [{
 *         id: "test-rep1",
 *         status: "Enabled",
 *         prefix: "dist",
 *         destinationBucket: pulumi.interpolate`qcs::cos:${region}::${bucketReplicate.bucket}`,
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * COS bucket can be imported, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Cos/bucket:Bucket bucket bucket-name
 * ```
 */
export class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketState, opts?: pulumi.CustomResourceOptions): Bucket {
        return new Bucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cos/bucket:Bucket';

    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bucket.__pulumiType;
    }

    /**
     * Enable bucket acceleration.
     */
    public readonly accelerationEnable!: pulumi.Output<boolean | undefined>;
    /**
     * The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
     */
    public readonly acl!: pulumi.Output<string | undefined>;
    /**
     * ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
     */
    public readonly aclBody!: pulumi.Output<string>;
    /**
     * The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * CDC cluster ID.
     */
    public readonly cdcId!: pulumi.Output<string | undefined>;
    /**
     * A rule of Cross-Origin Resource Sharing (documented below).
     */
    public readonly corsRules!: pulumi.Output<outputs.Cos.BucketCorsRule[] | undefined>;
    /**
     * The URL of this cos bucket.
     */
    public /*out*/ readonly cosBucketUrl!: pulumi.Output<string>;
    /**
     * Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
     */
    public readonly enableIntelligentTiering!: pulumi.Output<boolean>;
    /**
     * The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
     */
    public readonly encryptionAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Force cleanup all objects before delete bucket.
     */
    public readonly forceClean!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
     */
    public readonly intelligentTieringDays!: pulumi.Output<number>;
    /**
     * Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
     */
    public readonly intelligentTieringRequestFrequent!: pulumi.Output<number>;
    /**
     * The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
     */
    public readonly kmsId!: pulumi.Output<string | undefined>;
    /**
     * A configuration of object lifecycle management (documented below).
     */
    public readonly lifecycleRules!: pulumi.Output<outputs.Cos.BucketLifecycleRule[] | undefined>;
    /**
     * Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
     */
    public readonly logEnable!: pulumi.Output<boolean | undefined>;
    /**
     * The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
     */
    public readonly logPrefix!: pulumi.Output<string>;
    /**
     * The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
     */
    public readonly logTargetBucket!: pulumi.Output<string>;
    /**
     * Indicates whether to create a bucket of multi available zone.
     */
    public readonly multiAz!: pulumi.Output<boolean | undefined>;
    /**
     * Bucket Origin Domain settings.
     */
    public readonly originDomainRules!: pulumi.Output<outputs.Cos.BucketOriginDomainRule[] | undefined>;
    /**
     * Bucket Origin-Pull settings.
     */
    public readonly originPullRules!: pulumi.Output<outputs.Cos.BucketOriginPullRule[] | undefined>;
    /**
     * Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
     */
    public readonly replicaRole!: pulumi.Output<string | undefined>;
    /**
     * List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
     */
    public readonly replicaRules!: pulumi.Output<outputs.Cos.BucketReplicaRule[] | undefined>;
    /**
     * The tags of a bucket.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
     */
    public readonly versioningEnable!: pulumi.Output<boolean | undefined>;
    /**
     * A website object(documented below).
     */
    public readonly website!: pulumi.Output<outputs.Cos.BucketWebsite | undefined>;

    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketArgs | BucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketState | undefined;
            resourceInputs["accelerationEnable"] = state ? state.accelerationEnable : undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["aclBody"] = state ? state.aclBody : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["cdcId"] = state ? state.cdcId : undefined;
            resourceInputs["corsRules"] = state ? state.corsRules : undefined;
            resourceInputs["cosBucketUrl"] = state ? state.cosBucketUrl : undefined;
            resourceInputs["enableIntelligentTiering"] = state ? state.enableIntelligentTiering : undefined;
            resourceInputs["encryptionAlgorithm"] = state ? state.encryptionAlgorithm : undefined;
            resourceInputs["forceClean"] = state ? state.forceClean : undefined;
            resourceInputs["intelligentTieringDays"] = state ? state.intelligentTieringDays : undefined;
            resourceInputs["intelligentTieringRequestFrequent"] = state ? state.intelligentTieringRequestFrequent : undefined;
            resourceInputs["kmsId"] = state ? state.kmsId : undefined;
            resourceInputs["lifecycleRules"] = state ? state.lifecycleRules : undefined;
            resourceInputs["logEnable"] = state ? state.logEnable : undefined;
            resourceInputs["logPrefix"] = state ? state.logPrefix : undefined;
            resourceInputs["logTargetBucket"] = state ? state.logTargetBucket : undefined;
            resourceInputs["multiAz"] = state ? state.multiAz : undefined;
            resourceInputs["originDomainRules"] = state ? state.originDomainRules : undefined;
            resourceInputs["originPullRules"] = state ? state.originPullRules : undefined;
            resourceInputs["replicaRole"] = state ? state.replicaRole : undefined;
            resourceInputs["replicaRules"] = state ? state.replicaRules : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versioningEnable"] = state ? state.versioningEnable : undefined;
            resourceInputs["website"] = state ? state.website : undefined;
        } else {
            const args = argsOrState as BucketArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["accelerationEnable"] = args ? args.accelerationEnable : undefined;
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["aclBody"] = args ? args.aclBody : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["cdcId"] = args ? args.cdcId : undefined;
            resourceInputs["corsRules"] = args ? args.corsRules : undefined;
            resourceInputs["enableIntelligentTiering"] = args ? args.enableIntelligentTiering : undefined;
            resourceInputs["encryptionAlgorithm"] = args ? args.encryptionAlgorithm : undefined;
            resourceInputs["forceClean"] = args ? args.forceClean : undefined;
            resourceInputs["intelligentTieringDays"] = args ? args.intelligentTieringDays : undefined;
            resourceInputs["intelligentTieringRequestFrequent"] = args ? args.intelligentTieringRequestFrequent : undefined;
            resourceInputs["kmsId"] = args ? args.kmsId : undefined;
            resourceInputs["lifecycleRules"] = args ? args.lifecycleRules : undefined;
            resourceInputs["logEnable"] = args ? args.logEnable : undefined;
            resourceInputs["logPrefix"] = args ? args.logPrefix : undefined;
            resourceInputs["logTargetBucket"] = args ? args.logTargetBucket : undefined;
            resourceInputs["multiAz"] = args ? args.multiAz : undefined;
            resourceInputs["originDomainRules"] = args ? args.originDomainRules : undefined;
            resourceInputs["originPullRules"] = args ? args.originPullRules : undefined;
            resourceInputs["replicaRole"] = args ? args.replicaRole : undefined;
            resourceInputs["replicaRules"] = args ? args.replicaRules : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versioningEnable"] = args ? args.versioningEnable : undefined;
            resourceInputs["website"] = args ? args.website : undefined;
            resourceInputs["cosBucketUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bucket resources.
 */
export interface BucketState {
    /**
     * Enable bucket acceleration.
     */
    accelerationEnable?: pulumi.Input<boolean>;
    /**
     * The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
     */
    acl?: pulumi.Input<string>;
    /**
     * ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
     */
    aclBody?: pulumi.Input<string>;
    /**
     * The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
     */
    bucket?: pulumi.Input<string>;
    /**
     * CDC cluster ID.
     */
    cdcId?: pulumi.Input<string>;
    /**
     * A rule of Cross-Origin Resource Sharing (documented below).
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketCorsRule>[]>;
    /**
     * The URL of this cos bucket.
     */
    cosBucketUrl?: pulumi.Input<string>;
    /**
     * Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
     */
    enableIntelligentTiering?: pulumi.Input<boolean>;
    /**
     * The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
     */
    encryptionAlgorithm?: pulumi.Input<string>;
    /**
     * Force cleanup all objects before delete bucket.
     */
    forceClean?: pulumi.Input<boolean>;
    /**
     * Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
     */
    intelligentTieringDays?: pulumi.Input<number>;
    /**
     * Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
     */
    intelligentTieringRequestFrequent?: pulumi.Input<number>;
    /**
     * The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
     */
    kmsId?: pulumi.Input<string>;
    /**
     * A configuration of object lifecycle management (documented below).
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketLifecycleRule>[]>;
    /**
     * Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
     */
    logEnable?: pulumi.Input<boolean>;
    /**
     * The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
     */
    logPrefix?: pulumi.Input<string>;
    /**
     * The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
     */
    logTargetBucket?: pulumi.Input<string>;
    /**
     * Indicates whether to create a bucket of multi available zone.
     */
    multiAz?: pulumi.Input<boolean>;
    /**
     * Bucket Origin Domain settings.
     */
    originDomainRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketOriginDomainRule>[]>;
    /**
     * Bucket Origin-Pull settings.
     */
    originPullRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketOriginPullRule>[]>;
    /**
     * Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
     */
    replicaRole?: pulumi.Input<string>;
    /**
     * List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
     */
    replicaRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketReplicaRule>[]>;
    /**
     * The tags of a bucket.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
     */
    versioningEnable?: pulumi.Input<boolean>;
    /**
     * A website object(documented below).
     */
    website?: pulumi.Input<inputs.Cos.BucketWebsite>;
}

/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * Enable bucket acceleration.
     */
    accelerationEnable?: pulumi.Input<boolean>;
    /**
     * The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
     */
    acl?: pulumi.Input<string>;
    /**
     * ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
     */
    aclBody?: pulumi.Input<string>;
    /**
     * The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
     */
    bucket: pulumi.Input<string>;
    /**
     * CDC cluster ID.
     */
    cdcId?: pulumi.Input<string>;
    /**
     * A rule of Cross-Origin Resource Sharing (documented below).
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketCorsRule>[]>;
    /**
     * Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
     */
    enableIntelligentTiering?: pulumi.Input<boolean>;
    /**
     * The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
     */
    encryptionAlgorithm?: pulumi.Input<string>;
    /**
     * Force cleanup all objects before delete bucket.
     */
    forceClean?: pulumi.Input<boolean>;
    /**
     * Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
     */
    intelligentTieringDays?: pulumi.Input<number>;
    /**
     * Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
     */
    intelligentTieringRequestFrequent?: pulumi.Input<number>;
    /**
     * The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
     */
    kmsId?: pulumi.Input<string>;
    /**
     * A configuration of object lifecycle management (documented below).
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketLifecycleRule>[]>;
    /**
     * Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
     */
    logEnable?: pulumi.Input<boolean>;
    /**
     * The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
     */
    logPrefix?: pulumi.Input<string>;
    /**
     * The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
     */
    logTargetBucket?: pulumi.Input<string>;
    /**
     * Indicates whether to create a bucket of multi available zone.
     */
    multiAz?: pulumi.Input<boolean>;
    /**
     * Bucket Origin Domain settings.
     */
    originDomainRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketOriginDomainRule>[]>;
    /**
     * Bucket Origin-Pull settings.
     */
    originPullRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketOriginPullRule>[]>;
    /**
     * Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
     */
    replicaRole?: pulumi.Input<string>;
    /**
     * List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
     */
    replicaRules?: pulumi.Input<pulumi.Input<inputs.Cos.BucketReplicaRule>[]>;
    /**
     * The tags of a bucket.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
     */
    versioningEnable?: pulumi.Input<boolean>;
    /**
     * A website object(documented below).
     */
    website?: pulumi.Input<inputs.Cos.BucketWebsite>;
}
