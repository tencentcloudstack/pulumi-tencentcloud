// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a mysql instance resource to create read-only database instances.
 *
 * > **NOTE:** Read-only instances can be purchased only for two-node or three-node source instances on MySQL 5.6 or above with the InnoDB engine at a specification of 1 GB memory and 50 GB disk capacity or above.
 * **NOTE:** The terminate operation of read only mysql does NOT take effect immediately, maybe takes for several hours. so during that time, VPCs associated with that mysql instance can't be terminated also.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const zones = tencentcloud.Availability.getZonesByProduct({
 *     product: "cdb",
 * });
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: zones.then(zones => zones.zones?.[0]?.name),
 *     vpcId: vpc.id,
 *     cidrBlock: "10.0.0.0/16",
 *     isMulticast: false,
 * });
 * const securityGroup = new tencentcloud.security.Group("securityGroup", {description: "mysql test"});
 * const exampleInstance = new tencentcloud.mysql.Instance("exampleInstance", {
 *     internetService: 1,
 *     engineVersion: "5.7",
 *     chargeType: "POSTPAID",
 *     rootPassword: "PassWord123",
 *     slaveDeployMode: 0,
 *     availabilityZone: zones.then(zones => zones.zones?.[0]?.name),
 *     slaveSyncMode: 1,
 *     instanceName: "tf-example-mysql",
 *     memSize: 4000,
 *     volumeSize: 200,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     intranetPort: 3306,
 *     securityGroups: [securityGroup.id],
 *     tags: {
 *         name: "test",
 *     },
 *     parameters: {
 *         character_set_server: "UTF8",
 *         max_connections: "1000",
 *     },
 * });
 * const exampleReadonlyInstance = new tencentcloud.mysql.ReadonlyInstance("exampleReadonlyInstance", {
 *     masterInstanceId: exampleInstance.id,
 *     instanceName: "tf-example",
 *     memSize: 128000,
 *     volumeSize: 255,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     intranetPort: 3306,
 *     securityGroups: [securityGroup.id],
 *     tags: {
 *         createBy: "terraform",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * mysql read-only database instances can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Mysql/readonlyInstance:ReadonlyInstance default cdb-dnqksd9f
 * ```
 */
export class ReadonlyInstance extends pulumi.CustomResource {
    /**
     * Get an existing ReadonlyInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReadonlyInstanceState, opts?: pulumi.CustomResourceOptions): ReadonlyInstance {
        return new ReadonlyInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mysql/readonlyInstance:ReadonlyInstance';

    /**
     * Returns true if the given object is an instance of ReadonlyInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReadonlyInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReadonlyInstance.__pulumiType;
    }

    /**
     * Auto renew flag. NOTES: Only supported prepaid instance.
     */
    public readonly autoRenewFlag!: pulumi.Output<number | undefined>;
    /**
     * Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
     */
    public readonly chargeType!: pulumi.Output<string | undefined>;
    /**
     * CPU cores.
     */
    public readonly cpu!: pulumi.Output<number>;
    /**
     * Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
     */
    public readonly deviceType!: pulumi.Output<string>;
    /**
     * Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
     */
    public readonly fastUpgrade!: pulumi.Output<number | undefined>;
    /**
     * Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * The name of a mysql instance.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * instance intranet IP.
     */
    public /*out*/ readonly intranetIp!: pulumi.Output<string>;
    /**
     * Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
     */
    public readonly intranetPort!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether the instance is locked. Valid values: `0`, `1`. `0` - No; `1` - Yes.
     */
    public /*out*/ readonly locked!: pulumi.Output<number>;
    /**
     * Indicates the master instance ID of recovery instances.
     */
    public readonly masterInstanceId!: pulumi.Output<string>;
    /**
     * The zone information of the primary instance is required when you purchase a disaster recovery instance.
     */
    public readonly masterRegion!: pulumi.Output<string>;
    /**
     * Memory size (in MB).
     */
    public readonly memSize!: pulumi.Output<number>;
    /**
     * Specify parameter template id.
     */
    public readonly paramTemplateId!: pulumi.Output<number | undefined>;
    /**
     * It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `chargeType` instead.
     */
    public readonly payType!: pulumi.Output<number | undefined>;
    /**
     * It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead. Period of instance. NOTES: Only supported prepaid instance.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Period of instance. NOTES: Only supported prepaid instance.
     */
    public readonly prepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * Read only group id. If rogroupId is empty, a new ro group is created by default. If it is not empty, the existing ro group is used.
     */
    public readonly roGroupId!: pulumi.Output<string>;
    /**
     * Security groups to use.
     */
    public readonly securityGroups!: pulumi.Output<string[] | undefined>;
    /**
     * Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
     */
    public readonly slaveDeployMode!: pulumi.Output<number | undefined>;
    /**
     * Instance status. Valid values: `0`, `1`, `4`, `5`. `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Private network ID. If `vpcId` is set, this value is required.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Instance tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Indicates which kind of operations is being executed.
     */
    public /*out*/ readonly taskStatus!: pulumi.Output<number>;
    /**
     * Disk size (in GB).
     */
    public readonly volumeSize!: pulumi.Output<number>;
    /**
     * ID of VPC, which can be modified once every 24 hours and can't be removed.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Switch the method of accessing new instances, default is `0`. Supported values include: `0` - switch immediately, `1` - switch in time window.
     */
    public readonly waitSwitch!: pulumi.Output<number | undefined>;
    /**
     * Zone information, this parameter defaults to, the system automatically selects an Availability Zone.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a ReadonlyInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReadonlyInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReadonlyInstanceArgs | ReadonlyInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReadonlyInstanceState | undefined;
            resourceInputs["autoRenewFlag"] = state ? state.autoRenewFlag : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["fastUpgrade"] = state ? state.fastUpgrade : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["intranetIp"] = state ? state.intranetIp : undefined;
            resourceInputs["intranetPort"] = state ? state.intranetPort : undefined;
            resourceInputs["locked"] = state ? state.locked : undefined;
            resourceInputs["masterInstanceId"] = state ? state.masterInstanceId : undefined;
            resourceInputs["masterRegion"] = state ? state.masterRegion : undefined;
            resourceInputs["memSize"] = state ? state.memSize : undefined;
            resourceInputs["paramTemplateId"] = state ? state.paramTemplateId : undefined;
            resourceInputs["payType"] = state ? state.payType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["prepaidPeriod"] = state ? state.prepaidPeriod : undefined;
            resourceInputs["roGroupId"] = state ? state.roGroupId : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["slaveDeployMode"] = state ? state.slaveDeployMode : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taskStatus"] = state ? state.taskStatus : undefined;
            resourceInputs["volumeSize"] = state ? state.volumeSize : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["waitSwitch"] = state ? state.waitSwitch : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as ReadonlyInstanceArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.masterInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterInstanceId'");
            }
            if ((!args || args.memSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memSize'");
            }
            if ((!args || args.volumeSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volumeSize'");
            }
            resourceInputs["autoRenewFlag"] = args ? args.autoRenewFlag : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["fastUpgrade"] = args ? args.fastUpgrade : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["intranetPort"] = args ? args.intranetPort : undefined;
            resourceInputs["masterInstanceId"] = args ? args.masterInstanceId : undefined;
            resourceInputs["masterRegion"] = args ? args.masterRegion : undefined;
            resourceInputs["memSize"] = args ? args.memSize : undefined;
            resourceInputs["paramTemplateId"] = args ? args.paramTemplateId : undefined;
            resourceInputs["payType"] = args ? args.payType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["prepaidPeriod"] = args ? args.prepaidPeriod : undefined;
            resourceInputs["roGroupId"] = args ? args.roGroupId : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["slaveDeployMode"] = args ? args.slaveDeployMode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["volumeSize"] = args ? args.volumeSize : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["waitSwitch"] = args ? args.waitSwitch : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["intranetIp"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["taskStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReadonlyInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReadonlyInstance resources.
 */
export interface ReadonlyInstanceState {
    /**
     * Auto renew flag. NOTES: Only supported prepaid instance.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * CPU cores.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
     */
    fastUpgrade?: pulumi.Input<number>;
    /**
     * Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The name of a mysql instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * instance intranet IP.
     */
    intranetIp?: pulumi.Input<string>;
    /**
     * Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
     */
    intranetPort?: pulumi.Input<number>;
    /**
     * Indicates whether the instance is locked. Valid values: `0`, `1`. `0` - No; `1` - Yes.
     */
    locked?: pulumi.Input<number>;
    /**
     * Indicates the master instance ID of recovery instances.
     */
    masterInstanceId?: pulumi.Input<string>;
    /**
     * The zone information of the primary instance is required when you purchase a disaster recovery instance.
     */
    masterRegion?: pulumi.Input<string>;
    /**
     * Memory size (in MB).
     */
    memSize?: pulumi.Input<number>;
    /**
     * Specify parameter template id.
     */
    paramTemplateId?: pulumi.Input<number>;
    /**
     * It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `chargeType` instead.
     */
    payType?: pulumi.Input<number>;
    /**
     * It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead. Period of instance. NOTES: Only supported prepaid instance.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead.
     */
    period?: pulumi.Input<number>;
    /**
     * Period of instance. NOTES: Only supported prepaid instance.
     */
    prepaidPeriod?: pulumi.Input<number>;
    /**
     * Read only group id. If rogroupId is empty, a new ro group is created by default. If it is not empty, the existing ro group is used.
     */
    roGroupId?: pulumi.Input<string>;
    /**
     * Security groups to use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
     */
    slaveDeployMode?: pulumi.Input<number>;
    /**
     * Instance status. Valid values: `0`, `1`, `4`, `5`. `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
     */
    status?: pulumi.Input<number>;
    /**
     * Private network ID. If `vpcId` is set, this value is required.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Instance tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Indicates which kind of operations is being executed.
     */
    taskStatus?: pulumi.Input<number>;
    /**
     * Disk size (in GB).
     */
    volumeSize?: pulumi.Input<number>;
    /**
     * ID of VPC, which can be modified once every 24 hours and can't be removed.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Switch the method of accessing new instances, default is `0`. Supported values include: `0` - switch immediately, `1` - switch in time window.
     */
    waitSwitch?: pulumi.Input<number>;
    /**
     * Zone information, this parameter defaults to, the system automatically selects an Availability Zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReadonlyInstance resource.
 */
export interface ReadonlyInstanceArgs {
    /**
     * Auto renew flag. NOTES: Only supported prepaid instance.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * CPU cores.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
     */
    fastUpgrade?: pulumi.Input<number>;
    /**
     * Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The name of a mysql instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
     */
    intranetPort?: pulumi.Input<number>;
    /**
     * Indicates the master instance ID of recovery instances.
     */
    masterInstanceId: pulumi.Input<string>;
    /**
     * The zone information of the primary instance is required when you purchase a disaster recovery instance.
     */
    masterRegion?: pulumi.Input<string>;
    /**
     * Memory size (in MB).
     */
    memSize: pulumi.Input<number>;
    /**
     * Specify parameter template id.
     */
    paramTemplateId?: pulumi.Input<number>;
    /**
     * It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `chargeType` instead.
     */
    payType?: pulumi.Input<number>;
    /**
     * It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead. Period of instance. NOTES: Only supported prepaid instance.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead.
     */
    period?: pulumi.Input<number>;
    /**
     * Period of instance. NOTES: Only supported prepaid instance.
     */
    prepaidPeriod?: pulumi.Input<number>;
    /**
     * Read only group id. If rogroupId is empty, a new ro group is created by default. If it is not empty, the existing ro group is used.
     */
    roGroupId?: pulumi.Input<string>;
    /**
     * Security groups to use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
     */
    slaveDeployMode?: pulumi.Input<number>;
    /**
     * Private network ID. If `vpcId` is set, this value is required.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Instance tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Disk size (in GB).
     */
    volumeSize: pulumi.Input<number>;
    /**
     * ID of VPC, which can be modified once every 24 hours and can't be removed.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Switch the method of accessing new instances, default is `0`. Supported values include: `0` - switch immediately, `1` - switch in time window.
     */
    waitSwitch?: pulumi.Input<number>;
    /**
     * Zone information, this parameter defaults to, the system automatically selects an Availability Zone.
     */
    zone?: pulumi.Input<string>;
}
