// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a mysql instance resource to create master database instances.
 *
 * > **NOTE:** If this mysql has readonly instance, the terminate operation of the mysql does NOT take effect immediately, maybe takes for several hours. so during that time, VPCs associated with that mysql instance can't be terminated also.
 *
 * > **NOTE:** The value of parameter `parameters` can be used with tencentcloud.Mysql.getParameterList to obtain.
 *
 * ## Example Usage
 *
 * ### Create a single node instance
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const zones = tencentcloud.Availability.getZonesByProduct({
 *     product: "cdb",
 * });
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: zones.then(zones => zones.zones?.[0]?.name),
 *     vpcId: vpc.id,
 *     cidrBlock: "10.0.0.0/16",
 *     isMulticast: false,
 * });
 * const securityGroup = new tencentcloud.security.Group("securityGroup", {description: "mysql test"});
 * const example = new tencentcloud.mysql.Instance("example", {
 *     internetService: 1,
 *     engineVersion: "5.7",
 *     chargeType: "POSTPAID",
 *     rootPassword: "PassWord123",
 *     slaveDeployMode: 0,
 *     availabilityZone: zones.then(zones => zones.zones?.[0]?.name),
 *     slaveSyncMode: 1,
 *     instanceName: "tf-example-mysql",
 *     memSize: 4000,
 *     volumeSize: 200,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     intranetPort: 3306,
 *     securityGroups: [securityGroup.id],
 *     tags: {
 *         name: "test",
 *     },
 *     parameters: {
 *         character_set_server: "utf8",
 *         max_connections: "1000",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Create a double node instance
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.mysql.Instance("example", {
 *     internetService: 1,
 *     engineVersion: "5.7",
 *     chargeType: "POSTPAID",
 *     rootPassword: "PassWord123",
 *     slaveDeployMode: 1,
 *     availabilityZone: data.tencentcloud_availability_zones_by_product.zones.zones[0].name,
 *     firstSlaveZone: data.tencentcloud_availability_zones_by_product.zones.zones[1].name,
 *     slaveSyncMode: 1,
 *     instanceName: "tf-example-mysql",
 *     memSize: 4000,
 *     volumeSize: 200,
 *     vpcId: tencentcloud_vpc.vpc.id,
 *     subnetId: tencentcloud_subnet.subnet.id,
 *     intranetPort: 3306,
 *     securityGroups: [tencentcloud_security_group.security_group.id],
 *     tags: {
 *         name: "test",
 *     },
 *     parameters: {
 *         character_set_server: "utf8",
 *         max_connections: "1000",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * MySQL instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Mysql/instance:Instance foo cdb-12345678
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mysql/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Auto renew flag. NOTES: Only supported prepaid instance.
     */
    public readonly autoRenewFlag!: pulumi.Output<number | undefined>;
    /**
     * Indicates which availability zone will be used.
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
     */
    public readonly chargeType!: pulumi.Output<string | undefined>;
    /**
     * CPU cores.
     */
    public readonly cpu!: pulumi.Output<number>;
    /**
     * Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
     */
    public readonly deviceType!: pulumi.Output<string>;
    /**
     * Instance engine type. The default value is `InnoDB`. Supported values include `InnoDB` and `RocksDB`.
     */
    public readonly engineType!: pulumi.Output<string>;
    /**
     * The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0, and default is 5.7. Upgrade the instance engine version to support 5.6/5.7 and switch immediately.
     */
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    /**
     * Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
     */
    public readonly fastUpgrade!: pulumi.Output<number | undefined>;
    /**
     * Zone information about first slave instance.
     */
    public readonly firstSlaveZone!: pulumi.Output<string>;
    /**
     * Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether GTID is enable. `0` - Not enabled; `1` - Enabled.
     */
    public /*out*/ readonly gtid!: pulumi.Output<number>;
    /**
     * The name of a mysql instance.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * host for public access.
     */
    public /*out*/ readonly internetHost!: pulumi.Output<string>;
    /**
     * Access port for public access.
     */
    public /*out*/ readonly internetPort!: pulumi.Output<number>;
    /**
     * Indicates whether to enable the access to an instance from public network: 0 - No, 1 - Yes.
     */
    public readonly internetService!: pulumi.Output<number | undefined>;
    /**
     * instance intranet IP.
     */
    public /*out*/ readonly intranetIp!: pulumi.Output<string>;
    /**
     * Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
     */
    public readonly intranetPort!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether the instance is locked. Valid values: `0`, `1`. `0` - No; `1` - Yes.
     */
    public /*out*/ readonly locked!: pulumi.Output<number>;
    /**
     * Latency threshold. Value range 1~10. Only need to fill in when upgrading kernel subversion and engine version.
     */
    public readonly maxDeayTime!: pulumi.Output<number | undefined>;
    /**
     * Memory size (in MB).
     */
    public readonly memSize!: pulumi.Output<number>;
    /**
     * Specify parameter template id.
     */
    public readonly paramTemplateId!: pulumi.Output<number | undefined>;
    /**
     * List of parameters to use.
     */
    public readonly parameters!: pulumi.Output<{[key: string]: any}>;
    /**
     * It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `chargeType` instead.
     */
    public readonly payType!: pulumi.Output<number | undefined>;
    /**
     * It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead. Period of instance. NOTES: Only supported prepaid instance.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Period of instance. NOTES: Only supported prepaid instance.
     */
    public readonly prepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * Project ID, default value is 0.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * Password of root account. This parameter can be specified when you purchase master instances, but it should be ignored when you purchase read-only instances or disaster recovery instances.
     */
    public readonly rootPassword!: pulumi.Output<string | undefined>;
    /**
     * Zone information about second slave instance.
     */
    public readonly secondSlaveZone!: pulumi.Output<string | undefined>;
    /**
     * Security groups to use.
     */
    public readonly securityGroups!: pulumi.Output<string[] | undefined>;
    /**
     * Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
     */
    public readonly slaveDeployMode!: pulumi.Output<number | undefined>;
    /**
     * Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
     */
    public readonly slaveSyncMode!: pulumi.Output<number | undefined>;
    /**
     * Instance status. Valid values: `0`, `1`, `4`, `5`. `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Private network ID. If `vpcId` is set, this value is required.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Instance tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Indicates which kind of operations is being executed.
     */
    public /*out*/ readonly taskStatus!: pulumi.Output<number>;
    /**
     * Whether it is a kernel subversion upgrade, supported values: 1 - upgrade the kernel subversion; 0 - upgrade the database engine version. Only need to fill in when upgrading kernel subversion and engine version.
     */
    public readonly upgradeSubversion!: pulumi.Output<number | undefined>;
    /**
     * Disk size (in GB).
     */
    public readonly volumeSize!: pulumi.Output<number>;
    /**
     * ID of VPC, which can be modified once every 24 hours and can't be removed.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Switch the method of accessing new instances, default is `0`. Supported values include: `0` - switch immediately, `1` - switch in time window.
     */
    public readonly waitSwitch!: pulumi.Output<number | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["autoRenewFlag"] = state ? state.autoRenewFlag : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["engineType"] = state ? state.engineType : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["fastUpgrade"] = state ? state.fastUpgrade : undefined;
            resourceInputs["firstSlaveZone"] = state ? state.firstSlaveZone : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["gtid"] = state ? state.gtid : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["internetHost"] = state ? state.internetHost : undefined;
            resourceInputs["internetPort"] = state ? state.internetPort : undefined;
            resourceInputs["internetService"] = state ? state.internetService : undefined;
            resourceInputs["intranetIp"] = state ? state.intranetIp : undefined;
            resourceInputs["intranetPort"] = state ? state.intranetPort : undefined;
            resourceInputs["locked"] = state ? state.locked : undefined;
            resourceInputs["maxDeayTime"] = state ? state.maxDeayTime : undefined;
            resourceInputs["memSize"] = state ? state.memSize : undefined;
            resourceInputs["paramTemplateId"] = state ? state.paramTemplateId : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["payType"] = state ? state.payType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["prepaidPeriod"] = state ? state.prepaidPeriod : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["rootPassword"] = state ? state.rootPassword : undefined;
            resourceInputs["secondSlaveZone"] = state ? state.secondSlaveZone : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["slaveDeployMode"] = state ? state.slaveDeployMode : undefined;
            resourceInputs["slaveSyncMode"] = state ? state.slaveSyncMode : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taskStatus"] = state ? state.taskStatus : undefined;
            resourceInputs["upgradeSubversion"] = state ? state.upgradeSubversion : undefined;
            resourceInputs["volumeSize"] = state ? state.volumeSize : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["waitSwitch"] = state ? state.waitSwitch : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.memSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memSize'");
            }
            if ((!args || args.volumeSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volumeSize'");
            }
            resourceInputs["autoRenewFlag"] = args ? args.autoRenewFlag : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["engineType"] = args ? args.engineType : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["fastUpgrade"] = args ? args.fastUpgrade : undefined;
            resourceInputs["firstSlaveZone"] = args ? args.firstSlaveZone : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["internetService"] = args ? args.internetService : undefined;
            resourceInputs["intranetPort"] = args ? args.intranetPort : undefined;
            resourceInputs["maxDeayTime"] = args ? args.maxDeayTime : undefined;
            resourceInputs["memSize"] = args ? args.memSize : undefined;
            resourceInputs["paramTemplateId"] = args ? args.paramTemplateId : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["payType"] = args ? args.payType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["prepaidPeriod"] = args ? args.prepaidPeriod : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["rootPassword"] = args?.rootPassword ? pulumi.secret(args.rootPassword) : undefined;
            resourceInputs["secondSlaveZone"] = args ? args.secondSlaveZone : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["slaveDeployMode"] = args ? args.slaveDeployMode : undefined;
            resourceInputs["slaveSyncMode"] = args ? args.slaveSyncMode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["upgradeSubversion"] = args ? args.upgradeSubversion : undefined;
            resourceInputs["volumeSize"] = args ? args.volumeSize : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["waitSwitch"] = args ? args.waitSwitch : undefined;
            resourceInputs["gtid"] = undefined /*out*/;
            resourceInputs["internetHost"] = undefined /*out*/;
            resourceInputs["internetPort"] = undefined /*out*/;
            resourceInputs["intranetIp"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["taskStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["rootPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Auto renew flag. NOTES: Only supported prepaid instance.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Indicates which availability zone will be used.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * CPU cores.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * Instance engine type. The default value is `InnoDB`. Supported values include `InnoDB` and `RocksDB`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0, and default is 5.7. Upgrade the instance engine version to support 5.6/5.7 and switch immediately.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
     */
    fastUpgrade?: pulumi.Input<number>;
    /**
     * Zone information about first slave instance.
     */
    firstSlaveZone?: pulumi.Input<string>;
    /**
     * Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * Indicates whether GTID is enable. `0` - Not enabled; `1` - Enabled.
     */
    gtid?: pulumi.Input<number>;
    /**
     * The name of a mysql instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * host for public access.
     */
    internetHost?: pulumi.Input<string>;
    /**
     * Access port for public access.
     */
    internetPort?: pulumi.Input<number>;
    /**
     * Indicates whether to enable the access to an instance from public network: 0 - No, 1 - Yes.
     */
    internetService?: pulumi.Input<number>;
    /**
     * instance intranet IP.
     */
    intranetIp?: pulumi.Input<string>;
    /**
     * Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
     */
    intranetPort?: pulumi.Input<number>;
    /**
     * Indicates whether the instance is locked. Valid values: `0`, `1`. `0` - No; `1` - Yes.
     */
    locked?: pulumi.Input<number>;
    /**
     * Latency threshold. Value range 1~10. Only need to fill in when upgrading kernel subversion and engine version.
     */
    maxDeayTime?: pulumi.Input<number>;
    /**
     * Memory size (in MB).
     */
    memSize?: pulumi.Input<number>;
    /**
     * Specify parameter template id.
     */
    paramTemplateId?: pulumi.Input<number>;
    /**
     * List of parameters to use.
     */
    parameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `chargeType` instead.
     */
    payType?: pulumi.Input<number>;
    /**
     * It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead. Period of instance. NOTES: Only supported prepaid instance.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead.
     */
    period?: pulumi.Input<number>;
    /**
     * Period of instance. NOTES: Only supported prepaid instance.
     */
    prepaidPeriod?: pulumi.Input<number>;
    /**
     * Project ID, default value is 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Password of root account. This parameter can be specified when you purchase master instances, but it should be ignored when you purchase read-only instances or disaster recovery instances.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * Zone information about second slave instance.
     */
    secondSlaveZone?: pulumi.Input<string>;
    /**
     * Security groups to use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
     */
    slaveDeployMode?: pulumi.Input<number>;
    /**
     * Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
     */
    slaveSyncMode?: pulumi.Input<number>;
    /**
     * Instance status. Valid values: `0`, `1`, `4`, `5`. `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
     */
    status?: pulumi.Input<number>;
    /**
     * Private network ID. If `vpcId` is set, this value is required.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Instance tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Indicates which kind of operations is being executed.
     */
    taskStatus?: pulumi.Input<number>;
    /**
     * Whether it is a kernel subversion upgrade, supported values: 1 - upgrade the kernel subversion; 0 - upgrade the database engine version. Only need to fill in when upgrading kernel subversion and engine version.
     */
    upgradeSubversion?: pulumi.Input<number>;
    /**
     * Disk size (in GB).
     */
    volumeSize?: pulumi.Input<number>;
    /**
     * ID of VPC, which can be modified once every 24 hours and can't be removed.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Switch the method of accessing new instances, default is `0`. Supported values include: `0` - switch immediately, `1` - switch in time window.
     */
    waitSwitch?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Auto renew flag. NOTES: Only supported prepaid instance.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Indicates which availability zone will be used.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * CPU cores.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * Instance engine type. The default value is `InnoDB`. Supported values include `InnoDB` and `RocksDB`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0, and default is 5.7. Upgrade the instance engine version to support 5.6/5.7 and switch immediately.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specify whether to enable fast upgrade when upgrade instance spec, available value: `1` - enabled, `0` - disabled.
     */
    fastUpgrade?: pulumi.Input<number>;
    /**
     * Zone information about first slave instance.
     */
    firstSlaveZone?: pulumi.Input<string>;
    /**
     * Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted instead of staying recycle bin. Note: only works for `PREPAID` instance. When the main mysql instance set true, this para of the readonly mysql instance will not take effect.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The name of a mysql instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Indicates whether to enable the access to an instance from public network: 0 - No, 1 - Yes.
     */
    internetService?: pulumi.Input<number>;
    /**
     * Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
     */
    intranetPort?: pulumi.Input<number>;
    /**
     * Latency threshold. Value range 1~10. Only need to fill in when upgrading kernel subversion and engine version.
     */
    maxDeayTime?: pulumi.Input<number>;
    /**
     * Memory size (in MB).
     */
    memSize: pulumi.Input<number>;
    /**
     * Specify parameter template id.
     */
    paramTemplateId?: pulumi.Input<number>;
    /**
     * List of parameters to use.
     */
    parameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `chargeType` instead.
     */
    payType?: pulumi.Input<number>;
    /**
     * It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead. Period of instance. NOTES: Only supported prepaid instance.
     *
     * @deprecated It has been deprecated from version 1.36.0. Please use `prepaidPeriod` instead.
     */
    period?: pulumi.Input<number>;
    /**
     * Period of instance. NOTES: Only supported prepaid instance.
     */
    prepaidPeriod?: pulumi.Input<number>;
    /**
     * Project ID, default value is 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Password of root account. This parameter can be specified when you purchase master instances, but it should be ignored when you purchase read-only instances or disaster recovery instances.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * Zone information about second slave instance.
     */
    secondSlaveZone?: pulumi.Input<string>;
    /**
     * Security groups to use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
     */
    slaveDeployMode?: pulumi.Input<number>;
    /**
     * Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
     */
    slaveSyncMode?: pulumi.Input<number>;
    /**
     * Private network ID. If `vpcId` is set, this value is required.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Instance tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Whether it is a kernel subversion upgrade, supported values: 1 - upgrade the kernel subversion; 0 - upgrade the database engine version. Only need to fill in when upgrading kernel subversion and engine version.
     */
    upgradeSubversion?: pulumi.Input<number>;
    /**
     * Disk size (in GB).
     */
    volumeSize: pulumi.Input<number>;
    /**
     * ID of VPC, which can be modified once every 24 hours and can't be removed.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Switch the method of accessing new instances, default is `0`. Supported values include: `0` - switch immediately, `1` - switch in time window.
     */
    waitSwitch?: pulumi.Input<number>;
}
