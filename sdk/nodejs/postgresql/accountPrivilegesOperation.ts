// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create postgresql account privileges
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-3";
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * // create vpc subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: availabilityZone,
 *     vpcId: vpc.id,
 *     cidrBlock: "10.0.20.0/28",
 *     isMulticast: false,
 * });
 * // create postgresql
 * const exampleInstance = new tencentcloud.postgresql.Instance("exampleInstance", {
 *     availabilityZone: availabilityZone,
 *     chargeType: "POSTPAID_BY_HOUR",
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     dbMajorVersion: "10",
 *     engineVersion: "10.23",
 *     rootUser: "root123",
 *     rootPassword: "Root123$",
 *     charset: "UTF8",
 *     projectId: 0,
 *     cpu: 1,
 *     memory: 2,
 *     storage: 10,
 *     tags: {
 *         test: "tf",
 *     },
 * });
 * // create account
 * const exampleAccount = new tencentcloud.postgresql.Account("exampleAccount", {
 *     dbInstanceId: exampleInstance.id,
 *     userName: "tf_example",
 *     password: "Password@123",
 *     type: "normal",
 *     remark: "remark",
 *     lockStatus: false,
 * });
 * // create account privileges
 * const exampleAccountPrivilegesOperation = new tencentcloud.postgresql.AccountPrivilegesOperation("exampleAccountPrivilegesOperation", {
 *     dbInstanceId: exampleInstance.id,
 *     userName: exampleAccount.userName,
 *     modifyPrivilegeSets: [{
 *         databasePrivilege: {
 *             object: {
 *                 objectName: "postgres",
 *                 objectType: "database",
 *             },
 *             privilegeSets: [
 *                 "CONNECT",
 *                 "TEMPORARY",
 *                 "CREATE",
 *             ],
 *         },
 *         modifyType: "grantObject",
 *         isCascade: false,
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class AccountPrivilegesOperation extends pulumi.CustomResource {
    /**
     * Get an existing AccountPrivilegesOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountPrivilegesOperationState, opts?: pulumi.CustomResourceOptions): AccountPrivilegesOperation {
        return new AccountPrivilegesOperation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Postgresql/accountPrivilegesOperation:AccountPrivilegesOperation';

    /**
     * Returns true if the given object is an instance of AccountPrivilegesOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountPrivilegesOperation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountPrivilegesOperation.__pulumiType;
    }

    /**
     * Instance ID in the format of postgres-4wdeb0zv.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * Privileges to modify. Batch modification supported, up to 50 entries at a time.
     */
    public readonly modifyPrivilegeSets!: pulumi.Output<outputs.Postgresql.AccountPrivilegesOperationModifyPrivilegeSet[]>;
    /**
     * Instance username.
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a AccountPrivilegesOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountPrivilegesOperationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountPrivilegesOperationArgs | AccountPrivilegesOperationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountPrivilegesOperationState | undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["modifyPrivilegeSets"] = state ? state.modifyPrivilegeSets : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as AccountPrivilegesOperationArgs | undefined;
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if ((!args || args.modifyPrivilegeSets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modifyPrivilegeSets'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["modifyPrivilegeSets"] = args ? args.modifyPrivilegeSets : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountPrivilegesOperation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountPrivilegesOperation resources.
 */
export interface AccountPrivilegesOperationState {
    /**
     * Instance ID in the format of postgres-4wdeb0zv.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * Privileges to modify. Batch modification supported, up to 50 entries at a time.
     */
    modifyPrivilegeSets?: pulumi.Input<pulumi.Input<inputs.Postgresql.AccountPrivilegesOperationModifyPrivilegeSet>[]>;
    /**
     * Instance username.
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountPrivilegesOperation resource.
 */
export interface AccountPrivilegesOperationArgs {
    /**
     * Instance ID in the format of postgres-4wdeb0zv.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * Privileges to modify. Batch modification supported, up to 50 entries at a time.
     */
    modifyPrivilegeSets: pulumi.Input<pulumi.Input<inputs.Postgresql.AccountPrivilegesOperationModifyPrivilegeSet>[]>;
    /**
     * Instance username.
     */
    userName: pulumi.Input<string>;
}
