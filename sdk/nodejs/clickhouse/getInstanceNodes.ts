// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of clickhouse instanceNodes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const instanceNodes = pulumi.output(tencentcloud.Clickhouse.getInstanceNodes({
 *     displayPolicy: "all",
 *     forceAll: true,
 *     instanceId: "cdwch-mvfjh373",
 *     nodeRole: "data",
 * }));
 * ```
 */
export function getInstanceNodes(args: GetInstanceNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceNodesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("tencentcloud:Clickhouse/getInstanceNodes:getInstanceNodes", {
        "displayPolicy": args.displayPolicy,
        "forceAll": args.forceAll,
        "instanceId": args.instanceId,
        "nodeRole": args.nodeRole,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceNodes.
 */
export interface GetInstanceNodesArgs {
    /**
     * Display strategy, display all when All.
     */
    displayPolicy?: string;
    /**
     * When true, returns all nodes, that is, the Limit is infinitely large.
     */
    forceAll?: boolean;
    /**
     * InstanceId.
     */
    instanceId: string;
    /**
     * Cluster role type, default is `data` data node.
     */
    nodeRole?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getInstanceNodes.
 */
export interface GetInstanceNodesResult {
    readonly displayPolicy?: string;
    readonly forceAll?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Total number of instance nodes.
     */
    readonly instanceNodesLists: outputs.Clickhouse.GetInstanceNodesInstanceNodesList[];
    readonly nodeRole?: string;
    readonly resultOutputFile?: string;
}

export function getInstanceNodesOutput(args: GetInstanceNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceNodesResult> {
    return pulumi.output(args).apply(a => getInstanceNodes(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceNodes.
 */
export interface GetInstanceNodesOutputArgs {
    /**
     * Display strategy, display all when All.
     */
    displayPolicy?: pulumi.Input<string>;
    /**
     * When true, returns all nodes, that is, the Limit is infinitely large.
     */
    forceAll?: pulumi.Input<boolean>;
    /**
     * InstanceId.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Cluster role type, default is `data` data node.
     */
    nodeRole?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
