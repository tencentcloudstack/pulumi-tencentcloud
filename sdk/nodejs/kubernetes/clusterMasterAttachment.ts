// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a tke kubernetes cluster master attachment
 */
export class ClusterMasterAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ClusterMasterAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterMasterAttachmentState, opts?: pulumi.CustomResourceOptions): ClusterMasterAttachment {
        return new ClusterMasterAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Kubernetes/clusterMasterAttachment:ClusterMasterAttachment';

    /**
     * Returns true if the given object is an instance of ClusterMasterAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterMasterAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterMasterAttachment.__pulumiType;
    }

    /**
     * ID of the cluster.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * When the node belongs to the podCIDR size customization mode, the maximum number of pods running on the node can be specified.
     */
    public readonly desiredPodNumbers!: pulumi.Output<number[] | undefined>;
    /**
     * Activate TencentCloud Automation Tools (TAT) service. If this parameter is not specified, the public image will default to enabling the Cloud Automation Assistant service, while other images will default to not enabling the Cloud Automation Assistant service.
     */
    public readonly enhancedAutomationService!: pulumi.Output<boolean | undefined>;
    /**
     * To specify whether to enable cloud monitor service. Default is TRUE.
     */
    public readonly enhancedMonitorService!: pulumi.Output<boolean | undefined>;
    /**
     * To specify whether to enable cloud security service. Default is TRUE.
     */
    public readonly enhancedSecurityService!: pulumi.Output<boolean | undefined>;
    /**
     * Custom parameters for cluster master component.
     */
    public readonly extraArgs!: pulumi.Output<outputs.Kubernetes.ClusterMasterAttachmentExtraArgs | undefined>;
    /**
     * When reinstalling the system, you can specify the HostName of the instance to be modified (this parameter must be passed when the cluster is in HostName mode, and the rule name should be consistent with the HostName of the CVM instance creation interface except that uppercase characters are not supported).
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * ID of the CVM instance, this cvm will reinstall the system.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The key pair to use for the instance, it looks like skey-16jig7tx, it should be set if `password` not set.
     */
    public readonly keyIds!: pulumi.Output<string | undefined>;
    /**
     * Advanced Node Settings. commonly used to attach existing instances.
     */
    public readonly masterConfig!: pulumi.Output<outputs.Kubernetes.ClusterMasterAttachmentMasterConfig | undefined>;
    /**
     * Node role, values: MASTER_ETCD, WORKER. MASTER_ETCD needs to be specified only when creating an INDEPENDENT_CLUSTER independent cluster. The number of MASTER_ETCD nodes is 3-7, and it is recommended to have an odd number. The minimum configuration for MASTER_ETCD is 4C8G.
     */
    public readonly nodeRole!: pulumi.Output<string>;
    /**
     * Password to access, should be set if `keyIds` not set.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The security group to which the instance belongs. This parameter can be obtained by calling the sgId field in the return value of DescribeSecureGroups. If this parameter is not specified, the default security group will be bound.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ClusterMasterAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterMasterAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterMasterAttachmentArgs | ClusterMasterAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterMasterAttachmentState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["desiredPodNumbers"] = state ? state.desiredPodNumbers : undefined;
            resourceInputs["enhancedAutomationService"] = state ? state.enhancedAutomationService : undefined;
            resourceInputs["enhancedMonitorService"] = state ? state.enhancedMonitorService : undefined;
            resourceInputs["enhancedSecurityService"] = state ? state.enhancedSecurityService : undefined;
            resourceInputs["extraArgs"] = state ? state.extraArgs : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["keyIds"] = state ? state.keyIds : undefined;
            resourceInputs["masterConfig"] = state ? state.masterConfig : undefined;
            resourceInputs["nodeRole"] = state ? state.nodeRole : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
        } else {
            const args = argsOrState as ClusterMasterAttachmentArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.nodeRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeRole'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["desiredPodNumbers"] = args ? args.desiredPodNumbers : undefined;
            resourceInputs["enhancedAutomationService"] = args ? args.enhancedAutomationService : undefined;
            resourceInputs["enhancedMonitorService"] = args ? args.enhancedMonitorService : undefined;
            resourceInputs["enhancedSecurityService"] = args ? args.enhancedSecurityService : undefined;
            resourceInputs["extraArgs"] = args ? args.extraArgs : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["keyIds"] = args ? args.keyIds : undefined;
            resourceInputs["masterConfig"] = args ? args.masterConfig : undefined;
            resourceInputs["nodeRole"] = args ? args.nodeRole : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ClusterMasterAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterMasterAttachment resources.
 */
export interface ClusterMasterAttachmentState {
    /**
     * ID of the cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * When the node belongs to the podCIDR size customization mode, the maximum number of pods running on the node can be specified.
     */
    desiredPodNumbers?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Activate TencentCloud Automation Tools (TAT) service. If this parameter is not specified, the public image will default to enabling the Cloud Automation Assistant service, while other images will default to not enabling the Cloud Automation Assistant service.
     */
    enhancedAutomationService?: pulumi.Input<boolean>;
    /**
     * To specify whether to enable cloud monitor service. Default is TRUE.
     */
    enhancedMonitorService?: pulumi.Input<boolean>;
    /**
     * To specify whether to enable cloud security service. Default is TRUE.
     */
    enhancedSecurityService?: pulumi.Input<boolean>;
    /**
     * Custom parameters for cluster master component.
     */
    extraArgs?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentExtraArgs>;
    /**
     * When reinstalling the system, you can specify the HostName of the instance to be modified (this parameter must be passed when the cluster is in HostName mode, and the rule name should be consistent with the HostName of the CVM instance creation interface except that uppercase characters are not supported).
     */
    hostName?: pulumi.Input<string>;
    /**
     * ID of the CVM instance, this cvm will reinstall the system.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The key pair to use for the instance, it looks like skey-16jig7tx, it should be set if `password` not set.
     */
    keyIds?: pulumi.Input<string>;
    /**
     * Advanced Node Settings. commonly used to attach existing instances.
     */
    masterConfig?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfig>;
    /**
     * Node role, values: MASTER_ETCD, WORKER. MASTER_ETCD needs to be specified only when creating an INDEPENDENT_CLUSTER independent cluster. The number of MASTER_ETCD nodes is 3-7, and it is recommended to have an odd number. The minimum configuration for MASTER_ETCD is 4C8G.
     */
    nodeRole?: pulumi.Input<string>;
    /**
     * Password to access, should be set if `keyIds` not set.
     */
    password?: pulumi.Input<string>;
    /**
     * The security group to which the instance belongs. This parameter can be obtained by calling the sgId field in the return value of DescribeSecureGroups. If this parameter is not specified, the default security group will be bound.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ClusterMasterAttachment resource.
 */
export interface ClusterMasterAttachmentArgs {
    /**
     * ID of the cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * When the node belongs to the podCIDR size customization mode, the maximum number of pods running on the node can be specified.
     */
    desiredPodNumbers?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Activate TencentCloud Automation Tools (TAT) service. If this parameter is not specified, the public image will default to enabling the Cloud Automation Assistant service, while other images will default to not enabling the Cloud Automation Assistant service.
     */
    enhancedAutomationService?: pulumi.Input<boolean>;
    /**
     * To specify whether to enable cloud monitor service. Default is TRUE.
     */
    enhancedMonitorService?: pulumi.Input<boolean>;
    /**
     * To specify whether to enable cloud security service. Default is TRUE.
     */
    enhancedSecurityService?: pulumi.Input<boolean>;
    /**
     * Custom parameters for cluster master component.
     */
    extraArgs?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentExtraArgs>;
    /**
     * When reinstalling the system, you can specify the HostName of the instance to be modified (this parameter must be passed when the cluster is in HostName mode, and the rule name should be consistent with the HostName of the CVM instance creation interface except that uppercase characters are not supported).
     */
    hostName?: pulumi.Input<string>;
    /**
     * ID of the CVM instance, this cvm will reinstall the system.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The key pair to use for the instance, it looks like skey-16jig7tx, it should be set if `password` not set.
     */
    keyIds?: pulumi.Input<string>;
    /**
     * Advanced Node Settings. commonly used to attach existing instances.
     */
    masterConfig?: pulumi.Input<inputs.Kubernetes.ClusterMasterAttachmentMasterConfig>;
    /**
     * Node role, values: MASTER_ETCD, WORKER. MASTER_ETCD needs to be specified only when creating an INDEPENDENT_CLUSTER independent cluster. The number of MASTER_ETCD nodes is 3-7, and it is recommended to have an odd number. The minimum configuration for MASTER_ETCD is 4C8G.
     */
    nodeRole: pulumi.Input<string>;
    /**
     * Password to access, should be set if `keyIds` not set.
     */
    password?: pulumi.Input<string>;
    /**
     * The security group to which the instance belongs. This parameter can be obtained by calling the sgId field in the return value of DescribeSecureGroups. If this parameter is not specified, the default security group will be bound.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
