// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a vpc endPointService
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const endPointService = new tencentcloud.vpc.EndPointService("endPointService", {
 *     autoAcceptFlag: false,
 *     endPointServiceName: "terraform-endpoint-service",
 *     serviceInstanceId: "lb-o5f6x7ke",
 *     serviceType: "CLB",
 *     vpcId: "vpc-391sv4w3",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * vpc end_point_service can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Vpc/endPointService:EndPointService end_point_service end_point_service_id
 * ```
 */
export class EndPointService extends pulumi.CustomResource {
    /**
     * Get an existing EndPointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndPointServiceState, opts?: pulumi.CustomResourceOptions): EndPointService {
        return new EndPointService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vpc/endPointService:EndPointService';

    /**
     * Returns true if the given object is an instance of EndPointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EndPointService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EndPointService.__pulumiType;
    }

    /**
     * Whether to automatically accept.
     */
    public readonly autoAcceptFlag!: pulumi.Output<boolean>;
    /**
     * CDC instance ID.
     */
    public /*out*/ readonly cdcId!: pulumi.Output<string>;
    /**
     * Create Time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Count of end point.
     */
    public /*out*/ readonly endPointCount!: pulumi.Output<number>;
    /**
     * Name of end point service.
     */
    public readonly endPointServiceName!: pulumi.Output<string>;
    /**
     * Id of service instance, like lb-xxx.
     */
    public readonly serviceInstanceId!: pulumi.Output<string>;
    /**
     * APPID.
     */
    public /*out*/ readonly serviceOwner!: pulumi.Output<string>;
    /**
     * Type of service instance, like `CLB`, `CDB`, `CRS`, default is `CLB`.
     */
    public readonly serviceType!: pulumi.Output<string>;
    /**
     * VIP of backend service.
     */
    public /*out*/ readonly serviceVip!: pulumi.Output<string>;
    /**
     * ID of vpc instance.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a EndPointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndPointServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndPointServiceArgs | EndPointServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndPointServiceState | undefined;
            resourceInputs["autoAcceptFlag"] = state ? state.autoAcceptFlag : undefined;
            resourceInputs["cdcId"] = state ? state.cdcId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["endPointCount"] = state ? state.endPointCount : undefined;
            resourceInputs["endPointServiceName"] = state ? state.endPointServiceName : undefined;
            resourceInputs["serviceInstanceId"] = state ? state.serviceInstanceId : undefined;
            resourceInputs["serviceOwner"] = state ? state.serviceOwner : undefined;
            resourceInputs["serviceType"] = state ? state.serviceType : undefined;
            resourceInputs["serviceVip"] = state ? state.serviceVip : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as EndPointServiceArgs | undefined;
            if ((!args || args.autoAcceptFlag === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoAcceptFlag'");
            }
            if ((!args || args.endPointServiceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endPointServiceName'");
            }
            if ((!args || args.serviceInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceInstanceId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoAcceptFlag"] = args ? args.autoAcceptFlag : undefined;
            resourceInputs["endPointServiceName"] = args ? args.endPointServiceName : undefined;
            resourceInputs["serviceInstanceId"] = args ? args.serviceInstanceId : undefined;
            resourceInputs["serviceType"] = args ? args.serviceType : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["cdcId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["endPointCount"] = undefined /*out*/;
            resourceInputs["serviceOwner"] = undefined /*out*/;
            resourceInputs["serviceVip"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EndPointService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EndPointService resources.
 */
export interface EndPointServiceState {
    /**
     * Whether to automatically accept.
     */
    autoAcceptFlag?: pulumi.Input<boolean>;
    /**
     * CDC instance ID.
     */
    cdcId?: pulumi.Input<string>;
    /**
     * Create Time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Count of end point.
     */
    endPointCount?: pulumi.Input<number>;
    /**
     * Name of end point service.
     */
    endPointServiceName?: pulumi.Input<string>;
    /**
     * Id of service instance, like lb-xxx.
     */
    serviceInstanceId?: pulumi.Input<string>;
    /**
     * APPID.
     */
    serviceOwner?: pulumi.Input<string>;
    /**
     * Type of service instance, like `CLB`, `CDB`, `CRS`, default is `CLB`.
     */
    serviceType?: pulumi.Input<string>;
    /**
     * VIP of backend service.
     */
    serviceVip?: pulumi.Input<string>;
    /**
     * ID of vpc instance.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EndPointService resource.
 */
export interface EndPointServiceArgs {
    /**
     * Whether to automatically accept.
     */
    autoAcceptFlag: pulumi.Input<boolean>;
    /**
     * Name of end point service.
     */
    endPointServiceName: pulumi.Input<string>;
    /**
     * Id of service instance, like lb-xxx.
     */
    serviceInstanceId: pulumi.Input<string>;
    /**
     * Type of service instance, like `CLB`, `CDB`, `CRS`, default is `CLB`.
     */
    serviceType?: pulumi.Input<string>;
    /**
     * ID of vpc instance.
     */
    vpcId: pulumi.Input<string>;
}
