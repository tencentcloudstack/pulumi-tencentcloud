// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a CDC site
 *
 * ## Example Usage
 *
 * ### Create a basic CDC site
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.cdc.Site("example", {
 *     addressLine: "Tencent Building",
 *     city: "Guangzhou",
 *     country: "China",
 *     description: "desc.",
 *     province: "Guangdong Province",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Create a complete CDC site
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.cdc.Site("example", {
 *     addressLine: "Shenzhen Tencent Building",
 *     breakerRequirement: true,
 *     city: "Guangzhou",
 *     conditionRequirement: true,
 *     country: "China",
 *     description: "desc.",
 *     dimensionRequirement: true,
 *     fiberType: "MM",
 *     maxWeight: 100,
 *     needHelp: true,
 *     opticalStandard: "MM",
 *     optionalAddressLine: "Shenzhen Tencent Building of Binhai",
 *     powerConnectors: "380VAC3P",
 *     powerDrawKva: 10,
 *     powerFeedDrop: "DOWN",
 *     province: "Guangdong Province",
 *     redundantNetworking: true,
 *     redundantPower: true,
 *     uplinkCount: 2,
 *     uplinkSpeedGbps: 10,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * CDC site can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Cdc/site:Site example site-43qcf1ag
 * ```
 */
export class Site extends pulumi.CustomResource {
    /**
     * Get an existing Site resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SiteState, opts?: pulumi.CustomResourceOptions): Site {
        return new Site(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cdc/site:Site';

    /**
     * Returns true if the given object is an instance of Site.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Site {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Site.__pulumiType;
    }

    /**
     * Site Detail Address.
     */
    public readonly addressLine!: pulumi.Output<string>;
    /**
     * Whether there is an upstream circuit breaker.
     */
    public readonly breakerRequirement!: pulumi.Output<boolean>;
    /**
     * Site City.
     */
    public readonly city!: pulumi.Output<string>;
    /**
     * Whether the following environmental conditions are met: n1. There are no material requirements or the acceptance standard on site that will affect the delivery and installation of the CDC device. n2. The following conditions are met for finalized rack positions: Temperature ranges from 41 to 104 degrees F (5 to 40 degrees C). Humidity ranges from 10 degrees F (-12 degrees C) to 70 degrees F (21 degrees C) and relative humidity ranges from 8% RH to 80% RH. Air flows from front to back at the rack position and there is sufficient air in CFM (cubic feet per minute). The air quantity in CFM must be 145.8 times the power consumption (in KVA) of CDC.
     */
    public readonly conditionRequirement!: pulumi.Output<boolean>;
    /**
     * Site Country.
     */
    public readonly country!: pulumi.Output<string>;
    /**
     * Site Description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether the following dimension conditions are met: Your loading dock can accommodate one rack container (H x W x D = 94 x 54 x 48). You can provide a clear route from the delivery point of your rack (H x W x D = 80 x 24 x 48) to its final installation location. You should consider platforms, corridors, doors, turns, ramps, freight elevators as well as other access restrictions when measuring the depth. There shall be a 48 or greater front clearance and a 24 or greater rear clearance where the CDC is finally installed.
     */
    public readonly dimensionRequirement!: pulumi.Output<boolean>;
    /**
     * Site Fiber Type. Using optical fiber type to connect the CDC device to the network SM(Single-Mode) or MM(Multi-Mode) fibers are available.
     */
    public readonly fiberType!: pulumi.Output<string | undefined>;
    /**
     * Site Max Weight capacity (KG).
     */
    public readonly maxWeight!: pulumi.Output<number>;
    /**
     * Site Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether you need help from Tencent Cloud for rack installation.
     */
    public readonly needHelp!: pulumi.Output<boolean>;
    /**
     * Site Optical Standard. Optical standard used to connect the CDC device to the network This field depends on the uplink speed, optical fiber type, and distance to upstream equipment. Allow value: `SM`, `MM`.
     */
    public readonly opticalStandard!: pulumi.Output<string | undefined>;
    /**
     * Detailed address of the site area (to be added).
     */
    public readonly optionalAddressLine!: pulumi.Output<string | undefined>;
    /**
     * Site Power Connectors. Example: 380VAC3P.
     */
    public readonly powerConnectors!: pulumi.Output<string | undefined>;
    /**
     * Site Power DrawKva (KW).
     */
    public readonly powerDrawKva!: pulumi.Output<number>;
    /**
     * Site Power Feed Drop. Whether power is supplied from above or below the rack. Allow value: `UP`, `DOWN`.
     */
    public readonly powerFeedDrop!: pulumi.Output<string | undefined>;
    /**
     * Site Province.
     */
    public readonly province!: pulumi.Output<string>;
    /**
     * Whether redundant upstream equipment (switch or router) is provided so that both network devices can be connected to the network.
     */
    public readonly redundantNetworking!: pulumi.Output<boolean>;
    /**
     * Whether there is power redundancy.
     */
    public readonly redundantPower!: pulumi.Output<boolean>;
    /**
     * Number of uplinks used by each CDC device (2 devices per rack) when connected to the network.
     */
    public readonly uplinkCount!: pulumi.Output<number>;
    /**
     * Uplink speed from the network to Tencent Cloud Region.
     */
    public readonly uplinkSpeedGbps!: pulumi.Output<number>;

    /**
     * Create a Site resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SiteArgs | SiteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SiteState | undefined;
            resourceInputs["addressLine"] = state ? state.addressLine : undefined;
            resourceInputs["breakerRequirement"] = state ? state.breakerRequirement : undefined;
            resourceInputs["city"] = state ? state.city : undefined;
            resourceInputs["conditionRequirement"] = state ? state.conditionRequirement : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dimensionRequirement"] = state ? state.dimensionRequirement : undefined;
            resourceInputs["fiberType"] = state ? state.fiberType : undefined;
            resourceInputs["maxWeight"] = state ? state.maxWeight : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["needHelp"] = state ? state.needHelp : undefined;
            resourceInputs["opticalStandard"] = state ? state.opticalStandard : undefined;
            resourceInputs["optionalAddressLine"] = state ? state.optionalAddressLine : undefined;
            resourceInputs["powerConnectors"] = state ? state.powerConnectors : undefined;
            resourceInputs["powerDrawKva"] = state ? state.powerDrawKva : undefined;
            resourceInputs["powerFeedDrop"] = state ? state.powerFeedDrop : undefined;
            resourceInputs["province"] = state ? state.province : undefined;
            resourceInputs["redundantNetworking"] = state ? state.redundantNetworking : undefined;
            resourceInputs["redundantPower"] = state ? state.redundantPower : undefined;
            resourceInputs["uplinkCount"] = state ? state.uplinkCount : undefined;
            resourceInputs["uplinkSpeedGbps"] = state ? state.uplinkSpeedGbps : undefined;
        } else {
            const args = argsOrState as SiteArgs | undefined;
            if ((!args || args.addressLine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressLine'");
            }
            if ((!args || args.city === undefined) && !opts.urn) {
                throw new Error("Missing required property 'city'");
            }
            if ((!args || args.country === undefined) && !opts.urn) {
                throw new Error("Missing required property 'country'");
            }
            if ((!args || args.province === undefined) && !opts.urn) {
                throw new Error("Missing required property 'province'");
            }
            resourceInputs["addressLine"] = args ? args.addressLine : undefined;
            resourceInputs["breakerRequirement"] = args ? args.breakerRequirement : undefined;
            resourceInputs["city"] = args ? args.city : undefined;
            resourceInputs["conditionRequirement"] = args ? args.conditionRequirement : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dimensionRequirement"] = args ? args.dimensionRequirement : undefined;
            resourceInputs["fiberType"] = args ? args.fiberType : undefined;
            resourceInputs["maxWeight"] = args ? args.maxWeight : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["needHelp"] = args ? args.needHelp : undefined;
            resourceInputs["opticalStandard"] = args ? args.opticalStandard : undefined;
            resourceInputs["optionalAddressLine"] = args ? args.optionalAddressLine : undefined;
            resourceInputs["powerConnectors"] = args ? args.powerConnectors : undefined;
            resourceInputs["powerDrawKva"] = args ? args.powerDrawKva : undefined;
            resourceInputs["powerFeedDrop"] = args ? args.powerFeedDrop : undefined;
            resourceInputs["province"] = args ? args.province : undefined;
            resourceInputs["redundantNetworking"] = args ? args.redundantNetworking : undefined;
            resourceInputs["redundantPower"] = args ? args.redundantPower : undefined;
            resourceInputs["uplinkCount"] = args ? args.uplinkCount : undefined;
            resourceInputs["uplinkSpeedGbps"] = args ? args.uplinkSpeedGbps : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Site.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Site resources.
 */
export interface SiteState {
    /**
     * Site Detail Address.
     */
    addressLine?: pulumi.Input<string>;
    /**
     * Whether there is an upstream circuit breaker.
     */
    breakerRequirement?: pulumi.Input<boolean>;
    /**
     * Site City.
     */
    city?: pulumi.Input<string>;
    /**
     * Whether the following environmental conditions are met: n1. There are no material requirements or the acceptance standard on site that will affect the delivery and installation of the CDC device. n2. The following conditions are met for finalized rack positions: Temperature ranges from 41 to 104 degrees F (5 to 40 degrees C). Humidity ranges from 10 degrees F (-12 degrees C) to 70 degrees F (21 degrees C) and relative humidity ranges from 8% RH to 80% RH. Air flows from front to back at the rack position and there is sufficient air in CFM (cubic feet per minute). The air quantity in CFM must be 145.8 times the power consumption (in KVA) of CDC.
     */
    conditionRequirement?: pulumi.Input<boolean>;
    /**
     * Site Country.
     */
    country?: pulumi.Input<string>;
    /**
     * Site Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the following dimension conditions are met: Your loading dock can accommodate one rack container (H x W x D = 94 x 54 x 48). You can provide a clear route from the delivery point of your rack (H x W x D = 80 x 24 x 48) to its final installation location. You should consider platforms, corridors, doors, turns, ramps, freight elevators as well as other access restrictions when measuring the depth. There shall be a 48 or greater front clearance and a 24 or greater rear clearance where the CDC is finally installed.
     */
    dimensionRequirement?: pulumi.Input<boolean>;
    /**
     * Site Fiber Type. Using optical fiber type to connect the CDC device to the network SM(Single-Mode) or MM(Multi-Mode) fibers are available.
     */
    fiberType?: pulumi.Input<string>;
    /**
     * Site Max Weight capacity (KG).
     */
    maxWeight?: pulumi.Input<number>;
    /**
     * Site Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether you need help from Tencent Cloud for rack installation.
     */
    needHelp?: pulumi.Input<boolean>;
    /**
     * Site Optical Standard. Optical standard used to connect the CDC device to the network This field depends on the uplink speed, optical fiber type, and distance to upstream equipment. Allow value: `SM`, `MM`.
     */
    opticalStandard?: pulumi.Input<string>;
    /**
     * Detailed address of the site area (to be added).
     */
    optionalAddressLine?: pulumi.Input<string>;
    /**
     * Site Power Connectors. Example: 380VAC3P.
     */
    powerConnectors?: pulumi.Input<string>;
    /**
     * Site Power DrawKva (KW).
     */
    powerDrawKva?: pulumi.Input<number>;
    /**
     * Site Power Feed Drop. Whether power is supplied from above or below the rack. Allow value: `UP`, `DOWN`.
     */
    powerFeedDrop?: pulumi.Input<string>;
    /**
     * Site Province.
     */
    province?: pulumi.Input<string>;
    /**
     * Whether redundant upstream equipment (switch or router) is provided so that both network devices can be connected to the network.
     */
    redundantNetworking?: pulumi.Input<boolean>;
    /**
     * Whether there is power redundancy.
     */
    redundantPower?: pulumi.Input<boolean>;
    /**
     * Number of uplinks used by each CDC device (2 devices per rack) when connected to the network.
     */
    uplinkCount?: pulumi.Input<number>;
    /**
     * Uplink speed from the network to Tencent Cloud Region.
     */
    uplinkSpeedGbps?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Site resource.
 */
export interface SiteArgs {
    /**
     * Site Detail Address.
     */
    addressLine: pulumi.Input<string>;
    /**
     * Whether there is an upstream circuit breaker.
     */
    breakerRequirement?: pulumi.Input<boolean>;
    /**
     * Site City.
     */
    city: pulumi.Input<string>;
    /**
     * Whether the following environmental conditions are met: n1. There are no material requirements or the acceptance standard on site that will affect the delivery and installation of the CDC device. n2. The following conditions are met for finalized rack positions: Temperature ranges from 41 to 104 degrees F (5 to 40 degrees C). Humidity ranges from 10 degrees F (-12 degrees C) to 70 degrees F (21 degrees C) and relative humidity ranges from 8% RH to 80% RH. Air flows from front to back at the rack position and there is sufficient air in CFM (cubic feet per minute). The air quantity in CFM must be 145.8 times the power consumption (in KVA) of CDC.
     */
    conditionRequirement?: pulumi.Input<boolean>;
    /**
     * Site Country.
     */
    country: pulumi.Input<string>;
    /**
     * Site Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the following dimension conditions are met: Your loading dock can accommodate one rack container (H x W x D = 94 x 54 x 48). You can provide a clear route from the delivery point of your rack (H x W x D = 80 x 24 x 48) to its final installation location. You should consider platforms, corridors, doors, turns, ramps, freight elevators as well as other access restrictions when measuring the depth. There shall be a 48 or greater front clearance and a 24 or greater rear clearance where the CDC is finally installed.
     */
    dimensionRequirement?: pulumi.Input<boolean>;
    /**
     * Site Fiber Type. Using optical fiber type to connect the CDC device to the network SM(Single-Mode) or MM(Multi-Mode) fibers are available.
     */
    fiberType?: pulumi.Input<string>;
    /**
     * Site Max Weight capacity (KG).
     */
    maxWeight?: pulumi.Input<number>;
    /**
     * Site Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether you need help from Tencent Cloud for rack installation.
     */
    needHelp?: pulumi.Input<boolean>;
    /**
     * Site Optical Standard. Optical standard used to connect the CDC device to the network This field depends on the uplink speed, optical fiber type, and distance to upstream equipment. Allow value: `SM`, `MM`.
     */
    opticalStandard?: pulumi.Input<string>;
    /**
     * Detailed address of the site area (to be added).
     */
    optionalAddressLine?: pulumi.Input<string>;
    /**
     * Site Power Connectors. Example: 380VAC3P.
     */
    powerConnectors?: pulumi.Input<string>;
    /**
     * Site Power DrawKva (KW).
     */
    powerDrawKva?: pulumi.Input<number>;
    /**
     * Site Power Feed Drop. Whether power is supplied from above or below the rack. Allow value: `UP`, `DOWN`.
     */
    powerFeedDrop?: pulumi.Input<string>;
    /**
     * Site Province.
     */
    province: pulumi.Input<string>;
    /**
     * Whether redundant upstream equipment (switch or router) is provided so that both network devices can be connected to the network.
     */
    redundantNetworking?: pulumi.Input<boolean>;
    /**
     * Whether there is power redundancy.
     */
    redundantPower?: pulumi.Input<boolean>;
    /**
     * Number of uplinks used by each CDC device (2 devices per rack) when connected to the network.
     */
    uplinkCount?: pulumi.Input<number>;
    /**
     * Uplink speed from the network to Tencent Cloud Region.
     */
    uplinkSpeedGbps?: pulumi.Input<number>;
}
