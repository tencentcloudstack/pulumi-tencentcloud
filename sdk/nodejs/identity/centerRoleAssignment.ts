// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a organization identityCenterRoleAssignment
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const identityCenterRoleAssignment = new tencentcloud.identity.CenterRoleAssignment("identityCenterRoleAssignment", {
 *     principalId: "u-xxxxxx",
 *     principalType: "User",
 *     roleConfigurationId: "rc-xxxxxx",
 *     targetType: "MemberUin",
 *     targetUin: "xxxxxx",
 *     zoneId: "z-xxxxxx",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * organization identity_center_role_assignment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment identity_center_role_assignment {zoneId}#{roleConfigurationId}#{targetType}#{targetUinString}#{principalType}#{principalId}
 * ```
 */
export class CenterRoleAssignment extends pulumi.CustomResource {
    /**
     * Get an existing CenterRoleAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CenterRoleAssignmentState, opts?: pulumi.CustomResourceOptions): CenterRoleAssignment {
        return new CenterRoleAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment';

    /**
     * Returns true if the given object is an instance of CenterRoleAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CenterRoleAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CenterRoleAssignment.__pulumiType;
    }

    /**
     * Create time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * When you remove the last authorization configured with a certain privilege on a group account target account, whether to cancel the privilege configuration deployment at the same time. Value: DeprovisionForLastRoleAssignmentOnAccount: Remove privileges to configure deployment. None (default): Configure deployment without delegating privileges.
     */
    public readonly deprovisionStrategy!: pulumi.Output<string | undefined>;
    /**
     * Identity ID for the CAM user synchronization. Valid values:
     * When the PrincipalType value is Group, it is the CIC user group ID (g-********).
     * When the PrincipalType value is User, it is the CIC user ID (u-********).
     */
    public readonly principalId!: pulumi.Output<string>;
    /**
     * Principal name.
     */
    public /*out*/ readonly principalName!: pulumi.Output<string>;
    /**
     * Identity type for the CAM user synchronization. Valid values:
     *
     * User: indicates that the identity for the CAM user synchronization is a CIC user.
     * Group: indicates that the identity for the CAM user synchronization is a CIC user group.
     */
    public readonly principalType!: pulumi.Output<string>;
    /**
     * Permission configuration ID.
     */
    public readonly roleConfigurationId!: pulumi.Output<string>;
    /**
     * Role configuration name.
     */
    public /*out*/ readonly roleConfigurationName!: pulumi.Output<string>;
    /**
     * Target name.
     */
    public /*out*/ readonly targetName!: pulumi.Output<string>;
    /**
     * Type of the synchronized target account of the Tencent Cloud Organization. ManagerUin: admin account; MemberUin: member account.
     */
    public readonly targetType!: pulumi.Output<string>;
    /**
     * UIN of the synchronized target account of the Tencent Cloud Organization.
     */
    public readonly targetUin!: pulumi.Output<number>;
    /**
     * Update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Space ID.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a CenterRoleAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CenterRoleAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CenterRoleAssignmentArgs | CenterRoleAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CenterRoleAssignmentState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deprovisionStrategy"] = state ? state.deprovisionStrategy : undefined;
            resourceInputs["principalId"] = state ? state.principalId : undefined;
            resourceInputs["principalName"] = state ? state.principalName : undefined;
            resourceInputs["principalType"] = state ? state.principalType : undefined;
            resourceInputs["roleConfigurationId"] = state ? state.roleConfigurationId : undefined;
            resourceInputs["roleConfigurationName"] = state ? state.roleConfigurationName : undefined;
            resourceInputs["targetName"] = state ? state.targetName : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
            resourceInputs["targetUin"] = state ? state.targetUin : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as CenterRoleAssignmentArgs | undefined;
            if ((!args || args.principalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalId'");
            }
            if ((!args || args.principalType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalType'");
            }
            if ((!args || args.roleConfigurationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleConfigurationId'");
            }
            if ((!args || args.targetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetType'");
            }
            if ((!args || args.targetUin === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetUin'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["deprovisionStrategy"] = args ? args.deprovisionStrategy : undefined;
            resourceInputs["principalId"] = args ? args.principalId : undefined;
            resourceInputs["principalType"] = args ? args.principalType : undefined;
            resourceInputs["roleConfigurationId"] = args ? args.roleConfigurationId : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["targetUin"] = args ? args.targetUin : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["principalName"] = undefined /*out*/;
            resourceInputs["roleConfigurationName"] = undefined /*out*/;
            resourceInputs["targetName"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CenterRoleAssignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CenterRoleAssignment resources.
 */
export interface CenterRoleAssignmentState {
    /**
     * Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * When you remove the last authorization configured with a certain privilege on a group account target account, whether to cancel the privilege configuration deployment at the same time. Value: DeprovisionForLastRoleAssignmentOnAccount: Remove privileges to configure deployment. None (default): Configure deployment without delegating privileges.
     */
    deprovisionStrategy?: pulumi.Input<string>;
    /**
     * Identity ID for the CAM user synchronization. Valid values:
     * When the PrincipalType value is Group, it is the CIC user group ID (g-********).
     * When the PrincipalType value is User, it is the CIC user ID (u-********).
     */
    principalId?: pulumi.Input<string>;
    /**
     * Principal name.
     */
    principalName?: pulumi.Input<string>;
    /**
     * Identity type for the CAM user synchronization. Valid values:
     *
     * User: indicates that the identity for the CAM user synchronization is a CIC user.
     * Group: indicates that the identity for the CAM user synchronization is a CIC user group.
     */
    principalType?: pulumi.Input<string>;
    /**
     * Permission configuration ID.
     */
    roleConfigurationId?: pulumi.Input<string>;
    /**
     * Role configuration name.
     */
    roleConfigurationName?: pulumi.Input<string>;
    /**
     * Target name.
     */
    targetName?: pulumi.Input<string>;
    /**
     * Type of the synchronized target account of the Tencent Cloud Organization. ManagerUin: admin account; MemberUin: member account.
     */
    targetType?: pulumi.Input<string>;
    /**
     * UIN of the synchronized target account of the Tencent Cloud Organization.
     */
    targetUin?: pulumi.Input<number>;
    /**
     * Update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Space ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CenterRoleAssignment resource.
 */
export interface CenterRoleAssignmentArgs {
    /**
     * When you remove the last authorization configured with a certain privilege on a group account target account, whether to cancel the privilege configuration deployment at the same time. Value: DeprovisionForLastRoleAssignmentOnAccount: Remove privileges to configure deployment. None (default): Configure deployment without delegating privileges.
     */
    deprovisionStrategy?: pulumi.Input<string>;
    /**
     * Identity ID for the CAM user synchronization. Valid values:
     * When the PrincipalType value is Group, it is the CIC user group ID (g-********).
     * When the PrincipalType value is User, it is the CIC user ID (u-********).
     */
    principalId: pulumi.Input<string>;
    /**
     * Identity type for the CAM user synchronization. Valid values:
     *
     * User: indicates that the identity for the CAM user synchronization is a CIC user.
     * Group: indicates that the identity for the CAM user synchronization is a CIC user group.
     */
    principalType: pulumi.Input<string>;
    /**
     * Permission configuration ID.
     */
    roleConfigurationId: pulumi.Input<string>;
    /**
     * Type of the synchronized target account of the Tencent Cloud Organization. ManagerUin: admin account; MemberUin: member account.
     */
    targetType: pulumi.Input<string>;
    /**
     * UIN of the synchronized target account of the Tencent Cloud Organization.
     */
    targetUin: pulumi.Input<number>;
    /**
     * Space ID.
     */
    zoneId: pulumi.Input<string>;
}
