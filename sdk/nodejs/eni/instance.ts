// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create an ENI.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const zones = tencentcloud.Availability.getZonesByProduct({
 *     product: "vpc",
 * });
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: zones.then(zones => zones.zones?.[0]?.name),
 *     vpcId: vpc.id,
 *     cidrBlock: "10.0.0.0/16",
 *     isMulticast: false,
 * });
 * const example1 = new tencentcloud.security.Group("example1", {
 *     description: "sg desc.",
 *     projectId: 0,
 *     tags: {
 *         example: "test",
 *     },
 * });
 * const example2 = new tencentcloud.security.Group("example2", {
 *     description: "sg desc.",
 *     projectId: 0,
 *     tags: {
 *         example: "test",
 *     },
 * });
 * const example = new tencentcloud.eni.Instance("example", {
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     description: "eni desc.",
 *     ipv4Count: 1,
 *     securityGroups: [
 *         example1.id,
 *         example2.id,
 *     ],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ENI can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Eni/instance:Instance tencentcloud_eni.foo eni-qka182br
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Eni/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * CDC instance ID.
     */
    public /*out*/ readonly cdcId!: pulumi.Output<string>;
    /**
     * Creation time of the ENI.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the IP, maximum length 25.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The number of intranet IPv4s. When it is greater than 1, there is only one primary intranet IP. The others are auxiliary intranet IPs, which conflict with `ipv4s`.
     */
    public readonly ipv4Count!: pulumi.Output<number | undefined>;
    /**
     * An information list of IPv4s. Each element contains the following attributes:
     */
    public /*out*/ readonly ipv4Infos!: pulumi.Output<outputs.Eni.InstanceIpv4Info[]>;
    /**
     * Applying for intranet IPv4s collection, conflict with `ipv4Count`. When there are multiple ipv4s, can only be one primary IP, and the maximum length of the array is 30. Each element contains the following attributes:
     */
    public readonly ipv4s!: pulumi.Output<outputs.Eni.InstanceIpv4[] | undefined>;
    /**
     * MAC address.
     */
    public /*out*/ readonly mac!: pulumi.Output<string>;
    /**
     * Name of the ENI, maximum length 60.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates whether the IP is primary.
     */
    public /*out*/ readonly primary!: pulumi.Output<boolean>;
    /**
     * A set of security group IDs.
     */
    public readonly securityGroups!: pulumi.Output<string[]>;
    /**
     * State of the ENI.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * ID of the subnet within this vpc.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Tags of the ENI.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * ID of the vpc.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["cdcId"] = state ? state.cdcId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipv4Count"] = state ? state.ipv4Count : undefined;
            resourceInputs["ipv4Infos"] = state ? state.ipv4Infos : undefined;
            resourceInputs["ipv4s"] = state ? state.ipv4s : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primary"] = state ? state.primary : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipv4Count"] = args ? args.ipv4Count : undefined;
            resourceInputs["ipv4s"] = args ? args.ipv4s : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["cdcId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["ipv4Infos"] = undefined /*out*/;
            resourceInputs["mac"] = undefined /*out*/;
            resourceInputs["primary"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * CDC instance ID.
     */
    cdcId?: pulumi.Input<string>;
    /**
     * Creation time of the ENI.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the IP, maximum length 25.
     */
    description?: pulumi.Input<string>;
    /**
     * The number of intranet IPv4s. When it is greater than 1, there is only one primary intranet IP. The others are auxiliary intranet IPs, which conflict with `ipv4s`.
     */
    ipv4Count?: pulumi.Input<number>;
    /**
     * An information list of IPv4s. Each element contains the following attributes:
     */
    ipv4Infos?: pulumi.Input<pulumi.Input<inputs.Eni.InstanceIpv4Info>[]>;
    /**
     * Applying for intranet IPv4s collection, conflict with `ipv4Count`. When there are multiple ipv4s, can only be one primary IP, and the maximum length of the array is 30. Each element contains the following attributes:
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.Eni.InstanceIpv4>[]>;
    /**
     * MAC address.
     */
    mac?: pulumi.Input<string>;
    /**
     * Name of the ENI, maximum length 60.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates whether the IP is primary.
     */
    primary?: pulumi.Input<boolean>;
    /**
     * A set of security group IDs.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * State of the ENI.
     */
    state?: pulumi.Input<string>;
    /**
     * ID of the subnet within this vpc.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags of the ENI.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the vpc.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Description of the IP, maximum length 25.
     */
    description?: pulumi.Input<string>;
    /**
     * The number of intranet IPv4s. When it is greater than 1, there is only one primary intranet IP. The others are auxiliary intranet IPs, which conflict with `ipv4s`.
     */
    ipv4Count?: pulumi.Input<number>;
    /**
     * Applying for intranet IPv4s collection, conflict with `ipv4Count`. When there are multiple ipv4s, can only be one primary IP, and the maximum length of the array is 30. Each element contains the following attributes:
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.Eni.InstanceIpv4>[]>;
    /**
     * Name of the ENI, maximum length 60.
     */
    name?: pulumi.Input<string>;
    /**
     * A set of security group IDs.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of the subnet within this vpc.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Tags of the ENI.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the vpc.
     */
    vpcId: pulumi.Input<string>;
}
