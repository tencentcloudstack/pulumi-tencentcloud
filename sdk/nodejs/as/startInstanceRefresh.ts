// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create as instance refresh
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.as.StartInstanceRefresh("example", {
 *     autoScalingGroupId: "asg-9dn1a5y6",
 *     refreshMode: "ROLLING_UPDATE_RESET",
 *     refreshSettings: {
 *         checkInstanceTargetHealth: false,
 *         rollingUpdateSettings: {
 *             batchNumber: 1,
 *             batchPause: "AUTOMATIC",
 *         },
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class StartInstanceRefresh extends pulumi.CustomResource {
    /**
     * Get an existing StartInstanceRefresh resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StartInstanceRefreshState, opts?: pulumi.CustomResourceOptions): StartInstanceRefresh {
        return new StartInstanceRefresh(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:As/startInstanceRefresh:StartInstanceRefresh';

    /**
     * Returns true if the given object is an instance of StartInstanceRefresh.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StartInstanceRefresh {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StartInstanceRefresh.__pulumiType;
    }

    /**
     * Scaling group ID.
     */
    public readonly autoScalingGroupId!: pulumi.Output<string>;
    /**
     * Refresh mode, currently, only rolling updates are supported, with the default value being ROLLING_UPDATE_RESET.
     */
    public readonly refreshMode!: pulumi.Output<string | undefined>;
    /**
     * Refresh settings.
     */
    public readonly refreshSettings!: pulumi.Output<outputs.As.StartInstanceRefreshRefreshSettings>;

    /**
     * Create a StartInstanceRefresh resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StartInstanceRefreshArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StartInstanceRefreshArgs | StartInstanceRefreshState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StartInstanceRefreshState | undefined;
            resourceInputs["autoScalingGroupId"] = state ? state.autoScalingGroupId : undefined;
            resourceInputs["refreshMode"] = state ? state.refreshMode : undefined;
            resourceInputs["refreshSettings"] = state ? state.refreshSettings : undefined;
        } else {
            const args = argsOrState as StartInstanceRefreshArgs | undefined;
            if ((!args || args.autoScalingGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoScalingGroupId'");
            }
            if ((!args || args.refreshSettings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'refreshSettings'");
            }
            resourceInputs["autoScalingGroupId"] = args ? args.autoScalingGroupId : undefined;
            resourceInputs["refreshMode"] = args ? args.refreshMode : undefined;
            resourceInputs["refreshSettings"] = args ? args.refreshSettings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StartInstanceRefresh.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StartInstanceRefresh resources.
 */
export interface StartInstanceRefreshState {
    /**
     * Scaling group ID.
     */
    autoScalingGroupId?: pulumi.Input<string>;
    /**
     * Refresh mode, currently, only rolling updates are supported, with the default value being ROLLING_UPDATE_RESET.
     */
    refreshMode?: pulumi.Input<string>;
    /**
     * Refresh settings.
     */
    refreshSettings?: pulumi.Input<inputs.As.StartInstanceRefreshRefreshSettings>;
}

/**
 * The set of arguments for constructing a StartInstanceRefresh resource.
 */
export interface StartInstanceRefreshArgs {
    /**
     * Scaling group ID.
     */
    autoScalingGroupId: pulumi.Input<string>;
    /**
     * Refresh mode, currently, only rolling updates are supported, with the default value being ROLLING_UPDATE_RESET.
     */
    refreshMode?: pulumi.Input<string>;
    /**
     * Refresh settings.
     */
    refreshSettings: pulumi.Input<inputs.As.StartInstanceRefreshRefreshSettings>;
}
