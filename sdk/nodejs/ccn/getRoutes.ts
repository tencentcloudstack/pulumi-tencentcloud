// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of CCN routes.
 *
 * ## Example Usage
 *
 * ### Query CCN instance all routes
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const routes = tencentcloud.Ccn.getRoutes({
 *     ccnId: "ccn-gr7nynbd",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query CCN instance routes by filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const routes = tencentcloud.Ccn.getRoutes({
 *     ccnId: "ccn-gr7nynbd",
 *     filters: [{
 *         name: "route-table-id",
 *         values: ["ccnrtb-jpf7bzn3"],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRoutes(args: GetRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Ccn/getRoutes:getRoutes", {
        "ccnId": args.ccnId,
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutes.
 */
export interface GetRoutesArgs {
    /**
     * ID of the CCN to be queried.
     */
    ccnId: string;
    /**
     * Filter conditions.
     */
    filters?: inputs.Ccn.GetRoutesFilter[];
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getRoutes.
 */
export interface GetRoutesResult {
    readonly ccnId: string;
    readonly filters?: outputs.Ccn.GetRoutesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    /**
     * CCN route list.
     */
    readonly routeLists: outputs.Ccn.GetRoutesRouteList[];
}
/**
 * Use this data source to query detailed information of CCN routes.
 *
 * ## Example Usage
 *
 * ### Query CCN instance all routes
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const routes = tencentcloud.Ccn.getRoutes({
 *     ccnId: "ccn-gr7nynbd",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Query CCN instance routes by filter
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const routes = tencentcloud.Ccn.getRoutes({
 *     ccnId: "ccn-gr7nynbd",
 *     filters: [{
 *         name: "route-table-id",
 *         values: ["ccnrtb-jpf7bzn3"],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRoutesOutput(args: GetRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutesResult> {
    return pulumi.output(args).apply((a: any) => getRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getRoutes.
 */
export interface GetRoutesOutputArgs {
    /**
     * ID of the CCN to be queried.
     */
    ccnId: pulumi.Input<string>;
    /**
     * Filter conditions.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.Ccn.GetRoutesFilterArgs>[]>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
}
