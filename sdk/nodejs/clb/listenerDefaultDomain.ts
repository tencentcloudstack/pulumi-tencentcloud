// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to set clb listener default domain
 *
 * ## Example Usage
 *
 * ### Set default domain
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.clb.ListenerDefaultDomain("example", {
 *     clbId: "lb-g1miv1ok",
 *     domain: "3.com",
 *     listenerId: "lbl-duilx5qm",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * CLB listener default domain can be imported using the id (version >= 1.47.0), e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Clb/listenerDefaultDomain:ListenerDefaultDomain example lb-k2zjp9lv#lbl-hh141sn9
 * ```
 */
export class ListenerDefaultDomain extends pulumi.CustomResource {
    /**
     * Get an existing ListenerDefaultDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListenerDefaultDomainState, opts?: pulumi.CustomResourceOptions): ListenerDefaultDomain {
        return new ListenerDefaultDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Clb/listenerDefaultDomain:ListenerDefaultDomain';

    /**
     * Returns true if the given object is an instance of ListenerDefaultDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ListenerDefaultDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ListenerDefaultDomain.__pulumiType;
    }

    /**
     * ID of CLB instance.
     */
    public readonly clbId!: pulumi.Output<string>;
    /**
     * Domain name of the listener rule. Single domain rules are passed to `domain`, and multi domain rules are passed to `domains`.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * ID of CLB listener.
     */
    public readonly listenerId!: pulumi.Output<string>;
    /**
     * ID of this CLB listener rule.
     */
    public /*out*/ readonly ruleId!: pulumi.Output<string>;

    /**
     * Create a ListenerDefaultDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListenerDefaultDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ListenerDefaultDomainArgs | ListenerDefaultDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ListenerDefaultDomainState | undefined;
            resourceInputs["clbId"] = state ? state.clbId : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
        } else {
            const args = argsOrState as ListenerDefaultDomainArgs | undefined;
            if ((!args || args.clbId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clbId'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.listenerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            resourceInputs["clbId"] = args ? args.clbId : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ListenerDefaultDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ListenerDefaultDomain resources.
 */
export interface ListenerDefaultDomainState {
    /**
     * ID of CLB instance.
     */
    clbId?: pulumi.Input<string>;
    /**
     * Domain name of the listener rule. Single domain rules are passed to `domain`, and multi domain rules are passed to `domains`.
     */
    domain?: pulumi.Input<string>;
    /**
     * ID of CLB listener.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * ID of this CLB listener rule.
     */
    ruleId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ListenerDefaultDomain resource.
 */
export interface ListenerDefaultDomainArgs {
    /**
     * ID of CLB instance.
     */
    clbId: pulumi.Input<string>;
    /**
     * Domain name of the listener rule. Single domain rules are passed to `domain`, and multi domain rules are passed to `domains`.
     */
    domain: pulumi.Input<string>;
    /**
     * ID of CLB listener.
     */
    listenerId: pulumi.Input<string>;
}
