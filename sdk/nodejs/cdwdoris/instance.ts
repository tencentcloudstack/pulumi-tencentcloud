// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a cdwdoris instance
 *
 * ## Example Usage
 *
 * ### Create a POSTPAID instance
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-6";
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "172.16.0.0/16"});
 * // create subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: availabilityZone,
 *     vpcId: vpc.id,
 *     cidrBlock: "172.16.0.0/24",
 *     isMulticast: false,
 * });
 * // create security group
 * const exampleGroup = new tencentcloud.security.Group("exampleGroup", {
 *     description: "security group desc.",
 *     tags: {
 *         createBy: "Terraform",
 *     },
 * });
 * // create POSTPAID instance
 * const exampleInstance = new tencentcloud.cdwdoris.Instance("exampleInstance", {
 *     zone: availabilityZone,
 *     userVpcId: vpc.id,
 *     userSubnetId: subnet.id,
 *     productVersion: "2.1",
 *     instanceName: "tf-example",
 *     dorisUserPwd: "Password@test",
 *     haFlag: false,
 *     caseSensitive: 0,
 *     enableMultiZones: false,
 *     workloadGroupStatus: "open",
 *     securityGroupIds: [exampleGroup.id],
 *     chargeProperties: {
 *         chargeType: "POSTPAID_BY_HOUR",
 *     },
 *     feSpec: {
 *         specName: "S_4_16_P",
 *         count: 3,
 *         diskSize: 200,
 *     },
 *     beSpec: {
 *         specName: "S_4_16_P",
 *         count: 3,
 *         diskSize: 200,
 *     },
 *     tags: [{
 *         tagKey: "createBy",
 *         tagValue: "Terraform",
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Create a POSTPAID instance
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-6";
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "172.16.0.0/16"});
 * // create subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     availabilityZone: availabilityZone,
 *     vpcId: vpc.id,
 *     cidrBlock: "172.16.0.0/24",
 *     isMulticast: false,
 * });
 * // create security group
 * const exampleGroup = new tencentcloud.security.Group("exampleGroup", {
 *     description: "security group desc.",
 *     tags: {
 *         createBy: "Terraform",
 *     },
 * });
 * // create PREPAID instance
 * const exampleInstance = new tencentcloud.cdwdoris.Instance("exampleInstance", {
 *     zone: availabilityZone,
 *     userVpcId: vpc.id,
 *     userSubnetId: subnet.id,
 *     productVersion: "2.1",
 *     instanceName: "tf-example",
 *     dorisUserPwd: "Password@test",
 *     haFlag: false,
 *     caseSensitive: 0,
 *     enableMultiZones: false,
 *     workloadGroupStatus: "close",
 *     securityGroupIds: [exampleGroup.id],
 *     chargeProperties: {
 *         chargeType: "PREPAID",
 *         timeSpan: 1,
 *         timeUnit: "m",
 *     },
 *     feSpec: {
 *         specName: "S_4_16_P",
 *         count: 3,
 *         diskSize: 200,
 *     },
 *     beSpec: {
 *         specName: "S_4_16_P",
 *         count: 3,
 *         diskSize: 200,
 *     },
 *     tags: [{
 *         tagKey: "createBy",
 *         tagValue: "Terraform",
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cdwdoris/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * BE specifications.
     */
    public readonly beSpec!: pulumi.Output<outputs.Cdwdoris.InstanceBeSpec>;
    /**
     * Whether the table name is case sensitive, 0 refers to sensitive, 1 refers to insensitive, compared in lowercase; 2 refers to insensitive, and the table name is changed to lowercase for storage.
     */
    public readonly caseSensitive!: pulumi.Output<number | undefined>;
    /**
     * Payment type.
     */
    public readonly chargeProperties!: pulumi.Output<outputs.Cdwdoris.InstanceChargeProperties>;
    /**
     * Database password.
     */
    public readonly dorisUserPwd!: pulumi.Output<string>;
    /**
     * Whether to enable multi-availability zone.
     */
    public readonly enableMultiZones!: pulumi.Output<boolean | undefined>;
    /**
     * FE specifications.
     */
    public readonly feSpec!: pulumi.Output<outputs.Cdwdoris.InstanceFeSpec>;
    /**
     * Whether it is highly available.
     */
    public readonly haFlag!: pulumi.Output<boolean>;
    /**
     * High availability type: 0 indicates non-high availability (only one FE, FeSpec.CreateInstanceSpec.Count=1), 1 indicates read high availability (at least 3 FEs must be deployed, FeSpec.CreateInstanceSpec.Count>=3, and it must be an odd number), 2 indicates read and write high availability (at least 5 FEs must be deployed, FeSpec.CreateInstanceSpec.Count>=5, and it must be an odd number).
     */
    public readonly haType!: pulumi.Output<number | undefined>;
    /**
     * Instance name.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * Product version number.
     */
    public readonly productVersion!: pulumi.Output<string>;
    /**
     * Security Group Id list.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Tag list.
     */
    public readonly tags!: pulumi.Output<outputs.Cdwdoris.InstanceTag[] | undefined>;
    /**
     * After the Multi-AZ is enabled, all user's Availability Zones and Subnets information are shown.
     */
    public readonly userMultiZoneInfos!: pulumi.Output<outputs.Cdwdoris.InstanceUserMultiZoneInfos | undefined>;
    /**
     * User subnet ID.
     */
    public readonly userSubnetId!: pulumi.Output<string>;
    /**
     * User VPCID.
     */
    public readonly userVpcId!: pulumi.Output<string>;
    /**
     * Whether to enable resource group. `open` - enable, `close` - disable.
     */
    public readonly workloadGroupStatus!: pulumi.Output<string>;
    /**
     * Availability zone.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["beSpec"] = state ? state.beSpec : undefined;
            resourceInputs["caseSensitive"] = state ? state.caseSensitive : undefined;
            resourceInputs["chargeProperties"] = state ? state.chargeProperties : undefined;
            resourceInputs["dorisUserPwd"] = state ? state.dorisUserPwd : undefined;
            resourceInputs["enableMultiZones"] = state ? state.enableMultiZones : undefined;
            resourceInputs["feSpec"] = state ? state.feSpec : undefined;
            resourceInputs["haFlag"] = state ? state.haFlag : undefined;
            resourceInputs["haType"] = state ? state.haType : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["productVersion"] = state ? state.productVersion : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userMultiZoneInfos"] = state ? state.userMultiZoneInfos : undefined;
            resourceInputs["userSubnetId"] = state ? state.userSubnetId : undefined;
            resourceInputs["userVpcId"] = state ? state.userVpcId : undefined;
            resourceInputs["workloadGroupStatus"] = state ? state.workloadGroupStatus : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.beSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'beSpec'");
            }
            if ((!args || args.chargeProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'chargeProperties'");
            }
            if ((!args || args.dorisUserPwd === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dorisUserPwd'");
            }
            if ((!args || args.feSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'feSpec'");
            }
            if ((!args || args.haFlag === undefined) && !opts.urn) {
                throw new Error("Missing required property 'haFlag'");
            }
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.productVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productVersion'");
            }
            if ((!args || args.userSubnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userSubnetId'");
            }
            if ((!args || args.userVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userVpcId'");
            }
            if ((!args || args.workloadGroupStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workloadGroupStatus'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["beSpec"] = args ? args.beSpec : undefined;
            resourceInputs["caseSensitive"] = args ? args.caseSensitive : undefined;
            resourceInputs["chargeProperties"] = args ? args.chargeProperties : undefined;
            resourceInputs["dorisUserPwd"] = args?.dorisUserPwd ? pulumi.secret(args.dorisUserPwd) : undefined;
            resourceInputs["enableMultiZones"] = args ? args.enableMultiZones : undefined;
            resourceInputs["feSpec"] = args ? args.feSpec : undefined;
            resourceInputs["haFlag"] = args ? args.haFlag : undefined;
            resourceInputs["haType"] = args ? args.haType : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["productVersion"] = args ? args.productVersion : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userMultiZoneInfos"] = args ? args.userMultiZoneInfos : undefined;
            resourceInputs["userSubnetId"] = args ? args.userSubnetId : undefined;
            resourceInputs["userVpcId"] = args ? args.userVpcId : undefined;
            resourceInputs["workloadGroupStatus"] = args ? args.workloadGroupStatus : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["dorisUserPwd"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * BE specifications.
     */
    beSpec?: pulumi.Input<inputs.Cdwdoris.InstanceBeSpec>;
    /**
     * Whether the table name is case sensitive, 0 refers to sensitive, 1 refers to insensitive, compared in lowercase; 2 refers to insensitive, and the table name is changed to lowercase for storage.
     */
    caseSensitive?: pulumi.Input<number>;
    /**
     * Payment type.
     */
    chargeProperties?: pulumi.Input<inputs.Cdwdoris.InstanceChargeProperties>;
    /**
     * Database password.
     */
    dorisUserPwd?: pulumi.Input<string>;
    /**
     * Whether to enable multi-availability zone.
     */
    enableMultiZones?: pulumi.Input<boolean>;
    /**
     * FE specifications.
     */
    feSpec?: pulumi.Input<inputs.Cdwdoris.InstanceFeSpec>;
    /**
     * Whether it is highly available.
     */
    haFlag?: pulumi.Input<boolean>;
    /**
     * High availability type: 0 indicates non-high availability (only one FE, FeSpec.CreateInstanceSpec.Count=1), 1 indicates read high availability (at least 3 FEs must be deployed, FeSpec.CreateInstanceSpec.Count>=3, and it must be an odd number), 2 indicates read and write high availability (at least 5 FEs must be deployed, FeSpec.CreateInstanceSpec.Count>=5, and it must be an odd number).
     */
    haType?: pulumi.Input<number>;
    /**
     * Instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Product version number.
     */
    productVersion?: pulumi.Input<string>;
    /**
     * Security Group Id list.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag list.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Cdwdoris.InstanceTag>[]>;
    /**
     * After the Multi-AZ is enabled, all user's Availability Zones and Subnets information are shown.
     */
    userMultiZoneInfos?: pulumi.Input<inputs.Cdwdoris.InstanceUserMultiZoneInfos>;
    /**
     * User subnet ID.
     */
    userSubnetId?: pulumi.Input<string>;
    /**
     * User VPCID.
     */
    userVpcId?: pulumi.Input<string>;
    /**
     * Whether to enable resource group. `open` - enable, `close` - disable.
     */
    workloadGroupStatus?: pulumi.Input<string>;
    /**
     * Availability zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * BE specifications.
     */
    beSpec: pulumi.Input<inputs.Cdwdoris.InstanceBeSpec>;
    /**
     * Whether the table name is case sensitive, 0 refers to sensitive, 1 refers to insensitive, compared in lowercase; 2 refers to insensitive, and the table name is changed to lowercase for storage.
     */
    caseSensitive?: pulumi.Input<number>;
    /**
     * Payment type.
     */
    chargeProperties: pulumi.Input<inputs.Cdwdoris.InstanceChargeProperties>;
    /**
     * Database password.
     */
    dorisUserPwd: pulumi.Input<string>;
    /**
     * Whether to enable multi-availability zone.
     */
    enableMultiZones?: pulumi.Input<boolean>;
    /**
     * FE specifications.
     */
    feSpec: pulumi.Input<inputs.Cdwdoris.InstanceFeSpec>;
    /**
     * Whether it is highly available.
     */
    haFlag: pulumi.Input<boolean>;
    /**
     * High availability type: 0 indicates non-high availability (only one FE, FeSpec.CreateInstanceSpec.Count=1), 1 indicates read high availability (at least 3 FEs must be deployed, FeSpec.CreateInstanceSpec.Count>=3, and it must be an odd number), 2 indicates read and write high availability (at least 5 FEs must be deployed, FeSpec.CreateInstanceSpec.Count>=5, and it must be an odd number).
     */
    haType?: pulumi.Input<number>;
    /**
     * Instance name.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Product version number.
     */
    productVersion: pulumi.Input<string>;
    /**
     * Security Group Id list.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag list.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Cdwdoris.InstanceTag>[]>;
    /**
     * After the Multi-AZ is enabled, all user's Availability Zones and Subnets information are shown.
     */
    userMultiZoneInfos?: pulumi.Input<inputs.Cdwdoris.InstanceUserMultiZoneInfos>;
    /**
     * User subnet ID.
     */
    userSubnetId: pulumi.Input<string>;
    /**
     * User VPCID.
     */
    userVpcId: pulumi.Input<string>;
    /**
     * Whether to enable resource group. `open` - enable, `close` - disable.
     */
    workloadGroupStatus: pulumi.Input<string>;
    /**
     * Availability zone.
     */
    zone: pulumi.Input<string>;
}
