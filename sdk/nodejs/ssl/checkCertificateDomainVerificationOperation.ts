// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to create a ssl Check Certificate Domain Verification
 *
 * > **NOTE:** You can customize the maximum timeout time by setting parameter `timeouts`, which defaults to 15 minutes.
 *
 * ## Example Usage
 *
 * ### Check certificate domain
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.ssl.CheckCertificateDomainVerificationOperation("example", {certificateId: "6BE701Jx"});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Check certificate domain and set the maximum timeout period
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const example = new tencentcloud.ssl.CheckCertificateDomainVerificationOperation("example", {certificateId: "6BE701Jx"});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class CheckCertificateDomainVerificationOperation extends pulumi.CustomResource {
    /**
     * Get an existing CheckCertificateDomainVerificationOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CheckCertificateDomainVerificationOperationState, opts?: pulumi.CustomResourceOptions): CheckCertificateDomainVerificationOperation {
        return new CheckCertificateDomainVerificationOperation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Ssl/checkCertificateDomainVerificationOperation:CheckCertificateDomainVerificationOperation';

    /**
     * Returns true if the given object is an instance of CheckCertificateDomainVerificationOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CheckCertificateDomainVerificationOperation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CheckCertificateDomainVerificationOperation.__pulumiType;
    }

    /**
     * The certificate ID.
     */
    public readonly certificateId!: pulumi.Output<string>;
    /**
     * Domain name verification results.
     */
    public /*out*/ readonly verificationResults!: pulumi.Output<outputs.Ssl.CheckCertificateDomainVerificationOperationVerificationResult[]>;

    /**
     * Create a CheckCertificateDomainVerificationOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CheckCertificateDomainVerificationOperationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CheckCertificateDomainVerificationOperationArgs | CheckCertificateDomainVerificationOperationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CheckCertificateDomainVerificationOperationState | undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["verificationResults"] = state ? state.verificationResults : undefined;
        } else {
            const args = argsOrState as CheckCertificateDomainVerificationOperationArgs | undefined;
            if ((!args || args.certificateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateId'");
            }
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["verificationResults"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CheckCertificateDomainVerificationOperation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CheckCertificateDomainVerificationOperation resources.
 */
export interface CheckCertificateDomainVerificationOperationState {
    /**
     * The certificate ID.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * Domain name verification results.
     */
    verificationResults?: pulumi.Input<pulumi.Input<inputs.Ssl.CheckCertificateDomainVerificationOperationVerificationResult>[]>;
}

/**
 * The set of arguments for constructing a CheckCertificateDomainVerificationOperation resource.
 */
export interface CheckCertificateDomainVerificationOperationArgs {
    /**
     * The certificate ID.
     */
    certificateId: pulumi.Input<string>;
}
