// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query query ENIs.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const name = tencentcloud.Enis.getInstance({
 *     name: "test eni",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getInstance(args?: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Enis/getInstance:getInstance", {
        "description": args.description,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "ipv4": args.ipv4,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
        "securityGroup": args.securityGroup,
        "subnetId": args.subnetId,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    /**
     * Description of the ENI. Conflict with `ids`.
     */
    description?: string;
    /**
     * ID of the ENIs to be queried. Conflict with `vpcId`,`subnetId`,`instanceId`,`securityGroup`,`name`,`ipv4` and `tags`.
     */
    ids?: string[];
    /**
     * ID of the instance which bind the ENI. Conflict with `ids`.
     */
    instanceId?: string;
    /**
     * Intranet IP of the ENI. Conflict with `ids`.
     */
    ipv4?: string;
    /**
     * Name of the ENI to be queried. Conflict with `ids`.
     */
    name?: string;
    /**
     * Used to save results.
     */
    resultOutputFile?: string;
    /**
     * A set of security group IDs which bind the ENI. Conflict with `ids`.
     */
    securityGroup?: string;
    /**
     * ID of the subnet within this vpc to be queried. Conflict with `ids`.
     */
    subnetId?: string;
    /**
     * Tags of the ENI. Conflict with `ids`.
     */
    tags?: {[key: string]: any};
    /**
     * ID of the vpc to be queried. Conflict with `ids`.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    /**
     * Message description.
     */
    readonly description?: string;
    /**
     * An information list of ENIs. Each element contains the following attributes:
     */
    readonly enis: outputs.Enis.GetInstanceEni[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * ID of the instance which bind the ENI.
     */
    readonly instanceId?: string;
    readonly ipv4?: string;
    /**
     * Name of the ENI.
     */
    readonly name?: string;
    readonly resultOutputFile?: string;
    readonly securityGroup?: string;
    /**
     * ID of the subnet within this vpc.
     */
    readonly subnetId?: string;
    /**
     * Tags of the ENI.
     */
    readonly tags?: {[key: string]: any};
    /**
     * ID of the vpc.
     */
    readonly vpcId?: string;
}
/**
 * Use this data source to query query ENIs.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 *
 * const name = tencentcloud.Enis.getInstance({
 *     name: "test eni",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getInstanceOutput(args?: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply((a: any) => getInstance(a, opts))
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    /**
     * Description of the ENI. Conflict with `ids`.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the ENIs to be queried. Conflict with `vpcId`,`subnetId`,`instanceId`,`securityGroup`,`name`,`ipv4` and `tags`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of the instance which bind the ENI. Conflict with `ids`.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Intranet IP of the ENI. Conflict with `ids`.
     */
    ipv4?: pulumi.Input<string>;
    /**
     * Name of the ENI to be queried. Conflict with `ids`.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to save results.
     */
    resultOutputFile?: pulumi.Input<string>;
    /**
     * A set of security group IDs which bind the ENI. Conflict with `ids`.
     */
    securityGroup?: pulumi.Input<string>;
    /**
     * ID of the subnet within this vpc to be queried. Conflict with `ids`.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags of the ENI. Conflict with `ids`.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the vpc to be queried. Conflict with `ids`.
     */
    vpcId?: pulumi.Input<string>;
}
