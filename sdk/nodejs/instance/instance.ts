// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a CVM instance resource.
 *
 * > **NOTE:** You can launch an CVM instance for a VPC network via specifying parameter `vpcId`. One instance can only belong to one VPC.
 *
 * > **NOTE:** At present, 'PREPAID' instance cannot be deleted directly and must wait it to be outdated and released automatically.
 *
 * ## Example Usage
 *
 * ### Create a general POSTPAID_BY_HOUR CVM instance
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-4";
 * const images = tencentcloud.Images.getInstance({
 *     imageTypes: ["PUBLIC_IMAGE"],
 *     imageNameRegex: "OpenCloudOS Server",
 * });
 * const types = tencentcloud.Instance.getTypes({
 *     filters: [{
 *         name: "instance-family",
 *         values: [
 *             "S1",
 *             "S2",
 *             "S3",
 *             "S4",
 *             "S5",
 *         ],
 *     }],
 *     cpuCoreCount: 2,
 *     excludeSoldOut: true,
 * });
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * // create subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     vpcId: vpc.id,
 *     availabilityZone: availabilityZone,
 *     cidrBlock: "10.0.1.0/24",
 * });
 * // create CVM instance
 * const example = new tencentcloud.instance.Instance("example", {
 *     instanceName: "tf-example",
 *     availabilityZone: availabilityZone,
 *     imageId: images.then(images => images.images?.[0]?.imageId),
 *     instanceType: types.then(types => types.instanceTypes?.[0]?.instanceType),
 *     systemDiskType: "CLOUD_PREMIUM",
 *     systemDiskSize: 50,
 *     hostname: "user",
 *     projectId: 0,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     dataDisks: [{
 *         dataDiskType: "CLOUD_PREMIUM",
 *         dataDiskSize: 50,
 *         encrypt: false,
 *     }],
 *     tags: {
 *         tagKey: "tagValue",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Create a dedicated cluster CVM instance
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as tencentcloud from "@pulumi/tencentcloud";
 * import * as tencentcloud from "@tencentcloud_iac/pulumi";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.get("availabilityZone") || "ap-guangzhou-4";
 * const images = tencentcloud.Images.getInstance({
 *     imageTypes: ["PUBLIC_IMAGE"],
 *     imageNameRegex: "OpenCloudOS Server",
 * });
 * const types = tencentcloud.Instance.getTypes({
 *     filters: [{
 *         name: "instance-family",
 *         values: [
 *             "S1",
 *             "S2",
 *             "S3",
 *             "S4",
 *             "S5",
 *         ],
 *     }],
 *     cpuCoreCount: 2,
 *     excludeSoldOut: true,
 * });
 * // create vpc
 * const vpc = new tencentcloud.vpc.Instance("vpc", {cidrBlock: "10.0.0.0/16"});
 * // create subnet
 * const subnet = new tencentcloud.subnet.Instance("subnet", {
 *     vpcId: vpc.id,
 *     availabilityZone: availabilityZone,
 *     cidrBlock: "10.0.1.0/24",
 *     cdcId: "cluster-262n63e8",
 *     isMulticast: false,
 * });
 * // create CVM instance
 * const example = new tencentcloud.instance.Instance("example", {
 *     instanceName: "tf-example",
 *     availabilityZone: availabilityZone,
 *     imageId: images.then(images => images.images?.[0]?.imageId),
 *     instanceType: types.then(types => types.instanceTypes?.[0]?.instanceType),
 *     dedicatedClusterId: "cluster-262n63e8",
 *     instanceChargeType: "CDCPAID",
 *     systemDiskType: "CLOUD_SSD",
 *     systemDiskSize: 50,
 *     hostname: "user",
 *     projectId: 0,
 *     vpcId: vpc.id,
 *     subnetId: subnet.id,
 *     dataDisks: [{
 *         dataDiskType: "CLOUD_SSD",
 *         dataDiskSize: 50,
 *         encrypt: false,
 *     }],
 *     tags: {
 *         tagKey: "tagValue",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * CVM instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import tencentcloud:Instance/instance:Instance example ins-2qol3a80
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Instance/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
     */
    public readonly allocatePublicIp!: pulumi.Output<boolean | undefined>;
    /**
     * The available zone for the CVM instance.
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
     */
    public readonly bandwidthPackageId!: pulumi.Output<string | undefined>;
    /**
     * CAM role name authorized to access.
     */
    public readonly camRoleName!: pulumi.Output<string | undefined>;
    /**
     * Id of cdh instance. Note: it only works when instanceChargeType is set to `CDHPAID`.
     */
    public readonly cdhHostId!: pulumi.Output<string | undefined>;
    /**
     * Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instanceChargeType is set to `CDHPAID`.
     */
    public readonly cdhInstanceType!: pulumi.Output<string | undefined>;
    /**
     * The number of CPU cores of the instance.
     */
    public /*out*/ readonly cpu!: pulumi.Output<number>;
    /**
     * Create time of the instance.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Settings for data disks.
     */
    public readonly dataDisks!: pulumi.Output<outputs.Instance.InstanceDataDisk[]>;
    /**
     * Exclusive cluster id.
     */
    public readonly dedicatedClusterId!: pulumi.Output<string | undefined>;
    /**
     * Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
     */
    public readonly disableApiTermination!: pulumi.Output<boolean | undefined>;
    /**
     * Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
     */
    public readonly disableMonitorService!: pulumi.Output<boolean | undefined>;
    /**
     * Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
     */
    public readonly disableSecurityService!: pulumi.Output<boolean | undefined>;
    /**
     * Expired time of the instance.
     */
    public /*out*/ readonly expiredTime!: pulumi.Output<string>;
    /**
     * Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
     */
    public readonly hostname!: pulumi.Output<string | undefined>;
    /**
     * The image to use for the instance. Changing `imageId` will cause the instance reset.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time. `CDHPAID` instance must set `cdhInstanceType` and `cdhHostId`.
     */
    public readonly instanceChargeType!: pulumi.Output<string | undefined>;
    /**
     * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
     */
    public readonly instanceChargeTypePrepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
     */
    public readonly instanceChargeTypePrepaidRenewFlag!: pulumi.Output<string>;
    /**
     * It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
     *
     * @deprecated It has been deprecated from version 1.59.18. Use built-in `count` instead.
     */
    public readonly instanceCount!: pulumi.Output<number | undefined>;
    /**
     * The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
     */
    public readonly instanceName!: pulumi.Output<string | undefined>;
    /**
     * Current status of the instance.
     */
    public /*out*/ readonly instanceStatus!: pulumi.Output<string>;
    /**
     * The type of the instance.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocatePublicIp` is false.
     */
    public readonly internetChargeType!: pulumi.Output<string>;
    /**
     * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocatePublicIp` is false.
     */
    public readonly internetMaxBandwidthOut!: pulumi.Output<number>;
    /**
     * Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
     */
    public readonly keepImageLogin!: pulumi.Output<boolean | undefined>;
    /**
     * The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
     */
    public readonly keyIds!: pulumi.Output<string[]>;
    /**
     * Please use `keyIds` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
     *
     * @deprecated Please use `keyIds` instead.
     */
    public readonly keyName!: pulumi.Output<string>;
    /**
     * Instance memory capacity, unit in GB.
     */
    public /*out*/ readonly memory!: pulumi.Output<number>;
    /**
     * A list of orderly security group IDs to associate with.
     */
    public readonly orderlySecurityGroups!: pulumi.Output<string[]>;
    /**
     * Instance os name.
     */
    public /*out*/ readonly osName!: pulumi.Output<string>;
    /**
     * Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The ID of a placement group.
     */
    public readonly placementGroupId!: pulumi.Output<string | undefined>;
    /**
     * The private IP to be assigned to this instance, must be in the provided subnet and available.
     */
    public readonly privateIp!: pulumi.Output<string>;
    /**
     * The project the instance belongs to, default to 0.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * Public IP of the instance.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
     */
    public readonly runningFlag!: pulumi.Output<boolean | undefined>;
    /**
     * It will be deprecated. Use `orderlySecurityGroups` instead. A list of security group IDs to associate with.
     *
     * @deprecated It will be deprecated. Use `orderlySecurityGroups` instead.
     */
    public readonly securityGroups!: pulumi.Output<string[]>;
    /**
     * Type of spot instance, only support `ONE-TIME` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
     */
    public readonly spotInstanceType!: pulumi.Output<string | undefined>;
    /**
     * Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
     */
    public readonly spotMaxPrice!: pulumi.Output<string | undefined>;
    /**
     * Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
     */
    public readonly stoppedMode!: pulumi.Output<string | undefined>;
    /**
     * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
     */
    public readonly systemDiskId!: pulumi.Output<string>;
    /**
     * Resize online.
     */
    public readonly systemDiskResizeOnline!: pulumi.Output<boolean | undefined>;
    /**
     * Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
     */
    public readonly systemDiskSize!: pulumi.Output<number | undefined>;
    /**
     * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
     */
    public readonly systemDiskType!: pulumi.Output<string | undefined>;
    /**
     * A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * The user data to be injected into this instance, in plain text. Conflicts with `userData`. Up to 16 KB after base64 encoded.
     */
    public readonly userDataRaw!: pulumi.Output<string | undefined>;
    /**
     * Globally unique ID of the instance.
     */
    public /*out*/ readonly uuid!: pulumi.Output<string>;
    /**
     * The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["allocatePublicIp"] = state ? state.allocatePublicIp : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["bandwidthPackageId"] = state ? state.bandwidthPackageId : undefined;
            resourceInputs["camRoleName"] = state ? state.camRoleName : undefined;
            resourceInputs["cdhHostId"] = state ? state.cdhHostId : undefined;
            resourceInputs["cdhInstanceType"] = state ? state.cdhInstanceType : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["dedicatedClusterId"] = state ? state.dedicatedClusterId : undefined;
            resourceInputs["disableApiTermination"] = state ? state.disableApiTermination : undefined;
            resourceInputs["disableMonitorService"] = state ? state.disableMonitorService : undefined;
            resourceInputs["disableSecurityService"] = state ? state.disableSecurityService : undefined;
            resourceInputs["expiredTime"] = state ? state.expiredTime : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["instanceChargeTypePrepaidPeriod"] = state ? state.instanceChargeTypePrepaidPeriod : undefined;
            resourceInputs["instanceChargeTypePrepaidRenewFlag"] = state ? state.instanceChargeTypePrepaidRenewFlag : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceStatus"] = state ? state.instanceStatus : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["keepImageLogin"] = state ? state.keepImageLogin : undefined;
            resourceInputs["keyIds"] = state ? state.keyIds : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["orderlySecurityGroups"] = state ? state.orderlySecurityGroups : undefined;
            resourceInputs["osName"] = state ? state.osName : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["placementGroupId"] = state ? state.placementGroupId : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["runningFlag"] = state ? state.runningFlag : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["spotInstanceType"] = state ? state.spotInstanceType : undefined;
            resourceInputs["spotMaxPrice"] = state ? state.spotMaxPrice : undefined;
            resourceInputs["stoppedMode"] = state ? state.stoppedMode : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["systemDiskId"] = state ? state.systemDiskId : undefined;
            resourceInputs["systemDiskResizeOnline"] = state ? state.systemDiskResizeOnline : undefined;
            resourceInputs["systemDiskSize"] = state ? state.systemDiskSize : undefined;
            resourceInputs["systemDiskType"] = state ? state.systemDiskType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["userDataRaw"] = state ? state.userDataRaw : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            resourceInputs["allocatePublicIp"] = args ? args.allocatePublicIp : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["bandwidthPackageId"] = args ? args.bandwidthPackageId : undefined;
            resourceInputs["camRoleName"] = args ? args.camRoleName : undefined;
            resourceInputs["cdhHostId"] = args ? args.cdhHostId : undefined;
            resourceInputs["cdhInstanceType"] = args ? args.cdhInstanceType : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["dedicatedClusterId"] = args ? args.dedicatedClusterId : undefined;
            resourceInputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            resourceInputs["disableMonitorService"] = args ? args.disableMonitorService : undefined;
            resourceInputs["disableSecurityService"] = args ? args.disableSecurityService : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["instanceChargeTypePrepaidPeriod"] = args ? args.instanceChargeTypePrepaidPeriod : undefined;
            resourceInputs["instanceChargeTypePrepaidRenewFlag"] = args ? args.instanceChargeTypePrepaidRenewFlag : undefined;
            resourceInputs["instanceCount"] = args ? args.instanceCount : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["keepImageLogin"] = args ? args.keepImageLogin : undefined;
            resourceInputs["keyIds"] = args ? args.keyIds : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["orderlySecurityGroups"] = args ? args.orderlySecurityGroups : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["placementGroupId"] = args ? args.placementGroupId : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["runningFlag"] = args ? args.runningFlag : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["spotInstanceType"] = args ? args.spotInstanceType : undefined;
            resourceInputs["spotMaxPrice"] = args ? args.spotMaxPrice : undefined;
            resourceInputs["stoppedMode"] = args ? args.stoppedMode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["systemDiskId"] = args ? args.systemDiskId : undefined;
            resourceInputs["systemDiskResizeOnline"] = args ? args.systemDiskResizeOnline : undefined;
            resourceInputs["systemDiskSize"] = args ? args.systemDiskSize : undefined;
            resourceInputs["systemDiskType"] = args ? args.systemDiskType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["userDataRaw"] = args ? args.userDataRaw : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["cpu"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expiredTime"] = undefined /*out*/;
            resourceInputs["instanceStatus"] = undefined /*out*/;
            resourceInputs["memory"] = undefined /*out*/;
            resourceInputs["osName"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
     */
    allocatePublicIp?: pulumi.Input<boolean>;
    /**
     * The available zone for the CVM instance.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
     */
    bandwidthPackageId?: pulumi.Input<string>;
    /**
     * CAM role name authorized to access.
     */
    camRoleName?: pulumi.Input<string>;
    /**
     * Id of cdh instance. Note: it only works when instanceChargeType is set to `CDHPAID`.
     */
    cdhHostId?: pulumi.Input<string>;
    /**
     * Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instanceChargeType is set to `CDHPAID`.
     */
    cdhInstanceType?: pulumi.Input<string>;
    /**
     * The number of CPU cores of the instance.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Create time of the instance.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Settings for data disks.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.Instance.InstanceDataDisk>[]>;
    /**
     * Exclusive cluster id.
     */
    dedicatedClusterId?: pulumi.Input<string>;
    /**
     * Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
     */
    disableApiTermination?: pulumi.Input<boolean>;
    /**
     * Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
     */
    disableMonitorService?: pulumi.Input<boolean>;
    /**
     * Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
     */
    disableSecurityService?: pulumi.Input<boolean>;
    /**
     * Expired time of the instance.
     */
    expiredTime?: pulumi.Input<string>;
    /**
     * Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The image to use for the instance. Changing `imageId` will cause the instance reset.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time. `CDHPAID` instance must set `cdhInstanceType` and `cdhHostId`.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
     */
    instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
    /**
     * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
     */
    instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
     *
     * @deprecated It has been deprecated from version 1.59.18. Use built-in `count` instead.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Current status of the instance.
     */
    instanceStatus?: pulumi.Input<string>;
    /**
     * The type of the instance.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocatePublicIp` is false.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocatePublicIp` is false.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
     */
    keepImageLogin?: pulumi.Input<boolean>;
    /**
     * The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
     */
    keyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Please use `keyIds` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
     *
     * @deprecated Please use `keyIds` instead.
     */
    keyName?: pulumi.Input<string>;
    /**
     * Instance memory capacity, unit in GB.
     */
    memory?: pulumi.Input<number>;
    /**
     * A list of orderly security group IDs to associate with.
     */
    orderlySecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance os name.
     */
    osName?: pulumi.Input<string>;
    /**
     * Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
     */
    password?: pulumi.Input<string>;
    /**
     * The ID of a placement group.
     */
    placementGroupId?: pulumi.Input<string>;
    /**
     * The private IP to be assigned to this instance, must be in the provided subnet and available.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * The project the instance belongs to, default to 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Public IP of the instance.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
     */
    runningFlag?: pulumi.Input<boolean>;
    /**
     * It will be deprecated. Use `orderlySecurityGroups` instead. A list of security group IDs to associate with.
     *
     * @deprecated It will be deprecated. Use `orderlySecurityGroups` instead.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of spot instance, only support `ONE-TIME` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
     */
    spotInstanceType?: pulumi.Input<string>;
    /**
     * Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
     */
    spotMaxPrice?: pulumi.Input<string>;
    /**
     * Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
     */
    stoppedMode?: pulumi.Input<string>;
    /**
     * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
     */
    systemDiskId?: pulumi.Input<string>;
    /**
     * Resize online.
     */
    systemDiskResizeOnline?: pulumi.Input<boolean>;
    /**
     * Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
     */
    systemDiskSize?: pulumi.Input<number>;
    /**
     * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
     */
    systemDiskType?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
     */
    userData?: pulumi.Input<string>;
    /**
     * The user data to be injected into this instance, in plain text. Conflicts with `userData`. Up to 16 KB after base64 encoded.
     */
    userDataRaw?: pulumi.Input<string>;
    /**
     * Globally unique ID of the instance.
     */
    uuid?: pulumi.Input<string>;
    /**
     * The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
     */
    allocatePublicIp?: pulumi.Input<boolean>;
    /**
     * The available zone for the CVM instance.
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * bandwidth package id. if user is standard user, then the bandwidthPackageId is needed, or default has bandwidth_package_id.
     */
    bandwidthPackageId?: pulumi.Input<string>;
    /**
     * CAM role name authorized to access.
     */
    camRoleName?: pulumi.Input<string>;
    /**
     * Id of cdh instance. Note: it only works when instanceChargeType is set to `CDHPAID`.
     */
    cdhHostId?: pulumi.Input<string>;
    /**
     * Type of instance created on cdh, the value of this parameter is in the format of CDH_XCXG based on the number of CPU cores and memory capacity. Note: it only works when instanceChargeType is set to `CDHPAID`.
     */
    cdhInstanceType?: pulumi.Input<string>;
    /**
     * Settings for data disks.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.Instance.InstanceDataDisk>[]>;
    /**
     * Exclusive cluster id.
     */
    dedicatedClusterId?: pulumi.Input<string>;
    /**
     * Whether the termination protection is enabled. Default is `false`. If set true, which means that this instance can not be deleted by an API action.
     */
    disableApiTermination?: pulumi.Input<boolean>;
    /**
     * Disable enhance service for monitor, it is enabled by default. When this options is set, monitor agent won't be installed. Modifying will cause the instance reset.
     */
    disableMonitorService?: pulumi.Input<boolean>;
    /**
     * Disable enhance service for security, it is enabled by default. When this options is set, security agent won't be installed. Modifying will cause the instance reset.
     */
    disableSecurityService?: pulumi.Input<boolean>;
    /**
     * Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted instead of being moved into the recycle bin. Note: only works for `PREPAID` instance.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The image to use for the instance. Changing `imageId` will cause the instance reset.
     */
    imageId: pulumi.Input<string>;
    /**
     * The charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDHPAID` and `CDCPAID`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR` and `CDHPAID`. `PREPAID` instance may not allow to delete before expired. `SPOTPAID` instance must set `spotInstanceType` and `spotMaxPrice` at the same time. `CDHPAID` instance must set `cdhInstanceType` and `cdhHostId`.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instanceChargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
     */
    instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
    /**
     * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instanceChargeType is set to `PREPAID`.
     */
    instanceChargeTypePrepaidRenewFlag?: pulumi.Input<string>;
    /**
     * It has been deprecated from version 1.59.18. Use built-in `count` instead. The number of instances to be purchased. Value range:[1,100]; default value: 1.
     *
     * @deprecated It has been deprecated from version 1.59.18. Use built-in `count` instead.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The name of the instance. The max length of instance_name is 60, and default value is `Terraform-CVM-Instance`.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The type of the instance.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocatePublicIp` is false.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocatePublicIp` is false.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Whether to keep image login or not, default is `false`. When the image type is private or shared or imported, this parameter can be set `true`. Modifying will cause the instance reset.
     */
    keepImageLogin?: pulumi.Input<boolean>;
    /**
     * The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
     */
    keyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Please use `keyIds` instead. The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
     *
     * @deprecated Please use `keyIds` instead.
     */
    keyName?: pulumi.Input<string>;
    /**
     * A list of orderly security group IDs to associate with.
     */
    orderlySecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
     */
    password?: pulumi.Input<string>;
    /**
     * The ID of a placement group.
     */
    placementGroupId?: pulumi.Input<string>;
    /**
     * The private IP to be assigned to this instance, must be in the provided subnet and available.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * The project the instance belongs to, default to 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Set instance to running or stop. Default value is true, the instance will shutdown when this flag is false.
     */
    runningFlag?: pulumi.Input<boolean>;
    /**
     * It will be deprecated. Use `orderlySecurityGroups` instead. A list of security group IDs to associate with.
     *
     * @deprecated It will be deprecated. Use `orderlySecurityGroups` instead.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of spot instance, only support `ONE-TIME` now. Note: it only works when instanceChargeType is set to `SPOTPAID`.
     */
    spotInstanceType?: pulumi.Input<string>;
    /**
     * Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instanceChargeType is set to `SPOTPAID`.
     */
    spotMaxPrice?: pulumi.Input<string>;
    /**
     * Billing method of a pay-as-you-go instance after shutdown. Available values: `KEEP_CHARGING`,`STOP_CHARGING`. Default `KEEP_CHARGING`.
     */
    stoppedMode?: pulumi.Input<string>;
    /**
     * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * System disk snapshot ID used to initialize the system disk. When system disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
     */
    systemDiskId?: pulumi.Input<string>;
    /**
     * Resize online.
     */
    systemDiskResizeOnline?: pulumi.Input<boolean>;
    /**
     * Size of the system disk. unit is GB, Default is 50GB. If modified, the instance may force stop.
     */
    systemDiskSize?: pulumi.Input<number>;
    /**
     * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
     */
    systemDiskType?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource. For tag limits, please refer to [Use Limits](https://intl.cloud.tencent.com/document/product/651/13354).
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The user data to be injected into this instance. Must be base64 encoded and up to 16 KB.
     */
    userData?: pulumi.Input<string>;
    /**
     * The user data to be injected into this instance, in plain text. Conflicts with `userData`. Up to 16 KB after base64 encoded.
     */
    userDataRaw?: pulumi.Input<string>;
    /**
     * The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
     */
    vpcId?: pulumi.Input<string>;
}
