// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Kubernetes.Inputs
{

    public sealed class NativeNodePoolNativeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable self-healing ability.
        /// </summary>
        [Input("autoRepair")]
        public Input<bool>? AutoRepair { get; set; }

        [Input("dataDisks")]
        private InputList<Inputs.NativeNodePoolNativeDataDiskGetArgs>? _dataDisks;

        /// <summary>
        /// Native node pool data disk list.
        /// </summary>
        public InputList<Inputs.NativeNodePoolNativeDataDiskGetArgs> DataDisks
        {
            get => _dataDisks ?? (_dataDisks = new InputList<Inputs.NativeNodePoolNativeDataDiskGetArgs>());
            set => _dataDisks = value;
        }

        /// <summary>
        /// Whether to enable elastic scaling.
        /// </summary>
        [Input("enableAutoscaling")]
        public Input<bool>? EnableAutoscaling { get; set; }

        /// <summary>
        /// Fault self-healing rule name.
        /// </summary>
        [Input("healthCheckPolicyName")]
        public Input<string>? HealthCheckPolicyName { get; set; }

        /// <summary>
        /// Native node pool hostName pattern string.
        /// </summary>
        [Input("hostNamePattern")]
        public Input<string>? HostNamePattern { get; set; }

        /// <summary>
        /// Billing configuration for yearly and monthly models.
        /// </summary>
        [Input("instanceChargePrepaid")]
        public Input<Inputs.NativeNodePoolNativeInstanceChargePrepaidGetArgs>? InstanceChargePrepaid { get; set; }

        /// <summary>
        /// Node billing type. `PREPAID` is a yearly and monthly subscription, `POSTPAID_BY_HOUR` is a pay-as-you-go plan. The default is `POSTPAID_BY_HOUR`.
        /// </summary>
        [Input("instanceChargeType", required: true)]
        public Input<string> InstanceChargeType { get; set; } = null!;

        [Input("instanceTypes", required: true)]
        private InputList<string>? _instanceTypes;

        /// <summary>
        /// Model list.
        /// </summary>
        public InputList<string> InstanceTypes
        {
            get => _instanceTypes ?? (_instanceTypes = new InputList<string>());
            set => _instanceTypes = value;
        }

        /// <summary>
        /// Public network bandwidth settings.
        /// </summary>
        [Input("internetAccessible")]
        public Input<Inputs.NativeNodePoolNativeInternetAccessibleGetArgs>? InternetAccessible { get; set; }

        [Input("keyIds")]
        private InputList<string>? _keyIds;

        /// <summary>
        /// Node pool ssh public key id array.
        /// </summary>
        public InputList<string> KeyIds
        {
            get => _keyIds ?? (_keyIds = new InputList<string>());
            set => _keyIds = value;
        }

        [Input("kubeletArgs")]
        private InputList<string>? _kubeletArgs;

        /// <summary>
        /// Kubelet custom parameters.
        /// </summary>
        public InputList<string> KubeletArgs
        {
            get => _kubeletArgs ?? (_kubeletArgs = new InputList<string>());
            set => _kubeletArgs = value;
        }

        /// <summary>
        /// Predefined scripts.
        /// </summary>
        [Input("lifecycle")]
        public Input<Inputs.NativeNodePoolNativeLifecycleGetArgs>? Lifecycle { get; set; }

        /// <summary>
        /// Node pool type. Example value: `NativeCVM` or `Native`. Default is `Native`.
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        /// <summary>
        /// Node pool management parameter settings.
        /// </summary>
        [Input("management")]
        public Input<Inputs.NativeNodePoolNativeManagementGetArgs>? Management { get; set; }

        /// <summary>
        /// Desired number of nodes.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// Runtime root directory.
        /// </summary>
        [Input("runtimeRootDir")]
        public Input<string>? RuntimeRootDir { get; set; }

        /// <summary>
        /// Node pool scaling configuration.
        /// </summary>
        [Input("scaling")]
        public Input<Inputs.NativeNodePoolNativeScalingGetArgs>? Scaling { get; set; }

        [Input("securityGroupIds", required: true)]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// Security group list.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// Subnet list.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        /// <summary>
        /// System disk configuration.
        /// </summary>
        [Input("systemDisk", required: true)]
        public Input<Inputs.NativeNodePoolNativeSystemDiskGetArgs> SystemDisk { get; set; } = null!;

        public NativeNodePoolNativeGetArgs()
        {
        }
        public static new NativeNodePoolNativeGetArgs Empty => new NativeNodePoolNativeGetArgs();
    }
}
