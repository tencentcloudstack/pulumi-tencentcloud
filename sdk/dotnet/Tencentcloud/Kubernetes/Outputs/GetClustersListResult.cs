// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Kubernetes.Outputs
{

    [OutputType]
    public sealed class GetClustersListResult
    {
        /// <summary>
        /// CDC ID.
        /// </summary>
        public readonly string CdcId;
        /// <summary>
        /// The certificate used for access.
        /// </summary>
        public readonly string CertificationAuthority;
        /// <summary>
        /// The expired seconds to recycle ENI.
        /// </summary>
        public readonly int ClaimExpiredSeconds;
        /// <summary>
        /// Indicates whether to enable cluster node auto scaler.
        /// </summary>
        public readonly bool ClusterAsEnabled;
        /// <summary>
        /// A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this VPC.
        /// </summary>
        public readonly string ClusterCidr;
        /// <summary>
        /// Deployment type of the cluster.
        /// </summary>
        public readonly string ClusterDeployType;
        /// <summary>
        /// Description of the cluster.
        /// </summary>
        public readonly string ClusterDesc;
        /// <summary>
        /// External network address to access.
        /// </summary>
        public readonly string ClusterExternalEndpoint;
        /// <summary>
        /// Customized parameters for master component.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersListClusterExtraArgResult> ClusterExtraArgs;
        /// <summary>
        /// ID of the cluster. Conflict with cluster_name, can not be set at the same time.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// Indicates whether ipvs is enabled.
        /// </summary>
        public readonly bool ClusterIpvs;
        /// <summary>
        /// The maximum number of Pods per node in the cluster.
        /// </summary>
        public readonly int ClusterMaxPodNum;
        /// <summary>
        /// The maximum number of services in the cluster.
        /// </summary>
        public readonly int ClusterMaxServiceNum;
        /// <summary>
        /// Name of the cluster. Conflict with cluster_id, can not be set at the same time.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// Number of nodes in the cluster.
        /// </summary>
        public readonly int ClusterNodeNum;
        /// <summary>
        /// Operating system of the cluster.
        /// </summary>
        public readonly string ClusterOs;
        /// <summary>
        /// Version of the cluster.
        /// </summary>
        public readonly string ClusterVersion;
        /// <summary>
        /// (**Deprecated**) It has been deprecated from version 1.18.1. Container runtime of the cluster.
        /// </summary>
        public readonly string ContainerRuntime;
        /// <summary>
        /// Indicates whether cluster deletion protection is enabled.
        /// </summary>
        public readonly bool DeletionProtection;
        /// <summary>
        /// Domain name for access.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Subnet IDs for cluster with VPC-CNI network mode.
        /// </summary>
        public readonly ImmutableArray<string> EniSubnetIds;
        /// <summary>
        /// Indicates whether to ignore the cluster cidr conflict error.
        /// </summary>
        public readonly bool IgnoreClusterCidrConflict;
        /// <summary>
        /// Indicates whether non-static ip mode is enabled.
        /// </summary>
        public readonly bool IsNonStaticIpMode;
        /// <summary>
        /// Kubernetes config.
        /// </summary>
        public readonly string KubeConfig;
        /// <summary>
        /// Kubernetes config of private network.
        /// </summary>
        public readonly string KubeConfigIntranet;
        /// <summary>
        /// Cluster kube-proxy mode.
        /// </summary>
        public readonly string KubeProxyMode;
        /// <summary>
        /// Cluster network type.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// Node name type of cluster.
        /// </summary>
        public readonly string NodeNameType;
        /// <summary>
        /// Password of account.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The Intranet address used for access.
        /// </summary>
        public readonly string PgwEndpoint;
        /// <summary>
        /// Project ID of the cluster.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Access policy.
        /// </summary>
        public readonly ImmutableArray<string> SecurityPolicies;
        /// <summary>
        /// The network address block of the cluster.
        /// </summary>
        public readonly string ServiceCidr;
        /// <summary>
        /// Tags of the cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// User name of account.
        /// </summary>
        public readonly string UserName;
        /// <summary>
        /// Distinguish between shared network card multi-IP mode and independent network card mode.
        /// </summary>
        public readonly string VpcCniType;
        /// <summary>
        /// Vpc ID of the cluster.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// An information list of cvm within the WORKER clusters. Each element contains the following attributes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersListWorkerInstancesListResult> WorkerInstancesLists;

        [OutputConstructor]
        private GetClustersListResult(
            string cdcId,

            string certificationAuthority,

            int claimExpiredSeconds,

            bool clusterAsEnabled,

            string clusterCidr,

            string clusterDeployType,

            string clusterDesc,

            string clusterExternalEndpoint,

            ImmutableArray<Outputs.GetClustersListClusterExtraArgResult> clusterExtraArgs,

            string clusterId,

            bool clusterIpvs,

            int clusterMaxPodNum,

            int clusterMaxServiceNum,

            string clusterName,

            int clusterNodeNum,

            string clusterOs,

            string clusterVersion,

            string containerRuntime,

            bool deletionProtection,

            string domain,

            ImmutableArray<string> eniSubnetIds,

            bool ignoreClusterCidrConflict,

            bool isNonStaticIpMode,

            string kubeConfig,

            string kubeConfigIntranet,

            string kubeProxyMode,

            string networkType,

            string nodeNameType,

            string password,

            string pgwEndpoint,

            int projectId,

            ImmutableArray<string> securityPolicies,

            string serviceCidr,

            ImmutableDictionary<string, object> tags,

            string userName,

            string vpcCniType,

            string vpcId,

            ImmutableArray<Outputs.GetClustersListWorkerInstancesListResult> workerInstancesLists)
        {
            CdcId = cdcId;
            CertificationAuthority = certificationAuthority;
            ClaimExpiredSeconds = claimExpiredSeconds;
            ClusterAsEnabled = clusterAsEnabled;
            ClusterCidr = clusterCidr;
            ClusterDeployType = clusterDeployType;
            ClusterDesc = clusterDesc;
            ClusterExternalEndpoint = clusterExternalEndpoint;
            ClusterExtraArgs = clusterExtraArgs;
            ClusterId = clusterId;
            ClusterIpvs = clusterIpvs;
            ClusterMaxPodNum = clusterMaxPodNum;
            ClusterMaxServiceNum = clusterMaxServiceNum;
            ClusterName = clusterName;
            ClusterNodeNum = clusterNodeNum;
            ClusterOs = clusterOs;
            ClusterVersion = clusterVersion;
            ContainerRuntime = containerRuntime;
            DeletionProtection = deletionProtection;
            Domain = domain;
            EniSubnetIds = eniSubnetIds;
            IgnoreClusterCidrConflict = ignoreClusterCidrConflict;
            IsNonStaticIpMode = isNonStaticIpMode;
            KubeConfig = kubeConfig;
            KubeConfigIntranet = kubeConfigIntranet;
            KubeProxyMode = kubeProxyMode;
            NetworkType = networkType;
            NodeNameType = nodeNameType;
            Password = password;
            PgwEndpoint = pgwEndpoint;
            ProjectId = projectId;
            SecurityPolicies = securityPolicies;
            ServiceCidr = serviceCidr;
            Tags = tags;
            UserName = userName;
            VpcCniType = vpcCniType;
            VpcId = vpcId;
            WorkerInstancesLists = workerInstancesLists;
        }
    }
}
