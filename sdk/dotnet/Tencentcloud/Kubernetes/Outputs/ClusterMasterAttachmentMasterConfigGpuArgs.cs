// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Kubernetes.Outputs
{

    [OutputType]
    public sealed class ClusterMasterAttachmentMasterConfigGpuArgs
    {
        /// <summary>
        /// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Cuda;
        /// <summary>
        /// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Cudnn;
        /// <summary>
        /// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? CustomDriver;
        /// <summary>
        /// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Driver;
        /// <summary>
        /// Whether to enable MIG.
        /// </summary>
        public readonly bool? MigEnable;

        [OutputConstructor]
        private ClusterMasterAttachmentMasterConfigGpuArgs(
            ImmutableDictionary<string, object>? cuda,

            ImmutableDictionary<string, object>? cudnn,

            ImmutableDictionary<string, object>? customDriver,

            ImmutableDictionary<string, object>? driver,

            bool? migEnable)
        {
            Cuda = cuda;
            Cudnn = cudnn;
            CustomDriver = customDriver;
            Driver = driver;
            MigEnable = migEnable;
        }
    }
}
