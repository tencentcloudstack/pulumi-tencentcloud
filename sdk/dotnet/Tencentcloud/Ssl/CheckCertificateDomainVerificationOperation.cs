// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ssl
{
    /// <summary>
    /// Provides a resource to create a ssl Check Certificate Domain Verification
    /// 
    /// &gt; **NOTE:** You can customize the maximum timeout time by setting parameter `timeouts`, which defaults to 15 minutes.
    /// 
    /// ## Example Usage
    /// 
    /// ### Check certificate domain
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Ssl.CheckCertificateDomainVerificationOperation("example", new()
    ///     {
    ///         CertificateId = "6BE701Jx",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Check certificate domain and set the maximum timeout period
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Ssl.CheckCertificateDomainVerificationOperation("example", new()
    ///     {
    ///         CertificateId = "6BE701Jx",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Ssl/checkCertificateDomainVerificationOperation:CheckCertificateDomainVerificationOperation")]
    public partial class CheckCertificateDomainVerificationOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The certificate ID.
        /// </summary>
        [Output("certificateId")]
        public Output<string> CertificateId { get; private set; } = null!;

        /// <summary>
        /// Domain name verification results.
        /// </summary>
        [Output("verificationResults")]
        public Output<ImmutableArray<Outputs.CheckCertificateDomainVerificationOperationVerificationResult>> VerificationResults { get; private set; } = null!;


        /// <summary>
        /// Create a CheckCertificateDomainVerificationOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CheckCertificateDomainVerificationOperation(string name, CheckCertificateDomainVerificationOperationArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ssl/checkCertificateDomainVerificationOperation:CheckCertificateDomainVerificationOperation", name, args ?? new CheckCertificateDomainVerificationOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CheckCertificateDomainVerificationOperation(string name, Input<string> id, CheckCertificateDomainVerificationOperationState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ssl/checkCertificateDomainVerificationOperation:CheckCertificateDomainVerificationOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CheckCertificateDomainVerificationOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CheckCertificateDomainVerificationOperation Get(string name, Input<string> id, CheckCertificateDomainVerificationOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new CheckCertificateDomainVerificationOperation(name, id, state, options);
        }
    }

    public sealed class CheckCertificateDomainVerificationOperationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The certificate ID.
        /// </summary>
        [Input("certificateId", required: true)]
        public Input<string> CertificateId { get; set; } = null!;

        public CheckCertificateDomainVerificationOperationArgs()
        {
        }
        public static new CheckCertificateDomainVerificationOperationArgs Empty => new CheckCertificateDomainVerificationOperationArgs();
    }

    public sealed class CheckCertificateDomainVerificationOperationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The certificate ID.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        [Input("verificationResults")]
        private InputList<Inputs.CheckCertificateDomainVerificationOperationVerificationResultGetArgs>? _verificationResults;

        /// <summary>
        /// Domain name verification results.
        /// </summary>
        public InputList<Inputs.CheckCertificateDomainVerificationOperationVerificationResultGetArgs> VerificationResults
        {
            get => _verificationResults ?? (_verificationResults = new InputList<Inputs.CheckCertificateDomainVerificationOperationVerificationResultGetArgs>());
            set => _verificationResults = value;
        }

        public CheckCertificateDomainVerificationOperationState()
        {
        }
        public static new CheckCertificateDomainVerificationOperationState Empty => new CheckCertificateDomainVerificationOperationState();
    }
}
