// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Organization
{
    /// <summary>
    /// Provides a resource to create a organization service assign
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Organization.ServiceAssign("example", new()
    ///     {
    ///         ManagementScope = 1,
    ///         MemberUins = new[]
    ///         {
    ///             100037235241,
    ///             100033738111,
    ///         },
    ///         ServiceId = 15,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Organization.ServiceAssign("example", new()
    ///     {
    ///         ManagementScope = 2,
    ///         ManagementScopeNodeIds = new[]
    ///         {
    ///             2024256,
    ///             2024259,
    ///         },
    ///         ManagementScopeUins = new[]
    ///         {
    ///             100019287759,
    ///             100020537485,
    ///         },
    ///         MemberUins = new[]
    ///         {
    ///             100013415241,
    ///             100078908111,
    ///         },
    ///         ServiceId = 15,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// organization service assign can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Organization/serviceAssign:ServiceAssign example 15
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Organization/serviceAssign:ServiceAssign")]
    public partial class ServiceAssign : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Management scope of the delegated admin. Valid values: 1 (all members), 2 (partial members). Default value: `1`.
        /// </summary>
        [Output("managementScope")]
        public Output<int> ManagementScope { get; private set; } = null!;

        /// <summary>
        /// ID list of the managed departments. This parameter is valid when `management_scope` is `2`.
        /// </summary>
        [Output("managementScopeNodeIds")]
        public Output<ImmutableArray<int>> ManagementScopeNodeIds { get; private set; } = null!;

        /// <summary>
        /// Uin list of the managed members. This parameter is valid when `management_scope` is `2`.
        /// </summary>
        [Output("managementScopeUins")]
        public Output<ImmutableArray<int>> ManagementScopeUins { get; private set; } = null!;

        /// <summary>
        /// Uin list of the delegated admins, Including up to 20 items.
        /// </summary>
        [Output("memberUins")]
        public Output<ImmutableArray<int>> MemberUins { get; private set; } = null!;

        /// <summary>
        /// Organization service ID.
        /// </summary>
        [Output("serviceId")]
        public Output<int> ServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceAssign resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceAssign(string name, ServiceAssignArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Organization/serviceAssign:ServiceAssign", name, args ?? new ServiceAssignArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceAssign(string name, Input<string> id, ServiceAssignState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Organization/serviceAssign:ServiceAssign", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceAssign resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceAssign Get(string name, Input<string> id, ServiceAssignState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceAssign(name, id, state, options);
        }
    }

    public sealed class ServiceAssignArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Management scope of the delegated admin. Valid values: 1 (all members), 2 (partial members). Default value: `1`.
        /// </summary>
        [Input("managementScope")]
        public Input<int>? ManagementScope { get; set; }

        [Input("managementScopeNodeIds")]
        private InputList<int>? _managementScopeNodeIds;

        /// <summary>
        /// ID list of the managed departments. This parameter is valid when `management_scope` is `2`.
        /// </summary>
        public InputList<int> ManagementScopeNodeIds
        {
            get => _managementScopeNodeIds ?? (_managementScopeNodeIds = new InputList<int>());
            set => _managementScopeNodeIds = value;
        }

        [Input("managementScopeUins")]
        private InputList<int>? _managementScopeUins;

        /// <summary>
        /// Uin list of the managed members. This parameter is valid when `management_scope` is `2`.
        /// </summary>
        public InputList<int> ManagementScopeUins
        {
            get => _managementScopeUins ?? (_managementScopeUins = new InputList<int>());
            set => _managementScopeUins = value;
        }

        [Input("memberUins", required: true)]
        private InputList<int>? _memberUins;

        /// <summary>
        /// Uin list of the delegated admins, Including up to 20 items.
        /// </summary>
        public InputList<int> MemberUins
        {
            get => _memberUins ?? (_memberUins = new InputList<int>());
            set => _memberUins = value;
        }

        /// <summary>
        /// Organization service ID.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<int> ServiceId { get; set; } = null!;

        public ServiceAssignArgs()
        {
        }
        public static new ServiceAssignArgs Empty => new ServiceAssignArgs();
    }

    public sealed class ServiceAssignState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Management scope of the delegated admin. Valid values: 1 (all members), 2 (partial members). Default value: `1`.
        /// </summary>
        [Input("managementScope")]
        public Input<int>? ManagementScope { get; set; }

        [Input("managementScopeNodeIds")]
        private InputList<int>? _managementScopeNodeIds;

        /// <summary>
        /// ID list of the managed departments. This parameter is valid when `management_scope` is `2`.
        /// </summary>
        public InputList<int> ManagementScopeNodeIds
        {
            get => _managementScopeNodeIds ?? (_managementScopeNodeIds = new InputList<int>());
            set => _managementScopeNodeIds = value;
        }

        [Input("managementScopeUins")]
        private InputList<int>? _managementScopeUins;

        /// <summary>
        /// Uin list of the managed members. This parameter is valid when `management_scope` is `2`.
        /// </summary>
        public InputList<int> ManagementScopeUins
        {
            get => _managementScopeUins ?? (_managementScopeUins = new InputList<int>());
            set => _managementScopeUins = value;
        }

        [Input("memberUins")]
        private InputList<int>? _memberUins;

        /// <summary>
        /// Uin list of the delegated admins, Including up to 20 items.
        /// </summary>
        public InputList<int> MemberUins
        {
            get => _memberUins ?? (_memberUins = new InputList<int>());
            set => _memberUins = value;
        }

        /// <summary>
        /// Organization service ID.
        /// </summary>
        [Input("serviceId")]
        public Input<int>? ServiceId { get; set; }

        public ServiceAssignState()
        {
        }
        public static new ServiceAssignState Empty => new ServiceAssignState();
    }
}
