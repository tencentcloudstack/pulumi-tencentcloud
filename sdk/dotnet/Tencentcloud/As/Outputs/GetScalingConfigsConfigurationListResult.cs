// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.As.Outputs
{

    [OutputType]
    public sealed class GetScalingConfigsConfigurationListResult
    {
        /// <summary>
        /// Launch configuration ID.
        /// </summary>
        public readonly string ConfigurationId;
        /// <summary>
        /// Launch configuration name.
        /// </summary>
        public readonly string ConfigurationName;
        /// <summary>
        /// The time when the launch configuration was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Configurations of data disk.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingConfigsConfigurationListDataDiskResult> DataDisks;
        /// <summary>
        /// Policy of cloud disk type.
        /// </summary>
        public readonly string DiskTypePolicy;
        /// <summary>
        /// Whether to activate cloud monitor service.
        /// </summary>
        public readonly bool EnhancedMonitorService;
        /// <summary>
        /// Whether to activate cloud security service.
        /// </summary>
        public readonly bool EnhancedSecurityService;
        /// <summary>
        /// ID of available image, for example `img-8toqc6s3`.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// A tag list associates with an instance.
        /// </summary>
        public readonly ImmutableDictionary<string, object> InstanceTags;
        /// <summary>
        /// Instance type list of the scaling configuration.
        /// </summary>
        public readonly ImmutableArray<string> InstanceTypes;
        /// <summary>
        /// Charge types for network traffic.
        /// </summary>
        public readonly string InternetChargeType;
        /// <summary>
        /// Max bandwidth of Internet access in Mbps.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// ID list of login keys.
        /// </summary>
        public readonly ImmutableArray<string> KeyIds;
        /// <summary>
        /// ID of the project to which the configuration belongs. Default value is 0.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Specify whether to assign an Internet IP address.
        /// </summary>
        public readonly bool PublicIpAssigned;
        /// <summary>
        /// Security groups to which the instance belongs.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// Current status of a launch configuration.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// System disk size of the scaling configuration in GB.
        /// </summary>
        public readonly int SystemDiskSize;
        /// <summary>
        /// System disk category of the scaling configuration.
        /// </summary>
        public readonly string SystemDiskType;
        /// <summary>
        /// Base64-encoded User Data text.
        /// </summary>
        public readonly string UserData;
        /// <summary>
        /// Version Number.
        /// </summary>
        public readonly int VersionNumber;

        [OutputConstructor]
        private GetScalingConfigsConfigurationListResult(
            string configurationId,

            string configurationName,

            string createTime,

            ImmutableArray<Outputs.GetScalingConfigsConfigurationListDataDiskResult> dataDisks,

            string diskTypePolicy,

            bool enhancedMonitorService,

            bool enhancedSecurityService,

            string imageId,

            ImmutableDictionary<string, object> instanceTags,

            ImmutableArray<string> instanceTypes,

            string internetChargeType,

            int internetMaxBandwidthOut,

            ImmutableArray<string> keyIds,

            int projectId,

            bool publicIpAssigned,

            ImmutableArray<string> securityGroupIds,

            string status,

            int systemDiskSize,

            string systemDiskType,

            string userData,

            int versionNumber)
        {
            ConfigurationId = configurationId;
            ConfigurationName = configurationName;
            CreateTime = createTime;
            DataDisks = dataDisks;
            DiskTypePolicy = diskTypePolicy;
            EnhancedMonitorService = enhancedMonitorService;
            EnhancedSecurityService = enhancedSecurityService;
            ImageId = imageId;
            InstanceTags = instanceTags;
            InstanceTypes = instanceTypes;
            InternetChargeType = internetChargeType;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            KeyIds = keyIds;
            ProjectId = projectId;
            PublicIpAssigned = publicIpAssigned;
            SecurityGroupIds = securityGroupIds;
            Status = status;
            SystemDiskSize = systemDiskSize;
            SystemDiskType = systemDiskType;
            UserData = userData;
            VersionNumber = versionNumber;
        }
    }
}
