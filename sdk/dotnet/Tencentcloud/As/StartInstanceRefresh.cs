// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.As
{
    /// <summary>
    /// Provides a resource to create as instance refresh
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.As.StartInstanceRefresh("example", new()
    ///     {
    ///         AutoScalingGroupId = "asg-8n7fdm28",
    ///         RefreshMode = "ROLLING_UPDATE_RESET",
    ///         RefreshSettings = new Tencentcloud.As.Inputs.StartInstanceRefreshRefreshSettingsArgs
    ///         {
    ///             CheckInstanceTargetHealth = false,
    ///             RollingUpdateSettings = new Tencentcloud.As.Inputs.StartInstanceRefreshRefreshSettingsRollingUpdateSettingsArgs
    ///             {
    ///                 BatchNumber = 1,
    ///                 BatchPause = "AUTOMATIC",
    ///                 MaxSurge = 1,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [TencentcloudResourceType("tencentcloud:As/startInstanceRefresh:StartInstanceRefresh")]
    public partial class StartInstanceRefresh : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Scaling group ID.
        /// </summary>
        [Output("autoScalingGroupId")]
        public Output<string> AutoScalingGroupId { get; private set; } = null!;

        /// <summary>
        /// Refresh mode, currently, only rolling updates are supported, with the default value being ROLLING_UPDATE_RESET.
        /// </summary>
        [Output("refreshMode")]
        public Output<string?> RefreshMode { get; private set; } = null!;

        /// <summary>
        /// Refresh settings.
        /// </summary>
        [Output("refreshSettings")]
        public Output<Outputs.StartInstanceRefreshRefreshSettings> RefreshSettings { get; private set; } = null!;


        /// <summary>
        /// Create a StartInstanceRefresh resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StartInstanceRefresh(string name, StartInstanceRefreshArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:As/startInstanceRefresh:StartInstanceRefresh", name, args ?? new StartInstanceRefreshArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StartInstanceRefresh(string name, Input<string> id, StartInstanceRefreshState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:As/startInstanceRefresh:StartInstanceRefresh", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StartInstanceRefresh resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StartInstanceRefresh Get(string name, Input<string> id, StartInstanceRefreshState? state = null, CustomResourceOptions? options = null)
        {
            return new StartInstanceRefresh(name, id, state, options);
        }
    }

    public sealed class StartInstanceRefreshArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Scaling group ID.
        /// </summary>
        [Input("autoScalingGroupId", required: true)]
        public Input<string> AutoScalingGroupId { get; set; } = null!;

        /// <summary>
        /// Refresh mode, currently, only rolling updates are supported, with the default value being ROLLING_UPDATE_RESET.
        /// </summary>
        [Input("refreshMode")]
        public Input<string>? RefreshMode { get; set; }

        /// <summary>
        /// Refresh settings.
        /// </summary>
        [Input("refreshSettings", required: true)]
        public Input<Inputs.StartInstanceRefreshRefreshSettingsArgs> RefreshSettings { get; set; } = null!;

        public StartInstanceRefreshArgs()
        {
        }
        public static new StartInstanceRefreshArgs Empty => new StartInstanceRefreshArgs();
    }

    public sealed class StartInstanceRefreshState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Scaling group ID.
        /// </summary>
        [Input("autoScalingGroupId")]
        public Input<string>? AutoScalingGroupId { get; set; }

        /// <summary>
        /// Refresh mode, currently, only rolling updates are supported, with the default value being ROLLING_UPDATE_RESET.
        /// </summary>
        [Input("refreshMode")]
        public Input<string>? RefreshMode { get; set; }

        /// <summary>
        /// Refresh settings.
        /// </summary>
        [Input("refreshSettings")]
        public Input<Inputs.StartInstanceRefreshRefreshSettingsGetArgs>? RefreshSettings { get; set; }

        public StartInstanceRefreshState()
        {
        }
        public static new StartInstanceRefreshState Empty => new StartInstanceRefreshState();
    }
}
