// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Lite
{
    /// <summary>
    /// Provides a resource to create a emr lite_hbase_instance
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var liteHbaseInstance = new Tencentcloud.Lite.HbaseInstance("liteHbaseInstance", new()
    ///     {
    ///         DiskSize = 100,
    ///         DiskType = "CLOUD_HSSD",
    ///         InstanceName = "tf-test",
    ///         NodeType = "8C32G",
    ///         PayMode = 0,
    ///         Tags = new[]
    ///         {
    ///             new Tencentcloud.Lite.Inputs.HbaseInstanceTagArgs
    ///             {
    ///                 TagKey = "test",
    ///                 TagValue = "test",
    ///             },
    ///         },
    ///         ZoneSettings = new[]
    ///         {
    ///             new Tencentcloud.Lite.Inputs.HbaseInstanceZoneSettingArgs
    ///             {
    ///                 NodeNum = 3,
    ///                 VpcSettings = new Tencentcloud.Lite.Inputs.HbaseInstanceZoneSettingVpcSettingsArgs
    ///                 {
    ///                     SubnetId = "subnet-xxxxxx",
    ///                     VpcId = "vpc-xxxxxx",
    ///                 },
    ///                 Zone = "ap-shanghai-2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// emr lite_hbase_instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Lite/hbaseInstance:HbaseInstance lite_hbase_instance lite_hbase_instance_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Lite/hbaseInstance:HbaseInstance")]
    public partial class HbaseInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Instance single-node disk capacity, in GB. The single-node disk capacity must be greater than or equal to 100 and less than or equal to 10000, with an adjustment step size of 20.
        /// </summary>
        [Output("diskSize")]
        public Output<int> DiskSize { get; private set; } = null!;

        /// <summary>
        /// Instance disk type, fill in CLOUD_HSSD to indicate performance cloud storage.
        /// </summary>
        [Output("diskType")]
        public Output<string> DiskType { get; private set; } = null!;

        /// <summary>
        /// Instance name. Length limit is 6-36 characters. Only Chinese characters, letters, numbers, -, and _ are allowed.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Instance node type, can be filled in as 4C16G, 8C32G, 16C64G, 32C128G, case insensitive.
        /// </summary>
        [Output("nodeType")]
        public Output<string> NodeType { get; private set; } = null!;

        /// <summary>
        /// Instance pay mode. Value range: 0: indicates post pay mode, that is, pay-as-you-go.
        /// </summary>
        [Output("payMode")]
        public Output<int> PayMode { get; private set; } = null!;

        /// <summary>
        /// List of tags to bind to the instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.HbaseInstanceTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Detailed configuration of the instance availability zone, currently supports multiple availability zones, the number of availability zones can only be 1 or 3, including zone name, VPC information, and number of nodes. The total number of nodes across all zones must be greater than or equal to 3 and less than or equal to 50.
        /// </summary>
        [Output("zoneSettings")]
        public Output<ImmutableArray<Outputs.HbaseInstanceZoneSetting>> ZoneSettings { get; private set; } = null!;


        /// <summary>
        /// Create a HbaseInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HbaseInstance(string name, HbaseInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Lite/hbaseInstance:HbaseInstance", name, args ?? new HbaseInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HbaseInstance(string name, Input<string> id, HbaseInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Lite/hbaseInstance:HbaseInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HbaseInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HbaseInstance Get(string name, Input<string> id, HbaseInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new HbaseInstance(name, id, state, options);
        }
    }

    public sealed class HbaseInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Instance single-node disk capacity, in GB. The single-node disk capacity must be greater than or equal to 100 and less than or equal to 10000, with an adjustment step size of 20.
        /// </summary>
        [Input("diskSize", required: true)]
        public Input<int> DiskSize { get; set; } = null!;

        /// <summary>
        /// Instance disk type, fill in CLOUD_HSSD to indicate performance cloud storage.
        /// </summary>
        [Input("diskType", required: true)]
        public Input<string> DiskType { get; set; } = null!;

        /// <summary>
        /// Instance name. Length limit is 6-36 characters. Only Chinese characters, letters, numbers, -, and _ are allowed.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// Instance node type, can be filled in as 4C16G, 8C32G, 16C64G, 32C128G, case insensitive.
        /// </summary>
        [Input("nodeType", required: true)]
        public Input<string> NodeType { get; set; } = null!;

        /// <summary>
        /// Instance pay mode. Value range: 0: indicates post pay mode, that is, pay-as-you-go.
        /// </summary>
        [Input("payMode", required: true)]
        public Input<int> PayMode { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.HbaseInstanceTagArgs>? _tags;

        /// <summary>
        /// List of tags to bind to the instance.
        /// </summary>
        public InputList<Inputs.HbaseInstanceTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.HbaseInstanceTagArgs>());
            set => _tags = value;
        }

        [Input("zoneSettings", required: true)]
        private InputList<Inputs.HbaseInstanceZoneSettingArgs>? _zoneSettings;

        /// <summary>
        /// Detailed configuration of the instance availability zone, currently supports multiple availability zones, the number of availability zones can only be 1 or 3, including zone name, VPC information, and number of nodes. The total number of nodes across all zones must be greater than or equal to 3 and less than or equal to 50.
        /// </summary>
        public InputList<Inputs.HbaseInstanceZoneSettingArgs> ZoneSettings
        {
            get => _zoneSettings ?? (_zoneSettings = new InputList<Inputs.HbaseInstanceZoneSettingArgs>());
            set => _zoneSettings = value;
        }

        public HbaseInstanceArgs()
        {
        }
        public static new HbaseInstanceArgs Empty => new HbaseInstanceArgs();
    }

    public sealed class HbaseInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Instance single-node disk capacity, in GB. The single-node disk capacity must be greater than or equal to 100 and less than or equal to 10000, with an adjustment step size of 20.
        /// </summary>
        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        /// <summary>
        /// Instance disk type, fill in CLOUD_HSSD to indicate performance cloud storage.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        /// <summary>
        /// Instance name. Length limit is 6-36 characters. Only Chinese characters, letters, numbers, -, and _ are allowed.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Instance node type, can be filled in as 4C16G, 8C32G, 16C64G, 32C128G, case insensitive.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// Instance pay mode. Value range: 0: indicates post pay mode, that is, pay-as-you-go.
        /// </summary>
        [Input("payMode")]
        public Input<int>? PayMode { get; set; }

        [Input("tags")]
        private InputList<Inputs.HbaseInstanceTagGetArgs>? _tags;

        /// <summary>
        /// List of tags to bind to the instance.
        /// </summary>
        public InputList<Inputs.HbaseInstanceTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.HbaseInstanceTagGetArgs>());
            set => _tags = value;
        }

        [Input("zoneSettings")]
        private InputList<Inputs.HbaseInstanceZoneSettingGetArgs>? _zoneSettings;

        /// <summary>
        /// Detailed configuration of the instance availability zone, currently supports multiple availability zones, the number of availability zones can only be 1 or 3, including zone name, VPC information, and number of nodes. The total number of nodes across all zones must be greater than or equal to 3 and less than or equal to 50.
        /// </summary>
        public InputList<Inputs.HbaseInstanceZoneSettingGetArgs> ZoneSettings
        {
            get => _zoneSettings ?? (_zoneSettings = new InputList<Inputs.HbaseInstanceZoneSettingGetArgs>());
            set => _zoneSettings = value;
        }

        public HbaseInstanceState()
        {
        }
        public static new HbaseInstanceState Empty => new HbaseInstanceState();
    }
}
