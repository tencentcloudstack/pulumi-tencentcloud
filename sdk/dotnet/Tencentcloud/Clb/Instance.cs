// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Clb
{
    /// <summary>
    /// Provides a resource to create a CLB instance.
    /// 
    /// ## Example Usage
    /// 
    /// ### Create INTERNAL CLB
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create subnet
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = availabilityZone,
    ///         CidrBlock = "10.0.1.0/24",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     // create clb
    ///     var example = new Tencentcloud.Clb.Instance("example", new()
    ///     {
    ///         NetworkType = "INTERNAL",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         VpcId = vpc.Id,
    ///         SubnetId = subnet.Id,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create dedicated cluster clb
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create subnet
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = availabilityZone,
    ///         CidrBlock = "10.0.1.0/24",
    ///         CdcId = "cluster-lchwgxhs",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     // create clb
    ///     var example = new Tencentcloud.Clb.Instance("example", new()
    ///     {
    ///         NetworkType = "INTERNAL",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         ClusterId = "cluster-lchwgxhs",
    ///         VpcId = vpc.Id,
    ///         SubnetId = subnet.Id,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create LCU-supported CLB
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create subnet
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = availabilityZone,
    ///         CidrBlock = "10.0.1.0/24",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     // create clb
    ///     var example = new Tencentcloud.Clb.Instance("example", new()
    ///     {
    ///         NetworkType = "INTERNAL",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         SlaType = "clb.c3.medium",
    ///         VpcId = vpc.Id,
    ///         SubnetId = subnet.Id,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create OPEN CLB
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create security group
    ///     var exampleGroup = new Tencentcloud.Security.Group("exampleGroup", new()
    ///     {
    ///         Description = "sg desc.",
    ///         ProjectId = 0,
    ///         Tags = 
    ///         {
    ///             { "example", "test" },
    ///         },
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         VpcId = vpc.Id,
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleGroup.Id,
    ///         },
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Support CORS
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var zone = config.Get("zone") ?? "ap-guangzhou";
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create security group
    ///     var exampleGroup = new Tencentcloud.Security.Group("exampleGroup", new()
    ///     {
    ///         Description = "sg desc.",
    ///         ProjectId = 0,
    ///         Tags = 
    ///         {
    ///             { "example", "test" },
    ///         },
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         VpcId = vpc.Id,
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleGroup.Id,
    ///         },
    ///         TargetRegionInfoRegion = zone,
    ///         TargetRegionInfoVpcId = vpc.Id,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Open CLB with VipIsp
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create vpc bandwidth package
    ///     var exampleBandwidthPackage = new Tencentcloud.Vpc.BandwidthPackage("exampleBandwidthPackage", new()
    ///     {
    ///         NetworkType = "SINGLEISP_CMCC",
    ///         ChargeType = "ENHANCED95_POSTPAID_BY_MONTH",
    ///         BandwidthPackageName = "tf-example",
    ///         InternetMaxBandwidth = 300,
    ///         Egress = "center_egress1",
    ///         Tags = 
    ///         {
    ///             { "createdBy", "terraform" },
    ///         },
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         VipIsp = "CMCC",
    ///         InternetChargeType = "BANDWIDTH_PACKAGE",
    ///         BandwidthPackageId = exampleBandwidthPackage.Id,
    ///         VpcId = vpc.Id,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Dynamic Vip Instance
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var zone = config.Get("zone") ?? "ap-guangzhou";
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create subnet
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = availabilityZone,
    ///         CidrBlock = "10.0.1.0/24",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     // create security group
    ///     var exampleGroup = new Tencentcloud.Security.Group("exampleGroup", new()
    ///     {
    ///         Description = "sg desc.",
    ///         ProjectId = 0,
    ///         Tags = 
    ///         {
    ///             { "example", "test" },
    ///         },
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         VpcId = vpc.Id,
    ///         TargetRegionInfoRegion = zone,
    ///         TargetRegionInfoVpcId = vpc.Id,
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleGroup.Id,
    ///         },
    ///         DynamicVip = true,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["domain"] = exampleInstance.Domain,
    ///     };
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Specified Vip Instance
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create security group
    ///     var exampleGroup = new Tencentcloud.Security.Group("exampleGroup", new()
    ///     {
    ///         Description = "sg desc.",
    ///         ProjectId = 0,
    ///         Tags = 
    ///         {
    ///             { "example", "test" },
    ///         },
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         VpcId = vpc.Id,
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleGroup.Id,
    ///         },
    ///         Vip = "111.230.4.204",
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["domain"] = exampleInstance.Domain,
    ///     };
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Default enable
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var zone = config.Get("zone") ?? "ap-guangzhou";
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create subnet
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = availabilityZone,
    ///         CidrBlock = "10.0.1.0/24",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     // create security group
    ///     var exampleGroup = new Tencentcloud.Security.Group("exampleGroup", new()
    ///     {
    ///         Description = "sg desc.",
    ///         ProjectId = 0,
    ///         Tags = 
    ///         {
    ///             { "example", "test" },
    ///         },
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         LoadBalancerPassToTarget = true,
    ///         VpcId = vpc.Id,
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleGroup.Id,
    ///         },
    ///         TargetRegionInfoVpcId = vpc.Id,
    ///         TargetRegionInfoRegion = zone,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create multiple instance
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     var example = new Tencentcloud.Clb.Instance("example", new()
    ///     {
    ///         NetworkType = "OPEN",
    ///         ClbName = "tf-example",
    ///         MasterZoneId = availabilityZone,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create instance with log
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // create vpc
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     // create subnet
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = @var.Availability_zone,
    ///         CidrBlock = "10.0.1.0/24",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     // create route table
    ///     var route = new Tencentcloud.Route.Table("route", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///     });
    /// 
    ///     // create security group
    ///     var exampleGroup = new Tencentcloud.Security.Group("exampleGroup", new()
    ///     {
    ///         Description = "sg desc.",
    ///         ProjectId = 0,
    ///         Tags = 
    ///         {
    ///             { "example", "test" },
    ///         },
    ///     });
    /// 
    ///     var log = new Tencentcloud.Clb.LogSet("log", new()
    ///     {
    ///         Period = 7,
    ///     });
    /// 
    ///     // create topic
    ///     var topic = new Tencentcloud.Clb.LogTopic("topic", new()
    ///     {
    ///         LogSetId = log.Id,
    ///         TopicName = "clb-topic",
    ///     });
    /// 
    ///     // create clb
    ///     var exampleInstance = new Tencentcloud.Clb.Instance("exampleInstance", new()
    ///     {
    ///         NetworkType = "INTERNAL",
    ///         ClbName = "tf-example",
    ///         ProjectId = 0,
    ///         LoadBalancerPassToTarget = true,
    ///         VpcId = vpc.Id,
    ///         SubnetId = subnet.Id,
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleGroup.Id,
    ///         },
    ///         LogSetId = log.Id,
    ///         LogTopicId = topic.Id,
    ///         Tags = 
    ///         {
    ///             { "tagKey", "tagValue" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// CLB instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Clb/instance:Instance example lb-7a0t6zqb
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Clb/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IP version, only applicable to open CLB. Valid values are `ipv4`, `ipv6` and `IPv6FullChain`.
        /// </summary>
        [Output("addressIpVersion")]
        public Output<string> AddressIpVersion { get; private set; } = null!;

        /// <summary>
        /// The IPv6 address of the load balancing instance.
        /// </summary>
        [Output("addressIpv6")]
        public Output<string> AddressIpv6 { get; private set; } = null!;

        /// <summary>
        /// Bandwidth package id. If set, the `internet_charge_type` must be `BANDWIDTH_PACKAGE`.
        /// </summary>
        [Output("bandwidthPackageId")]
        public Output<string?> BandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// Name of the CLB. The name can only contain Chinese characters, English letters, numbers, underscore and hyphen '-'.
        /// </summary>
        [Output("clbName")]
        public Output<string> ClbName { get; private set; } = null!;

        /// <summary>
        /// The virtual service address table of the CLB.
        /// </summary>
        [Output("clbVips")]
        public Output<ImmutableArray<string>> ClbVips { get; private set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<string?> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Whether to enable delete protection.
        /// </summary>
        [Output("deleteProtect")]
        public Output<bool?> DeleteProtect { get; private set; } = null!;

        /// <summary>
        /// Domain name of the CLB instance.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// If create dynamic vip CLB instance, `true` or `false`.
        /// </summary>
        [Output("dynamicVip")]
        public Output<bool?> DynamicVip { get; private set; } = null!;

        /// <summary>
        /// Max bandwidth out, only applicable to open CLB. Valid value ranges is [1, 2048]. Unit is MB.
        /// </summary>
        [Output("internetBandwidthMaxOut")]
        public Output<int> InternetBandwidthMaxOut { get; private set; } = null!;

        /// <summary>
        /// Internet charge type, only applicable to open CLB. Valid values are `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
        /// </summary>
        [Output("internetChargeType")]
        public Output<string> InternetChargeType { get; private set; } = null!;

        /// <summary>
        /// This field is meaningful when the IP address version is ipv6, `IPv6Nat64` | `IPv6FullChain`.
        /// </summary>
        [Output("ipv6Mode")]
        public Output<string> Ipv6Mode { get; private set; } = null!;

        /// <summary>
        /// Whether the target allow flow come from clb. If value is true, only check security group of clb, or check both clb and backend instance security group.
        /// </summary>
        [Output("loadBalancerPassToTarget")]
        public Output<bool?> LoadBalancerPassToTarget { get; private set; } = null!;

        /// <summary>
        /// The id of log set.
        /// </summary>
        [Output("logSetId")]
        public Output<string?> LogSetId { get; private set; } = null!;

        /// <summary>
        /// The id of log topic.
        /// </summary>
        [Output("logTopicId")]
        public Output<string?> LogTopicId { get; private set; } = null!;

        /// <summary>
        /// Setting master zone id of cross available zone disaster recovery, only applicable to open CLB.
        /// </summary>
        [Output("masterZoneId")]
        public Output<string> MasterZoneId { get; private set; } = null!;

        /// <summary>
        /// Type of CLB instance. Valid values: `OPEN` and `INTERNAL`.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// ID of the project within the CLB instance, `0` - Default Project.
        /// </summary>
        [Output("projectId")]
        public Output<int?> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Security groups of the CLB instance. Supports both `OPEN` and `INTERNAL` CLBs.
        /// </summary>
        [Output("securityGroups")]
        public Output<ImmutableArray<string>> SecurityGroups { get; private set; } = null!;

        /// <summary>
        /// This parameter is required to create LCU-supported instances. Values:`SLA`: Super Large 4. When you have activated Super Large models, `SLA` refers to Super Large 4; `clb.c2.medium`: Standard; `clb.c3.small`: Advanced 1; `clb.c3.medium`: Advanced 1; `clb.c4.small`: Super Large 1; `clb.c4.medium`: Super Large 2; `clb.c4.large`: Super Large 3; `clb.c4.xlarge`: Super Large 4. For more details, see [Instance Specifications](https://intl.cloud.tencent.com/document/product/214/84689?from_cn_redirect=1).
        /// </summary>
        [Output("slaType")]
        public Output<string> SlaType { get; private set; } = null!;

        /// <summary>
        /// Setting slave zone id of cross available zone disaster recovery, only applicable to open CLB. this zone will undertake traffic when the master is down.
        /// </summary>
        [Output("slaveZoneId")]
        public Output<string> SlaveZoneId { get; private set; } = null!;

        /// <summary>
        /// Snat Ip List, required with `snat_pro=true`. NOTE: This argument cannot be read and modified here because dynamic ip is untraceable, please import resource `tencentcloud.Clb.SnatIp` to handle fixed ips.
        /// </summary>
        [Output("snatIps")]
        public Output<ImmutableArray<Outputs.InstanceSnatIp>> SnatIps { get; private set; } = null!;

        /// <summary>
        /// Indicates whether Binding IPs of other VPCs feature switch.
        /// </summary>
        [Output("snatPro")]
        public Output<bool?> SnatPro { get; private set; } = null!;

        /// <summary>
        /// In the case of purchasing a `INTERNAL` clb instance, the subnet id must be specified. The VIP of the `INTERNAL` clb instance will be generated from this subnet.
        /// </summary>
        [Output("subnetId")]
        public Output<string?> SubnetId { get; private set; } = null!;

        /// <summary>
        /// The available tags within this CLB.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Region information of backend services are attached the CLB instance. Only supports `OPEN` CLBs.
        /// </summary>
        [Output("targetRegionInfoRegion")]
        public Output<string> TargetRegionInfoRegion { get; private set; } = null!;

        /// <summary>
        /// Vpc information of backend services are attached the CLB instance. Only supports `OPEN` CLBs.
        /// </summary>
        [Output("targetRegionInfoVpcId")]
        public Output<string> TargetRegionInfoVpcId { get; private set; } = null!;

        /// <summary>
        /// Specifies the VIP for the application of a CLB instance. This parameter is optional. If you do not specify this parameter, the system automatically assigns a value for the parameter. IPv4 and IPv6 CLB instances support this parameter, but IPv6 NAT64 CLB instances do not.
        /// </summary>
        [Output("vip")]
        public Output<string> Vip { get; private set; } = null!;

        /// <summary>
        /// Network operator, only applicable to open CLB. Valid values are `CMCC`(China Mobile), `CTCC`(Telecom), `CUCC`(China Unicom) and `BGP`. If this ISP is specified, network billing method can only use the bandwidth package billing (BANDWIDTH_PACKAGE).
        /// </summary>
        [Output("vipIsp")]
        public Output<string> VipIsp { get; private set; } = null!;

        /// <summary>
        /// VPC ID of the CLB.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Available zone id, only applicable to open CLB.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Clb/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Clb/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP version, only applicable to open CLB. Valid values are `ipv4`, `ipv6` and `IPv6FullChain`.
        /// </summary>
        [Input("addressIpVersion")]
        public Input<string>? AddressIpVersion { get; set; }

        /// <summary>
        /// Bandwidth package id. If set, the `internet_charge_type` must be `BANDWIDTH_PACKAGE`.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Name of the CLB. The name can only contain Chinese characters, English letters, numbers, underscore and hyphen '-'.
        /// </summary>
        [Input("clbName", required: true)]
        public Input<string> ClbName { get; set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Whether to enable delete protection.
        /// </summary>
        [Input("deleteProtect")]
        public Input<bool>? DeleteProtect { get; set; }

        /// <summary>
        /// If create dynamic vip CLB instance, `true` or `false`.
        /// </summary>
        [Input("dynamicVip")]
        public Input<bool>? DynamicVip { get; set; }

        /// <summary>
        /// Max bandwidth out, only applicable to open CLB. Valid value ranges is [1, 2048]. Unit is MB.
        /// </summary>
        [Input("internetBandwidthMaxOut")]
        public Input<int>? InternetBandwidthMaxOut { get; set; }

        /// <summary>
        /// Internet charge type, only applicable to open CLB. Valid values are `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Whether the target allow flow come from clb. If value is true, only check security group of clb, or check both clb and backend instance security group.
        /// </summary>
        [Input("loadBalancerPassToTarget")]
        public Input<bool>? LoadBalancerPassToTarget { get; set; }

        /// <summary>
        /// The id of log set.
        /// </summary>
        [Input("logSetId")]
        public Input<string>? LogSetId { get; set; }

        /// <summary>
        /// The id of log topic.
        /// </summary>
        [Input("logTopicId")]
        public Input<string>? LogTopicId { get; set; }

        /// <summary>
        /// Setting master zone id of cross available zone disaster recovery, only applicable to open CLB.
        /// </summary>
        [Input("masterZoneId")]
        public Input<string>? MasterZoneId { get; set; }

        /// <summary>
        /// Type of CLB instance. Valid values: `OPEN` and `INTERNAL`.
        /// </summary>
        [Input("networkType", required: true)]
        public Input<string> NetworkType { get; set; } = null!;

        /// <summary>
        /// ID of the project within the CLB instance, `0` - Default Project.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// Security groups of the CLB instance. Supports both `OPEN` and `INTERNAL` CLBs.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// This parameter is required to create LCU-supported instances. Values:`SLA`: Super Large 4. When you have activated Super Large models, `SLA` refers to Super Large 4; `clb.c2.medium`: Standard; `clb.c3.small`: Advanced 1; `clb.c3.medium`: Advanced 1; `clb.c4.small`: Super Large 1; `clb.c4.medium`: Super Large 2; `clb.c4.large`: Super Large 3; `clb.c4.xlarge`: Super Large 4. For more details, see [Instance Specifications](https://intl.cloud.tencent.com/document/product/214/84689?from_cn_redirect=1).
        /// </summary>
        [Input("slaType")]
        public Input<string>? SlaType { get; set; }

        /// <summary>
        /// Setting slave zone id of cross available zone disaster recovery, only applicable to open CLB. this zone will undertake traffic when the master is down.
        /// </summary>
        [Input("slaveZoneId")]
        public Input<string>? SlaveZoneId { get; set; }

        [Input("snatIps")]
        private InputList<Inputs.InstanceSnatIpArgs>? _snatIps;

        /// <summary>
        /// Snat Ip List, required with `snat_pro=true`. NOTE: This argument cannot be read and modified here because dynamic ip is untraceable, please import resource `tencentcloud.Clb.SnatIp` to handle fixed ips.
        /// </summary>
        public InputList<Inputs.InstanceSnatIpArgs> SnatIps
        {
            get => _snatIps ?? (_snatIps = new InputList<Inputs.InstanceSnatIpArgs>());
            set => _snatIps = value;
        }

        /// <summary>
        /// Indicates whether Binding IPs of other VPCs feature switch.
        /// </summary>
        [Input("snatPro")]
        public Input<bool>? SnatPro { get; set; }

        /// <summary>
        /// In the case of purchasing a `INTERNAL` clb instance, the subnet id must be specified. The VIP of the `INTERNAL` clb instance will be generated from this subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The available tags within this CLB.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Region information of backend services are attached the CLB instance. Only supports `OPEN` CLBs.
        /// </summary>
        [Input("targetRegionInfoRegion")]
        public Input<string>? TargetRegionInfoRegion { get; set; }

        /// <summary>
        /// Vpc information of backend services are attached the CLB instance. Only supports `OPEN` CLBs.
        /// </summary>
        [Input("targetRegionInfoVpcId")]
        public Input<string>? TargetRegionInfoVpcId { get; set; }

        /// <summary>
        /// Specifies the VIP for the application of a CLB instance. This parameter is optional. If you do not specify this parameter, the system automatically assigns a value for the parameter. IPv4 and IPv6 CLB instances support this parameter, but IPv6 NAT64 CLB instances do not.
        /// </summary>
        [Input("vip")]
        public Input<string>? Vip { get; set; }

        /// <summary>
        /// Network operator, only applicable to open CLB. Valid values are `CMCC`(China Mobile), `CTCC`(Telecom), `CUCC`(China Unicom) and `BGP`. If this ISP is specified, network billing method can only use the bandwidth package billing (BANDWIDTH_PACKAGE).
        /// </summary>
        [Input("vipIsp")]
        public Input<string>? VipIsp { get; set; }

        /// <summary>
        /// VPC ID of the CLB.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Available zone id, only applicable to open CLB.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP version, only applicable to open CLB. Valid values are `ipv4`, `ipv6` and `IPv6FullChain`.
        /// </summary>
        [Input("addressIpVersion")]
        public Input<string>? AddressIpVersion { get; set; }

        /// <summary>
        /// The IPv6 address of the load balancing instance.
        /// </summary>
        [Input("addressIpv6")]
        public Input<string>? AddressIpv6 { get; set; }

        /// <summary>
        /// Bandwidth package id. If set, the `internet_charge_type` must be `BANDWIDTH_PACKAGE`.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Name of the CLB. The name can only contain Chinese characters, English letters, numbers, underscore and hyphen '-'.
        /// </summary>
        [Input("clbName")]
        public Input<string>? ClbName { get; set; }

        [Input("clbVips")]
        private InputList<string>? _clbVips;

        /// <summary>
        /// The virtual service address table of the CLB.
        /// </summary>
        public InputList<string> ClbVips
        {
            get => _clbVips ?? (_clbVips = new InputList<string>());
            set => _clbVips = value;
        }

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Whether to enable delete protection.
        /// </summary>
        [Input("deleteProtect")]
        public Input<bool>? DeleteProtect { get; set; }

        /// <summary>
        /// Domain name of the CLB instance.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// If create dynamic vip CLB instance, `true` or `false`.
        /// </summary>
        [Input("dynamicVip")]
        public Input<bool>? DynamicVip { get; set; }

        /// <summary>
        /// Max bandwidth out, only applicable to open CLB. Valid value ranges is [1, 2048]. Unit is MB.
        /// </summary>
        [Input("internetBandwidthMaxOut")]
        public Input<int>? InternetBandwidthMaxOut { get; set; }

        /// <summary>
        /// Internet charge type, only applicable to open CLB. Valid values are `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// This field is meaningful when the IP address version is ipv6, `IPv6Nat64` | `IPv6FullChain`.
        /// </summary>
        [Input("ipv6Mode")]
        public Input<string>? Ipv6Mode { get; set; }

        /// <summary>
        /// Whether the target allow flow come from clb. If value is true, only check security group of clb, or check both clb and backend instance security group.
        /// </summary>
        [Input("loadBalancerPassToTarget")]
        public Input<bool>? LoadBalancerPassToTarget { get; set; }

        /// <summary>
        /// The id of log set.
        /// </summary>
        [Input("logSetId")]
        public Input<string>? LogSetId { get; set; }

        /// <summary>
        /// The id of log topic.
        /// </summary>
        [Input("logTopicId")]
        public Input<string>? LogTopicId { get; set; }

        /// <summary>
        /// Setting master zone id of cross available zone disaster recovery, only applicable to open CLB.
        /// </summary>
        [Input("masterZoneId")]
        public Input<string>? MasterZoneId { get; set; }

        /// <summary>
        /// Type of CLB instance. Valid values: `OPEN` and `INTERNAL`.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// ID of the project within the CLB instance, `0` - Default Project.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// Security groups of the CLB instance. Supports both `OPEN` and `INTERNAL` CLBs.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// This parameter is required to create LCU-supported instances. Values:`SLA`: Super Large 4. When you have activated Super Large models, `SLA` refers to Super Large 4; `clb.c2.medium`: Standard; `clb.c3.small`: Advanced 1; `clb.c3.medium`: Advanced 1; `clb.c4.small`: Super Large 1; `clb.c4.medium`: Super Large 2; `clb.c4.large`: Super Large 3; `clb.c4.xlarge`: Super Large 4. For more details, see [Instance Specifications](https://intl.cloud.tencent.com/document/product/214/84689?from_cn_redirect=1).
        /// </summary>
        [Input("slaType")]
        public Input<string>? SlaType { get; set; }

        /// <summary>
        /// Setting slave zone id of cross available zone disaster recovery, only applicable to open CLB. this zone will undertake traffic when the master is down.
        /// </summary>
        [Input("slaveZoneId")]
        public Input<string>? SlaveZoneId { get; set; }

        [Input("snatIps")]
        private InputList<Inputs.InstanceSnatIpGetArgs>? _snatIps;

        /// <summary>
        /// Snat Ip List, required with `snat_pro=true`. NOTE: This argument cannot be read and modified here because dynamic ip is untraceable, please import resource `tencentcloud.Clb.SnatIp` to handle fixed ips.
        /// </summary>
        public InputList<Inputs.InstanceSnatIpGetArgs> SnatIps
        {
            get => _snatIps ?? (_snatIps = new InputList<Inputs.InstanceSnatIpGetArgs>());
            set => _snatIps = value;
        }

        /// <summary>
        /// Indicates whether Binding IPs of other VPCs feature switch.
        /// </summary>
        [Input("snatPro")]
        public Input<bool>? SnatPro { get; set; }

        /// <summary>
        /// In the case of purchasing a `INTERNAL` clb instance, the subnet id must be specified. The VIP of the `INTERNAL` clb instance will be generated from this subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The available tags within this CLB.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Region information of backend services are attached the CLB instance. Only supports `OPEN` CLBs.
        /// </summary>
        [Input("targetRegionInfoRegion")]
        public Input<string>? TargetRegionInfoRegion { get; set; }

        /// <summary>
        /// Vpc information of backend services are attached the CLB instance. Only supports `OPEN` CLBs.
        /// </summary>
        [Input("targetRegionInfoVpcId")]
        public Input<string>? TargetRegionInfoVpcId { get; set; }

        /// <summary>
        /// Specifies the VIP for the application of a CLB instance. This parameter is optional. If you do not specify this parameter, the system automatically assigns a value for the parameter. IPv4 and IPv6 CLB instances support this parameter, but IPv6 NAT64 CLB instances do not.
        /// </summary>
        [Input("vip")]
        public Input<string>? Vip { get; set; }

        /// <summary>
        /// Network operator, only applicable to open CLB. Valid values are `CMCC`(China Mobile), `CTCC`(Telecom), `CUCC`(China Unicom) and `BGP`. If this ISP is specified, network billing method can only use the bandwidth package billing (BANDWIDTH_PACKAGE).
        /// </summary>
        [Input("vipIsp")]
        public Input<string>? VipIsp { get; set; }

        /// <summary>
        /// VPC ID of the CLB.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Available zone id, only applicable to open CLB.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
