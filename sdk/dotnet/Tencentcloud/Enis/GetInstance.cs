// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Enis
{
    public static class GetInstance
    {
        /// <summary>
        /// Use this data source to query query ENIs.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var name = Tencentcloud.Enis.GetInstance.Invoke(new()
        ///     {
        ///         Name = "test eni",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetInstanceResult> InvokeAsync(GetInstanceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceResult>("tencentcloud:Enis/getInstance:getInstance", args ?? new GetInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query query ENIs.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var name = Tencentcloud.Enis.GetInstance.Invoke(new()
        ///     {
        ///         Name = "test eni",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetInstanceResult> Invoke(GetInstanceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceResult>("tencentcloud:Enis/getInstance:getInstance", args ?? new GetInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the ENI. Conflict with `ids`.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// ID of the ENIs to be queried. Conflict with `vpc_id`,`subnet_id`,`instance_id`,`security_group`,`name`,`ipv4` and `tags`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// ID of the instance which bind the ENI. Conflict with `ids`.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// Intranet IP of the ENI. Conflict with `ids`.
        /// </summary>
        [Input("ipv4")]
        public string? Ipv4 { get; set; }

        /// <summary>
        /// Name of the ENI to be queried. Conflict with `ids`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// A set of security group IDs which bind the ENI. Conflict with `ids`.
        /// </summary>
        [Input("securityGroup")]
        public string? SecurityGroup { get; set; }

        /// <summary>
        /// ID of the subnet within this vpc to be queried. Conflict with `ids`.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// Tags of the ENI. Conflict with `ids`.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the vpc to be queried. Conflict with `ids`.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetInstanceArgs()
        {
        }
        public static new GetInstanceArgs Empty => new GetInstanceArgs();
    }

    public sealed class GetInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the ENI. Conflict with `ids`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// ID of the ENIs to be queried. Conflict with `vpc_id`,`subnet_id`,`instance_id`,`security_group`,`name`,`ipv4` and `tags`.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// ID of the instance which bind the ENI. Conflict with `ids`.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Intranet IP of the ENI. Conflict with `ids`.
        /// </summary>
        [Input("ipv4")]
        public Input<string>? Ipv4 { get; set; }

        /// <summary>
        /// Name of the ENI to be queried. Conflict with `ids`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// A set of security group IDs which bind the ENI. Conflict with `ids`.
        /// </summary>
        [Input("securityGroup")]
        public Input<string>? SecurityGroup { get; set; }

        /// <summary>
        /// ID of the subnet within this vpc to be queried. Conflict with `ids`.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags of the ENI. Conflict with `ids`.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// ID of the vpc to be queried. Conflict with `ids`.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetInstanceInvokeArgs()
        {
        }
        public static new GetInstanceInvokeArgs Empty => new GetInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceResult
    {
        /// <summary>
        /// Message description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// An information list of ENIs. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceEniResult> Enis;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// ID of the instance which bind the ENI.
        /// </summary>
        public readonly string? InstanceId;
        public readonly string? Ipv4;
        /// <summary>
        /// Name of the ENI.
        /// </summary>
        public readonly string? Name;
        public readonly string? ResultOutputFile;
        public readonly string? SecurityGroup;
        /// <summary>
        /// ID of the subnet within this vpc.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// Tags of the ENI.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// ID of the vpc.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetInstanceResult(
            string? description,

            ImmutableArray<Outputs.GetInstanceEniResult> enis,

            string id,

            ImmutableArray<string> ids,

            string? instanceId,

            string? ipv4,

            string? name,

            string? resultOutputFile,

            string? securityGroup,

            string? subnetId,

            ImmutableDictionary<string, object>? tags,

            string? vpcId)
        {
            Description = description;
            Enis = enis;
            Id = id;
            Ids = ids;
            InstanceId = instanceId;
            Ipv4 = ipv4;
            Name = name;
            ResultOutputFile = resultOutputFile;
            SecurityGroup = securityGroup;
            SubnetId = subnetId;
            Tags = tags;
            VpcId = vpcId;
        }
    }
}
