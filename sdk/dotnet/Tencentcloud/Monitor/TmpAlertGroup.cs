// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Monitor
{
    /// <summary>
    /// Provides a resource to create a monitor tmp_alert_group
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-4";
    ///     var vpc = new Tencentcloud.Vpc.Instance("vpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     var subnet = new Tencentcloud.Subnet.Instance("subnet", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         AvailabilityZone = availabilityZone,
    ///         CidrBlock = "10.0.1.0/24",
    ///     });
    /// 
    ///     var exampleTmpInstance = new Tencentcloud.Monitor.TmpInstance("exampleTmpInstance", new()
    ///     {
    ///         InstanceName = "tf-tmp-instance",
    ///         VpcId = vpc.Id,
    ///         SubnetId = subnet.Id,
    ///         DataRetentionTime = 30,
    ///         Zone = availabilityZone,
    ///         Tags = 
    ///         {
    ///             { "createdBy", "terraform" },
    ///         },
    ///     });
    /// 
    ///     var exampleTmpAlertGroup = new Tencentcloud.Monitor.TmpAlertGroup("exampleTmpAlertGroup", new()
    ///     {
    ///         GroupName = "tf-example",
    ///         InstanceId = exampleTmpInstance.Id,
    ///         RepeatInterval = "5m",
    ///         CustomReceiver = new Tencentcloud.Monitor.Inputs.TmpAlertGroupCustomReceiverArgs
    ///         {
    ///             Type = "amp",
    ///         },
    ///         Rules = new[]
    ///         {
    ///             new Tencentcloud.Monitor.Inputs.TmpAlertGroupRuleArgs
    ///             {
    ///                 Duration = "1m",
    ///                 Expr = "up{job=\"prometheus-agent\"} != 1",
    ///                 RuleName = "Agent health check",
    ///                 State = 2,
    ///                 Annotations = 
    ///                 {
    ///                     { "summary", "Agent health check" },
    ///                     { "description", "Agent {{$labels.instance}} is deactivated, please pay attention!" },
    ///                 },
    ///                 Labels = 
    ///                 {
    ///                     { "severity", "critical" },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// monitor tmp_alert_group can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Monitor/tmpAlertGroup:TmpAlertGroup example prom-34qkzwvs#alert-rfkkr6cw
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Monitor/tmpAlertGroup:TmpAlertGroup")]
    public partial class TmpAlertGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Tencent cloud notification template id list.
        /// </summary>
        [Output("ampReceivers")]
        public Output<ImmutableArray<string>> AmpReceivers { get; private set; } = null!;

        /// <summary>
        /// User custom notification template, such as webhook, alertmanager.
        /// </summary>
        [Output("customReceiver")]
        public Output<Outputs.TmpAlertGroupCustomReceiver?> CustomReceiver { get; private set; } = null!;

        /// <summary>
        /// Alarm group id.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// Unique alert group name.
        /// </summary>
        [Output("groupName")]
        public Output<string?> GroupName { get; private set; } = null!;

        /// <summary>
        /// Instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string?> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Alert message send interval, default 1 hour.
        /// </summary>
        [Output("repeatInterval")]
        public Output<string?> RepeatInterval { get; private set; } = null!;

        /// <summary>
        /// A list of alert rules.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.TmpAlertGroupRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a TmpAlertGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TmpAlertGroup(string name, TmpAlertGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/tmpAlertGroup:TmpAlertGroup", name, args ?? new TmpAlertGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TmpAlertGroup(string name, Input<string> id, TmpAlertGroupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/tmpAlertGroup:TmpAlertGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TmpAlertGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TmpAlertGroup Get(string name, Input<string> id, TmpAlertGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new TmpAlertGroup(name, id, state, options);
        }
    }

    public sealed class TmpAlertGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("ampReceivers")]
        private InputList<string>? _ampReceivers;

        /// <summary>
        /// Tencent cloud notification template id list.
        /// </summary>
        public InputList<string> AmpReceivers
        {
            get => _ampReceivers ?? (_ampReceivers = new InputList<string>());
            set => _ampReceivers = value;
        }

        /// <summary>
        /// User custom notification template, such as webhook, alertmanager.
        /// </summary>
        [Input("customReceiver")]
        public Input<Inputs.TmpAlertGroupCustomReceiverArgs>? CustomReceiver { get; set; }

        /// <summary>
        /// Unique alert group name.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Alert message send interval, default 1 hour.
        /// </summary>
        [Input("repeatInterval")]
        public Input<string>? RepeatInterval { get; set; }

        [Input("rules")]
        private InputList<Inputs.TmpAlertGroupRuleArgs>? _rules;

        /// <summary>
        /// A list of alert rules.
        /// </summary>
        public InputList<Inputs.TmpAlertGroupRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.TmpAlertGroupRuleArgs>());
            set => _rules = value;
        }

        public TmpAlertGroupArgs()
        {
        }
        public static new TmpAlertGroupArgs Empty => new TmpAlertGroupArgs();
    }

    public sealed class TmpAlertGroupState : global::Pulumi.ResourceArgs
    {
        [Input("ampReceivers")]
        private InputList<string>? _ampReceivers;

        /// <summary>
        /// Tencent cloud notification template id list.
        /// </summary>
        public InputList<string> AmpReceivers
        {
            get => _ampReceivers ?? (_ampReceivers = new InputList<string>());
            set => _ampReceivers = value;
        }

        /// <summary>
        /// User custom notification template, such as webhook, alertmanager.
        /// </summary>
        [Input("customReceiver")]
        public Input<Inputs.TmpAlertGroupCustomReceiverGetArgs>? CustomReceiver { get; set; }

        /// <summary>
        /// Alarm group id.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Unique alert group name.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Alert message send interval, default 1 hour.
        /// </summary>
        [Input("repeatInterval")]
        public Input<string>? RepeatInterval { get; set; }

        [Input("rules")]
        private InputList<Inputs.TmpAlertGroupRuleGetArgs>? _rules;

        /// <summary>
        /// A list of alert rules.
        /// </summary>
        public InputList<Inputs.TmpAlertGroupRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.TmpAlertGroupRuleGetArgs>());
            set => _rules = value;
        }

        public TmpAlertGroupState()
        {
        }
        public static new TmpAlertGroupState Empty => new TmpAlertGroupState();
    }
}
