// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Identity
{
    /// <summary>
    /// Provides a resource to create a organization identity_center_role_assignment
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var identityCenterRoleAssignment = new Tencentcloud.Identity.CenterRoleAssignment("identityCenterRoleAssignment", new()
    ///     {
    ///         PrincipalId = "u-xxxxxx",
    ///         PrincipalType = "User",
    ///         RoleConfigurationId = "rc-xxxxxx",
    ///         TargetType = "MemberUin",
    ///         TargetUin = "xxxxxx",
    ///         ZoneId = "z-xxxxxx",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// organization identity_center_role_assignment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment identity_center_role_assignment {zoneId}#{roleConfigurationId}#{targetType}#{targetUinString}#{principalType}#{principalId}
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment")]
    public partial class CenterRoleAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Create time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// When you remove the last authorization configured with a certain privilege on a group account target account, whether to cancel the privilege configuration deployment at the same time. Value: DeprovisionForLastRoleAssignmentOnAccount: Remove privileges to configure deployment. None (default): Configure deployment without delegating privileges.
        /// </summary>
        [Output("deprovisionStrategy")]
        public Output<string?> DeprovisionStrategy { get; private set; } = null!;

        /// <summary>
        /// Identity ID for the CAM user synchronization. Valid values:
        /// When the PrincipalType value is Group, it is the CIC user group ID (g-********).
        /// When the PrincipalType value is User, it is the CIC user ID (u-********).
        /// </summary>
        [Output("principalId")]
        public Output<string> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// Principal name.
        /// </summary>
        [Output("principalName")]
        public Output<string> PrincipalName { get; private set; } = null!;

        /// <summary>
        /// Identity type for the CAM user synchronization. Valid values:
        /// 
        /// User: indicates that the identity for the CAM user synchronization is a CIC user.
        /// Group: indicates that the identity for the CAM user synchronization is a CIC user group.
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;

        /// <summary>
        /// Permission configuration ID.
        /// </summary>
        [Output("roleConfigurationId")]
        public Output<string> RoleConfigurationId { get; private set; } = null!;

        /// <summary>
        /// Role configuration name.
        /// </summary>
        [Output("roleConfigurationName")]
        public Output<string> RoleConfigurationName { get; private set; } = null!;

        /// <summary>
        /// Target name.
        /// </summary>
        [Output("targetName")]
        public Output<string> TargetName { get; private set; } = null!;

        /// <summary>
        /// Type of the synchronized target account of the Tencent Cloud Organization. ManagerUin: admin account; MemberUin: member account.
        /// </summary>
        [Output("targetType")]
        public Output<string> TargetType { get; private set; } = null!;

        /// <summary>
        /// UIN of the synchronized target account of the Tencent Cloud Organization.
        /// </summary>
        [Output("targetUin")]
        public Output<int> TargetUin { get; private set; } = null!;

        /// <summary>
        /// Update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Space ID.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a CenterRoleAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CenterRoleAssignment(string name, CenterRoleAssignmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment", name, args ?? new CenterRoleAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CenterRoleAssignment(string name, Input<string> id, CenterRoleAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CenterRoleAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CenterRoleAssignment Get(string name, Input<string> id, CenterRoleAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CenterRoleAssignment(name, id, state, options);
        }
    }

    public sealed class CenterRoleAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When you remove the last authorization configured with a certain privilege on a group account target account, whether to cancel the privilege configuration deployment at the same time. Value: DeprovisionForLastRoleAssignmentOnAccount: Remove privileges to configure deployment. None (default): Configure deployment without delegating privileges.
        /// </summary>
        [Input("deprovisionStrategy")]
        public Input<string>? DeprovisionStrategy { get; set; }

        /// <summary>
        /// Identity ID for the CAM user synchronization. Valid values:
        /// When the PrincipalType value is Group, it is the CIC user group ID (g-********).
        /// When the PrincipalType value is User, it is the CIC user ID (u-********).
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// Identity type for the CAM user synchronization. Valid values:
        /// 
        /// User: indicates that the identity for the CAM user synchronization is a CIC user.
        /// Group: indicates that the identity for the CAM user synchronization is a CIC user group.
        /// </summary>
        [Input("principalType", required: true)]
        public Input<string> PrincipalType { get; set; } = null!;

        /// <summary>
        /// Permission configuration ID.
        /// </summary>
        [Input("roleConfigurationId", required: true)]
        public Input<string> RoleConfigurationId { get; set; } = null!;

        /// <summary>
        /// Type of the synchronized target account of the Tencent Cloud Organization. ManagerUin: admin account; MemberUin: member account.
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        /// <summary>
        /// UIN of the synchronized target account of the Tencent Cloud Organization.
        /// </summary>
        [Input("targetUin", required: true)]
        public Input<int> TargetUin { get; set; } = null!;

        /// <summary>
        /// Space ID.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public CenterRoleAssignmentArgs()
        {
        }
        public static new CenterRoleAssignmentArgs Empty => new CenterRoleAssignmentArgs();
    }

    public sealed class CenterRoleAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Create time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// When you remove the last authorization configured with a certain privilege on a group account target account, whether to cancel the privilege configuration deployment at the same time. Value: DeprovisionForLastRoleAssignmentOnAccount: Remove privileges to configure deployment. None (default): Configure deployment without delegating privileges.
        /// </summary>
        [Input("deprovisionStrategy")]
        public Input<string>? DeprovisionStrategy { get; set; }

        /// <summary>
        /// Identity ID for the CAM user synchronization. Valid values:
        /// When the PrincipalType value is Group, it is the CIC user group ID (g-********).
        /// When the PrincipalType value is User, it is the CIC user ID (u-********).
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// Principal name.
        /// </summary>
        [Input("principalName")]
        public Input<string>? PrincipalName { get; set; }

        /// <summary>
        /// Identity type for the CAM user synchronization. Valid values:
        /// 
        /// User: indicates that the identity for the CAM user synchronization is a CIC user.
        /// Group: indicates that the identity for the CAM user synchronization is a CIC user group.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// Permission configuration ID.
        /// </summary>
        [Input("roleConfigurationId")]
        public Input<string>? RoleConfigurationId { get; set; }

        /// <summary>
        /// Role configuration name.
        /// </summary>
        [Input("roleConfigurationName")]
        public Input<string>? RoleConfigurationName { get; set; }

        /// <summary>
        /// Target name.
        /// </summary>
        [Input("targetName")]
        public Input<string>? TargetName { get; set; }

        /// <summary>
        /// Type of the synchronized target account of the Tencent Cloud Organization. ManagerUin: admin account; MemberUin: member account.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        /// <summary>
        /// UIN of the synchronized target account of the Tencent Cloud Organization.
        /// </summary>
        [Input("targetUin")]
        public Input<int>? TargetUin { get; set; }

        /// <summary>
        /// Update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Space ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public CenterRoleAssignmentState()
        {
        }
        public static new CenterRoleAssignmentState Empty => new CenterRoleAssignmentState();
    }
}
