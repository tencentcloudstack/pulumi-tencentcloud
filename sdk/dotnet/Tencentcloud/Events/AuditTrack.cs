// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Events
{
    /// <summary>
    /// Provides a resource to create events audit track
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Events.AuditTrack("example", new()
    ///     {
    ///         Filters = new Tencentcloud.Events.Inputs.AuditTrackFiltersArgs
    ///         {
    ///             ResourceFields = new[]
    ///             {
    ///                 new Tencentcloud.Events.Inputs.AuditTrackFiltersResourceFieldArgs
    ///                 {
    ///                     ActionType = "*",
    ///                     EventNames = new[]
    ///                     {
    ///                         "AddSubAccount",
    ///                         "AddSubAccountCheckingMFA",
    ///                     },
    ///                     ResourceType = "cam",
    ///                 },
    ///                 new Tencentcloud.Events.Inputs.AuditTrackFiltersResourceFieldArgs
    ///                 {
    ///                     ActionType = "*",
    ///                     EventNames = new[]
    ///                     {
    ///                         "*",
    ///                     },
    ///                     ResourceType = "cvm",
    ///                 },
    ///                 new Tencentcloud.Events.Inputs.AuditTrackFiltersResourceFieldArgs
    ///                 {
    ///                     ActionType = "*",
    ///                     EventNames = new[]
    ///                     {
    ///                         "*",
    ///                     },
    ///                     ResourceType = "tke",
    ///                 },
    ///             },
    ///         },
    ///         Status = 1,
    ///         Storage = new Tencentcloud.Events.Inputs.AuditTrackStorageArgs
    ///         {
    ///             StorageName = "393953ac-5c1b-457d-911d-376271b1b4f2",
    ///             StoragePrefix = "cloudaudit",
    ///             StorageRegion = "ap-guangzhou",
    ///             StorageType = "cls",
    ///         },
    ///         TrackForAllMembers = 0,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// events audit track can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Events/auditTrack:AuditTrack example 24283
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Events/auditTrack:AuditTrack")]
    public partial class AuditTrack : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Data filtering criteria.
        /// </summary>
        [Output("filters")]
        public Output<Outputs.AuditTrackFilters> Filters { get; private set; } = null!;

        /// <summary>
        /// Tracking set name, which can only contain 3-48 letters, digits, hyphens, and underscores.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Tracking set status (0: Not enabled; 1: Enabled).
        /// </summary>
        [Output("status")]
        public Output<int> Status { get; private set; } = null!;

        /// <summary>
        /// Storage type of shipped data. Valid values: `cos`, `cls`.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.AuditTrackStorage> Storage { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the feature of shipping organization members operation logs to the organization admin account or the trusted service admin account (0: Not enabled; 1: Enabled. This feature can only be enabled by the organization admin account or the trusted service admin account).
        /// </summary>
        [Output("trackForAllMembers")]
        public Output<int?> TrackForAllMembers { get; private set; } = null!;

        /// <summary>
        /// Whether the log list has come to an end. `true`: Yes. Pagination is not required.
        /// </summary>
        [Output("trackId")]
        public Output<int> TrackId { get; private set; } = null!;


        /// <summary>
        /// Create a AuditTrack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuditTrack(string name, AuditTrackArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Events/auditTrack:AuditTrack", name, args ?? new AuditTrackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuditTrack(string name, Input<string> id, AuditTrackState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Events/auditTrack:AuditTrack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuditTrack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuditTrack Get(string name, Input<string> id, AuditTrackState? state = null, CustomResourceOptions? options = null)
        {
            return new AuditTrack(name, id, state, options);
        }
    }

    public sealed class AuditTrackArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data filtering criteria.
        /// </summary>
        [Input("filters", required: true)]
        public Input<Inputs.AuditTrackFiltersArgs> Filters { get; set; } = null!;

        /// <summary>
        /// Tracking set name, which can only contain 3-48 letters, digits, hyphens, and underscores.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Tracking set status (0: Not enabled; 1: Enabled).
        /// </summary>
        [Input("status", required: true)]
        public Input<int> Status { get; set; } = null!;

        /// <summary>
        /// Storage type of shipped data. Valid values: `cos`, `cls`.
        /// </summary>
        [Input("storage", required: true)]
        public Input<Inputs.AuditTrackStorageArgs> Storage { get; set; } = null!;

        /// <summary>
        /// Whether to enable the feature of shipping organization members operation logs to the organization admin account or the trusted service admin account (0: Not enabled; 1: Enabled. This feature can only be enabled by the organization admin account or the trusted service admin account).
        /// </summary>
        [Input("trackForAllMembers")]
        public Input<int>? TrackForAllMembers { get; set; }

        public AuditTrackArgs()
        {
        }
        public static new AuditTrackArgs Empty => new AuditTrackArgs();
    }

    public sealed class AuditTrackState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data filtering criteria.
        /// </summary>
        [Input("filters")]
        public Input<Inputs.AuditTrackFiltersGetArgs>? Filters { get; set; }

        /// <summary>
        /// Tracking set name, which can only contain 3-48 letters, digits, hyphens, and underscores.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Tracking set status (0: Not enabled; 1: Enabled).
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// Storage type of shipped data. Valid values: `cos`, `cls`.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.AuditTrackStorageGetArgs>? Storage { get; set; }

        /// <summary>
        /// Whether to enable the feature of shipping organization members operation logs to the organization admin account or the trusted service admin account (0: Not enabled; 1: Enabled. This feature can only be enabled by the organization admin account or the trusted service admin account).
        /// </summary>
        [Input("trackForAllMembers")]
        public Input<int>? TrackForAllMembers { get; set; }

        /// <summary>
        /// Whether the log list has come to an end. `true`: Yes. Pagination is not required.
        /// </summary>
        [Input("trackId")]
        public Input<int>? TrackId { get; set; }

        public AuditTrackState()
        {
        }
        public static new AuditTrackState Empty => new AuditTrackState();
    }
}
