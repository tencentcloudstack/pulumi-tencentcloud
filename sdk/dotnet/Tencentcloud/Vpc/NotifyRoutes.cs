// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Vpc
{
    /// <summary>
    /// Provides a resource to create a vpc notify_routes
    /// 
    /// ## Import
    /// 
    /// vpc notify_routes can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Vpc/notifyRoutes:NotifyRoutes notify_routes route_table_id#route_item_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Vpc/notifyRoutes:NotifyRoutes")]
    public partial class NotifyRoutes : global::Pulumi.CustomResource
    {
        /// <summary>
        /// If published to vbc.
        /// </summary>
        [Output("publishedToVbc")]
        public Output<bool> PublishedToVbc { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the routing policy.
        /// </summary>
        [Output("routeItemIds")]
        public Output<string> RouteItemIds { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the routing table.
        /// </summary>
        [Output("routeTableId")]
        public Output<string> RouteTableId { get; private set; } = null!;


        /// <summary>
        /// Create a NotifyRoutes resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotifyRoutes(string name, NotifyRoutesArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpc/notifyRoutes:NotifyRoutes", name, args ?? new NotifyRoutesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotifyRoutes(string name, Input<string> id, NotifyRoutesState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpc/notifyRoutes:NotifyRoutes", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotifyRoutes resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotifyRoutes Get(string name, Input<string> id, NotifyRoutesState? state = null, CustomResourceOptions? options = null)
        {
            return new NotifyRoutes(name, id, state, options);
        }
    }

    public sealed class NotifyRoutesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique ID of the routing policy.
        /// </summary>
        [Input("routeItemIds", required: true)]
        public Input<string> RouteItemIds { get; set; } = null!;

        /// <summary>
        /// The unique ID of the routing table.
        /// </summary>
        [Input("routeTableId", required: true)]
        public Input<string> RouteTableId { get; set; } = null!;

        public NotifyRoutesArgs()
        {
        }
        public static new NotifyRoutesArgs Empty => new NotifyRoutesArgs();
    }

    public sealed class NotifyRoutesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If published to vbc.
        /// </summary>
        [Input("publishedToVbc")]
        public Input<bool>? PublishedToVbc { get; set; }

        /// <summary>
        /// The unique ID of the routing policy.
        /// </summary>
        [Input("routeItemIds")]
        public Input<string>? RouteItemIds { get; set; }

        /// <summary>
        /// The unique ID of the routing table.
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        public NotifyRoutesState()
        {
        }
        public static new NotifyRoutesState Empty => new NotifyRoutesState();
    }
}
