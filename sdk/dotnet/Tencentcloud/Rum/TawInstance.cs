// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Rum
{
    /// <summary>
    /// Provides a resource to create a rum taw_instance
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Rum.TawInstance("example", new()
    ///     {
    ///         AreaId = 1,
    ///         ChargeType = 1,
    ///         DataRetentionDays = 30,
    ///         InstanceDesc = "desc.",
    ///         InstanceName = "tf-example",
    ///         Tags = 
    ///         {
    ///             { "createdBy", "terraform" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// rum taw_instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Rum/tawInstance:TawInstance example rum-WYsjMaiGOVXBeJ
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Rum/tawInstance:TawInstance")]
    public partial class TawInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Region ID (at least greater than 0).
        /// </summary>
        [Output("areaId")]
        public Output<int> AreaId { get; private set; } = null!;

        /// <summary>
        /// Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
        /// </summary>
        [Output("chargeStatus")]
        public Output<int> ChargeStatus { get; private set; } = null!;

        /// <summary>
        /// Billing type (1: Pay-as-you-go).
        /// </summary>
        [Output("chargeType")]
        public Output<int> ChargeType { get; private set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<int> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Create time.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Data retention period (at least greater than 0).
        /// </summary>
        [Output("dataRetentionDays")]
        public Output<int> DataRetentionDays { get; private set; } = null!;

        /// <summary>
        /// Instance description (up to 1,024 bytes).
        /// </summary>
        [Output("instanceDesc")]
        public Output<string?> InstanceDesc { get; private set; } = null!;

        /// <summary>
        /// Instance name (up to 255 bytes).
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
        /// </summary>
        [Output("instanceStatus")]
        public Output<int> InstanceStatus { get; private set; } = null!;

        /// <summary>
        /// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Update time.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a TawInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TawInstance(string name, TawInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Rum/tawInstance:TawInstance", name, args ?? new TawInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TawInstance(string name, Input<string> id, TawInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Rum/tawInstance:TawInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TawInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TawInstance Get(string name, Input<string> id, TawInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new TawInstance(name, id, state, options);
        }
    }

    public sealed class TawInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Region ID (at least greater than 0).
        /// </summary>
        [Input("areaId", required: true)]
        public Input<int> AreaId { get; set; } = null!;

        /// <summary>
        /// Billing type (1: Pay-as-you-go).
        /// </summary>
        [Input("chargeType", required: true)]
        public Input<int> ChargeType { get; set; } = null!;

        /// <summary>
        /// Data retention period (at least greater than 0).
        /// </summary>
        [Input("dataRetentionDays", required: true)]
        public Input<int> DataRetentionDays { get; set; } = null!;

        /// <summary>
        /// Instance description (up to 1,024 bytes).
        /// </summary>
        [Input("instanceDesc")]
        public Input<string>? InstanceDesc { get; set; }

        /// <summary>
        /// Instance name (up to 255 bytes).
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public TawInstanceArgs()
        {
        }
        public static new TawInstanceArgs Empty => new TawInstanceArgs();
    }

    public sealed class TawInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Region ID (at least greater than 0).
        /// </summary>
        [Input("areaId")]
        public Input<int>? AreaId { get; set; }

        /// <summary>
        /// Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
        /// </summary>
        [Input("chargeStatus")]
        public Input<int>? ChargeStatus { get; set; }

        /// <summary>
        /// Billing type (1: Pay-as-you-go).
        /// </summary>
        [Input("chargeType")]
        public Input<int>? ChargeType { get; set; }

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<int>? ClusterId { get; set; }

        /// <summary>
        /// Create time.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Data retention period (at least greater than 0).
        /// </summary>
        [Input("dataRetentionDays")]
        public Input<int>? DataRetentionDays { get; set; }

        /// <summary>
        /// Instance description (up to 1,024 bytes).
        /// </summary>
        [Input("instanceDesc")]
        public Input<string>? InstanceDesc { get; set; }

        /// <summary>
        /// Instance name (up to 255 bytes).
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
        /// </summary>
        [Input("instanceStatus")]
        public Input<int>? InstanceStatus { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Update time.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public TawInstanceState()
        {
        }
        public static new TawInstanceState Empty => new TawInstanceState();
    }
}
