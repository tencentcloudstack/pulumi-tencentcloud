// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Instances.Outputs
{

    [OutputType]
    public sealed class GetInstanceInstanceListResult
    {
        /// <summary>
        /// Indicates whether public ip is assigned.
        /// </summary>
        public readonly bool AllocatePublicIp;
        /// <summary>
        /// The available zone that the CVM instance locates at.
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// CAM role name authorized to access.
        /// </summary>
        public readonly string CamRoleName;
        /// <summary>
        /// The number of CPU cores of the instance.
        /// </summary>
        public readonly int Cpu;
        /// <summary>
        /// Creation time of the instance.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// An information list of data disk. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceInstanceListDataDiskResult> DataDisks;
        /// <summary>
        /// Exclusive cluster id.
        /// </summary>
        public readonly string DedicatedClusterId;
        /// <summary>
        /// Expired time of the instance.
        /// </summary>
        public readonly string ExpiredTime;
        /// <summary>
        /// ID of the image.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The charge type of the instance.
        /// </summary>
        public readonly string InstanceChargeType;
        /// <summary>
        /// The way that CVM instance will be renew automatically or not when it reach the end of the prepaid tenancy.
        /// </summary>
        public readonly string InstanceChargeTypePrepaidRenewFlag;
        /// <summary>
        /// ID of the instances to be queried.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Name of the instances to be queried.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// Type of the instance.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The charge type of the instance.
        /// </summary>
        public readonly string InternetChargeType;
        /// <summary>
        /// Public network maximum output bandwidth of the instance.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// Instance memory capacity, unit in GB.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// Instance os name.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// Private IP of the instance.
        /// </summary>
        public readonly string PrivateIp;
        /// <summary>
        /// The project CVM belongs to.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Public IP of the instance.
        /// </summary>
        public readonly string PublicIp;
        /// <summary>
        /// Security groups of the instance.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;
        /// <summary>
        /// Status of the instance.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// ID of a vpc subnetwork.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Image ID of the system disk.
        /// </summary>
        public readonly string SystemDiskId;
        /// <summary>
        /// Size of the system disk.
        /// </summary>
        public readonly int SystemDiskSize;
        /// <summary>
        /// Type of the system disk.
        /// </summary>
        public readonly string SystemDiskType;
        /// <summary>
        /// Tags of the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// Globally unique ID of the instance.
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// ID of the vpc to be queried.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetInstanceInstanceListResult(
            bool allocatePublicIp,

            string availabilityZone,

            string camRoleName,

            int cpu,

            string createTime,

            ImmutableArray<Outputs.GetInstanceInstanceListDataDiskResult> dataDisks,

            string dedicatedClusterId,

            string expiredTime,

            string imageId,

            string instanceChargeType,

            string instanceChargeTypePrepaidRenewFlag,

            string instanceId,

            string instanceName,

            string instanceType,

            string internetChargeType,

            int internetMaxBandwidthOut,

            int memory,

            string osName,

            string privateIp,

            int projectId,

            string publicIp,

            ImmutableArray<string> securityGroups,

            string status,

            string subnetId,

            string systemDiskId,

            int systemDiskSize,

            string systemDiskType,

            ImmutableDictionary<string, object> tags,

            string uuid,

            string vpcId)
        {
            AllocatePublicIp = allocatePublicIp;
            AvailabilityZone = availabilityZone;
            CamRoleName = camRoleName;
            Cpu = cpu;
            CreateTime = createTime;
            DataDisks = dataDisks;
            DedicatedClusterId = dedicatedClusterId;
            ExpiredTime = expiredTime;
            ImageId = imageId;
            InstanceChargeType = instanceChargeType;
            InstanceChargeTypePrepaidRenewFlag = instanceChargeTypePrepaidRenewFlag;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceType = instanceType;
            InternetChargeType = internetChargeType;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            Memory = memory;
            OsName = osName;
            PrivateIp = privateIp;
            ProjectId = projectId;
            PublicIp = publicIp;
            SecurityGroups = securityGroups;
            Status = status;
            SubnetId = subnetId;
            SystemDiskId = systemDiskId;
            SystemDiskSize = systemDiskSize;
            SystemDiskType = systemDiskType;
            Tags = tags;
            Uuid = uuid;
            VpcId = vpcId;
        }
    }
}
