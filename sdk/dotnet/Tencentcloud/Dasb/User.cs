// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Dasb
{
    /// <summary>
    /// Provides a resource to create a dasb user
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Dasb.User("example", new()
    ///     {
    ///         AuthType = 0,
    ///         DepartmentId = "1.2",
    ///         Email = "demo@tencent.com",
    ///         Phone = "+86|18345678782",
    ///         RealName = "terraform",
    ///         UserName = "tf_example",
    ///         ValidateFrom = "2023-09-22T02:00:00+08:00",
    ///         ValidateTo = "2023-09-23T03:00:00+08:00",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// dasb user can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Dasb/user:User example 134
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Dasb/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Authentication method, 0 - local, 1 - LDAP, 2 - OAuth. If not passed, the default is 0.
        /// </summary>
        [Output("authType")]
        public Output<int?> AuthType { get; private set; } = null!;

        /// <summary>
        /// Department ID, such as: 1.2.3.
        /// </summary>
        [Output("departmentId")]
        public Output<string?> DepartmentId { get; private set; } = null!;

        /// <summary>
        /// Email. Please provide at least one of `phone` or `email`.
        /// </summary>
        [Output("email")]
        public Output<string?> Email { get; private set; } = null!;

        /// <summary>
        /// The set of user group IDs to which it belongs.
        /// </summary>
        [Output("groupIdSets")]
        public Output<ImmutableArray<int>> GroupIdSets { get; private set; } = null!;

        /// <summary>
        /// Enter it in the format of country area code|mobile phone number. For example: +86|***********, +852|xxxxxxxx. Please provide at least one of `phone` or `email`.
        /// </summary>
        [Output("phone")]
        public Output<string?> Phone { get; private set; } = null!;

        /// <summary>
        /// Real name, maximum length 20 characters, cannot contain blank characters.
        /// </summary>
        [Output("realName")]
        public Output<string> RealName { get; private set; } = null!;

        /// <summary>
        /// Username, 3-20 characters, must start with an English letter and cannot contain characters other than letters, numbers, '.', '_', '-'.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        /// <summary>
        /// User effective time, such as: 2021-09-22T00:00:00+00:00If the effective and expiry time are not filled in, the user will be valid for a long time.
        /// </summary>
        [Output("validateFrom")]
        public Output<string> ValidateFrom { get; private set; } = null!;

        /// <summary>
        /// Access time period limit, a string composed of 0 and 1, length 168 (7 * 24), representing the time period the user is allowed to access in a week. The Nth character in the string represents the Nth hour of the week, 0 - means access is not allowed, 1 - means access is allowed.
        /// </summary>
        [Output("validateTime")]
        public Output<string?> ValidateTime { get; private set; } = null!;

        /// <summary>
        /// User expiration time, such as: 2021-09-23T00:00:00+00:00If the effective and expiry time are not filled in, the user will be valid for a long time.
        /// </summary>
        [Output("validateTo")]
        public Output<string> ValidateTo { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dasb/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dasb/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication method, 0 - local, 1 - LDAP, 2 - OAuth. If not passed, the default is 0.
        /// </summary>
        [Input("authType")]
        public Input<int>? AuthType { get; set; }

        /// <summary>
        /// Department ID, such as: 1.2.3.
        /// </summary>
        [Input("departmentId")]
        public Input<string>? DepartmentId { get; set; }

        /// <summary>
        /// Email. Please provide at least one of `phone` or `email`.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("groupIdSets")]
        private InputList<int>? _groupIdSets;

        /// <summary>
        /// The set of user group IDs to which it belongs.
        /// </summary>
        public InputList<int> GroupIdSets
        {
            get => _groupIdSets ?? (_groupIdSets = new InputList<int>());
            set => _groupIdSets = value;
        }

        /// <summary>
        /// Enter it in the format of country area code|mobile phone number. For example: +86|***********, +852|xxxxxxxx. Please provide at least one of `phone` or `email`.
        /// </summary>
        [Input("phone")]
        public Input<string>? Phone { get; set; }

        /// <summary>
        /// Real name, maximum length 20 characters, cannot contain blank characters.
        /// </summary>
        [Input("realName", required: true)]
        public Input<string> RealName { get; set; } = null!;

        /// <summary>
        /// Username, 3-20 characters, must start with an English letter and cannot contain characters other than letters, numbers, '.', '_', '-'.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        /// <summary>
        /// User effective time, such as: 2021-09-22T00:00:00+00:00If the effective and expiry time are not filled in, the user will be valid for a long time.
        /// </summary>
        [Input("validateFrom")]
        public Input<string>? ValidateFrom { get; set; }

        /// <summary>
        /// Access time period limit, a string composed of 0 and 1, length 168 (7 * 24), representing the time period the user is allowed to access in a week. The Nth character in the string represents the Nth hour of the week, 0 - means access is not allowed, 1 - means access is allowed.
        /// </summary>
        [Input("validateTime")]
        public Input<string>? ValidateTime { get; set; }

        /// <summary>
        /// User expiration time, such as: 2021-09-23T00:00:00+00:00If the effective and expiry time are not filled in, the user will be valid for a long time.
        /// </summary>
        [Input("validateTo")]
        public Input<string>? ValidateTo { get; set; }

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication method, 0 - local, 1 - LDAP, 2 - OAuth. If not passed, the default is 0.
        /// </summary>
        [Input("authType")]
        public Input<int>? AuthType { get; set; }

        /// <summary>
        /// Department ID, such as: 1.2.3.
        /// </summary>
        [Input("departmentId")]
        public Input<string>? DepartmentId { get; set; }

        /// <summary>
        /// Email. Please provide at least one of `phone` or `email`.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("groupIdSets")]
        private InputList<int>? _groupIdSets;

        /// <summary>
        /// The set of user group IDs to which it belongs.
        /// </summary>
        public InputList<int> GroupIdSets
        {
            get => _groupIdSets ?? (_groupIdSets = new InputList<int>());
            set => _groupIdSets = value;
        }

        /// <summary>
        /// Enter it in the format of country area code|mobile phone number. For example: +86|***********, +852|xxxxxxxx. Please provide at least one of `phone` or `email`.
        /// </summary>
        [Input("phone")]
        public Input<string>? Phone { get; set; }

        /// <summary>
        /// Real name, maximum length 20 characters, cannot contain blank characters.
        /// </summary>
        [Input("realName")]
        public Input<string>? RealName { get; set; }

        /// <summary>
        /// Username, 3-20 characters, must start with an English letter and cannot contain characters other than letters, numbers, '.', '_', '-'.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        /// <summary>
        /// User effective time, such as: 2021-09-22T00:00:00+00:00If the effective and expiry time are not filled in, the user will be valid for a long time.
        /// </summary>
        [Input("validateFrom")]
        public Input<string>? ValidateFrom { get; set; }

        /// <summary>
        /// Access time period limit, a string composed of 0 and 1, length 168 (7 * 24), representing the time period the user is allowed to access in a week. The Nth character in the string represents the Nth hour of the week, 0 - means access is not allowed, 1 - means access is allowed.
        /// </summary>
        [Input("validateTime")]
        public Input<string>? ValidateTime { get; set; }

        /// <summary>
        /// User expiration time, such as: 2021-09-23T00:00:00+00:00If the effective and expiry time are not filled in, the user will be valid for a long time.
        /// </summary>
        [Input("validateTo")]
        public Input<string>? ValidateTo { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
