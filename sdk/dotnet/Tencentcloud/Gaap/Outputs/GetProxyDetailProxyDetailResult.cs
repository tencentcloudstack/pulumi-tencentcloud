// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap.Outputs
{

    [OutputType]
    public sealed class GetProxyDetailProxyDetailResult
    {
        /// <summary>
        /// Access Region.
        /// </summary>
        public readonly string AccessRegion;
        /// <summary>
        /// Detailed information about the access region, including the region ID and domain name.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyDetailProxyDetailAccessRegionInfoResult> AccessRegionInfos;
        /// <summary>
        /// Blocking and Unblocking Status: BANNED indicates that the ban has been lifted, RECOVER indicates that the ban has been lifted or not, BANNING indicates that the ban is in progress, RECOVERING indicates that the ban is being lifted, BAN_FAILED indicates that the ban has failed, RECOVER_FAILED indicates that the unblocking has failed.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string BanStatus;
        /// <summary>
        /// Band width.
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// Billing type: 0 represents bandwidth based billing, and 1 represents traffic based billing.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int BillingType;
        /// <summary>
        /// The method of obtaining client IP through proxys, where 0 represents TOA and 1 represents Proxy ProtocolNote: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<int> ClientIpMethods;
        /// <summary>
        /// Concurrent, in 10000 pieces/second.
        /// </summary>
        public readonly int Concurrent;
        /// <summary>
        /// The creation time, using a Unix timestamp, represents the number of seconds that have passed since January 1, 1970 (midnight UTC/GMT).
        /// </summary>
        public readonly int CreateTime;
        /// <summary>
        /// Domain.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Property bitmap, where each bit represents a property, where:0 indicates that the feature is not supported;1, indicates support for this feature.The meaning of the feature bitmap is as follows (from right to left):The first bit supports 4-layer acceleration;The second bit supports 7-layer acceleration;The third bit supports Http3 access;The fourth bit supports IPv6;The fifth bit supports high-quality BGP access;The 6th bit supports three network access;The 7th bit supports QoS acceleration in the access segment.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int FeatureBitmap;
        /// <summary>
        /// proxy forwarding IP.
        /// </summary>
        public readonly string ForwardIp;
        /// <summary>
        /// proxy group ID, which exists when a proxy belongs to a certain proxy group.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// Identification that supports the Http3 protocol, where:0 indicates shutdown;1 indicates enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int Http3Supported;
        /// <summary>
        /// Is it on the banned blacklist? 0 indicates not on the blacklist, and 1 indicates on the blacklist.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int InBanBlacklist;
        /// <summary>
        /// (Old parameter, please use ProxyId) Proxy instance ID.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// IP.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// IP version: IPv4, IPv6Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string IpAddressVersion;
        /// <summary>
        /// IP ListNote: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyDetailProxyDetailIpListResult> IpLists;
        /// <summary>
        /// Whether to allow TLS configuration.0-no support, 1-expressed support.
        /// </summary>
        public readonly int IsSupportTlsChoice;
        /// <summary>
        /// Configuration change timeNote: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int ModifyConfigTime;
        /// <summary>
        /// A list of network types supported by the access area, with normal indicating support for regular BGP, cn2 indicating premium BGP, triple indicating three networks, and secure_EIP represents a custom secure EIP.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// proxy package type: Thunder represents standard proxy, Accelerator represents silver acceleration proxy,CrossBorder represents a cross-border proxy.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string PackageType;
        /// <summary>
        /// Security policy ID, which exists when a security policy is set.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// Project Id.
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Proxy Id.
        /// </summary>
        public readonly string ProxyId;
        /// <summary>
        /// Proxy Name.
        /// </summary>
        public readonly string ProxyName;
        /// <summary>
        /// proxy type, 100 represents THUNDER proxy, 103 represents Microsoft cooperation proxyNote: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int ProxyType;
        /// <summary>
        /// Real Server Region.
        /// </summary>
        public readonly string RealServerRegion;
        /// <summary>
        /// Detailed information of the real server region, including the region ID and domain name.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyDetailProxyDetailRealServerRegionInfoResult> RealServerRegionInfos;
        /// <summary>
        /// List of domain names associated with resolutionNote: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<string> RelatedGlobalDomains;
        /// <summary>
        /// 1. This proxy can be scaled and expanded; 0, this proxy cannot be scaled or expanded.
        /// </summary>
        public readonly int Scalarable;
        /// <summary>
        /// proxy status. Among them:RUNNING indicates running;CREATING indicates being created;DESTROYING indicates being destroyed;OPENING indicates being opened;CLOSING indicates being closed;Closed indicates that it has been closed;ADJUSTING represents a configuration change in progress;ISOLATING indicates being isolated;ISOLATED indicates that it has been isolated;CLONING indicates copying;RECOVERING indicates that the proxy is being maintained;MOVING indicates that migration is in progress.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Supported protocol types.
        /// </summary>
        public readonly ImmutableArray<string> SupportProtocols;
        /// <summary>
        /// Does it support security group configurationNote: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly int SupportSecurity;
        /// <summary>
        /// tag list, when there are no labels, this field is an empty list.Note: This field may return null, indicating that a valid value cannot be obtained.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyDetailProxyDetailTagSetResult> TagSets;
        /// <summary>
        /// Version 1.0, 2.0, 3.0.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetProxyDetailProxyDetailResult(
            string accessRegion,

            ImmutableArray<Outputs.GetProxyDetailProxyDetailAccessRegionInfoResult> accessRegionInfos,

            string banStatus,

            int bandwidth,

            int billingType,

            ImmutableArray<int> clientIpMethods,

            int concurrent,

            int createTime,

            string domain,

            int featureBitmap,

            string forwardIp,

            string groupId,

            int http3Supported,

            int inBanBlacklist,

            string instanceId,

            string ip,

            string ipAddressVersion,

            ImmutableArray<Outputs.GetProxyDetailProxyDetailIpListResult> ipLists,

            int isSupportTlsChoice,

            int modifyConfigTime,

            string networkType,

            string packageType,

            string policyId,

            int projectId,

            string proxyId,

            string proxyName,

            int proxyType,

            string realServerRegion,

            ImmutableArray<Outputs.GetProxyDetailProxyDetailRealServerRegionInfoResult> realServerRegionInfos,

            ImmutableArray<string> relatedGlobalDomains,

            int scalarable,

            string status,

            ImmutableArray<string> supportProtocols,

            int supportSecurity,

            ImmutableArray<Outputs.GetProxyDetailProxyDetailTagSetResult> tagSets,

            string version)
        {
            AccessRegion = accessRegion;
            AccessRegionInfos = accessRegionInfos;
            BanStatus = banStatus;
            Bandwidth = bandwidth;
            BillingType = billingType;
            ClientIpMethods = clientIpMethods;
            Concurrent = concurrent;
            CreateTime = createTime;
            Domain = domain;
            FeatureBitmap = featureBitmap;
            ForwardIp = forwardIp;
            GroupId = groupId;
            Http3Supported = http3Supported;
            InBanBlacklist = inBanBlacklist;
            InstanceId = instanceId;
            Ip = ip;
            IpAddressVersion = ipAddressVersion;
            IpLists = ipLists;
            IsSupportTlsChoice = isSupportTlsChoice;
            ModifyConfigTime = modifyConfigTime;
            NetworkType = networkType;
            PackageType = packageType;
            PolicyId = policyId;
            ProjectId = projectId;
            ProxyId = proxyId;
            ProxyName = proxyName;
            ProxyType = proxyType;
            RealServerRegion = realServerRegion;
            RealServerRegionInfos = realServerRegionInfos;
            RelatedGlobalDomains = relatedGlobalDomains;
            Scalarable = scalarable;
            Status = status;
            SupportProtocols = supportProtocols;
            SupportSecurity = supportSecurity;
            TagSets = tagSets;
            Version = version;
        }
    }
}
