// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    /// <summary>
    /// Provides a resource to create a forward domain of layer7 listener.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooProxy = new Tencentcloud.Gaap.Proxy("fooProxy", new()
    ///     {
    ///         Bandwidth = 10,
    ///         Concurrent = 2,
    ///         AccessRegion = "SouthChina",
    ///         RealserverRegion = "NorthChina",
    ///     });
    /// 
    ///     var fooLayer7Listener = new Tencentcloud.Gaap.Layer7Listener("fooLayer7Listener", new()
    ///     {
    ///         Protocol = "HTTP",
    ///         Port = 80,
    ///         ProxyId = fooProxy.Id,
    ///     });
    /// 
    ///     var fooHttpDomain = new Tencentcloud.Gaap.HttpDomain("fooHttpDomain", new()
    ///     {
    ///         ListenerId = fooLayer7Listener.Id,
    ///         Domain = "www.qq.com",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// GAAP http domain can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Gaap/httpDomain:HttpDomain tencentcloud_gaap_http_domain.foo listener-11112222+HTTP+www.qq.com
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Gaap/httpDomain:HttpDomain")]
    public partial class HttpDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether basic authentication is enable, default value is `false`.
        /// </summary>
        [Output("basicAuth")]
        public Output<bool?> BasicAuth { get; private set; } = null!;

        /// <summary>
        /// ID of the basic authentication.
        /// </summary>
        [Output("basicAuthId")]
        public Output<string> BasicAuthId { get; private set; } = null!;

        /// <summary>
        /// ID of the server certificate, default value is `default`.
        /// </summary>
        [Output("certificateId")]
        public Output<string?> CertificateId { get; private set; } = null!;

        /// <summary>
        /// It has been deprecated from version 1.26.0. Set `client_certificate_ids` instead. ID of the client certificate, default value is `default`.
        /// </summary>
        [Output("clientCertificateId")]
        public Output<string> ClientCertificateId { get; private set; } = null!;

        /// <summary>
        /// ID list of the poly client certificate.
        /// </summary>
        [Output("clientCertificateIds")]
        public Output<ImmutableArray<string>> ClientCertificateIds { get; private set; } = null!;

        /// <summary>
        /// Forward domain of the layer7 listener.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Indicates whether SSL certificate authentication is enable, default value is `false`.
        /// </summary>
        [Output("gaapAuth")]
        public Output<bool?> GaapAuth { get; private set; } = null!;

        /// <summary>
        /// ID of the SSL certificate.
        /// </summary>
        [Output("gaapAuthId")]
        public Output<string> GaapAuthId { get; private set; } = null!;

        /// <summary>
        /// Group Id.
        /// </summary>
        [Output("groupId")]
        public Output<string?> GroupId { get; private set; } = null!;

        /// <summary>
        /// Whether to use as the default domain name, the default is false.
        /// </summary>
        [Output("isDefaultServer")]
        public Output<bool?> IsDefaultServer { get; private set; } = null!;

        /// <summary>
        /// ID of the layer7 listener.
        /// </summary>
        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;

        /// <summary>
        /// Indicates whether realserver authentication is enable, default value is `false`.
        /// </summary>
        [Output("realserverAuth")]
        public Output<bool?> RealserverAuth { get; private set; } = null!;

        /// <summary>
        /// CA certificate domain of the realserver. It has been deprecated.
        /// </summary>
        [Output("realserverCertificateDomain")]
        public Output<string> RealserverCertificateDomain { get; private set; } = null!;

        /// <summary>
        /// It has been deprecated from version 1.28.0. Set `realserver_certificate_ids` instead. CA certificate ID of the realserver.
        /// </summary>
        [Output("realserverCertificateId")]
        public Output<string> RealserverCertificateId { get; private set; } = null!;

        /// <summary>
        /// CA certificate ID list of the realserver.
        /// </summary>
        [Output("realserverCertificateIds")]
        public Output<ImmutableArray<string>> RealserverCertificateIds { get; private set; } = null!;


        /// <summary>
        /// Create a HttpDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HttpDomain(string name, HttpDomainArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Gaap/httpDomain:HttpDomain", name, args ?? new HttpDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HttpDomain(string name, Input<string> id, HttpDomainState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Gaap/httpDomain:HttpDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HttpDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HttpDomain Get(string name, Input<string> id, HttpDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new HttpDomain(name, id, state, options);
        }
    }

    public sealed class HttpDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether basic authentication is enable, default value is `false`.
        /// </summary>
        [Input("basicAuth")]
        public Input<bool>? BasicAuth { get; set; }

        /// <summary>
        /// ID of the basic authentication.
        /// </summary>
        [Input("basicAuthId")]
        public Input<string>? BasicAuthId { get; set; }

        /// <summary>
        /// ID of the server certificate, default value is `default`.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// It has been deprecated from version 1.26.0. Set `client_certificate_ids` instead. ID of the client certificate, default value is `default`.
        /// </summary>
        [Input("clientCertificateId")]
        public Input<string>? ClientCertificateId { get; set; }

        [Input("clientCertificateIds")]
        private InputList<string>? _clientCertificateIds;

        /// <summary>
        /// ID list of the poly client certificate.
        /// </summary>
        public InputList<string> ClientCertificateIds
        {
            get => _clientCertificateIds ?? (_clientCertificateIds = new InputList<string>());
            set => _clientCertificateIds = value;
        }

        /// <summary>
        /// Forward domain of the layer7 listener.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Indicates whether SSL certificate authentication is enable, default value is `false`.
        /// </summary>
        [Input("gaapAuth")]
        public Input<bool>? GaapAuth { get; set; }

        /// <summary>
        /// ID of the SSL certificate.
        /// </summary>
        [Input("gaapAuthId")]
        public Input<string>? GaapAuthId { get; set; }

        /// <summary>
        /// Group Id.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Whether to use as the default domain name, the default is false.
        /// </summary>
        [Input("isDefaultServer")]
        public Input<bool>? IsDefaultServer { get; set; }

        /// <summary>
        /// ID of the layer7 listener.
        /// </summary>
        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        /// <summary>
        /// Indicates whether realserver authentication is enable, default value is `false`.
        /// </summary>
        [Input("realserverAuth")]
        public Input<bool>? RealserverAuth { get; set; }

        /// <summary>
        /// CA certificate domain of the realserver. It has been deprecated.
        /// </summary>
        [Input("realserverCertificateDomain")]
        public Input<string>? RealserverCertificateDomain { get; set; }

        /// <summary>
        /// It has been deprecated from version 1.28.0. Set `realserver_certificate_ids` instead. CA certificate ID of the realserver.
        /// </summary>
        [Input("realserverCertificateId")]
        public Input<string>? RealserverCertificateId { get; set; }

        [Input("realserverCertificateIds")]
        private InputList<string>? _realserverCertificateIds;

        /// <summary>
        /// CA certificate ID list of the realserver.
        /// </summary>
        public InputList<string> RealserverCertificateIds
        {
            get => _realserverCertificateIds ?? (_realserverCertificateIds = new InputList<string>());
            set => _realserverCertificateIds = value;
        }

        public HttpDomainArgs()
        {
        }
        public static new HttpDomainArgs Empty => new HttpDomainArgs();
    }

    public sealed class HttpDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether basic authentication is enable, default value is `false`.
        /// </summary>
        [Input("basicAuth")]
        public Input<bool>? BasicAuth { get; set; }

        /// <summary>
        /// ID of the basic authentication.
        /// </summary>
        [Input("basicAuthId")]
        public Input<string>? BasicAuthId { get; set; }

        /// <summary>
        /// ID of the server certificate, default value is `default`.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// It has been deprecated from version 1.26.0. Set `client_certificate_ids` instead. ID of the client certificate, default value is `default`.
        /// </summary>
        [Input("clientCertificateId")]
        public Input<string>? ClientCertificateId { get; set; }

        [Input("clientCertificateIds")]
        private InputList<string>? _clientCertificateIds;

        /// <summary>
        /// ID list of the poly client certificate.
        /// </summary>
        public InputList<string> ClientCertificateIds
        {
            get => _clientCertificateIds ?? (_clientCertificateIds = new InputList<string>());
            set => _clientCertificateIds = value;
        }

        /// <summary>
        /// Forward domain of the layer7 listener.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Indicates whether SSL certificate authentication is enable, default value is `false`.
        /// </summary>
        [Input("gaapAuth")]
        public Input<bool>? GaapAuth { get; set; }

        /// <summary>
        /// ID of the SSL certificate.
        /// </summary>
        [Input("gaapAuthId")]
        public Input<string>? GaapAuthId { get; set; }

        /// <summary>
        /// Group Id.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Whether to use as the default domain name, the default is false.
        /// </summary>
        [Input("isDefaultServer")]
        public Input<bool>? IsDefaultServer { get; set; }

        /// <summary>
        /// ID of the layer7 listener.
        /// </summary>
        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        /// <summary>
        /// Indicates whether realserver authentication is enable, default value is `false`.
        /// </summary>
        [Input("realserverAuth")]
        public Input<bool>? RealserverAuth { get; set; }

        /// <summary>
        /// CA certificate domain of the realserver. It has been deprecated.
        /// </summary>
        [Input("realserverCertificateDomain")]
        public Input<string>? RealserverCertificateDomain { get; set; }

        /// <summary>
        /// It has been deprecated from version 1.28.0. Set `realserver_certificate_ids` instead. CA certificate ID of the realserver.
        /// </summary>
        [Input("realserverCertificateId")]
        public Input<string>? RealserverCertificateId { get; set; }

        [Input("realserverCertificateIds")]
        private InputList<string>? _realserverCertificateIds;

        /// <summary>
        /// CA certificate ID list of the realserver.
        /// </summary>
        public InputList<string> RealserverCertificateIds
        {
            get => _realserverCertificateIds ?? (_realserverCertificateIds = new InputList<string>());
            set => _realserverCertificateIds = value;
        }

        public HttpDomainState()
        {
        }
        public static new HttpDomainState Empty => new HttpDomainState();
    }
}
