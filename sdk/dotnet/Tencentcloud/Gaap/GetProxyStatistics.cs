// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Gaap
{
    public static class GetProxyStatistics
    {
        /// <summary>
        /// Use this data source to query detailed information of gaap proxy statistics
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var proxyStatistics = Tencentcloud.Gaap.GetProxyStatistics.Invoke(new()
        ///     {
        ///         EndTime = "2024-05-20 23:59:59",
        ///         Granularity = 300,
        ///         MetricNames = new[]
        ///         {
        ///             "InBandwidth",
        ///             "OutBandwidth",
        ///             "InFlow",
        ///             "OutFlow",
        ///             "InPackets",
        ///             "OutPackets",
        ///             "Concurrent",
        ///             "HttpQPS",
        ///             "HttpsQPS",
        ///             "Latency",
        ///             "PacketLoss",
        ///         },
        ///         ProxyId = "link-m9t4yho9",
        ///         StartTime = "2024-05-20 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetProxyStatisticsResult> InvokeAsync(GetProxyStatisticsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProxyStatisticsResult>("tencentcloud:Gaap/getProxyStatistics:getProxyStatistics", args ?? new GetProxyStatisticsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of gaap proxy statistics
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Tencentcloud = Pulumi.Tencentcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var proxyStatistics = Tencentcloud.Gaap.GetProxyStatistics.Invoke(new()
        ///     {
        ///         EndTime = "2024-05-20 23:59:59",
        ///         Granularity = 300,
        ///         MetricNames = new[]
        ///         {
        ///             "InBandwidth",
        ///             "OutBandwidth",
        ///             "InFlow",
        ///             "OutFlow",
        ///             "InPackets",
        ///             "OutPackets",
        ///             "Concurrent",
        ///             "HttpQPS",
        ///             "HttpsQPS",
        ///             "Latency",
        ///             "PacketLoss",
        ///         },
        ///         ProxyId = "link-m9t4yho9",
        ///         StartTime = "2024-05-20 00:00:00",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetProxyStatisticsResult> Invoke(GetProxyStatisticsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProxyStatisticsResult>("tencentcloud:Gaap/getProxyStatistics:getProxyStatistics", args ?? new GetProxyStatisticsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProxyStatisticsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// End Time(2019-03-25 12:00:00).
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// Monitoring granularity, currently supporting 60 300 3600 86400, in seconds.When the time range does not exceed 3 days, support a minimum granularity of 60 seconds;When the time range does not exceed 7 days, support a minimum granularity of 300 seconds;When the time range does not exceed 30 days, the minimum granularity supported is 3600 seconds.
        /// </summary>
        [Input("granularity", required: true)]
        public int Granularity { get; set; }

        /// <summary>
        /// Operator (valid when the proxy is a three network proxy), supports CMCC, CUCC, CTCC, and merges data from the three operators if null values are passed or not passed.
        /// </summary>
        [Input("isp")]
        public string? Isp { get; set; }

        [Input("metricNames", required: true)]
        private List<string>? _metricNames;

        /// <summary>
        /// Metric Names. Valid values: InBandwidth,OutBandwidth, Concurrent, InPackets, OutPackets, PacketLoss, Latency, HttpQPS, HttpsQPS, HttpQPSPercent, HttpsQPSPercent.
        /// </summary>
        public List<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new List<string>());
            set => _metricNames = value;
        }

        /// <summary>
        /// Proxy Id.
        /// </summary>
        [Input("proxyId", required: true)]
        public string ProxyId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        /// <summary>
        /// Start Time(2019-03-25 12:00:00).
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetProxyStatisticsArgs()
        {
        }
        public static new GetProxyStatisticsArgs Empty => new GetProxyStatisticsArgs();
    }

    public sealed class GetProxyStatisticsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// End Time(2019-03-25 12:00:00).
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// Monitoring granularity, currently supporting 60 300 3600 86400, in seconds.When the time range does not exceed 3 days, support a minimum granularity of 60 seconds;When the time range does not exceed 7 days, support a minimum granularity of 300 seconds;When the time range does not exceed 30 days, the minimum granularity supported is 3600 seconds.
        /// </summary>
        [Input("granularity", required: true)]
        public Input<int> Granularity { get; set; } = null!;

        /// <summary>
        /// Operator (valid when the proxy is a three network proxy), supports CMCC, CUCC, CTCC, and merges data from the three operators if null values are passed or not passed.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        [Input("metricNames", required: true)]
        private InputList<string>? _metricNames;

        /// <summary>
        /// Metric Names. Valid values: InBandwidth,OutBandwidth, Concurrent, InPackets, OutPackets, PacketLoss, Latency, HttpQPS, HttpsQPS, HttpQPSPercent, HttpsQPSPercent.
        /// </summary>
        public InputList<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new InputList<string>());
            set => _metricNames = value;
        }

        /// <summary>
        /// Proxy Id.
        /// </summary>
        [Input("proxyId", required: true)]
        public Input<string> ProxyId { get; set; } = null!;

        /// <summary>
        /// Used to save results.
        /// </summary>
        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        /// <summary>
        /// Start Time(2019-03-25 12:00:00).
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetProxyStatisticsInvokeArgs()
        {
        }
        public static new GetProxyStatisticsInvokeArgs Empty => new GetProxyStatisticsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProxyStatisticsResult
    {
        public readonly string EndTime;
        public readonly int Granularity;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Isp;
        public readonly ImmutableArray<string> MetricNames;
        public readonly string ProxyId;
        public readonly string? ResultOutputFile;
        public readonly string StartTime;
        /// <summary>
        /// proxy Statistics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyStatisticsStatisticsDataResult> StatisticsDatas;

        [OutputConstructor]
        private GetProxyStatisticsResult(
            string endTime,

            int granularity,

            string id,

            string? isp,

            ImmutableArray<string> metricNames,

            string proxyId,

            string? resultOutputFile,

            string startTime,

            ImmutableArray<Outputs.GetProxyStatisticsStatisticsDataResult> statisticsDatas)
        {
            EndTime = endTime;
            Granularity = granularity;
            Id = id;
            Isp = isp;
            MetricNames = metricNames;
            ProxyId = proxyId;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
            StatisticsDatas = statisticsDatas;
        }
    }
}
