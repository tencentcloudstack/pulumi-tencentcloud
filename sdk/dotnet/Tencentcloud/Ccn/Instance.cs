// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Ccn
{
    /// <summary>
    /// Provides a resource to create a CCN instance.
    /// 
    /// ## Example Usage
    /// 
    /// ### Create a prepaid CCN
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Ccn.Instance("example", new()
    ///     {
    ///         BandwidthLimitType = "INTER_REGION_LIMIT",
    ///         ChargeType = "PREPAID",
    ///         Description = "desc.",
    ///         Qos = "AG",
    ///         RouteEcmpFlag = true,
    ///         RouteOverlapFlag = true,
    ///         Tags = 
    ///         {
    ///             { "createBy", "terraform" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create a post-paid regional export speed limit type CCN
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Ccn.Instance("example", new()
    ///     {
    ///         BandwidthLimitType = "OUTER_REGION_LIMIT",
    ///         ChargeType = "POSTPAID",
    ///         Description = "desc.",
    ///         Qos = "AG",
    ///         RouteEcmpFlag = false,
    ///         RouteOverlapFlag = false,
    ///         Tags = 
    ///         {
    ///             { "createBy", "terraform" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Create a post-paid inter-regional rate limit type CNN
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Tencentcloud.Ccn.Instance("example", new()
    ///     {
    ///         BandwidthLimitType = "INTER_REGION_LIMIT",
    ///         ChargeType = "POSTPAID",
    ///         Description = "desc.",
    ///         Qos = "AG",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Ccn instance can be imported, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Ccn/instance:Instance example ccn-al70jo89
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Ccn/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The speed limit type. Valid values: `INTER_REGION_LIMIT`, `OUTER_REGION_LIMIT`. `OUTER_REGION_LIMIT` represents the regional export speed limit, `INTER_REGION_LIMIT` is the inter-regional speed limit. The default is `OUTER_REGION_LIMIT`.
        /// </summary>
        [Output("bandwidthLimitType")]
        public Output<string?> BandwidthLimitType { get; private set; } = null!;

        /// <summary>
        /// Billing mode. Valid values: `PREPAID`, `POSTPAID`. `PREPAID` means prepaid, which means annual and monthly subscription, `POSTPAID` means post-payment, which means billing by volume. The default is `POSTPAID`. The prepaid model only supports inter-regional speed limit, and the post-paid model supports inter-regional speed limit and regional export speed limit.
        /// </summary>
        [Output("chargeType")]
        public Output<string?> ChargeType { get; private set; } = null!;

        /// <summary>
        /// Creation time of resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description of CCN, and maximum length does not exceed 100 bytes.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Number of attached instances.
        /// </summary>
        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// Name of the CCN to be queried, and maximum length does not exceed 60 bytes.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Service quality of CCN. Valid values: `PT`, `AU`, `AG`. The default is `AU`.
        /// </summary>
        [Output("qos")]
        public Output<string?> Qos { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the equivalent routing function. `true`: enabled, `false`: disabled.
        /// </summary>
        [Output("routeEcmpFlag")]
        public Output<bool?> RouteEcmpFlag { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the routing overlap function. `true`: enabled, `false`: disabled.
        /// </summary>
        [Output("routeOverlapFlag")]
        public Output<bool?> RouteOverlapFlag { get; private set; } = null!;

        /// <summary>
        /// States of instance. Valid values: `ISOLATED`(arrears) and `AVAILABLE`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Instance tag.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs? args = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ccn/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ccn/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The speed limit type. Valid values: `INTER_REGION_LIMIT`, `OUTER_REGION_LIMIT`. `OUTER_REGION_LIMIT` represents the regional export speed limit, `INTER_REGION_LIMIT` is the inter-regional speed limit. The default is `OUTER_REGION_LIMIT`.
        /// </summary>
        [Input("bandwidthLimitType")]
        public Input<string>? BandwidthLimitType { get; set; }

        /// <summary>
        /// Billing mode. Valid values: `PREPAID`, `POSTPAID`. `PREPAID` means prepaid, which means annual and monthly subscription, `POSTPAID` means post-payment, which means billing by volume. The default is `POSTPAID`. The prepaid model only supports inter-regional speed limit, and the post-paid model supports inter-regional speed limit and regional export speed limit.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Description of CCN, and maximum length does not exceed 100 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the CCN to be queried, and maximum length does not exceed 60 bytes.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Service quality of CCN. Valid values: `PT`, `AU`, `AG`. The default is `AU`.
        /// </summary>
        [Input("qos")]
        public Input<string>? Qos { get; set; }

        /// <summary>
        /// Whether to enable the equivalent routing function. `true`: enabled, `false`: disabled.
        /// </summary>
        [Input("routeEcmpFlag")]
        public Input<bool>? RouteEcmpFlag { get; set; }

        /// <summary>
        /// Whether to enable the routing overlap function. `true`: enabled, `false`: disabled.
        /// </summary>
        [Input("routeOverlapFlag")]
        public Input<bool>? RouteOverlapFlag { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Instance tag.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The speed limit type. Valid values: `INTER_REGION_LIMIT`, `OUTER_REGION_LIMIT`. `OUTER_REGION_LIMIT` represents the regional export speed limit, `INTER_REGION_LIMIT` is the inter-regional speed limit. The default is `OUTER_REGION_LIMIT`.
        /// </summary>
        [Input("bandwidthLimitType")]
        public Input<string>? BandwidthLimitType { get; set; }

        /// <summary>
        /// Billing mode. Valid values: `PREPAID`, `POSTPAID`. `PREPAID` means prepaid, which means annual and monthly subscription, `POSTPAID` means post-payment, which means billing by volume. The default is `POSTPAID`. The prepaid model only supports inter-regional speed limit, and the post-paid model supports inter-regional speed limit and regional export speed limit.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Creation time of resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description of CCN, and maximum length does not exceed 100 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Number of attached instances.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Name of the CCN to be queried, and maximum length does not exceed 60 bytes.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Service quality of CCN. Valid values: `PT`, `AU`, `AG`. The default is `AU`.
        /// </summary>
        [Input("qos")]
        public Input<string>? Qos { get; set; }

        /// <summary>
        /// Whether to enable the equivalent routing function. `true`: enabled, `false`: disabled.
        /// </summary>
        [Input("routeEcmpFlag")]
        public Input<bool>? RouteEcmpFlag { get; set; }

        /// <summary>
        /// Whether to enable the routing overlap function. `true`: enabled, `false`: disabled.
        /// </summary>
        [Input("routeOverlapFlag")]
        public Input<bool>? RouteOverlapFlag { get; set; }

        /// <summary>
        /// States of instance. Valid values: `ISOLATED`(arrears) and `AVAILABLE`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Instance tag.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
