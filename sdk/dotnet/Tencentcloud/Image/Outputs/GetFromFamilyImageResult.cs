// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Image.Outputs
{

    [OutputType]
    public sealed class GetFromFamilyImageResult
    {
        /// <summary>
        /// Image architecture.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// Creation time of the image.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Image creator.
        /// </summary>
        public readonly string ImageCreator;
        /// <summary>
        /// If Image Deprecated.
        /// </summary>
        public readonly bool ImageDeprecated;
        /// <summary>
        /// Image description.
        /// </summary>
        public readonly string ImageDescription;
        /// <summary>
        /// Image family name.
        /// </summary>
        public readonly string ImageFamily;
        /// <summary>
        /// Image ID.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Image name.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// Image size.
        /// </summary>
        public readonly int ImageSize;
        /// <summary>
        /// Image source.
        /// </summary>
        public readonly string ImageSource;
        /// <summary>
        /// Image state.
        /// </summary>
        public readonly string ImageState;
        /// <summary>
        /// Image type.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// Whether the image supports cloud-init.
        /// </summary>
        public readonly bool IsSupportCloudinit;
        /// <summary>
        /// Image license type.
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// Operating system of the image.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// Source platform of the image.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// Information on the snapshots associated with the image.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFromFamilyImageSnapshotSetResult> SnapshotSets;
        /// <summary>
        /// Synchronization percentage.
        /// </summary>
        public readonly int SyncPercent;
        /// <summary>
        /// The list of tags bound to the image.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFromFamilyImageTagResult> Tags;

        [OutputConstructor]
        private GetFromFamilyImageResult(
            string architecture,

            string createdTime,

            string imageCreator,

            bool imageDeprecated,

            string imageDescription,

            string imageFamily,

            string imageId,

            string imageName,

            int imageSize,

            string imageSource,

            string imageState,

            string imageType,

            bool isSupportCloudinit,

            string licenseType,

            string osName,

            string platform,

            ImmutableArray<Outputs.GetFromFamilyImageSnapshotSetResult> snapshotSets,

            int syncPercent,

            ImmutableArray<Outputs.GetFromFamilyImageTagResult> tags)
        {
            Architecture = architecture;
            CreatedTime = createdTime;
            ImageCreator = imageCreator;
            ImageDeprecated = imageDeprecated;
            ImageDescription = imageDescription;
            ImageFamily = imageFamily;
            ImageId = imageId;
            ImageName = imageName;
            ImageSize = imageSize;
            ImageSource = imageSource;
            ImageState = imageState;
            ImageType = imageType;
            IsSupportCloudinit = isSupportCloudinit;
            LicenseType = licenseType;
            OsName = osName;
            Platform = platform;
            SnapshotSets = snapshotSets;
            SyncPercent = syncPercent;
            Tags = tags;
        }
    }
}
