// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Tdmq
{
    /// <summary>
    /// Provides a resource to create a tdmq rabbitmq_vip_instance
    /// 
    /// ## Import
    /// 
    /// tdmq rabbitmq_vip_instance can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import tencentcloud:Tdmq/rabbitmqVipInstance:RabbitmqVipInstance example amqp-mok52gmn
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Tdmq/rabbitmqVipInstance:RabbitmqVipInstance")]
    public partial class RabbitmqVipInstance : Pulumi.CustomResource
    {
        /// <summary>
        /// Automatic renewal, the default is true.
        /// </summary>
        [Output("autoRenewFlag")]
        public Output<bool?> AutoRenewFlag { get; private set; } = null!;

        /// <summary>
        /// cluster name.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Mirrored queue, the default is false.
        /// </summary>
        [Output("enableCreateDefaultHaMirrorQueue")]
        public Output<bool?> EnableCreateDefaultHaMirrorQueue { get; private set; } = null!;

        /// <summary>
        /// The number of nodes, a minimum of 3 nodes for a multi-availability zone. If not passed, the default single availability zone is 1, and the multi-availability zone is 3.
        /// </summary>
        [Output("nodeNum")]
        public Output<int?> NodeNum { get; private set; } = null!;

        /// <summary>
        /// Node specifications, basic type rabbit-vip-basic-1, standard type rabbit-vip-basic-2, high-level type 1 rabbit-vip-basic-3, high-level type 2 rabbit-vip-basic-4. If not passed, the default is the basic type.
        /// </summary>
        [Output("nodeSpec")]
        public Output<string?> NodeSpec { get; private set; } = null!;

        /// <summary>
        /// Single node storage specification, the default is 200G.
        /// </summary>
        [Output("storageSize")]
        public Output<int?> StorageSize { get; private set; } = null!;

        /// <summary>
        /// Private network SubnetId.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// Purchase duration, the default is 1 (month).
        /// </summary>
        [Output("timeSpan")]
        public Output<int?> TimeSpan { get; private set; } = null!;

        /// <summary>
        /// Private network VpcId.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// availability zone.
        /// </summary>
        [Output("zoneIds")]
        public Output<ImmutableArray<int>> ZoneIds { get; private set; } = null!;


        /// <summary>
        /// Create a RabbitmqVipInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RabbitmqVipInstance(string name, RabbitmqVipInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/rabbitmqVipInstance:RabbitmqVipInstance", name, args ?? new RabbitmqVipInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RabbitmqVipInstance(string name, Input<string> id, RabbitmqVipInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/rabbitmqVipInstance:RabbitmqVipInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RabbitmqVipInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RabbitmqVipInstance Get(string name, Input<string> id, RabbitmqVipInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new RabbitmqVipInstance(name, id, state, options);
        }
    }

    public sealed class RabbitmqVipInstanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatic renewal, the default is true.
        /// </summary>
        [Input("autoRenewFlag")]
        public Input<bool>? AutoRenewFlag { get; set; }

        /// <summary>
        /// cluster name.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Mirrored queue, the default is false.
        /// </summary>
        [Input("enableCreateDefaultHaMirrorQueue")]
        public Input<bool>? EnableCreateDefaultHaMirrorQueue { get; set; }

        /// <summary>
        /// The number of nodes, a minimum of 3 nodes for a multi-availability zone. If not passed, the default single availability zone is 1, and the multi-availability zone is 3.
        /// </summary>
        [Input("nodeNum")]
        public Input<int>? NodeNum { get; set; }

        /// <summary>
        /// Node specifications, basic type rabbit-vip-basic-1, standard type rabbit-vip-basic-2, high-level type 1 rabbit-vip-basic-3, high-level type 2 rabbit-vip-basic-4. If not passed, the default is the basic type.
        /// </summary>
        [Input("nodeSpec")]
        public Input<string>? NodeSpec { get; set; }

        /// <summary>
        /// Single node storage specification, the default is 200G.
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        /// <summary>
        /// Private network SubnetId.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// Purchase duration, the default is 1 (month).
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// Private network VpcId.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        [Input("zoneIds", required: true)]
        private InputList<int>? _zoneIds;

        /// <summary>
        /// availability zone.
        /// </summary>
        public InputList<int> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<int>());
            set => _zoneIds = value;
        }

        public RabbitmqVipInstanceArgs()
        {
        }
    }

    public sealed class RabbitmqVipInstanceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatic renewal, the default is true.
        /// </summary>
        [Input("autoRenewFlag")]
        public Input<bool>? AutoRenewFlag { get; set; }

        /// <summary>
        /// cluster name.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Mirrored queue, the default is false.
        /// </summary>
        [Input("enableCreateDefaultHaMirrorQueue")]
        public Input<bool>? EnableCreateDefaultHaMirrorQueue { get; set; }

        /// <summary>
        /// The number of nodes, a minimum of 3 nodes for a multi-availability zone. If not passed, the default single availability zone is 1, and the multi-availability zone is 3.
        /// </summary>
        [Input("nodeNum")]
        public Input<int>? NodeNum { get; set; }

        /// <summary>
        /// Node specifications, basic type rabbit-vip-basic-1, standard type rabbit-vip-basic-2, high-level type 1 rabbit-vip-basic-3, high-level type 2 rabbit-vip-basic-4. If not passed, the default is the basic type.
        /// </summary>
        [Input("nodeSpec")]
        public Input<string>? NodeSpec { get; set; }

        /// <summary>
        /// Single node storage specification, the default is 200G.
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        /// <summary>
        /// Private network SubnetId.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// Purchase duration, the default is 1 (month).
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// Private network VpcId.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("zoneIds")]
        private InputList<int>? _zoneIds;

        /// <summary>
        /// availability zone.
        /// </summary>
        public InputList<int> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<int>());
            set => _zoneIds = value;
        }

        public RabbitmqVipInstanceState()
        {
        }
    }
}
