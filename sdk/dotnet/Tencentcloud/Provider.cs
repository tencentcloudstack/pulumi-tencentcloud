// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud
{
    /// <summary>
    /// The provider type for the tencentcloud package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// </summary>
    [TencentcloudResourceType("pulumi:providers:tencentcloud")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        /// <summary>
        /// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
        /// </summary>
        [Output("camRoleName")]
        public Output<string?> CamRoleName { get; private set; } = null!;

        /// <summary>
        /// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
        /// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
        /// </summary>
        [Output("cosDomain")]
        public Output<string?> CosDomain { get; private set; } = null!;

        /// <summary>
        /// The root domain of the API request, Default is `tencentcloudapi.com`.
        /// </summary>
        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        /// <summary>
        /// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
        /// variable. If not set, the default profile created with `tccli configure` will be used.
        /// </summary>
        [Output("profile")]
        public Output<string?> Profile { get; private set; } = null!;

        /// <summary>
        /// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
        /// default input value is ap-guangzhou.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
        /// </summary>
        [Output("secretId")]
        public Output<string?> SecretId { get; private set; } = null!;

        /// <summary>
        /// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
        /// </summary>
        [Output("secretKey")]
        public Output<string?> SecretKey { get; private set; } = null!;

        /// <summary>
        /// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
        /// environment variable. Notice: for supported products, please refer to: [temporary key supported
        /// products](https://intl.cloud.tencent.com/document/product/598/10588).
        /// </summary>
        [Output("securityToken")]
        public Output<string?> SecurityToken { get; private set; } = null!;

        /// <summary>
        /// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
        /// environment variable. If not set this defaults to ~/.tccli.
        /// </summary>
        [Output("sharedCredentialsDir")]
        public Output<string?> SharedCredentialsDir { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("tencentcloud", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
                AdditionalSecretOutputs =
                {
                    "secretKey",
                    "securityToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The `assume_role` block. If provided, terraform will attempt to assume this role using the supplied credentials.
        /// </summary>
        [Input("assumeRole", json: true)]
        public Input<Inputs.ProviderAssumeRoleArgs>? AssumeRole { get; set; }

        /// <summary>
        /// The `assume_role_with_saml` block. If provided, terraform will attempt to assume this role using the supplied
        /// credentials.
        /// </summary>
        [Input("assumeRoleWithSaml", json: true)]
        public Input<Inputs.ProviderAssumeRoleWithSamlArgs>? AssumeRoleWithSaml { get; set; }

        /// <summary>
        /// The `assume_role_with_web_identity` block. If provided, terraform will attempt to assume this role using the supplied
        /// credentials.
        /// </summary>
        [Input("assumeRoleWithWebIdentity", json: true)]
        public Input<Inputs.ProviderAssumeRoleWithWebIdentityArgs>? AssumeRoleWithWebIdentity { get; set; }

        /// <summary>
        /// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
        /// </summary>
        [Input("camRoleName")]
        public Input<string>? CamRoleName { get; set; }

        /// <summary>
        /// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
        /// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
        /// </summary>
        [Input("cosDomain")]
        public Input<string>? CosDomain { get; set; }

        /// <summary>
        /// The root domain of the API request, Default is `tencentcloudapi.com`.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Whether to enable pod oidc.
        /// </summary>
        [Input("enablePodOidc", json: true)]
        public Input<bool>? EnablePodOidc { get; set; }

        /// <summary>
        /// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
        /// variable. If not set, the default profile created with `tccli configure` will be used.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
        /// default input value is ap-guangzhou.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
        /// </summary>
        [Input("secretId")]
        public Input<string>? SecretId { get; set; }

        [Input("secretKey")]
        private Input<string>? _secretKey;

        /// <summary>
        /// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("securityToken")]
        private Input<string>? _securityToken;

        /// <summary>
        /// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
        /// environment variable. Notice: for supported products, please refer to: [temporary key supported
        /// products](https://intl.cloud.tencent.com/document/product/598/10588).
        /// </summary>
        public Input<string>? SecurityToken
        {
            get => _securityToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _securityToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
        /// environment variable. If not set this defaults to ~/.tccli.
        /// </summary>
        [Input("sharedCredentialsDir")]
        public Input<string>? SharedCredentialsDir { get; set; }

        public ProviderArgs()
        {
            Region = Utilities.GetEnv("TENCENTCLOUD_REGION");
            SecretId = Utilities.GetEnv("TENCENTCLOUD_SECRET_ID");
            SecretKey = Utilities.GetEnv("TENCENTCLOUD_SECRET_KEY");
            SecurityToken = Utilities.GetEnv("TENCENTCLOUD_SECURITY_TOKEN");
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }
}
