// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Emr
{
    /// <summary>
    /// Provide a resource to create a emr cluster.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = Pulumi.Tencentcloud;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var availabilityZone = config.Get("availabilityZone") ?? "ap-guangzhou-3";
    ///     var cvm4c8m = Tencentcloud.Instance.GetTypes.Invoke(new()
    ///     {
    ///         ExcludeSoldOut = true,
    ///         CpuCoreCount = 4,
    ///         MemorySize = 8,
    ///         Filters = new[]
    ///         {
    ///             new Tencentcloud.Instance.Inputs.GetTypesFilterInputArgs
    ///             {
    ///                 Name = "instance-charge-type",
    ///                 Values = new[]
    ///                 {
    ///                     "POSTPAID_BY_HOUR",
    ///                 },
    ///             },
    ///             new Tencentcloud.Instance.Inputs.GetTypesFilterInputArgs
    ///             {
    ///                 Name = "zone",
    ///                 Values = new[]
    ///                 {
    ///                     availabilityZone,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var emrVpc = new Tencentcloud.Vpc.Instance("emrVpc", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/16",
    ///     });
    /// 
    ///     var emrSubnet = new Tencentcloud.Subnet.Instance("emrSubnet", new()
    ///     {
    ///         AvailabilityZone = availabilityZone,
    ///         VpcId = emrVpc.Id,
    ///         CidrBlock = "10.0.20.0/28",
    ///         IsMulticast = false,
    ///     });
    /// 
    ///     var emrSg = new Tencentcloud.Security.Group("emrSg", new()
    ///     {
    ///         Description = "emr sg",
    ///         ProjectId = 0,
    ///     });
    /// 
    ///     var emrCluster = new Tencentcloud.Emr.Cluster("emrCluster", new()
    ///     {
    ///         ProductId = 38,
    ///         VpcSettings = 
    ///         {
    ///             { "vpc_id", emrVpc.Id },
    ///             { "subnet_id", emrSubnet.Id },
    ///         },
    ///         Softwares = new[]
    ///         {
    ///             "hdfs-2.8.5",
    ///             "knox-1.6.1",
    ///             "openldap-2.4.44",
    ///             "yarn-2.8.5",
    ///             "zookeeper-3.6.3",
    ///         },
    ///         SupportHa = 0,
    ///         InstanceName = "emr-cluster-test",
    ///         ResourceSpec = new Tencentcloud.Emr.Inputs.ClusterResourceSpecArgs
    ///         {
    ///             MasterResourceSpec = new Tencentcloud.Emr.Inputs.ClusterResourceSpecMasterResourceSpecArgs
    ///             {
    ///                 MemSize = 8192,
    ///                 Cpu = 4,
    ///                 DiskSize = 100,
    ///                 DiskType = "CLOUD_PREMIUM",
    ///                 Spec = $"CVM.{cvm4c8m.Apply(getTypesResult =&gt; getTypesResult.InstanceTypes[0]?.Family)}",
    ///                 StorageType = 5,
    ///                 RootSize = 50,
    ///             },
    ///             CoreResourceSpec = new Tencentcloud.Emr.Inputs.ClusterResourceSpecCoreResourceSpecArgs
    ///             {
    ///                 MemSize = 8192,
    ///                 Cpu = 4,
    ///                 DiskSize = 100,
    ///                 DiskType = "CLOUD_PREMIUM",
    ///                 Spec = $"CVM.{cvm4c8m.Apply(getTypesResult =&gt; getTypesResult.InstanceTypes[0]?.Family)}",
    ///                 StorageType = 5,
    ///                 RootSize = 50,
    ///             },
    ///             MasterCount = 1,
    ///             CoreCount = 2,
    ///         },
    ///         LoginSettings = 
    ///         {
    ///             { "password", "Tencent@cloud123" },
    ///         },
    ///         TimeSpan = 3600,
    ///         TimeUnit = "s",
    ///         PayMode = 0,
    ///         PlacementInfo = new Tencentcloud.Emr.Inputs.ClusterPlacementInfoArgs
    ///         {
    ///             Zone = availabilityZone,
    ///             ProjectId = 0,
    ///         },
    ///         SgId = emrSg.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Emr/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 0 means turn off automatic renewal, 1 means turn on automatic renewal. Default is 0.
        /// </summary>
        [Output("autoRenew")]
        public Output<int> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// It will be deprecated in later versions. Display strategy of EMR instance.
        /// </summary>
        [Output("displayStrategy")]
        public Output<string?> DisplayStrategy { get; private set; } = null!;

        /// <summary>
        /// Access the external file system.
        /// </summary>
        [Output("extendFsField")]
        public Output<string?> ExtendFsField { get; private set; } = null!;

        /// <summary>
        /// Created EMR instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Name of the instance, which can contain 6 to 36 English letters, Chinese characters, digits, dashes(-), or underscores(_).
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Instance login settings. There are two optional fields:- password: Instance login password: 8-16 characters, including uppercase letters, lowercase letters, numbers and special characters. Special symbols only support! @% ^ *. The first bit of the password cannot be a special character;- public_key_id: Public key id. After the key is associated, the instance can be accessed through the corresponding private key.
        /// </summary>
        [Output("loginSettings")]
        public Output<ImmutableDictionary<string, object>?> LoginSettings { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the cluster Master node public network. Value range:
        /// - NEED_MASTER_WAN: Indicates that the cluster Master node public network is enabled.
        /// - NOT_NEED_MASTER_WAN: Indicates that it is not turned on.
        /// By default, the cluster Master node internet is enabled.
        /// </summary>
        [Output("needMasterWan")]
        public Output<string?> NeedMasterWan { get; private set; } = null!;

        /// <summary>
        /// The pay mode of instance. 0 represent POSTPAID_BY_HOUR, 1 represent PREPAID.
        /// </summary>
        [Output("payMode")]
        public Output<int> PayMode { get; private set; } = null!;

        /// <summary>
        /// It will be deprecated in later versions. Use `placement_info` instead. The location of the instance.
        /// </summary>
        [Output("placement")]
        public Output<ImmutableDictionary<string, object>> Placement { get; private set; } = null!;

        /// <summary>
        /// The location of the instance.
        /// </summary>
        [Output("placementInfo")]
        public Output<Outputs.ClusterPlacementInfo> PlacementInfo { get; private set; } = null!;

        /// <summary>
        /// Pre executed file settings. It can only be set at the time of creation, and cannot be modified.
        /// </summary>
        [Output("preExecutedFileSettings")]
        public Output<ImmutableArray<Outputs.ClusterPreExecutedFileSetting>> PreExecutedFileSettings { get; private set; } = null!;

        /// <summary>
        /// Product ID. Different products ID represents different EMR product versions. Value range:
        /// - 16: represents EMR-V2.3.0
        /// - 20: represents EMR-V2.5.0
        /// - 25: represents EMR-V3.1.0
        /// - 27: represents KAFKA-V1.0.0
        /// - 30: represents EMR-V2.6.0
        /// - 33: represents EMR-V3.2.1
        /// - 34: represents EMR-V3.3.0
        /// - 37: represents EMR-V3.4.0
        /// - 38: represents EMR-V2.7.0
        /// - 44: represents EMR-V3.5.0
        /// - 50: represents KAFKA-V2.0.0
        /// - 51: represents STARROCKS-V1.4.0
        /// - 53: represents EMR-V3.6.0
        /// - 54: represents STARROCKS-V2.0.0.
        /// </summary>
        [Output("productId")]
        public Output<int> ProductId { get; private set; } = null!;

        /// <summary>
        /// Resource specification of EMR instance.
        /// </summary>
        [Output("resourceSpec")]
        public Output<Outputs.ClusterResourceSpec?> ResourceSpec { get; private set; } = null!;

        /// <summary>
        /// The ID of the security group to which the instance belongs, in the form of sg-xxxxxxxx.
        /// </summary>
        [Output("sgId")]
        public Output<string?> SgId { get; private set; } = null!;

        /// <summary>
        /// The softwares of a EMR instance.
        /// </summary>
        [Output("softwares")]
        public Output<ImmutableArray<string>> Softwares { get; private set; } = null!;

        /// <summary>
        /// The flag whether the instance support high availability.(0=&gt;not support, 1=&gt;support).
        /// </summary>
        [Output("supportHa")]
        public Output<int> SupportHa { get; private set; } = null!;

        /// <summary>
        /// Tag description list.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;

        /// <summary>
        /// Terminate nodes. Note: it only works when the number of nodes decreases.
        /// </summary>
        [Output("terminateNodeInfos")]
        public Output<ImmutableArray<Outputs.ClusterTerminateNodeInfo>> TerminateNodeInfos { get; private set; } = null!;

        /// <summary>
        /// The length of time the instance was purchased. Use with TimeUnit.When TimeUnit is s, the parameter can only be filled in at 3600, representing a metered instance.
        /// When TimeUnit is m, the number filled in by this parameter indicates the length of purchase of the monthly instance of the package year, such as 1 for one month of purchase.
        /// </summary>
        [Output("timeSpan")]
        public Output<int?> TimeSpan { get; private set; } = null!;

        /// <summary>
        /// The unit of time in which the instance was purchased. When PayMode is 0, TimeUnit can only take values of s(second). When PayMode is 1, TimeUnit can only take the value m(month).
        /// </summary>
        [Output("timeUnit")]
        public Output<string?> TimeUnit { get; private set; } = null!;

        /// <summary>
        /// The private net config of EMR instance.
        /// </summary>
        [Output("vpcSettings")]
        public Output<ImmutableDictionary<string, object>> VpcSettings { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Emr/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Emr/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
                AdditionalSecretOutputs =
                {
                    "loginSettings",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 0 means turn off automatic renewal, 1 means turn on automatic renewal. Default is 0.
        /// </summary>
        [Input("autoRenew")]
        public Input<int>? AutoRenew { get; set; }

        /// <summary>
        /// It will be deprecated in later versions. Display strategy of EMR instance.
        /// </summary>
        [Input("displayStrategy")]
        public Input<string>? DisplayStrategy { get; set; }

        /// <summary>
        /// Access the external file system.
        /// </summary>
        [Input("extendFsField")]
        public Input<string>? ExtendFsField { get; set; }

        /// <summary>
        /// Name of the instance, which can contain 6 to 36 English letters, Chinese characters, digits, dashes(-), or underscores(_).
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        [Input("loginSettings")]
        private InputMap<object>? _loginSettings;

        /// <summary>
        /// Instance login settings. There are two optional fields:- password: Instance login password: 8-16 characters, including uppercase letters, lowercase letters, numbers and special characters. Special symbols only support! @% ^ *. The first bit of the password cannot be a special character;- public_key_id: Public key id. After the key is associated, the instance can be accessed through the corresponding private key.
        /// </summary>
        public InputMap<object> LoginSettings
        {
            get => _loginSettings ?? (_loginSettings = new InputMap<object>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, object>());
                _loginSettings = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Whether to enable the cluster Master node public network. Value range:
        /// - NEED_MASTER_WAN: Indicates that the cluster Master node public network is enabled.
        /// - NOT_NEED_MASTER_WAN: Indicates that it is not turned on.
        /// By default, the cluster Master node internet is enabled.
        /// </summary>
        [Input("needMasterWan")]
        public Input<string>? NeedMasterWan { get; set; }

        /// <summary>
        /// The pay mode of instance. 0 represent POSTPAID_BY_HOUR, 1 represent PREPAID.
        /// </summary>
        [Input("payMode", required: true)]
        public Input<int> PayMode { get; set; } = null!;

        [Input("placement")]
        private InputMap<object>? _placement;

        /// <summary>
        /// It will be deprecated in later versions. Use `placement_info` instead. The location of the instance.
        /// </summary>
        [Obsolete(@"It will be deprecated in later versions. Use `placement_info` instead.")]
        public InputMap<object> Placement
        {
            get => _placement ?? (_placement = new InputMap<object>());
            set => _placement = value;
        }

        /// <summary>
        /// The location of the instance.
        /// </summary>
        [Input("placementInfo")]
        public Input<Inputs.ClusterPlacementInfoArgs>? PlacementInfo { get; set; }

        [Input("preExecutedFileSettings")]
        private InputList<Inputs.ClusterPreExecutedFileSettingArgs>? _preExecutedFileSettings;

        /// <summary>
        /// Pre executed file settings. It can only be set at the time of creation, and cannot be modified.
        /// </summary>
        public InputList<Inputs.ClusterPreExecutedFileSettingArgs> PreExecutedFileSettings
        {
            get => _preExecutedFileSettings ?? (_preExecutedFileSettings = new InputList<Inputs.ClusterPreExecutedFileSettingArgs>());
            set => _preExecutedFileSettings = value;
        }

        /// <summary>
        /// Product ID. Different products ID represents different EMR product versions. Value range:
        /// - 16: represents EMR-V2.3.0
        /// - 20: represents EMR-V2.5.0
        /// - 25: represents EMR-V3.1.0
        /// - 27: represents KAFKA-V1.0.0
        /// - 30: represents EMR-V2.6.0
        /// - 33: represents EMR-V3.2.1
        /// - 34: represents EMR-V3.3.0
        /// - 37: represents EMR-V3.4.0
        /// - 38: represents EMR-V2.7.0
        /// - 44: represents EMR-V3.5.0
        /// - 50: represents KAFKA-V2.0.0
        /// - 51: represents STARROCKS-V1.4.0
        /// - 53: represents EMR-V3.6.0
        /// - 54: represents STARROCKS-V2.0.0.
        /// </summary>
        [Input("productId", required: true)]
        public Input<int> ProductId { get; set; } = null!;

        /// <summary>
        /// Resource specification of EMR instance.
        /// </summary>
        [Input("resourceSpec")]
        public Input<Inputs.ClusterResourceSpecArgs>? ResourceSpec { get; set; }

        /// <summary>
        /// The ID of the security group to which the instance belongs, in the form of sg-xxxxxxxx.
        /// </summary>
        [Input("sgId")]
        public Input<string>? SgId { get; set; }

        [Input("softwares", required: true)]
        private InputList<string>? _softwares;

        /// <summary>
        /// The softwares of a EMR instance.
        /// </summary>
        public InputList<string> Softwares
        {
            get => _softwares ?? (_softwares = new InputList<string>());
            set => _softwares = value;
        }

        /// <summary>
        /// The flag whether the instance support high availability.(0=&gt;not support, 1=&gt;support).
        /// </summary>
        [Input("supportHa", required: true)]
        public Input<int> SupportHa { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("terminateNodeInfos")]
        private InputList<Inputs.ClusterTerminateNodeInfoArgs>? _terminateNodeInfos;

        /// <summary>
        /// Terminate nodes. Note: it only works when the number of nodes decreases.
        /// </summary>
        public InputList<Inputs.ClusterTerminateNodeInfoArgs> TerminateNodeInfos
        {
            get => _terminateNodeInfos ?? (_terminateNodeInfos = new InputList<Inputs.ClusterTerminateNodeInfoArgs>());
            set => _terminateNodeInfos = value;
        }

        /// <summary>
        /// The length of time the instance was purchased. Use with TimeUnit.When TimeUnit is s, the parameter can only be filled in at 3600, representing a metered instance.
        /// When TimeUnit is m, the number filled in by this parameter indicates the length of purchase of the monthly instance of the package year, such as 1 for one month of purchase.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// The unit of time in which the instance was purchased. When PayMode is 0, TimeUnit can only take values of s(second). When PayMode is 1, TimeUnit can only take the value m(month).
        /// </summary>
        [Input("timeUnit")]
        public Input<string>? TimeUnit { get; set; }

        [Input("vpcSettings", required: true)]
        private InputMap<object>? _vpcSettings;

        /// <summary>
        /// The private net config of EMR instance.
        /// </summary>
        public InputMap<object> VpcSettings
        {
            get => _vpcSettings ?? (_vpcSettings = new InputMap<object>());
            set => _vpcSettings = value;
        }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 0 means turn off automatic renewal, 1 means turn on automatic renewal. Default is 0.
        /// </summary>
        [Input("autoRenew")]
        public Input<int>? AutoRenew { get; set; }

        /// <summary>
        /// It will be deprecated in later versions. Display strategy of EMR instance.
        /// </summary>
        [Input("displayStrategy")]
        public Input<string>? DisplayStrategy { get; set; }

        /// <summary>
        /// Access the external file system.
        /// </summary>
        [Input("extendFsField")]
        public Input<string>? ExtendFsField { get; set; }

        /// <summary>
        /// Created EMR instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Name of the instance, which can contain 6 to 36 English letters, Chinese characters, digits, dashes(-), or underscores(_).
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        [Input("loginSettings")]
        private InputMap<object>? _loginSettings;

        /// <summary>
        /// Instance login settings. There are two optional fields:- password: Instance login password: 8-16 characters, including uppercase letters, lowercase letters, numbers and special characters. Special symbols only support! @% ^ *. The first bit of the password cannot be a special character;- public_key_id: Public key id. After the key is associated, the instance can be accessed through the corresponding private key.
        /// </summary>
        public InputMap<object> LoginSettings
        {
            get => _loginSettings ?? (_loginSettings = new InputMap<object>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, object>());
                _loginSettings = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Whether to enable the cluster Master node public network. Value range:
        /// - NEED_MASTER_WAN: Indicates that the cluster Master node public network is enabled.
        /// - NOT_NEED_MASTER_WAN: Indicates that it is not turned on.
        /// By default, the cluster Master node internet is enabled.
        /// </summary>
        [Input("needMasterWan")]
        public Input<string>? NeedMasterWan { get; set; }

        /// <summary>
        /// The pay mode of instance. 0 represent POSTPAID_BY_HOUR, 1 represent PREPAID.
        /// </summary>
        [Input("payMode")]
        public Input<int>? PayMode { get; set; }

        [Input("placement")]
        private InputMap<object>? _placement;

        /// <summary>
        /// It will be deprecated in later versions. Use `placement_info` instead. The location of the instance.
        /// </summary>
        [Obsolete(@"It will be deprecated in later versions. Use `placement_info` instead.")]
        public InputMap<object> Placement
        {
            get => _placement ?? (_placement = new InputMap<object>());
            set => _placement = value;
        }

        /// <summary>
        /// The location of the instance.
        /// </summary>
        [Input("placementInfo")]
        public Input<Inputs.ClusterPlacementInfoGetArgs>? PlacementInfo { get; set; }

        [Input("preExecutedFileSettings")]
        private InputList<Inputs.ClusterPreExecutedFileSettingGetArgs>? _preExecutedFileSettings;

        /// <summary>
        /// Pre executed file settings. It can only be set at the time of creation, and cannot be modified.
        /// </summary>
        public InputList<Inputs.ClusterPreExecutedFileSettingGetArgs> PreExecutedFileSettings
        {
            get => _preExecutedFileSettings ?? (_preExecutedFileSettings = new InputList<Inputs.ClusterPreExecutedFileSettingGetArgs>());
            set => _preExecutedFileSettings = value;
        }

        /// <summary>
        /// Product ID. Different products ID represents different EMR product versions. Value range:
        /// - 16: represents EMR-V2.3.0
        /// - 20: represents EMR-V2.5.0
        /// - 25: represents EMR-V3.1.0
        /// - 27: represents KAFKA-V1.0.0
        /// - 30: represents EMR-V2.6.0
        /// - 33: represents EMR-V3.2.1
        /// - 34: represents EMR-V3.3.0
        /// - 37: represents EMR-V3.4.0
        /// - 38: represents EMR-V2.7.0
        /// - 44: represents EMR-V3.5.0
        /// - 50: represents KAFKA-V2.0.0
        /// - 51: represents STARROCKS-V1.4.0
        /// - 53: represents EMR-V3.6.0
        /// - 54: represents STARROCKS-V2.0.0.
        /// </summary>
        [Input("productId")]
        public Input<int>? ProductId { get; set; }

        /// <summary>
        /// Resource specification of EMR instance.
        /// </summary>
        [Input("resourceSpec")]
        public Input<Inputs.ClusterResourceSpecGetArgs>? ResourceSpec { get; set; }

        /// <summary>
        /// The ID of the security group to which the instance belongs, in the form of sg-xxxxxxxx.
        /// </summary>
        [Input("sgId")]
        public Input<string>? SgId { get; set; }

        [Input("softwares")]
        private InputList<string>? _softwares;

        /// <summary>
        /// The softwares of a EMR instance.
        /// </summary>
        public InputList<string> Softwares
        {
            get => _softwares ?? (_softwares = new InputList<string>());
            set => _softwares = value;
        }

        /// <summary>
        /// The flag whether the instance support high availability.(0=&gt;not support, 1=&gt;support).
        /// </summary>
        [Input("supportHa")]
        public Input<int>? SupportHa { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("terminateNodeInfos")]
        private InputList<Inputs.ClusterTerminateNodeInfoGetArgs>? _terminateNodeInfos;

        /// <summary>
        /// Terminate nodes. Note: it only works when the number of nodes decreases.
        /// </summary>
        public InputList<Inputs.ClusterTerminateNodeInfoGetArgs> TerminateNodeInfos
        {
            get => _terminateNodeInfos ?? (_terminateNodeInfos = new InputList<Inputs.ClusterTerminateNodeInfoGetArgs>());
            set => _terminateNodeInfos = value;
        }

        /// <summary>
        /// The length of time the instance was purchased. Use with TimeUnit.When TimeUnit is s, the parameter can only be filled in at 3600, representing a metered instance.
        /// When TimeUnit is m, the number filled in by this parameter indicates the length of purchase of the monthly instance of the package year, such as 1 for one month of purchase.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// The unit of time in which the instance was purchased. When PayMode is 0, TimeUnit can only take values of s(second). When PayMode is 1, TimeUnit can only take the value m(month).
        /// </summary>
        [Input("timeUnit")]
        public Input<string>? TimeUnit { get; set; }

        [Input("vpcSettings")]
        private InputMap<object>? _vpcSettings;

        /// <summary>
        /// The private net config of EMR instance.
        /// </summary>
        public InputMap<object> VpcSettings
        {
            get => _vpcSettings ?? (_vpcSettings = new InputMap<object>());
            set => _vpcSettings = value;
        }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
