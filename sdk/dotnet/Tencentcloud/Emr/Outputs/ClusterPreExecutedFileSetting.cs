// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Emr.Outputs
{

    [OutputType]
    public sealed class ClusterPreExecutedFileSetting
    {
        /// <summary>
        /// Execution script parameters.
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// Script file name.
        /// </summary>
        public readonly string? CosFileName;
        /// <summary>
        /// The cos address of the script.
        /// </summary>
        public readonly string? CosFileUri;
        /// <summary>
        /// Cos secretId.
        /// </summary>
        public readonly string? CosSecretId;
        /// <summary>
        /// Cos secretKey.
        /// </summary>
        public readonly string? CosSecretKey;
        /// <summary>
        /// Remark.
        /// </summary>
        public readonly string? Remark;
        /// <summary>
        /// Run order.
        /// </summary>
        public readonly int? RunOrder;
        /// <summary>
        /// `resourceAfter` or `clusterAfter`.
        /// </summary>
        public readonly string? WhenRun;

        [OutputConstructor]
        private ClusterPreExecutedFileSetting(
            ImmutableArray<string> args,

            string? cosFileName,

            string? cosFileUri,

            string? cosSecretId,

            string? cosSecretKey,

            string? remark,

            int? runOrder,

            string? whenRun)
        {
            Args = args;
            CosFileName = cosFileName;
            CosFileUri = cosFileUri;
            CosSecretId = cosSecretId;
            CosSecretKey = cosSecretKey;
            Remark = remark;
            RunOrder = runOrder;
            WhenRun = whenRun;
        }
    }
}
