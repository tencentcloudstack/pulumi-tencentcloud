// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Scf
{
    /// <summary>
    /// Provides a resource to create a scf custom domain
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var scfCustomDomain = new Tencentcloud.Scf.CustomDomain("scfCustomDomain", new()
    ///     {
    ///         Domain = "xxxxxx",
    ///         EndpointsConfigs = new[]
    ///         {
    ///             new Tencentcloud.Scf.Inputs.CustomDomainEndpointsConfigArgs
    ///             {
    ///                 FunctionName = "xxxxxx",
    ///                 Namespace = "default",
    ///                 PathMatch = "/aa/*",
    ///                 Qualifier = "$LATEST",
    ///             },
    ///         },
    ///         Protocol = "HTTP",
    ///         WafConfig = new Tencentcloud.Scf.Inputs.CustomDomainWafConfigArgs
    ///         {
    ///             WafOpen = "CLOSE",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// scf scf_custom_domain can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Scf/customDomain:CustomDomain scf_custom_domain ${domain}
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Scf/customDomain:CustomDomain")]
    public partial class CustomDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Certificate configuration information, required for HTTPS protocol.
        /// </summary>
        [Output("certConfig")]
        public Output<Outputs.CustomDomainCertConfig> CertConfig { get; private set; } = null!;

        /// <summary>
        /// Domain names, pan-domain names are not supported.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Routing configuration.
        /// </summary>
        [Output("endpointsConfigs")]
        public Output<ImmutableArray<Outputs.CustomDomainEndpointsConfig>> EndpointsConfigs { get; private set; } = null!;

        /// <summary>
        /// Protocol, value range: HTTP, HTTPS, HTTP&amp;HTTPS.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// Web Application Firewall Configuration.
        /// </summary>
        [Output("wafConfig")]
        public Output<Outputs.CustomDomainWafConfig> WafConfig { get; private set; } = null!;


        /// <summary>
        /// Create a CustomDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomDomain(string name, CustomDomainArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Scf/customDomain:CustomDomain", name, args ?? new CustomDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomDomain(string name, Input<string> id, CustomDomainState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Scf/customDomain:CustomDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomDomain Get(string name, Input<string> id, CustomDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomDomain(name, id, state, options);
        }
    }

    public sealed class CustomDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Certificate configuration information, required for HTTPS protocol.
        /// </summary>
        [Input("certConfig")]
        public Input<Inputs.CustomDomainCertConfigArgs>? CertConfig { get; set; }

        /// <summary>
        /// Domain names, pan-domain names are not supported.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("endpointsConfigs", required: true)]
        private InputList<Inputs.CustomDomainEndpointsConfigArgs>? _endpointsConfigs;

        /// <summary>
        /// Routing configuration.
        /// </summary>
        public InputList<Inputs.CustomDomainEndpointsConfigArgs> EndpointsConfigs
        {
            get => _endpointsConfigs ?? (_endpointsConfigs = new InputList<Inputs.CustomDomainEndpointsConfigArgs>());
            set => _endpointsConfigs = value;
        }

        /// <summary>
        /// Protocol, value range: HTTP, HTTPS, HTTP&amp;HTTPS.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// Web Application Firewall Configuration.
        /// </summary>
        [Input("wafConfig")]
        public Input<Inputs.CustomDomainWafConfigArgs>? WafConfig { get; set; }

        public CustomDomainArgs()
        {
        }
        public static new CustomDomainArgs Empty => new CustomDomainArgs();
    }

    public sealed class CustomDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Certificate configuration information, required for HTTPS protocol.
        /// </summary>
        [Input("certConfig")]
        public Input<Inputs.CustomDomainCertConfigGetArgs>? CertConfig { get; set; }

        /// <summary>
        /// Domain names, pan-domain names are not supported.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("endpointsConfigs")]
        private InputList<Inputs.CustomDomainEndpointsConfigGetArgs>? _endpointsConfigs;

        /// <summary>
        /// Routing configuration.
        /// </summary>
        public InputList<Inputs.CustomDomainEndpointsConfigGetArgs> EndpointsConfigs
        {
            get => _endpointsConfigs ?? (_endpointsConfigs = new InputList<Inputs.CustomDomainEndpointsConfigGetArgs>());
            set => _endpointsConfigs = value;
        }

        /// <summary>
        /// Protocol, value range: HTTP, HTTPS, HTTP&amp;HTTPS.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Web Application Firewall Configuration.
        /// </summary>
        [Input("wafConfig")]
        public Input<Inputs.CustomDomainWafConfigGetArgs>? WafConfig { get; set; }

        public CustomDomainState()
        {
        }
        public static new CustomDomainState Empty => new CustomDomainState();
    }
}
