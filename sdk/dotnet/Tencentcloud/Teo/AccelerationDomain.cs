// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Teo
{
    /// <summary>
    /// Provides a resource to create a teo acceleration_domain
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var accelerationDomain = new Tencentcloud.Teo.AccelerationDomain("accelerationDomain", new()
    ///     {
    ///         DomainName = "aaa.makn.cn",
    ///         OriginInfo = new Tencentcloud.Teo.Inputs.AccelerationDomainOriginInfoArgs
    ///         {
    ///             Origin = "150.109.8.1",
    ///             OriginType = "IP_DOMAIN",
    ///         },
    ///         ZoneId = "zone-2o0i41pv2h8c",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// teo acceleration_domain can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Teo/accelerationDomain:AccelerationDomain acceleration_domain zone_id#domain_name
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Teo/accelerationDomain:AccelerationDomain")]
    public partial class AccelerationDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CNAME address.
        /// </summary>
        [Output("cname")]
        public Output<string> Cname { get; private set; } = null!;

        /// <summary>
        /// Accelerated domain name.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// HTTP back-to-origin port, the value is 1-65535, effective when OriginProtocol=FOLLOW/HTTP, if not filled in, the default value is 80.
        /// </summary>
        [Output("httpOriginPort")]
        public Output<int> HttpOriginPort { get; private set; } = null!;

        /// <summary>
        /// HTTPS back-to-origin port. The value range is 1-65535. It takes effect when OriginProtocol=FOLLOW/HTTPS. If it is not filled in, the default value is 443.
        /// </summary>
        [Output("httpsOriginPort")]
        public Output<int> HttpsOriginPort { get; private set; } = null!;

        /// <summary>
        /// IPv6 status, the value is: `follow`: follow the site IPv6 configuration; `on`: on; `off`: off. If not filled in, the default is: `follow`.
        /// </summary>
        [Output("ipv6Status")]
        public Output<string> Ipv6Status { get; private set; } = null!;

        /// <summary>
        /// Details of the origin.
        /// </summary>
        [Output("originInfo")]
        public Output<Outputs.AccelerationDomainOriginInfo> OriginInfo { get; private set; } = null!;

        /// <summary>
        /// Origin return protocol, possible values are: `FOLLOW`: protocol follow; `HTTP`: HTTP protocol back to source; `HTTPS`: HTTPS protocol back to source. If not filled in, the default is: `FOLLOW`.
        /// </summary>
        [Output("originProtocol")]
        public Output<string> OriginProtocol { get; private set; } = null!;

        /// <summary>
        /// Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// ID of the site related with the accelerated domain name.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a AccelerationDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccelerationDomain(string name, AccelerationDomainArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/accelerationDomain:AccelerationDomain", name, args ?? new AccelerationDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccelerationDomain(string name, Input<string> id, AccelerationDomainState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/accelerationDomain:AccelerationDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccelerationDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccelerationDomain Get(string name, Input<string> id, AccelerationDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new AccelerationDomain(name, id, state, options);
        }
    }

    public sealed class AccelerationDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accelerated domain name.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// HTTP back-to-origin port, the value is 1-65535, effective when OriginProtocol=FOLLOW/HTTP, if not filled in, the default value is 80.
        /// </summary>
        [Input("httpOriginPort")]
        public Input<int>? HttpOriginPort { get; set; }

        /// <summary>
        /// HTTPS back-to-origin port. The value range is 1-65535. It takes effect when OriginProtocol=FOLLOW/HTTPS. If it is not filled in, the default value is 443.
        /// </summary>
        [Input("httpsOriginPort")]
        public Input<int>? HttpsOriginPort { get; set; }

        /// <summary>
        /// IPv6 status, the value is: `follow`: follow the site IPv6 configuration; `on`: on; `off`: off. If not filled in, the default is: `follow`.
        /// </summary>
        [Input("ipv6Status")]
        public Input<string>? Ipv6Status { get; set; }

        /// <summary>
        /// Details of the origin.
        /// </summary>
        [Input("originInfo", required: true)]
        public Input<Inputs.AccelerationDomainOriginInfoArgs> OriginInfo { get; set; } = null!;

        /// <summary>
        /// Origin return protocol, possible values are: `FOLLOW`: protocol follow; `HTTP`: HTTP protocol back to source; `HTTPS`: HTTPS protocol back to source. If not filled in, the default is: `FOLLOW`.
        /// </summary>
        [Input("originProtocol")]
        public Input<string>? OriginProtocol { get; set; }

        /// <summary>
        /// Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// ID of the site related with the accelerated domain name.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public AccelerationDomainArgs()
        {
        }
        public static new AccelerationDomainArgs Empty => new AccelerationDomainArgs();
    }

    public sealed class AccelerationDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CNAME address.
        /// </summary>
        [Input("cname")]
        public Input<string>? Cname { get; set; }

        /// <summary>
        /// Accelerated domain name.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// HTTP back-to-origin port, the value is 1-65535, effective when OriginProtocol=FOLLOW/HTTP, if not filled in, the default value is 80.
        /// </summary>
        [Input("httpOriginPort")]
        public Input<int>? HttpOriginPort { get; set; }

        /// <summary>
        /// HTTPS back-to-origin port. The value range is 1-65535. It takes effect when OriginProtocol=FOLLOW/HTTPS. If it is not filled in, the default value is 443.
        /// </summary>
        [Input("httpsOriginPort")]
        public Input<int>? HttpsOriginPort { get; set; }

        /// <summary>
        /// IPv6 status, the value is: `follow`: follow the site IPv6 configuration; `on`: on; `off`: off. If not filled in, the default is: `follow`.
        /// </summary>
        [Input("ipv6Status")]
        public Input<string>? Ipv6Status { get; set; }

        /// <summary>
        /// Details of the origin.
        /// </summary>
        [Input("originInfo")]
        public Input<Inputs.AccelerationDomainOriginInfoGetArgs>? OriginInfo { get; set; }

        /// <summary>
        /// Origin return protocol, possible values are: `FOLLOW`: protocol follow; `HTTP`: HTTP protocol back to source; `HTTPS`: HTTPS protocol back to source. If not filled in, the default is: `FOLLOW`.
        /// </summary>
        [Input("originProtocol")]
        public Input<string>? OriginProtocol { get; set; }

        /// <summary>
        /// Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// ID of the site related with the accelerated domain name.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public AccelerationDomainState()
        {
        }
        public static new AccelerationDomainState Empty => new AccelerationDomainState();
    }
}
