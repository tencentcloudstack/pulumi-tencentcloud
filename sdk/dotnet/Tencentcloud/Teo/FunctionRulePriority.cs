// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TencentCloudIAC.PulumiPackage.Tencentcloud.Teo
{
    /// <summary>
    /// Provides a resource to create a teo teo_function_rule_priority
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Tencentcloud = TencentCloudIAC.PulumiPackage.Tencentcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var teoFunctionRulePriority = new Tencentcloud.Teo.FunctionRulePriority("teoFunctionRulePriority", new()
    ///     {
    ///         FunctionId = "ef-txx7fnua",
    ///         RuleIds = new[]
    ///         {
    ///             "rule-equpbht3",
    ///             "rule-ax28n3g6",
    ///         },
    ///         ZoneId = "zone-2qtuhspy7cr6",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// teo teo_function_rule_priority can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import tencentcloud:Teo/functionRulePriority:FunctionRulePriority teo_function_rule_priority zone_id#function_id
    /// ```
    /// </summary>
    [TencentcloudResourceType("tencentcloud:Teo/functionRulePriority:FunctionRulePriority")]
    public partial class FunctionRulePriority : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the Function.
        /// </summary>
        [Output("functionId")]
        public Output<string> FunctionId { get; private set; } = null!;

        /// <summary>
        /// he list of rule IDs. It is required to include all rule IDs after adjusting their priorities. The execution order of multiple rules follows a top-down sequence. If not specified, the original priority order will be maintained.
        /// </summary>
        [Output("ruleIds")]
        public Output<ImmutableArray<string>> RuleIds { get; private set; } = null!;

        /// <summary>
        /// ID of the site.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a FunctionRulePriority resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FunctionRulePriority(string name, FunctionRulePriorityArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/functionRulePriority:FunctionRulePriority", name, args ?? new FunctionRulePriorityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FunctionRulePriority(string name, Input<string> id, FunctionRulePriorityState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/functionRulePriority:FunctionRulePriority", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/tencentcloudstack",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FunctionRulePriority resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FunctionRulePriority Get(string name, Input<string> id, FunctionRulePriorityState? state = null, CustomResourceOptions? options = null)
        {
            return new FunctionRulePriority(name, id, state, options);
        }
    }

    public sealed class FunctionRulePriorityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Function.
        /// </summary>
        [Input("functionId", required: true)]
        public Input<string> FunctionId { get; set; } = null!;

        [Input("ruleIds", required: true)]
        private InputList<string>? _ruleIds;

        /// <summary>
        /// he list of rule IDs. It is required to include all rule IDs after adjusting their priorities. The execution order of multiple rules follows a top-down sequence. If not specified, the original priority order will be maintained.
        /// </summary>
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        /// <summary>
        /// ID of the site.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public FunctionRulePriorityArgs()
        {
        }
        public static new FunctionRulePriorityArgs Empty => new FunctionRulePriorityArgs();
    }

    public sealed class FunctionRulePriorityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Function.
        /// </summary>
        [Input("functionId")]
        public Input<string>? FunctionId { get; set; }

        [Input("ruleIds")]
        private InputList<string>? _ruleIds;

        /// <summary>
        /// he list of rule IDs. It is required to include all rule IDs after adjusting their priorities. The execution order of multiple rules follows a top-down sequence. If not specified, the original priority order will be maintained.
        /// </summary>
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        /// <summary>
        /// ID of the site.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public FunctionRulePriorityState()
        {
        }
        public static new FunctionRulePriorityState Empty => new FunctionRulePriorityState();
    }
}
