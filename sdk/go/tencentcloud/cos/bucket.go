// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cos

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a COS resource to create a COS bucket and set its attributes.
//
// > **NOTE:** The following capabilities do not support cdc scenarios: `multiAz`, `website`, and bucket replication `replicaRole`.
//
// ## Example Usage
//
// ### Private Bucket
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "privateBucket", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("private-bucket-%v", appId)),
//				Acl:    pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Private Bucket with CDC cluster
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_ := "ap-guangzhou"
//			_ := "cluster-262n63e8"
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "privateBucket", &Cos.BucketArgs{
//				Bucket:           pulumi.String(fmt.Sprintf("private-bucket-%v", appId)),
//				Acl:              pulumi.String("private"),
//				VersioningEnable: pulumi.Bool(true),
//				ForceClean:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Enable SSE-KMS encryption
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			example, err := Kms.NewKey(ctx, "example", &Kms.KeyArgs{
//				Alias:              pulumi.String("tf-example-kms-key"),
//				Description:        pulumi.String("example of kms key"),
//				KeyRotationEnabled: pulumi.Bool(false),
//				IsEnabled:          pulumi.Bool(true),
//				Tags: pulumi.Map{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Cos.NewBucket(ctx, "bucketBasic", &Cos.BucketArgs{
//				Bucket:              pulumi.String(fmt.Sprintf("tf-bucket-cdc-%v", appId)),
//				Acl:                 pulumi.String("private"),
//				EncryptionAlgorithm: pulumi.String("KMS"),
//				KmsId:               example.ID(),
//				VersioningEnable:    pulumi.Bool(true),
//				AccelerationEnable:  pulumi.Bool(false),
//				ForceClean:          pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Creation of multiple available zone bucket
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "multiZoneBucket", &Cos.BucketArgs{
//				Bucket:           pulumi.String(fmt.Sprintf("multi-zone-bucket-%v", appId)),
//				Acl:              pulumi.String("private"),
//				MultiAz:          pulumi.Bool(true),
//				VersioningEnable: pulumi.Bool(true),
//				ForceClean:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using verbose acl
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "bucketWithAcl", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("bucketwith-acl-%v", appId)),
//				AclBody: pulumi.String(`<AccessControlPolicy>
//		<Owner>
//			<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
//			<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
//		</Owner>
//		<AccessControlList>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
//					<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
//				</Grantee>
//				<Permission>READ</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
//					<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
//					<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
//				</Grantee>
//				<Permission>FULL_CONTROL</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
//					<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
//					<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
//				</Grantee>
//				<Permission>WRITE_ACP</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
//					<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
//				</Grantee>
//				<Permission>READ_ACP</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
//					<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
//				</Grantee>
//				<Permission>WRITE_ACP</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
//					<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
//					<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
//				</Grantee>
//				<Permission>READ</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser">
//					<ID>qcs::cam::uin/100022975249:uin/100022975249</ID>
//					<DisplayName>qcs::cam::uin/100022975249:uin/100022975249</DisplayName>
//				</Grantee>
//				<Permission>WRITE</Permission>
//			</Grant>
//			<Grant>
//				<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group">
//					<URI>http://cam.qcloud.com/groups/global/AllUsers</URI>
//				</Grantee>
//				<Permission>FULL_CONTROL</Permission>
//			</Grant>
//		</AccessControlList>
//
// </AccessControlPolicy>
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using verbose acl with CDC cluster
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_ := "ap-guangzhou"
//			_ := "cluster-262n63e8"
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "bucketWithAcl", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("private-bucket-%v", appId)),
//				Acl:    pulumi.String("private"),
//				AclBody: pulumi.String(`<AccessControlPolicy>
//	    <Owner>
//	        <ID>qcs::cam::uin/100023201586:uin/100023201586</ID>
//	        <DisplayName>qcs::cam::uin/100023201586:uin/100023201586</DisplayName>
//	    </Owner>
//	    <AccessControlList>
//	        <Grant>
//	            <Grantee type="CanonicalUser">
//	                <ID>qcs::cam::uin/100015006748:uin/100015006748</ID>
//	                <DisplayName>qcs::cam::uin/100015006748:uin/100015006748</DisplayName>
//	            </Grantee>
//	            <Permission>WRITE</Permission>
//	        </Grant>
//	        <Grant>
//	            <Grantee type="CanonicalUser">
//	                <ID>qcs::cam::uin/100023201586:uin/100023201586</ID>
//	                <DisplayName>qcs::cam::uin/100023201586:uin/100023201586</DisplayName>
//	            </Grantee>
//	            <Permission>FULL_CONTROL</Permission>
//	        </Grant>
//	    </AccessControlList>
//
// </AccessControlPolicy>
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Static Website
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			bucketWithStaticWebsite, err := Cos.NewBucket(ctx, "bucketWithStaticWebsite", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("bucket-with-static-website-%v", appId)),
//				Website: &cos.BucketWebsiteArgs{
//					IndexDocument:         pulumi.String("index.html"),
//					ErrorDocument:         pulumi.String("error.html"),
//					RedirectAllRequestsTo: pulumi.String("https"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("endpointTest", bucketWithStaticWebsite.Website.ApplyT(func(website cos.BucketWebsite) (*string, error) {
//				return &website.Endpoint, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using CORS
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "bucketWithCors", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("bucket-with-cors-%v", appId)),
//				Acl:    pulumi.String("public-read-write"),
//				CorsRules: cos.BucketCorsRuleArray{
//					&cos.BucketCorsRuleArgs{
//						AllowedOrigins: pulumi.StringArray{
//							pulumi.String("http://*.abc.com"),
//						},
//						AllowedMethods: pulumi.StringArray{
//							pulumi.String("PUT"),
//							pulumi.String("POST"),
//						},
//						AllowedHeaders: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//						MaxAgeSeconds: pulumi.Int(300),
//						ExposeHeaders: pulumi.StringArray{
//							pulumi.String("Etag"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using CORS with CDC
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_ := "ap-guangzhou"
//			_ := "cluster-262n63e8"
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "bucketWithCors", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("bucket-with-cors-%v", appId)),
//				CorsRules: cos.BucketCorsRuleArray{
//					&cos.BucketCorsRuleArgs{
//						AllowedOrigins: pulumi.StringArray{
//							pulumi.String("http://*.abc.com"),
//						},
//						AllowedMethods: pulumi.StringArray{
//							pulumi.String("PUT"),
//							pulumi.String("POST"),
//						},
//						AllowedHeaders: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//						MaxAgeSeconds: pulumi.Int(300),
//						ExposeHeaders: pulumi.StringArray{
//							pulumi.String("Etag"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using object lifecycle
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "bucketWithLifecycle", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("bucket-with-lifecycle-%v", appId)),
//				Acl:    pulumi.String("public-read-write"),
//				LifecycleRules: cos.BucketLifecycleRuleArray{
//					&cos.BucketLifecycleRuleArgs{
//						FilterPrefix: pulumi.String("path1/"),
//						Transitions: cos.BucketLifecycleRuleTransitionArray{
//							&cos.BucketLifecycleRuleTransitionArgs{
//								Days:         pulumi.Int(30),
//								StorageClass: pulumi.String("STANDARD_IA"),
//							},
//						},
//						Expiration: &cos.BucketLifecycleRuleExpirationArgs{
//							Days: pulumi.Int(90),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using object lifecycle with CDC
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_ := "ap-guangzhou"
//			_ := "cluster-262n63e8"
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			_, err = Cos.NewBucket(ctx, "bucketWithLifecycle", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("bucket-with-lifecycle-%v", appId)),
//				Acl:    pulumi.String("private"),
//				LifecycleRules: cos.BucketLifecycleRuleArray{
//					&cos.BucketLifecycleRuleArgs{
//						FilterPrefix: pulumi.String("path1/"),
//						Expiration: &cos.BucketLifecycleRuleExpirationArgs{
//							Days: pulumi.Int(90),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Using replication
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/User"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			info, err := User.GetInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			appId := info.AppId
//			uin := info.Uin
//			ownerUin := info.OwnerUin
//			region := "ap-guangzhou"
//			bucketReplicate, err := Cos.NewBucket(ctx, "bucketReplicate", &Cos.BucketArgs{
//				Bucket:           pulumi.String(fmt.Sprintf("bucket-replicate-%v", appId)),
//				Acl:              pulumi.String("private"),
//				VersioningEnable: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Cos.NewBucket(ctx, "bucketWithReplication", &Cos.BucketArgs{
//				Bucket:           pulumi.String(fmt.Sprintf("bucket-with-replication-%v", appId)),
//				Acl:              pulumi.String("private"),
//				VersioningEnable: pulumi.Bool(true),
//				ReplicaRole:      pulumi.String(fmt.Sprintf("qcs::cam::uin/%v:uin/%v", ownerUin, uin)),
//				ReplicaRules: cos.BucketReplicaRuleArray{
//					&cos.BucketReplicaRuleArgs{
//						Id:     pulumi.String("test-rep1"),
//						Status: pulumi.String("Enabled"),
//						Prefix: pulumi.String("dist"),
//						DestinationBucket: bucketReplicate.Bucket.ApplyT(func(bucket string) (string, error) {
//							return fmt.Sprintf("qcs::cos:%v::%v", region, bucket), nil
//						}).(pulumi.StringOutput),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// COS bucket can be imported, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Cos/bucket:Bucket bucket bucket-name
// ```
type Bucket struct {
	pulumi.CustomResourceState

	// Enable bucket acceleration.
	AccelerationEnable pulumi.BoolPtrOutput `pulumi:"accelerationEnable"`
	// The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
	Acl pulumi.StringPtrOutput `pulumi:"acl"`
	// ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
	AclBody pulumi.StringOutput `pulumi:"aclBody"`
	// The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// CDC cluster ID.
	CdcId pulumi.StringPtrOutput `pulumi:"cdcId"`
	// A rule of Cross-Origin Resource Sharing (documented below).
	CorsRules BucketCorsRuleArrayOutput `pulumi:"corsRules"`
	// The URL of this cos bucket.
	CosBucketUrl pulumi.StringOutput `pulumi:"cosBucketUrl"`
	// Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
	EnableIntelligentTiering pulumi.BoolOutput `pulumi:"enableIntelligentTiering"`
	// The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
	EncryptionAlgorithm pulumi.StringPtrOutput `pulumi:"encryptionAlgorithm"`
	// Force cleanup all objects before delete bucket.
	ForceClean pulumi.BoolPtrOutput `pulumi:"forceClean"`
	// Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
	IntelligentTieringDays pulumi.IntOutput `pulumi:"intelligentTieringDays"`
	// Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
	IntelligentTieringRequestFrequent pulumi.IntOutput `pulumi:"intelligentTieringRequestFrequent"`
	// The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
	KmsId pulumi.StringPtrOutput `pulumi:"kmsId"`
	// A configuration of object lifecycle management (documented below).
	LifecycleRules BucketLifecycleRuleArrayOutput `pulumi:"lifecycleRules"`
	// Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
	LogEnable pulumi.BoolPtrOutput `pulumi:"logEnable"`
	// The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
	LogPrefix pulumi.StringOutput `pulumi:"logPrefix"`
	// The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
	LogTargetBucket pulumi.StringOutput `pulumi:"logTargetBucket"`
	// Indicates whether to create a bucket of multi available zone.
	MultiAz pulumi.BoolPtrOutput `pulumi:"multiAz"`
	// Bucket Origin Domain settings.
	OriginDomainRules BucketOriginDomainRuleArrayOutput `pulumi:"originDomainRules"`
	// Bucket Origin-Pull settings.
	OriginPullRules BucketOriginPullRuleArrayOutput `pulumi:"originPullRules"`
	// Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
	ReplicaRole pulumi.StringPtrOutput `pulumi:"replicaRole"`
	// List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
	ReplicaRules BucketReplicaRuleArrayOutput `pulumi:"replicaRules"`
	// The tags of a bucket.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
	VersioningEnable pulumi.BoolPtrOutput `pulumi:"versioningEnable"`
	// A website object(documented below).
	Website BucketWebsitePtrOutput `pulumi:"website"`
}

// NewBucket registers a new resource with the given unique name, arguments, and options.
func NewBucket(ctx *pulumi.Context,
	name string, args *BucketArgs, opts ...pulumi.ResourceOption) (*Bucket, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bucket
	err := ctx.RegisterResource("tencentcloud:Cos/bucket:Bucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucket gets an existing Bucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error) {
	var resource Bucket
	err := ctx.ReadResource("tencentcloud:Cos/bucket:Bucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bucket resources.
type bucketState struct {
	// Enable bucket acceleration.
	AccelerationEnable *bool `pulumi:"accelerationEnable"`
	// The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
	Acl *string `pulumi:"acl"`
	// ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
	AclBody *string `pulumi:"aclBody"`
	// The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket *string `pulumi:"bucket"`
	// CDC cluster ID.
	CdcId *string `pulumi:"cdcId"`
	// A rule of Cross-Origin Resource Sharing (documented below).
	CorsRules []BucketCorsRule `pulumi:"corsRules"`
	// The URL of this cos bucket.
	CosBucketUrl *string `pulumi:"cosBucketUrl"`
	// Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
	EnableIntelligentTiering *bool `pulumi:"enableIntelligentTiering"`
	// The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// Force cleanup all objects before delete bucket.
	ForceClean *bool `pulumi:"forceClean"`
	// Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
	IntelligentTieringDays *int `pulumi:"intelligentTieringDays"`
	// Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
	IntelligentTieringRequestFrequent *int `pulumi:"intelligentTieringRequestFrequent"`
	// The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
	KmsId *string `pulumi:"kmsId"`
	// A configuration of object lifecycle management (documented below).
	LifecycleRules []BucketLifecycleRule `pulumi:"lifecycleRules"`
	// Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
	LogEnable *bool `pulumi:"logEnable"`
	// The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
	LogPrefix *string `pulumi:"logPrefix"`
	// The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
	LogTargetBucket *string `pulumi:"logTargetBucket"`
	// Indicates whether to create a bucket of multi available zone.
	MultiAz *bool `pulumi:"multiAz"`
	// Bucket Origin Domain settings.
	OriginDomainRules []BucketOriginDomainRule `pulumi:"originDomainRules"`
	// Bucket Origin-Pull settings.
	OriginPullRules []BucketOriginPullRule `pulumi:"originPullRules"`
	// Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
	ReplicaRole *string `pulumi:"replicaRole"`
	// List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
	ReplicaRules []BucketReplicaRule `pulumi:"replicaRules"`
	// The tags of a bucket.
	Tags map[string]interface{} `pulumi:"tags"`
	// Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
	VersioningEnable *bool `pulumi:"versioningEnable"`
	// A website object(documented below).
	Website *BucketWebsite `pulumi:"website"`
}

type BucketState struct {
	// Enable bucket acceleration.
	AccelerationEnable pulumi.BoolPtrInput
	// The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
	Acl pulumi.StringPtrInput
	// ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
	AclBody pulumi.StringPtrInput
	// The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket pulumi.StringPtrInput
	// CDC cluster ID.
	CdcId pulumi.StringPtrInput
	// A rule of Cross-Origin Resource Sharing (documented below).
	CorsRules BucketCorsRuleArrayInput
	// The URL of this cos bucket.
	CosBucketUrl pulumi.StringPtrInput
	// Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
	EnableIntelligentTiering pulumi.BoolPtrInput
	// The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
	EncryptionAlgorithm pulumi.StringPtrInput
	// Force cleanup all objects before delete bucket.
	ForceClean pulumi.BoolPtrInput
	// Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
	IntelligentTieringDays pulumi.IntPtrInput
	// Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
	IntelligentTieringRequestFrequent pulumi.IntPtrInput
	// The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
	KmsId pulumi.StringPtrInput
	// A configuration of object lifecycle management (documented below).
	LifecycleRules BucketLifecycleRuleArrayInput
	// Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
	LogEnable pulumi.BoolPtrInput
	// The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
	LogPrefix pulumi.StringPtrInput
	// The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
	LogTargetBucket pulumi.StringPtrInput
	// Indicates whether to create a bucket of multi available zone.
	MultiAz pulumi.BoolPtrInput
	// Bucket Origin Domain settings.
	OriginDomainRules BucketOriginDomainRuleArrayInput
	// Bucket Origin-Pull settings.
	OriginPullRules BucketOriginPullRuleArrayInput
	// Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
	ReplicaRole pulumi.StringPtrInput
	// List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
	ReplicaRules BucketReplicaRuleArrayInput
	// The tags of a bucket.
	Tags pulumi.MapInput
	// Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
	VersioningEnable pulumi.BoolPtrInput
	// A website object(documented below).
	Website BucketWebsitePtrInput
}

func (BucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketState)(nil)).Elem()
}

type bucketArgs struct {
	// Enable bucket acceleration.
	AccelerationEnable *bool `pulumi:"accelerationEnable"`
	// The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
	Acl *string `pulumi:"acl"`
	// ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
	AclBody *string `pulumi:"aclBody"`
	// The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket string `pulumi:"bucket"`
	// CDC cluster ID.
	CdcId *string `pulumi:"cdcId"`
	// A rule of Cross-Origin Resource Sharing (documented below).
	CorsRules []BucketCorsRule `pulumi:"corsRules"`
	// Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
	EnableIntelligentTiering *bool `pulumi:"enableIntelligentTiering"`
	// The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// Force cleanup all objects before delete bucket.
	ForceClean *bool `pulumi:"forceClean"`
	// Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
	IntelligentTieringDays *int `pulumi:"intelligentTieringDays"`
	// Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
	IntelligentTieringRequestFrequent *int `pulumi:"intelligentTieringRequestFrequent"`
	// The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
	KmsId *string `pulumi:"kmsId"`
	// A configuration of object lifecycle management (documented below).
	LifecycleRules []BucketLifecycleRule `pulumi:"lifecycleRules"`
	// Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
	LogEnable *bool `pulumi:"logEnable"`
	// The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
	LogPrefix *string `pulumi:"logPrefix"`
	// The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
	LogTargetBucket *string `pulumi:"logTargetBucket"`
	// Indicates whether to create a bucket of multi available zone.
	MultiAz *bool `pulumi:"multiAz"`
	// Bucket Origin Domain settings.
	OriginDomainRules []BucketOriginDomainRule `pulumi:"originDomainRules"`
	// Bucket Origin-Pull settings.
	OriginPullRules []BucketOriginPullRule `pulumi:"originPullRules"`
	// Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
	ReplicaRole *string `pulumi:"replicaRole"`
	// List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
	ReplicaRules []BucketReplicaRule `pulumi:"replicaRules"`
	// The tags of a bucket.
	Tags map[string]interface{} `pulumi:"tags"`
	// Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
	VersioningEnable *bool `pulumi:"versioningEnable"`
	// A website object(documented below).
	Website *BucketWebsite `pulumi:"website"`
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	// Enable bucket acceleration.
	AccelerationEnable pulumi.BoolPtrInput
	// The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
	Acl pulumi.StringPtrInput
	// ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
	AclBody pulumi.StringPtrInput
	// The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket pulumi.StringInput
	// CDC cluster ID.
	CdcId pulumi.StringPtrInput
	// A rule of Cross-Origin Resource Sharing (documented below).
	CorsRules BucketCorsRuleArrayInput
	// Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
	EnableIntelligentTiering pulumi.BoolPtrInput
	// The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
	EncryptionAlgorithm pulumi.StringPtrInput
	// Force cleanup all objects before delete bucket.
	ForceClean pulumi.BoolPtrInput
	// Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
	IntelligentTieringDays pulumi.IntPtrInput
	// Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
	IntelligentTieringRequestFrequent pulumi.IntPtrInput
	// The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
	KmsId pulumi.StringPtrInput
	// A configuration of object lifecycle management (documented below).
	LifecycleRules BucketLifecycleRuleArrayInput
	// Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
	LogEnable pulumi.BoolPtrInput
	// The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
	LogPrefix pulumi.StringPtrInput
	// The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
	LogTargetBucket pulumi.StringPtrInput
	// Indicates whether to create a bucket of multi available zone.
	MultiAz pulumi.BoolPtrInput
	// Bucket Origin Domain settings.
	OriginDomainRules BucketOriginDomainRuleArrayInput
	// Bucket Origin-Pull settings.
	OriginPullRules BucketOriginPullRuleArrayInput
	// Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
	ReplicaRole pulumi.StringPtrInput
	// List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
	ReplicaRules BucketReplicaRuleArrayInput
	// The tags of a bucket.
	Tags pulumi.MapInput
	// Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
	VersioningEnable pulumi.BoolPtrInput
	// A website object(documented below).
	Website BucketWebsitePtrInput
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketArgs)(nil)).Elem()
}

type BucketInput interface {
	pulumi.Input

	ToBucketOutput() BucketOutput
	ToBucketOutputWithContext(ctx context.Context) BucketOutput
}

func (*Bucket) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (i *Bucket) ToBucketOutput() BucketOutput {
	return i.ToBucketOutputWithContext(context.Background())
}

func (i *Bucket) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput)
}

// BucketArrayInput is an input type that accepts BucketArray and BucketArrayOutput values.
// You can construct a concrete instance of `BucketArrayInput` via:
//
//	BucketArray{ BucketArgs{...} }
type BucketArrayInput interface {
	pulumi.Input

	ToBucketArrayOutput() BucketArrayOutput
	ToBucketArrayOutputWithContext(context.Context) BucketArrayOutput
}

type BucketArray []BucketInput

func (BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bucket)(nil)).Elem()
}

func (i BucketArray) ToBucketArrayOutput() BucketArrayOutput {
	return i.ToBucketArrayOutputWithContext(context.Background())
}

func (i BucketArray) ToBucketArrayOutputWithContext(ctx context.Context) BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketArrayOutput)
}

// BucketMapInput is an input type that accepts BucketMap and BucketMapOutput values.
// You can construct a concrete instance of `BucketMapInput` via:
//
//	BucketMap{ "key": BucketArgs{...} }
type BucketMapInput interface {
	pulumi.Input

	ToBucketMapOutput() BucketMapOutput
	ToBucketMapOutputWithContext(context.Context) BucketMapOutput
}

type BucketMap map[string]BucketInput

func (BucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bucket)(nil)).Elem()
}

func (i BucketMap) ToBucketMapOutput() BucketMapOutput {
	return i.ToBucketMapOutputWithContext(context.Background())
}

func (i BucketMap) ToBucketMapOutputWithContext(ctx context.Context) BucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMapOutput)
}

type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

// Enable bucket acceleration.
func (o BucketOutput) AccelerationEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.AccelerationEnable }).(pulumi.BoolPtrOutput)
}

// The canned ACL to apply. Valid values: private, public-read, and public-read-write. Defaults to private.
func (o BucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

// ACL XML body for multiple grant info. NOTE: this argument will overwrite `acl`. Check https://intl.cloud.tencent.com/document/product/436/7737 for more detail.
func (o BucketOutput) AclBody() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.AclBody }).(pulumi.StringOutput)
}

// The name of a bucket to be created. Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
func (o BucketOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// CDC cluster ID.
func (o BucketOutput) CdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.CdcId }).(pulumi.StringPtrOutput)
}

// A rule of Cross-Origin Resource Sharing (documented below).
func (o BucketOutput) CorsRules() BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketCorsRuleArrayOutput { return v.CorsRules }).(BucketCorsRuleArrayOutput)
}

// The URL of this cos bucket.
func (o BucketOutput) CosBucketUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.CosBucketUrl }).(pulumi.StringOutput)
}

// Enable intelligent tiering. NOTE: When intelligent tiering configuration is enabled, it cannot be turned off or modified.
func (o BucketOutput) EnableIntelligentTiering() pulumi.BoolOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolOutput { return v.EnableIntelligentTiering }).(pulumi.BoolOutput)
}

// The server-side encryption algorithm to use. Valid values are `AES256`, `KMS` and `cos/kms`, `cos/kms` is for cdc cos scenario.
func (o BucketOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// Force cleanup all objects before delete bucket.
func (o BucketOutput) ForceClean() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.ForceClean }).(pulumi.BoolPtrOutput)
}

// Specifies the limit of days for standard-tier data to low-frequency data in an intelligent tiered storage configuration, with optional days of 30, 60, 90. Default value is 30.
func (o BucketOutput) IntelligentTieringDays() pulumi.IntOutput {
	return o.ApplyT(func(v *Bucket) pulumi.IntOutput { return v.IntelligentTieringDays }).(pulumi.IntOutput)
}

// Specify the access limit for converting standard layer data into low-frequency layer data in the configuration. The default value is once, which can be used in combination with the number of days to achieve the conversion effect. For example, if the parameter is set to 1 and the number of access days is 30, it means that objects with less than one visit in 30 consecutive days will be reduced from the standard layer to the low frequency layer.
func (o BucketOutput) IntelligentTieringRequestFrequent() pulumi.IntOutput {
	return o.ApplyT(func(v *Bucket) pulumi.IntOutput { return v.IntelligentTieringRequestFrequent }).(pulumi.IntOutput)
}

// The KMS Master Key ID. This value is valid only when `encryptionAlgorithm` is set to KMS or cos/kms. Set kms id to the specified value. If not specified, the default kms id is used.
func (o BucketOutput) KmsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.KmsId }).(pulumi.StringPtrOutput)
}

// A configuration of object lifecycle management (documented below).
func (o BucketOutput) LifecycleRules() BucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketLifecycleRuleArrayOutput { return v.LifecycleRules }).(BucketLifecycleRuleArrayOutput)
}

// Indicate the access log of this bucket to be saved or not. Default is `false`. If set `true`, the access log will be saved with `logTargetBucket`. To enable log, the full access of log service must be granted. [Full Access Role Policy](https://intl.cloud.tencent.com/document/product/436/16920).
func (o BucketOutput) LogEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.LogEnable }).(pulumi.BoolPtrOutput)
}

// The prefix log name which saves the access log of this bucket per 5 minutes. Eg. `MyLogPrefix/`. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`.
func (o BucketOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.LogPrefix }).(pulumi.StringOutput)
}

// The target bucket name which saves the access log of this bucket per 5 minutes. The log access file format is `logTargetBucket`/`logPrefix`{YYYY}/{MM}/{DD}/{time}_{random}_{index}.gz. Only valid when `logEnable` is `true`. User must have full access on this bucket.
func (o BucketOutput) LogTargetBucket() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.LogTargetBucket }).(pulumi.StringOutput)
}

// Indicates whether to create a bucket of multi available zone.
func (o BucketOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.MultiAz }).(pulumi.BoolPtrOutput)
}

// Bucket Origin Domain settings.
func (o BucketOutput) OriginDomainRules() BucketOriginDomainRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketOriginDomainRuleArrayOutput { return v.OriginDomainRules }).(BucketOriginDomainRuleArrayOutput)
}

// Bucket Origin-Pull settings.
func (o BucketOutput) OriginPullRules() BucketOriginPullRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketOriginPullRuleArrayOutput { return v.OriginPullRules }).(BucketOriginPullRuleArrayOutput)
}

// Request initiator identifier, format: `qcs::cam::uin/<owneruin>:uin/<subuin>`. NOTE: only `versioningEnable` is true can configure this argument.
func (o BucketOutput) ReplicaRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.ReplicaRole }).(pulumi.StringPtrOutput)
}

// List of replica rule. NOTE: only `versioningEnable` is true and `replicaRole` set can configure this argument.
func (o BucketOutput) ReplicaRules() BucketReplicaRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketReplicaRuleArrayOutput { return v.ReplicaRules }).(BucketReplicaRuleArrayOutput)
}

// The tags of a bucket.
func (o BucketOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Bucket) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// Enable bucket versioning. NOTE: The `multiAz` feature is true for the current bucket, cannot disable version control.
func (o BucketOutput) VersioningEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.VersioningEnable }).(pulumi.BoolPtrOutput)
}

// A website object(documented below).
func (o BucketOutput) Website() BucketWebsitePtrOutput {
	return o.ApplyT(func(v *Bucket) BucketWebsitePtrOutput { return v.Website }).(BucketWebsitePtrOutput)
}

type BucketArrayOutput struct{ *pulumi.OutputState }

func (BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bucket)(nil)).Elem()
}

func (o BucketArrayOutput) ToBucketArrayOutput() BucketArrayOutput {
	return o
}

func (o BucketArrayOutput) ToBucketArrayOutputWithContext(ctx context.Context) BucketArrayOutput {
	return o
}

func (o BucketArrayOutput) Index(i pulumi.IntInput) BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bucket {
		return vs[0].([]*Bucket)[vs[1].(int)]
	}).(BucketOutput)
}

type BucketMapOutput struct{ *pulumi.OutputState }

func (BucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bucket)(nil)).Elem()
}

func (o BucketMapOutput) ToBucketMapOutput() BucketMapOutput {
	return o
}

func (o BucketMapOutput) ToBucketMapOutputWithContext(ctx context.Context) BucketMapOutput {
	return o
}

func (o BucketMapOutput) MapIndex(k pulumi.StringInput) BucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bucket {
		return vs[0].(map[string]*Bucket)[vs[1].(string)]
	}).(BucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInput)(nil)).Elem(), &Bucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketArrayInput)(nil)).Elem(), BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMapInput)(nil)).Elem(), BucketMap{})
	pulumi.RegisterOutputType(BucketOutput{})
	pulumi.RegisterOutputType(BucketArrayOutput{})
	pulumi.RegisterOutputType(BucketMapOutput{})
}
