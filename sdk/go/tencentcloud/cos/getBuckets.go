// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query the COS buckets of the current Tencent Cloud user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cos.GetBuckets(ctx, &cos.GetBucketsArgs{
//				BucketPrefix:     pulumi.StringRef("tf-bucket-"),
//				ResultOutputFile: pulumi.StringRef("mytestpath"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBuckets(ctx *pulumi.Context, args *GetBucketsArgs, opts ...pulumi.InvokeOption) (*GetBucketsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetBucketsResult
	err := ctx.Invoke("tencentcloud:Cos/getBuckets:getBuckets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBuckets.
type GetBucketsArgs struct {
	// A prefix string to filter results by bucket name.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Tags to filter bucket.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getBuckets.
type GetBucketsResult struct {
	// A list of bucket. Each element contains the following attributes:
	BucketLists  []GetBucketsBucketList `pulumi:"bucketLists"`
	BucketPrefix *string                `pulumi:"bucketPrefix"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// The tags of a bucket.
	Tags map[string]interface{} `pulumi:"tags"`
}

func GetBucketsOutput(ctx *pulumi.Context, args GetBucketsOutputArgs, opts ...pulumi.InvokeOption) GetBucketsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBucketsResult, error) {
			args := v.(GetBucketsArgs)
			r, err := GetBuckets(ctx, &args, opts...)
			var s GetBucketsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBucketsResultOutput)
}

// A collection of arguments for invoking getBuckets.
type GetBucketsOutputArgs struct {
	// A prefix string to filter results by bucket name.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Tags to filter bucket.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetBucketsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsArgs)(nil)).Elem()
}

// A collection of values returned by getBuckets.
type GetBucketsResultOutput struct{ *pulumi.OutputState }

func (GetBucketsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsResult)(nil)).Elem()
}

func (o GetBucketsResultOutput) ToGetBucketsResultOutput() GetBucketsResultOutput {
	return o
}

func (o GetBucketsResultOutput) ToGetBucketsResultOutputWithContext(ctx context.Context) GetBucketsResultOutput {
	return o
}

// A list of bucket. Each element contains the following attributes:
func (o GetBucketsResultOutput) BucketLists() GetBucketsBucketListArrayOutput {
	return o.ApplyT(func(v GetBucketsResult) []GetBucketsBucketList { return v.BucketLists }).(GetBucketsBucketListArrayOutput)
}

func (o GetBucketsResultOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBucketsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBucketsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// The tags of a bucket.
func (o GetBucketsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBucketsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBucketsResultOutput{})
}
