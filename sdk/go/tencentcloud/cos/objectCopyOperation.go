// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to copy object
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cos.NewObjectCopyOperation(ctx, "objectCopy", &Cos.ObjectCopyOperationArgs{
//				Bucket:    pulumi.String("keep-copy-xxxxxxx"),
//				Key:       pulumi.String("copy-acl.txt"),
//				SourceUrl: pulumi.String("keep-test-xxxxxx.cos.ap-guangzhou.myqcloud.com/acl.txt"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ObjectCopyOperation struct {
	pulumi.CustomResourceState

	// Bucket.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Object key.
	Key pulumi.StringOutput `pulumi:"key"`
	// Object key.
	SourceUrl pulumi.StringOutput `pulumi:"sourceUrl"`
}

// NewObjectCopyOperation registers a new resource with the given unique name, arguments, and options.
func NewObjectCopyOperation(ctx *pulumi.Context,
	name string, args *ObjectCopyOperationArgs, opts ...pulumi.ResourceOption) (*ObjectCopyOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.SourceUrl == nil {
		return nil, errors.New("invalid value for required argument 'SourceUrl'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ObjectCopyOperation
	err := ctx.RegisterResource("tencentcloud:Cos/objectCopyOperation:ObjectCopyOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectCopyOperation gets an existing ObjectCopyOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectCopyOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectCopyOperationState, opts ...pulumi.ResourceOption) (*ObjectCopyOperation, error) {
	var resource ObjectCopyOperation
	err := ctx.ReadResource("tencentcloud:Cos/objectCopyOperation:ObjectCopyOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectCopyOperation resources.
type objectCopyOperationState struct {
	// Bucket.
	Bucket *string `pulumi:"bucket"`
	// Object key.
	Key *string `pulumi:"key"`
	// Object key.
	SourceUrl *string `pulumi:"sourceUrl"`
}

type ObjectCopyOperationState struct {
	// Bucket.
	Bucket pulumi.StringPtrInput
	// Object key.
	Key pulumi.StringPtrInput
	// Object key.
	SourceUrl pulumi.StringPtrInput
}

func (ObjectCopyOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectCopyOperationState)(nil)).Elem()
}

type objectCopyOperationArgs struct {
	// Bucket.
	Bucket string `pulumi:"bucket"`
	// Object key.
	Key string `pulumi:"key"`
	// Object key.
	SourceUrl string `pulumi:"sourceUrl"`
}

// The set of arguments for constructing a ObjectCopyOperation resource.
type ObjectCopyOperationArgs struct {
	// Bucket.
	Bucket pulumi.StringInput
	// Object key.
	Key pulumi.StringInput
	// Object key.
	SourceUrl pulumi.StringInput
}

func (ObjectCopyOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectCopyOperationArgs)(nil)).Elem()
}

type ObjectCopyOperationInput interface {
	pulumi.Input

	ToObjectCopyOperationOutput() ObjectCopyOperationOutput
	ToObjectCopyOperationOutputWithContext(ctx context.Context) ObjectCopyOperationOutput
}

func (*ObjectCopyOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectCopyOperation)(nil)).Elem()
}

func (i *ObjectCopyOperation) ToObjectCopyOperationOutput() ObjectCopyOperationOutput {
	return i.ToObjectCopyOperationOutputWithContext(context.Background())
}

func (i *ObjectCopyOperation) ToObjectCopyOperationOutputWithContext(ctx context.Context) ObjectCopyOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectCopyOperationOutput)
}

// ObjectCopyOperationArrayInput is an input type that accepts ObjectCopyOperationArray and ObjectCopyOperationArrayOutput values.
// You can construct a concrete instance of `ObjectCopyOperationArrayInput` via:
//
//	ObjectCopyOperationArray{ ObjectCopyOperationArgs{...} }
type ObjectCopyOperationArrayInput interface {
	pulumi.Input

	ToObjectCopyOperationArrayOutput() ObjectCopyOperationArrayOutput
	ToObjectCopyOperationArrayOutputWithContext(context.Context) ObjectCopyOperationArrayOutput
}

type ObjectCopyOperationArray []ObjectCopyOperationInput

func (ObjectCopyOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectCopyOperation)(nil)).Elem()
}

func (i ObjectCopyOperationArray) ToObjectCopyOperationArrayOutput() ObjectCopyOperationArrayOutput {
	return i.ToObjectCopyOperationArrayOutputWithContext(context.Background())
}

func (i ObjectCopyOperationArray) ToObjectCopyOperationArrayOutputWithContext(ctx context.Context) ObjectCopyOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectCopyOperationArrayOutput)
}

// ObjectCopyOperationMapInput is an input type that accepts ObjectCopyOperationMap and ObjectCopyOperationMapOutput values.
// You can construct a concrete instance of `ObjectCopyOperationMapInput` via:
//
//	ObjectCopyOperationMap{ "key": ObjectCopyOperationArgs{...} }
type ObjectCopyOperationMapInput interface {
	pulumi.Input

	ToObjectCopyOperationMapOutput() ObjectCopyOperationMapOutput
	ToObjectCopyOperationMapOutputWithContext(context.Context) ObjectCopyOperationMapOutput
}

type ObjectCopyOperationMap map[string]ObjectCopyOperationInput

func (ObjectCopyOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectCopyOperation)(nil)).Elem()
}

func (i ObjectCopyOperationMap) ToObjectCopyOperationMapOutput() ObjectCopyOperationMapOutput {
	return i.ToObjectCopyOperationMapOutputWithContext(context.Background())
}

func (i ObjectCopyOperationMap) ToObjectCopyOperationMapOutputWithContext(ctx context.Context) ObjectCopyOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectCopyOperationMapOutput)
}

type ObjectCopyOperationOutput struct{ *pulumi.OutputState }

func (ObjectCopyOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectCopyOperation)(nil)).Elem()
}

func (o ObjectCopyOperationOutput) ToObjectCopyOperationOutput() ObjectCopyOperationOutput {
	return o
}

func (o ObjectCopyOperationOutput) ToObjectCopyOperationOutputWithContext(ctx context.Context) ObjectCopyOperationOutput {
	return o
}

// Bucket.
func (o ObjectCopyOperationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopyOperation) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Object key.
func (o ObjectCopyOperationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopyOperation) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Object key.
func (o ObjectCopyOperationOutput) SourceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopyOperation) pulumi.StringOutput { return v.SourceUrl }).(pulumi.StringOutput)
}

type ObjectCopyOperationArrayOutput struct{ *pulumi.OutputState }

func (ObjectCopyOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectCopyOperation)(nil)).Elem()
}

func (o ObjectCopyOperationArrayOutput) ToObjectCopyOperationArrayOutput() ObjectCopyOperationArrayOutput {
	return o
}

func (o ObjectCopyOperationArrayOutput) ToObjectCopyOperationArrayOutputWithContext(ctx context.Context) ObjectCopyOperationArrayOutput {
	return o
}

func (o ObjectCopyOperationArrayOutput) Index(i pulumi.IntInput) ObjectCopyOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectCopyOperation {
		return vs[0].([]*ObjectCopyOperation)[vs[1].(int)]
	}).(ObjectCopyOperationOutput)
}

type ObjectCopyOperationMapOutput struct{ *pulumi.OutputState }

func (ObjectCopyOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectCopyOperation)(nil)).Elem()
}

func (o ObjectCopyOperationMapOutput) ToObjectCopyOperationMapOutput() ObjectCopyOperationMapOutput {
	return o
}

func (o ObjectCopyOperationMapOutput) ToObjectCopyOperationMapOutputWithContext(ctx context.Context) ObjectCopyOperationMapOutput {
	return o
}

func (o ObjectCopyOperationMapOutput) MapIndex(k pulumi.StringInput) ObjectCopyOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectCopyOperation {
		return vs[0].(map[string]*ObjectCopyOperation)[vs[1].(string)]
	}).(ObjectCopyOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectCopyOperationInput)(nil)).Elem(), &ObjectCopyOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectCopyOperationArrayInput)(nil)).Elem(), ObjectCopyOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectCopyOperationMapInput)(nil)).Elem(), ObjectCopyOperationMap{})
	pulumi.RegisterOutputType(ObjectCopyOperationOutput{})
	pulumi.RegisterOutputType(ObjectCopyOperationArrayOutput{})
	pulumi.RegisterOutputType(ObjectCopyOperationMapOutput{})
}
