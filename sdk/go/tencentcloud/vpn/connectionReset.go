// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a vpc vpnConnectionReset
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpn.NewConnectionReset(ctx, "vpnConnectionReset", &Vpn.ConnectionResetArgs{
//				VpnConnectionId: pulumi.String("vpnx-kme2tx8m"),
//				VpnGatewayId:    pulumi.String("vpngw-gt8bianl"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ConnectionReset struct {
	pulumi.CustomResourceState

	// VPN CONNECTION INSTANCE ID.
	VpnConnectionId pulumi.StringOutput `pulumi:"vpnConnectionId"`
	// VPN GATEWAY INSTANCE ID.
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
}

// NewConnectionReset registers a new resource with the given unique name, arguments, and options.
func NewConnectionReset(ctx *pulumi.Context,
	name string, args *ConnectionResetArgs, opts ...pulumi.ResourceOption) (*ConnectionReset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpnConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'VpnConnectionId'")
	}
	if args.VpnGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'VpnGatewayId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectionReset
	err := ctx.RegisterResource("tencentcloud:Vpn/connectionReset:ConnectionReset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionReset gets an existing ConnectionReset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionReset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionResetState, opts ...pulumi.ResourceOption) (*ConnectionReset, error) {
	var resource ConnectionReset
	err := ctx.ReadResource("tencentcloud:Vpn/connectionReset:ConnectionReset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionReset resources.
type connectionResetState struct {
	// VPN CONNECTION INSTANCE ID.
	VpnConnectionId *string `pulumi:"vpnConnectionId"`
	// VPN GATEWAY INSTANCE ID.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

type ConnectionResetState struct {
	// VPN CONNECTION INSTANCE ID.
	VpnConnectionId pulumi.StringPtrInput
	// VPN GATEWAY INSTANCE ID.
	VpnGatewayId pulumi.StringPtrInput
}

func (ConnectionResetState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionResetState)(nil)).Elem()
}

type connectionResetArgs struct {
	// VPN CONNECTION INSTANCE ID.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// VPN GATEWAY INSTANCE ID.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// The set of arguments for constructing a ConnectionReset resource.
type ConnectionResetArgs struct {
	// VPN CONNECTION INSTANCE ID.
	VpnConnectionId pulumi.StringInput
	// VPN GATEWAY INSTANCE ID.
	VpnGatewayId pulumi.StringInput
}

func (ConnectionResetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionResetArgs)(nil)).Elem()
}

type ConnectionResetInput interface {
	pulumi.Input

	ToConnectionResetOutput() ConnectionResetOutput
	ToConnectionResetOutputWithContext(ctx context.Context) ConnectionResetOutput
}

func (*ConnectionReset) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionReset)(nil)).Elem()
}

func (i *ConnectionReset) ToConnectionResetOutput() ConnectionResetOutput {
	return i.ToConnectionResetOutputWithContext(context.Background())
}

func (i *ConnectionReset) ToConnectionResetOutputWithContext(ctx context.Context) ConnectionResetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionResetOutput)
}

// ConnectionResetArrayInput is an input type that accepts ConnectionResetArray and ConnectionResetArrayOutput values.
// You can construct a concrete instance of `ConnectionResetArrayInput` via:
//
//	ConnectionResetArray{ ConnectionResetArgs{...} }
type ConnectionResetArrayInput interface {
	pulumi.Input

	ToConnectionResetArrayOutput() ConnectionResetArrayOutput
	ToConnectionResetArrayOutputWithContext(context.Context) ConnectionResetArrayOutput
}

type ConnectionResetArray []ConnectionResetInput

func (ConnectionResetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionReset)(nil)).Elem()
}

func (i ConnectionResetArray) ToConnectionResetArrayOutput() ConnectionResetArrayOutput {
	return i.ToConnectionResetArrayOutputWithContext(context.Background())
}

func (i ConnectionResetArray) ToConnectionResetArrayOutputWithContext(ctx context.Context) ConnectionResetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionResetArrayOutput)
}

// ConnectionResetMapInput is an input type that accepts ConnectionResetMap and ConnectionResetMapOutput values.
// You can construct a concrete instance of `ConnectionResetMapInput` via:
//
//	ConnectionResetMap{ "key": ConnectionResetArgs{...} }
type ConnectionResetMapInput interface {
	pulumi.Input

	ToConnectionResetMapOutput() ConnectionResetMapOutput
	ToConnectionResetMapOutputWithContext(context.Context) ConnectionResetMapOutput
}

type ConnectionResetMap map[string]ConnectionResetInput

func (ConnectionResetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionReset)(nil)).Elem()
}

func (i ConnectionResetMap) ToConnectionResetMapOutput() ConnectionResetMapOutput {
	return i.ToConnectionResetMapOutputWithContext(context.Background())
}

func (i ConnectionResetMap) ToConnectionResetMapOutputWithContext(ctx context.Context) ConnectionResetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionResetMapOutput)
}

type ConnectionResetOutput struct{ *pulumi.OutputState }

func (ConnectionResetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionReset)(nil)).Elem()
}

func (o ConnectionResetOutput) ToConnectionResetOutput() ConnectionResetOutput {
	return o
}

func (o ConnectionResetOutput) ToConnectionResetOutputWithContext(ctx context.Context) ConnectionResetOutput {
	return o
}

// VPN CONNECTION INSTANCE ID.
func (o ConnectionResetOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionReset) pulumi.StringOutput { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// VPN GATEWAY INSTANCE ID.
func (o ConnectionResetOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionReset) pulumi.StringOutput { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type ConnectionResetArrayOutput struct{ *pulumi.OutputState }

func (ConnectionResetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionReset)(nil)).Elem()
}

func (o ConnectionResetArrayOutput) ToConnectionResetArrayOutput() ConnectionResetArrayOutput {
	return o
}

func (o ConnectionResetArrayOutput) ToConnectionResetArrayOutputWithContext(ctx context.Context) ConnectionResetArrayOutput {
	return o
}

func (o ConnectionResetArrayOutput) Index(i pulumi.IntInput) ConnectionResetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectionReset {
		return vs[0].([]*ConnectionReset)[vs[1].(int)]
	}).(ConnectionResetOutput)
}

type ConnectionResetMapOutput struct{ *pulumi.OutputState }

func (ConnectionResetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionReset)(nil)).Elem()
}

func (o ConnectionResetMapOutput) ToConnectionResetMapOutput() ConnectionResetMapOutput {
	return o
}

func (o ConnectionResetMapOutput) ToConnectionResetMapOutputWithContext(ctx context.Context) ConnectionResetMapOutput {
	return o
}

func (o ConnectionResetMapOutput) MapIndex(k pulumi.StringInput) ConnectionResetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectionReset {
		return vs[0].(map[string]*ConnectionReset)[vs[1].(string)]
	}).(ConnectionResetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionResetInput)(nil)).Elem(), &ConnectionReset{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionResetArrayInput)(nil)).Elem(), ConnectionResetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionResetMapInput)(nil)).Elem(), ConnectionResetMap{})
	pulumi.RegisterOutputType(ConnectionResetOutput{})
	pulumi.RegisterOutputType(ConnectionResetArrayOutput{})
	pulumi.RegisterOutputType(ConnectionResetMapOutput{})
}
