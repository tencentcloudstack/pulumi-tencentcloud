// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of VPN gateways.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Vpn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpn.GetGateways(ctx, &vpn.GetGatewaysArgs{
//				Id:              pulumi.StringRef("vpngw-8ccsnclt"),
//				Name:            pulumi.StringRef("main"),
//				PublicIpAddress: pulumi.StringRef("1.1.1.1"),
//				Tags: map[string]interface{}{
//					"test": "tf",
//				},
//				VpcId: pulumi.StringRef("vpc-dk8zmwuf"),
//				Zone:  pulumi.StringRef("ap-guangzhou-3"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGateways(ctx *pulumi.Context, args *GetGatewaysArgs, opts ...pulumi.InvokeOption) (*GetGatewaysResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetGatewaysResult
	err := ctx.Invoke("tencentcloud:Vpn/getGateways:getGateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGateways.
type GetGatewaysArgs struct {
	// ID of the VPN gateway.
	Id *string `pulumi:"id"`
	// Name of the VPN gateway. The length of character is limited to 1-60.
	Name *string `pulumi:"name"`
	// Public ip address of the VPN gateway.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Tags of the VPN gateway to be queried.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
	// Zone of the VPN gateway.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getGateways.
type GetGatewaysResult struct {
	// Information list of the dedicated gateways.
	GatewayLists []GetGatewaysGatewayList `pulumi:"gatewayLists"`
	// ID of the VPN gateway.
	Id *string `pulumi:"id"`
	// Name of the VPN gateway.
	Name *string `pulumi:"name"`
	// Public ip of the VPN gateway.
	PublicIpAddress  *string `pulumi:"publicIpAddress"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// A list of tags used to associate different resources.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
	// Zone of the VPN gateway.
	Zone *string `pulumi:"zone"`
}

func GetGatewaysOutput(ctx *pulumi.Context, args GetGatewaysOutputArgs, opts ...pulumi.InvokeOption) GetGatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGatewaysResult, error) {
			args := v.(GetGatewaysArgs)
			r, err := GetGateways(ctx, &args, opts...)
			var s GetGatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGatewaysResultOutput)
}

// A collection of arguments for invoking getGateways.
type GetGatewaysOutputArgs struct {
	// ID of the VPN gateway.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the VPN gateway. The length of character is limited to 1-60.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Public ip address of the VPN gateway.
	PublicIpAddress pulumi.StringPtrInput `pulumi:"publicIpAddress"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Tags of the VPN gateway to be queried.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// Zone of the VPN gateway.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetGatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysArgs)(nil)).Elem()
}

// A collection of values returned by getGateways.
type GetGatewaysResultOutput struct{ *pulumi.OutputState }

func (GetGatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysResult)(nil)).Elem()
}

func (o GetGatewaysResultOutput) ToGetGatewaysResultOutput() GetGatewaysResultOutput {
	return o
}

func (o GetGatewaysResultOutput) ToGetGatewaysResultOutputWithContext(ctx context.Context) GetGatewaysResultOutput {
	return o
}

// Information list of the dedicated gateways.
func (o GetGatewaysResultOutput) GatewayLists() GetGatewaysGatewayListArrayOutput {
	return o.ApplyT(func(v GetGatewaysResult) []GetGatewaysGatewayList { return v.GatewayLists }).(GetGatewaysGatewayListArrayOutput)
}

// ID of the VPN gateway.
func (o GetGatewaysResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the VPN gateway.
func (o GetGatewaysResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Public ip of the VPN gateway.
func (o GetGatewaysResultOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

func (o GetGatewaysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// A list of tags used to associate different resources.
func (o GetGatewaysResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGatewaysResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC.
func (o GetGatewaysResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// Zone of the VPN gateway.
func (o GetGatewaysResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGatewaysResultOutput{})
}
