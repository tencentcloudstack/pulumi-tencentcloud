// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query API gateway usage plans.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/ApiGateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/ApiGateway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			plan, err := ApiGateway.NewUsagePlan(ctx, "plan", &ApiGateway.UsagePlanArgs{
//				UsagePlanName:       pulumi.String("my_plan"),
//				UsagePlanDesc:       pulumi.String("nice plan"),
//				MaxRequestNum:       pulumi.Int(100),
//				MaxRequestNumPreSec: pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			_ = ApiGateway.GetUsagePlansOutput(ctx, apigateway.GetUsagePlansOutputArgs{
//				UsagePlanName: plan.UsagePlanName,
//			}, nil)
//			_ = ApiGateway.GetUsagePlansOutput(ctx, apigateway.GetUsagePlansOutputArgs{
//				UsagePlanId: plan.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetUsagePlans(ctx *pulumi.Context, args *GetUsagePlansArgs, opts ...pulumi.InvokeOption) (*GetUsagePlansResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetUsagePlansResult
	err := ctx.Invoke("tencentcloud:ApiGateway/getUsagePlans:getUsagePlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsagePlans.
type GetUsagePlansArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// ID of the usage plan.
	UsagePlanId *string `pulumi:"usagePlanId"`
	// Name of the usage plan.
	UsagePlanName *string `pulumi:"usagePlanName"`
}

// A collection of values returned by getUsagePlans.
type GetUsagePlansResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of usage plans.
	Lists            []GetUsagePlansList `pulumi:"lists"`
	ResultOutputFile *string             `pulumi:"resultOutputFile"`
	// ID of the usage plan.
	UsagePlanId *string `pulumi:"usagePlanId"`
	// Name of the usage plan.
	UsagePlanName *string `pulumi:"usagePlanName"`
}

func GetUsagePlansOutput(ctx *pulumi.Context, args GetUsagePlansOutputArgs, opts ...pulumi.InvokeOption) GetUsagePlansResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsagePlansResult, error) {
			args := v.(GetUsagePlansArgs)
			r, err := GetUsagePlans(ctx, &args, opts...)
			var s GetUsagePlansResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsagePlansResultOutput)
}

// A collection of arguments for invoking getUsagePlans.
type GetUsagePlansOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// ID of the usage plan.
	UsagePlanId pulumi.StringPtrInput `pulumi:"usagePlanId"`
	// Name of the usage plan.
	UsagePlanName pulumi.StringPtrInput `pulumi:"usagePlanName"`
}

func (GetUsagePlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsagePlansArgs)(nil)).Elem()
}

// A collection of values returned by getUsagePlans.
type GetUsagePlansResultOutput struct{ *pulumi.OutputState }

func (GetUsagePlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsagePlansResult)(nil)).Elem()
}

func (o GetUsagePlansResultOutput) ToGetUsagePlansResultOutput() GetUsagePlansResultOutput {
	return o
}

func (o GetUsagePlansResultOutput) ToGetUsagePlansResultOutputWithContext(ctx context.Context) GetUsagePlansResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsagePlansResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsagePlansResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of usage plans.
func (o GetUsagePlansResultOutput) Lists() GetUsagePlansListArrayOutput {
	return o.ApplyT(func(v GetUsagePlansResult) []GetUsagePlansList { return v.Lists }).(GetUsagePlansListArrayOutput)
}

func (o GetUsagePlansResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlansResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// ID of the usage plan.
func (o GetUsagePlansResultOutput) UsagePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlansResult) *string { return v.UsagePlanId }).(pulumi.StringPtrOutput)
}

// Name of the usage plan.
func (o GetUsagePlansResultOutput) UsagePlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlansResult) *string { return v.UsagePlanName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsagePlansResultOutput{})
}
