// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query API gateway APIs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/ApiGateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/ApiGateway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			service, err := ApiGateway.NewService(ctx, "service", &ApiGateway.ServiceArgs{
//				ServiceName: pulumi.String("ck"),
//				Protocol:    pulumi.String("http&https"),
//				ServiceDesc: pulumi.String("your nice service"),
//				NetTypes: pulumi.StringArray{
//					pulumi.String("INNER"),
//					pulumi.String("OUTER"),
//				},
//				IpVersion: pulumi.String("IPv4"),
//			})
//			if err != nil {
//				return err
//			}
//			api, err := ApiGateway.NewApi(ctx, "api", &ApiGateway.ApiArgs{
//				ServiceId:              service.ID(),
//				ApiName:                pulumi.String("hello"),
//				ApiDesc:                pulumi.String("my hello api"),
//				AuthType:               pulumi.String("NONE"),
//				Protocol:               pulumi.String("HTTP"),
//				EnableCors:             pulumi.Bool(true),
//				RequestConfigPath:      pulumi.String("/user/info"),
//				RequestConfigMethod:    pulumi.String("GET"),
//				ServiceConfigType:      pulumi.String("HTTP"),
//				ServiceConfigTimeout:   pulumi.Int(15),
//				ServiceConfigUrl:       pulumi.String("http://www.qq.com"),
//				ServiceConfigPath:      pulumi.String("/user"),
//				ServiceConfigMethod:    pulumi.String("GET"),
//				ResponseType:           pulumi.String("HTML"),
//				ResponseSuccessExample: pulumi.String("success"),
//				ResponseFailExample:    pulumi.String("fail"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = ApiGateway.GetApisOutput(ctx, apigateway.GetApisOutputArgs{
//				ServiceId: service.ID(),
//				ApiId:     api.ID(),
//			}, nil)
//			_ = ApiGateway.GetApisOutput(ctx, apigateway.GetApisOutputArgs{
//				ServiceId: service.ID(),
//				ApiName:   api.ApiName,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetApis(ctx *pulumi.Context, args *GetApisArgs, opts ...pulumi.InvokeOption) (*GetApisResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetApisResult
	err := ctx.Invoke("tencentcloud:ApiGateway/getApis:getApis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApis.
type GetApisArgs struct {
	// Created API ID.
	ApiId *string `pulumi:"apiId"`
	// Custom API name.
	ApiName *string `pulumi:"apiName"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Service ID for query.
	ServiceId string `pulumi:"serviceId"`
}

// A collection of values returned by getApis.
type GetApisResult struct {
	ApiId *string `pulumi:"apiId"`
	// Custom API name.
	ApiName *string `pulumi:"apiName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of APIs.
	Lists            []GetApisList `pulumi:"lists"`
	ResultOutputFile *string       `pulumi:"resultOutputFile"`
	// Which service this API belongs. Refer to resource `ApiGateway.Service`.
	ServiceId string `pulumi:"serviceId"`
}

func GetApisOutput(ctx *pulumi.Context, args GetApisOutputArgs, opts ...pulumi.InvokeOption) GetApisResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetApisResult, error) {
			args := v.(GetApisArgs)
			r, err := GetApis(ctx, &args, opts...)
			var s GetApisResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetApisResultOutput)
}

// A collection of arguments for invoking getApis.
type GetApisOutputArgs struct {
	// Created API ID.
	ApiId pulumi.StringPtrInput `pulumi:"apiId"`
	// Custom API name.
	ApiName pulumi.StringPtrInput `pulumi:"apiName"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Service ID for query.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (GetApisOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApisArgs)(nil)).Elem()
}

// A collection of values returned by getApis.
type GetApisResultOutput struct{ *pulumi.OutputState }

func (GetApisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApisResult)(nil)).Elem()
}

func (o GetApisResultOutput) ToGetApisResultOutput() GetApisResultOutput {
	return o
}

func (o GetApisResultOutput) ToGetApisResultOutputWithContext(ctx context.Context) GetApisResultOutput {
	return o
}

func (o GetApisResultOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApisResult) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

// Custom API name.
func (o GetApisResultOutput) ApiName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApisResult) *string { return v.ApiName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetApisResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of APIs.
func (o GetApisResultOutput) Lists() GetApisListArrayOutput {
	return o.ApplyT(func(v GetApisResult) []GetApisList { return v.Lists }).(GetApisListArrayOutput)
}

func (o GetApisResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApisResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Which service this API belongs. Refer to resource `ApiGateway.Service`.
func (o GetApisResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApisResultOutput{})
}
