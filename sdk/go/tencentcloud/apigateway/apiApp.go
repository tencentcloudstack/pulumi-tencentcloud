// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a APIGateway ApiApp
//
// ## Example Usage
// ### Create a basic apigateway apiApp
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/ApiGateway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ApiGateway.NewApiApp(ctx, "example", &ApiGateway.ApiAppArgs{
//				ApiAppDesc: pulumi.String("app desc."),
//				ApiAppName: pulumi.String("tf_example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Bind Tag
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/ApiGateway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ApiGateway.NewApiApp(ctx, "example", &ApiGateway.ApiAppArgs{
//				ApiAppDesc: pulumi.String("app desc."),
//				ApiAppName: pulumi.String("tf_example"),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// apigateway api_app can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:ApiGateway/apiApp:ApiApp example app-poe0pyex
//
// ```
type ApiApp struct {
	pulumi.CustomResourceState

	// App description.
	ApiAppDesc pulumi.StringOutput `pulumi:"apiAppDesc"`
	// Api app ID.
	ApiAppId pulumi.StringOutput `pulumi:"apiAppId"`
	// Api app key.
	ApiAppKey pulumi.StringOutput `pulumi:"apiAppKey"`
	// Api app name.
	ApiAppName pulumi.StringOutput `pulumi:"apiAppName"`
	// Api app secret.
	ApiAppSecret pulumi.StringOutput `pulumi:"apiAppSecret"`
	// Api app created time.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// Api app modified time.
	ModifiedTime pulumi.StringOutput `pulumi:"modifiedTime"`
	// Tag description list.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewApiApp registers a new resource with the given unique name, arguments, and options.
func NewApiApp(ctx *pulumi.Context,
	name string, args *ApiAppArgs, opts ...pulumi.ResourceOption) (*ApiApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiAppName == nil {
		return nil, errors.New("invalid value for required argument 'ApiAppName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ApiApp
	err := ctx.RegisterResource("tencentcloud:ApiGateway/apiApp:ApiApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiApp gets an existing ApiApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiAppState, opts ...pulumi.ResourceOption) (*ApiApp, error) {
	var resource ApiApp
	err := ctx.ReadResource("tencentcloud:ApiGateway/apiApp:ApiApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiApp resources.
type apiAppState struct {
	// App description.
	ApiAppDesc *string `pulumi:"apiAppDesc"`
	// Api app ID.
	ApiAppId *string `pulumi:"apiAppId"`
	// Api app key.
	ApiAppKey *string `pulumi:"apiAppKey"`
	// Api app name.
	ApiAppName *string `pulumi:"apiAppName"`
	// Api app secret.
	ApiAppSecret *string `pulumi:"apiAppSecret"`
	// Api app created time.
	CreatedTime *string `pulumi:"createdTime"`
	// Api app modified time.
	ModifiedTime *string `pulumi:"modifiedTime"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
}

type ApiAppState struct {
	// App description.
	ApiAppDesc pulumi.StringPtrInput
	// Api app ID.
	ApiAppId pulumi.StringPtrInput
	// Api app key.
	ApiAppKey pulumi.StringPtrInput
	// Api app name.
	ApiAppName pulumi.StringPtrInput
	// Api app secret.
	ApiAppSecret pulumi.StringPtrInput
	// Api app created time.
	CreatedTime pulumi.StringPtrInput
	// Api app modified time.
	ModifiedTime pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
}

func (ApiAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiAppState)(nil)).Elem()
}

type apiAppArgs struct {
	// App description.
	ApiAppDesc *string `pulumi:"apiAppDesc"`
	// Api app name.
	ApiAppName string `pulumi:"apiAppName"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a ApiApp resource.
type ApiAppArgs struct {
	// App description.
	ApiAppDesc pulumi.StringPtrInput
	// Api app name.
	ApiAppName pulumi.StringInput
	// Tag description list.
	Tags pulumi.MapInput
}

func (ApiAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiAppArgs)(nil)).Elem()
}

type ApiAppInput interface {
	pulumi.Input

	ToApiAppOutput() ApiAppOutput
	ToApiAppOutputWithContext(ctx context.Context) ApiAppOutput
}

func (*ApiApp) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiApp)(nil)).Elem()
}

func (i *ApiApp) ToApiAppOutput() ApiAppOutput {
	return i.ToApiAppOutputWithContext(context.Background())
}

func (i *ApiApp) ToApiAppOutputWithContext(ctx context.Context) ApiAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiAppOutput)
}

// ApiAppArrayInput is an input type that accepts ApiAppArray and ApiAppArrayOutput values.
// You can construct a concrete instance of `ApiAppArrayInput` via:
//
//	ApiAppArray{ ApiAppArgs{...} }
type ApiAppArrayInput interface {
	pulumi.Input

	ToApiAppArrayOutput() ApiAppArrayOutput
	ToApiAppArrayOutputWithContext(context.Context) ApiAppArrayOutput
}

type ApiAppArray []ApiAppInput

func (ApiAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiApp)(nil)).Elem()
}

func (i ApiAppArray) ToApiAppArrayOutput() ApiAppArrayOutput {
	return i.ToApiAppArrayOutputWithContext(context.Background())
}

func (i ApiAppArray) ToApiAppArrayOutputWithContext(ctx context.Context) ApiAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiAppArrayOutput)
}

// ApiAppMapInput is an input type that accepts ApiAppMap and ApiAppMapOutput values.
// You can construct a concrete instance of `ApiAppMapInput` via:
//
//	ApiAppMap{ "key": ApiAppArgs{...} }
type ApiAppMapInput interface {
	pulumi.Input

	ToApiAppMapOutput() ApiAppMapOutput
	ToApiAppMapOutputWithContext(context.Context) ApiAppMapOutput
}

type ApiAppMap map[string]ApiAppInput

func (ApiAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiApp)(nil)).Elem()
}

func (i ApiAppMap) ToApiAppMapOutput() ApiAppMapOutput {
	return i.ToApiAppMapOutputWithContext(context.Background())
}

func (i ApiAppMap) ToApiAppMapOutputWithContext(ctx context.Context) ApiAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiAppMapOutput)
}

type ApiAppOutput struct{ *pulumi.OutputState }

func (ApiAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiApp)(nil)).Elem()
}

func (o ApiAppOutput) ToApiAppOutput() ApiAppOutput {
	return o
}

func (o ApiAppOutput) ToApiAppOutputWithContext(ctx context.Context) ApiAppOutput {
	return o
}

// App description.
func (o ApiAppOutput) ApiAppDesc() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.ApiAppDesc }).(pulumi.StringOutput)
}

// Api app ID.
func (o ApiAppOutput) ApiAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.ApiAppId }).(pulumi.StringOutput)
}

// Api app key.
func (o ApiAppOutput) ApiAppKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.ApiAppKey }).(pulumi.StringOutput)
}

// Api app name.
func (o ApiAppOutput) ApiAppName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.ApiAppName }).(pulumi.StringOutput)
}

// Api app secret.
func (o ApiAppOutput) ApiAppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.ApiAppSecret }).(pulumi.StringOutput)
}

// Api app created time.
func (o ApiAppOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// Api app modified time.
func (o ApiAppOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.StringOutput { return v.ModifiedTime }).(pulumi.StringOutput)
}

// Tag description list.
func (o ApiAppOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *ApiApp) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

type ApiAppArrayOutput struct{ *pulumi.OutputState }

func (ApiAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiApp)(nil)).Elem()
}

func (o ApiAppArrayOutput) ToApiAppArrayOutput() ApiAppArrayOutput {
	return o
}

func (o ApiAppArrayOutput) ToApiAppArrayOutputWithContext(ctx context.Context) ApiAppArrayOutput {
	return o
}

func (o ApiAppArrayOutput) Index(i pulumi.IntInput) ApiAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiApp {
		return vs[0].([]*ApiApp)[vs[1].(int)]
	}).(ApiAppOutput)
}

type ApiAppMapOutput struct{ *pulumi.OutputState }

func (ApiAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiApp)(nil)).Elem()
}

func (o ApiAppMapOutput) ToApiAppMapOutput() ApiAppMapOutput {
	return o
}

func (o ApiAppMapOutput) ToApiAppMapOutputWithContext(ctx context.Context) ApiAppMapOutput {
	return o
}

func (o ApiAppMapOutput) MapIndex(k pulumi.StringInput) ApiAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiApp {
		return vs[0].(map[string]*ApiApp)[vs[1].(string)]
	}).(ApiAppOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAppInput)(nil)).Elem(), &ApiApp{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAppArrayInput)(nil)).Elem(), ApiAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAppMapInput)(nil)).Elem(), ApiAppMap{})
	pulumi.RegisterOutputType(ApiAppOutput{})
	pulumi.RegisterOutputType(ApiAppArrayOutput{})
	pulumi.RegisterOutputType(ApiAppMapOutput{})
}
