// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query dayu new layer 4 rules
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dayu"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dayu"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dayu.GetL4RulesV2(ctx, &dayu.GetL4RulesV2Args{
//				Business: "bgpip",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetL4RulesV2(ctx *pulumi.Context, args *GetL4RulesV2Args, opts ...pulumi.InvokeOption) (*GetL4RulesV2Result, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetL4RulesV2Result
	err := ctx.Invoke("tencentcloud:Dayu/getL4RulesV2:getL4RulesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getL4RulesV2.
type GetL4RulesV2Args struct {
	// Type of the resource that the layer 4 rule works for, valid values are `bgpip`, `bgp`, `bgp-multip` and `net`.
	Business string `pulumi:"business"`
	// Ip of the resource.
	Ip *string `pulumi:"ip"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Virtual port of resource.
	VirtualPort *int `pulumi:"virtualPort"`
}

// A collection of values returned by getL4RulesV2.
type GetL4RulesV2Result struct {
	Business string `pulumi:"business"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Bind the resource IP information.
	Ip *string `pulumi:"ip"`
	// A list of layer 4 rules. Each element contains the following attributes:
	Lists            []GetL4RulesV2List `pulumi:"lists"`
	ResultOutputFile *string            `pulumi:"resultOutputFile"`
	// The virtual port of the layer 4 rule.
	VirtualPort *int `pulumi:"virtualPort"`
}

func GetL4RulesV2Output(ctx *pulumi.Context, args GetL4RulesV2OutputArgs, opts ...pulumi.InvokeOption) GetL4RulesV2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetL4RulesV2Result, error) {
			args := v.(GetL4RulesV2Args)
			r, err := GetL4RulesV2(ctx, &args, opts...)
			var s GetL4RulesV2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetL4RulesV2ResultOutput)
}

// A collection of arguments for invoking getL4RulesV2.
type GetL4RulesV2OutputArgs struct {
	// Type of the resource that the layer 4 rule works for, valid values are `bgpip`, `bgp`, `bgp-multip` and `net`.
	Business pulumi.StringInput `pulumi:"business"`
	// Ip of the resource.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Virtual port of resource.
	VirtualPort pulumi.IntPtrInput `pulumi:"virtualPort"`
}

func (GetL4RulesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetL4RulesV2Args)(nil)).Elem()
}

// A collection of values returned by getL4RulesV2.
type GetL4RulesV2ResultOutput struct{ *pulumi.OutputState }

func (GetL4RulesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetL4RulesV2Result)(nil)).Elem()
}

func (o GetL4RulesV2ResultOutput) ToGetL4RulesV2ResultOutput() GetL4RulesV2ResultOutput {
	return o
}

func (o GetL4RulesV2ResultOutput) ToGetL4RulesV2ResultOutputWithContext(ctx context.Context) GetL4RulesV2ResultOutput {
	return o
}

func (o GetL4RulesV2ResultOutput) Business() pulumi.StringOutput {
	return o.ApplyT(func(v GetL4RulesV2Result) string { return v.Business }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetL4RulesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetL4RulesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// Bind the resource IP information.
func (o GetL4RulesV2ResultOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL4RulesV2Result) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// A list of layer 4 rules. Each element contains the following attributes:
func (o GetL4RulesV2ResultOutput) Lists() GetL4RulesV2ListArrayOutput {
	return o.ApplyT(func(v GetL4RulesV2Result) []GetL4RulesV2List { return v.Lists }).(GetL4RulesV2ListArrayOutput)
}

func (o GetL4RulesV2ResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL4RulesV2Result) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// The virtual port of the layer 4 rule.
func (o GetL4RulesV2ResultOutput) VirtualPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetL4RulesV2Result) *int { return v.VirtualPort }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetL4RulesV2ResultOutput{})
}
