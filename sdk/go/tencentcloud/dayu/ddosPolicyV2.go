// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to create dayu DDoS policy v2
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dayu"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dayu"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dayu.NewDdosPolicyV2(ctx, "ddosV2", &Dayu.DdosPolicyV2Args{
//				Acls: dayu.DdosPolicyV2AclArray{
//					&dayu.DdosPolicyV2AclArgs{
//						Action:          pulumi.String("transmit"),
//						DPortEnd:        pulumi.Int(10),
//						DPortStart:      pulumi.Int(1),
//						ForwardProtocol: pulumi.String("all"),
//						Priority:        pulumi.Int(9),
//						SPortEnd:        pulumi.Int(20),
//						SPortStart:      pulumi.Int(10),
//					},
//				},
//				BlackWhiteIps: dayu.DdosPolicyV2BlackWhiteIpArray{
//					&dayu.DdosPolicyV2BlackWhiteIpArgs{
//						Ip:     pulumi.String("1.2.3.4"),
//						IpType: pulumi.String("black"),
//					},
//				},
//				Business: pulumi.String("bgpip"),
//				DdosAi:   pulumi.String("on"),
//				DdosConnectLimit: &dayu.DdosPolicyV2DdosConnectLimitArgs{
//					BadConnThreshold: pulumi.Int(30),
//					ConnTimeout:      pulumi.Int(30),
//					DstConnLimit:     pulumi.Int(21),
//					DstNewLimit:      pulumi.Int(20),
//					NullConnEnable:   pulumi.Int(1),
//					SdConnLimit:      pulumi.Int(11),
//					SdNewLimit:       pulumi.Int(10),
//					SynLimit:         pulumi.Int(20),
//					SynRate:          pulumi.Int(10),
//				},
//				DdosGeoIpBlockConfigs: dayu.DdosPolicyV2DdosGeoIpBlockConfigArray{
//					&dayu.DdosPolicyV2DdosGeoIpBlockConfigArgs{
//						Action: pulumi.String("drop"),
//						AreaLists: pulumi.IntArray{
//							pulumi.Int(100001),
//						},
//						RegionType: pulumi.String("customized"),
//					},
//				},
//				DdosLevel: pulumi.String("low"),
//				DdosSpeedLimitConfigs: dayu.DdosPolicyV2DdosSpeedLimitConfigArray{
//					&dayu.DdosPolicyV2DdosSpeedLimitConfigArgs{
//						Bandwidth:    pulumi.Int(20),
//						DstPortList:  pulumi.String("10"),
//						Mode:         pulumi.Int(1),
//						PacketRate:   pulumi.Int(10),
//						ProtocolList: pulumi.String("TCP"),
//					},
//				},
//				DdosThreshold: pulumi.Int(100),
//				PacketFilters: dayu.DdosPolicyV2PacketFilterArray{
//					&dayu.DdosPolicyV2PacketFilterArgs{
//						Action:      pulumi.String("drop"),
//						DPortEnd:    pulumi.Int(20),
//						DPortStart:  pulumi.Int(20),
//						Depth:       pulumi.Int(2),
//						Depth2:      pulumi.Int(3),
//						IsNot:       pulumi.Int(0),
//						IsNot2:      pulumi.Int(0),
//						MatchBegin:  pulumi.String("begin_l3"),
//						MatchBegin2: pulumi.String("begin_l3"),
//						MatchLogic:  pulumi.String("and"),
//						MatchType:   pulumi.String("pcre"),
//						MatchType2:  pulumi.String("pcre"),
//						Offset:      pulumi.Int(1),
//						Offset2:     pulumi.Int(2),
//						PktlenMax:   pulumi.Int(30),
//						PktlenMin:   pulumi.Int(30),
//						Protocol:    pulumi.String("all"),
//						SPortEnd:    pulumi.Int(10),
//						SPortStart:  pulumi.Int(10),
//						Str:         pulumi.String("12"),
//						Str2:        pulumi.String("30"),
//					},
//				},
//				ProtocolBlockConfigs: dayu.DdosPolicyV2ProtocolBlockConfigArray{
//					&dayu.DdosPolicyV2ProtocolBlockConfigArgs{
//						DropIcmp:  pulumi.Int(1),
//						DropOther: pulumi.Int(0),
//						DropTcp:   pulumi.Int(0),
//						DropUdp:   pulumi.Int(0),
//					},
//				},
//				ResourceId: pulumi.String("bgpip-000004xf"),
//				WaterPrintConfigs: dayu.DdosPolicyV2WaterPrintConfigArray{
//					&dayu.DdosPolicyV2WaterPrintConfigArgs{
//						Listeners: dayu.DdosPolicyV2WaterPrintConfigListenerArray{
//							&dayu.DdosPolicyV2WaterPrintConfigListenerArgs{
//								ForwardProtocol: pulumi.String("TCP"),
//								FrontendPort:    pulumi.Int(90),
//								FrontendPortEnd: pulumi.Int(90),
//							},
//						},
//						Offset:     pulumi.Int(1),
//						OpenStatus: pulumi.Int(1),
//						Verify:     pulumi.String("checkall"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DdosPolicyV2 struct {
	pulumi.CustomResourceState

	// Port ACL policy for DDoS protection.
	Acls DdosPolicyV2AclArrayOutput `pulumi:"acls"`
	// DDoS-protected IP blacklist and whitelist.
	BlackWhiteIps DdosPolicyV2BlackWhiteIpArrayOutput `pulumi:"blackWhiteIps"`
	// Business of resource instance. bgpip indicates anti-anti-ip ip; bgp means exclusive package; bgp-multip means shared packet; net indicates anti-anti-ip pro version.
	Business pulumi.StringPtrOutput `pulumi:"business"`
	// AI protection switch, take the value [`on`, `off`].
	DdosAi pulumi.StringPtrOutput `pulumi:"ddosAi"`
	// DDoS connection suppression options.
	DdosConnectLimit DdosPolicyV2DdosConnectLimitPtrOutput `pulumi:"ddosConnectLimit"`
	// DDoS-protected area block configuration.
	DdosGeoIpBlockConfigs DdosPolicyV2DdosGeoIpBlockConfigArrayOutput `pulumi:"ddosGeoIpBlockConfigs"`
	// Protection class, value [`low`, `middle`, `high`].
	DdosLevel pulumi.StringPtrOutput `pulumi:"ddosLevel"`
	// Access speed limit configuration for DDoS protection.
	DdosSpeedLimitConfigs DdosPolicyV2DdosSpeedLimitConfigArrayOutput `pulumi:"ddosSpeedLimitConfigs"`
	// DDoS cleaning threshold, value[0, 60, 80, 100, 150, 200, 250, 300, 400, 500, 700, 1000]; When the value is set to 0, it means that the default value is adopted.
	DdosThreshold pulumi.IntPtrOutput `pulumi:"ddosThreshold"`
	// Feature filtering rules for DDoS protection.
	PacketFilters DdosPolicyV2PacketFilterArrayOutput `pulumi:"packetFilters"`
	// Protocol block configuration for DDoS protection.
	ProtocolBlockConfigs DdosPolicyV2ProtocolBlockConfigArrayOutput `pulumi:"protocolBlockConfigs"`
	// The ID of the resource instance.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// Water print config.
	WaterPrintConfigs DdosPolicyV2WaterPrintConfigArrayOutput `pulumi:"waterPrintConfigs"`
}

// NewDdosPolicyV2 registers a new resource with the given unique name, arguments, and options.
func NewDdosPolicyV2(ctx *pulumi.Context,
	name string, args *DdosPolicyV2Args, opts ...pulumi.ResourceOption) (*DdosPolicyV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DdosPolicyV2
	err := ctx.RegisterResource("tencentcloud:Dayu/ddosPolicyV2:DdosPolicyV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDdosPolicyV2 gets an existing DdosPolicyV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDdosPolicyV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DdosPolicyV2State, opts ...pulumi.ResourceOption) (*DdosPolicyV2, error) {
	var resource DdosPolicyV2
	err := ctx.ReadResource("tencentcloud:Dayu/ddosPolicyV2:DdosPolicyV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DdosPolicyV2 resources.
type ddosPolicyV2State struct {
	// Port ACL policy for DDoS protection.
	Acls []DdosPolicyV2Acl `pulumi:"acls"`
	// DDoS-protected IP blacklist and whitelist.
	BlackWhiteIps []DdosPolicyV2BlackWhiteIp `pulumi:"blackWhiteIps"`
	// Business of resource instance. bgpip indicates anti-anti-ip ip; bgp means exclusive package; bgp-multip means shared packet; net indicates anti-anti-ip pro version.
	Business *string `pulumi:"business"`
	// AI protection switch, take the value [`on`, `off`].
	DdosAi *string `pulumi:"ddosAi"`
	// DDoS connection suppression options.
	DdosConnectLimit *DdosPolicyV2DdosConnectLimit `pulumi:"ddosConnectLimit"`
	// DDoS-protected area block configuration.
	DdosGeoIpBlockConfigs []DdosPolicyV2DdosGeoIpBlockConfig `pulumi:"ddosGeoIpBlockConfigs"`
	// Protection class, value [`low`, `middle`, `high`].
	DdosLevel *string `pulumi:"ddosLevel"`
	// Access speed limit configuration for DDoS protection.
	DdosSpeedLimitConfigs []DdosPolicyV2DdosSpeedLimitConfig `pulumi:"ddosSpeedLimitConfigs"`
	// DDoS cleaning threshold, value[0, 60, 80, 100, 150, 200, 250, 300, 400, 500, 700, 1000]; When the value is set to 0, it means that the default value is adopted.
	DdosThreshold *int `pulumi:"ddosThreshold"`
	// Feature filtering rules for DDoS protection.
	PacketFilters []DdosPolicyV2PacketFilter `pulumi:"packetFilters"`
	// Protocol block configuration for DDoS protection.
	ProtocolBlockConfigs []DdosPolicyV2ProtocolBlockConfig `pulumi:"protocolBlockConfigs"`
	// The ID of the resource instance.
	ResourceId *string `pulumi:"resourceId"`
	// Water print config.
	WaterPrintConfigs []DdosPolicyV2WaterPrintConfig `pulumi:"waterPrintConfigs"`
}

type DdosPolicyV2State struct {
	// Port ACL policy for DDoS protection.
	Acls DdosPolicyV2AclArrayInput
	// DDoS-protected IP blacklist and whitelist.
	BlackWhiteIps DdosPolicyV2BlackWhiteIpArrayInput
	// Business of resource instance. bgpip indicates anti-anti-ip ip; bgp means exclusive package; bgp-multip means shared packet; net indicates anti-anti-ip pro version.
	Business pulumi.StringPtrInput
	// AI protection switch, take the value [`on`, `off`].
	DdosAi pulumi.StringPtrInput
	// DDoS connection suppression options.
	DdosConnectLimit DdosPolicyV2DdosConnectLimitPtrInput
	// DDoS-protected area block configuration.
	DdosGeoIpBlockConfigs DdosPolicyV2DdosGeoIpBlockConfigArrayInput
	// Protection class, value [`low`, `middle`, `high`].
	DdosLevel pulumi.StringPtrInput
	// Access speed limit configuration for DDoS protection.
	DdosSpeedLimitConfigs DdosPolicyV2DdosSpeedLimitConfigArrayInput
	// DDoS cleaning threshold, value[0, 60, 80, 100, 150, 200, 250, 300, 400, 500, 700, 1000]; When the value is set to 0, it means that the default value is adopted.
	DdosThreshold pulumi.IntPtrInput
	// Feature filtering rules for DDoS protection.
	PacketFilters DdosPolicyV2PacketFilterArrayInput
	// Protocol block configuration for DDoS protection.
	ProtocolBlockConfigs DdosPolicyV2ProtocolBlockConfigArrayInput
	// The ID of the resource instance.
	ResourceId pulumi.StringPtrInput
	// Water print config.
	WaterPrintConfigs DdosPolicyV2WaterPrintConfigArrayInput
}

func (DdosPolicyV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*ddosPolicyV2State)(nil)).Elem()
}

type ddosPolicyV2Args struct {
	// Port ACL policy for DDoS protection.
	Acls []DdosPolicyV2Acl `pulumi:"acls"`
	// DDoS-protected IP blacklist and whitelist.
	BlackWhiteIps []DdosPolicyV2BlackWhiteIp `pulumi:"blackWhiteIps"`
	// Business of resource instance. bgpip indicates anti-anti-ip ip; bgp means exclusive package; bgp-multip means shared packet; net indicates anti-anti-ip pro version.
	Business *string `pulumi:"business"`
	// AI protection switch, take the value [`on`, `off`].
	DdosAi *string `pulumi:"ddosAi"`
	// DDoS connection suppression options.
	DdosConnectLimit *DdosPolicyV2DdosConnectLimit `pulumi:"ddosConnectLimit"`
	// DDoS-protected area block configuration.
	DdosGeoIpBlockConfigs []DdosPolicyV2DdosGeoIpBlockConfig `pulumi:"ddosGeoIpBlockConfigs"`
	// Protection class, value [`low`, `middle`, `high`].
	DdosLevel *string `pulumi:"ddosLevel"`
	// Access speed limit configuration for DDoS protection.
	DdosSpeedLimitConfigs []DdosPolicyV2DdosSpeedLimitConfig `pulumi:"ddosSpeedLimitConfigs"`
	// DDoS cleaning threshold, value[0, 60, 80, 100, 150, 200, 250, 300, 400, 500, 700, 1000]; When the value is set to 0, it means that the default value is adopted.
	DdosThreshold *int `pulumi:"ddosThreshold"`
	// Feature filtering rules for DDoS protection.
	PacketFilters []DdosPolicyV2PacketFilter `pulumi:"packetFilters"`
	// Protocol block configuration for DDoS protection.
	ProtocolBlockConfigs []DdosPolicyV2ProtocolBlockConfig `pulumi:"protocolBlockConfigs"`
	// The ID of the resource instance.
	ResourceId string `pulumi:"resourceId"`
	// Water print config.
	WaterPrintConfigs []DdosPolicyV2WaterPrintConfig `pulumi:"waterPrintConfigs"`
}

// The set of arguments for constructing a DdosPolicyV2 resource.
type DdosPolicyV2Args struct {
	// Port ACL policy for DDoS protection.
	Acls DdosPolicyV2AclArrayInput
	// DDoS-protected IP blacklist and whitelist.
	BlackWhiteIps DdosPolicyV2BlackWhiteIpArrayInput
	// Business of resource instance. bgpip indicates anti-anti-ip ip; bgp means exclusive package; bgp-multip means shared packet; net indicates anti-anti-ip pro version.
	Business pulumi.StringPtrInput
	// AI protection switch, take the value [`on`, `off`].
	DdosAi pulumi.StringPtrInput
	// DDoS connection suppression options.
	DdosConnectLimit DdosPolicyV2DdosConnectLimitPtrInput
	// DDoS-protected area block configuration.
	DdosGeoIpBlockConfigs DdosPolicyV2DdosGeoIpBlockConfigArrayInput
	// Protection class, value [`low`, `middle`, `high`].
	DdosLevel pulumi.StringPtrInput
	// Access speed limit configuration for DDoS protection.
	DdosSpeedLimitConfigs DdosPolicyV2DdosSpeedLimitConfigArrayInput
	// DDoS cleaning threshold, value[0, 60, 80, 100, 150, 200, 250, 300, 400, 500, 700, 1000]; When the value is set to 0, it means that the default value is adopted.
	DdosThreshold pulumi.IntPtrInput
	// Feature filtering rules for DDoS protection.
	PacketFilters DdosPolicyV2PacketFilterArrayInput
	// Protocol block configuration for DDoS protection.
	ProtocolBlockConfigs DdosPolicyV2ProtocolBlockConfigArrayInput
	// The ID of the resource instance.
	ResourceId pulumi.StringInput
	// Water print config.
	WaterPrintConfigs DdosPolicyV2WaterPrintConfigArrayInput
}

func (DdosPolicyV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ddosPolicyV2Args)(nil)).Elem()
}

type DdosPolicyV2Input interface {
	pulumi.Input

	ToDdosPolicyV2Output() DdosPolicyV2Output
	ToDdosPolicyV2OutputWithContext(ctx context.Context) DdosPolicyV2Output
}

func (*DdosPolicyV2) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosPolicyV2)(nil)).Elem()
}

func (i *DdosPolicyV2) ToDdosPolicyV2Output() DdosPolicyV2Output {
	return i.ToDdosPolicyV2OutputWithContext(context.Background())
}

func (i *DdosPolicyV2) ToDdosPolicyV2OutputWithContext(ctx context.Context) DdosPolicyV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2Output)
}

// DdosPolicyV2ArrayInput is an input type that accepts DdosPolicyV2Array and DdosPolicyV2ArrayOutput values.
// You can construct a concrete instance of `DdosPolicyV2ArrayInput` via:
//
//	DdosPolicyV2Array{ DdosPolicyV2Args{...} }
type DdosPolicyV2ArrayInput interface {
	pulumi.Input

	ToDdosPolicyV2ArrayOutput() DdosPolicyV2ArrayOutput
	ToDdosPolicyV2ArrayOutputWithContext(context.Context) DdosPolicyV2ArrayOutput
}

type DdosPolicyV2Array []DdosPolicyV2Input

func (DdosPolicyV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdosPolicyV2)(nil)).Elem()
}

func (i DdosPolicyV2Array) ToDdosPolicyV2ArrayOutput() DdosPolicyV2ArrayOutput {
	return i.ToDdosPolicyV2ArrayOutputWithContext(context.Background())
}

func (i DdosPolicyV2Array) ToDdosPolicyV2ArrayOutputWithContext(ctx context.Context) DdosPolicyV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2ArrayOutput)
}

// DdosPolicyV2MapInput is an input type that accepts DdosPolicyV2Map and DdosPolicyV2MapOutput values.
// You can construct a concrete instance of `DdosPolicyV2MapInput` via:
//
//	DdosPolicyV2Map{ "key": DdosPolicyV2Args{...} }
type DdosPolicyV2MapInput interface {
	pulumi.Input

	ToDdosPolicyV2MapOutput() DdosPolicyV2MapOutput
	ToDdosPolicyV2MapOutputWithContext(context.Context) DdosPolicyV2MapOutput
}

type DdosPolicyV2Map map[string]DdosPolicyV2Input

func (DdosPolicyV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdosPolicyV2)(nil)).Elem()
}

func (i DdosPolicyV2Map) ToDdosPolicyV2MapOutput() DdosPolicyV2MapOutput {
	return i.ToDdosPolicyV2MapOutputWithContext(context.Background())
}

func (i DdosPolicyV2Map) ToDdosPolicyV2MapOutputWithContext(ctx context.Context) DdosPolicyV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosPolicyV2MapOutput)
}

type DdosPolicyV2Output struct{ *pulumi.OutputState }

func (DdosPolicyV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosPolicyV2)(nil)).Elem()
}

func (o DdosPolicyV2Output) ToDdosPolicyV2Output() DdosPolicyV2Output {
	return o
}

func (o DdosPolicyV2Output) ToDdosPolicyV2OutputWithContext(ctx context.Context) DdosPolicyV2Output {
	return o
}

// Port ACL policy for DDoS protection.
func (o DdosPolicyV2Output) Acls() DdosPolicyV2AclArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2AclArrayOutput { return v.Acls }).(DdosPolicyV2AclArrayOutput)
}

// DDoS-protected IP blacklist and whitelist.
func (o DdosPolicyV2Output) BlackWhiteIps() DdosPolicyV2BlackWhiteIpArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2BlackWhiteIpArrayOutput { return v.BlackWhiteIps }).(DdosPolicyV2BlackWhiteIpArrayOutput)
}

// Business of resource instance. bgpip indicates anti-anti-ip ip; bgp means exclusive package; bgp-multip means shared packet; net indicates anti-anti-ip pro version.
func (o DdosPolicyV2Output) Business() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2) pulumi.StringPtrOutput { return v.Business }).(pulumi.StringPtrOutput)
}

// AI protection switch, take the value [`on`, `off`].
func (o DdosPolicyV2Output) DdosAi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2) pulumi.StringPtrOutput { return v.DdosAi }).(pulumi.StringPtrOutput)
}

// DDoS connection suppression options.
func (o DdosPolicyV2Output) DdosConnectLimit() DdosPolicyV2DdosConnectLimitPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2DdosConnectLimitPtrOutput { return v.DdosConnectLimit }).(DdosPolicyV2DdosConnectLimitPtrOutput)
}

// DDoS-protected area block configuration.
func (o DdosPolicyV2Output) DdosGeoIpBlockConfigs() DdosPolicyV2DdosGeoIpBlockConfigArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2DdosGeoIpBlockConfigArrayOutput { return v.DdosGeoIpBlockConfigs }).(DdosPolicyV2DdosGeoIpBlockConfigArrayOutput)
}

// Protection class, value [`low`, `middle`, `high`].
func (o DdosPolicyV2Output) DdosLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2) pulumi.StringPtrOutput { return v.DdosLevel }).(pulumi.StringPtrOutput)
}

// Access speed limit configuration for DDoS protection.
func (o DdosPolicyV2Output) DdosSpeedLimitConfigs() DdosPolicyV2DdosSpeedLimitConfigArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2DdosSpeedLimitConfigArrayOutput { return v.DdosSpeedLimitConfigs }).(DdosPolicyV2DdosSpeedLimitConfigArrayOutput)
}

// DDoS cleaning threshold, value[0, 60, 80, 100, 150, 200, 250, 300, 400, 500, 700, 1000]; When the value is set to 0, it means that the default value is adopted.
func (o DdosPolicyV2Output) DdosThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdosPolicyV2) pulumi.IntPtrOutput { return v.DdosThreshold }).(pulumi.IntPtrOutput)
}

// Feature filtering rules for DDoS protection.
func (o DdosPolicyV2Output) PacketFilters() DdosPolicyV2PacketFilterArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2PacketFilterArrayOutput { return v.PacketFilters }).(DdosPolicyV2PacketFilterArrayOutput)
}

// Protocol block configuration for DDoS protection.
func (o DdosPolicyV2Output) ProtocolBlockConfigs() DdosPolicyV2ProtocolBlockConfigArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2ProtocolBlockConfigArrayOutput { return v.ProtocolBlockConfigs }).(DdosPolicyV2ProtocolBlockConfigArrayOutput)
}

// The ID of the resource instance.
func (o DdosPolicyV2Output) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DdosPolicyV2) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// Water print config.
func (o DdosPolicyV2Output) WaterPrintConfigs() DdosPolicyV2WaterPrintConfigArrayOutput {
	return o.ApplyT(func(v *DdosPolicyV2) DdosPolicyV2WaterPrintConfigArrayOutput { return v.WaterPrintConfigs }).(DdosPolicyV2WaterPrintConfigArrayOutput)
}

type DdosPolicyV2ArrayOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdosPolicyV2)(nil)).Elem()
}

func (o DdosPolicyV2ArrayOutput) ToDdosPolicyV2ArrayOutput() DdosPolicyV2ArrayOutput {
	return o
}

func (o DdosPolicyV2ArrayOutput) ToDdosPolicyV2ArrayOutputWithContext(ctx context.Context) DdosPolicyV2ArrayOutput {
	return o
}

func (o DdosPolicyV2ArrayOutput) Index(i pulumi.IntInput) DdosPolicyV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DdosPolicyV2 {
		return vs[0].([]*DdosPolicyV2)[vs[1].(int)]
	}).(DdosPolicyV2Output)
}

type DdosPolicyV2MapOutput struct{ *pulumi.OutputState }

func (DdosPolicyV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdosPolicyV2)(nil)).Elem()
}

func (o DdosPolicyV2MapOutput) ToDdosPolicyV2MapOutput() DdosPolicyV2MapOutput {
	return o
}

func (o DdosPolicyV2MapOutput) ToDdosPolicyV2MapOutputWithContext(ctx context.Context) DdosPolicyV2MapOutput {
	return o
}

func (o DdosPolicyV2MapOutput) MapIndex(k pulumi.StringInput) DdosPolicyV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DdosPolicyV2 {
		return vs[0].(map[string]*DdosPolicyV2)[vs[1].(string)]
	}).(DdosPolicyV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2Input)(nil)).Elem(), &DdosPolicyV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2ArrayInput)(nil)).Elem(), DdosPolicyV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosPolicyV2MapInput)(nil)).Elem(), DdosPolicyV2Map{})
	pulumi.RegisterOutputType(DdosPolicyV2Output{})
	pulumi.RegisterOutputType(DdosPolicyV2ArrayOutput{})
	pulumi.RegisterOutputType(DdosPolicyV2MapOutput{})
}
