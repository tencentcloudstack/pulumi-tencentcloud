// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a antiddos ip. Only support for bgp-multip.
type DdosIpAttachmentV2 struct {
	pulumi.CustomResourceState

	// Anti-DDoS instance ID.
	BgpInstanceId pulumi.StringOutput `pulumi:"bgpInstanceId"`
	// Array of IPs to bind to the Anti-DDoS instance. For Anti-DDoS Pro Single IP instance, the array contains only one IP. If there are no IPs to bind, it is empty; however, either BoundDevList or UnBoundDevList must not be empty.
	BoundIpLists DdosIpAttachmentV2BoundIpListArrayOutput `pulumi:"boundIpLists"`
}

// NewDdosIpAttachmentV2 registers a new resource with the given unique name, arguments, and options.
func NewDdosIpAttachmentV2(ctx *pulumi.Context,
	name string, args *DdosIpAttachmentV2Args, opts ...pulumi.ResourceOption) (*DdosIpAttachmentV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BgpInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BgpInstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DdosIpAttachmentV2
	err := ctx.RegisterResource("tencentcloud:Dayu/ddosIpAttachmentV2:DdosIpAttachmentV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDdosIpAttachmentV2 gets an existing DdosIpAttachmentV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDdosIpAttachmentV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DdosIpAttachmentV2State, opts ...pulumi.ResourceOption) (*DdosIpAttachmentV2, error) {
	var resource DdosIpAttachmentV2
	err := ctx.ReadResource("tencentcloud:Dayu/ddosIpAttachmentV2:DdosIpAttachmentV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DdosIpAttachmentV2 resources.
type ddosIpAttachmentV2State struct {
	// Anti-DDoS instance ID.
	BgpInstanceId *string `pulumi:"bgpInstanceId"`
	// Array of IPs to bind to the Anti-DDoS instance. For Anti-DDoS Pro Single IP instance, the array contains only one IP. If there are no IPs to bind, it is empty; however, either BoundDevList or UnBoundDevList must not be empty.
	BoundIpLists []DdosIpAttachmentV2BoundIpList `pulumi:"boundIpLists"`
}

type DdosIpAttachmentV2State struct {
	// Anti-DDoS instance ID.
	BgpInstanceId pulumi.StringPtrInput
	// Array of IPs to bind to the Anti-DDoS instance. For Anti-DDoS Pro Single IP instance, the array contains only one IP. If there are no IPs to bind, it is empty; however, either BoundDevList or UnBoundDevList must not be empty.
	BoundIpLists DdosIpAttachmentV2BoundIpListArrayInput
}

func (DdosIpAttachmentV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*ddosIpAttachmentV2State)(nil)).Elem()
}

type ddosIpAttachmentV2Args struct {
	// Anti-DDoS instance ID.
	BgpInstanceId string `pulumi:"bgpInstanceId"`
	// Array of IPs to bind to the Anti-DDoS instance. For Anti-DDoS Pro Single IP instance, the array contains only one IP. If there are no IPs to bind, it is empty; however, either BoundDevList or UnBoundDevList must not be empty.
	BoundIpLists []DdosIpAttachmentV2BoundIpList `pulumi:"boundIpLists"`
}

// The set of arguments for constructing a DdosIpAttachmentV2 resource.
type DdosIpAttachmentV2Args struct {
	// Anti-DDoS instance ID.
	BgpInstanceId pulumi.StringInput
	// Array of IPs to bind to the Anti-DDoS instance. For Anti-DDoS Pro Single IP instance, the array contains only one IP. If there are no IPs to bind, it is empty; however, either BoundDevList or UnBoundDevList must not be empty.
	BoundIpLists DdosIpAttachmentV2BoundIpListArrayInput
}

func (DdosIpAttachmentV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ddosIpAttachmentV2Args)(nil)).Elem()
}

type DdosIpAttachmentV2Input interface {
	pulumi.Input

	ToDdosIpAttachmentV2Output() DdosIpAttachmentV2Output
	ToDdosIpAttachmentV2OutputWithContext(ctx context.Context) DdosIpAttachmentV2Output
}

func (*DdosIpAttachmentV2) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosIpAttachmentV2)(nil)).Elem()
}

func (i *DdosIpAttachmentV2) ToDdosIpAttachmentV2Output() DdosIpAttachmentV2Output {
	return i.ToDdosIpAttachmentV2OutputWithContext(context.Background())
}

func (i *DdosIpAttachmentV2) ToDdosIpAttachmentV2OutputWithContext(ctx context.Context) DdosIpAttachmentV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(DdosIpAttachmentV2Output)
}

// DdosIpAttachmentV2ArrayInput is an input type that accepts DdosIpAttachmentV2Array and DdosIpAttachmentV2ArrayOutput values.
// You can construct a concrete instance of `DdosIpAttachmentV2ArrayInput` via:
//
//	DdosIpAttachmentV2Array{ DdosIpAttachmentV2Args{...} }
type DdosIpAttachmentV2ArrayInput interface {
	pulumi.Input

	ToDdosIpAttachmentV2ArrayOutput() DdosIpAttachmentV2ArrayOutput
	ToDdosIpAttachmentV2ArrayOutputWithContext(context.Context) DdosIpAttachmentV2ArrayOutput
}

type DdosIpAttachmentV2Array []DdosIpAttachmentV2Input

func (DdosIpAttachmentV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdosIpAttachmentV2)(nil)).Elem()
}

func (i DdosIpAttachmentV2Array) ToDdosIpAttachmentV2ArrayOutput() DdosIpAttachmentV2ArrayOutput {
	return i.ToDdosIpAttachmentV2ArrayOutputWithContext(context.Background())
}

func (i DdosIpAttachmentV2Array) ToDdosIpAttachmentV2ArrayOutputWithContext(ctx context.Context) DdosIpAttachmentV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosIpAttachmentV2ArrayOutput)
}

// DdosIpAttachmentV2MapInput is an input type that accepts DdosIpAttachmentV2Map and DdosIpAttachmentV2MapOutput values.
// You can construct a concrete instance of `DdosIpAttachmentV2MapInput` via:
//
//	DdosIpAttachmentV2Map{ "key": DdosIpAttachmentV2Args{...} }
type DdosIpAttachmentV2MapInput interface {
	pulumi.Input

	ToDdosIpAttachmentV2MapOutput() DdosIpAttachmentV2MapOutput
	ToDdosIpAttachmentV2MapOutputWithContext(context.Context) DdosIpAttachmentV2MapOutput
}

type DdosIpAttachmentV2Map map[string]DdosIpAttachmentV2Input

func (DdosIpAttachmentV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdosIpAttachmentV2)(nil)).Elem()
}

func (i DdosIpAttachmentV2Map) ToDdosIpAttachmentV2MapOutput() DdosIpAttachmentV2MapOutput {
	return i.ToDdosIpAttachmentV2MapOutputWithContext(context.Background())
}

func (i DdosIpAttachmentV2Map) ToDdosIpAttachmentV2MapOutputWithContext(ctx context.Context) DdosIpAttachmentV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosIpAttachmentV2MapOutput)
}

type DdosIpAttachmentV2Output struct{ *pulumi.OutputState }

func (DdosIpAttachmentV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosIpAttachmentV2)(nil)).Elem()
}

func (o DdosIpAttachmentV2Output) ToDdosIpAttachmentV2Output() DdosIpAttachmentV2Output {
	return o
}

func (o DdosIpAttachmentV2Output) ToDdosIpAttachmentV2OutputWithContext(ctx context.Context) DdosIpAttachmentV2Output {
	return o
}

// Anti-DDoS instance ID.
func (o DdosIpAttachmentV2Output) BgpInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DdosIpAttachmentV2) pulumi.StringOutput { return v.BgpInstanceId }).(pulumi.StringOutput)
}

// Array of IPs to bind to the Anti-DDoS instance. For Anti-DDoS Pro Single IP instance, the array contains only one IP. If there are no IPs to bind, it is empty; however, either BoundDevList or UnBoundDevList must not be empty.
func (o DdosIpAttachmentV2Output) BoundIpLists() DdosIpAttachmentV2BoundIpListArrayOutput {
	return o.ApplyT(func(v *DdosIpAttachmentV2) DdosIpAttachmentV2BoundIpListArrayOutput { return v.BoundIpLists }).(DdosIpAttachmentV2BoundIpListArrayOutput)
}

type DdosIpAttachmentV2ArrayOutput struct{ *pulumi.OutputState }

func (DdosIpAttachmentV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdosIpAttachmentV2)(nil)).Elem()
}

func (o DdosIpAttachmentV2ArrayOutput) ToDdosIpAttachmentV2ArrayOutput() DdosIpAttachmentV2ArrayOutput {
	return o
}

func (o DdosIpAttachmentV2ArrayOutput) ToDdosIpAttachmentV2ArrayOutputWithContext(ctx context.Context) DdosIpAttachmentV2ArrayOutput {
	return o
}

func (o DdosIpAttachmentV2ArrayOutput) Index(i pulumi.IntInput) DdosIpAttachmentV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DdosIpAttachmentV2 {
		return vs[0].([]*DdosIpAttachmentV2)[vs[1].(int)]
	}).(DdosIpAttachmentV2Output)
}

type DdosIpAttachmentV2MapOutput struct{ *pulumi.OutputState }

func (DdosIpAttachmentV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdosIpAttachmentV2)(nil)).Elem()
}

func (o DdosIpAttachmentV2MapOutput) ToDdosIpAttachmentV2MapOutput() DdosIpAttachmentV2MapOutput {
	return o
}

func (o DdosIpAttachmentV2MapOutput) ToDdosIpAttachmentV2MapOutputWithContext(ctx context.Context) DdosIpAttachmentV2MapOutput {
	return o
}

func (o DdosIpAttachmentV2MapOutput) MapIndex(k pulumi.StringInput) DdosIpAttachmentV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DdosIpAttachmentV2 {
		return vs[0].(map[string]*DdosIpAttachmentV2)[vs[1].(string)]
	}).(DdosIpAttachmentV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DdosIpAttachmentV2Input)(nil)).Elem(), &DdosIpAttachmentV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosIpAttachmentV2ArrayInput)(nil)).Elem(), DdosIpAttachmentV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosIpAttachmentV2MapInput)(nil)).Elem(), DdosIpAttachmentV2Map{})
	pulumi.RegisterOutputType(DdosIpAttachmentV2Output{})
	pulumi.RegisterOutputType(DdosIpAttachmentV2ArrayOutput{})
	pulumi.RegisterOutputType(DdosIpAttachmentV2MapOutput{})
}
