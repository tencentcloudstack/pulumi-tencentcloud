// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a scf syncInvokeFunction
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Scf.NewSyncInvokeFunction(ctx, "invokeFunction", &Scf.SyncInvokeFunctionArgs{
//				FunctionName: pulumi.String("keep-1676351130"),
//				Namespace:    pulumi.String("default"),
//				Qualifier:    pulumi.String("2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SyncInvokeFunction struct {
	pulumi.CustomResourceState

	// Function running parameter, which is in the JSON format. Maximum parameter size is 6 MB. This field corresponds to event input parameter.
	Event pulumi.StringPtrOutput `pulumi:"event"`
	// Function name.
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// Valid value: None (default) or Tail. If the value is Tail, log in the response will contain the corresponding function execution log (up to 4KB).
	LogType pulumi.StringPtrOutput `pulumi:"logType"`
	// Namespace. default is used if it's left empty.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// Version or alias of the function. It defaults to $DEFAULT.
	Qualifier pulumi.StringPtrOutput `pulumi:"qualifier"`
	// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes allowed.
	RoutingKey pulumi.StringPtrOutput `pulumi:"routingKey"`
}

// NewSyncInvokeFunction registers a new resource with the given unique name, arguments, and options.
func NewSyncInvokeFunction(ctx *pulumi.Context,
	name string, args *SyncInvokeFunctionArgs, opts ...pulumi.ResourceOption) (*SyncInvokeFunction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SyncInvokeFunction
	err := ctx.RegisterResource("tencentcloud:Scf/syncInvokeFunction:SyncInvokeFunction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyncInvokeFunction gets an existing SyncInvokeFunction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyncInvokeFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyncInvokeFunctionState, opts ...pulumi.ResourceOption) (*SyncInvokeFunction, error) {
	var resource SyncInvokeFunction
	err := ctx.ReadResource("tencentcloud:Scf/syncInvokeFunction:SyncInvokeFunction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyncInvokeFunction resources.
type syncInvokeFunctionState struct {
	// Function running parameter, which is in the JSON format. Maximum parameter size is 6 MB. This field corresponds to event input parameter.
	Event *string `pulumi:"event"`
	// Function name.
	FunctionName *string `pulumi:"functionName"`
	// Valid value: None (default) or Tail. If the value is Tail, log in the response will contain the corresponding function execution log (up to 4KB).
	LogType *string `pulumi:"logType"`
	// Namespace. default is used if it's left empty.
	Namespace *string `pulumi:"namespace"`
	// Version or alias of the function. It defaults to $DEFAULT.
	Qualifier *string `pulumi:"qualifier"`
	// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes allowed.
	RoutingKey *string `pulumi:"routingKey"`
}

type SyncInvokeFunctionState struct {
	// Function running parameter, which is in the JSON format. Maximum parameter size is 6 MB. This field corresponds to event input parameter.
	Event pulumi.StringPtrInput
	// Function name.
	FunctionName pulumi.StringPtrInput
	// Valid value: None (default) or Tail. If the value is Tail, log in the response will contain the corresponding function execution log (up to 4KB).
	LogType pulumi.StringPtrInput
	// Namespace. default is used if it's left empty.
	Namespace pulumi.StringPtrInput
	// Version or alias of the function. It defaults to $DEFAULT.
	Qualifier pulumi.StringPtrInput
	// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes allowed.
	RoutingKey pulumi.StringPtrInput
}

func (SyncInvokeFunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*syncInvokeFunctionState)(nil)).Elem()
}

type syncInvokeFunctionArgs struct {
	// Function running parameter, which is in the JSON format. Maximum parameter size is 6 MB. This field corresponds to event input parameter.
	Event *string `pulumi:"event"`
	// Function name.
	FunctionName string `pulumi:"functionName"`
	// Valid value: None (default) or Tail. If the value is Tail, log in the response will contain the corresponding function execution log (up to 4KB).
	LogType *string `pulumi:"logType"`
	// Namespace. default is used if it's left empty.
	Namespace *string `pulumi:"namespace"`
	// Version or alias of the function. It defaults to $DEFAULT.
	Qualifier *string `pulumi:"qualifier"`
	// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes allowed.
	RoutingKey *string `pulumi:"routingKey"`
}

// The set of arguments for constructing a SyncInvokeFunction resource.
type SyncInvokeFunctionArgs struct {
	// Function running parameter, which is in the JSON format. Maximum parameter size is 6 MB. This field corresponds to event input parameter.
	Event pulumi.StringPtrInput
	// Function name.
	FunctionName pulumi.StringInput
	// Valid value: None (default) or Tail. If the value is Tail, log in the response will contain the corresponding function execution log (up to 4KB).
	LogType pulumi.StringPtrInput
	// Namespace. default is used if it's left empty.
	Namespace pulumi.StringPtrInput
	// Version or alias of the function. It defaults to $DEFAULT.
	Qualifier pulumi.StringPtrInput
	// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes allowed.
	RoutingKey pulumi.StringPtrInput
}

func (SyncInvokeFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syncInvokeFunctionArgs)(nil)).Elem()
}

type SyncInvokeFunctionInput interface {
	pulumi.Input

	ToSyncInvokeFunctionOutput() SyncInvokeFunctionOutput
	ToSyncInvokeFunctionOutputWithContext(ctx context.Context) SyncInvokeFunctionOutput
}

func (*SyncInvokeFunction) ElementType() reflect.Type {
	return reflect.TypeOf((**SyncInvokeFunction)(nil)).Elem()
}

func (i *SyncInvokeFunction) ToSyncInvokeFunctionOutput() SyncInvokeFunctionOutput {
	return i.ToSyncInvokeFunctionOutputWithContext(context.Background())
}

func (i *SyncInvokeFunction) ToSyncInvokeFunctionOutputWithContext(ctx context.Context) SyncInvokeFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncInvokeFunctionOutput)
}

// SyncInvokeFunctionArrayInput is an input type that accepts SyncInvokeFunctionArray and SyncInvokeFunctionArrayOutput values.
// You can construct a concrete instance of `SyncInvokeFunctionArrayInput` via:
//
//	SyncInvokeFunctionArray{ SyncInvokeFunctionArgs{...} }
type SyncInvokeFunctionArrayInput interface {
	pulumi.Input

	ToSyncInvokeFunctionArrayOutput() SyncInvokeFunctionArrayOutput
	ToSyncInvokeFunctionArrayOutputWithContext(context.Context) SyncInvokeFunctionArrayOutput
}

type SyncInvokeFunctionArray []SyncInvokeFunctionInput

func (SyncInvokeFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyncInvokeFunction)(nil)).Elem()
}

func (i SyncInvokeFunctionArray) ToSyncInvokeFunctionArrayOutput() SyncInvokeFunctionArrayOutput {
	return i.ToSyncInvokeFunctionArrayOutputWithContext(context.Background())
}

func (i SyncInvokeFunctionArray) ToSyncInvokeFunctionArrayOutputWithContext(ctx context.Context) SyncInvokeFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncInvokeFunctionArrayOutput)
}

// SyncInvokeFunctionMapInput is an input type that accepts SyncInvokeFunctionMap and SyncInvokeFunctionMapOutput values.
// You can construct a concrete instance of `SyncInvokeFunctionMapInput` via:
//
//	SyncInvokeFunctionMap{ "key": SyncInvokeFunctionArgs{...} }
type SyncInvokeFunctionMapInput interface {
	pulumi.Input

	ToSyncInvokeFunctionMapOutput() SyncInvokeFunctionMapOutput
	ToSyncInvokeFunctionMapOutputWithContext(context.Context) SyncInvokeFunctionMapOutput
}

type SyncInvokeFunctionMap map[string]SyncInvokeFunctionInput

func (SyncInvokeFunctionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyncInvokeFunction)(nil)).Elem()
}

func (i SyncInvokeFunctionMap) ToSyncInvokeFunctionMapOutput() SyncInvokeFunctionMapOutput {
	return i.ToSyncInvokeFunctionMapOutputWithContext(context.Background())
}

func (i SyncInvokeFunctionMap) ToSyncInvokeFunctionMapOutputWithContext(ctx context.Context) SyncInvokeFunctionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncInvokeFunctionMapOutput)
}

type SyncInvokeFunctionOutput struct{ *pulumi.OutputState }

func (SyncInvokeFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyncInvokeFunction)(nil)).Elem()
}

func (o SyncInvokeFunctionOutput) ToSyncInvokeFunctionOutput() SyncInvokeFunctionOutput {
	return o
}

func (o SyncInvokeFunctionOutput) ToSyncInvokeFunctionOutputWithContext(ctx context.Context) SyncInvokeFunctionOutput {
	return o
}

// Function running parameter, which is in the JSON format. Maximum parameter size is 6 MB. This field corresponds to event input parameter.
func (o SyncInvokeFunctionOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncInvokeFunction) pulumi.StringPtrOutput { return v.Event }).(pulumi.StringPtrOutput)
}

// Function name.
func (o SyncInvokeFunctionOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *SyncInvokeFunction) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// Valid value: None (default) or Tail. If the value is Tail, log in the response will contain the corresponding function execution log (up to 4KB).
func (o SyncInvokeFunctionOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncInvokeFunction) pulumi.StringPtrOutput { return v.LogType }).(pulumi.StringPtrOutput)
}

// Namespace. default is used if it's left empty.
func (o SyncInvokeFunctionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncInvokeFunction) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Version or alias of the function. It defaults to $DEFAULT.
func (o SyncInvokeFunctionOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncInvokeFunction) pulumi.StringPtrOutput { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes allowed.
func (o SyncInvokeFunctionOutput) RoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncInvokeFunction) pulumi.StringPtrOutput { return v.RoutingKey }).(pulumi.StringPtrOutput)
}

type SyncInvokeFunctionArrayOutput struct{ *pulumi.OutputState }

func (SyncInvokeFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyncInvokeFunction)(nil)).Elem()
}

func (o SyncInvokeFunctionArrayOutput) ToSyncInvokeFunctionArrayOutput() SyncInvokeFunctionArrayOutput {
	return o
}

func (o SyncInvokeFunctionArrayOutput) ToSyncInvokeFunctionArrayOutputWithContext(ctx context.Context) SyncInvokeFunctionArrayOutput {
	return o
}

func (o SyncInvokeFunctionArrayOutput) Index(i pulumi.IntInput) SyncInvokeFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyncInvokeFunction {
		return vs[0].([]*SyncInvokeFunction)[vs[1].(int)]
	}).(SyncInvokeFunctionOutput)
}

type SyncInvokeFunctionMapOutput struct{ *pulumi.OutputState }

func (SyncInvokeFunctionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyncInvokeFunction)(nil)).Elem()
}

func (o SyncInvokeFunctionMapOutput) ToSyncInvokeFunctionMapOutput() SyncInvokeFunctionMapOutput {
	return o
}

func (o SyncInvokeFunctionMapOutput) ToSyncInvokeFunctionMapOutputWithContext(ctx context.Context) SyncInvokeFunctionMapOutput {
	return o
}

func (o SyncInvokeFunctionMapOutput) MapIndex(k pulumi.StringInput) SyncInvokeFunctionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyncInvokeFunction {
		return vs[0].(map[string]*SyncInvokeFunction)[vs[1].(string)]
	}).(SyncInvokeFunctionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyncInvokeFunctionInput)(nil)).Elem(), &SyncInvokeFunction{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyncInvokeFunctionArrayInput)(nil)).Elem(), SyncInvokeFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyncInvokeFunctionMapInput)(nil)).Elem(), SyncInvokeFunctionMap{})
	pulumi.RegisterOutputType(SyncInvokeFunctionOutput{})
	pulumi.RegisterOutputType(SyncInvokeFunctionArrayOutput{})
	pulumi.RegisterOutputType(SyncInvokeFunctionMapOutput{})
}
