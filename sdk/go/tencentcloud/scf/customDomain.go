// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a scf custom domain
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Scf.NewCustomDomain(ctx, "scfCustomDomain", &Scf.CustomDomainArgs{
//				Domain: pulumi.String("xxxxxx"),
//				EndpointsConfigs: scf.CustomDomainEndpointsConfigArray{
//					&scf.CustomDomainEndpointsConfigArgs{
//						FunctionName: pulumi.String("xxxxxx"),
//						Namespace:    pulumi.String("default"),
//						PathMatch:    pulumi.String("/aa/*"),
//						Qualifier:    pulumi.String("$LATEST"),
//					},
//				},
//				Protocol: pulumi.String("HTTP"),
//				WafConfig: &scf.CustomDomainWafConfigArgs{
//					WafOpen: pulumi.String("CLOSE"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// scf scf_custom_domain can be imported using the id, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Scf/customDomain:CustomDomain scf_custom_domain ${domain}
// ```
type CustomDomain struct {
	pulumi.CustomResourceState

	// Certificate configuration information, required for HTTPS protocol.
	CertConfig CustomDomainCertConfigOutput `pulumi:"certConfig"`
	// Domain names, pan-domain names are not supported.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Routing configuration.
	EndpointsConfigs CustomDomainEndpointsConfigArrayOutput `pulumi:"endpointsConfigs"`
	// Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Web Application Firewall Configuration.
	WafConfig CustomDomainWafConfigOutput `pulumi:"wafConfig"`
}

// NewCustomDomain registers a new resource with the given unique name, arguments, and options.
func NewCustomDomain(ctx *pulumi.Context,
	name string, args *CustomDomainArgs, opts ...pulumi.ResourceOption) (*CustomDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.EndpointsConfigs == nil {
		return nil, errors.New("invalid value for required argument 'EndpointsConfigs'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomDomain
	err := ctx.RegisterResource("tencentcloud:Scf/customDomain:CustomDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomDomain gets an existing CustomDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomDomainState, opts ...pulumi.ResourceOption) (*CustomDomain, error) {
	var resource CustomDomain
	err := ctx.ReadResource("tencentcloud:Scf/customDomain:CustomDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomDomain resources.
type customDomainState struct {
	// Certificate configuration information, required for HTTPS protocol.
	CertConfig *CustomDomainCertConfig `pulumi:"certConfig"`
	// Domain names, pan-domain names are not supported.
	Domain *string `pulumi:"domain"`
	// Routing configuration.
	EndpointsConfigs []CustomDomainEndpointsConfig `pulumi:"endpointsConfigs"`
	// Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
	Protocol *string `pulumi:"protocol"`
	// Web Application Firewall Configuration.
	WafConfig *CustomDomainWafConfig `pulumi:"wafConfig"`
}

type CustomDomainState struct {
	// Certificate configuration information, required for HTTPS protocol.
	CertConfig CustomDomainCertConfigPtrInput
	// Domain names, pan-domain names are not supported.
	Domain pulumi.StringPtrInput
	// Routing configuration.
	EndpointsConfigs CustomDomainEndpointsConfigArrayInput
	// Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
	Protocol pulumi.StringPtrInput
	// Web Application Firewall Configuration.
	WafConfig CustomDomainWafConfigPtrInput
}

func (CustomDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*customDomainState)(nil)).Elem()
}

type customDomainArgs struct {
	// Certificate configuration information, required for HTTPS protocol.
	CertConfig *CustomDomainCertConfig `pulumi:"certConfig"`
	// Domain names, pan-domain names are not supported.
	Domain string `pulumi:"domain"`
	// Routing configuration.
	EndpointsConfigs []CustomDomainEndpointsConfig `pulumi:"endpointsConfigs"`
	// Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
	Protocol string `pulumi:"protocol"`
	// Web Application Firewall Configuration.
	WafConfig *CustomDomainWafConfig `pulumi:"wafConfig"`
}

// The set of arguments for constructing a CustomDomain resource.
type CustomDomainArgs struct {
	// Certificate configuration information, required for HTTPS protocol.
	CertConfig CustomDomainCertConfigPtrInput
	// Domain names, pan-domain names are not supported.
	Domain pulumi.StringInput
	// Routing configuration.
	EndpointsConfigs CustomDomainEndpointsConfigArrayInput
	// Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
	Protocol pulumi.StringInput
	// Web Application Firewall Configuration.
	WafConfig CustomDomainWafConfigPtrInput
}

func (CustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customDomainArgs)(nil)).Elem()
}

type CustomDomainInput interface {
	pulumi.Input

	ToCustomDomainOutput() CustomDomainOutput
	ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput
}

func (*CustomDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (i *CustomDomain) ToCustomDomainOutput() CustomDomainOutput {
	return i.ToCustomDomainOutputWithContext(context.Background())
}

func (i *CustomDomain) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput)
}

// CustomDomainArrayInput is an input type that accepts CustomDomainArray and CustomDomainArrayOutput values.
// You can construct a concrete instance of `CustomDomainArrayInput` via:
//
//	CustomDomainArray{ CustomDomainArgs{...} }
type CustomDomainArrayInput interface {
	pulumi.Input

	ToCustomDomainArrayOutput() CustomDomainArrayOutput
	ToCustomDomainArrayOutputWithContext(context.Context) CustomDomainArrayOutput
}

type CustomDomainArray []CustomDomainInput

func (CustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomDomain)(nil)).Elem()
}

func (i CustomDomainArray) ToCustomDomainArrayOutput() CustomDomainArrayOutput {
	return i.ToCustomDomainArrayOutputWithContext(context.Background())
}

func (i CustomDomainArray) ToCustomDomainArrayOutputWithContext(ctx context.Context) CustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainArrayOutput)
}

// CustomDomainMapInput is an input type that accepts CustomDomainMap and CustomDomainMapOutput values.
// You can construct a concrete instance of `CustomDomainMapInput` via:
//
//	CustomDomainMap{ "key": CustomDomainArgs{...} }
type CustomDomainMapInput interface {
	pulumi.Input

	ToCustomDomainMapOutput() CustomDomainMapOutput
	ToCustomDomainMapOutputWithContext(context.Context) CustomDomainMapOutput
}

type CustomDomainMap map[string]CustomDomainInput

func (CustomDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomDomain)(nil)).Elem()
}

func (i CustomDomainMap) ToCustomDomainMapOutput() CustomDomainMapOutput {
	return i.ToCustomDomainMapOutputWithContext(context.Background())
}

func (i CustomDomainMap) ToCustomDomainMapOutputWithContext(ctx context.Context) CustomDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainMapOutput)
}

type CustomDomainOutput struct{ *pulumi.OutputState }

func (CustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (o CustomDomainOutput) ToCustomDomainOutput() CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return o
}

// Certificate configuration information, required for HTTPS protocol.
func (o CustomDomainOutput) CertConfig() CustomDomainCertConfigOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainCertConfigOutput { return v.CertConfig }).(CustomDomainCertConfigOutput)
}

// Domain names, pan-domain names are not supported.
func (o CustomDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomain) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Routing configuration.
func (o CustomDomainOutput) EndpointsConfigs() CustomDomainEndpointsConfigArrayOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainEndpointsConfigArrayOutput { return v.EndpointsConfigs }).(CustomDomainEndpointsConfigArrayOutput)
}

// Protocol, value range: HTTP, HTTPS, HTTP&HTTPS.
func (o CustomDomainOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomain) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Web Application Firewall Configuration.
func (o CustomDomainOutput) WafConfig() CustomDomainWafConfigOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainWafConfigOutput { return v.WafConfig }).(CustomDomainWafConfigOutput)
}

type CustomDomainArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomDomain)(nil)).Elem()
}

func (o CustomDomainArrayOutput) ToCustomDomainArrayOutput() CustomDomainArrayOutput {
	return o
}

func (o CustomDomainArrayOutput) ToCustomDomainArrayOutputWithContext(ctx context.Context) CustomDomainArrayOutput {
	return o
}

func (o CustomDomainArrayOutput) Index(i pulumi.IntInput) CustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomDomain {
		return vs[0].([]*CustomDomain)[vs[1].(int)]
	}).(CustomDomainOutput)
}

type CustomDomainMapOutput struct{ *pulumi.OutputState }

func (CustomDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomDomain)(nil)).Elem()
}

func (o CustomDomainMapOutput) ToCustomDomainMapOutput() CustomDomainMapOutput {
	return o
}

func (o CustomDomainMapOutput) ToCustomDomainMapOutputWithContext(ctx context.Context) CustomDomainMapOutput {
	return o
}

func (o CustomDomainMapOutput) MapIndex(k pulumi.StringInput) CustomDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomDomain {
		return vs[0].(map[string]*CustomDomain)[vs[1].(string)]
	}).(CustomDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainInput)(nil)).Elem(), &CustomDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainArrayInput)(nil)).Elem(), CustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainMapInput)(nil)).Elem(), CustomDomainMap{})
	pulumi.RegisterOutputType(CustomDomainOutput{})
	pulumi.RegisterOutputType(CustomDomainArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainMapOutput{})
}
