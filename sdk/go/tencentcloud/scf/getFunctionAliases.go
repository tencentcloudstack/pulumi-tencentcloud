// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of scf functionAliases
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Scf.GetFunctionAliases(ctx, &scf.GetFunctionAliasesArgs{
//				FunctionName: "keep-1676351130",
//				Namespace:    pulumi.StringRef("default"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFunctionAliases(ctx *pulumi.Context, args *GetFunctionAliasesArgs, opts ...pulumi.InvokeOption) (*GetFunctionAliasesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetFunctionAliasesResult
	err := ctx.Invoke("tencentcloud:Scf/getFunctionAliases:getFunctionAliases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunctionAliases.
type GetFunctionAliasesArgs struct {
	// Function name.
	FunctionName string `pulumi:"functionName"`
	// If this parameter is provided, only aliases associated with this function version will be returned.
	FunctionVersion *string `pulumi:"functionVersion"`
	// Function namespace.
	Namespace *string `pulumi:"namespace"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getFunctionAliases.
type GetFunctionAliasesResult struct {
	// Alias list.
	Aliases      []GetFunctionAliasesAlias `pulumi:"aliases"`
	FunctionName string                    `pulumi:"functionName"`
	// Master version pointed to by the alias.
	FunctionVersion *string `pulumi:"functionVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	Namespace        *string `pulumi:"namespace"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetFunctionAliasesOutput(ctx *pulumi.Context, args GetFunctionAliasesOutputArgs, opts ...pulumi.InvokeOption) GetFunctionAliasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFunctionAliasesResult, error) {
			args := v.(GetFunctionAliasesArgs)
			r, err := GetFunctionAliases(ctx, &args, opts...)
			var s GetFunctionAliasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFunctionAliasesResultOutput)
}

// A collection of arguments for invoking getFunctionAliases.
type GetFunctionAliasesOutputArgs struct {
	// Function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// If this parameter is provided, only aliases associated with this function version will be returned.
	FunctionVersion pulumi.StringPtrInput `pulumi:"functionVersion"`
	// Function namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetFunctionAliasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAliasesArgs)(nil)).Elem()
}

// A collection of values returned by getFunctionAliases.
type GetFunctionAliasesResultOutput struct{ *pulumi.OutputState }

func (GetFunctionAliasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAliasesResult)(nil)).Elem()
}

func (o GetFunctionAliasesResultOutput) ToGetFunctionAliasesResultOutput() GetFunctionAliasesResultOutput {
	return o
}

func (o GetFunctionAliasesResultOutput) ToGetFunctionAliasesResultOutputWithContext(ctx context.Context) GetFunctionAliasesResultOutput {
	return o
}

// Alias list.
func (o GetFunctionAliasesResultOutput) Aliases() GetFunctionAliasesAliasArrayOutput {
	return o.ApplyT(func(v GetFunctionAliasesResult) []GetFunctionAliasesAlias { return v.Aliases }).(GetFunctionAliasesAliasArrayOutput)
}

func (o GetFunctionAliasesResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAliasesResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// Master version pointed to by the alias.
func (o GetFunctionAliasesResultOutput) FunctionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionAliasesResult) *string { return v.FunctionVersion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFunctionAliasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAliasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFunctionAliasesResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionAliasesResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetFunctionAliasesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionAliasesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFunctionAliasesResultOutput{})
}
