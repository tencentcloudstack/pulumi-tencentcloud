// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of scf accountInfo
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Scf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Scf.GetAccountInfo(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAccountInfo(ctx *pulumi.Context, args *GetAccountInfoArgs, opts ...pulumi.InvokeOption) (*GetAccountInfoResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAccountInfoResult
	err := ctx.Invoke("tencentcloud:Scf/getAccountInfo:getAccountInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountInfo.
type GetAccountInfoArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getAccountInfo.
type GetAccountInfoResult struct {
	// Namespace limit information.
	AccountLimits []GetAccountInfoAccountLimit `pulumi:"accountLimits"`
	// Namespace usage information.
	AccountUsages []GetAccountInfoAccountUsage `pulumi:"accountUsages"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetAccountInfoOutput(ctx *pulumi.Context, args GetAccountInfoOutputArgs, opts ...pulumi.InvokeOption) GetAccountInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAccountInfoResult, error) {
			args := v.(GetAccountInfoArgs)
			r, err := GetAccountInfo(ctx, &args, opts...)
			var s GetAccountInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAccountInfoResultOutput)
}

// A collection of arguments for invoking getAccountInfo.
type GetAccountInfoOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetAccountInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountInfoArgs)(nil)).Elem()
}

// A collection of values returned by getAccountInfo.
type GetAccountInfoResultOutput struct{ *pulumi.OutputState }

func (GetAccountInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountInfoResult)(nil)).Elem()
}

func (o GetAccountInfoResultOutput) ToGetAccountInfoResultOutput() GetAccountInfoResultOutput {
	return o
}

func (o GetAccountInfoResultOutput) ToGetAccountInfoResultOutputWithContext(ctx context.Context) GetAccountInfoResultOutput {
	return o
}

// Namespace limit information.
func (o GetAccountInfoResultOutput) AccountLimits() GetAccountInfoAccountLimitArrayOutput {
	return o.ApplyT(func(v GetAccountInfoResult) []GetAccountInfoAccountLimit { return v.AccountLimits }).(GetAccountInfoAccountLimitArrayOutput)
}

// Namespace usage information.
func (o GetAccountInfoResultOutput) AccountUsages() GetAccountInfoAccountUsageArrayOutput {
	return o.ApplyT(func(v GetAccountInfoResult) []GetAccountInfoAccountUsage { return v.AccountUsages }).(GetAccountInfoAccountUsageArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAccountInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccountInfoResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccountInfoResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccountInfoResultOutput{})
}
