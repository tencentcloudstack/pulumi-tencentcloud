// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chdfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessRuleAccessRule struct {
	// rule access mode, 1: read only, 2: read &amp; wirte.
	AccessMode   *int `pulumi:"accessMode"`
	AccessRuleId *int `pulumi:"accessRuleId"`
	// rule address, IP OR IP SEG.
	Address    *string `pulumi:"address"`
	CreateTime *string `pulumi:"createTime"`
	// rule priority, range 1 - 100, value less higher priority.
	Priority *int `pulumi:"priority"`
}

// AccessRuleAccessRuleInput is an input type that accepts AccessRuleAccessRuleArgs and AccessRuleAccessRuleOutput values.
// You can construct a concrete instance of `AccessRuleAccessRuleInput` via:
//
//	AccessRuleAccessRuleArgs{...}
type AccessRuleAccessRuleInput interface {
	pulumi.Input

	ToAccessRuleAccessRuleOutput() AccessRuleAccessRuleOutput
	ToAccessRuleAccessRuleOutputWithContext(context.Context) AccessRuleAccessRuleOutput
}

type AccessRuleAccessRuleArgs struct {
	// rule access mode, 1: read only, 2: read &amp; wirte.
	AccessMode   pulumi.IntPtrInput `pulumi:"accessMode"`
	AccessRuleId pulumi.IntPtrInput `pulumi:"accessRuleId"`
	// rule address, IP OR IP SEG.
	Address    pulumi.StringPtrInput `pulumi:"address"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// rule priority, range 1 - 100, value less higher priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (AccessRuleAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRuleAccessRule)(nil)).Elem()
}

func (i AccessRuleAccessRuleArgs) ToAccessRuleAccessRuleOutput() AccessRuleAccessRuleOutput {
	return i.ToAccessRuleAccessRuleOutputWithContext(context.Background())
}

func (i AccessRuleAccessRuleArgs) ToAccessRuleAccessRuleOutputWithContext(ctx context.Context) AccessRuleAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleAccessRuleOutput)
}

func (i AccessRuleAccessRuleArgs) ToAccessRuleAccessRulePtrOutput() AccessRuleAccessRulePtrOutput {
	return i.ToAccessRuleAccessRulePtrOutputWithContext(context.Background())
}

func (i AccessRuleAccessRuleArgs) ToAccessRuleAccessRulePtrOutputWithContext(ctx context.Context) AccessRuleAccessRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleAccessRuleOutput).ToAccessRuleAccessRulePtrOutputWithContext(ctx)
}

// AccessRuleAccessRulePtrInput is an input type that accepts AccessRuleAccessRuleArgs, AccessRuleAccessRulePtr and AccessRuleAccessRulePtrOutput values.
// You can construct a concrete instance of `AccessRuleAccessRulePtrInput` via:
//
//	        AccessRuleAccessRuleArgs{...}
//
//	or:
//
//	        nil
type AccessRuleAccessRulePtrInput interface {
	pulumi.Input

	ToAccessRuleAccessRulePtrOutput() AccessRuleAccessRulePtrOutput
	ToAccessRuleAccessRulePtrOutputWithContext(context.Context) AccessRuleAccessRulePtrOutput
}

type accessRuleAccessRulePtrType AccessRuleAccessRuleArgs

func AccessRuleAccessRulePtr(v *AccessRuleAccessRuleArgs) AccessRuleAccessRulePtrInput {
	return (*accessRuleAccessRulePtrType)(v)
}

func (*accessRuleAccessRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRuleAccessRule)(nil)).Elem()
}

func (i *accessRuleAccessRulePtrType) ToAccessRuleAccessRulePtrOutput() AccessRuleAccessRulePtrOutput {
	return i.ToAccessRuleAccessRulePtrOutputWithContext(context.Background())
}

func (i *accessRuleAccessRulePtrType) ToAccessRuleAccessRulePtrOutputWithContext(ctx context.Context) AccessRuleAccessRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleAccessRulePtrOutput)
}

type AccessRuleAccessRuleOutput struct{ *pulumi.OutputState }

func (AccessRuleAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRuleAccessRule)(nil)).Elem()
}

func (o AccessRuleAccessRuleOutput) ToAccessRuleAccessRuleOutput() AccessRuleAccessRuleOutput {
	return o
}

func (o AccessRuleAccessRuleOutput) ToAccessRuleAccessRuleOutputWithContext(ctx context.Context) AccessRuleAccessRuleOutput {
	return o
}

func (o AccessRuleAccessRuleOutput) ToAccessRuleAccessRulePtrOutput() AccessRuleAccessRulePtrOutput {
	return o.ToAccessRuleAccessRulePtrOutputWithContext(context.Background())
}

func (o AccessRuleAccessRuleOutput) ToAccessRuleAccessRulePtrOutputWithContext(ctx context.Context) AccessRuleAccessRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessRuleAccessRule) *AccessRuleAccessRule {
		return &v
	}).(AccessRuleAccessRulePtrOutput)
}

// rule access mode, 1: read only, 2: read &amp; wirte.
func (o AccessRuleAccessRuleOutput) AccessMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessRuleAccessRule) *int { return v.AccessMode }).(pulumi.IntPtrOutput)
}

func (o AccessRuleAccessRuleOutput) AccessRuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessRuleAccessRule) *int { return v.AccessRuleId }).(pulumi.IntPtrOutput)
}

// rule address, IP OR IP SEG.
func (o AccessRuleAccessRuleOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessRuleAccessRule) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o AccessRuleAccessRuleOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessRuleAccessRule) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// rule priority, range 1 - 100, value less higher priority.
func (o AccessRuleAccessRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessRuleAccessRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type AccessRuleAccessRulePtrOutput struct{ *pulumi.OutputState }

func (AccessRuleAccessRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRuleAccessRule)(nil)).Elem()
}

func (o AccessRuleAccessRulePtrOutput) ToAccessRuleAccessRulePtrOutput() AccessRuleAccessRulePtrOutput {
	return o
}

func (o AccessRuleAccessRulePtrOutput) ToAccessRuleAccessRulePtrOutputWithContext(ctx context.Context) AccessRuleAccessRulePtrOutput {
	return o
}

func (o AccessRuleAccessRulePtrOutput) Elem() AccessRuleAccessRuleOutput {
	return o.ApplyT(func(v *AccessRuleAccessRule) AccessRuleAccessRule {
		if v != nil {
			return *v
		}
		var ret AccessRuleAccessRule
		return ret
	}).(AccessRuleAccessRuleOutput)
}

// rule access mode, 1: read only, 2: read &amp; wirte.
func (o AccessRuleAccessRulePtrOutput) AccessMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessRuleAccessRule) *int {
		if v == nil {
			return nil
		}
		return v.AccessMode
	}).(pulumi.IntPtrOutput)
}

func (o AccessRuleAccessRulePtrOutput) AccessRuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessRuleAccessRule) *int {
		if v == nil {
			return nil
		}
		return v.AccessRuleId
	}).(pulumi.IntPtrOutput)
}

// rule address, IP OR IP SEG.
func (o AccessRuleAccessRulePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRuleAccessRule) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o AccessRuleAccessRulePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRuleAccessRule) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// rule priority, range 1 - 100, value less higher priority.
func (o AccessRuleAccessRulePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessRuleAccessRule) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

type LifeCycleRuleLifeCycleRule struct {
	CreateTime      *string `pulumi:"createTime"`
	LifeCycleRuleId *int    `pulumi:"lifeCycleRuleId"`
	// rule name.
	LifeCycleRuleName *string `pulumi:"lifeCycleRuleName"`
	// rule op path.
	Path *string `pulumi:"path"`
	// rule status, 1:open, 2:close.
	Status *int `pulumi:"status"`
	// life cycle rule transition list.
	Transitions []LifeCycleRuleLifeCycleRuleTransition `pulumi:"transitions"`
}

// LifeCycleRuleLifeCycleRuleInput is an input type that accepts LifeCycleRuleLifeCycleRuleArgs and LifeCycleRuleLifeCycleRuleOutput values.
// You can construct a concrete instance of `LifeCycleRuleLifeCycleRuleInput` via:
//
//	LifeCycleRuleLifeCycleRuleArgs{...}
type LifeCycleRuleLifeCycleRuleInput interface {
	pulumi.Input

	ToLifeCycleRuleLifeCycleRuleOutput() LifeCycleRuleLifeCycleRuleOutput
	ToLifeCycleRuleLifeCycleRuleOutputWithContext(context.Context) LifeCycleRuleLifeCycleRuleOutput
}

type LifeCycleRuleLifeCycleRuleArgs struct {
	CreateTime      pulumi.StringPtrInput `pulumi:"createTime"`
	LifeCycleRuleId pulumi.IntPtrInput    `pulumi:"lifeCycleRuleId"`
	// rule name.
	LifeCycleRuleName pulumi.StringPtrInput `pulumi:"lifeCycleRuleName"`
	// rule op path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// rule status, 1:open, 2:close.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// life cycle rule transition list.
	Transitions LifeCycleRuleLifeCycleRuleTransitionArrayInput `pulumi:"transitions"`
}

func (LifeCycleRuleLifeCycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifeCycleRuleLifeCycleRule)(nil)).Elem()
}

func (i LifeCycleRuleLifeCycleRuleArgs) ToLifeCycleRuleLifeCycleRuleOutput() LifeCycleRuleLifeCycleRuleOutput {
	return i.ToLifeCycleRuleLifeCycleRuleOutputWithContext(context.Background())
}

func (i LifeCycleRuleLifeCycleRuleArgs) ToLifeCycleRuleLifeCycleRuleOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifeCycleRuleLifeCycleRuleOutput)
}

func (i LifeCycleRuleLifeCycleRuleArgs) ToLifeCycleRuleLifeCycleRulePtrOutput() LifeCycleRuleLifeCycleRulePtrOutput {
	return i.ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(context.Background())
}

func (i LifeCycleRuleLifeCycleRuleArgs) ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifeCycleRuleLifeCycleRuleOutput).ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(ctx)
}

// LifeCycleRuleLifeCycleRulePtrInput is an input type that accepts LifeCycleRuleLifeCycleRuleArgs, LifeCycleRuleLifeCycleRulePtr and LifeCycleRuleLifeCycleRulePtrOutput values.
// You can construct a concrete instance of `LifeCycleRuleLifeCycleRulePtrInput` via:
//
//	        LifeCycleRuleLifeCycleRuleArgs{...}
//
//	or:
//
//	        nil
type LifeCycleRuleLifeCycleRulePtrInput interface {
	pulumi.Input

	ToLifeCycleRuleLifeCycleRulePtrOutput() LifeCycleRuleLifeCycleRulePtrOutput
	ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(context.Context) LifeCycleRuleLifeCycleRulePtrOutput
}

type lifeCycleRuleLifeCycleRulePtrType LifeCycleRuleLifeCycleRuleArgs

func LifeCycleRuleLifeCycleRulePtr(v *LifeCycleRuleLifeCycleRuleArgs) LifeCycleRuleLifeCycleRulePtrInput {
	return (*lifeCycleRuleLifeCycleRulePtrType)(v)
}

func (*lifeCycleRuleLifeCycleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifeCycleRuleLifeCycleRule)(nil)).Elem()
}

func (i *lifeCycleRuleLifeCycleRulePtrType) ToLifeCycleRuleLifeCycleRulePtrOutput() LifeCycleRuleLifeCycleRulePtrOutput {
	return i.ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(context.Background())
}

func (i *lifeCycleRuleLifeCycleRulePtrType) ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifeCycleRuleLifeCycleRulePtrOutput)
}

type LifeCycleRuleLifeCycleRuleOutput struct{ *pulumi.OutputState }

func (LifeCycleRuleLifeCycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifeCycleRuleLifeCycleRule)(nil)).Elem()
}

func (o LifeCycleRuleLifeCycleRuleOutput) ToLifeCycleRuleLifeCycleRuleOutput() LifeCycleRuleLifeCycleRuleOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRuleOutput) ToLifeCycleRuleLifeCycleRuleOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRuleOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRuleOutput) ToLifeCycleRuleLifeCycleRulePtrOutput() LifeCycleRuleLifeCycleRulePtrOutput {
	return o.ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(context.Background())
}

func (o LifeCycleRuleLifeCycleRuleOutput) ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifeCycleRuleLifeCycleRule) *LifeCycleRuleLifeCycleRule {
		return &v
	}).(LifeCycleRuleLifeCycleRulePtrOutput)
}

func (o LifeCycleRuleLifeCycleRuleOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRule) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o LifeCycleRuleLifeCycleRuleOutput) LifeCycleRuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRule) *int { return v.LifeCycleRuleId }).(pulumi.IntPtrOutput)
}

// rule name.
func (o LifeCycleRuleLifeCycleRuleOutput) LifeCycleRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRule) *string { return v.LifeCycleRuleName }).(pulumi.StringPtrOutput)
}

// rule op path.
func (o LifeCycleRuleLifeCycleRuleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRule) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// rule status, 1:open, 2:close.
func (o LifeCycleRuleLifeCycleRuleOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRule) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// life cycle rule transition list.
func (o LifeCycleRuleLifeCycleRuleOutput) Transitions() LifeCycleRuleLifeCycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRule) []LifeCycleRuleLifeCycleRuleTransition { return v.Transitions }).(LifeCycleRuleLifeCycleRuleTransitionArrayOutput)
}

type LifeCycleRuleLifeCycleRulePtrOutput struct{ *pulumi.OutputState }

func (LifeCycleRuleLifeCycleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifeCycleRuleLifeCycleRule)(nil)).Elem()
}

func (o LifeCycleRuleLifeCycleRulePtrOutput) ToLifeCycleRuleLifeCycleRulePtrOutput() LifeCycleRuleLifeCycleRulePtrOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRulePtrOutput) ToLifeCycleRuleLifeCycleRulePtrOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRulePtrOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRulePtrOutput) Elem() LifeCycleRuleLifeCycleRuleOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) LifeCycleRuleLifeCycleRule {
		if v != nil {
			return *v
		}
		var ret LifeCycleRuleLifeCycleRule
		return ret
	}).(LifeCycleRuleLifeCycleRuleOutput)
}

func (o LifeCycleRuleLifeCycleRulePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

func (o LifeCycleRuleLifeCycleRulePtrOutput) LifeCycleRuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) *int {
		if v == nil {
			return nil
		}
		return v.LifeCycleRuleId
	}).(pulumi.IntPtrOutput)
}

// rule name.
func (o LifeCycleRuleLifeCycleRulePtrOutput) LifeCycleRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) *string {
		if v == nil {
			return nil
		}
		return v.LifeCycleRuleName
	}).(pulumi.StringPtrOutput)
}

// rule op path.
func (o LifeCycleRuleLifeCycleRulePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// rule status, 1:open, 2:close.
func (o LifeCycleRuleLifeCycleRulePtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// life cycle rule transition list.
func (o LifeCycleRuleLifeCycleRulePtrOutput) Transitions() LifeCycleRuleLifeCycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v *LifeCycleRuleLifeCycleRule) []LifeCycleRuleLifeCycleRuleTransition {
		if v == nil {
			return nil
		}
		return v.Transitions
	}).(LifeCycleRuleLifeCycleRuleTransitionArrayOutput)
}

type LifeCycleRuleLifeCycleRuleTransition struct {
	// trigger days(n day).
	Days int `pulumi:"days"`
	// transition type, 1: archive, 2: delete, 3: low rate.
	Type int `pulumi:"type"`
}

// LifeCycleRuleLifeCycleRuleTransitionInput is an input type that accepts LifeCycleRuleLifeCycleRuleTransitionArgs and LifeCycleRuleLifeCycleRuleTransitionOutput values.
// You can construct a concrete instance of `LifeCycleRuleLifeCycleRuleTransitionInput` via:
//
//	LifeCycleRuleLifeCycleRuleTransitionArgs{...}
type LifeCycleRuleLifeCycleRuleTransitionInput interface {
	pulumi.Input

	ToLifeCycleRuleLifeCycleRuleTransitionOutput() LifeCycleRuleLifeCycleRuleTransitionOutput
	ToLifeCycleRuleLifeCycleRuleTransitionOutputWithContext(context.Context) LifeCycleRuleLifeCycleRuleTransitionOutput
}

type LifeCycleRuleLifeCycleRuleTransitionArgs struct {
	// trigger days(n day).
	Days pulumi.IntInput `pulumi:"days"`
	// transition type, 1: archive, 2: delete, 3: low rate.
	Type pulumi.IntInput `pulumi:"type"`
}

func (LifeCycleRuleLifeCycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifeCycleRuleLifeCycleRuleTransition)(nil)).Elem()
}

func (i LifeCycleRuleLifeCycleRuleTransitionArgs) ToLifeCycleRuleLifeCycleRuleTransitionOutput() LifeCycleRuleLifeCycleRuleTransitionOutput {
	return i.ToLifeCycleRuleLifeCycleRuleTransitionOutputWithContext(context.Background())
}

func (i LifeCycleRuleLifeCycleRuleTransitionArgs) ToLifeCycleRuleLifeCycleRuleTransitionOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifeCycleRuleLifeCycleRuleTransitionOutput)
}

// LifeCycleRuleLifeCycleRuleTransitionArrayInput is an input type that accepts LifeCycleRuleLifeCycleRuleTransitionArray and LifeCycleRuleLifeCycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `LifeCycleRuleLifeCycleRuleTransitionArrayInput` via:
//
//	LifeCycleRuleLifeCycleRuleTransitionArray{ LifeCycleRuleLifeCycleRuleTransitionArgs{...} }
type LifeCycleRuleLifeCycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToLifeCycleRuleLifeCycleRuleTransitionArrayOutput() LifeCycleRuleLifeCycleRuleTransitionArrayOutput
	ToLifeCycleRuleLifeCycleRuleTransitionArrayOutputWithContext(context.Context) LifeCycleRuleLifeCycleRuleTransitionArrayOutput
}

type LifeCycleRuleLifeCycleRuleTransitionArray []LifeCycleRuleLifeCycleRuleTransitionInput

func (LifeCycleRuleLifeCycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifeCycleRuleLifeCycleRuleTransition)(nil)).Elem()
}

func (i LifeCycleRuleLifeCycleRuleTransitionArray) ToLifeCycleRuleLifeCycleRuleTransitionArrayOutput() LifeCycleRuleLifeCycleRuleTransitionArrayOutput {
	return i.ToLifeCycleRuleLifeCycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i LifeCycleRuleLifeCycleRuleTransitionArray) ToLifeCycleRuleLifeCycleRuleTransitionArrayOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifeCycleRuleLifeCycleRuleTransitionArrayOutput)
}

type LifeCycleRuleLifeCycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (LifeCycleRuleLifeCycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifeCycleRuleLifeCycleRuleTransition)(nil)).Elem()
}

func (o LifeCycleRuleLifeCycleRuleTransitionOutput) ToLifeCycleRuleLifeCycleRuleTransitionOutput() LifeCycleRuleLifeCycleRuleTransitionOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRuleTransitionOutput) ToLifeCycleRuleLifeCycleRuleTransitionOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRuleTransitionOutput {
	return o
}

// trigger days(n day).
func (o LifeCycleRuleLifeCycleRuleTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRuleTransition) int { return v.Days }).(pulumi.IntOutput)
}

// transition type, 1: archive, 2: delete, 3: low rate.
func (o LifeCycleRuleLifeCycleRuleTransitionOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v LifeCycleRuleLifeCycleRuleTransition) int { return v.Type }).(pulumi.IntOutput)
}

type LifeCycleRuleLifeCycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (LifeCycleRuleLifeCycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifeCycleRuleLifeCycleRuleTransition)(nil)).Elem()
}

func (o LifeCycleRuleLifeCycleRuleTransitionArrayOutput) ToLifeCycleRuleLifeCycleRuleTransitionArrayOutput() LifeCycleRuleLifeCycleRuleTransitionArrayOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRuleTransitionArrayOutput) ToLifeCycleRuleLifeCycleRuleTransitionArrayOutputWithContext(ctx context.Context) LifeCycleRuleLifeCycleRuleTransitionArrayOutput {
	return o
}

func (o LifeCycleRuleLifeCycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) LifeCycleRuleLifeCycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifeCycleRuleLifeCycleRuleTransition {
		return vs[0].([]LifeCycleRuleLifeCycleRuleTransition)[vs[1].(int)]
	}).(LifeCycleRuleLifeCycleRuleTransitionOutput)
}

type GetAccessGroupsAccessGroup struct {
	// access group id.
	AccessGroupId string `pulumi:"accessGroupId"`
	// access group name.
	AccessGroupName string `pulumi:"accessGroupName"`
	// create time.
	CreateTime string `pulumi:"createTime"`
	// access group description.
	Description string `pulumi:"description"`
	// get groups belongs to the vpc id, must set but only can use one of VpcId and OwnerUin to get the groups.
	VpcId string `pulumi:"vpcId"`
	// vpc network type(1:CVM, 2:BM 1.0).
	VpcType int `pulumi:"vpcType"`
}

// GetAccessGroupsAccessGroupInput is an input type that accepts GetAccessGroupsAccessGroupArgs and GetAccessGroupsAccessGroupOutput values.
// You can construct a concrete instance of `GetAccessGroupsAccessGroupInput` via:
//
//	GetAccessGroupsAccessGroupArgs{...}
type GetAccessGroupsAccessGroupInput interface {
	pulumi.Input

	ToGetAccessGroupsAccessGroupOutput() GetAccessGroupsAccessGroupOutput
	ToGetAccessGroupsAccessGroupOutputWithContext(context.Context) GetAccessGroupsAccessGroupOutput
}

type GetAccessGroupsAccessGroupArgs struct {
	// access group id.
	AccessGroupId pulumi.StringInput `pulumi:"accessGroupId"`
	// access group name.
	AccessGroupName pulumi.StringInput `pulumi:"accessGroupName"`
	// create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// access group description.
	Description pulumi.StringInput `pulumi:"description"`
	// get groups belongs to the vpc id, must set but only can use one of VpcId and OwnerUin to get the groups.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// vpc network type(1:CVM, 2:BM 1.0).
	VpcType pulumi.IntInput `pulumi:"vpcType"`
}

func (GetAccessGroupsAccessGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessGroupsAccessGroup)(nil)).Elem()
}

func (i GetAccessGroupsAccessGroupArgs) ToGetAccessGroupsAccessGroupOutput() GetAccessGroupsAccessGroupOutput {
	return i.ToGetAccessGroupsAccessGroupOutputWithContext(context.Background())
}

func (i GetAccessGroupsAccessGroupArgs) ToGetAccessGroupsAccessGroupOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessGroupsAccessGroupOutput)
}

// GetAccessGroupsAccessGroupArrayInput is an input type that accepts GetAccessGroupsAccessGroupArray and GetAccessGroupsAccessGroupArrayOutput values.
// You can construct a concrete instance of `GetAccessGroupsAccessGroupArrayInput` via:
//
//	GetAccessGroupsAccessGroupArray{ GetAccessGroupsAccessGroupArgs{...} }
type GetAccessGroupsAccessGroupArrayInput interface {
	pulumi.Input

	ToGetAccessGroupsAccessGroupArrayOutput() GetAccessGroupsAccessGroupArrayOutput
	ToGetAccessGroupsAccessGroupArrayOutputWithContext(context.Context) GetAccessGroupsAccessGroupArrayOutput
}

type GetAccessGroupsAccessGroupArray []GetAccessGroupsAccessGroupInput

func (GetAccessGroupsAccessGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessGroupsAccessGroup)(nil)).Elem()
}

func (i GetAccessGroupsAccessGroupArray) ToGetAccessGroupsAccessGroupArrayOutput() GetAccessGroupsAccessGroupArrayOutput {
	return i.ToGetAccessGroupsAccessGroupArrayOutputWithContext(context.Background())
}

func (i GetAccessGroupsAccessGroupArray) ToGetAccessGroupsAccessGroupArrayOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessGroupsAccessGroupArrayOutput)
}

type GetAccessGroupsAccessGroupOutput struct{ *pulumi.OutputState }

func (GetAccessGroupsAccessGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessGroupsAccessGroup)(nil)).Elem()
}

func (o GetAccessGroupsAccessGroupOutput) ToGetAccessGroupsAccessGroupOutput() GetAccessGroupsAccessGroupOutput {
	return o
}

func (o GetAccessGroupsAccessGroupOutput) ToGetAccessGroupsAccessGroupOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupOutput {
	return o
}

// access group id.
func (o GetAccessGroupsAccessGroupOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroup) string { return v.AccessGroupId }).(pulumi.StringOutput)
}

// access group name.
func (o GetAccessGroupsAccessGroupOutput) AccessGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroup) string { return v.AccessGroupName }).(pulumi.StringOutput)
}

// create time.
func (o GetAccessGroupsAccessGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// access group description.
func (o GetAccessGroupsAccessGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroup) string { return v.Description }).(pulumi.StringOutput)
}

// get groups belongs to the vpc id, must set but only can use one of VpcId and OwnerUin to get the groups.
func (o GetAccessGroupsAccessGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

// vpc network type(1:CVM, 2:BM 1.0).
func (o GetAccessGroupsAccessGroupOutput) VpcType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroup) int { return v.VpcType }).(pulumi.IntOutput)
}

type GetAccessGroupsAccessGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAccessGroupsAccessGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessGroupsAccessGroup)(nil)).Elem()
}

func (o GetAccessGroupsAccessGroupArrayOutput) ToGetAccessGroupsAccessGroupArrayOutput() GetAccessGroupsAccessGroupArrayOutput {
	return o
}

func (o GetAccessGroupsAccessGroupArrayOutput) ToGetAccessGroupsAccessGroupArrayOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupArrayOutput {
	return o
}

func (o GetAccessGroupsAccessGroupArrayOutput) Index(i pulumi.IntInput) GetAccessGroupsAccessGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessGroupsAccessGroup {
		return vs[0].([]GetAccessGroupsAccessGroup)[vs[1].(int)]
	}).(GetAccessGroupsAccessGroupOutput)
}

type GetFileSystemsFileSystem struct {
	// appid of the user.
	AppId int `pulumi:"appId"`
	// block size of the file system(byte).
	BlockSize int `pulumi:"blockSize"`
	// capacity of the file system(byte).
	CapacityQuota int `pulumi:"capacityQuota"`
	// create time.
	CreateTime string `pulumi:"createTime"`
	// desc of the file system.
	Description string `pulumi:"description"`
	// check the ranger address or not.
	EnableRanger bool `pulumi:"enableRanger"`
	// file system id.
	FileSystemId string `pulumi:"fileSystemId"`
	// file system name.
	FileSystemName string `pulumi:"fileSystemName"`
	// check POSIX ACL or not.
	PosixAcl bool `pulumi:"posixAcl"`
	// ranger address list.
	RangerServiceAddresses []string `pulumi:"rangerServiceAddresses"`
	// region of the file system.
	Region string `pulumi:"region"`
	// status of the file system(1: creating create success 3: create failed).
	Status int `pulumi:"status"`
	// super users of the file system.
	SuperUsers []string `pulumi:"superUsers"`
}

// GetFileSystemsFileSystemInput is an input type that accepts GetFileSystemsFileSystemArgs and GetFileSystemsFileSystemOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemInput` via:
//
//	GetFileSystemsFileSystemArgs{...}
type GetFileSystemsFileSystemInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemOutput() GetFileSystemsFileSystemOutput
	ToGetFileSystemsFileSystemOutputWithContext(context.Context) GetFileSystemsFileSystemOutput
}

type GetFileSystemsFileSystemArgs struct {
	// appid of the user.
	AppId pulumi.IntInput `pulumi:"appId"`
	// block size of the file system(byte).
	BlockSize pulumi.IntInput `pulumi:"blockSize"`
	// capacity of the file system(byte).
	CapacityQuota pulumi.IntInput `pulumi:"capacityQuota"`
	// create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// desc of the file system.
	Description pulumi.StringInput `pulumi:"description"`
	// check the ranger address or not.
	EnableRanger pulumi.BoolInput `pulumi:"enableRanger"`
	// file system id.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// file system name.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// check POSIX ACL or not.
	PosixAcl pulumi.BoolInput `pulumi:"posixAcl"`
	// ranger address list.
	RangerServiceAddresses pulumi.StringArrayInput `pulumi:"rangerServiceAddresses"`
	// region of the file system.
	Region pulumi.StringInput `pulumi:"region"`
	// status of the file system(1: creating create success 3: create failed).
	Status pulumi.IntInput `pulumi:"status"`
	// super users of the file system.
	SuperUsers pulumi.StringArrayInput `pulumi:"superUsers"`
}

func (GetFileSystemsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystem)(nil)).Elem()
}

func (i GetFileSystemsFileSystemArgs) ToGetFileSystemsFileSystemOutput() GetFileSystemsFileSystemOutput {
	return i.ToGetFileSystemsFileSystemOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemArgs) ToGetFileSystemsFileSystemOutputWithContext(ctx context.Context) GetFileSystemsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemOutput)
}

// GetFileSystemsFileSystemArrayInput is an input type that accepts GetFileSystemsFileSystemArray and GetFileSystemsFileSystemArrayOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemArrayInput` via:
//
//	GetFileSystemsFileSystemArray{ GetFileSystemsFileSystemArgs{...} }
type GetFileSystemsFileSystemArrayInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemArrayOutput() GetFileSystemsFileSystemArrayOutput
	ToGetFileSystemsFileSystemArrayOutputWithContext(context.Context) GetFileSystemsFileSystemArrayOutput
}

type GetFileSystemsFileSystemArray []GetFileSystemsFileSystemInput

func (GetFileSystemsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystem)(nil)).Elem()
}

func (i GetFileSystemsFileSystemArray) ToGetFileSystemsFileSystemArrayOutput() GetFileSystemsFileSystemArrayOutput {
	return i.ToGetFileSystemsFileSystemArrayOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemArray) ToGetFileSystemsFileSystemArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemArrayOutput)
}

type GetFileSystemsFileSystemOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystem)(nil)).Elem()
}

func (o GetFileSystemsFileSystemOutput) ToGetFileSystemsFileSystemOutput() GetFileSystemsFileSystemOutput {
	return o
}

func (o GetFileSystemsFileSystemOutput) ToGetFileSystemsFileSystemOutputWithContext(ctx context.Context) GetFileSystemsFileSystemOutput {
	return o
}

// appid of the user.
func (o GetFileSystemsFileSystemOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) int { return v.AppId }).(pulumi.IntOutput)
}

// block size of the file system(byte).
func (o GetFileSystemsFileSystemOutput) BlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) int { return v.BlockSize }).(pulumi.IntOutput)
}

// capacity of the file system(byte).
func (o GetFileSystemsFileSystemOutput) CapacityQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) int { return v.CapacityQuota }).(pulumi.IntOutput)
}

// create time.
func (o GetFileSystemsFileSystemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.CreateTime }).(pulumi.StringOutput)
}

// desc of the file system.
func (o GetFileSystemsFileSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Description }).(pulumi.StringOutput)
}

// check the ranger address or not.
func (o GetFileSystemsFileSystemOutput) EnableRanger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) bool { return v.EnableRanger }).(pulumi.BoolOutput)
}

// file system id.
func (o GetFileSystemsFileSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// file system name.
func (o GetFileSystemsFileSystemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.FileSystemName }).(pulumi.StringOutput)
}

// check POSIX ACL or not.
func (o GetFileSystemsFileSystemOutput) PosixAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) bool { return v.PosixAcl }).(pulumi.BoolOutput)
}

// ranger address list.
func (o GetFileSystemsFileSystemOutput) RangerServiceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) []string { return v.RangerServiceAddresses }).(pulumi.StringArrayOutput)
}

// region of the file system.
func (o GetFileSystemsFileSystemOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Region }).(pulumi.StringOutput)
}

// status of the file system(1: creating create success 3: create failed).
func (o GetFileSystemsFileSystemOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) int { return v.Status }).(pulumi.IntOutput)
}

// super users of the file system.
func (o GetFileSystemsFileSystemOutput) SuperUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) []string { return v.SuperUsers }).(pulumi.StringArrayOutput)
}

type GetFileSystemsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystem)(nil)).Elem()
}

func (o GetFileSystemsFileSystemArrayOutput) ToGetFileSystemsFileSystemArrayOutput() GetFileSystemsFileSystemArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemArrayOutput) ToGetFileSystemsFileSystemArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemArrayOutput) Index(i pulumi.IntInput) GetFileSystemsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileSystemsFileSystem {
		return vs[0].([]GetFileSystemsFileSystem)[vs[1].(int)]
	}).(GetFileSystemsFileSystemOutput)
}

type GetMountPointsMountPoint struct {
	// associated group ids.
	AccessGroupIds []string `pulumi:"accessGroupIds"`
	// create time.
	CreateTime string `pulumi:"createTime"`
	// get mount points belongs to file system id, only can use one of the AccessGroupId,FileSystemId,OwnerUin parameters.
	FileSystemId string `pulumi:"fileSystemId"`
	// mount point id.
	MountPointId string `pulumi:"mountPointId"`
	// mount point name.
	MountPointName string `pulumi:"mountPointName"`
	// mount point status.
	Status int `pulumi:"status"`
}

// GetMountPointsMountPointInput is an input type that accepts GetMountPointsMountPointArgs and GetMountPointsMountPointOutput values.
// You can construct a concrete instance of `GetMountPointsMountPointInput` via:
//
//	GetMountPointsMountPointArgs{...}
type GetMountPointsMountPointInput interface {
	pulumi.Input

	ToGetMountPointsMountPointOutput() GetMountPointsMountPointOutput
	ToGetMountPointsMountPointOutputWithContext(context.Context) GetMountPointsMountPointOutput
}

type GetMountPointsMountPointArgs struct {
	// associated group ids.
	AccessGroupIds pulumi.StringArrayInput `pulumi:"accessGroupIds"`
	// create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// get mount points belongs to file system id, only can use one of the AccessGroupId,FileSystemId,OwnerUin parameters.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// mount point id.
	MountPointId pulumi.StringInput `pulumi:"mountPointId"`
	// mount point name.
	MountPointName pulumi.StringInput `pulumi:"mountPointName"`
	// mount point status.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetMountPointsMountPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountPointsMountPoint)(nil)).Elem()
}

func (i GetMountPointsMountPointArgs) ToGetMountPointsMountPointOutput() GetMountPointsMountPointOutput {
	return i.ToGetMountPointsMountPointOutputWithContext(context.Background())
}

func (i GetMountPointsMountPointArgs) ToGetMountPointsMountPointOutputWithContext(ctx context.Context) GetMountPointsMountPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountPointsMountPointOutput)
}

// GetMountPointsMountPointArrayInput is an input type that accepts GetMountPointsMountPointArray and GetMountPointsMountPointArrayOutput values.
// You can construct a concrete instance of `GetMountPointsMountPointArrayInput` via:
//
//	GetMountPointsMountPointArray{ GetMountPointsMountPointArgs{...} }
type GetMountPointsMountPointArrayInput interface {
	pulumi.Input

	ToGetMountPointsMountPointArrayOutput() GetMountPointsMountPointArrayOutput
	ToGetMountPointsMountPointArrayOutputWithContext(context.Context) GetMountPointsMountPointArrayOutput
}

type GetMountPointsMountPointArray []GetMountPointsMountPointInput

func (GetMountPointsMountPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountPointsMountPoint)(nil)).Elem()
}

func (i GetMountPointsMountPointArray) ToGetMountPointsMountPointArrayOutput() GetMountPointsMountPointArrayOutput {
	return i.ToGetMountPointsMountPointArrayOutputWithContext(context.Background())
}

func (i GetMountPointsMountPointArray) ToGetMountPointsMountPointArrayOutputWithContext(ctx context.Context) GetMountPointsMountPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountPointsMountPointArrayOutput)
}

type GetMountPointsMountPointOutput struct{ *pulumi.OutputState }

func (GetMountPointsMountPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountPointsMountPoint)(nil)).Elem()
}

func (o GetMountPointsMountPointOutput) ToGetMountPointsMountPointOutput() GetMountPointsMountPointOutput {
	return o
}

func (o GetMountPointsMountPointOutput) ToGetMountPointsMountPointOutputWithContext(ctx context.Context) GetMountPointsMountPointOutput {
	return o
}

// associated group ids.
func (o GetMountPointsMountPointOutput) AccessGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMountPointsMountPoint) []string { return v.AccessGroupIds }).(pulumi.StringArrayOutput)
}

// create time.
func (o GetMountPointsMountPointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountPointsMountPoint) string { return v.CreateTime }).(pulumi.StringOutput)
}

// get mount points belongs to file system id, only can use one of the AccessGroupId,FileSystemId,OwnerUin parameters.
func (o GetMountPointsMountPointOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountPointsMountPoint) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// mount point id.
func (o GetMountPointsMountPointOutput) MountPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountPointsMountPoint) string { return v.MountPointId }).(pulumi.StringOutput)
}

// mount point name.
func (o GetMountPointsMountPointOutput) MountPointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountPointsMountPoint) string { return v.MountPointName }).(pulumi.StringOutput)
}

// mount point status.
func (o GetMountPointsMountPointOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetMountPointsMountPoint) int { return v.Status }).(pulumi.IntOutput)
}

type GetMountPointsMountPointArrayOutput struct{ *pulumi.OutputState }

func (GetMountPointsMountPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountPointsMountPoint)(nil)).Elem()
}

func (o GetMountPointsMountPointArrayOutput) ToGetMountPointsMountPointArrayOutput() GetMountPointsMountPointArrayOutput {
	return o
}

func (o GetMountPointsMountPointArrayOutput) ToGetMountPointsMountPointArrayOutputWithContext(ctx context.Context) GetMountPointsMountPointArrayOutput {
	return o
}

func (o GetMountPointsMountPointArrayOutput) Index(i pulumi.IntInput) GetMountPointsMountPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMountPointsMountPoint {
		return vs[0].([]GetMountPointsMountPoint)[vs[1].(int)]
	}).(GetMountPointsMountPointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleAccessRuleInput)(nil)).Elem(), AccessRuleAccessRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleAccessRulePtrInput)(nil)).Elem(), AccessRuleAccessRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifeCycleRuleLifeCycleRuleInput)(nil)).Elem(), LifeCycleRuleLifeCycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifeCycleRuleLifeCycleRulePtrInput)(nil)).Elem(), LifeCycleRuleLifeCycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifeCycleRuleLifeCycleRuleTransitionInput)(nil)).Elem(), LifeCycleRuleLifeCycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifeCycleRuleLifeCycleRuleTransitionArrayInput)(nil)).Elem(), LifeCycleRuleLifeCycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessGroupsAccessGroupInput)(nil)).Elem(), GetAccessGroupsAccessGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessGroupsAccessGroupArrayInput)(nil)).Elem(), GetAccessGroupsAccessGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemInput)(nil)).Elem(), GetFileSystemsFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemArrayInput)(nil)).Elem(), GetFileSystemsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountPointsMountPointInput)(nil)).Elem(), GetMountPointsMountPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountPointsMountPointArrayInput)(nil)).Elem(), GetMountPointsMountPointArray{})
	pulumi.RegisterOutputType(AccessRuleAccessRuleOutput{})
	pulumi.RegisterOutputType(AccessRuleAccessRulePtrOutput{})
	pulumi.RegisterOutputType(LifeCycleRuleLifeCycleRuleOutput{})
	pulumi.RegisterOutputType(LifeCycleRuleLifeCycleRulePtrOutput{})
	pulumi.RegisterOutputType(LifeCycleRuleLifeCycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(LifeCycleRuleLifeCycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(GetAccessGroupsAccessGroupOutput{})
	pulumi.RegisterOutputType(GetAccessGroupsAccessGroupArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(GetMountPointsMountPointOutput{})
	pulumi.RegisterOutputType(GetMountPointsMountPointArrayOutput{})
}
