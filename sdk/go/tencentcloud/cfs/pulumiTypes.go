// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetAccessGroupsAccessGroupList struct {
	// A specified access group ID used to query.
	AccessGroupId string `pulumi:"accessGroupId"`
	// Creation time of the access group.
	CreateTime string `pulumi:"createTime"`
	// Description of the access group.
	Description string `pulumi:"description"`
	// A access group Name used to query.
	Name string `pulumi:"name"`
}

// GetAccessGroupsAccessGroupListInput is an input type that accepts GetAccessGroupsAccessGroupListArgs and GetAccessGroupsAccessGroupListOutput values.
// You can construct a concrete instance of `GetAccessGroupsAccessGroupListInput` via:
//
//	GetAccessGroupsAccessGroupListArgs{...}
type GetAccessGroupsAccessGroupListInput interface {
	pulumi.Input

	ToGetAccessGroupsAccessGroupListOutput() GetAccessGroupsAccessGroupListOutput
	ToGetAccessGroupsAccessGroupListOutputWithContext(context.Context) GetAccessGroupsAccessGroupListOutput
}

type GetAccessGroupsAccessGroupListArgs struct {
	// A specified access group ID used to query.
	AccessGroupId pulumi.StringInput `pulumi:"accessGroupId"`
	// Creation time of the access group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of the access group.
	Description pulumi.StringInput `pulumi:"description"`
	// A access group Name used to query.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAccessGroupsAccessGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessGroupsAccessGroupList)(nil)).Elem()
}

func (i GetAccessGroupsAccessGroupListArgs) ToGetAccessGroupsAccessGroupListOutput() GetAccessGroupsAccessGroupListOutput {
	return i.ToGetAccessGroupsAccessGroupListOutputWithContext(context.Background())
}

func (i GetAccessGroupsAccessGroupListArgs) ToGetAccessGroupsAccessGroupListOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessGroupsAccessGroupListOutput)
}

// GetAccessGroupsAccessGroupListArrayInput is an input type that accepts GetAccessGroupsAccessGroupListArray and GetAccessGroupsAccessGroupListArrayOutput values.
// You can construct a concrete instance of `GetAccessGroupsAccessGroupListArrayInput` via:
//
//	GetAccessGroupsAccessGroupListArray{ GetAccessGroupsAccessGroupListArgs{...} }
type GetAccessGroupsAccessGroupListArrayInput interface {
	pulumi.Input

	ToGetAccessGroupsAccessGroupListArrayOutput() GetAccessGroupsAccessGroupListArrayOutput
	ToGetAccessGroupsAccessGroupListArrayOutputWithContext(context.Context) GetAccessGroupsAccessGroupListArrayOutput
}

type GetAccessGroupsAccessGroupListArray []GetAccessGroupsAccessGroupListInput

func (GetAccessGroupsAccessGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessGroupsAccessGroupList)(nil)).Elem()
}

func (i GetAccessGroupsAccessGroupListArray) ToGetAccessGroupsAccessGroupListArrayOutput() GetAccessGroupsAccessGroupListArrayOutput {
	return i.ToGetAccessGroupsAccessGroupListArrayOutputWithContext(context.Background())
}

func (i GetAccessGroupsAccessGroupListArray) ToGetAccessGroupsAccessGroupListArrayOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessGroupsAccessGroupListArrayOutput)
}

type GetAccessGroupsAccessGroupListOutput struct{ *pulumi.OutputState }

func (GetAccessGroupsAccessGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessGroupsAccessGroupList)(nil)).Elem()
}

func (o GetAccessGroupsAccessGroupListOutput) ToGetAccessGroupsAccessGroupListOutput() GetAccessGroupsAccessGroupListOutput {
	return o
}

func (o GetAccessGroupsAccessGroupListOutput) ToGetAccessGroupsAccessGroupListOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupListOutput {
	return o
}

// A specified access group ID used to query.
func (o GetAccessGroupsAccessGroupListOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroupList) string { return v.AccessGroupId }).(pulumi.StringOutput)
}

// Creation time of the access group.
func (o GetAccessGroupsAccessGroupListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroupList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the access group.
func (o GetAccessGroupsAccessGroupListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroupList) string { return v.Description }).(pulumi.StringOutput)
}

// A access group Name used to query.
func (o GetAccessGroupsAccessGroupListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsAccessGroupList) string { return v.Name }).(pulumi.StringOutput)
}

type GetAccessGroupsAccessGroupListArrayOutput struct{ *pulumi.OutputState }

func (GetAccessGroupsAccessGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessGroupsAccessGroupList)(nil)).Elem()
}

func (o GetAccessGroupsAccessGroupListArrayOutput) ToGetAccessGroupsAccessGroupListArrayOutput() GetAccessGroupsAccessGroupListArrayOutput {
	return o
}

func (o GetAccessGroupsAccessGroupListArrayOutput) ToGetAccessGroupsAccessGroupListArrayOutputWithContext(ctx context.Context) GetAccessGroupsAccessGroupListArrayOutput {
	return o
}

func (o GetAccessGroupsAccessGroupListArrayOutput) Index(i pulumi.IntInput) GetAccessGroupsAccessGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessGroupsAccessGroupList {
		return vs[0].([]GetAccessGroupsAccessGroupList)[vs[1].(int)]
	}).(GetAccessGroupsAccessGroupListOutput)
}

type GetAccessRulesAccessRuleList struct {
	// A specified access rule ID used to query.
	AccessRuleId string `pulumi:"accessRuleId"`
	// Allowed IP of the access rule.
	AuthClientIp string `pulumi:"authClientIp"`
	// The priority level of access rule.
	Priority int `pulumi:"priority"`
	// Read and write permissions.
	RwPermission string `pulumi:"rwPermission"`
	// The permissions of accessing users.
	UserPermission string `pulumi:"userPermission"`
}

// GetAccessRulesAccessRuleListInput is an input type that accepts GetAccessRulesAccessRuleListArgs and GetAccessRulesAccessRuleListOutput values.
// You can construct a concrete instance of `GetAccessRulesAccessRuleListInput` via:
//
//	GetAccessRulesAccessRuleListArgs{...}
type GetAccessRulesAccessRuleListInput interface {
	pulumi.Input

	ToGetAccessRulesAccessRuleListOutput() GetAccessRulesAccessRuleListOutput
	ToGetAccessRulesAccessRuleListOutputWithContext(context.Context) GetAccessRulesAccessRuleListOutput
}

type GetAccessRulesAccessRuleListArgs struct {
	// A specified access rule ID used to query.
	AccessRuleId pulumi.StringInput `pulumi:"accessRuleId"`
	// Allowed IP of the access rule.
	AuthClientIp pulumi.StringInput `pulumi:"authClientIp"`
	// The priority level of access rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Read and write permissions.
	RwPermission pulumi.StringInput `pulumi:"rwPermission"`
	// The permissions of accessing users.
	UserPermission pulumi.StringInput `pulumi:"userPermission"`
}

func (GetAccessRulesAccessRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessRulesAccessRuleList)(nil)).Elem()
}

func (i GetAccessRulesAccessRuleListArgs) ToGetAccessRulesAccessRuleListOutput() GetAccessRulesAccessRuleListOutput {
	return i.ToGetAccessRulesAccessRuleListOutputWithContext(context.Background())
}

func (i GetAccessRulesAccessRuleListArgs) ToGetAccessRulesAccessRuleListOutputWithContext(ctx context.Context) GetAccessRulesAccessRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessRulesAccessRuleListOutput)
}

// GetAccessRulesAccessRuleListArrayInput is an input type that accepts GetAccessRulesAccessRuleListArray and GetAccessRulesAccessRuleListArrayOutput values.
// You can construct a concrete instance of `GetAccessRulesAccessRuleListArrayInput` via:
//
//	GetAccessRulesAccessRuleListArray{ GetAccessRulesAccessRuleListArgs{...} }
type GetAccessRulesAccessRuleListArrayInput interface {
	pulumi.Input

	ToGetAccessRulesAccessRuleListArrayOutput() GetAccessRulesAccessRuleListArrayOutput
	ToGetAccessRulesAccessRuleListArrayOutputWithContext(context.Context) GetAccessRulesAccessRuleListArrayOutput
}

type GetAccessRulesAccessRuleListArray []GetAccessRulesAccessRuleListInput

func (GetAccessRulesAccessRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessRulesAccessRuleList)(nil)).Elem()
}

func (i GetAccessRulesAccessRuleListArray) ToGetAccessRulesAccessRuleListArrayOutput() GetAccessRulesAccessRuleListArrayOutput {
	return i.ToGetAccessRulesAccessRuleListArrayOutputWithContext(context.Background())
}

func (i GetAccessRulesAccessRuleListArray) ToGetAccessRulesAccessRuleListArrayOutputWithContext(ctx context.Context) GetAccessRulesAccessRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessRulesAccessRuleListArrayOutput)
}

type GetAccessRulesAccessRuleListOutput struct{ *pulumi.OutputState }

func (GetAccessRulesAccessRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessRulesAccessRuleList)(nil)).Elem()
}

func (o GetAccessRulesAccessRuleListOutput) ToGetAccessRulesAccessRuleListOutput() GetAccessRulesAccessRuleListOutput {
	return o
}

func (o GetAccessRulesAccessRuleListOutput) ToGetAccessRulesAccessRuleListOutputWithContext(ctx context.Context) GetAccessRulesAccessRuleListOutput {
	return o
}

// A specified access rule ID used to query.
func (o GetAccessRulesAccessRuleListOutput) AccessRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesAccessRuleList) string { return v.AccessRuleId }).(pulumi.StringOutput)
}

// Allowed IP of the access rule.
func (o GetAccessRulesAccessRuleListOutput) AuthClientIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesAccessRuleList) string { return v.AuthClientIp }).(pulumi.StringOutput)
}

// The priority level of access rule.
func (o GetAccessRulesAccessRuleListOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessRulesAccessRuleList) int { return v.Priority }).(pulumi.IntOutput)
}

// Read and write permissions.
func (o GetAccessRulesAccessRuleListOutput) RwPermission() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesAccessRuleList) string { return v.RwPermission }).(pulumi.StringOutput)
}

// The permissions of accessing users.
func (o GetAccessRulesAccessRuleListOutput) UserPermission() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesAccessRuleList) string { return v.UserPermission }).(pulumi.StringOutput)
}

type GetAccessRulesAccessRuleListArrayOutput struct{ *pulumi.OutputState }

func (GetAccessRulesAccessRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessRulesAccessRuleList)(nil)).Elem()
}

func (o GetAccessRulesAccessRuleListArrayOutput) ToGetAccessRulesAccessRuleListArrayOutput() GetAccessRulesAccessRuleListArrayOutput {
	return o
}

func (o GetAccessRulesAccessRuleListArrayOutput) ToGetAccessRulesAccessRuleListArrayOutputWithContext(ctx context.Context) GetAccessRulesAccessRuleListArrayOutput {
	return o
}

func (o GetAccessRulesAccessRuleListArrayOutput) Index(i pulumi.IntInput) GetAccessRulesAccessRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessRulesAccessRuleList {
		return vs[0].([]GetAccessRulesAccessRuleList)[vs[1].(int)]
	}).(GetAccessRulesAccessRuleListOutput)
}

type GetAvailableZoneRegionZone struct {
	// Region name, such as `ap-beijing`.
	Region string `pulumi:"region"`
	// Region chinese name, such as `Guangzhou`.
	RegionCnName string `pulumi:"regionCnName"`
	// Region name, such as `bj`.
	RegionName string `pulumi:"regionName"`
	// Region availability. If a region has at least one AZ where resources are purchasable, this value will be AVAILABLE; otherwise, it will be UNAVAILABLE.
	RegionStatus string `pulumi:"regionStatus"`
	// Array of AZs.
	Zones []GetAvailableZoneRegionZoneZone `pulumi:"zones"`
}

// GetAvailableZoneRegionZoneInput is an input type that accepts GetAvailableZoneRegionZoneArgs and GetAvailableZoneRegionZoneOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneInput` via:
//
//	GetAvailableZoneRegionZoneArgs{...}
type GetAvailableZoneRegionZoneInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneOutput() GetAvailableZoneRegionZoneOutput
	ToGetAvailableZoneRegionZoneOutputWithContext(context.Context) GetAvailableZoneRegionZoneOutput
}

type GetAvailableZoneRegionZoneArgs struct {
	// Region name, such as `ap-beijing`.
	Region pulumi.StringInput `pulumi:"region"`
	// Region chinese name, such as `Guangzhou`.
	RegionCnName pulumi.StringInput `pulumi:"regionCnName"`
	// Region name, such as `bj`.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Region availability. If a region has at least one AZ where resources are purchasable, this value will be AVAILABLE; otherwise, it will be UNAVAILABLE.
	RegionStatus pulumi.StringInput `pulumi:"regionStatus"`
	// Array of AZs.
	Zones GetAvailableZoneRegionZoneZoneArrayInput `pulumi:"zones"`
}

func (GetAvailableZoneRegionZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZone)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneArgs) ToGetAvailableZoneRegionZoneOutput() GetAvailableZoneRegionZoneOutput {
	return i.ToGetAvailableZoneRegionZoneOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneArgs) ToGetAvailableZoneRegionZoneOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneOutput)
}

// GetAvailableZoneRegionZoneArrayInput is an input type that accepts GetAvailableZoneRegionZoneArray and GetAvailableZoneRegionZoneArrayOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneArrayInput` via:
//
//	GetAvailableZoneRegionZoneArray{ GetAvailableZoneRegionZoneArgs{...} }
type GetAvailableZoneRegionZoneArrayInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneArrayOutput() GetAvailableZoneRegionZoneArrayOutput
	ToGetAvailableZoneRegionZoneArrayOutputWithContext(context.Context) GetAvailableZoneRegionZoneArrayOutput
}

type GetAvailableZoneRegionZoneArray []GetAvailableZoneRegionZoneInput

func (GetAvailableZoneRegionZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZone)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneArray) ToGetAvailableZoneRegionZoneArrayOutput() GetAvailableZoneRegionZoneArrayOutput {
	return i.ToGetAvailableZoneRegionZoneArrayOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneArray) ToGetAvailableZoneRegionZoneArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneArrayOutput)
}

type GetAvailableZoneRegionZoneOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZone)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneOutput) ToGetAvailableZoneRegionZoneOutput() GetAvailableZoneRegionZoneOutput {
	return o
}

func (o GetAvailableZoneRegionZoneOutput) ToGetAvailableZoneRegionZoneOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneOutput {
	return o
}

// Region name, such as `ap-beijing`.
func (o GetAvailableZoneRegionZoneOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZone) string { return v.Region }).(pulumi.StringOutput)
}

// Region chinese name, such as `Guangzhou`.
func (o GetAvailableZoneRegionZoneOutput) RegionCnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZone) string { return v.RegionCnName }).(pulumi.StringOutput)
}

// Region name, such as `bj`.
func (o GetAvailableZoneRegionZoneOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZone) string { return v.RegionName }).(pulumi.StringOutput)
}

// Region availability. If a region has at least one AZ where resources are purchasable, this value will be AVAILABLE; otherwise, it will be UNAVAILABLE.
func (o GetAvailableZoneRegionZoneOutput) RegionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZone) string { return v.RegionStatus }).(pulumi.StringOutput)
}

// Array of AZs.
func (o GetAvailableZoneRegionZoneOutput) Zones() GetAvailableZoneRegionZoneZoneArrayOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZone) []GetAvailableZoneRegionZoneZone { return v.Zones }).(GetAvailableZoneRegionZoneZoneArrayOutput)
}

type GetAvailableZoneRegionZoneArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZone)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneArrayOutput) ToGetAvailableZoneRegionZoneArrayOutput() GetAvailableZoneRegionZoneArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneArrayOutput) ToGetAvailableZoneRegionZoneArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneArrayOutput) Index(i pulumi.IntInput) GetAvailableZoneRegionZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableZoneRegionZone {
		return vs[0].([]GetAvailableZoneRegionZone)[vs[1].(int)]
	}).(GetAvailableZoneRegionZoneOutput)
}

type GetAvailableZoneRegionZoneZone struct {
	// Array of classes.
	Types []GetAvailableZoneRegionZoneZoneType `pulumi:"types"`
	// AZ name.
	Zone string `pulumi:"zone"`
	// Chinese name of an AZ.
	ZoneCnName string `pulumi:"zoneCnName"`
	// AZ ID.
	ZoneId int `pulumi:"zoneId"`
	// Chinese and English names of an AZ.
	ZoneName string `pulumi:"zoneName"`
}

// GetAvailableZoneRegionZoneZoneInput is an input type that accepts GetAvailableZoneRegionZoneZoneArgs and GetAvailableZoneRegionZoneZoneOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneZoneInput` via:
//
//	GetAvailableZoneRegionZoneZoneArgs{...}
type GetAvailableZoneRegionZoneZoneInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneZoneOutput() GetAvailableZoneRegionZoneZoneOutput
	ToGetAvailableZoneRegionZoneZoneOutputWithContext(context.Context) GetAvailableZoneRegionZoneZoneOutput
}

type GetAvailableZoneRegionZoneZoneArgs struct {
	// Array of classes.
	Types GetAvailableZoneRegionZoneZoneTypeArrayInput `pulumi:"types"`
	// AZ name.
	Zone pulumi.StringInput `pulumi:"zone"`
	// Chinese name of an AZ.
	ZoneCnName pulumi.StringInput `pulumi:"zoneCnName"`
	// AZ ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
	// Chinese and English names of an AZ.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetAvailableZoneRegionZoneZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZoneZone)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneZoneArgs) ToGetAvailableZoneRegionZoneZoneOutput() GetAvailableZoneRegionZoneZoneOutput {
	return i.ToGetAvailableZoneRegionZoneZoneOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneZoneArgs) ToGetAvailableZoneRegionZoneZoneOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneZoneOutput)
}

// GetAvailableZoneRegionZoneZoneArrayInput is an input type that accepts GetAvailableZoneRegionZoneZoneArray and GetAvailableZoneRegionZoneZoneArrayOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneZoneArrayInput` via:
//
//	GetAvailableZoneRegionZoneZoneArray{ GetAvailableZoneRegionZoneZoneArgs{...} }
type GetAvailableZoneRegionZoneZoneArrayInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneZoneArrayOutput() GetAvailableZoneRegionZoneZoneArrayOutput
	ToGetAvailableZoneRegionZoneZoneArrayOutputWithContext(context.Context) GetAvailableZoneRegionZoneZoneArrayOutput
}

type GetAvailableZoneRegionZoneZoneArray []GetAvailableZoneRegionZoneZoneInput

func (GetAvailableZoneRegionZoneZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZoneZone)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneZoneArray) ToGetAvailableZoneRegionZoneZoneArrayOutput() GetAvailableZoneRegionZoneZoneArrayOutput {
	return i.ToGetAvailableZoneRegionZoneZoneArrayOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneZoneArray) ToGetAvailableZoneRegionZoneZoneArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneZoneArrayOutput)
}

type GetAvailableZoneRegionZoneZoneOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZoneZone)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneZoneOutput) ToGetAvailableZoneRegionZoneZoneOutput() GetAvailableZoneRegionZoneZoneOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneOutput) ToGetAvailableZoneRegionZoneZoneOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneOutput {
	return o
}

// Array of classes.
func (o GetAvailableZoneRegionZoneZoneOutput) Types() GetAvailableZoneRegionZoneZoneTypeArrayOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZone) []GetAvailableZoneRegionZoneZoneType { return v.Types }).(GetAvailableZoneRegionZoneZoneTypeArrayOutput)
}

// AZ name.
func (o GetAvailableZoneRegionZoneZoneOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZone) string { return v.Zone }).(pulumi.StringOutput)
}

// Chinese name of an AZ.
func (o GetAvailableZoneRegionZoneZoneOutput) ZoneCnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZone) string { return v.ZoneCnName }).(pulumi.StringOutput)
}

// AZ ID.
func (o GetAvailableZoneRegionZoneZoneOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZone) int { return v.ZoneId }).(pulumi.IntOutput)
}

// Chinese and English names of an AZ.
func (o GetAvailableZoneRegionZoneZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetAvailableZoneRegionZoneZoneArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZoneZone)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneZoneArrayOutput) ToGetAvailableZoneRegionZoneZoneArrayOutput() GetAvailableZoneRegionZoneZoneArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneArrayOutput) ToGetAvailableZoneRegionZoneZoneArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneArrayOutput) Index(i pulumi.IntInput) GetAvailableZoneRegionZoneZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableZoneRegionZoneZone {
		return vs[0].([]GetAvailableZoneRegionZoneZone)[vs[1].(int)]
	}).(GetAvailableZoneRegionZoneZoneOutput)
}

type GetAvailableZoneRegionZoneZoneType struct {
	// Indicates whether prepaid is supported. true: yes; false: no.
	Prepayment bool `pulumi:"prepayment"`
	// Protocol and sale details.
	Protocols []GetAvailableZoneRegionZoneZoneTypeProtocol `pulumi:"protocols"`
	// Storage class. Valid values: SD (standard storage) and HP (high-performance storage).
	Type string `pulumi:"type"`
}

// GetAvailableZoneRegionZoneZoneTypeInput is an input type that accepts GetAvailableZoneRegionZoneZoneTypeArgs and GetAvailableZoneRegionZoneZoneTypeOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneZoneTypeInput` via:
//
//	GetAvailableZoneRegionZoneZoneTypeArgs{...}
type GetAvailableZoneRegionZoneZoneTypeInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneZoneTypeOutput() GetAvailableZoneRegionZoneZoneTypeOutput
	ToGetAvailableZoneRegionZoneZoneTypeOutputWithContext(context.Context) GetAvailableZoneRegionZoneZoneTypeOutput
}

type GetAvailableZoneRegionZoneZoneTypeArgs struct {
	// Indicates whether prepaid is supported. true: yes; false: no.
	Prepayment pulumi.BoolInput `pulumi:"prepayment"`
	// Protocol and sale details.
	Protocols GetAvailableZoneRegionZoneZoneTypeProtocolArrayInput `pulumi:"protocols"`
	// Storage class. Valid values: SD (standard storage) and HP (high-performance storage).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAvailableZoneRegionZoneZoneTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZoneZoneType)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneZoneTypeArgs) ToGetAvailableZoneRegionZoneZoneTypeOutput() GetAvailableZoneRegionZoneZoneTypeOutput {
	return i.ToGetAvailableZoneRegionZoneZoneTypeOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneZoneTypeArgs) ToGetAvailableZoneRegionZoneZoneTypeOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneZoneTypeOutput)
}

// GetAvailableZoneRegionZoneZoneTypeArrayInput is an input type that accepts GetAvailableZoneRegionZoneZoneTypeArray and GetAvailableZoneRegionZoneZoneTypeArrayOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneZoneTypeArrayInput` via:
//
//	GetAvailableZoneRegionZoneZoneTypeArray{ GetAvailableZoneRegionZoneZoneTypeArgs{...} }
type GetAvailableZoneRegionZoneZoneTypeArrayInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneZoneTypeArrayOutput() GetAvailableZoneRegionZoneZoneTypeArrayOutput
	ToGetAvailableZoneRegionZoneZoneTypeArrayOutputWithContext(context.Context) GetAvailableZoneRegionZoneZoneTypeArrayOutput
}

type GetAvailableZoneRegionZoneZoneTypeArray []GetAvailableZoneRegionZoneZoneTypeInput

func (GetAvailableZoneRegionZoneZoneTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZoneZoneType)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneZoneTypeArray) ToGetAvailableZoneRegionZoneZoneTypeArrayOutput() GetAvailableZoneRegionZoneZoneTypeArrayOutput {
	return i.ToGetAvailableZoneRegionZoneZoneTypeArrayOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneZoneTypeArray) ToGetAvailableZoneRegionZoneZoneTypeArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneZoneTypeArrayOutput)
}

type GetAvailableZoneRegionZoneZoneTypeOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneZoneTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZoneZoneType)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneZoneTypeOutput) ToGetAvailableZoneRegionZoneZoneTypeOutput() GetAvailableZoneRegionZoneZoneTypeOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneTypeOutput) ToGetAvailableZoneRegionZoneZoneTypeOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeOutput {
	return o
}

// Indicates whether prepaid is supported. true: yes; false: no.
func (o GetAvailableZoneRegionZoneZoneTypeOutput) Prepayment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZoneType) bool { return v.Prepayment }).(pulumi.BoolOutput)
}

// Protocol and sale details.
func (o GetAvailableZoneRegionZoneZoneTypeOutput) Protocols() GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZoneType) []GetAvailableZoneRegionZoneZoneTypeProtocol {
		return v.Protocols
	}).(GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput)
}

// Storage class. Valid values: SD (standard storage) and HP (high-performance storage).
func (o GetAvailableZoneRegionZoneZoneTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZoneType) string { return v.Type }).(pulumi.StringOutput)
}

type GetAvailableZoneRegionZoneZoneTypeArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneZoneTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZoneZoneType)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneZoneTypeArrayOutput) ToGetAvailableZoneRegionZoneZoneTypeArrayOutput() GetAvailableZoneRegionZoneZoneTypeArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneTypeArrayOutput) ToGetAvailableZoneRegionZoneZoneTypeArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneTypeArrayOutput) Index(i pulumi.IntInput) GetAvailableZoneRegionZoneZoneTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableZoneRegionZoneZoneType {
		return vs[0].([]GetAvailableZoneRegionZoneZoneType)[vs[1].(int)]
	}).(GetAvailableZoneRegionZoneZoneTypeOutput)
}

type GetAvailableZoneRegionZoneZoneTypeProtocol struct {
	// Protocol type. Valid values: NFS, CIFS.
	Protocol string `pulumi:"protocol"`
	// Sale status. Valid values: saleOut (sold out), saling (purchasable), noSaling (non-purchasable).
	SaleStatus string `pulumi:"saleStatus"`
}

// GetAvailableZoneRegionZoneZoneTypeProtocolInput is an input type that accepts GetAvailableZoneRegionZoneZoneTypeProtocolArgs and GetAvailableZoneRegionZoneZoneTypeProtocolOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneZoneTypeProtocolInput` via:
//
//	GetAvailableZoneRegionZoneZoneTypeProtocolArgs{...}
type GetAvailableZoneRegionZoneZoneTypeProtocolInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneZoneTypeProtocolOutput() GetAvailableZoneRegionZoneZoneTypeProtocolOutput
	ToGetAvailableZoneRegionZoneZoneTypeProtocolOutputWithContext(context.Context) GetAvailableZoneRegionZoneZoneTypeProtocolOutput
}

type GetAvailableZoneRegionZoneZoneTypeProtocolArgs struct {
	// Protocol type. Valid values: NFS, CIFS.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Sale status. Valid values: saleOut (sold out), saling (purchasable), noSaling (non-purchasable).
	SaleStatus pulumi.StringInput `pulumi:"saleStatus"`
}

func (GetAvailableZoneRegionZoneZoneTypeProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZoneZoneTypeProtocol)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneZoneTypeProtocolArgs) ToGetAvailableZoneRegionZoneZoneTypeProtocolOutput() GetAvailableZoneRegionZoneZoneTypeProtocolOutput {
	return i.ToGetAvailableZoneRegionZoneZoneTypeProtocolOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneZoneTypeProtocolArgs) ToGetAvailableZoneRegionZoneZoneTypeProtocolOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneZoneTypeProtocolOutput)
}

// GetAvailableZoneRegionZoneZoneTypeProtocolArrayInput is an input type that accepts GetAvailableZoneRegionZoneZoneTypeProtocolArray and GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput values.
// You can construct a concrete instance of `GetAvailableZoneRegionZoneZoneTypeProtocolArrayInput` via:
//
//	GetAvailableZoneRegionZoneZoneTypeProtocolArray{ GetAvailableZoneRegionZoneZoneTypeProtocolArgs{...} }
type GetAvailableZoneRegionZoneZoneTypeProtocolArrayInput interface {
	pulumi.Input

	ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput() GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput
	ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutputWithContext(context.Context) GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput
}

type GetAvailableZoneRegionZoneZoneTypeProtocolArray []GetAvailableZoneRegionZoneZoneTypeProtocolInput

func (GetAvailableZoneRegionZoneZoneTypeProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZoneZoneTypeProtocol)(nil)).Elem()
}

func (i GetAvailableZoneRegionZoneZoneTypeProtocolArray) ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput() GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput {
	return i.ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutputWithContext(context.Background())
}

func (i GetAvailableZoneRegionZoneZoneTypeProtocolArray) ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput)
}

type GetAvailableZoneRegionZoneZoneTypeProtocolOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneZoneTypeProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneRegionZoneZoneTypeProtocol)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneZoneTypeProtocolOutput) ToGetAvailableZoneRegionZoneZoneTypeProtocolOutput() GetAvailableZoneRegionZoneZoneTypeProtocolOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneTypeProtocolOutput) ToGetAvailableZoneRegionZoneZoneTypeProtocolOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeProtocolOutput {
	return o
}

// Protocol type. Valid values: NFS, CIFS.
func (o GetAvailableZoneRegionZoneZoneTypeProtocolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZoneTypeProtocol) string { return v.Protocol }).(pulumi.StringOutput)
}

// Sale status. Valid values: saleOut (sold out), saling (purchasable), noSaling (non-purchasable).
func (o GetAvailableZoneRegionZoneZoneTypeProtocolOutput) SaleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneRegionZoneZoneTypeProtocol) string { return v.SaleStatus }).(pulumi.StringOutput)
}

type GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableZoneRegionZoneZoneTypeProtocol)(nil)).Elem()
}

func (o GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput) ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput() GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput) ToGetAvailableZoneRegionZoneZoneTypeProtocolArrayOutputWithContext(ctx context.Context) GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput {
	return o
}

func (o GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput) Index(i pulumi.IntInput) GetAvailableZoneRegionZoneZoneTypeProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableZoneRegionZoneZoneTypeProtocol {
		return vs[0].([]GetAvailableZoneRegionZoneZoneTypeProtocol)[vs[1].(int)]
	}).(GetAvailableZoneRegionZoneZoneTypeProtocolOutput)
}

type GetFileSystemClientsClientList struct {
	// IP address of the file system.
	CfsVip string `pulumi:"cfsVip"`
	// Client IP.
	ClientIp string `pulumi:"clientIp"`
	// Path in which the file system is mounted to the client.
	MountDirectory string `pulumi:"mountDirectory"`
	// File system VPCID.
	VpcId string `pulumi:"vpcId"`
	// Name of the availability zone, e.g. ap-beijing-1. For more information, see regions and availability zones in the Overview document.
	Zone string `pulumi:"zone"`
	// AZ name.
	ZoneName string `pulumi:"zoneName"`
}

// GetFileSystemClientsClientListInput is an input type that accepts GetFileSystemClientsClientListArgs and GetFileSystemClientsClientListOutput values.
// You can construct a concrete instance of `GetFileSystemClientsClientListInput` via:
//
//	GetFileSystemClientsClientListArgs{...}
type GetFileSystemClientsClientListInput interface {
	pulumi.Input

	ToGetFileSystemClientsClientListOutput() GetFileSystemClientsClientListOutput
	ToGetFileSystemClientsClientListOutputWithContext(context.Context) GetFileSystemClientsClientListOutput
}

type GetFileSystemClientsClientListArgs struct {
	// IP address of the file system.
	CfsVip pulumi.StringInput `pulumi:"cfsVip"`
	// Client IP.
	ClientIp pulumi.StringInput `pulumi:"clientIp"`
	// Path in which the file system is mounted to the client.
	MountDirectory pulumi.StringInput `pulumi:"mountDirectory"`
	// File system VPCID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Name of the availability zone, e.g. ap-beijing-1. For more information, see regions and availability zones in the Overview document.
	Zone pulumi.StringInput `pulumi:"zone"`
	// AZ name.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetFileSystemClientsClientListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemClientsClientList)(nil)).Elem()
}

func (i GetFileSystemClientsClientListArgs) ToGetFileSystemClientsClientListOutput() GetFileSystemClientsClientListOutput {
	return i.ToGetFileSystemClientsClientListOutputWithContext(context.Background())
}

func (i GetFileSystemClientsClientListArgs) ToGetFileSystemClientsClientListOutputWithContext(ctx context.Context) GetFileSystemClientsClientListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemClientsClientListOutput)
}

// GetFileSystemClientsClientListArrayInput is an input type that accepts GetFileSystemClientsClientListArray and GetFileSystemClientsClientListArrayOutput values.
// You can construct a concrete instance of `GetFileSystemClientsClientListArrayInput` via:
//
//	GetFileSystemClientsClientListArray{ GetFileSystemClientsClientListArgs{...} }
type GetFileSystemClientsClientListArrayInput interface {
	pulumi.Input

	ToGetFileSystemClientsClientListArrayOutput() GetFileSystemClientsClientListArrayOutput
	ToGetFileSystemClientsClientListArrayOutputWithContext(context.Context) GetFileSystemClientsClientListArrayOutput
}

type GetFileSystemClientsClientListArray []GetFileSystemClientsClientListInput

func (GetFileSystemClientsClientListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemClientsClientList)(nil)).Elem()
}

func (i GetFileSystemClientsClientListArray) ToGetFileSystemClientsClientListArrayOutput() GetFileSystemClientsClientListArrayOutput {
	return i.ToGetFileSystemClientsClientListArrayOutputWithContext(context.Background())
}

func (i GetFileSystemClientsClientListArray) ToGetFileSystemClientsClientListArrayOutputWithContext(ctx context.Context) GetFileSystemClientsClientListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemClientsClientListArrayOutput)
}

type GetFileSystemClientsClientListOutput struct{ *pulumi.OutputState }

func (GetFileSystemClientsClientListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemClientsClientList)(nil)).Elem()
}

func (o GetFileSystemClientsClientListOutput) ToGetFileSystemClientsClientListOutput() GetFileSystemClientsClientListOutput {
	return o
}

func (o GetFileSystemClientsClientListOutput) ToGetFileSystemClientsClientListOutputWithContext(ctx context.Context) GetFileSystemClientsClientListOutput {
	return o
}

// IP address of the file system.
func (o GetFileSystemClientsClientListOutput) CfsVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemClientsClientList) string { return v.CfsVip }).(pulumi.StringOutput)
}

// Client IP.
func (o GetFileSystemClientsClientListOutput) ClientIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemClientsClientList) string { return v.ClientIp }).(pulumi.StringOutput)
}

// Path in which the file system is mounted to the client.
func (o GetFileSystemClientsClientListOutput) MountDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemClientsClientList) string { return v.MountDirectory }).(pulumi.StringOutput)
}

// File system VPCID.
func (o GetFileSystemClientsClientListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemClientsClientList) string { return v.VpcId }).(pulumi.StringOutput)
}

// Name of the availability zone, e.g. ap-beijing-1. For more information, see regions and availability zones in the Overview document.
func (o GetFileSystemClientsClientListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemClientsClientList) string { return v.Zone }).(pulumi.StringOutput)
}

// AZ name.
func (o GetFileSystemClientsClientListOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemClientsClientList) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetFileSystemClientsClientListArrayOutput struct{ *pulumi.OutputState }

func (GetFileSystemClientsClientListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemClientsClientList)(nil)).Elem()
}

func (o GetFileSystemClientsClientListArrayOutput) ToGetFileSystemClientsClientListArrayOutput() GetFileSystemClientsClientListArrayOutput {
	return o
}

func (o GetFileSystemClientsClientListArrayOutput) ToGetFileSystemClientsClientListArrayOutputWithContext(ctx context.Context) GetFileSystemClientsClientListArrayOutput {
	return o
}

func (o GetFileSystemClientsClientListArrayOutput) Index(i pulumi.IntInput) GetFileSystemClientsClientListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileSystemClientsClientList {
		return vs[0].([]GetFileSystemClientsClientList)[vs[1].(int)]
	}).(GetFileSystemClientsClientListOutput)
}

type GetFileSystemsFileSystemList struct {
	// ID of the access group.
	AccessGroupId string `pulumi:"accessGroupId"`
	// The available zone that the file system locates at.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Creation time of the file system.
	CreateTime string `pulumi:"createTime"`
	// A specified file system ID used to query.
	FileSystemId string `pulumi:"fileSystemId"`
	// Mount root-directory.
	FsId string `pulumi:"fsId"`
	// IP of the file system.
	MountIp string `pulumi:"mountIp"`
	// A file system name used to query.
	Name string `pulumi:"name"`
	// Protocol of the file system.
	Protocol string `pulumi:"protocol"`
	// Size limit of the file system.
	SizeLimit int `pulumi:"sizeLimit"`
	// Size used of the file system.
	SizeUsed int `pulumi:"sizeUsed"`
	// Status of the file system.
	Status string `pulumi:"status"`
	// Storage type of the file system.
	StorageType string `pulumi:"storageType"`
}

// GetFileSystemsFileSystemListInput is an input type that accepts GetFileSystemsFileSystemListArgs and GetFileSystemsFileSystemListOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemListInput` via:
//
//	GetFileSystemsFileSystemListArgs{...}
type GetFileSystemsFileSystemListInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemListOutput() GetFileSystemsFileSystemListOutput
	ToGetFileSystemsFileSystemListOutputWithContext(context.Context) GetFileSystemsFileSystemListOutput
}

type GetFileSystemsFileSystemListArgs struct {
	// ID of the access group.
	AccessGroupId pulumi.StringInput `pulumi:"accessGroupId"`
	// The available zone that the file system locates at.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Creation time of the file system.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// A specified file system ID used to query.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// Mount root-directory.
	FsId pulumi.StringInput `pulumi:"fsId"`
	// IP of the file system.
	MountIp pulumi.StringInput `pulumi:"mountIp"`
	// A file system name used to query.
	Name pulumi.StringInput `pulumi:"name"`
	// Protocol of the file system.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Size limit of the file system.
	SizeLimit pulumi.IntInput `pulumi:"sizeLimit"`
	// Size used of the file system.
	SizeUsed pulumi.IntInput `pulumi:"sizeUsed"`
	// Status of the file system.
	Status pulumi.StringInput `pulumi:"status"`
	// Storage type of the file system.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (GetFileSystemsFileSystemListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystemList)(nil)).Elem()
}

func (i GetFileSystemsFileSystemListArgs) ToGetFileSystemsFileSystemListOutput() GetFileSystemsFileSystemListOutput {
	return i.ToGetFileSystemsFileSystemListOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemListArgs) ToGetFileSystemsFileSystemListOutputWithContext(ctx context.Context) GetFileSystemsFileSystemListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemListOutput)
}

// GetFileSystemsFileSystemListArrayInput is an input type that accepts GetFileSystemsFileSystemListArray and GetFileSystemsFileSystemListArrayOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemListArrayInput` via:
//
//	GetFileSystemsFileSystemListArray{ GetFileSystemsFileSystemListArgs{...} }
type GetFileSystemsFileSystemListArrayInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemListArrayOutput() GetFileSystemsFileSystemListArrayOutput
	ToGetFileSystemsFileSystemListArrayOutputWithContext(context.Context) GetFileSystemsFileSystemListArrayOutput
}

type GetFileSystemsFileSystemListArray []GetFileSystemsFileSystemListInput

func (GetFileSystemsFileSystemListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystemList)(nil)).Elem()
}

func (i GetFileSystemsFileSystemListArray) ToGetFileSystemsFileSystemListArrayOutput() GetFileSystemsFileSystemListArrayOutput {
	return i.ToGetFileSystemsFileSystemListArrayOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemListArray) ToGetFileSystemsFileSystemListArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemListArrayOutput)
}

type GetFileSystemsFileSystemListOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystemList)(nil)).Elem()
}

func (o GetFileSystemsFileSystemListOutput) ToGetFileSystemsFileSystemListOutput() GetFileSystemsFileSystemListOutput {
	return o
}

func (o GetFileSystemsFileSystemListOutput) ToGetFileSystemsFileSystemListOutputWithContext(ctx context.Context) GetFileSystemsFileSystemListOutput {
	return o
}

// ID of the access group.
func (o GetFileSystemsFileSystemListOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.AccessGroupId }).(pulumi.StringOutput)
}

// The available zone that the file system locates at.
func (o GetFileSystemsFileSystemListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Creation time of the file system.
func (o GetFileSystemsFileSystemListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A specified file system ID used to query.
func (o GetFileSystemsFileSystemListOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// Mount root-directory.
func (o GetFileSystemsFileSystemListOutput) FsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.FsId }).(pulumi.StringOutput)
}

// IP of the file system.
func (o GetFileSystemsFileSystemListOutput) MountIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.MountIp }).(pulumi.StringOutput)
}

// A file system name used to query.
func (o GetFileSystemsFileSystemListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol of the file system.
func (o GetFileSystemsFileSystemListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.Protocol }).(pulumi.StringOutput)
}

// Size limit of the file system.
func (o GetFileSystemsFileSystemListOutput) SizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) int { return v.SizeLimit }).(pulumi.IntOutput)
}

// Size used of the file system.
func (o GetFileSystemsFileSystemListOutput) SizeUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) int { return v.SizeUsed }).(pulumi.IntOutput)
}

// Status of the file system.
func (o GetFileSystemsFileSystemListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.Status }).(pulumi.StringOutput)
}

// Storage type of the file system.
func (o GetFileSystemsFileSystemListOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemList) string { return v.StorageType }).(pulumi.StringOutput)
}

type GetFileSystemsFileSystemListArrayOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystemList)(nil)).Elem()
}

func (o GetFileSystemsFileSystemListArrayOutput) ToGetFileSystemsFileSystemListArrayOutput() GetFileSystemsFileSystemListArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemListArrayOutput) ToGetFileSystemsFileSystemListArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemListArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemListArrayOutput) Index(i pulumi.IntInput) GetFileSystemsFileSystemListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileSystemsFileSystemList {
		return vs[0].([]GetFileSystemsFileSystemList)[vs[1].(int)]
	}).(GetFileSystemsFileSystemListOutput)
}

type GetMountTargetsMountTarget struct {
	// CCN instance ID used by CFS Turbo.
	CcnId string `pulumi:"ccnId"`
	// CCN IP range used by CFS Turbo.
	CidrBlock string `pulumi:"cidrBlock"`
	// File system ID.
	FileSystemId string `pulumi:"fileSystemId"`
	// Mount root-directory.
	FsId string `pulumi:"fsId"`
	// Mount target IP.
	IpAddress string `pulumi:"ipAddress"`
	// Mount target status.
	LifeCycleState string `pulumi:"lifeCycleState"`
	// Mount target ID.
	MountTargetId string `pulumi:"mountTargetId"`
	// Network type.
	NetworkInterface string `pulumi:"networkInterface"`
	// Subnet ID.
	SubnetId string `pulumi:"subnetId"`
	// Subnet name.
	SubnetName string `pulumi:"subnetName"`
	// VPC ID.
	VpcId string `pulumi:"vpcId"`
	// VPC name.
	VpcName string `pulumi:"vpcName"`
}

// GetMountTargetsMountTargetInput is an input type that accepts GetMountTargetsMountTargetArgs and GetMountTargetsMountTargetOutput values.
// You can construct a concrete instance of `GetMountTargetsMountTargetInput` via:
//
//	GetMountTargetsMountTargetArgs{...}
type GetMountTargetsMountTargetInput interface {
	pulumi.Input

	ToGetMountTargetsMountTargetOutput() GetMountTargetsMountTargetOutput
	ToGetMountTargetsMountTargetOutputWithContext(context.Context) GetMountTargetsMountTargetOutput
}

type GetMountTargetsMountTargetArgs struct {
	// CCN instance ID used by CFS Turbo.
	CcnId pulumi.StringInput `pulumi:"ccnId"`
	// CCN IP range used by CFS Turbo.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// File system ID.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// Mount root-directory.
	FsId pulumi.StringInput `pulumi:"fsId"`
	// Mount target IP.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Mount target status.
	LifeCycleState pulumi.StringInput `pulumi:"lifeCycleState"`
	// Mount target ID.
	MountTargetId pulumi.StringInput `pulumi:"mountTargetId"`
	// Network type.
	NetworkInterface pulumi.StringInput `pulumi:"networkInterface"`
	// Subnet ID.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Subnet name.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// VPC name.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetMountTargetsMountTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountTargetsMountTarget)(nil)).Elem()
}

func (i GetMountTargetsMountTargetArgs) ToGetMountTargetsMountTargetOutput() GetMountTargetsMountTargetOutput {
	return i.ToGetMountTargetsMountTargetOutputWithContext(context.Background())
}

func (i GetMountTargetsMountTargetArgs) ToGetMountTargetsMountTargetOutputWithContext(ctx context.Context) GetMountTargetsMountTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountTargetsMountTargetOutput)
}

// GetMountTargetsMountTargetArrayInput is an input type that accepts GetMountTargetsMountTargetArray and GetMountTargetsMountTargetArrayOutput values.
// You can construct a concrete instance of `GetMountTargetsMountTargetArrayInput` via:
//
//	GetMountTargetsMountTargetArray{ GetMountTargetsMountTargetArgs{...} }
type GetMountTargetsMountTargetArrayInput interface {
	pulumi.Input

	ToGetMountTargetsMountTargetArrayOutput() GetMountTargetsMountTargetArrayOutput
	ToGetMountTargetsMountTargetArrayOutputWithContext(context.Context) GetMountTargetsMountTargetArrayOutput
}

type GetMountTargetsMountTargetArray []GetMountTargetsMountTargetInput

func (GetMountTargetsMountTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountTargetsMountTarget)(nil)).Elem()
}

func (i GetMountTargetsMountTargetArray) ToGetMountTargetsMountTargetArrayOutput() GetMountTargetsMountTargetArrayOutput {
	return i.ToGetMountTargetsMountTargetArrayOutputWithContext(context.Background())
}

func (i GetMountTargetsMountTargetArray) ToGetMountTargetsMountTargetArrayOutputWithContext(ctx context.Context) GetMountTargetsMountTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountTargetsMountTargetArrayOutput)
}

type GetMountTargetsMountTargetOutput struct{ *pulumi.OutputState }

func (GetMountTargetsMountTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountTargetsMountTarget)(nil)).Elem()
}

func (o GetMountTargetsMountTargetOutput) ToGetMountTargetsMountTargetOutput() GetMountTargetsMountTargetOutput {
	return o
}

func (o GetMountTargetsMountTargetOutput) ToGetMountTargetsMountTargetOutputWithContext(ctx context.Context) GetMountTargetsMountTargetOutput {
	return o
}

// CCN instance ID used by CFS Turbo.
func (o GetMountTargetsMountTargetOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.CcnId }).(pulumi.StringOutput)
}

// CCN IP range used by CFS Turbo.
func (o GetMountTargetsMountTargetOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// File system ID.
func (o GetMountTargetsMountTargetOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// Mount root-directory.
func (o GetMountTargetsMountTargetOutput) FsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.FsId }).(pulumi.StringOutput)
}

// Mount target IP.
func (o GetMountTargetsMountTargetOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Mount target status.
func (o GetMountTargetsMountTargetOutput) LifeCycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.LifeCycleState }).(pulumi.StringOutput)
}

// Mount target ID.
func (o GetMountTargetsMountTargetOutput) MountTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.MountTargetId }).(pulumi.StringOutput)
}

// Network type.
func (o GetMountTargetsMountTargetOutput) NetworkInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.NetworkInterface }).(pulumi.StringOutput)
}

// Subnet ID.
func (o GetMountTargetsMountTargetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Subnet name.
func (o GetMountTargetsMountTargetOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.SubnetName }).(pulumi.StringOutput)
}

// VPC ID.
func (o GetMountTargetsMountTargetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.VpcId }).(pulumi.StringOutput)
}

// VPC name.
func (o GetMountTargetsMountTargetOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsMountTarget) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetMountTargetsMountTargetArrayOutput struct{ *pulumi.OutputState }

func (GetMountTargetsMountTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountTargetsMountTarget)(nil)).Elem()
}

func (o GetMountTargetsMountTargetArrayOutput) ToGetMountTargetsMountTargetArrayOutput() GetMountTargetsMountTargetArrayOutput {
	return o
}

func (o GetMountTargetsMountTargetArrayOutput) ToGetMountTargetsMountTargetArrayOutputWithContext(ctx context.Context) GetMountTargetsMountTargetArrayOutput {
	return o
}

func (o GetMountTargetsMountTargetArrayOutput) Index(i pulumi.IntInput) GetMountTargetsMountTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMountTargetsMountTarget {
		return vs[0].([]GetMountTargetsMountTarget)[vs[1].(int)]
	}).(GetMountTargetsMountTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessGroupsAccessGroupListInput)(nil)).Elem(), GetAccessGroupsAccessGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessGroupsAccessGroupListArrayInput)(nil)).Elem(), GetAccessGroupsAccessGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessRulesAccessRuleListInput)(nil)).Elem(), GetAccessRulesAccessRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessRulesAccessRuleListArrayInput)(nil)).Elem(), GetAccessRulesAccessRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneInput)(nil)).Elem(), GetAvailableZoneRegionZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneArrayInput)(nil)).Elem(), GetAvailableZoneRegionZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneZoneInput)(nil)).Elem(), GetAvailableZoneRegionZoneZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneZoneArrayInput)(nil)).Elem(), GetAvailableZoneRegionZoneZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneZoneTypeInput)(nil)).Elem(), GetAvailableZoneRegionZoneZoneTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneZoneTypeArrayInput)(nil)).Elem(), GetAvailableZoneRegionZoneZoneTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneZoneTypeProtocolInput)(nil)).Elem(), GetAvailableZoneRegionZoneZoneTypeProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableZoneRegionZoneZoneTypeProtocolArrayInput)(nil)).Elem(), GetAvailableZoneRegionZoneZoneTypeProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemClientsClientListInput)(nil)).Elem(), GetFileSystemClientsClientListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemClientsClientListArrayInput)(nil)).Elem(), GetFileSystemClientsClientListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemListInput)(nil)).Elem(), GetFileSystemsFileSystemListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemListArrayInput)(nil)).Elem(), GetFileSystemsFileSystemListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountTargetsMountTargetInput)(nil)).Elem(), GetMountTargetsMountTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountTargetsMountTargetArrayInput)(nil)).Elem(), GetMountTargetsMountTargetArray{})
	pulumi.RegisterOutputType(GetAccessGroupsAccessGroupListOutput{})
	pulumi.RegisterOutputType(GetAccessGroupsAccessGroupListArrayOutput{})
	pulumi.RegisterOutputType(GetAccessRulesAccessRuleListOutput{})
	pulumi.RegisterOutputType(GetAccessRulesAccessRuleListArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneZoneOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneZoneArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneZoneTypeOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneZoneTypeArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneZoneTypeProtocolOutput{})
	pulumi.RegisterOutputType(GetAvailableZoneRegionZoneZoneTypeProtocolArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemClientsClientListOutput{})
	pulumi.RegisterOutputType(GetFileSystemClientsClientListArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemListOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemListArrayOutput{})
	pulumi.RegisterOutputType(GetMountTargetsMountTargetOutput{})
	pulumi.RegisterOutputType(GetMountTargetsMountTargetArrayOutput{})
}
