// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cfs availableZone
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cfs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cfs.GetAvailableZone(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAvailableZone(ctx *pulumi.Context, args *GetAvailableZoneArgs, opts ...pulumi.InvokeOption) (*GetAvailableZoneResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAvailableZoneResult
	err := ctx.Invoke("tencentcloud:Cfs/getAvailableZone:getAvailableZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAvailableZone.
type GetAvailableZoneArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getAvailableZone.
type GetAvailableZoneResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Information such as resource availability in each AZ and the supported storage classes and protocols.
	RegionZones      []GetAvailableZoneRegionZone `pulumi:"regionZones"`
	ResultOutputFile *string                      `pulumi:"resultOutputFile"`
}

func GetAvailableZoneOutput(ctx *pulumi.Context, args GetAvailableZoneOutputArgs, opts ...pulumi.InvokeOption) GetAvailableZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAvailableZoneResult, error) {
			args := v.(GetAvailableZoneArgs)
			r, err := GetAvailableZone(ctx, &args, opts...)
			var s GetAvailableZoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAvailableZoneResultOutput)
}

// A collection of arguments for invoking getAvailableZone.
type GetAvailableZoneOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetAvailableZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneArgs)(nil)).Elem()
}

// A collection of values returned by getAvailableZone.
type GetAvailableZoneResultOutput struct{ *pulumi.OutputState }

func (GetAvailableZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableZoneResult)(nil)).Elem()
}

func (o GetAvailableZoneResultOutput) ToGetAvailableZoneResultOutput() GetAvailableZoneResultOutput {
	return o
}

func (o GetAvailableZoneResultOutput) ToGetAvailableZoneResultOutputWithContext(ctx context.Context) GetAvailableZoneResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAvailableZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

// Information such as resource availability in each AZ and the supported storage classes and protocols.
func (o GetAvailableZoneResultOutput) RegionZones() GetAvailableZoneRegionZoneArrayOutput {
	return o.ApplyT(func(v GetAvailableZoneResult) []GetAvailableZoneRegionZone { return v.RegionZones }).(GetAvailableZoneRegionZoneArrayOutput)
}

func (o GetAvailableZoneResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAvailableZoneResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAvailableZoneResultOutput{})
}
