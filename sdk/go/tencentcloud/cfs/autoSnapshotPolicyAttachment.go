// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cfs autoSnapshotPolicyAttachment
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cfs.NewAutoSnapshotPolicyAttachment(ctx, "autoSnapshotPolicyAttachment", &Cfs.AutoSnapshotPolicyAttachmentArgs{
//				AutoSnapshotPolicyId: pulumi.String("asp-basic"),
//				FileSystemIds:        pulumi.String("cfs-4xzkct19,cfs-iobiaxtj"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cfs auto_snapshot_policy_attachment can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cfs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment auto_snapshot_policy_attachment auto_snapshot_policy_id#file_system_ids
//
// ```
type AutoSnapshotPolicyAttachment struct {
	pulumi.CustomResourceState

	// ID of the snapshot to be unbound.
	AutoSnapshotPolicyId pulumi.StringOutput `pulumi:"autoSnapshotPolicyId"`
	// List of IDs of the file systems to be unbound, separated by comma.
	FileSystemIds pulumi.StringOutput `pulumi:"fileSystemIds"`
}

// NewAutoSnapshotPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewAutoSnapshotPolicyAttachment(ctx *pulumi.Context,
	name string, args *AutoSnapshotPolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*AutoSnapshotPolicyAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoSnapshotPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'AutoSnapshotPolicyId'")
	}
	if args.FileSystemIds == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemIds'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AutoSnapshotPolicyAttachment
	err := ctx.RegisterResource("tencentcloud:Cfs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoSnapshotPolicyAttachment gets an existing AutoSnapshotPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoSnapshotPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoSnapshotPolicyAttachmentState, opts ...pulumi.ResourceOption) (*AutoSnapshotPolicyAttachment, error) {
	var resource AutoSnapshotPolicyAttachment
	err := ctx.ReadResource("tencentcloud:Cfs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoSnapshotPolicyAttachment resources.
type autoSnapshotPolicyAttachmentState struct {
	// ID of the snapshot to be unbound.
	AutoSnapshotPolicyId *string `pulumi:"autoSnapshotPolicyId"`
	// List of IDs of the file systems to be unbound, separated by comma.
	FileSystemIds *string `pulumi:"fileSystemIds"`
}

type AutoSnapshotPolicyAttachmentState struct {
	// ID of the snapshot to be unbound.
	AutoSnapshotPolicyId pulumi.StringPtrInput
	// List of IDs of the file systems to be unbound, separated by comma.
	FileSystemIds pulumi.StringPtrInput
}

func (AutoSnapshotPolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoSnapshotPolicyAttachmentState)(nil)).Elem()
}

type autoSnapshotPolicyAttachmentArgs struct {
	// ID of the snapshot to be unbound.
	AutoSnapshotPolicyId string `pulumi:"autoSnapshotPolicyId"`
	// List of IDs of the file systems to be unbound, separated by comma.
	FileSystemIds string `pulumi:"fileSystemIds"`
}

// The set of arguments for constructing a AutoSnapshotPolicyAttachment resource.
type AutoSnapshotPolicyAttachmentArgs struct {
	// ID of the snapshot to be unbound.
	AutoSnapshotPolicyId pulumi.StringInput
	// List of IDs of the file systems to be unbound, separated by comma.
	FileSystemIds pulumi.StringInput
}

func (AutoSnapshotPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoSnapshotPolicyAttachmentArgs)(nil)).Elem()
}

type AutoSnapshotPolicyAttachmentInput interface {
	pulumi.Input

	ToAutoSnapshotPolicyAttachmentOutput() AutoSnapshotPolicyAttachmentOutput
	ToAutoSnapshotPolicyAttachmentOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentOutput
}

func (*AutoSnapshotPolicyAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoSnapshotPolicyAttachment)(nil)).Elem()
}

func (i *AutoSnapshotPolicyAttachment) ToAutoSnapshotPolicyAttachmentOutput() AutoSnapshotPolicyAttachmentOutput {
	return i.ToAutoSnapshotPolicyAttachmentOutputWithContext(context.Background())
}

func (i *AutoSnapshotPolicyAttachment) ToAutoSnapshotPolicyAttachmentOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoSnapshotPolicyAttachmentOutput)
}

// AutoSnapshotPolicyAttachmentArrayInput is an input type that accepts AutoSnapshotPolicyAttachmentArray and AutoSnapshotPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `AutoSnapshotPolicyAttachmentArrayInput` via:
//
//	AutoSnapshotPolicyAttachmentArray{ AutoSnapshotPolicyAttachmentArgs{...} }
type AutoSnapshotPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToAutoSnapshotPolicyAttachmentArrayOutput() AutoSnapshotPolicyAttachmentArrayOutput
	ToAutoSnapshotPolicyAttachmentArrayOutputWithContext(context.Context) AutoSnapshotPolicyAttachmentArrayOutput
}

type AutoSnapshotPolicyAttachmentArray []AutoSnapshotPolicyAttachmentInput

func (AutoSnapshotPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoSnapshotPolicyAttachment)(nil)).Elem()
}

func (i AutoSnapshotPolicyAttachmentArray) ToAutoSnapshotPolicyAttachmentArrayOutput() AutoSnapshotPolicyAttachmentArrayOutput {
	return i.ToAutoSnapshotPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i AutoSnapshotPolicyAttachmentArray) ToAutoSnapshotPolicyAttachmentArrayOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoSnapshotPolicyAttachmentArrayOutput)
}

// AutoSnapshotPolicyAttachmentMapInput is an input type that accepts AutoSnapshotPolicyAttachmentMap and AutoSnapshotPolicyAttachmentMapOutput values.
// You can construct a concrete instance of `AutoSnapshotPolicyAttachmentMapInput` via:
//
//	AutoSnapshotPolicyAttachmentMap{ "key": AutoSnapshotPolicyAttachmentArgs{...} }
type AutoSnapshotPolicyAttachmentMapInput interface {
	pulumi.Input

	ToAutoSnapshotPolicyAttachmentMapOutput() AutoSnapshotPolicyAttachmentMapOutput
	ToAutoSnapshotPolicyAttachmentMapOutputWithContext(context.Context) AutoSnapshotPolicyAttachmentMapOutput
}

type AutoSnapshotPolicyAttachmentMap map[string]AutoSnapshotPolicyAttachmentInput

func (AutoSnapshotPolicyAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoSnapshotPolicyAttachment)(nil)).Elem()
}

func (i AutoSnapshotPolicyAttachmentMap) ToAutoSnapshotPolicyAttachmentMapOutput() AutoSnapshotPolicyAttachmentMapOutput {
	return i.ToAutoSnapshotPolicyAttachmentMapOutputWithContext(context.Background())
}

func (i AutoSnapshotPolicyAttachmentMap) ToAutoSnapshotPolicyAttachmentMapOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoSnapshotPolicyAttachmentMapOutput)
}

type AutoSnapshotPolicyAttachmentOutput struct{ *pulumi.OutputState }

func (AutoSnapshotPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoSnapshotPolicyAttachment)(nil)).Elem()
}

func (o AutoSnapshotPolicyAttachmentOutput) ToAutoSnapshotPolicyAttachmentOutput() AutoSnapshotPolicyAttachmentOutput {
	return o
}

func (o AutoSnapshotPolicyAttachmentOutput) ToAutoSnapshotPolicyAttachmentOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentOutput {
	return o
}

// ID of the snapshot to be unbound.
func (o AutoSnapshotPolicyAttachmentOutput) AutoSnapshotPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoSnapshotPolicyAttachment) pulumi.StringOutput { return v.AutoSnapshotPolicyId }).(pulumi.StringOutput)
}

// List of IDs of the file systems to be unbound, separated by comma.
func (o AutoSnapshotPolicyAttachmentOutput) FileSystemIds() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoSnapshotPolicyAttachment) pulumi.StringOutput { return v.FileSystemIds }).(pulumi.StringOutput)
}

type AutoSnapshotPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AutoSnapshotPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoSnapshotPolicyAttachment)(nil)).Elem()
}

func (o AutoSnapshotPolicyAttachmentArrayOutput) ToAutoSnapshotPolicyAttachmentArrayOutput() AutoSnapshotPolicyAttachmentArrayOutput {
	return o
}

func (o AutoSnapshotPolicyAttachmentArrayOutput) ToAutoSnapshotPolicyAttachmentArrayOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentArrayOutput {
	return o
}

func (o AutoSnapshotPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) AutoSnapshotPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoSnapshotPolicyAttachment {
		return vs[0].([]*AutoSnapshotPolicyAttachment)[vs[1].(int)]
	}).(AutoSnapshotPolicyAttachmentOutput)
}

type AutoSnapshotPolicyAttachmentMapOutput struct{ *pulumi.OutputState }

func (AutoSnapshotPolicyAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoSnapshotPolicyAttachment)(nil)).Elem()
}

func (o AutoSnapshotPolicyAttachmentMapOutput) ToAutoSnapshotPolicyAttachmentMapOutput() AutoSnapshotPolicyAttachmentMapOutput {
	return o
}

func (o AutoSnapshotPolicyAttachmentMapOutput) ToAutoSnapshotPolicyAttachmentMapOutputWithContext(ctx context.Context) AutoSnapshotPolicyAttachmentMapOutput {
	return o
}

func (o AutoSnapshotPolicyAttachmentMapOutput) MapIndex(k pulumi.StringInput) AutoSnapshotPolicyAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoSnapshotPolicyAttachment {
		return vs[0].(map[string]*AutoSnapshotPolicyAttachment)[vs[1].(string)]
	}).(AutoSnapshotPolicyAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoSnapshotPolicyAttachmentInput)(nil)).Elem(), &AutoSnapshotPolicyAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoSnapshotPolicyAttachmentArrayInput)(nil)).Elem(), AutoSnapshotPolicyAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoSnapshotPolicyAttachmentMapInput)(nil)).Elem(), AutoSnapshotPolicyAttachmentMap{})
	pulumi.RegisterOutputType(AutoSnapshotPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(AutoSnapshotPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AutoSnapshotPolicyAttachmentMapOutput{})
}
