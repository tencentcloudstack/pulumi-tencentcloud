// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package open

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to open identity center
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Open"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Open.NewIdentityCenterOperation(ctx, "openIdentityCenterOperation", &Open.IdentityCenterOperationArgs{
//				ZoneName: pulumi.String("test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type IdentityCenterOperation struct {
	pulumi.CustomResourceState

	// Space ID. z-Prefix starts with 12 random numbers/lowercase letters followed by.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
	// Space name, which must be globally unique and contain 2-64 characters including lowercase letters, digits, and hyphens (-). It can neither start or end with a hyphen (-) nor contain two consecutive hyphens (-).
	ZoneName pulumi.StringOutput `pulumi:"zoneName"`
}

// NewIdentityCenterOperation registers a new resource with the given unique name, arguments, and options.
func NewIdentityCenterOperation(ctx *pulumi.Context,
	name string, args *IdentityCenterOperationArgs, opts ...pulumi.ResourceOption) (*IdentityCenterOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ZoneName == nil {
		return nil, errors.New("invalid value for required argument 'ZoneName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityCenterOperation
	err := ctx.RegisterResource("tencentcloud:Open/identityCenterOperation:IdentityCenterOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityCenterOperation gets an existing IdentityCenterOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityCenterOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityCenterOperationState, opts ...pulumi.ResourceOption) (*IdentityCenterOperation, error) {
	var resource IdentityCenterOperation
	err := ctx.ReadResource("tencentcloud:Open/identityCenterOperation:IdentityCenterOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityCenterOperation resources.
type identityCenterOperationState struct {
	// Space ID. z-Prefix starts with 12 random numbers/lowercase letters followed by.
	ZoneId *string `pulumi:"zoneId"`
	// Space name, which must be globally unique and contain 2-64 characters including lowercase letters, digits, and hyphens (-). It can neither start or end with a hyphen (-) nor contain two consecutive hyphens (-).
	ZoneName *string `pulumi:"zoneName"`
}

type IdentityCenterOperationState struct {
	// Space ID. z-Prefix starts with 12 random numbers/lowercase letters followed by.
	ZoneId pulumi.StringPtrInput
	// Space name, which must be globally unique and contain 2-64 characters including lowercase letters, digits, and hyphens (-). It can neither start or end with a hyphen (-) nor contain two consecutive hyphens (-).
	ZoneName pulumi.StringPtrInput
}

func (IdentityCenterOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityCenterOperationState)(nil)).Elem()
}

type identityCenterOperationArgs struct {
	// Space name, which must be globally unique and contain 2-64 characters including lowercase letters, digits, and hyphens (-). It can neither start or end with a hyphen (-) nor contain two consecutive hyphens (-).
	ZoneName string `pulumi:"zoneName"`
}

// The set of arguments for constructing a IdentityCenterOperation resource.
type IdentityCenterOperationArgs struct {
	// Space name, which must be globally unique and contain 2-64 characters including lowercase letters, digits, and hyphens (-). It can neither start or end with a hyphen (-) nor contain two consecutive hyphens (-).
	ZoneName pulumi.StringInput
}

func (IdentityCenterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityCenterOperationArgs)(nil)).Elem()
}

type IdentityCenterOperationInput interface {
	pulumi.Input

	ToIdentityCenterOperationOutput() IdentityCenterOperationOutput
	ToIdentityCenterOperationOutputWithContext(ctx context.Context) IdentityCenterOperationOutput
}

func (*IdentityCenterOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityCenterOperation)(nil)).Elem()
}

func (i *IdentityCenterOperation) ToIdentityCenterOperationOutput() IdentityCenterOperationOutput {
	return i.ToIdentityCenterOperationOutputWithContext(context.Background())
}

func (i *IdentityCenterOperation) ToIdentityCenterOperationOutputWithContext(ctx context.Context) IdentityCenterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityCenterOperationOutput)
}

// IdentityCenterOperationArrayInput is an input type that accepts IdentityCenterOperationArray and IdentityCenterOperationArrayOutput values.
// You can construct a concrete instance of `IdentityCenterOperationArrayInput` via:
//
//	IdentityCenterOperationArray{ IdentityCenterOperationArgs{...} }
type IdentityCenterOperationArrayInput interface {
	pulumi.Input

	ToIdentityCenterOperationArrayOutput() IdentityCenterOperationArrayOutput
	ToIdentityCenterOperationArrayOutputWithContext(context.Context) IdentityCenterOperationArrayOutput
}

type IdentityCenterOperationArray []IdentityCenterOperationInput

func (IdentityCenterOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityCenterOperation)(nil)).Elem()
}

func (i IdentityCenterOperationArray) ToIdentityCenterOperationArrayOutput() IdentityCenterOperationArrayOutput {
	return i.ToIdentityCenterOperationArrayOutputWithContext(context.Background())
}

func (i IdentityCenterOperationArray) ToIdentityCenterOperationArrayOutputWithContext(ctx context.Context) IdentityCenterOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityCenterOperationArrayOutput)
}

// IdentityCenterOperationMapInput is an input type that accepts IdentityCenterOperationMap and IdentityCenterOperationMapOutput values.
// You can construct a concrete instance of `IdentityCenterOperationMapInput` via:
//
//	IdentityCenterOperationMap{ "key": IdentityCenterOperationArgs{...} }
type IdentityCenterOperationMapInput interface {
	pulumi.Input

	ToIdentityCenterOperationMapOutput() IdentityCenterOperationMapOutput
	ToIdentityCenterOperationMapOutputWithContext(context.Context) IdentityCenterOperationMapOutput
}

type IdentityCenterOperationMap map[string]IdentityCenterOperationInput

func (IdentityCenterOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityCenterOperation)(nil)).Elem()
}

func (i IdentityCenterOperationMap) ToIdentityCenterOperationMapOutput() IdentityCenterOperationMapOutput {
	return i.ToIdentityCenterOperationMapOutputWithContext(context.Background())
}

func (i IdentityCenterOperationMap) ToIdentityCenterOperationMapOutputWithContext(ctx context.Context) IdentityCenterOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityCenterOperationMapOutput)
}

type IdentityCenterOperationOutput struct{ *pulumi.OutputState }

func (IdentityCenterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityCenterOperation)(nil)).Elem()
}

func (o IdentityCenterOperationOutput) ToIdentityCenterOperationOutput() IdentityCenterOperationOutput {
	return o
}

func (o IdentityCenterOperationOutput) ToIdentityCenterOperationOutputWithContext(ctx context.Context) IdentityCenterOperationOutput {
	return o
}

// Space ID. z-Prefix starts with 12 random numbers/lowercase letters followed by.
func (o IdentityCenterOperationOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityCenterOperation) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

// Space name, which must be globally unique and contain 2-64 characters including lowercase letters, digits, and hyphens (-). It can neither start or end with a hyphen (-) nor contain two consecutive hyphens (-).
func (o IdentityCenterOperationOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityCenterOperation) pulumi.StringOutput { return v.ZoneName }).(pulumi.StringOutput)
}

type IdentityCenterOperationArrayOutput struct{ *pulumi.OutputState }

func (IdentityCenterOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityCenterOperation)(nil)).Elem()
}

func (o IdentityCenterOperationArrayOutput) ToIdentityCenterOperationArrayOutput() IdentityCenterOperationArrayOutput {
	return o
}

func (o IdentityCenterOperationArrayOutput) ToIdentityCenterOperationArrayOutputWithContext(ctx context.Context) IdentityCenterOperationArrayOutput {
	return o
}

func (o IdentityCenterOperationArrayOutput) Index(i pulumi.IntInput) IdentityCenterOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityCenterOperation {
		return vs[0].([]*IdentityCenterOperation)[vs[1].(int)]
	}).(IdentityCenterOperationOutput)
}

type IdentityCenterOperationMapOutput struct{ *pulumi.OutputState }

func (IdentityCenterOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityCenterOperation)(nil)).Elem()
}

func (o IdentityCenterOperationMapOutput) ToIdentityCenterOperationMapOutput() IdentityCenterOperationMapOutput {
	return o
}

func (o IdentityCenterOperationMapOutput) ToIdentityCenterOperationMapOutputWithContext(ctx context.Context) IdentityCenterOperationMapOutput {
	return o
}

func (o IdentityCenterOperationMapOutput) MapIndex(k pulumi.StringInput) IdentityCenterOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityCenterOperation {
		return vs[0].(map[string]*IdentityCenterOperation)[vs[1].(string)]
	}).(IdentityCenterOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityCenterOperationInput)(nil)).Elem(), &IdentityCenterOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityCenterOperationArrayInput)(nil)).Elem(), IdentityCenterOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityCenterOperationMapInput)(nil)).Elem(), IdentityCenterOperationMap{})
	pulumi.RegisterOutputType(IdentityCenterOperationOutput{})
	pulumi.RegisterOutputType(IdentityCenterOperationArrayOutput{})
	pulumi.RegisterOutputType(IdentityCenterOperationMapOutput{})
}
