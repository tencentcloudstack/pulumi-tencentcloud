// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of tat invocationTask
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tat"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tat"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tat.GetInvocationTask(ctx, &tat.GetInvocationTaskArgs{
//				Filters: []tat.GetInvocationTaskFilter{
//					tat.GetInvocationTaskFilter{
//						Name: "instance-id",
//						Values: []string{
//							"ins-p4pq4gaq",
//						},
//					},
//				},
//				HideOutput: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInvocationTask(ctx *pulumi.Context, args *GetInvocationTaskArgs, opts ...pulumi.InvokeOption) (*GetInvocationTaskResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetInvocationTaskResult
	err := ctx.Invoke("tencentcloud:Tat/getInvocationTask:getInvocationTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInvocationTask.
type GetInvocationTaskArgs struct {
	// Filter conditions.invocation-id - String - Required: No - (Filter condition) Filter by the execution activity ID.invocation-task-id - String - Required: No - (Filter condition) Filter by the execution task ID.instance-id - String - Required: No - (Filter condition) Filter by the instance ID.command-id - String - Required: No - (Filter condition) Filter by the command ID.Up to 10 Filters are allowed for each request. Each filter can have up to five Filter.Values. InvocationTaskIds and Filters cannot be specified at the same time.
	Filters []GetInvocationTaskFilter `pulumi:"filters"`
	// Whether to hide the output. Valid values:True (default): Hide the outputFalse: Show the output.
	HideOutput *bool `pulumi:"hideOutput"`
	// List of execution task IDs. Up to 100 IDs are allowed for each request. InvocationTaskIds and Filters cannot be specified at the same time.
	InvocationTaskIds []string `pulumi:"invocationTaskIds"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getInvocationTask.
type GetInvocationTaskResult struct {
	Filters    []GetInvocationTaskFilter `pulumi:"filters"`
	HideOutput *bool                     `pulumi:"hideOutput"`
	// The provider-assigned unique ID for this managed resource.
	Id                string   `pulumi:"id"`
	InvocationTaskIds []string `pulumi:"invocationTaskIds"`
	// List of execution tasks.
	InvocationTaskSets []GetInvocationTaskInvocationTaskSet `pulumi:"invocationTaskSets"`
	ResultOutputFile   *string                              `pulumi:"resultOutputFile"`
}

func GetInvocationTaskOutput(ctx *pulumi.Context, args GetInvocationTaskOutputArgs, opts ...pulumi.InvokeOption) GetInvocationTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInvocationTaskResult, error) {
			args := v.(GetInvocationTaskArgs)
			r, err := GetInvocationTask(ctx, &args, opts...)
			var s GetInvocationTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInvocationTaskResultOutput)
}

// A collection of arguments for invoking getInvocationTask.
type GetInvocationTaskOutputArgs struct {
	// Filter conditions.invocation-id - String - Required: No - (Filter condition) Filter by the execution activity ID.invocation-task-id - String - Required: No - (Filter condition) Filter by the execution task ID.instance-id - String - Required: No - (Filter condition) Filter by the instance ID.command-id - String - Required: No - (Filter condition) Filter by the command ID.Up to 10 Filters are allowed for each request. Each filter can have up to five Filter.Values. InvocationTaskIds and Filters cannot be specified at the same time.
	Filters GetInvocationTaskFilterArrayInput `pulumi:"filters"`
	// Whether to hide the output. Valid values:True (default): Hide the outputFalse: Show the output.
	HideOutput pulumi.BoolPtrInput `pulumi:"hideOutput"`
	// List of execution task IDs. Up to 100 IDs are allowed for each request. InvocationTaskIds and Filters cannot be specified at the same time.
	InvocationTaskIds pulumi.StringArrayInput `pulumi:"invocationTaskIds"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetInvocationTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskArgs)(nil)).Elem()
}

// A collection of values returned by getInvocationTask.
type GetInvocationTaskResultOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskResult)(nil)).Elem()
}

func (o GetInvocationTaskResultOutput) ToGetInvocationTaskResultOutput() GetInvocationTaskResultOutput {
	return o
}

func (o GetInvocationTaskResultOutput) ToGetInvocationTaskResultOutputWithContext(ctx context.Context) GetInvocationTaskResultOutput {
	return o
}

func (o GetInvocationTaskResultOutput) Filters() GetInvocationTaskFilterArrayOutput {
	return o.ApplyT(func(v GetInvocationTaskResult) []GetInvocationTaskFilter { return v.Filters }).(GetInvocationTaskFilterArrayOutput)
}

func (o GetInvocationTaskResultOutput) HideOutput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInvocationTaskResult) *bool { return v.HideOutput }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInvocationTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInvocationTaskResultOutput) InvocationTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInvocationTaskResult) []string { return v.InvocationTaskIds }).(pulumi.StringArrayOutput)
}

// List of execution tasks.
func (o GetInvocationTaskResultOutput) InvocationTaskSets() GetInvocationTaskInvocationTaskSetArrayOutput {
	return o.ApplyT(func(v GetInvocationTaskResult) []GetInvocationTaskInvocationTaskSet { return v.InvocationTaskSets }).(GetInvocationTaskInvocationTaskSetArrayOutput)
}

func (o GetInvocationTaskResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvocationTaskResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInvocationTaskResultOutput{})
}
