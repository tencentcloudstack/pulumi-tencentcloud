// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tat

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tat invocationInvokeAttachment
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tat"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tat.NewInvocationInvokeAttachment(ctx, "invocationInvokeAttachment", &Tat.InvocationInvokeAttachmentArgs{
//				CommandId:          pulumi.String("cmd-rxbs7f5z"),
//				InstanceId:         pulumi.String("ins-881b1c8w"),
//				OutputCosBucketUrl: pulumi.String("https://BucketName-123454321.cos.ap-beijing.myqcloud.com"),
//				OutputCosKeyPrefix: pulumi.String("log"),
//				Timeout:            pulumi.Int(100),
//				Username:           pulumi.String("root"),
//				WorkingDirectory:   pulumi.String("/root"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// tat invocation can be imported using the invocation_id#instance_id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Tat/invocationInvokeAttachment:InvocationInvokeAttachment invocation_invoke_attachment inv-mhs6ca8z#ins-881b1c8w
//
// ```
type InvocationInvokeAttachment struct {
	pulumi.CustomResourceState

	// Command ID.
	CommandId pulumi.StringOutput `pulumi:"commandId"`
	// ID of instances about to execute commands. Supported instance types:  CVM  LIGHTHOUSE.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The COS bucket URL for uploading logs. The URL must start with https, such as https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
	OutputCosBucketUrl pulumi.StringPtrOutput `pulumi:"outputCosBucketUrl"`
	// The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive slashes.
	OutputCosKeyPrefix pulumi.StringPtrOutput `pulumi:"outputCosKeyPrefix"`
	// Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
	Parameters pulumi.StringPtrOutput `pulumi:"parameters"`
	// Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
	// The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root is used to execute commands on Linux and the user System is used on Windows.
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for POWERSHELL commands.
	WorkingDirectory pulumi.StringPtrOutput `pulumi:"workingDirectory"`
}

// NewInvocationInvokeAttachment registers a new resource with the given unique name, arguments, and options.
func NewInvocationInvokeAttachment(ctx *pulumi.Context,
	name string, args *InvocationInvokeAttachmentArgs, opts ...pulumi.ResourceOption) (*InvocationInvokeAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommandId == nil {
		return nil, errors.New("invalid value for required argument 'CommandId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InvocationInvokeAttachment
	err := ctx.RegisterResource("tencentcloud:Tat/invocationInvokeAttachment:InvocationInvokeAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvocationInvokeAttachment gets an existing InvocationInvokeAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvocationInvokeAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvocationInvokeAttachmentState, opts ...pulumi.ResourceOption) (*InvocationInvokeAttachment, error) {
	var resource InvocationInvokeAttachment
	err := ctx.ReadResource("tencentcloud:Tat/invocationInvokeAttachment:InvocationInvokeAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InvocationInvokeAttachment resources.
type invocationInvokeAttachmentState struct {
	// Command ID.
	CommandId *string `pulumi:"commandId"`
	// ID of instances about to execute commands. Supported instance types:  CVM  LIGHTHOUSE.
	InstanceId *string `pulumi:"instanceId"`
	// The COS bucket URL for uploading logs. The URL must start with https, such as https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
	OutputCosBucketUrl *string `pulumi:"outputCosBucketUrl"`
	// The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive slashes.
	OutputCosKeyPrefix *string `pulumi:"outputCosKeyPrefix"`
	// Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
	Parameters *string `pulumi:"parameters"`
	// Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
	Timeout *int `pulumi:"timeout"`
	// The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root is used to execute commands on Linux and the user System is used on Windows.
	Username *string `pulumi:"username"`
	// Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for POWERSHELL commands.
	WorkingDirectory *string `pulumi:"workingDirectory"`
}

type InvocationInvokeAttachmentState struct {
	// Command ID.
	CommandId pulumi.StringPtrInput
	// ID of instances about to execute commands. Supported instance types:  CVM  LIGHTHOUSE.
	InstanceId pulumi.StringPtrInput
	// The COS bucket URL for uploading logs. The URL must start with https, such as https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
	OutputCosBucketUrl pulumi.StringPtrInput
	// The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive slashes.
	OutputCosKeyPrefix pulumi.StringPtrInput
	// Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
	Parameters pulumi.StringPtrInput
	// Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
	Timeout pulumi.IntPtrInput
	// The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root is used to execute commands on Linux and the user System is used on Windows.
	Username pulumi.StringPtrInput
	// Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for POWERSHELL commands.
	WorkingDirectory pulumi.StringPtrInput
}

func (InvocationInvokeAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*invocationInvokeAttachmentState)(nil)).Elem()
}

type invocationInvokeAttachmentArgs struct {
	// Command ID.
	CommandId string `pulumi:"commandId"`
	// ID of instances about to execute commands. Supported instance types:  CVM  LIGHTHOUSE.
	InstanceId string `pulumi:"instanceId"`
	// The COS bucket URL for uploading logs. The URL must start with https, such as https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
	OutputCosBucketUrl *string `pulumi:"outputCosBucketUrl"`
	// The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive slashes.
	OutputCosKeyPrefix *string `pulumi:"outputCosKeyPrefix"`
	// Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
	Parameters *string `pulumi:"parameters"`
	// Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
	Timeout *int `pulumi:"timeout"`
	// The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root is used to execute commands on Linux and the user System is used on Windows.
	Username *string `pulumi:"username"`
	// Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for POWERSHELL commands.
	WorkingDirectory *string `pulumi:"workingDirectory"`
}

// The set of arguments for constructing a InvocationInvokeAttachment resource.
type InvocationInvokeAttachmentArgs struct {
	// Command ID.
	CommandId pulumi.StringInput
	// ID of instances about to execute commands. Supported instance types:  CVM  LIGHTHOUSE.
	InstanceId pulumi.StringInput
	// The COS bucket URL for uploading logs. The URL must start with https, such as https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
	OutputCosBucketUrl pulumi.StringPtrInput
	// The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive slashes.
	OutputCosKeyPrefix pulumi.StringPtrInput
	// Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
	Parameters pulumi.StringPtrInput
	// Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
	Timeout pulumi.IntPtrInput
	// The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root is used to execute commands on Linux and the user System is used on Windows.
	Username pulumi.StringPtrInput
	// Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for POWERSHELL commands.
	WorkingDirectory pulumi.StringPtrInput
}

func (InvocationInvokeAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invocationInvokeAttachmentArgs)(nil)).Elem()
}

type InvocationInvokeAttachmentInput interface {
	pulumi.Input

	ToInvocationInvokeAttachmentOutput() InvocationInvokeAttachmentOutput
	ToInvocationInvokeAttachmentOutputWithContext(ctx context.Context) InvocationInvokeAttachmentOutput
}

func (*InvocationInvokeAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationInvokeAttachment)(nil)).Elem()
}

func (i *InvocationInvokeAttachment) ToInvocationInvokeAttachmentOutput() InvocationInvokeAttachmentOutput {
	return i.ToInvocationInvokeAttachmentOutputWithContext(context.Background())
}

func (i *InvocationInvokeAttachment) ToInvocationInvokeAttachmentOutputWithContext(ctx context.Context) InvocationInvokeAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationInvokeAttachmentOutput)
}

// InvocationInvokeAttachmentArrayInput is an input type that accepts InvocationInvokeAttachmentArray and InvocationInvokeAttachmentArrayOutput values.
// You can construct a concrete instance of `InvocationInvokeAttachmentArrayInput` via:
//
//	InvocationInvokeAttachmentArray{ InvocationInvokeAttachmentArgs{...} }
type InvocationInvokeAttachmentArrayInput interface {
	pulumi.Input

	ToInvocationInvokeAttachmentArrayOutput() InvocationInvokeAttachmentArrayOutput
	ToInvocationInvokeAttachmentArrayOutputWithContext(context.Context) InvocationInvokeAttachmentArrayOutput
}

type InvocationInvokeAttachmentArray []InvocationInvokeAttachmentInput

func (InvocationInvokeAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InvocationInvokeAttachment)(nil)).Elem()
}

func (i InvocationInvokeAttachmentArray) ToInvocationInvokeAttachmentArrayOutput() InvocationInvokeAttachmentArrayOutput {
	return i.ToInvocationInvokeAttachmentArrayOutputWithContext(context.Background())
}

func (i InvocationInvokeAttachmentArray) ToInvocationInvokeAttachmentArrayOutputWithContext(ctx context.Context) InvocationInvokeAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationInvokeAttachmentArrayOutput)
}

// InvocationInvokeAttachmentMapInput is an input type that accepts InvocationInvokeAttachmentMap and InvocationInvokeAttachmentMapOutput values.
// You can construct a concrete instance of `InvocationInvokeAttachmentMapInput` via:
//
//	InvocationInvokeAttachmentMap{ "key": InvocationInvokeAttachmentArgs{...} }
type InvocationInvokeAttachmentMapInput interface {
	pulumi.Input

	ToInvocationInvokeAttachmentMapOutput() InvocationInvokeAttachmentMapOutput
	ToInvocationInvokeAttachmentMapOutputWithContext(context.Context) InvocationInvokeAttachmentMapOutput
}

type InvocationInvokeAttachmentMap map[string]InvocationInvokeAttachmentInput

func (InvocationInvokeAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InvocationInvokeAttachment)(nil)).Elem()
}

func (i InvocationInvokeAttachmentMap) ToInvocationInvokeAttachmentMapOutput() InvocationInvokeAttachmentMapOutput {
	return i.ToInvocationInvokeAttachmentMapOutputWithContext(context.Background())
}

func (i InvocationInvokeAttachmentMap) ToInvocationInvokeAttachmentMapOutputWithContext(ctx context.Context) InvocationInvokeAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationInvokeAttachmentMapOutput)
}

type InvocationInvokeAttachmentOutput struct{ *pulumi.OutputState }

func (InvocationInvokeAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationInvokeAttachment)(nil)).Elem()
}

func (o InvocationInvokeAttachmentOutput) ToInvocationInvokeAttachmentOutput() InvocationInvokeAttachmentOutput {
	return o
}

func (o InvocationInvokeAttachmentOutput) ToInvocationInvokeAttachmentOutputWithContext(ctx context.Context) InvocationInvokeAttachmentOutput {
	return o
}

// Command ID.
func (o InvocationInvokeAttachmentOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringOutput { return v.CommandId }).(pulumi.StringOutput)
}

// ID of instances about to execute commands. Supported instance types:  CVM  LIGHTHOUSE.
func (o InvocationInvokeAttachmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The COS bucket URL for uploading logs. The URL must start with https, such as https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
func (o InvocationInvokeAttachmentOutput) OutputCosBucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringPtrOutput { return v.OutputCosBucketUrl }).(pulumi.StringPtrOutput)
}

// The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive slashes.
func (o InvocationInvokeAttachmentOutput) OutputCosKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringPtrOutput { return v.OutputCosKeyPrefix }).(pulumi.StringPtrOutput)
}

// Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
func (o InvocationInvokeAttachmentOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringPtrOutput { return v.Parameters }).(pulumi.StringPtrOutput)
}

// Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
func (o InvocationInvokeAttachmentOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root is used to execute commands on Linux and the user System is used on Windows.
func (o InvocationInvokeAttachmentOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for POWERSHELL commands.
func (o InvocationInvokeAttachmentOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationInvokeAttachment) pulumi.StringPtrOutput { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type InvocationInvokeAttachmentArrayOutput struct{ *pulumi.OutputState }

func (InvocationInvokeAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InvocationInvokeAttachment)(nil)).Elem()
}

func (o InvocationInvokeAttachmentArrayOutput) ToInvocationInvokeAttachmentArrayOutput() InvocationInvokeAttachmentArrayOutput {
	return o
}

func (o InvocationInvokeAttachmentArrayOutput) ToInvocationInvokeAttachmentArrayOutputWithContext(ctx context.Context) InvocationInvokeAttachmentArrayOutput {
	return o
}

func (o InvocationInvokeAttachmentArrayOutput) Index(i pulumi.IntInput) InvocationInvokeAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InvocationInvokeAttachment {
		return vs[0].([]*InvocationInvokeAttachment)[vs[1].(int)]
	}).(InvocationInvokeAttachmentOutput)
}

type InvocationInvokeAttachmentMapOutput struct{ *pulumi.OutputState }

func (InvocationInvokeAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InvocationInvokeAttachment)(nil)).Elem()
}

func (o InvocationInvokeAttachmentMapOutput) ToInvocationInvokeAttachmentMapOutput() InvocationInvokeAttachmentMapOutput {
	return o
}

func (o InvocationInvokeAttachmentMapOutput) ToInvocationInvokeAttachmentMapOutputWithContext(ctx context.Context) InvocationInvokeAttachmentMapOutput {
	return o
}

func (o InvocationInvokeAttachmentMapOutput) MapIndex(k pulumi.StringInput) InvocationInvokeAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InvocationInvokeAttachment {
		return vs[0].(map[string]*InvocationInvokeAttachment)[vs[1].(string)]
	}).(InvocationInvokeAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationInvokeAttachmentInput)(nil)).Elem(), &InvocationInvokeAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationInvokeAttachmentArrayInput)(nil)).Elem(), InvocationInvokeAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationInvokeAttachmentMapInput)(nil)).Elem(), InvocationInvokeAttachmentMap{})
	pulumi.RegisterOutputType(InvocationInvokeAttachmentOutput{})
	pulumi.RegisterOutputType(InvocationInvokeAttachmentArrayOutput{})
	pulumi.RegisterOutputType(InvocationInvokeAttachmentMapOutput{})
}
