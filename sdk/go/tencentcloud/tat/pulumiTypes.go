// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CommandTag struct {
	// Tag key.
	Key string `pulumi:"key"`
	// Tag value.
	Value string `pulumi:"value"`
}

// CommandTagInput is an input type that accepts CommandTagArgs and CommandTagOutput values.
// You can construct a concrete instance of `CommandTagInput` via:
//
//	CommandTagArgs{...}
type CommandTagInput interface {
	pulumi.Input

	ToCommandTagOutput() CommandTagOutput
	ToCommandTagOutputWithContext(context.Context) CommandTagOutput
}

type CommandTagArgs struct {
	// Tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CommandTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandTag)(nil)).Elem()
}

func (i CommandTagArgs) ToCommandTagOutput() CommandTagOutput {
	return i.ToCommandTagOutputWithContext(context.Background())
}

func (i CommandTagArgs) ToCommandTagOutputWithContext(ctx context.Context) CommandTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandTagOutput)
}

// CommandTagArrayInput is an input type that accepts CommandTagArray and CommandTagArrayOutput values.
// You can construct a concrete instance of `CommandTagArrayInput` via:
//
//	CommandTagArray{ CommandTagArgs{...} }
type CommandTagArrayInput interface {
	pulumi.Input

	ToCommandTagArrayOutput() CommandTagArrayOutput
	ToCommandTagArrayOutputWithContext(context.Context) CommandTagArrayOutput
}

type CommandTagArray []CommandTagInput

func (CommandTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommandTag)(nil)).Elem()
}

func (i CommandTagArray) ToCommandTagArrayOutput() CommandTagArrayOutput {
	return i.ToCommandTagArrayOutputWithContext(context.Background())
}

func (i CommandTagArray) ToCommandTagArrayOutputWithContext(ctx context.Context) CommandTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandTagArrayOutput)
}

type CommandTagOutput struct{ *pulumi.OutputState }

func (CommandTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandTag)(nil)).Elem()
}

func (o CommandTagOutput) ToCommandTagOutput() CommandTagOutput {
	return o
}

func (o CommandTagOutput) ToCommandTagOutputWithContext(ctx context.Context) CommandTagOutput {
	return o
}

// Tag key.
func (o CommandTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CommandTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag value.
func (o CommandTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CommandTag) string { return v.Value }).(pulumi.StringOutput)
}

type CommandTagArrayOutput struct{ *pulumi.OutputState }

func (CommandTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommandTag)(nil)).Elem()
}

func (o CommandTagArrayOutput) ToCommandTagArrayOutput() CommandTagArrayOutput {
	return o
}

func (o CommandTagArrayOutput) ToCommandTagArrayOutputWithContext(ctx context.Context) CommandTagArrayOutput {
	return o
}

func (o CommandTagArrayOutput) Index(i pulumi.IntInput) CommandTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommandTag {
		return vs[0].([]CommandTag)[vs[1].(int)]
	}).(CommandTagOutput)
}

type InvokerScheduleSettings struct {
	// The next execution time of the invoker. This field is required if Policy is ONCE.
	InvokeTime *string `pulumi:"invokeTime"`
	// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
	Policy string `pulumi:"policy"`
	// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
	Recurrence *string `pulumi:"recurrence"`
}

// InvokerScheduleSettingsInput is an input type that accepts InvokerScheduleSettingsArgs and InvokerScheduleSettingsOutput values.
// You can construct a concrete instance of `InvokerScheduleSettingsInput` via:
//
//	InvokerScheduleSettingsArgs{...}
type InvokerScheduleSettingsInput interface {
	pulumi.Input

	ToInvokerScheduleSettingsOutput() InvokerScheduleSettingsOutput
	ToInvokerScheduleSettingsOutputWithContext(context.Context) InvokerScheduleSettingsOutput
}

type InvokerScheduleSettingsArgs struct {
	// The next execution time of the invoker. This field is required if Policy is ONCE.
	InvokeTime pulumi.StringPtrInput `pulumi:"invokeTime"`
	// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
	Recurrence pulumi.StringPtrInput `pulumi:"recurrence"`
}

func (InvokerScheduleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvokerScheduleSettings)(nil)).Elem()
}

func (i InvokerScheduleSettingsArgs) ToInvokerScheduleSettingsOutput() InvokerScheduleSettingsOutput {
	return i.ToInvokerScheduleSettingsOutputWithContext(context.Background())
}

func (i InvokerScheduleSettingsArgs) ToInvokerScheduleSettingsOutputWithContext(ctx context.Context) InvokerScheduleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvokerScheduleSettingsOutput)
}

func (i InvokerScheduleSettingsArgs) ToInvokerScheduleSettingsPtrOutput() InvokerScheduleSettingsPtrOutput {
	return i.ToInvokerScheduleSettingsPtrOutputWithContext(context.Background())
}

func (i InvokerScheduleSettingsArgs) ToInvokerScheduleSettingsPtrOutputWithContext(ctx context.Context) InvokerScheduleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvokerScheduleSettingsOutput).ToInvokerScheduleSettingsPtrOutputWithContext(ctx)
}

// InvokerScheduleSettingsPtrInput is an input type that accepts InvokerScheduleSettingsArgs, InvokerScheduleSettingsPtr and InvokerScheduleSettingsPtrOutput values.
// You can construct a concrete instance of `InvokerScheduleSettingsPtrInput` via:
//
//	        InvokerScheduleSettingsArgs{...}
//
//	or:
//
//	        nil
type InvokerScheduleSettingsPtrInput interface {
	pulumi.Input

	ToInvokerScheduleSettingsPtrOutput() InvokerScheduleSettingsPtrOutput
	ToInvokerScheduleSettingsPtrOutputWithContext(context.Context) InvokerScheduleSettingsPtrOutput
}

type invokerScheduleSettingsPtrType InvokerScheduleSettingsArgs

func InvokerScheduleSettingsPtr(v *InvokerScheduleSettingsArgs) InvokerScheduleSettingsPtrInput {
	return (*invokerScheduleSettingsPtrType)(v)
}

func (*invokerScheduleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvokerScheduleSettings)(nil)).Elem()
}

func (i *invokerScheduleSettingsPtrType) ToInvokerScheduleSettingsPtrOutput() InvokerScheduleSettingsPtrOutput {
	return i.ToInvokerScheduleSettingsPtrOutputWithContext(context.Background())
}

func (i *invokerScheduleSettingsPtrType) ToInvokerScheduleSettingsPtrOutputWithContext(ctx context.Context) InvokerScheduleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvokerScheduleSettingsPtrOutput)
}

type InvokerScheduleSettingsOutput struct{ *pulumi.OutputState }

func (InvokerScheduleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvokerScheduleSettings)(nil)).Elem()
}

func (o InvokerScheduleSettingsOutput) ToInvokerScheduleSettingsOutput() InvokerScheduleSettingsOutput {
	return o
}

func (o InvokerScheduleSettingsOutput) ToInvokerScheduleSettingsOutputWithContext(ctx context.Context) InvokerScheduleSettingsOutput {
	return o
}

func (o InvokerScheduleSettingsOutput) ToInvokerScheduleSettingsPtrOutput() InvokerScheduleSettingsPtrOutput {
	return o.ToInvokerScheduleSettingsPtrOutputWithContext(context.Background())
}

func (o InvokerScheduleSettingsOutput) ToInvokerScheduleSettingsPtrOutputWithContext(ctx context.Context) InvokerScheduleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvokerScheduleSettings) *InvokerScheduleSettings {
		return &v
	}).(InvokerScheduleSettingsPtrOutput)
}

// The next execution time of the invoker. This field is required if Policy is ONCE.
func (o InvokerScheduleSettingsOutput) InvokeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvokerScheduleSettings) *string { return v.InvokeTime }).(pulumi.StringPtrOutput)
}

// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
func (o InvokerScheduleSettingsOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v InvokerScheduleSettings) string { return v.Policy }).(pulumi.StringOutput)
}

// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
func (o InvokerScheduleSettingsOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvokerScheduleSettings) *string { return v.Recurrence }).(pulumi.StringPtrOutput)
}

type InvokerScheduleSettingsPtrOutput struct{ *pulumi.OutputState }

func (InvokerScheduleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvokerScheduleSettings)(nil)).Elem()
}

func (o InvokerScheduleSettingsPtrOutput) ToInvokerScheduleSettingsPtrOutput() InvokerScheduleSettingsPtrOutput {
	return o
}

func (o InvokerScheduleSettingsPtrOutput) ToInvokerScheduleSettingsPtrOutputWithContext(ctx context.Context) InvokerScheduleSettingsPtrOutput {
	return o
}

func (o InvokerScheduleSettingsPtrOutput) Elem() InvokerScheduleSettingsOutput {
	return o.ApplyT(func(v *InvokerScheduleSettings) InvokerScheduleSettings {
		if v != nil {
			return *v
		}
		var ret InvokerScheduleSettings
		return ret
	}).(InvokerScheduleSettingsOutput)
}

// The next execution time of the invoker. This field is required if Policy is ONCE.
func (o InvokerScheduleSettingsPtrOutput) InvokeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvokerScheduleSettings) *string {
		if v == nil {
			return nil
		}
		return v.InvokeTime
	}).(pulumi.StringPtrOutput)
}

// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
func (o InvokerScheduleSettingsPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvokerScheduleSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
func (o InvokerScheduleSettingsPtrOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvokerScheduleSettings) *string {
		if v == nil {
			return nil
		}
		return v.Recurrence
	}).(pulumi.StringPtrOutput)
}

type GetAgentAutomationAgentSet struct {
	// Agent status.Ranges:&lt;li&gt; Online:Online&lt;li&gt; Offline:Offline.
	AgentStatus string `pulumi:"agentStatus"`
	// Environment for Agent.Ranges:&lt;li&gt; Linux:Linux instance&lt;li&gt; Windows:Windows instance.
	Environment string `pulumi:"environment"`
	// InstanceId.
	InstanceId string `pulumi:"instanceId"`
	// Time of last heartbeat.
	LastHeartbeatTime string `pulumi:"lastHeartbeatTime"`
	// List of feature Agent support.
	SupportFeatures []string `pulumi:"supportFeatures"`
	// Agent version.
	Version string `pulumi:"version"`
}

// GetAgentAutomationAgentSetInput is an input type that accepts GetAgentAutomationAgentSetArgs and GetAgentAutomationAgentSetOutput values.
// You can construct a concrete instance of `GetAgentAutomationAgentSetInput` via:
//
//	GetAgentAutomationAgentSetArgs{...}
type GetAgentAutomationAgentSetInput interface {
	pulumi.Input

	ToGetAgentAutomationAgentSetOutput() GetAgentAutomationAgentSetOutput
	ToGetAgentAutomationAgentSetOutputWithContext(context.Context) GetAgentAutomationAgentSetOutput
}

type GetAgentAutomationAgentSetArgs struct {
	// Agent status.Ranges:&lt;li&gt; Online:Online&lt;li&gt; Offline:Offline.
	AgentStatus pulumi.StringInput `pulumi:"agentStatus"`
	// Environment for Agent.Ranges:&lt;li&gt; Linux:Linux instance&lt;li&gt; Windows:Windows instance.
	Environment pulumi.StringInput `pulumi:"environment"`
	// InstanceId.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Time of last heartbeat.
	LastHeartbeatTime pulumi.StringInput `pulumi:"lastHeartbeatTime"`
	// List of feature Agent support.
	SupportFeatures pulumi.StringArrayInput `pulumi:"supportFeatures"`
	// Agent version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetAgentAutomationAgentSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAgentAutomationAgentSet)(nil)).Elem()
}

func (i GetAgentAutomationAgentSetArgs) ToGetAgentAutomationAgentSetOutput() GetAgentAutomationAgentSetOutput {
	return i.ToGetAgentAutomationAgentSetOutputWithContext(context.Background())
}

func (i GetAgentAutomationAgentSetArgs) ToGetAgentAutomationAgentSetOutputWithContext(ctx context.Context) GetAgentAutomationAgentSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAgentAutomationAgentSetOutput)
}

// GetAgentAutomationAgentSetArrayInput is an input type that accepts GetAgentAutomationAgentSetArray and GetAgentAutomationAgentSetArrayOutput values.
// You can construct a concrete instance of `GetAgentAutomationAgentSetArrayInput` via:
//
//	GetAgentAutomationAgentSetArray{ GetAgentAutomationAgentSetArgs{...} }
type GetAgentAutomationAgentSetArrayInput interface {
	pulumi.Input

	ToGetAgentAutomationAgentSetArrayOutput() GetAgentAutomationAgentSetArrayOutput
	ToGetAgentAutomationAgentSetArrayOutputWithContext(context.Context) GetAgentAutomationAgentSetArrayOutput
}

type GetAgentAutomationAgentSetArray []GetAgentAutomationAgentSetInput

func (GetAgentAutomationAgentSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAgentAutomationAgentSet)(nil)).Elem()
}

func (i GetAgentAutomationAgentSetArray) ToGetAgentAutomationAgentSetArrayOutput() GetAgentAutomationAgentSetArrayOutput {
	return i.ToGetAgentAutomationAgentSetArrayOutputWithContext(context.Background())
}

func (i GetAgentAutomationAgentSetArray) ToGetAgentAutomationAgentSetArrayOutputWithContext(ctx context.Context) GetAgentAutomationAgentSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAgentAutomationAgentSetArrayOutput)
}

type GetAgentAutomationAgentSetOutput struct{ *pulumi.OutputState }

func (GetAgentAutomationAgentSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAgentAutomationAgentSet)(nil)).Elem()
}

func (o GetAgentAutomationAgentSetOutput) ToGetAgentAutomationAgentSetOutput() GetAgentAutomationAgentSetOutput {
	return o
}

func (o GetAgentAutomationAgentSetOutput) ToGetAgentAutomationAgentSetOutputWithContext(ctx context.Context) GetAgentAutomationAgentSetOutput {
	return o
}

// Agent status.Ranges:&lt;li&gt; Online:Online&lt;li&gt; Offline:Offline.
func (o GetAgentAutomationAgentSetOutput) AgentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentAutomationAgentSet) string { return v.AgentStatus }).(pulumi.StringOutput)
}

// Environment for Agent.Ranges:&lt;li&gt; Linux:Linux instance&lt;li&gt; Windows:Windows instance.
func (o GetAgentAutomationAgentSetOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentAutomationAgentSet) string { return v.Environment }).(pulumi.StringOutput)
}

// InstanceId.
func (o GetAgentAutomationAgentSetOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentAutomationAgentSet) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Time of last heartbeat.
func (o GetAgentAutomationAgentSetOutput) LastHeartbeatTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentAutomationAgentSet) string { return v.LastHeartbeatTime }).(pulumi.StringOutput)
}

// List of feature Agent support.
func (o GetAgentAutomationAgentSetOutput) SupportFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAgentAutomationAgentSet) []string { return v.SupportFeatures }).(pulumi.StringArrayOutput)
}

// Agent version.
func (o GetAgentAutomationAgentSetOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentAutomationAgentSet) string { return v.Version }).(pulumi.StringOutput)
}

type GetAgentAutomationAgentSetArrayOutput struct{ *pulumi.OutputState }

func (GetAgentAutomationAgentSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAgentAutomationAgentSet)(nil)).Elem()
}

func (o GetAgentAutomationAgentSetArrayOutput) ToGetAgentAutomationAgentSetArrayOutput() GetAgentAutomationAgentSetArrayOutput {
	return o
}

func (o GetAgentAutomationAgentSetArrayOutput) ToGetAgentAutomationAgentSetArrayOutputWithContext(ctx context.Context) GetAgentAutomationAgentSetArrayOutput {
	return o
}

func (o GetAgentAutomationAgentSetArrayOutput) Index(i pulumi.IntInput) GetAgentAutomationAgentSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAgentAutomationAgentSet {
		return vs[0].([]GetAgentAutomationAgentSet)[vs[1].(int)]
	}).(GetAgentAutomationAgentSetOutput)
}

type GetAgentFilter struct {
	// Field to be filtered.
	Name string `pulumi:"name"`
	// Filter values of the field.
	Values []string `pulumi:"values"`
}

// GetAgentFilterInput is an input type that accepts GetAgentFilterArgs and GetAgentFilterOutput values.
// You can construct a concrete instance of `GetAgentFilterInput` via:
//
//	GetAgentFilterArgs{...}
type GetAgentFilterInput interface {
	pulumi.Input

	ToGetAgentFilterOutput() GetAgentFilterOutput
	ToGetAgentFilterOutputWithContext(context.Context) GetAgentFilterOutput
}

type GetAgentFilterArgs struct {
	// Field to be filtered.
	Name pulumi.StringInput `pulumi:"name"`
	// Filter values of the field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAgentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAgentFilter)(nil)).Elem()
}

func (i GetAgentFilterArgs) ToGetAgentFilterOutput() GetAgentFilterOutput {
	return i.ToGetAgentFilterOutputWithContext(context.Background())
}

func (i GetAgentFilterArgs) ToGetAgentFilterOutputWithContext(ctx context.Context) GetAgentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAgentFilterOutput)
}

// GetAgentFilterArrayInput is an input type that accepts GetAgentFilterArray and GetAgentFilterArrayOutput values.
// You can construct a concrete instance of `GetAgentFilterArrayInput` via:
//
//	GetAgentFilterArray{ GetAgentFilterArgs{...} }
type GetAgentFilterArrayInput interface {
	pulumi.Input

	ToGetAgentFilterArrayOutput() GetAgentFilterArrayOutput
	ToGetAgentFilterArrayOutputWithContext(context.Context) GetAgentFilterArrayOutput
}

type GetAgentFilterArray []GetAgentFilterInput

func (GetAgentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAgentFilter)(nil)).Elem()
}

func (i GetAgentFilterArray) ToGetAgentFilterArrayOutput() GetAgentFilterArrayOutput {
	return i.ToGetAgentFilterArrayOutputWithContext(context.Background())
}

func (i GetAgentFilterArray) ToGetAgentFilterArrayOutputWithContext(ctx context.Context) GetAgentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAgentFilterArrayOutput)
}

type GetAgentFilterOutput struct{ *pulumi.OutputState }

func (GetAgentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAgentFilter)(nil)).Elem()
}

func (o GetAgentFilterOutput) ToGetAgentFilterOutput() GetAgentFilterOutput {
	return o
}

func (o GetAgentFilterOutput) ToGetAgentFilterOutputWithContext(ctx context.Context) GetAgentFilterOutput {
	return o
}

// Field to be filtered.
func (o GetAgentFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Filter values of the field.
func (o GetAgentFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAgentFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAgentFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAgentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAgentFilter)(nil)).Elem()
}

func (o GetAgentFilterArrayOutput) ToGetAgentFilterArrayOutput() GetAgentFilterArrayOutput {
	return o
}

func (o GetAgentFilterArrayOutput) ToGetAgentFilterArrayOutputWithContext(ctx context.Context) GetAgentFilterArrayOutput {
	return o
}

func (o GetAgentFilterArrayOutput) Index(i pulumi.IntInput) GetAgentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAgentFilter {
		return vs[0].([]GetAgentFilter)[vs[1].(int)]
	}).(GetAgentFilterOutput)
}

type GetCommandCommandSet struct {
	// Command ID.
	CommandId string `pulumi:"commandId"`
	// Command name.
	CommandName string `pulumi:"commandName"`
	// Command type, Value is `SHELL` or `POWERSHELL`.
	CommandType string `pulumi:"commandType"`
	// command.
	Content string `pulumi:"content"`
	// Command creator. `TAT` indicates a public command and `USER` indicates a personal command.
	CreatedBy string `pulumi:"createdBy"`
	// Command creation time.
	CreatedTime string `pulumi:"createdTime"`
	// Default custom parameter value.
	DefaultParameters string `pulumi:"defaultParameters"`
	// Command description.
	Description string `pulumi:"description"`
	// Whether to enable the custom parameter feature.
	EnableParameter bool `pulumi:"enableParameter"`
	// Formatted description of the command. This parameter is an empty string for user commands and contains values for public commands.
	FormattedDescription string `pulumi:"formattedDescription"`
	// The COS bucket URL for uploading logs.
	OutputCosBucketUrl string `pulumi:"outputCosBucketUrl"`
	// The COS bucket directory where the logs are saved.
	OutputCosKeyPrefix string `pulumi:"outputCosKeyPrefix"`
	// Tags bound to the command. At most 10 tags are allowed.
	Tags []GetCommandCommandSetTag `pulumi:"tags"`
	// Command timeout period.
	Timeout int `pulumi:"timeout"`
	// Command update time.
	UpdatedTime string `pulumi:"updatedTime"`
	// The user who executes the command on the instance.
	Username string `pulumi:"username"`
	// Command execution path.
	WorkingDirectory string `pulumi:"workingDirectory"`
}

// GetCommandCommandSetInput is an input type that accepts GetCommandCommandSetArgs and GetCommandCommandSetOutput values.
// You can construct a concrete instance of `GetCommandCommandSetInput` via:
//
//	GetCommandCommandSetArgs{...}
type GetCommandCommandSetInput interface {
	pulumi.Input

	ToGetCommandCommandSetOutput() GetCommandCommandSetOutput
	ToGetCommandCommandSetOutputWithContext(context.Context) GetCommandCommandSetOutput
}

type GetCommandCommandSetArgs struct {
	// Command ID.
	CommandId pulumi.StringInput `pulumi:"commandId"`
	// Command name.
	CommandName pulumi.StringInput `pulumi:"commandName"`
	// Command type, Value is `SHELL` or `POWERSHELL`.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// command.
	Content pulumi.StringInput `pulumi:"content"`
	// Command creator. `TAT` indicates a public command and `USER` indicates a personal command.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// Command creation time.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Default custom parameter value.
	DefaultParameters pulumi.StringInput `pulumi:"defaultParameters"`
	// Command description.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to enable the custom parameter feature.
	EnableParameter pulumi.BoolInput `pulumi:"enableParameter"`
	// Formatted description of the command. This parameter is an empty string for user commands and contains values for public commands.
	FormattedDescription pulumi.StringInput `pulumi:"formattedDescription"`
	// The COS bucket URL for uploading logs.
	OutputCosBucketUrl pulumi.StringInput `pulumi:"outputCosBucketUrl"`
	// The COS bucket directory where the logs are saved.
	OutputCosKeyPrefix pulumi.StringInput `pulumi:"outputCosKeyPrefix"`
	// Tags bound to the command. At most 10 tags are allowed.
	Tags GetCommandCommandSetTagArrayInput `pulumi:"tags"`
	// Command timeout period.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// Command update time.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
	// The user who executes the command on the instance.
	Username pulumi.StringInput `pulumi:"username"`
	// Command execution path.
	WorkingDirectory pulumi.StringInput `pulumi:"workingDirectory"`
}

func (GetCommandCommandSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandCommandSet)(nil)).Elem()
}

func (i GetCommandCommandSetArgs) ToGetCommandCommandSetOutput() GetCommandCommandSetOutput {
	return i.ToGetCommandCommandSetOutputWithContext(context.Background())
}

func (i GetCommandCommandSetArgs) ToGetCommandCommandSetOutputWithContext(ctx context.Context) GetCommandCommandSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandCommandSetOutput)
}

// GetCommandCommandSetArrayInput is an input type that accepts GetCommandCommandSetArray and GetCommandCommandSetArrayOutput values.
// You can construct a concrete instance of `GetCommandCommandSetArrayInput` via:
//
//	GetCommandCommandSetArray{ GetCommandCommandSetArgs{...} }
type GetCommandCommandSetArrayInput interface {
	pulumi.Input

	ToGetCommandCommandSetArrayOutput() GetCommandCommandSetArrayOutput
	ToGetCommandCommandSetArrayOutputWithContext(context.Context) GetCommandCommandSetArrayOutput
}

type GetCommandCommandSetArray []GetCommandCommandSetInput

func (GetCommandCommandSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandCommandSet)(nil)).Elem()
}

func (i GetCommandCommandSetArray) ToGetCommandCommandSetArrayOutput() GetCommandCommandSetArrayOutput {
	return i.ToGetCommandCommandSetArrayOutputWithContext(context.Background())
}

func (i GetCommandCommandSetArray) ToGetCommandCommandSetArrayOutputWithContext(ctx context.Context) GetCommandCommandSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandCommandSetArrayOutput)
}

type GetCommandCommandSetOutput struct{ *pulumi.OutputState }

func (GetCommandCommandSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandCommandSet)(nil)).Elem()
}

func (o GetCommandCommandSetOutput) ToGetCommandCommandSetOutput() GetCommandCommandSetOutput {
	return o
}

func (o GetCommandCommandSetOutput) ToGetCommandCommandSetOutputWithContext(ctx context.Context) GetCommandCommandSetOutput {
	return o
}

// Command ID.
func (o GetCommandCommandSetOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.CommandId }).(pulumi.StringOutput)
}

// Command name.
func (o GetCommandCommandSetOutput) CommandName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.CommandName }).(pulumi.StringOutput)
}

// Command type, Value is `SHELL` or `POWERSHELL`.
func (o GetCommandCommandSetOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.CommandType }).(pulumi.StringOutput)
}

// command.
func (o GetCommandCommandSetOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.Content }).(pulumi.StringOutput)
}

// Command creator. `TAT` indicates a public command and `USER` indicates a personal command.
func (o GetCommandCommandSetOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Command creation time.
func (o GetCommandCommandSetOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Default custom parameter value.
func (o GetCommandCommandSetOutput) DefaultParameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.DefaultParameters }).(pulumi.StringOutput)
}

// Command description.
func (o GetCommandCommandSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to enable the custom parameter feature.
func (o GetCommandCommandSetOutput) EnableParameter() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCommandCommandSet) bool { return v.EnableParameter }).(pulumi.BoolOutput)
}

// Formatted description of the command. This parameter is an empty string for user commands and contains values for public commands.
func (o GetCommandCommandSetOutput) FormattedDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.FormattedDescription }).(pulumi.StringOutput)
}

// The COS bucket URL for uploading logs.
func (o GetCommandCommandSetOutput) OutputCosBucketUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.OutputCosBucketUrl }).(pulumi.StringOutput)
}

// The COS bucket directory where the logs are saved.
func (o GetCommandCommandSetOutput) OutputCosKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.OutputCosKeyPrefix }).(pulumi.StringOutput)
}

// Tags bound to the command. At most 10 tags are allowed.
func (o GetCommandCommandSetOutput) Tags() GetCommandCommandSetTagArrayOutput {
	return o.ApplyT(func(v GetCommandCommandSet) []GetCommandCommandSetTag { return v.Tags }).(GetCommandCommandSetTagArrayOutput)
}

// Command timeout period.
func (o GetCommandCommandSetOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommandCommandSet) int { return v.Timeout }).(pulumi.IntOutput)
}

// Command update time.
func (o GetCommandCommandSetOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// The user who executes the command on the instance.
func (o GetCommandCommandSetOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.Username }).(pulumi.StringOutput)
}

// Command execution path.
func (o GetCommandCommandSetOutput) WorkingDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSet) string { return v.WorkingDirectory }).(pulumi.StringOutput)
}

type GetCommandCommandSetArrayOutput struct{ *pulumi.OutputState }

func (GetCommandCommandSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandCommandSet)(nil)).Elem()
}

func (o GetCommandCommandSetArrayOutput) ToGetCommandCommandSetArrayOutput() GetCommandCommandSetArrayOutput {
	return o
}

func (o GetCommandCommandSetArrayOutput) ToGetCommandCommandSetArrayOutputWithContext(ctx context.Context) GetCommandCommandSetArrayOutput {
	return o
}

func (o GetCommandCommandSetArrayOutput) Index(i pulumi.IntInput) GetCommandCommandSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommandCommandSet {
		return vs[0].([]GetCommandCommandSet)[vs[1].(int)]
	}).(GetCommandCommandSetOutput)
}

type GetCommandCommandSetTag struct {
	// Tag key.
	Key string `pulumi:"key"`
	// Tag value.
	Value string `pulumi:"value"`
}

// GetCommandCommandSetTagInput is an input type that accepts GetCommandCommandSetTagArgs and GetCommandCommandSetTagOutput values.
// You can construct a concrete instance of `GetCommandCommandSetTagInput` via:
//
//	GetCommandCommandSetTagArgs{...}
type GetCommandCommandSetTagInput interface {
	pulumi.Input

	ToGetCommandCommandSetTagOutput() GetCommandCommandSetTagOutput
	ToGetCommandCommandSetTagOutputWithContext(context.Context) GetCommandCommandSetTagOutput
}

type GetCommandCommandSetTagArgs struct {
	// Tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCommandCommandSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandCommandSetTag)(nil)).Elem()
}

func (i GetCommandCommandSetTagArgs) ToGetCommandCommandSetTagOutput() GetCommandCommandSetTagOutput {
	return i.ToGetCommandCommandSetTagOutputWithContext(context.Background())
}

func (i GetCommandCommandSetTagArgs) ToGetCommandCommandSetTagOutputWithContext(ctx context.Context) GetCommandCommandSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandCommandSetTagOutput)
}

// GetCommandCommandSetTagArrayInput is an input type that accepts GetCommandCommandSetTagArray and GetCommandCommandSetTagArrayOutput values.
// You can construct a concrete instance of `GetCommandCommandSetTagArrayInput` via:
//
//	GetCommandCommandSetTagArray{ GetCommandCommandSetTagArgs{...} }
type GetCommandCommandSetTagArrayInput interface {
	pulumi.Input

	ToGetCommandCommandSetTagArrayOutput() GetCommandCommandSetTagArrayOutput
	ToGetCommandCommandSetTagArrayOutputWithContext(context.Context) GetCommandCommandSetTagArrayOutput
}

type GetCommandCommandSetTagArray []GetCommandCommandSetTagInput

func (GetCommandCommandSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandCommandSetTag)(nil)).Elem()
}

func (i GetCommandCommandSetTagArray) ToGetCommandCommandSetTagArrayOutput() GetCommandCommandSetTagArrayOutput {
	return i.ToGetCommandCommandSetTagArrayOutputWithContext(context.Background())
}

func (i GetCommandCommandSetTagArray) ToGetCommandCommandSetTagArrayOutputWithContext(ctx context.Context) GetCommandCommandSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandCommandSetTagArrayOutput)
}

type GetCommandCommandSetTagOutput struct{ *pulumi.OutputState }

func (GetCommandCommandSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandCommandSetTag)(nil)).Elem()
}

func (o GetCommandCommandSetTagOutput) ToGetCommandCommandSetTagOutput() GetCommandCommandSetTagOutput {
	return o
}

func (o GetCommandCommandSetTagOutput) ToGetCommandCommandSetTagOutputWithContext(ctx context.Context) GetCommandCommandSetTagOutput {
	return o
}

// Tag key.
func (o GetCommandCommandSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSetTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag value.
func (o GetCommandCommandSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandCommandSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetCommandCommandSetTagArrayOutput struct{ *pulumi.OutputState }

func (GetCommandCommandSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandCommandSetTag)(nil)).Elem()
}

func (o GetCommandCommandSetTagArrayOutput) ToGetCommandCommandSetTagArrayOutput() GetCommandCommandSetTagArrayOutput {
	return o
}

func (o GetCommandCommandSetTagArrayOutput) ToGetCommandCommandSetTagArrayOutputWithContext(ctx context.Context) GetCommandCommandSetTagArrayOutput {
	return o
}

func (o GetCommandCommandSetTagArrayOutput) Index(i pulumi.IntInput) GetCommandCommandSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommandCommandSetTag {
		return vs[0].([]GetCommandCommandSetTag)[vs[1].(int)]
	}).(GetCommandCommandSetTagOutput)
}

type GetInvocationTaskFilter struct {
	// Field to be filtered.
	Name string `pulumi:"name"`
	// Filter values of the field.
	Values []string `pulumi:"values"`
}

// GetInvocationTaskFilterInput is an input type that accepts GetInvocationTaskFilterArgs and GetInvocationTaskFilterOutput values.
// You can construct a concrete instance of `GetInvocationTaskFilterInput` via:
//
//	GetInvocationTaskFilterArgs{...}
type GetInvocationTaskFilterInput interface {
	pulumi.Input

	ToGetInvocationTaskFilterOutput() GetInvocationTaskFilterOutput
	ToGetInvocationTaskFilterOutputWithContext(context.Context) GetInvocationTaskFilterOutput
}

type GetInvocationTaskFilterArgs struct {
	// Field to be filtered.
	Name pulumi.StringInput `pulumi:"name"`
	// Filter values of the field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInvocationTaskFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskFilter)(nil)).Elem()
}

func (i GetInvocationTaskFilterArgs) ToGetInvocationTaskFilterOutput() GetInvocationTaskFilterOutput {
	return i.ToGetInvocationTaskFilterOutputWithContext(context.Background())
}

func (i GetInvocationTaskFilterArgs) ToGetInvocationTaskFilterOutputWithContext(ctx context.Context) GetInvocationTaskFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskFilterOutput)
}

// GetInvocationTaskFilterArrayInput is an input type that accepts GetInvocationTaskFilterArray and GetInvocationTaskFilterArrayOutput values.
// You can construct a concrete instance of `GetInvocationTaskFilterArrayInput` via:
//
//	GetInvocationTaskFilterArray{ GetInvocationTaskFilterArgs{...} }
type GetInvocationTaskFilterArrayInput interface {
	pulumi.Input

	ToGetInvocationTaskFilterArrayOutput() GetInvocationTaskFilterArrayOutput
	ToGetInvocationTaskFilterArrayOutputWithContext(context.Context) GetInvocationTaskFilterArrayOutput
}

type GetInvocationTaskFilterArray []GetInvocationTaskFilterInput

func (GetInvocationTaskFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskFilter)(nil)).Elem()
}

func (i GetInvocationTaskFilterArray) ToGetInvocationTaskFilterArrayOutput() GetInvocationTaskFilterArrayOutput {
	return i.ToGetInvocationTaskFilterArrayOutputWithContext(context.Background())
}

func (i GetInvocationTaskFilterArray) ToGetInvocationTaskFilterArrayOutputWithContext(ctx context.Context) GetInvocationTaskFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskFilterArrayOutput)
}

type GetInvocationTaskFilterOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskFilter)(nil)).Elem()
}

func (o GetInvocationTaskFilterOutput) ToGetInvocationTaskFilterOutput() GetInvocationTaskFilterOutput {
	return o
}

func (o GetInvocationTaskFilterOutput) ToGetInvocationTaskFilterOutputWithContext(ctx context.Context) GetInvocationTaskFilterOutput {
	return o
}

// Field to be filtered.
func (o GetInvocationTaskFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Filter values of the field.
func (o GetInvocationTaskFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInvocationTaskFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInvocationTaskFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskFilter)(nil)).Elem()
}

func (o GetInvocationTaskFilterArrayOutput) ToGetInvocationTaskFilterArrayOutput() GetInvocationTaskFilterArrayOutput {
	return o
}

func (o GetInvocationTaskFilterArrayOutput) ToGetInvocationTaskFilterArrayOutputWithContext(ctx context.Context) GetInvocationTaskFilterArrayOutput {
	return o
}

func (o GetInvocationTaskFilterArrayOutput) Index(i pulumi.IntInput) GetInvocationTaskFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvocationTaskFilter {
		return vs[0].([]GetInvocationTaskFilter)[vs[1].(int)]
	}).(GetInvocationTaskFilterOutput)
}

type GetInvocationTaskInvocationTaskSet struct {
	// Command details of the execution task.
	CommandDocuments []GetInvocationTaskInvocationTaskSetCommandDocument `pulumi:"commandDocuments"`
	// Command ID.
	CommandId string `pulumi:"commandId"`
	// Creation time.
	CreatedTime string `pulumi:"createdTime"`
	// End time of the execution task.
	EndTime string `pulumi:"endTime"`
	// Error message displayed when the execution task fails.
	ErrorInfo string `pulumi:"errorInfo"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Execution activity ID.
	InvocationId string `pulumi:"invocationId"`
	// Invocation source.
	InvocationSource string `pulumi:"invocationSource"`
	// Execution task ID.
	InvocationTaskId string `pulumi:"invocationTaskId"`
	// Start time of the execution task.
	StartTime string `pulumi:"startTime"`
	// Execution result.
	TaskResults []GetInvocationTaskInvocationTaskSetTaskResult `pulumi:"taskResults"`
	// Execution task status. Valid values:PENDING: PendingDELIVERING: DeliveringDELIVER_DELAYED: Delivery delayedDELIVER_FAILED: Delivery failedSTART_FAILED: Failed to start the commandRUNNING: RunningSUCCESS: SuccessFAILED: Failed to execute the command. The exit code is not 0 after execution.TIMEOUT: Command timed outTASK_TIMEOUT: Task timed outCANCELLING: CancelingCANCELLED: Canceled (canceled before execution)TERMINATED: Terminated (canceled during execution).
	TaskStatus string `pulumi:"taskStatus"`
	// Update time.
	UpdatedTime string `pulumi:"updatedTime"`
}

// GetInvocationTaskInvocationTaskSetInput is an input type that accepts GetInvocationTaskInvocationTaskSetArgs and GetInvocationTaskInvocationTaskSetOutput values.
// You can construct a concrete instance of `GetInvocationTaskInvocationTaskSetInput` via:
//
//	GetInvocationTaskInvocationTaskSetArgs{...}
type GetInvocationTaskInvocationTaskSetInput interface {
	pulumi.Input

	ToGetInvocationTaskInvocationTaskSetOutput() GetInvocationTaskInvocationTaskSetOutput
	ToGetInvocationTaskInvocationTaskSetOutputWithContext(context.Context) GetInvocationTaskInvocationTaskSetOutput
}

type GetInvocationTaskInvocationTaskSetArgs struct {
	// Command details of the execution task.
	CommandDocuments GetInvocationTaskInvocationTaskSetCommandDocumentArrayInput `pulumi:"commandDocuments"`
	// Command ID.
	CommandId pulumi.StringInput `pulumi:"commandId"`
	// Creation time.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// End time of the execution task.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Error message displayed when the execution task fails.
	ErrorInfo pulumi.StringInput `pulumi:"errorInfo"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Execution activity ID.
	InvocationId pulumi.StringInput `pulumi:"invocationId"`
	// Invocation source.
	InvocationSource pulumi.StringInput `pulumi:"invocationSource"`
	// Execution task ID.
	InvocationTaskId pulumi.StringInput `pulumi:"invocationTaskId"`
	// Start time of the execution task.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Execution result.
	TaskResults GetInvocationTaskInvocationTaskSetTaskResultArrayInput `pulumi:"taskResults"`
	// Execution task status. Valid values:PENDING: PendingDELIVERING: DeliveringDELIVER_DELAYED: Delivery delayedDELIVER_FAILED: Delivery failedSTART_FAILED: Failed to start the commandRUNNING: RunningSUCCESS: SuccessFAILED: Failed to execute the command. The exit code is not 0 after execution.TIMEOUT: Command timed outTASK_TIMEOUT: Task timed outCANCELLING: CancelingCANCELLED: Canceled (canceled before execution)TERMINATED: Terminated (canceled during execution).
	TaskStatus pulumi.StringInput `pulumi:"taskStatus"`
	// Update time.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (GetInvocationTaskInvocationTaskSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskInvocationTaskSet)(nil)).Elem()
}

func (i GetInvocationTaskInvocationTaskSetArgs) ToGetInvocationTaskInvocationTaskSetOutput() GetInvocationTaskInvocationTaskSetOutput {
	return i.ToGetInvocationTaskInvocationTaskSetOutputWithContext(context.Background())
}

func (i GetInvocationTaskInvocationTaskSetArgs) ToGetInvocationTaskInvocationTaskSetOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskInvocationTaskSetOutput)
}

// GetInvocationTaskInvocationTaskSetArrayInput is an input type that accepts GetInvocationTaskInvocationTaskSetArray and GetInvocationTaskInvocationTaskSetArrayOutput values.
// You can construct a concrete instance of `GetInvocationTaskInvocationTaskSetArrayInput` via:
//
//	GetInvocationTaskInvocationTaskSetArray{ GetInvocationTaskInvocationTaskSetArgs{...} }
type GetInvocationTaskInvocationTaskSetArrayInput interface {
	pulumi.Input

	ToGetInvocationTaskInvocationTaskSetArrayOutput() GetInvocationTaskInvocationTaskSetArrayOutput
	ToGetInvocationTaskInvocationTaskSetArrayOutputWithContext(context.Context) GetInvocationTaskInvocationTaskSetArrayOutput
}

type GetInvocationTaskInvocationTaskSetArray []GetInvocationTaskInvocationTaskSetInput

func (GetInvocationTaskInvocationTaskSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskInvocationTaskSet)(nil)).Elem()
}

func (i GetInvocationTaskInvocationTaskSetArray) ToGetInvocationTaskInvocationTaskSetArrayOutput() GetInvocationTaskInvocationTaskSetArrayOutput {
	return i.ToGetInvocationTaskInvocationTaskSetArrayOutputWithContext(context.Background())
}

func (i GetInvocationTaskInvocationTaskSetArray) ToGetInvocationTaskInvocationTaskSetArrayOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskInvocationTaskSetArrayOutput)
}

type GetInvocationTaskInvocationTaskSetOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskInvocationTaskSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskInvocationTaskSet)(nil)).Elem()
}

func (o GetInvocationTaskInvocationTaskSetOutput) ToGetInvocationTaskInvocationTaskSetOutput() GetInvocationTaskInvocationTaskSetOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetOutput) ToGetInvocationTaskInvocationTaskSetOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetOutput {
	return o
}

// Command details of the execution task.
func (o GetInvocationTaskInvocationTaskSetOutput) CommandDocuments() GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) []GetInvocationTaskInvocationTaskSetCommandDocument {
		return v.CommandDocuments
	}).(GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput)
}

// Command ID.
func (o GetInvocationTaskInvocationTaskSetOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.CommandId }).(pulumi.StringOutput)
}

// Creation time.
func (o GetInvocationTaskInvocationTaskSetOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// End time of the execution task.
func (o GetInvocationTaskInvocationTaskSetOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.EndTime }).(pulumi.StringOutput)
}

// Error message displayed when the execution task fails.
func (o GetInvocationTaskInvocationTaskSetOutput) ErrorInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.ErrorInfo }).(pulumi.StringOutput)
}

// Instance ID.
func (o GetInvocationTaskInvocationTaskSetOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Execution activity ID.
func (o GetInvocationTaskInvocationTaskSetOutput) InvocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.InvocationId }).(pulumi.StringOutput)
}

// Invocation source.
func (o GetInvocationTaskInvocationTaskSetOutput) InvocationSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.InvocationSource }).(pulumi.StringOutput)
}

// Execution task ID.
func (o GetInvocationTaskInvocationTaskSetOutput) InvocationTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.InvocationTaskId }).(pulumi.StringOutput)
}

// Start time of the execution task.
func (o GetInvocationTaskInvocationTaskSetOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.StartTime }).(pulumi.StringOutput)
}

// Execution result.
func (o GetInvocationTaskInvocationTaskSetOutput) TaskResults() GetInvocationTaskInvocationTaskSetTaskResultArrayOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) []GetInvocationTaskInvocationTaskSetTaskResult {
		return v.TaskResults
	}).(GetInvocationTaskInvocationTaskSetTaskResultArrayOutput)
}

// Execution task status. Valid values:PENDING: PendingDELIVERING: DeliveringDELIVER_DELAYED: Delivery delayedDELIVER_FAILED: Delivery failedSTART_FAILED: Failed to start the commandRUNNING: RunningSUCCESS: SuccessFAILED: Failed to execute the command. The exit code is not 0 after execution.TIMEOUT: Command timed outTASK_TIMEOUT: Task timed outCANCELLING: CancelingCANCELLED: Canceled (canceled before execution)TERMINATED: Terminated (canceled during execution).
func (o GetInvocationTaskInvocationTaskSetOutput) TaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.TaskStatus }).(pulumi.StringOutput)
}

// Update time.
func (o GetInvocationTaskInvocationTaskSetOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSet) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type GetInvocationTaskInvocationTaskSetArrayOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskInvocationTaskSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskInvocationTaskSet)(nil)).Elem()
}

func (o GetInvocationTaskInvocationTaskSetArrayOutput) ToGetInvocationTaskInvocationTaskSetArrayOutput() GetInvocationTaskInvocationTaskSetArrayOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetArrayOutput) ToGetInvocationTaskInvocationTaskSetArrayOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetArrayOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetArrayOutput) Index(i pulumi.IntInput) GetInvocationTaskInvocationTaskSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvocationTaskInvocationTaskSet {
		return vs[0].([]GetInvocationTaskInvocationTaskSet)[vs[1].(int)]
	}).(GetInvocationTaskInvocationTaskSetOutput)
}

type GetInvocationTaskInvocationTaskSetCommandDocument struct {
	// Command type.
	CommandType string `pulumi:"commandType"`
	// Base64-encoded command.
	Content string `pulumi:"content"`
	// URL of the COS bucket to store the output.
	OutputCosBucketUrl string `pulumi:"outputCosBucketUrl"`
	// Prefix of the output file name.
	OutputCosKeyPrefix string `pulumi:"outputCosKeyPrefix"`
	// Timeout period.
	Timeout int `pulumi:"timeout"`
	// The user who executes the command.
	Username string `pulumi:"username"`
	// Execution path.
	WorkingDirectory string `pulumi:"workingDirectory"`
}

// GetInvocationTaskInvocationTaskSetCommandDocumentInput is an input type that accepts GetInvocationTaskInvocationTaskSetCommandDocumentArgs and GetInvocationTaskInvocationTaskSetCommandDocumentOutput values.
// You can construct a concrete instance of `GetInvocationTaskInvocationTaskSetCommandDocumentInput` via:
//
//	GetInvocationTaskInvocationTaskSetCommandDocumentArgs{...}
type GetInvocationTaskInvocationTaskSetCommandDocumentInput interface {
	pulumi.Input

	ToGetInvocationTaskInvocationTaskSetCommandDocumentOutput() GetInvocationTaskInvocationTaskSetCommandDocumentOutput
	ToGetInvocationTaskInvocationTaskSetCommandDocumentOutputWithContext(context.Context) GetInvocationTaskInvocationTaskSetCommandDocumentOutput
}

type GetInvocationTaskInvocationTaskSetCommandDocumentArgs struct {
	// Command type.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// Base64-encoded command.
	Content pulumi.StringInput `pulumi:"content"`
	// URL of the COS bucket to store the output.
	OutputCosBucketUrl pulumi.StringInput `pulumi:"outputCosBucketUrl"`
	// Prefix of the output file name.
	OutputCosKeyPrefix pulumi.StringInput `pulumi:"outputCosKeyPrefix"`
	// Timeout period.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The user who executes the command.
	Username pulumi.StringInput `pulumi:"username"`
	// Execution path.
	WorkingDirectory pulumi.StringInput `pulumi:"workingDirectory"`
}

func (GetInvocationTaskInvocationTaskSetCommandDocumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskInvocationTaskSetCommandDocument)(nil)).Elem()
}

func (i GetInvocationTaskInvocationTaskSetCommandDocumentArgs) ToGetInvocationTaskInvocationTaskSetCommandDocumentOutput() GetInvocationTaskInvocationTaskSetCommandDocumentOutput {
	return i.ToGetInvocationTaskInvocationTaskSetCommandDocumentOutputWithContext(context.Background())
}

func (i GetInvocationTaskInvocationTaskSetCommandDocumentArgs) ToGetInvocationTaskInvocationTaskSetCommandDocumentOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetCommandDocumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskInvocationTaskSetCommandDocumentOutput)
}

// GetInvocationTaskInvocationTaskSetCommandDocumentArrayInput is an input type that accepts GetInvocationTaskInvocationTaskSetCommandDocumentArray and GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput values.
// You can construct a concrete instance of `GetInvocationTaskInvocationTaskSetCommandDocumentArrayInput` via:
//
//	GetInvocationTaskInvocationTaskSetCommandDocumentArray{ GetInvocationTaskInvocationTaskSetCommandDocumentArgs{...} }
type GetInvocationTaskInvocationTaskSetCommandDocumentArrayInput interface {
	pulumi.Input

	ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput() GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput
	ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutputWithContext(context.Context) GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput
}

type GetInvocationTaskInvocationTaskSetCommandDocumentArray []GetInvocationTaskInvocationTaskSetCommandDocumentInput

func (GetInvocationTaskInvocationTaskSetCommandDocumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskInvocationTaskSetCommandDocument)(nil)).Elem()
}

func (i GetInvocationTaskInvocationTaskSetCommandDocumentArray) ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput() GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput {
	return i.ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutputWithContext(context.Background())
}

func (i GetInvocationTaskInvocationTaskSetCommandDocumentArray) ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput)
}

type GetInvocationTaskInvocationTaskSetCommandDocumentOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskInvocationTaskSetCommandDocumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskInvocationTaskSetCommandDocument)(nil)).Elem()
}

func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) ToGetInvocationTaskInvocationTaskSetCommandDocumentOutput() GetInvocationTaskInvocationTaskSetCommandDocumentOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) ToGetInvocationTaskInvocationTaskSetCommandDocumentOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetCommandDocumentOutput {
	return o
}

// Command type.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) string { return v.CommandType }).(pulumi.StringOutput)
}

// Base64-encoded command.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) string { return v.Content }).(pulumi.StringOutput)
}

// URL of the COS bucket to store the output.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) OutputCosBucketUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) string { return v.OutputCosBucketUrl }).(pulumi.StringOutput)
}

// Prefix of the output file name.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) OutputCosKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) string { return v.OutputCosKeyPrefix }).(pulumi.StringOutput)
}

// Timeout period.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) int { return v.Timeout }).(pulumi.IntOutput)
}

// The user who executes the command.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) string { return v.Username }).(pulumi.StringOutput)
}

// Execution path.
func (o GetInvocationTaskInvocationTaskSetCommandDocumentOutput) WorkingDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetCommandDocument) string { return v.WorkingDirectory }).(pulumi.StringOutput)
}

type GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskInvocationTaskSetCommandDocument)(nil)).Elem()
}

func (o GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput) ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput() GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput) ToGetInvocationTaskInvocationTaskSetCommandDocumentArrayOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput) Index(i pulumi.IntInput) GetInvocationTaskInvocationTaskSetCommandDocumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvocationTaskInvocationTaskSetCommandDocument {
		return vs[0].([]GetInvocationTaskInvocationTaskSetCommandDocument)[vs[1].(int)]
	}).(GetInvocationTaskInvocationTaskSetCommandDocumentOutput)
}

type GetInvocationTaskInvocationTaskSetTaskResult struct {
	// Dropped bytes of the command output.
	Dropped int `pulumi:"dropped"`
	// Time when the execution is ended.
	ExecEndTime string `pulumi:"execEndTime"`
	// Time when the execution is started.
	ExecStartTime string `pulumi:"execStartTime"`
	// ExitCode of the execution.
	ExitCode int `pulumi:"exitCode"`
	// Base64-encoded command output. The maximum length is 24 KB.
	Output string `pulumi:"output"`
	// Error message for uploading logs to COS.
	OutputUploadCosErrorInfo string `pulumi:"outputUploadCosErrorInfo"`
	// COS URL of the logs.
	OutputUrl string `pulumi:"outputUrl"`
}

// GetInvocationTaskInvocationTaskSetTaskResultInput is an input type that accepts GetInvocationTaskInvocationTaskSetTaskResultArgs and GetInvocationTaskInvocationTaskSetTaskResultOutput values.
// You can construct a concrete instance of `GetInvocationTaskInvocationTaskSetTaskResultInput` via:
//
//	GetInvocationTaskInvocationTaskSetTaskResultArgs{...}
type GetInvocationTaskInvocationTaskSetTaskResultInput interface {
	pulumi.Input

	ToGetInvocationTaskInvocationTaskSetTaskResultOutput() GetInvocationTaskInvocationTaskSetTaskResultOutput
	ToGetInvocationTaskInvocationTaskSetTaskResultOutputWithContext(context.Context) GetInvocationTaskInvocationTaskSetTaskResultOutput
}

type GetInvocationTaskInvocationTaskSetTaskResultArgs struct {
	// Dropped bytes of the command output.
	Dropped pulumi.IntInput `pulumi:"dropped"`
	// Time when the execution is ended.
	ExecEndTime pulumi.StringInput `pulumi:"execEndTime"`
	// Time when the execution is started.
	ExecStartTime pulumi.StringInput `pulumi:"execStartTime"`
	// ExitCode of the execution.
	ExitCode pulumi.IntInput `pulumi:"exitCode"`
	// Base64-encoded command output. The maximum length is 24 KB.
	Output pulumi.StringInput `pulumi:"output"`
	// Error message for uploading logs to COS.
	OutputUploadCosErrorInfo pulumi.StringInput `pulumi:"outputUploadCosErrorInfo"`
	// COS URL of the logs.
	OutputUrl pulumi.StringInput `pulumi:"outputUrl"`
}

func (GetInvocationTaskInvocationTaskSetTaskResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskInvocationTaskSetTaskResult)(nil)).Elem()
}

func (i GetInvocationTaskInvocationTaskSetTaskResultArgs) ToGetInvocationTaskInvocationTaskSetTaskResultOutput() GetInvocationTaskInvocationTaskSetTaskResultOutput {
	return i.ToGetInvocationTaskInvocationTaskSetTaskResultOutputWithContext(context.Background())
}

func (i GetInvocationTaskInvocationTaskSetTaskResultArgs) ToGetInvocationTaskInvocationTaskSetTaskResultOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetTaskResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskInvocationTaskSetTaskResultOutput)
}

// GetInvocationTaskInvocationTaskSetTaskResultArrayInput is an input type that accepts GetInvocationTaskInvocationTaskSetTaskResultArray and GetInvocationTaskInvocationTaskSetTaskResultArrayOutput values.
// You can construct a concrete instance of `GetInvocationTaskInvocationTaskSetTaskResultArrayInput` via:
//
//	GetInvocationTaskInvocationTaskSetTaskResultArray{ GetInvocationTaskInvocationTaskSetTaskResultArgs{...} }
type GetInvocationTaskInvocationTaskSetTaskResultArrayInput interface {
	pulumi.Input

	ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutput() GetInvocationTaskInvocationTaskSetTaskResultArrayOutput
	ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutputWithContext(context.Context) GetInvocationTaskInvocationTaskSetTaskResultArrayOutput
}

type GetInvocationTaskInvocationTaskSetTaskResultArray []GetInvocationTaskInvocationTaskSetTaskResultInput

func (GetInvocationTaskInvocationTaskSetTaskResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskInvocationTaskSetTaskResult)(nil)).Elem()
}

func (i GetInvocationTaskInvocationTaskSetTaskResultArray) ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutput() GetInvocationTaskInvocationTaskSetTaskResultArrayOutput {
	return i.ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutputWithContext(context.Background())
}

func (i GetInvocationTaskInvocationTaskSetTaskResultArray) ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetTaskResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvocationTaskInvocationTaskSetTaskResultArrayOutput)
}

type GetInvocationTaskInvocationTaskSetTaskResultOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskInvocationTaskSetTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvocationTaskInvocationTaskSetTaskResult)(nil)).Elem()
}

func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) ToGetInvocationTaskInvocationTaskSetTaskResultOutput() GetInvocationTaskInvocationTaskSetTaskResultOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) ToGetInvocationTaskInvocationTaskSetTaskResultOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetTaskResultOutput {
	return o
}

// Dropped bytes of the command output.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) Dropped() pulumi.IntOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) int { return v.Dropped }).(pulumi.IntOutput)
}

// Time when the execution is ended.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) ExecEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) string { return v.ExecEndTime }).(pulumi.StringOutput)
}

// Time when the execution is started.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) ExecStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) string { return v.ExecStartTime }).(pulumi.StringOutput)
}

// ExitCode of the execution.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) int { return v.ExitCode }).(pulumi.IntOutput)
}

// Base64-encoded command output. The maximum length is 24 KB.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) string { return v.Output }).(pulumi.StringOutput)
}

// Error message for uploading logs to COS.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) OutputUploadCosErrorInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) string { return v.OutputUploadCosErrorInfo }).(pulumi.StringOutput)
}

// COS URL of the logs.
func (o GetInvocationTaskInvocationTaskSetTaskResultOutput) OutputUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvocationTaskInvocationTaskSetTaskResult) string { return v.OutputUrl }).(pulumi.StringOutput)
}

type GetInvocationTaskInvocationTaskSetTaskResultArrayOutput struct{ *pulumi.OutputState }

func (GetInvocationTaskInvocationTaskSetTaskResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvocationTaskInvocationTaskSetTaskResult)(nil)).Elem()
}

func (o GetInvocationTaskInvocationTaskSetTaskResultArrayOutput) ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutput() GetInvocationTaskInvocationTaskSetTaskResultArrayOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetTaskResultArrayOutput) ToGetInvocationTaskInvocationTaskSetTaskResultArrayOutputWithContext(ctx context.Context) GetInvocationTaskInvocationTaskSetTaskResultArrayOutput {
	return o
}

func (o GetInvocationTaskInvocationTaskSetTaskResultArrayOutput) Index(i pulumi.IntInput) GetInvocationTaskInvocationTaskSetTaskResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvocationTaskInvocationTaskSetTaskResult {
		return vs[0].([]GetInvocationTaskInvocationTaskSetTaskResult)[vs[1].(int)]
	}).(GetInvocationTaskInvocationTaskSetTaskResultOutput)
}

type GetInvokerInvokerSet struct {
	// Command ID.
	CommandId string `pulumi:"commandId"`
	// Creation time.
	CreatedTime string `pulumi:"createdTime"`
	// Whether to enable the invoker.
	Enable bool `pulumi:"enable"`
	// Instance ID list.
	InstanceIds []string `pulumi:"instanceIds"`
	// Invoker ID.
	InvokerId string `pulumi:"invokerId"`
	// Invoker name.
	Name string `pulumi:"name"`
	// Custom parameters.
	Parameters string `pulumi:"parameters"`
	// Execution schedule of the invoker. This field is returned for recurring invokers.
	ScheduleSettings []GetInvokerInvokerSetScheduleSetting `pulumi:"scheduleSettings"`
	// Invoker type.
	Type string `pulumi:"type"`
	// Modification time.
	UpdatedTime string `pulumi:"updatedTime"`
	// Username.
	Username string `pulumi:"username"`
}

// GetInvokerInvokerSetInput is an input type that accepts GetInvokerInvokerSetArgs and GetInvokerInvokerSetOutput values.
// You can construct a concrete instance of `GetInvokerInvokerSetInput` via:
//
//	GetInvokerInvokerSetArgs{...}
type GetInvokerInvokerSetInput interface {
	pulumi.Input

	ToGetInvokerInvokerSetOutput() GetInvokerInvokerSetOutput
	ToGetInvokerInvokerSetOutputWithContext(context.Context) GetInvokerInvokerSetOutput
}

type GetInvokerInvokerSetArgs struct {
	// Command ID.
	CommandId pulumi.StringInput `pulumi:"commandId"`
	// Creation time.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Whether to enable the invoker.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// Instance ID list.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Invoker ID.
	InvokerId pulumi.StringInput `pulumi:"invokerId"`
	// Invoker name.
	Name pulumi.StringInput `pulumi:"name"`
	// Custom parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// Execution schedule of the invoker. This field is returned for recurring invokers.
	ScheduleSettings GetInvokerInvokerSetScheduleSettingArrayInput `pulumi:"scheduleSettings"`
	// Invoker type.
	Type pulumi.StringInput `pulumi:"type"`
	// Modification time.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
	// Username.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetInvokerInvokerSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokerInvokerSet)(nil)).Elem()
}

func (i GetInvokerInvokerSetArgs) ToGetInvokerInvokerSetOutput() GetInvokerInvokerSetOutput {
	return i.ToGetInvokerInvokerSetOutputWithContext(context.Background())
}

func (i GetInvokerInvokerSetArgs) ToGetInvokerInvokerSetOutputWithContext(ctx context.Context) GetInvokerInvokerSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvokerInvokerSetOutput)
}

// GetInvokerInvokerSetArrayInput is an input type that accepts GetInvokerInvokerSetArray and GetInvokerInvokerSetArrayOutput values.
// You can construct a concrete instance of `GetInvokerInvokerSetArrayInput` via:
//
//	GetInvokerInvokerSetArray{ GetInvokerInvokerSetArgs{...} }
type GetInvokerInvokerSetArrayInput interface {
	pulumi.Input

	ToGetInvokerInvokerSetArrayOutput() GetInvokerInvokerSetArrayOutput
	ToGetInvokerInvokerSetArrayOutputWithContext(context.Context) GetInvokerInvokerSetArrayOutput
}

type GetInvokerInvokerSetArray []GetInvokerInvokerSetInput

func (GetInvokerInvokerSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvokerInvokerSet)(nil)).Elem()
}

func (i GetInvokerInvokerSetArray) ToGetInvokerInvokerSetArrayOutput() GetInvokerInvokerSetArrayOutput {
	return i.ToGetInvokerInvokerSetArrayOutputWithContext(context.Background())
}

func (i GetInvokerInvokerSetArray) ToGetInvokerInvokerSetArrayOutputWithContext(ctx context.Context) GetInvokerInvokerSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvokerInvokerSetArrayOutput)
}

type GetInvokerInvokerSetOutput struct{ *pulumi.OutputState }

func (GetInvokerInvokerSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokerInvokerSet)(nil)).Elem()
}

func (o GetInvokerInvokerSetOutput) ToGetInvokerInvokerSetOutput() GetInvokerInvokerSetOutput {
	return o
}

func (o GetInvokerInvokerSetOutput) ToGetInvokerInvokerSetOutputWithContext(ctx context.Context) GetInvokerInvokerSetOutput {
	return o
}

// Command ID.
func (o GetInvokerInvokerSetOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.CommandId }).(pulumi.StringOutput)
}

// Creation time.
func (o GetInvokerInvokerSetOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Whether to enable the invoker.
func (o GetInvokerInvokerSetOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Instance ID list.
func (o GetInvokerInvokerSetOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// Invoker ID.
func (o GetInvokerInvokerSetOutput) InvokerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.InvokerId }).(pulumi.StringOutput)
}

// Invoker name.
func (o GetInvokerInvokerSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.Name }).(pulumi.StringOutput)
}

// Custom parameters.
func (o GetInvokerInvokerSetOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.Parameters }).(pulumi.StringOutput)
}

// Execution schedule of the invoker. This field is returned for recurring invokers.
func (o GetInvokerInvokerSetOutput) ScheduleSettings() GetInvokerInvokerSetScheduleSettingArrayOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) []GetInvokerInvokerSetScheduleSetting { return v.ScheduleSettings }).(GetInvokerInvokerSetScheduleSettingArrayOutput)
}

// Invoker type.
func (o GetInvokerInvokerSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.Type }).(pulumi.StringOutput)
}

// Modification time.
func (o GetInvokerInvokerSetOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// Username.
func (o GetInvokerInvokerSetOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSet) string { return v.Username }).(pulumi.StringOutput)
}

type GetInvokerInvokerSetArrayOutput struct{ *pulumi.OutputState }

func (GetInvokerInvokerSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvokerInvokerSet)(nil)).Elem()
}

func (o GetInvokerInvokerSetArrayOutput) ToGetInvokerInvokerSetArrayOutput() GetInvokerInvokerSetArrayOutput {
	return o
}

func (o GetInvokerInvokerSetArrayOutput) ToGetInvokerInvokerSetArrayOutputWithContext(ctx context.Context) GetInvokerInvokerSetArrayOutput {
	return o
}

func (o GetInvokerInvokerSetArrayOutput) Index(i pulumi.IntInput) GetInvokerInvokerSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvokerInvokerSet {
		return vs[0].([]GetInvokerInvokerSet)[vs[1].(int)]
	}).(GetInvokerInvokerSetOutput)
}

type GetInvokerInvokerSetScheduleSetting struct {
	// The next execution time of the invoker. This field is required if Policy is ONCE.
	InvokeTime string `pulumi:"invokeTime"`
	// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
	Policy string `pulumi:"policy"`
	// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
	Recurrence string `pulumi:"recurrence"`
}

// GetInvokerInvokerSetScheduleSettingInput is an input type that accepts GetInvokerInvokerSetScheduleSettingArgs and GetInvokerInvokerSetScheduleSettingOutput values.
// You can construct a concrete instance of `GetInvokerInvokerSetScheduleSettingInput` via:
//
//	GetInvokerInvokerSetScheduleSettingArgs{...}
type GetInvokerInvokerSetScheduleSettingInput interface {
	pulumi.Input

	ToGetInvokerInvokerSetScheduleSettingOutput() GetInvokerInvokerSetScheduleSettingOutput
	ToGetInvokerInvokerSetScheduleSettingOutputWithContext(context.Context) GetInvokerInvokerSetScheduleSettingOutput
}

type GetInvokerInvokerSetScheduleSettingArgs struct {
	// The next execution time of the invoker. This field is required if Policy is ONCE.
	InvokeTime pulumi.StringInput `pulumi:"invokeTime"`
	// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
}

func (GetInvokerInvokerSetScheduleSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokerInvokerSetScheduleSetting)(nil)).Elem()
}

func (i GetInvokerInvokerSetScheduleSettingArgs) ToGetInvokerInvokerSetScheduleSettingOutput() GetInvokerInvokerSetScheduleSettingOutput {
	return i.ToGetInvokerInvokerSetScheduleSettingOutputWithContext(context.Background())
}

func (i GetInvokerInvokerSetScheduleSettingArgs) ToGetInvokerInvokerSetScheduleSettingOutputWithContext(ctx context.Context) GetInvokerInvokerSetScheduleSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvokerInvokerSetScheduleSettingOutput)
}

// GetInvokerInvokerSetScheduleSettingArrayInput is an input type that accepts GetInvokerInvokerSetScheduleSettingArray and GetInvokerInvokerSetScheduleSettingArrayOutput values.
// You can construct a concrete instance of `GetInvokerInvokerSetScheduleSettingArrayInput` via:
//
//	GetInvokerInvokerSetScheduleSettingArray{ GetInvokerInvokerSetScheduleSettingArgs{...} }
type GetInvokerInvokerSetScheduleSettingArrayInput interface {
	pulumi.Input

	ToGetInvokerInvokerSetScheduleSettingArrayOutput() GetInvokerInvokerSetScheduleSettingArrayOutput
	ToGetInvokerInvokerSetScheduleSettingArrayOutputWithContext(context.Context) GetInvokerInvokerSetScheduleSettingArrayOutput
}

type GetInvokerInvokerSetScheduleSettingArray []GetInvokerInvokerSetScheduleSettingInput

func (GetInvokerInvokerSetScheduleSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvokerInvokerSetScheduleSetting)(nil)).Elem()
}

func (i GetInvokerInvokerSetScheduleSettingArray) ToGetInvokerInvokerSetScheduleSettingArrayOutput() GetInvokerInvokerSetScheduleSettingArrayOutput {
	return i.ToGetInvokerInvokerSetScheduleSettingArrayOutputWithContext(context.Background())
}

func (i GetInvokerInvokerSetScheduleSettingArray) ToGetInvokerInvokerSetScheduleSettingArrayOutputWithContext(ctx context.Context) GetInvokerInvokerSetScheduleSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvokerInvokerSetScheduleSettingArrayOutput)
}

type GetInvokerInvokerSetScheduleSettingOutput struct{ *pulumi.OutputState }

func (GetInvokerInvokerSetScheduleSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokerInvokerSetScheduleSetting)(nil)).Elem()
}

func (o GetInvokerInvokerSetScheduleSettingOutput) ToGetInvokerInvokerSetScheduleSettingOutput() GetInvokerInvokerSetScheduleSettingOutput {
	return o
}

func (o GetInvokerInvokerSetScheduleSettingOutput) ToGetInvokerInvokerSetScheduleSettingOutputWithContext(ctx context.Context) GetInvokerInvokerSetScheduleSettingOutput {
	return o
}

// The next execution time of the invoker. This field is required if Policy is ONCE.
func (o GetInvokerInvokerSetScheduleSettingOutput) InvokeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSetScheduleSetting) string { return v.InvokeTime }).(pulumi.StringOutput)
}

// Execution policy: `ONCE`: Execute once; `RECURRENCE`: Execute repeatedly.
func (o GetInvokerInvokerSetScheduleSettingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSetScheduleSetting) string { return v.Policy }).(pulumi.StringOutput)
}

// Trigger the crontab expression. This field is required if `Policy` is `RECURRENCE`. The crontab expression is parsed in UTC+8.
func (o GetInvokerInvokerSetScheduleSettingOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerInvokerSetScheduleSetting) string { return v.Recurrence }).(pulumi.StringOutput)
}

type GetInvokerInvokerSetScheduleSettingArrayOutput struct{ *pulumi.OutputState }

func (GetInvokerInvokerSetScheduleSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvokerInvokerSetScheduleSetting)(nil)).Elem()
}

func (o GetInvokerInvokerSetScheduleSettingArrayOutput) ToGetInvokerInvokerSetScheduleSettingArrayOutput() GetInvokerInvokerSetScheduleSettingArrayOutput {
	return o
}

func (o GetInvokerInvokerSetScheduleSettingArrayOutput) ToGetInvokerInvokerSetScheduleSettingArrayOutputWithContext(ctx context.Context) GetInvokerInvokerSetScheduleSettingArrayOutput {
	return o
}

func (o GetInvokerInvokerSetScheduleSettingArrayOutput) Index(i pulumi.IntInput) GetInvokerInvokerSetScheduleSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvokerInvokerSetScheduleSetting {
		return vs[0].([]GetInvokerInvokerSetScheduleSetting)[vs[1].(int)]
	}).(GetInvokerInvokerSetScheduleSettingOutput)
}

type GetInvokerRecordsInvokerRecordSet struct {
	// Command execution ID.
	InvocationId string `pulumi:"invocationId"`
	// Execution time.
	InvokeTime string `pulumi:"invokeTime"`
	// Invoker ID.
	InvokerId string `pulumi:"invokerId"`
	// Execution reason.
	Reason string `pulumi:"reason"`
	// Trigger result.
	Result string `pulumi:"result"`
}

// GetInvokerRecordsInvokerRecordSetInput is an input type that accepts GetInvokerRecordsInvokerRecordSetArgs and GetInvokerRecordsInvokerRecordSetOutput values.
// You can construct a concrete instance of `GetInvokerRecordsInvokerRecordSetInput` via:
//
//	GetInvokerRecordsInvokerRecordSetArgs{...}
type GetInvokerRecordsInvokerRecordSetInput interface {
	pulumi.Input

	ToGetInvokerRecordsInvokerRecordSetOutput() GetInvokerRecordsInvokerRecordSetOutput
	ToGetInvokerRecordsInvokerRecordSetOutputWithContext(context.Context) GetInvokerRecordsInvokerRecordSetOutput
}

type GetInvokerRecordsInvokerRecordSetArgs struct {
	// Command execution ID.
	InvocationId pulumi.StringInput `pulumi:"invocationId"`
	// Execution time.
	InvokeTime pulumi.StringInput `pulumi:"invokeTime"`
	// Invoker ID.
	InvokerId pulumi.StringInput `pulumi:"invokerId"`
	// Execution reason.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Trigger result.
	Result pulumi.StringInput `pulumi:"result"`
}

func (GetInvokerRecordsInvokerRecordSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokerRecordsInvokerRecordSet)(nil)).Elem()
}

func (i GetInvokerRecordsInvokerRecordSetArgs) ToGetInvokerRecordsInvokerRecordSetOutput() GetInvokerRecordsInvokerRecordSetOutput {
	return i.ToGetInvokerRecordsInvokerRecordSetOutputWithContext(context.Background())
}

func (i GetInvokerRecordsInvokerRecordSetArgs) ToGetInvokerRecordsInvokerRecordSetOutputWithContext(ctx context.Context) GetInvokerRecordsInvokerRecordSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvokerRecordsInvokerRecordSetOutput)
}

// GetInvokerRecordsInvokerRecordSetArrayInput is an input type that accepts GetInvokerRecordsInvokerRecordSetArray and GetInvokerRecordsInvokerRecordSetArrayOutput values.
// You can construct a concrete instance of `GetInvokerRecordsInvokerRecordSetArrayInput` via:
//
//	GetInvokerRecordsInvokerRecordSetArray{ GetInvokerRecordsInvokerRecordSetArgs{...} }
type GetInvokerRecordsInvokerRecordSetArrayInput interface {
	pulumi.Input

	ToGetInvokerRecordsInvokerRecordSetArrayOutput() GetInvokerRecordsInvokerRecordSetArrayOutput
	ToGetInvokerRecordsInvokerRecordSetArrayOutputWithContext(context.Context) GetInvokerRecordsInvokerRecordSetArrayOutput
}

type GetInvokerRecordsInvokerRecordSetArray []GetInvokerRecordsInvokerRecordSetInput

func (GetInvokerRecordsInvokerRecordSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvokerRecordsInvokerRecordSet)(nil)).Elem()
}

func (i GetInvokerRecordsInvokerRecordSetArray) ToGetInvokerRecordsInvokerRecordSetArrayOutput() GetInvokerRecordsInvokerRecordSetArrayOutput {
	return i.ToGetInvokerRecordsInvokerRecordSetArrayOutputWithContext(context.Background())
}

func (i GetInvokerRecordsInvokerRecordSetArray) ToGetInvokerRecordsInvokerRecordSetArrayOutputWithContext(ctx context.Context) GetInvokerRecordsInvokerRecordSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvokerRecordsInvokerRecordSetArrayOutput)
}

type GetInvokerRecordsInvokerRecordSetOutput struct{ *pulumi.OutputState }

func (GetInvokerRecordsInvokerRecordSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokerRecordsInvokerRecordSet)(nil)).Elem()
}

func (o GetInvokerRecordsInvokerRecordSetOutput) ToGetInvokerRecordsInvokerRecordSetOutput() GetInvokerRecordsInvokerRecordSetOutput {
	return o
}

func (o GetInvokerRecordsInvokerRecordSetOutput) ToGetInvokerRecordsInvokerRecordSetOutputWithContext(ctx context.Context) GetInvokerRecordsInvokerRecordSetOutput {
	return o
}

// Command execution ID.
func (o GetInvokerRecordsInvokerRecordSetOutput) InvocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerRecordsInvokerRecordSet) string { return v.InvocationId }).(pulumi.StringOutput)
}

// Execution time.
func (o GetInvokerRecordsInvokerRecordSetOutput) InvokeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerRecordsInvokerRecordSet) string { return v.InvokeTime }).(pulumi.StringOutput)
}

// Invoker ID.
func (o GetInvokerRecordsInvokerRecordSetOutput) InvokerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerRecordsInvokerRecordSet) string { return v.InvokerId }).(pulumi.StringOutput)
}

// Execution reason.
func (o GetInvokerRecordsInvokerRecordSetOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerRecordsInvokerRecordSet) string { return v.Reason }).(pulumi.StringOutput)
}

// Trigger result.
func (o GetInvokerRecordsInvokerRecordSetOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokerRecordsInvokerRecordSet) string { return v.Result }).(pulumi.StringOutput)
}

type GetInvokerRecordsInvokerRecordSetArrayOutput struct{ *pulumi.OutputState }

func (GetInvokerRecordsInvokerRecordSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvokerRecordsInvokerRecordSet)(nil)).Elem()
}

func (o GetInvokerRecordsInvokerRecordSetArrayOutput) ToGetInvokerRecordsInvokerRecordSetArrayOutput() GetInvokerRecordsInvokerRecordSetArrayOutput {
	return o
}

func (o GetInvokerRecordsInvokerRecordSetArrayOutput) ToGetInvokerRecordsInvokerRecordSetArrayOutputWithContext(ctx context.Context) GetInvokerRecordsInvokerRecordSetArrayOutput {
	return o
}

func (o GetInvokerRecordsInvokerRecordSetArrayOutput) Index(i pulumi.IntInput) GetInvokerRecordsInvokerRecordSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvokerRecordsInvokerRecordSet {
		return vs[0].([]GetInvokerRecordsInvokerRecordSet)[vs[1].(int)]
	}).(GetInvokerRecordsInvokerRecordSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CommandTagInput)(nil)).Elem(), CommandTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandTagArrayInput)(nil)).Elem(), CommandTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvokerScheduleSettingsInput)(nil)).Elem(), InvokerScheduleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvokerScheduleSettingsPtrInput)(nil)).Elem(), InvokerScheduleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAgentAutomationAgentSetInput)(nil)).Elem(), GetAgentAutomationAgentSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAgentAutomationAgentSetArrayInput)(nil)).Elem(), GetAgentAutomationAgentSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAgentFilterInput)(nil)).Elem(), GetAgentFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAgentFilterArrayInput)(nil)).Elem(), GetAgentFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandCommandSetInput)(nil)).Elem(), GetCommandCommandSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandCommandSetArrayInput)(nil)).Elem(), GetCommandCommandSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandCommandSetTagInput)(nil)).Elem(), GetCommandCommandSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandCommandSetTagArrayInput)(nil)).Elem(), GetCommandCommandSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskFilterInput)(nil)).Elem(), GetInvocationTaskFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskFilterArrayInput)(nil)).Elem(), GetInvocationTaskFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskInvocationTaskSetInput)(nil)).Elem(), GetInvocationTaskInvocationTaskSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskInvocationTaskSetArrayInput)(nil)).Elem(), GetInvocationTaskInvocationTaskSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskInvocationTaskSetCommandDocumentInput)(nil)).Elem(), GetInvocationTaskInvocationTaskSetCommandDocumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskInvocationTaskSetCommandDocumentArrayInput)(nil)).Elem(), GetInvocationTaskInvocationTaskSetCommandDocumentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskInvocationTaskSetTaskResultInput)(nil)).Elem(), GetInvocationTaskInvocationTaskSetTaskResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvocationTaskInvocationTaskSetTaskResultArrayInput)(nil)).Elem(), GetInvocationTaskInvocationTaskSetTaskResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvokerInvokerSetInput)(nil)).Elem(), GetInvokerInvokerSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvokerInvokerSetArrayInput)(nil)).Elem(), GetInvokerInvokerSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvokerInvokerSetScheduleSettingInput)(nil)).Elem(), GetInvokerInvokerSetScheduleSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvokerInvokerSetScheduleSettingArrayInput)(nil)).Elem(), GetInvokerInvokerSetScheduleSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvokerRecordsInvokerRecordSetInput)(nil)).Elem(), GetInvokerRecordsInvokerRecordSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvokerRecordsInvokerRecordSetArrayInput)(nil)).Elem(), GetInvokerRecordsInvokerRecordSetArray{})
	pulumi.RegisterOutputType(CommandTagOutput{})
	pulumi.RegisterOutputType(CommandTagArrayOutput{})
	pulumi.RegisterOutputType(InvokerScheduleSettingsOutput{})
	pulumi.RegisterOutputType(InvokerScheduleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetAgentAutomationAgentSetOutput{})
	pulumi.RegisterOutputType(GetAgentAutomationAgentSetArrayOutput{})
	pulumi.RegisterOutputType(GetAgentFilterOutput{})
	pulumi.RegisterOutputType(GetAgentFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCommandCommandSetOutput{})
	pulumi.RegisterOutputType(GetCommandCommandSetArrayOutput{})
	pulumi.RegisterOutputType(GetCommandCommandSetTagOutput{})
	pulumi.RegisterOutputType(GetCommandCommandSetTagArrayOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskFilterOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskInvocationTaskSetOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskInvocationTaskSetArrayOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskInvocationTaskSetCommandDocumentOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskInvocationTaskSetCommandDocumentArrayOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskInvocationTaskSetTaskResultOutput{})
	pulumi.RegisterOutputType(GetInvocationTaskInvocationTaskSetTaskResultArrayOutput{})
	pulumi.RegisterOutputType(GetInvokerInvokerSetOutput{})
	pulumi.RegisterOutputType(GetInvokerInvokerSetArrayOutput{})
	pulumi.RegisterOutputType(GetInvokerInvokerSetScheduleSettingOutput{})
	pulumi.RegisterOutputType(GetInvokerInvokerSetScheduleSettingArrayOutput{})
	pulumi.RegisterOutputType(GetInvokerRecordsInvokerRecordSetOutput{})
	pulumi.RegisterOutputType(GetInvokerRecordsInvokerRecordSetArrayOutput{})
}
