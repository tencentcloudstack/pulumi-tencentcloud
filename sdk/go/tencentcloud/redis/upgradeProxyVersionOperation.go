// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a redis upgradeProxyVersionOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Redis.NewUpgradeProxyVersionOperation(ctx, "upgradeProxyVersionOperation", &Redis.UpgradeProxyVersionOperationArgs{
//				CurrentProxyVersion:    pulumi.String("5.0.0"),
//				InstanceId:             pulumi.String("crs-c1nl9rpv"),
//				InstanceTypeUpgradeNow: pulumi.Int(1),
//				UpgradeProxyVersion:    pulumi.String("5.0.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type UpgradeProxyVersionOperation struct {
	pulumi.CustomResourceState

	// Current proxy version.
	CurrentProxyVersion pulumi.StringOutput `pulumi:"currentProxyVersion"`
	// The ID of instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Switch mode:1 - Upgrade now0 - Maintenance window upgrade.
	InstanceTypeUpgradeNow pulumi.IntOutput `pulumi:"instanceTypeUpgradeNow"`
	// Upgradeable redis proxy version.
	UpgradeProxyVersion pulumi.StringOutput `pulumi:"upgradeProxyVersion"`
}

// NewUpgradeProxyVersionOperation registers a new resource with the given unique name, arguments, and options.
func NewUpgradeProxyVersionOperation(ctx *pulumi.Context,
	name string, args *UpgradeProxyVersionOperationArgs, opts ...pulumi.ResourceOption) (*UpgradeProxyVersionOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CurrentProxyVersion == nil {
		return nil, errors.New("invalid value for required argument 'CurrentProxyVersion'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.InstanceTypeUpgradeNow == nil {
		return nil, errors.New("invalid value for required argument 'InstanceTypeUpgradeNow'")
	}
	if args.UpgradeProxyVersion == nil {
		return nil, errors.New("invalid value for required argument 'UpgradeProxyVersion'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource UpgradeProxyVersionOperation
	err := ctx.RegisterResource("tencentcloud:Redis/upgradeProxyVersionOperation:UpgradeProxyVersionOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUpgradeProxyVersionOperation gets an existing UpgradeProxyVersionOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUpgradeProxyVersionOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UpgradeProxyVersionOperationState, opts ...pulumi.ResourceOption) (*UpgradeProxyVersionOperation, error) {
	var resource UpgradeProxyVersionOperation
	err := ctx.ReadResource("tencentcloud:Redis/upgradeProxyVersionOperation:UpgradeProxyVersionOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UpgradeProxyVersionOperation resources.
type upgradeProxyVersionOperationState struct {
	// Current proxy version.
	CurrentProxyVersion *string `pulumi:"currentProxyVersion"`
	// The ID of instance.
	InstanceId *string `pulumi:"instanceId"`
	// Switch mode:1 - Upgrade now0 - Maintenance window upgrade.
	InstanceTypeUpgradeNow *int `pulumi:"instanceTypeUpgradeNow"`
	// Upgradeable redis proxy version.
	UpgradeProxyVersion *string `pulumi:"upgradeProxyVersion"`
}

type UpgradeProxyVersionOperationState struct {
	// Current proxy version.
	CurrentProxyVersion pulumi.StringPtrInput
	// The ID of instance.
	InstanceId pulumi.StringPtrInput
	// Switch mode:1 - Upgrade now0 - Maintenance window upgrade.
	InstanceTypeUpgradeNow pulumi.IntPtrInput
	// Upgradeable redis proxy version.
	UpgradeProxyVersion pulumi.StringPtrInput
}

func (UpgradeProxyVersionOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*upgradeProxyVersionOperationState)(nil)).Elem()
}

type upgradeProxyVersionOperationArgs struct {
	// Current proxy version.
	CurrentProxyVersion string `pulumi:"currentProxyVersion"`
	// The ID of instance.
	InstanceId string `pulumi:"instanceId"`
	// Switch mode:1 - Upgrade now0 - Maintenance window upgrade.
	InstanceTypeUpgradeNow int `pulumi:"instanceTypeUpgradeNow"`
	// Upgradeable redis proxy version.
	UpgradeProxyVersion string `pulumi:"upgradeProxyVersion"`
}

// The set of arguments for constructing a UpgradeProxyVersionOperation resource.
type UpgradeProxyVersionOperationArgs struct {
	// Current proxy version.
	CurrentProxyVersion pulumi.StringInput
	// The ID of instance.
	InstanceId pulumi.StringInput
	// Switch mode:1 - Upgrade now0 - Maintenance window upgrade.
	InstanceTypeUpgradeNow pulumi.IntInput
	// Upgradeable redis proxy version.
	UpgradeProxyVersion pulumi.StringInput
}

func (UpgradeProxyVersionOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*upgradeProxyVersionOperationArgs)(nil)).Elem()
}

type UpgradeProxyVersionOperationInput interface {
	pulumi.Input

	ToUpgradeProxyVersionOperationOutput() UpgradeProxyVersionOperationOutput
	ToUpgradeProxyVersionOperationOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationOutput
}

func (*UpgradeProxyVersionOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeProxyVersionOperation)(nil)).Elem()
}

func (i *UpgradeProxyVersionOperation) ToUpgradeProxyVersionOperationOutput() UpgradeProxyVersionOperationOutput {
	return i.ToUpgradeProxyVersionOperationOutputWithContext(context.Background())
}

func (i *UpgradeProxyVersionOperation) ToUpgradeProxyVersionOperationOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradeProxyVersionOperationOutput)
}

// UpgradeProxyVersionOperationArrayInput is an input type that accepts UpgradeProxyVersionOperationArray and UpgradeProxyVersionOperationArrayOutput values.
// You can construct a concrete instance of `UpgradeProxyVersionOperationArrayInput` via:
//
//	UpgradeProxyVersionOperationArray{ UpgradeProxyVersionOperationArgs{...} }
type UpgradeProxyVersionOperationArrayInput interface {
	pulumi.Input

	ToUpgradeProxyVersionOperationArrayOutput() UpgradeProxyVersionOperationArrayOutput
	ToUpgradeProxyVersionOperationArrayOutputWithContext(context.Context) UpgradeProxyVersionOperationArrayOutput
}

type UpgradeProxyVersionOperationArray []UpgradeProxyVersionOperationInput

func (UpgradeProxyVersionOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpgradeProxyVersionOperation)(nil)).Elem()
}

func (i UpgradeProxyVersionOperationArray) ToUpgradeProxyVersionOperationArrayOutput() UpgradeProxyVersionOperationArrayOutput {
	return i.ToUpgradeProxyVersionOperationArrayOutputWithContext(context.Background())
}

func (i UpgradeProxyVersionOperationArray) ToUpgradeProxyVersionOperationArrayOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradeProxyVersionOperationArrayOutput)
}

// UpgradeProxyVersionOperationMapInput is an input type that accepts UpgradeProxyVersionOperationMap and UpgradeProxyVersionOperationMapOutput values.
// You can construct a concrete instance of `UpgradeProxyVersionOperationMapInput` via:
//
//	UpgradeProxyVersionOperationMap{ "key": UpgradeProxyVersionOperationArgs{...} }
type UpgradeProxyVersionOperationMapInput interface {
	pulumi.Input

	ToUpgradeProxyVersionOperationMapOutput() UpgradeProxyVersionOperationMapOutput
	ToUpgradeProxyVersionOperationMapOutputWithContext(context.Context) UpgradeProxyVersionOperationMapOutput
}

type UpgradeProxyVersionOperationMap map[string]UpgradeProxyVersionOperationInput

func (UpgradeProxyVersionOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpgradeProxyVersionOperation)(nil)).Elem()
}

func (i UpgradeProxyVersionOperationMap) ToUpgradeProxyVersionOperationMapOutput() UpgradeProxyVersionOperationMapOutput {
	return i.ToUpgradeProxyVersionOperationMapOutputWithContext(context.Background())
}

func (i UpgradeProxyVersionOperationMap) ToUpgradeProxyVersionOperationMapOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradeProxyVersionOperationMapOutput)
}

type UpgradeProxyVersionOperationOutput struct{ *pulumi.OutputState }

func (UpgradeProxyVersionOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeProxyVersionOperation)(nil)).Elem()
}

func (o UpgradeProxyVersionOperationOutput) ToUpgradeProxyVersionOperationOutput() UpgradeProxyVersionOperationOutput {
	return o
}

func (o UpgradeProxyVersionOperationOutput) ToUpgradeProxyVersionOperationOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationOutput {
	return o
}

// Current proxy version.
func (o UpgradeProxyVersionOperationOutput) CurrentProxyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UpgradeProxyVersionOperation) pulumi.StringOutput { return v.CurrentProxyVersion }).(pulumi.StringOutput)
}

// The ID of instance.
func (o UpgradeProxyVersionOperationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *UpgradeProxyVersionOperation) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Switch mode:1 - Upgrade now0 - Maintenance window upgrade.
func (o UpgradeProxyVersionOperationOutput) InstanceTypeUpgradeNow() pulumi.IntOutput {
	return o.ApplyT(func(v *UpgradeProxyVersionOperation) pulumi.IntOutput { return v.InstanceTypeUpgradeNow }).(pulumi.IntOutput)
}

// Upgradeable redis proxy version.
func (o UpgradeProxyVersionOperationOutput) UpgradeProxyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UpgradeProxyVersionOperation) pulumi.StringOutput { return v.UpgradeProxyVersion }).(pulumi.StringOutput)
}

type UpgradeProxyVersionOperationArrayOutput struct{ *pulumi.OutputState }

func (UpgradeProxyVersionOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpgradeProxyVersionOperation)(nil)).Elem()
}

func (o UpgradeProxyVersionOperationArrayOutput) ToUpgradeProxyVersionOperationArrayOutput() UpgradeProxyVersionOperationArrayOutput {
	return o
}

func (o UpgradeProxyVersionOperationArrayOutput) ToUpgradeProxyVersionOperationArrayOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationArrayOutput {
	return o
}

func (o UpgradeProxyVersionOperationArrayOutput) Index(i pulumi.IntInput) UpgradeProxyVersionOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UpgradeProxyVersionOperation {
		return vs[0].([]*UpgradeProxyVersionOperation)[vs[1].(int)]
	}).(UpgradeProxyVersionOperationOutput)
}

type UpgradeProxyVersionOperationMapOutput struct{ *pulumi.OutputState }

func (UpgradeProxyVersionOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpgradeProxyVersionOperation)(nil)).Elem()
}

func (o UpgradeProxyVersionOperationMapOutput) ToUpgradeProxyVersionOperationMapOutput() UpgradeProxyVersionOperationMapOutput {
	return o
}

func (o UpgradeProxyVersionOperationMapOutput) ToUpgradeProxyVersionOperationMapOutputWithContext(ctx context.Context) UpgradeProxyVersionOperationMapOutput {
	return o
}

func (o UpgradeProxyVersionOperationMapOutput) MapIndex(k pulumi.StringInput) UpgradeProxyVersionOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UpgradeProxyVersionOperation {
		return vs[0].(map[string]*UpgradeProxyVersionOperation)[vs[1].(string)]
	}).(UpgradeProxyVersionOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeProxyVersionOperationInput)(nil)).Elem(), &UpgradeProxyVersionOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeProxyVersionOperationArrayInput)(nil)).Elem(), UpgradeProxyVersionOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeProxyVersionOperationMapInput)(nil)).Elem(), UpgradeProxyVersionOperationMap{})
	pulumi.RegisterOutputType(UpgradeProxyVersionOperationOutput{})
	pulumi.RegisterOutputType(UpgradeProxyVersionOperationArrayOutput{})
	pulumi.RegisterOutputType(UpgradeProxyVersionOperationMapOutput{})
}
