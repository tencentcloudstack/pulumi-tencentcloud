// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a Redis instance and set its attributes.
//
// > **NOTE:** The argument vpcId and subnetId is now required because Basic Network Instance is no longer supported.
//
// > **NOTE:** Both adding and removing replications in one change is supported but not recommend.
//
// ## Example Usage
//
// ### Create a base version of redis
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Redis"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zone, err := Redis.GetZoneConfig(ctx, &redis.GetZoneConfigArgs{
//				TypeId: pulumi.IntRef(7),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				VpcId:            vpc.ID(),
//				AvailabilityZone: pulumi.String(zone.Lists[0].Zone),
//				CidrBlock:        pulumi.String("10.0.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Redis.NewInstance(ctx, "example", &Redis.InstanceArgs{
//				AvailabilityZone: pulumi.String(zone.Lists[0].Zone),
//				TypeId:           pulumi.Int(zone.Lists[0].TypeId),
//				Password:         pulumi.String("Password@123"),
//				MemSize:          pulumi.Int(8192),
//				RedisShardNum:    pulumi.Int(zone.Lists[0].RedisShardNums[0]),
//				RedisReplicasNum: pulumi.Int(zone.Lists[0].RedisReplicasNums[0]),
//				Port:             pulumi.Int(6379),
//				VpcId:            vpc.ID(),
//				SubnetId:         subnet.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Create a CDC scenario instance
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Redis"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			cdcId := "cluster-xxxx"
//			if param := cfg.Get("cdcId"); param != "" {
//				cdcId = param
//			}
//			clusters, err := Redis.GetClusters(ctx, &redis.GetClustersArgs{
//				DedicatedClusterId: pulumi.StringRef(cdcId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("name", clusters.Resources[0].RedisClusterId)
//			zone, err := Redis.GetZoneConfig(ctx, &redis.GetZoneConfigArgs{
//				TypeId: pulumi.IntRef(7),
//				Region: pulumi.StringRef("ap-guangzhou"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			subnets, err := Vpc.GetSubnets(ctx, &vpc.GetSubnetsArgs{
//				CdcId: pulumi.StringRef(cdcId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Redis.NewInstance(ctx, "example", &Redis.InstanceArgs{
//				AvailabilityZone: pulumi.String(zone.Lists[0].Zone),
//				TypeId:           pulumi.Int(zone.Lists[0].TypeId),
//				Password:         pulumi.String("Password@123"),
//				MemSize:          pulumi.Int(8192),
//				RedisShardNum:    pulumi.Int(zone.Lists[0].RedisShardNums[0]),
//				RedisReplicasNum: pulumi.Int(zone.Lists[0].RedisReplicasNums[0]),
//				Port:             pulumi.Int(6379),
//				VpcId:            pulumi.String(subnets.InstanceLists[0].VpcId),
//				SubnetId:         pulumi.String(subnets.InstanceLists[0].SubnetId),
//				ProductVersion:   pulumi.String("cdc"),
//				RedisClusterId:   pulumi.String(clusters.Resources[0].RedisClusterId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Redis instance can be imported, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Redis/instance:Instance example crs-iu22tdrf
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Auto-renew flag. 0 - default state (manual renewal); 1 - automatic renewal; 2 - explicit no automatic renewal.
	AutoRenewFlag pulumi.IntPtrOutput `pulumi:"autoRenewFlag"`
	// The available zone ID of an instance to be created, please refer to `tencentcloud_redis_zone_config.list`.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// The charge type of instance. Valid values: `PREPAID` and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud International only supports `POSTPAID`. Caution that update operation on this field will delete old instances and create new with new charge type.
	ChargeType pulumi.StringPtrOutput `pulumi:"chargeType"`
	// The time when the instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Dedicated Cluster ID.
	DedicatedClusterId pulumi.StringOutput `pulumi:"dedicatedClusterId"`
	// Indicate whether to delete Redis instance directly or not. Default is false. If set true, the instance will be deleted instead of staying recycle bin.
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// IP address of an instance. When the `operationNetwork` is `changeVip`, this parameter needs to be configured.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// The memory volume of an available instance(in MB), please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`. When redis is standard type, it represents total memory size of the instance; when Redis is cluster type, it represents memory size of per sharding. `512MB` is supported only in master-slave instance.
	MemSize pulumi.IntOutput `pulumi:"memSize"`
	// Instance name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates whether the redis instance support no-auth access. NOTE: Only available in private cloud environment.
	NoAuth pulumi.BoolPtrOutput `pulumi:"noAuth"`
	// Readonly Primary/Replica nodes.
	NodeInfos InstanceNodeInfoArrayOutput `pulumi:"nodeInfos"`
	// Refers to the category of the pre-modified network, including: `changeVip`: refers to switching the private network, including its intranet IPv4 address and port; `changeVpc`: refers to switching the subnet to which the private network belongs; `changeBaseToVpc`: refers to switching the basic network to a private network; `changeVPort`: refers to only modifying the instance network port.
	OperationNetwork pulumi.StringPtrOutput `pulumi:"operationNetwork"`
	// Specify params template id. If not set, will use default template.
	ParamsTemplateId pulumi.StringPtrOutput `pulumi:"paramsTemplateId"`
	// Password for a Redis user, which should be 8 to 16 characters. NOTE: Only `no_auth=true` specified can make password empty.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The port used to access a redis instance. The default value is 6379. When the `operationNetwork` is `changeVPort` or `changeVip`, this parameter needs to be configured.
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when chargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	PrepaidPeriod pulumi.IntPtrOutput `pulumi:"prepaidPeriod"`
	// Specify the product version of the instance. `local`: Local disk version, `cloud`: Cloud disk version, `cdc`: Exclusive cluster version. Default is `local`.
	ProductVersion pulumi.StringOutput `pulumi:"productVersion"`
	// Specifies which project the instance should belong to.
	ProjectId pulumi.IntPtrOutput `pulumi:"projectId"`
	// Original intranet IPv4 address retention time: unit: day, value range: `0`, `1`, `2`, `3`, `7`, `15`.
	Recycle pulumi.IntPtrOutput `pulumi:"recycle"`
	// Exclusive cluster ID. When the `productVersion` is set to `cdc`, this parameter must be set.
	RedisClusterId pulumi.StringOutput `pulumi:"redisClusterId"`
	// The number of instance copies. This is not required for standalone and master slave versions and must equal to count of `replicaZoneIds`, Non-multi-AZ does not require `replicaZoneIds`; Redis memory version 4.0, 5.0, 6.2 standard architecture and cluster architecture support the number of copies in the range [1, 2, 3, 4, 5]; Redis 2.8 standard version and CKV standard version only support 1 copy.
	RedisReplicasNum pulumi.IntPtrOutput `pulumi:"redisReplicasNum"`
	// The number of instance shards; this parameter does not need to be configured for standard version instances; for cluster version instances, the number of shards ranges from: [`1`, `3`, `5`, `8`, `12`, `16`, ` 24  `, `32`, `40`, `48`, `64`, `80`, `96`, `128`].
	RedisShardNum pulumi.IntOutput `pulumi:"redisShardNum"`
	// ID of replica nodes available zone. This is not required for standalone and master slave versions. NOTE: Removing some of the same zone of replicas (e.g. removing 100001 of [100001, 100001, 100002]) will pick the first hit to remove.
	ReplicaZoneIds pulumi.IntArrayOutput `pulumi:"replicaZoneIds"`
	// Whether copy read-only is supported, Redis 2.8 Standard Edition and CKV Standard Edition do not support replica read-only, turn on replica read-only, the instance will automatically read and write separate, write requests are routed to the primary node, read requests are routed to the replica node, if you need to open replica read-only, the recommended number of replicas >=2.
	ReplicasReadOnly pulumi.BoolOutput `pulumi:"replicasReadOnly"`
	// ID of security group. If both vpcId and subnetId are not set, this argument should not be set either.
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// Current status of an instance, maybe: init, processing, online, isolate and todelete.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies which subnet the instance should belong to. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Instance tags.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `clusterCkv`,`cluster_redis5.0`,`clusterRedis`,`masterSlaveCkv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`masterSlaveRedis`,`standaloneRedis`, specific region support specific types, need to refer data `Redis.getZoneConfig`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Instance type. Available values reference data source `Redis.getZoneConfig` or [document](https://intl.cloud.tencent.com/document/product/239/32069), toggle immediately when modified.
	TypeId pulumi.IntPtrOutput `pulumi:"typeId"`
	// ID of the vpc with which the instance is to be associated. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// Switching mode: `1`-maintenance time window switching, `2`-immediate switching, default value `2`.
	WaitSwitch pulumi.IntPtrOutput `pulumi:"waitSwitch"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.MemSize == nil {
		return nil, errors.New("invalid value for required argument 'MemSize'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("tencentcloud:Redis/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("tencentcloud:Redis/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Auto-renew flag. 0 - default state (manual renewal); 1 - automatic renewal; 2 - explicit no automatic renewal.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// The available zone ID of an instance to be created, please refer to `tencentcloud_redis_zone_config.list`.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The charge type of instance. Valid values: `PREPAID` and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud International only supports `POSTPAID`. Caution that update operation on this field will delete old instances and create new with new charge type.
	ChargeType *string `pulumi:"chargeType"`
	// The time when the instance was created.
	CreateTime *string `pulumi:"createTime"`
	// Dedicated Cluster ID.
	DedicatedClusterId *string `pulumi:"dedicatedClusterId"`
	// Indicate whether to delete Redis instance directly or not. Default is false. If set true, the instance will be deleted instead of staying recycle bin.
	ForceDelete *bool `pulumi:"forceDelete"`
	// IP address of an instance. When the `operationNetwork` is `changeVip`, this parameter needs to be configured.
	Ip *string `pulumi:"ip"`
	// The memory volume of an available instance(in MB), please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`. When redis is standard type, it represents total memory size of the instance; when Redis is cluster type, it represents memory size of per sharding. `512MB` is supported only in master-slave instance.
	MemSize *int `pulumi:"memSize"`
	// Instance name.
	Name *string `pulumi:"name"`
	// Indicates whether the redis instance support no-auth access. NOTE: Only available in private cloud environment.
	NoAuth *bool `pulumi:"noAuth"`
	// Readonly Primary/Replica nodes.
	NodeInfos []InstanceNodeInfo `pulumi:"nodeInfos"`
	// Refers to the category of the pre-modified network, including: `changeVip`: refers to switching the private network, including its intranet IPv4 address and port; `changeVpc`: refers to switching the subnet to which the private network belongs; `changeBaseToVpc`: refers to switching the basic network to a private network; `changeVPort`: refers to only modifying the instance network port.
	OperationNetwork *string `pulumi:"operationNetwork"`
	// Specify params template id. If not set, will use default template.
	ParamsTemplateId *string `pulumi:"paramsTemplateId"`
	// Password for a Redis user, which should be 8 to 16 characters. NOTE: Only `no_auth=true` specified can make password empty.
	Password *string `pulumi:"password"`
	// The port used to access a redis instance. The default value is 6379. When the `operationNetwork` is `changeVPort` or `changeVip`, this parameter needs to be configured.
	Port *int `pulumi:"port"`
	// The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when chargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	PrepaidPeriod *int `pulumi:"prepaidPeriod"`
	// Specify the product version of the instance. `local`: Local disk version, `cloud`: Cloud disk version, `cdc`: Exclusive cluster version. Default is `local`.
	ProductVersion *string `pulumi:"productVersion"`
	// Specifies which project the instance should belong to.
	ProjectId *int `pulumi:"projectId"`
	// Original intranet IPv4 address retention time: unit: day, value range: `0`, `1`, `2`, `3`, `7`, `15`.
	Recycle *int `pulumi:"recycle"`
	// Exclusive cluster ID. When the `productVersion` is set to `cdc`, this parameter must be set.
	RedisClusterId *string `pulumi:"redisClusterId"`
	// The number of instance copies. This is not required for standalone and master slave versions and must equal to count of `replicaZoneIds`, Non-multi-AZ does not require `replicaZoneIds`; Redis memory version 4.0, 5.0, 6.2 standard architecture and cluster architecture support the number of copies in the range [1, 2, 3, 4, 5]; Redis 2.8 standard version and CKV standard version only support 1 copy.
	RedisReplicasNum *int `pulumi:"redisReplicasNum"`
	// The number of instance shards; this parameter does not need to be configured for standard version instances; for cluster version instances, the number of shards ranges from: [`1`, `3`, `5`, `8`, `12`, `16`, ` 24  `, `32`, `40`, `48`, `64`, `80`, `96`, `128`].
	RedisShardNum *int `pulumi:"redisShardNum"`
	// ID of replica nodes available zone. This is not required for standalone and master slave versions. NOTE: Removing some of the same zone of replicas (e.g. removing 100001 of [100001, 100001, 100002]) will pick the first hit to remove.
	ReplicaZoneIds []int `pulumi:"replicaZoneIds"`
	// Whether copy read-only is supported, Redis 2.8 Standard Edition and CKV Standard Edition do not support replica read-only, turn on replica read-only, the instance will automatically read and write separate, write requests are routed to the primary node, read requests are routed to the replica node, if you need to open replica read-only, the recommended number of replicas >=2.
	ReplicasReadOnly *bool `pulumi:"replicasReadOnly"`
	// ID of security group. If both vpcId and subnetId are not set, this argument should not be set either.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Current status of an instance, maybe: init, processing, online, isolate and todelete.
	Status *string `pulumi:"status"`
	// Specifies which subnet the instance should belong to. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `clusterCkv`,`cluster_redis5.0`,`clusterRedis`,`masterSlaveCkv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`masterSlaveRedis`,`standaloneRedis`, specific region support specific types, need to refer data `Redis.getZoneConfig`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type *string `pulumi:"type"`
	// Instance type. Available values reference data source `Redis.getZoneConfig` or [document](https://intl.cloud.tencent.com/document/product/239/32069), toggle immediately when modified.
	TypeId *int `pulumi:"typeId"`
	// ID of the vpc with which the instance is to be associated. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	VpcId *string `pulumi:"vpcId"`
	// Switching mode: `1`-maintenance time window switching, `2`-immediate switching, default value `2`.
	WaitSwitch *int `pulumi:"waitSwitch"`
}

type InstanceState struct {
	// Auto-renew flag. 0 - default state (manual renewal); 1 - automatic renewal; 2 - explicit no automatic renewal.
	AutoRenewFlag pulumi.IntPtrInput
	// The available zone ID of an instance to be created, please refer to `tencentcloud_redis_zone_config.list`.
	AvailabilityZone pulumi.StringPtrInput
	// The charge type of instance. Valid values: `PREPAID` and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud International only supports `POSTPAID`. Caution that update operation on this field will delete old instances and create new with new charge type.
	ChargeType pulumi.StringPtrInput
	// The time when the instance was created.
	CreateTime pulumi.StringPtrInput
	// Dedicated Cluster ID.
	DedicatedClusterId pulumi.StringPtrInput
	// Indicate whether to delete Redis instance directly or not. Default is false. If set true, the instance will be deleted instead of staying recycle bin.
	ForceDelete pulumi.BoolPtrInput
	// IP address of an instance. When the `operationNetwork` is `changeVip`, this parameter needs to be configured.
	Ip pulumi.StringPtrInput
	// The memory volume of an available instance(in MB), please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`. When redis is standard type, it represents total memory size of the instance; when Redis is cluster type, it represents memory size of per sharding. `512MB` is supported only in master-slave instance.
	MemSize pulumi.IntPtrInput
	// Instance name.
	Name pulumi.StringPtrInput
	// Indicates whether the redis instance support no-auth access. NOTE: Only available in private cloud environment.
	NoAuth pulumi.BoolPtrInput
	// Readonly Primary/Replica nodes.
	NodeInfos InstanceNodeInfoArrayInput
	// Refers to the category of the pre-modified network, including: `changeVip`: refers to switching the private network, including its intranet IPv4 address and port; `changeVpc`: refers to switching the subnet to which the private network belongs; `changeBaseToVpc`: refers to switching the basic network to a private network; `changeVPort`: refers to only modifying the instance network port.
	OperationNetwork pulumi.StringPtrInput
	// Specify params template id. If not set, will use default template.
	ParamsTemplateId pulumi.StringPtrInput
	// Password for a Redis user, which should be 8 to 16 characters. NOTE: Only `no_auth=true` specified can make password empty.
	Password pulumi.StringPtrInput
	// The port used to access a redis instance. The default value is 6379. When the `operationNetwork` is `changeVPort` or `changeVip`, this parameter needs to be configured.
	Port pulumi.IntPtrInput
	// The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when chargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	PrepaidPeriod pulumi.IntPtrInput
	// Specify the product version of the instance. `local`: Local disk version, `cloud`: Cloud disk version, `cdc`: Exclusive cluster version. Default is `local`.
	ProductVersion pulumi.StringPtrInput
	// Specifies which project the instance should belong to.
	ProjectId pulumi.IntPtrInput
	// Original intranet IPv4 address retention time: unit: day, value range: `0`, `1`, `2`, `3`, `7`, `15`.
	Recycle pulumi.IntPtrInput
	// Exclusive cluster ID. When the `productVersion` is set to `cdc`, this parameter must be set.
	RedisClusterId pulumi.StringPtrInput
	// The number of instance copies. This is not required for standalone and master slave versions and must equal to count of `replicaZoneIds`, Non-multi-AZ does not require `replicaZoneIds`; Redis memory version 4.0, 5.0, 6.2 standard architecture and cluster architecture support the number of copies in the range [1, 2, 3, 4, 5]; Redis 2.8 standard version and CKV standard version only support 1 copy.
	RedisReplicasNum pulumi.IntPtrInput
	// The number of instance shards; this parameter does not need to be configured for standard version instances; for cluster version instances, the number of shards ranges from: [`1`, `3`, `5`, `8`, `12`, `16`, ` 24  `, `32`, `40`, `48`, `64`, `80`, `96`, `128`].
	RedisShardNum pulumi.IntPtrInput
	// ID of replica nodes available zone. This is not required for standalone and master slave versions. NOTE: Removing some of the same zone of replicas (e.g. removing 100001 of [100001, 100001, 100002]) will pick the first hit to remove.
	ReplicaZoneIds pulumi.IntArrayInput
	// Whether copy read-only is supported, Redis 2.8 Standard Edition and CKV Standard Edition do not support replica read-only, turn on replica read-only, the instance will automatically read and write separate, write requests are routed to the primary node, read requests are routed to the replica node, if you need to open replica read-only, the recommended number of replicas >=2.
	ReplicasReadOnly pulumi.BoolPtrInput
	// ID of security group. If both vpcId and subnetId are not set, this argument should not be set either.
	SecurityGroups pulumi.StringArrayInput
	// Current status of an instance, maybe: init, processing, online, isolate and todelete.
	Status pulumi.StringPtrInput
	// Specifies which subnet the instance should belong to. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	SubnetId pulumi.StringPtrInput
	// Instance tags.
	Tags pulumi.MapInput
	// It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `clusterCkv`,`cluster_redis5.0`,`clusterRedis`,`masterSlaveCkv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`masterSlaveRedis`,`standaloneRedis`, specific region support specific types, need to refer data `Redis.getZoneConfig`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type pulumi.StringPtrInput
	// Instance type. Available values reference data source `Redis.getZoneConfig` or [document](https://intl.cloud.tencent.com/document/product/239/32069), toggle immediately when modified.
	TypeId pulumi.IntPtrInput
	// ID of the vpc with which the instance is to be associated. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	VpcId pulumi.StringPtrInput
	// Switching mode: `1`-maintenance time window switching, `2`-immediate switching, default value `2`.
	WaitSwitch pulumi.IntPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Auto-renew flag. 0 - default state (manual renewal); 1 - automatic renewal; 2 - explicit no automatic renewal.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// The available zone ID of an instance to be created, please refer to `tencentcloud_redis_zone_config.list`.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The charge type of instance. Valid values: `PREPAID` and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud International only supports `POSTPAID`. Caution that update operation on this field will delete old instances and create new with new charge type.
	ChargeType *string `pulumi:"chargeType"`
	// Indicate whether to delete Redis instance directly or not. Default is false. If set true, the instance will be deleted instead of staying recycle bin.
	ForceDelete *bool `pulumi:"forceDelete"`
	// IP address of an instance. When the `operationNetwork` is `changeVip`, this parameter needs to be configured.
	Ip *string `pulumi:"ip"`
	// The memory volume of an available instance(in MB), please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`. When redis is standard type, it represents total memory size of the instance; when Redis is cluster type, it represents memory size of per sharding. `512MB` is supported only in master-slave instance.
	MemSize int `pulumi:"memSize"`
	// Instance name.
	Name *string `pulumi:"name"`
	// Indicates whether the redis instance support no-auth access. NOTE: Only available in private cloud environment.
	NoAuth *bool `pulumi:"noAuth"`
	// Refers to the category of the pre-modified network, including: `changeVip`: refers to switching the private network, including its intranet IPv4 address and port; `changeVpc`: refers to switching the subnet to which the private network belongs; `changeBaseToVpc`: refers to switching the basic network to a private network; `changeVPort`: refers to only modifying the instance network port.
	OperationNetwork *string `pulumi:"operationNetwork"`
	// Specify params template id. If not set, will use default template.
	ParamsTemplateId *string `pulumi:"paramsTemplateId"`
	// Password for a Redis user, which should be 8 to 16 characters. NOTE: Only `no_auth=true` specified can make password empty.
	Password *string `pulumi:"password"`
	// The port used to access a redis instance. The default value is 6379. When the `operationNetwork` is `changeVPort` or `changeVip`, this parameter needs to be configured.
	Port *int `pulumi:"port"`
	// The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when chargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	PrepaidPeriod *int `pulumi:"prepaidPeriod"`
	// Specify the product version of the instance. `local`: Local disk version, `cloud`: Cloud disk version, `cdc`: Exclusive cluster version. Default is `local`.
	ProductVersion *string `pulumi:"productVersion"`
	// Specifies which project the instance should belong to.
	ProjectId *int `pulumi:"projectId"`
	// Original intranet IPv4 address retention time: unit: day, value range: `0`, `1`, `2`, `3`, `7`, `15`.
	Recycle *int `pulumi:"recycle"`
	// Exclusive cluster ID. When the `productVersion` is set to `cdc`, this parameter must be set.
	RedisClusterId *string `pulumi:"redisClusterId"`
	// The number of instance copies. This is not required for standalone and master slave versions and must equal to count of `replicaZoneIds`, Non-multi-AZ does not require `replicaZoneIds`; Redis memory version 4.0, 5.0, 6.2 standard architecture and cluster architecture support the number of copies in the range [1, 2, 3, 4, 5]; Redis 2.8 standard version and CKV standard version only support 1 copy.
	RedisReplicasNum *int `pulumi:"redisReplicasNum"`
	// The number of instance shards; this parameter does not need to be configured for standard version instances; for cluster version instances, the number of shards ranges from: [`1`, `3`, `5`, `8`, `12`, `16`, ` 24  `, `32`, `40`, `48`, `64`, `80`, `96`, `128`].
	RedisShardNum *int `pulumi:"redisShardNum"`
	// ID of replica nodes available zone. This is not required for standalone and master slave versions. NOTE: Removing some of the same zone of replicas (e.g. removing 100001 of [100001, 100001, 100002]) will pick the first hit to remove.
	ReplicaZoneIds []int `pulumi:"replicaZoneIds"`
	// Whether copy read-only is supported, Redis 2.8 Standard Edition and CKV Standard Edition do not support replica read-only, turn on replica read-only, the instance will automatically read and write separate, write requests are routed to the primary node, read requests are routed to the replica node, if you need to open replica read-only, the recommended number of replicas >=2.
	ReplicasReadOnly *bool `pulumi:"replicasReadOnly"`
	// ID of security group. If both vpcId and subnetId are not set, this argument should not be set either.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Specifies which subnet the instance should belong to. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `clusterCkv`,`cluster_redis5.0`,`clusterRedis`,`masterSlaveCkv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`masterSlaveRedis`,`standaloneRedis`, specific region support specific types, need to refer data `Redis.getZoneConfig`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type *string `pulumi:"type"`
	// Instance type. Available values reference data source `Redis.getZoneConfig` or [document](https://intl.cloud.tencent.com/document/product/239/32069), toggle immediately when modified.
	TypeId *int `pulumi:"typeId"`
	// ID of the vpc with which the instance is to be associated. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	VpcId *string `pulumi:"vpcId"`
	// Switching mode: `1`-maintenance time window switching, `2`-immediate switching, default value `2`.
	WaitSwitch *int `pulumi:"waitSwitch"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Auto-renew flag. 0 - default state (manual renewal); 1 - automatic renewal; 2 - explicit no automatic renewal.
	AutoRenewFlag pulumi.IntPtrInput
	// The available zone ID of an instance to be created, please refer to `tencentcloud_redis_zone_config.list`.
	AvailabilityZone pulumi.StringInput
	// The charge type of instance. Valid values: `PREPAID` and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud International only supports `POSTPAID`. Caution that update operation on this field will delete old instances and create new with new charge type.
	ChargeType pulumi.StringPtrInput
	// Indicate whether to delete Redis instance directly or not. Default is false. If set true, the instance will be deleted instead of staying recycle bin.
	ForceDelete pulumi.BoolPtrInput
	// IP address of an instance. When the `operationNetwork` is `changeVip`, this parameter needs to be configured.
	Ip pulumi.StringPtrInput
	// The memory volume of an available instance(in MB), please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`. When redis is standard type, it represents total memory size of the instance; when Redis is cluster type, it represents memory size of per sharding. `512MB` is supported only in master-slave instance.
	MemSize pulumi.IntInput
	// Instance name.
	Name pulumi.StringPtrInput
	// Indicates whether the redis instance support no-auth access. NOTE: Only available in private cloud environment.
	NoAuth pulumi.BoolPtrInput
	// Refers to the category of the pre-modified network, including: `changeVip`: refers to switching the private network, including its intranet IPv4 address and port; `changeVpc`: refers to switching the subnet to which the private network belongs; `changeBaseToVpc`: refers to switching the basic network to a private network; `changeVPort`: refers to only modifying the instance network port.
	OperationNetwork pulumi.StringPtrInput
	// Specify params template id. If not set, will use default template.
	ParamsTemplateId pulumi.StringPtrInput
	// Password for a Redis user, which should be 8 to 16 characters. NOTE: Only `no_auth=true` specified can make password empty.
	Password pulumi.StringPtrInput
	// The port used to access a redis instance. The default value is 6379. When the `operationNetwork` is `changeVPort` or `changeVip`, this parameter needs to be configured.
	Port pulumi.IntPtrInput
	// The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when chargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	PrepaidPeriod pulumi.IntPtrInput
	// Specify the product version of the instance. `local`: Local disk version, `cloud`: Cloud disk version, `cdc`: Exclusive cluster version. Default is `local`.
	ProductVersion pulumi.StringPtrInput
	// Specifies which project the instance should belong to.
	ProjectId pulumi.IntPtrInput
	// Original intranet IPv4 address retention time: unit: day, value range: `0`, `1`, `2`, `3`, `7`, `15`.
	Recycle pulumi.IntPtrInput
	// Exclusive cluster ID. When the `productVersion` is set to `cdc`, this parameter must be set.
	RedisClusterId pulumi.StringPtrInput
	// The number of instance copies. This is not required for standalone and master slave versions and must equal to count of `replicaZoneIds`, Non-multi-AZ does not require `replicaZoneIds`; Redis memory version 4.0, 5.0, 6.2 standard architecture and cluster architecture support the number of copies in the range [1, 2, 3, 4, 5]; Redis 2.8 standard version and CKV standard version only support 1 copy.
	RedisReplicasNum pulumi.IntPtrInput
	// The number of instance shards; this parameter does not need to be configured for standard version instances; for cluster version instances, the number of shards ranges from: [`1`, `3`, `5`, `8`, `12`, `16`, ` 24  `, `32`, `40`, `48`, `64`, `80`, `96`, `128`].
	RedisShardNum pulumi.IntPtrInput
	// ID of replica nodes available zone. This is not required for standalone and master slave versions. NOTE: Removing some of the same zone of replicas (e.g. removing 100001 of [100001, 100001, 100002]) will pick the first hit to remove.
	ReplicaZoneIds pulumi.IntArrayInput
	// Whether copy read-only is supported, Redis 2.8 Standard Edition and CKV Standard Edition do not support replica read-only, turn on replica read-only, the instance will automatically read and write separate, write requests are routed to the primary node, read requests are routed to the replica node, if you need to open replica read-only, the recommended number of replicas >=2.
	ReplicasReadOnly pulumi.BoolPtrInput
	// ID of security group. If both vpcId and subnetId are not set, this argument should not be set either.
	SecurityGroups pulumi.StringArrayInput
	// Specifies which subnet the instance should belong to. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	SubnetId pulumi.StringPtrInput
	// Instance tags.
	Tags pulumi.MapInput
	// It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `clusterCkv`,`cluster_redis5.0`,`clusterRedis`,`masterSlaveCkv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`masterSlaveRedis`,`standaloneRedis`, specific region support specific types, need to refer data `Redis.getZoneConfig`.
	//
	// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
	Type pulumi.StringPtrInput
	// Instance type. Available values reference data source `Redis.getZoneConfig` or [document](https://intl.cloud.tencent.com/document/product/239/32069), toggle immediately when modified.
	TypeId pulumi.IntPtrInput
	// ID of the vpc with which the instance is to be associated. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
	VpcId pulumi.StringPtrInput
	// Switching mode: `1`-maintenance time window switching, `2`-immediate switching, default value `2`.
	WaitSwitch pulumi.IntPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Auto-renew flag. 0 - default state (manual renewal); 1 - automatic renewal; 2 - explicit no automatic renewal.
func (o InstanceOutput) AutoRenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.AutoRenewFlag }).(pulumi.IntPtrOutput)
}

// The available zone ID of an instance to be created, please refer to `tencentcloud_redis_zone_config.list`.
func (o InstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The charge type of instance. Valid values: `PREPAID` and `POSTPAID`. Default value is `POSTPAID`. Note: TencentCloud International only supports `POSTPAID`. Caution that update operation on this field will delete old instances and create new with new charge type.
func (o InstanceOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// The time when the instance was created.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Dedicated Cluster ID.
func (o InstanceOutput) DedicatedClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DedicatedClusterId }).(pulumi.StringOutput)
}

// Indicate whether to delete Redis instance directly or not. Default is false. If set true, the instance will be deleted instead of staying recycle bin.
func (o InstanceOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// IP address of an instance. When the `operationNetwork` is `changeVip`, this parameter needs to be configured.
func (o InstanceOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// The memory volume of an available instance(in MB), please refer to `tencentcloud_redis_zone_config.list[zone].shard_memories`. When redis is standard type, it represents total memory size of the instance; when Redis is cluster type, it represents memory size of per sharding. `512MB` is supported only in master-slave instance.
func (o InstanceOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.MemSize }).(pulumi.IntOutput)
}

// Instance name.
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the redis instance support no-auth access. NOTE: Only available in private cloud environment.
func (o InstanceOutput) NoAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.NoAuth }).(pulumi.BoolPtrOutput)
}

// Readonly Primary/Replica nodes.
func (o InstanceOutput) NodeInfos() InstanceNodeInfoArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNodeInfoArrayOutput { return v.NodeInfos }).(InstanceNodeInfoArrayOutput)
}

// Refers to the category of the pre-modified network, including: `changeVip`: refers to switching the private network, including its intranet IPv4 address and port; `changeVpc`: refers to switching the subnet to which the private network belongs; `changeBaseToVpc`: refers to switching the basic network to a private network; `changeVPort`: refers to only modifying the instance network port.
func (o InstanceOutput) OperationNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.OperationNetwork }).(pulumi.StringPtrOutput)
}

// Specify params template id. If not set, will use default template.
func (o InstanceOutput) ParamsTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ParamsTemplateId }).(pulumi.StringPtrOutput)
}

// Password for a Redis user, which should be 8 to 16 characters. NOTE: Only `no_auth=true` specified can make password empty.
func (o InstanceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The port used to access a redis instance. The default value is 6379. When the `operationNetwork` is `changeVPort` or `changeVip`, this parameter needs to be configured.
func (o InstanceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

// The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when chargeType is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
func (o InstanceOutput) PrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.PrepaidPeriod }).(pulumi.IntPtrOutput)
}

// Specify the product version of the instance. `local`: Local disk version, `cloud`: Cloud disk version, `cdc`: Exclusive cluster version. Default is `local`.
func (o InstanceOutput) ProductVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProductVersion }).(pulumi.StringOutput)
}

// Specifies which project the instance should belong to.
func (o InstanceOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// Original intranet IPv4 address retention time: unit: day, value range: `0`, `1`, `2`, `3`, `7`, `15`.
func (o InstanceOutput) Recycle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Recycle }).(pulumi.IntPtrOutput)
}

// Exclusive cluster ID. When the `productVersion` is set to `cdc`, this parameter must be set.
func (o InstanceOutput) RedisClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.RedisClusterId }).(pulumi.StringOutput)
}

// The number of instance copies. This is not required for standalone and master slave versions and must equal to count of `replicaZoneIds`, Non-multi-AZ does not require `replicaZoneIds`; Redis memory version 4.0, 5.0, 6.2 standard architecture and cluster architecture support the number of copies in the range [1, 2, 3, 4, 5]; Redis 2.8 standard version and CKV standard version only support 1 copy.
func (o InstanceOutput) RedisReplicasNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.RedisReplicasNum }).(pulumi.IntPtrOutput)
}

// The number of instance shards; this parameter does not need to be configured for standard version instances; for cluster version instances, the number of shards ranges from: [`1`, `3`, `5`, `8`, `12`, `16`, ` 24  `, `32`, `40`, `48`, `64`, `80`, `96`, `128`].
func (o InstanceOutput) RedisShardNum() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.RedisShardNum }).(pulumi.IntOutput)
}

// ID of replica nodes available zone. This is not required for standalone and master slave versions. NOTE: Removing some of the same zone of replicas (e.g. removing 100001 of [100001, 100001, 100002]) will pick the first hit to remove.
func (o InstanceOutput) ReplicaZoneIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntArrayOutput { return v.ReplicaZoneIds }).(pulumi.IntArrayOutput)
}

// Whether copy read-only is supported, Redis 2.8 Standard Edition and CKV Standard Edition do not support replica read-only, turn on replica read-only, the instance will automatically read and write separate, write requests are routed to the primary node, read requests are routed to the replica node, if you need to open replica read-only, the recommended number of replicas >=2.
func (o InstanceOutput) ReplicasReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.ReplicasReadOnly }).(pulumi.BoolOutput)
}

// ID of security group. If both vpcId and subnetId are not set, this argument should not be set either.
func (o InstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Current status of an instance, maybe: init, processing, online, isolate and todelete.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies which subnet the instance should belong to. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Instance tags.
func (o InstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Instance) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// It has been deprecated from version 1.33.1. Please use 'type_id' instead. Instance type. Available values: `clusterCkv`,`cluster_redis5.0`,`clusterRedis`,`masterSlaveCkv`,`master_slave_redis4.0`,`master_slave_redis5.0`,`masterSlaveRedis`,`standaloneRedis`, specific region support specific types, need to refer data `Redis.getZoneConfig`.
//
// Deprecated: It has been deprecated from version 1.33.1. Please use 'type_id' instead.
func (o InstanceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Instance type. Available values reference data source `Redis.getZoneConfig` or [document](https://intl.cloud.tencent.com/document/product/239/32069), toggle immediately when modified.
func (o InstanceOutput) TypeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.TypeId }).(pulumi.IntPtrOutput)
}

// ID of the vpc with which the instance is to be associated. When the `operationNetwork` is `changeVpc` or `changeBaseToVpc`, this parameter needs to be configured.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// Switching mode: `1`-maintenance time window switching, `2`-immediate switching, default value `2`.
func (o InstanceOutput) WaitSwitch() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.WaitSwitch }).(pulumi.IntPtrOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
