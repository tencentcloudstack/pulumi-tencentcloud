// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package availability

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the available zones in current region. Must set product param to fetch the product infomations(e.g. => cvm, vpc). By default only `AVAILABLE` zones will be returned, but `UNAVAILABLE` zones can also be fetched when `includeUnavailable` is specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "cvm",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetZonesByProduct(ctx *pulumi.Context, args *GetZonesByProductArgs, opts ...pulumi.InvokeOption) (*GetZonesByProductResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZonesByProductResult
	err := ctx.Invoke("tencentcloud:Availability/getZonesByProduct:getZonesByProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZonesByProduct.
type GetZonesByProductArgs struct {
	// A bool variable indicates that the query will include `UNAVAILABLE` zones.
	IncludeUnavailable *bool `pulumi:"includeUnavailable"`
	// When specified, only the zone with the exactly name match will be returned.
	Name *string `pulumi:"name"`
	// A string variable indicates that the query will use product information.
	Product string `pulumi:"product"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getZonesByProduct.
type GetZonesByProductResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string `pulumi:"id"`
	IncludeUnavailable *bool  `pulumi:"includeUnavailable"`
	// The name of the zone, like `ap-guangzhou-3`.
	Name             *string `pulumi:"name"`
	Product          string  `pulumi:"product"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// A list of zones will be exported and its every element contains the following attributes:
	Zones []GetZonesByProductZone `pulumi:"zones"`
}

func GetZonesByProductOutput(ctx *pulumi.Context, args GetZonesByProductOutputArgs, opts ...pulumi.InvokeOption) GetZonesByProductResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZonesByProductResult, error) {
			args := v.(GetZonesByProductArgs)
			r, err := GetZonesByProduct(ctx, &args, opts...)
			var s GetZonesByProductResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZonesByProductResultOutput)
}

// A collection of arguments for invoking getZonesByProduct.
type GetZonesByProductOutputArgs struct {
	// A bool variable indicates that the query will include `UNAVAILABLE` zones.
	IncludeUnavailable pulumi.BoolPtrInput `pulumi:"includeUnavailable"`
	// When specified, only the zone with the exactly name match will be returned.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A string variable indicates that the query will use product information.
	Product pulumi.StringInput `pulumi:"product"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetZonesByProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesByProductArgs)(nil)).Elem()
}

// A collection of values returned by getZonesByProduct.
type GetZonesByProductResultOutput struct{ *pulumi.OutputState }

func (GetZonesByProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesByProductResult)(nil)).Elem()
}

func (o GetZonesByProductResultOutput) ToGetZonesByProductResultOutput() GetZonesByProductResultOutput {
	return o
}

func (o GetZonesByProductResultOutput) ToGetZonesByProductResultOutputWithContext(ctx context.Context) GetZonesByProductResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetZonesByProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesByProductResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZonesByProductResultOutput) IncludeUnavailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZonesByProductResult) *bool { return v.IncludeUnavailable }).(pulumi.BoolPtrOutput)
}

// The name of the zone, like `ap-guangzhou-3`.
func (o GetZonesByProductResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesByProductResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetZonesByProductResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesByProductResult) string { return v.Product }).(pulumi.StringOutput)
}

func (o GetZonesByProductResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesByProductResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// A list of zones will be exported and its every element contains the following attributes:
func (o GetZonesByProductResultOutput) Zones() GetZonesByProductZoneArrayOutput {
	return o.ApplyT(func(v GetZonesByProductResult) []GetZonesByProductZone { return v.Zones }).(GetZonesByProductZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZonesByProductResultOutput{})
}
