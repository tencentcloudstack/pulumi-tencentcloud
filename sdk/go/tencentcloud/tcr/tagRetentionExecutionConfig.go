// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tcr

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to configure a tcr tag retention execution.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tcr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tcr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleInstance, err := Tcr.NewInstance(ctx, "exampleInstance", &Tcr.InstanceArgs{
//				InstanceType: pulumi.String("basic"),
//				DeleteBucket: pulumi.Bool(true),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNamespace, err := Tcr.NewNamespace(ctx, "exampleNamespace", &Tcr.NamespaceArgs{
//				InstanceId:   exampleInstance.ID(),
//				IsPublic:     pulumi.Bool(true),
//				IsAutoScan:   pulumi.Bool(true),
//				IsPreventVul: pulumi.Bool(true),
//				Severity:     pulumi.String("medium"),
//				CveWhitelistItems: tcr.NamespaceCveWhitelistItemArray{
//					&tcr.NamespaceCveWhitelistItemArgs{
//						CveId: pulumi.String("cve-xxxxx"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleTagRetentionRule, err := Tcr.NewTagRetentionRule(ctx, "exampleTagRetentionRule", &Tcr.TagRetentionRuleArgs{
//				RegistryId:    exampleInstance.ID(),
//				NamespaceName: exampleNamespace.Name,
//				RetentionRule: &tcr.TagRetentionRuleRetentionRuleArgs{
//					Key:   pulumi.String("nDaysSinceLastPush"),
//					Value: pulumi.Int(2),
//				},
//				CronSetting: pulumi.String("manual"),
//				Disabled:    pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Tcr.NewTagRetentionExecutionConfig(ctx, "exampleTagRetentionExecutionConfig", &Tcr.TagRetentionExecutionConfigArgs{
//				RegistryId:  exampleTagRetentionRule.RegistryId,
//				RetentionId: exampleTagRetentionRule.RetentionId,
//				DryRun:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type TagRetentionExecutionConfig struct {
	pulumi.CustomResourceState

	// Whether to simulate execution, the default value is false, that is, non-simulation execution.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// execution id.
	ExecutionId pulumi.IntOutput `pulumi:"executionId"`
	// instance id.
	RegistryId pulumi.StringOutput `pulumi:"registryId"`
	// retention id.
	RetentionId pulumi.IntOutput `pulumi:"retentionId"`
}

// NewTagRetentionExecutionConfig registers a new resource with the given unique name, arguments, and options.
func NewTagRetentionExecutionConfig(ctx *pulumi.Context,
	name string, args *TagRetentionExecutionConfigArgs, opts ...pulumi.ResourceOption) (*TagRetentionExecutionConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RegistryId == nil {
		return nil, errors.New("invalid value for required argument 'RegistryId'")
	}
	if args.RetentionId == nil {
		return nil, errors.New("invalid value for required argument 'RetentionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TagRetentionExecutionConfig
	err := ctx.RegisterResource("tencentcloud:Tcr/tagRetentionExecutionConfig:TagRetentionExecutionConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagRetentionExecutionConfig gets an existing TagRetentionExecutionConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagRetentionExecutionConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagRetentionExecutionConfigState, opts ...pulumi.ResourceOption) (*TagRetentionExecutionConfig, error) {
	var resource TagRetentionExecutionConfig
	err := ctx.ReadResource("tencentcloud:Tcr/tagRetentionExecutionConfig:TagRetentionExecutionConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagRetentionExecutionConfig resources.
type tagRetentionExecutionConfigState struct {
	// Whether to simulate execution, the default value is false, that is, non-simulation execution.
	DryRun *bool `pulumi:"dryRun"`
	// execution id.
	ExecutionId *int `pulumi:"executionId"`
	// instance id.
	RegistryId *string `pulumi:"registryId"`
	// retention id.
	RetentionId *int `pulumi:"retentionId"`
}

type TagRetentionExecutionConfigState struct {
	// Whether to simulate execution, the default value is false, that is, non-simulation execution.
	DryRun pulumi.BoolPtrInput
	// execution id.
	ExecutionId pulumi.IntPtrInput
	// instance id.
	RegistryId pulumi.StringPtrInput
	// retention id.
	RetentionId pulumi.IntPtrInput
}

func (TagRetentionExecutionConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagRetentionExecutionConfigState)(nil)).Elem()
}

type tagRetentionExecutionConfigArgs struct {
	// Whether to simulate execution, the default value is false, that is, non-simulation execution.
	DryRun *bool `pulumi:"dryRun"`
	// instance id.
	RegistryId string `pulumi:"registryId"`
	// retention id.
	RetentionId int `pulumi:"retentionId"`
}

// The set of arguments for constructing a TagRetentionExecutionConfig resource.
type TagRetentionExecutionConfigArgs struct {
	// Whether to simulate execution, the default value is false, that is, non-simulation execution.
	DryRun pulumi.BoolPtrInput
	// instance id.
	RegistryId pulumi.StringInput
	// retention id.
	RetentionId pulumi.IntInput
}

func (TagRetentionExecutionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagRetentionExecutionConfigArgs)(nil)).Elem()
}

type TagRetentionExecutionConfigInput interface {
	pulumi.Input

	ToTagRetentionExecutionConfigOutput() TagRetentionExecutionConfigOutput
	ToTagRetentionExecutionConfigOutputWithContext(ctx context.Context) TagRetentionExecutionConfigOutput
}

func (*TagRetentionExecutionConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**TagRetentionExecutionConfig)(nil)).Elem()
}

func (i *TagRetentionExecutionConfig) ToTagRetentionExecutionConfigOutput() TagRetentionExecutionConfigOutput {
	return i.ToTagRetentionExecutionConfigOutputWithContext(context.Background())
}

func (i *TagRetentionExecutionConfig) ToTagRetentionExecutionConfigOutputWithContext(ctx context.Context) TagRetentionExecutionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagRetentionExecutionConfigOutput)
}

// TagRetentionExecutionConfigArrayInput is an input type that accepts TagRetentionExecutionConfigArray and TagRetentionExecutionConfigArrayOutput values.
// You can construct a concrete instance of `TagRetentionExecutionConfigArrayInput` via:
//
//	TagRetentionExecutionConfigArray{ TagRetentionExecutionConfigArgs{...} }
type TagRetentionExecutionConfigArrayInput interface {
	pulumi.Input

	ToTagRetentionExecutionConfigArrayOutput() TagRetentionExecutionConfigArrayOutput
	ToTagRetentionExecutionConfigArrayOutputWithContext(context.Context) TagRetentionExecutionConfigArrayOutput
}

type TagRetentionExecutionConfigArray []TagRetentionExecutionConfigInput

func (TagRetentionExecutionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagRetentionExecutionConfig)(nil)).Elem()
}

func (i TagRetentionExecutionConfigArray) ToTagRetentionExecutionConfigArrayOutput() TagRetentionExecutionConfigArrayOutput {
	return i.ToTagRetentionExecutionConfigArrayOutputWithContext(context.Background())
}

func (i TagRetentionExecutionConfigArray) ToTagRetentionExecutionConfigArrayOutputWithContext(ctx context.Context) TagRetentionExecutionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagRetentionExecutionConfigArrayOutput)
}

// TagRetentionExecutionConfigMapInput is an input type that accepts TagRetentionExecutionConfigMap and TagRetentionExecutionConfigMapOutput values.
// You can construct a concrete instance of `TagRetentionExecutionConfigMapInput` via:
//
//	TagRetentionExecutionConfigMap{ "key": TagRetentionExecutionConfigArgs{...} }
type TagRetentionExecutionConfigMapInput interface {
	pulumi.Input

	ToTagRetentionExecutionConfigMapOutput() TagRetentionExecutionConfigMapOutput
	ToTagRetentionExecutionConfigMapOutputWithContext(context.Context) TagRetentionExecutionConfigMapOutput
}

type TagRetentionExecutionConfigMap map[string]TagRetentionExecutionConfigInput

func (TagRetentionExecutionConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagRetentionExecutionConfig)(nil)).Elem()
}

func (i TagRetentionExecutionConfigMap) ToTagRetentionExecutionConfigMapOutput() TagRetentionExecutionConfigMapOutput {
	return i.ToTagRetentionExecutionConfigMapOutputWithContext(context.Background())
}

func (i TagRetentionExecutionConfigMap) ToTagRetentionExecutionConfigMapOutputWithContext(ctx context.Context) TagRetentionExecutionConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagRetentionExecutionConfigMapOutput)
}

type TagRetentionExecutionConfigOutput struct{ *pulumi.OutputState }

func (TagRetentionExecutionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagRetentionExecutionConfig)(nil)).Elem()
}

func (o TagRetentionExecutionConfigOutput) ToTagRetentionExecutionConfigOutput() TagRetentionExecutionConfigOutput {
	return o
}

func (o TagRetentionExecutionConfigOutput) ToTagRetentionExecutionConfigOutputWithContext(ctx context.Context) TagRetentionExecutionConfigOutput {
	return o
}

// Whether to simulate execution, the default value is false, that is, non-simulation execution.
func (o TagRetentionExecutionConfigOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TagRetentionExecutionConfig) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// execution id.
func (o TagRetentionExecutionConfigOutput) ExecutionId() pulumi.IntOutput {
	return o.ApplyT(func(v *TagRetentionExecutionConfig) pulumi.IntOutput { return v.ExecutionId }).(pulumi.IntOutput)
}

// instance id.
func (o TagRetentionExecutionConfigOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagRetentionExecutionConfig) pulumi.StringOutput { return v.RegistryId }).(pulumi.StringOutput)
}

// retention id.
func (o TagRetentionExecutionConfigOutput) RetentionId() pulumi.IntOutput {
	return o.ApplyT(func(v *TagRetentionExecutionConfig) pulumi.IntOutput { return v.RetentionId }).(pulumi.IntOutput)
}

type TagRetentionExecutionConfigArrayOutput struct{ *pulumi.OutputState }

func (TagRetentionExecutionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagRetentionExecutionConfig)(nil)).Elem()
}

func (o TagRetentionExecutionConfigArrayOutput) ToTagRetentionExecutionConfigArrayOutput() TagRetentionExecutionConfigArrayOutput {
	return o
}

func (o TagRetentionExecutionConfigArrayOutput) ToTagRetentionExecutionConfigArrayOutputWithContext(ctx context.Context) TagRetentionExecutionConfigArrayOutput {
	return o
}

func (o TagRetentionExecutionConfigArrayOutput) Index(i pulumi.IntInput) TagRetentionExecutionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TagRetentionExecutionConfig {
		return vs[0].([]*TagRetentionExecutionConfig)[vs[1].(int)]
	}).(TagRetentionExecutionConfigOutput)
}

type TagRetentionExecutionConfigMapOutput struct{ *pulumi.OutputState }

func (TagRetentionExecutionConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagRetentionExecutionConfig)(nil)).Elem()
}

func (o TagRetentionExecutionConfigMapOutput) ToTagRetentionExecutionConfigMapOutput() TagRetentionExecutionConfigMapOutput {
	return o
}

func (o TagRetentionExecutionConfigMapOutput) ToTagRetentionExecutionConfigMapOutputWithContext(ctx context.Context) TagRetentionExecutionConfigMapOutput {
	return o
}

func (o TagRetentionExecutionConfigMapOutput) MapIndex(k pulumi.StringInput) TagRetentionExecutionConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TagRetentionExecutionConfig {
		return vs[0].(map[string]*TagRetentionExecutionConfig)[vs[1].(string)]
	}).(TagRetentionExecutionConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagRetentionExecutionConfigInput)(nil)).Elem(), &TagRetentionExecutionConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagRetentionExecutionConfigArrayInput)(nil)).Elem(), TagRetentionExecutionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagRetentionExecutionConfigMapInput)(nil)).Elem(), TagRetentionExecutionConfigMap{})
	pulumi.RegisterOutputType(TagRetentionExecutionConfigOutput{})
	pulumi.RegisterOutputType(TagRetentionExecutionConfigArrayOutput{})
	pulumi.RegisterOutputType(TagRetentionExecutionConfigMapOutput{})
}
