// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tcr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of tcr imageManifests
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tcr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tcr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tcr.GetImageManifests(ctx, &tcr.GetImageManifestsArgs{
//				ImageVersion:   "v1",
//				NamespaceName:  fmt.Sprintf("%v%v", "%", "s"),
//				RegistryId:     fmt.Sprintf("%v%v", "%", "s"),
//				RepositoryName: fmt.Sprintf("%v%v", "%", "s"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetImageManifests(ctx *pulumi.Context, args *GetImageManifestsArgs, opts ...pulumi.InvokeOption) (*GetImageManifestsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetImageManifestsResult
	err := ctx.Invoke("tencentcloud:Tcr/getImageManifests:getImageManifests", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageManifests.
type GetImageManifestsArgs struct {
	// mirror version.
	ImageVersion string `pulumi:"imageVersion"`
	// namespace name.
	NamespaceName string `pulumi:"namespaceName"`
	// instance ID.
	RegistryId string `pulumi:"registryId"`
	// mirror warehouse name.
	RepositoryName string `pulumi:"repositoryName"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getImageManifests.
type GetImageManifestsResult struct {
	// configuration information of the image.
	Config string `pulumi:"config"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	ImageVersion string `pulumi:"imageVersion"`
	// Manifest information of the image.
	Manifest         string  `pulumi:"manifest"`
	NamespaceName    string  `pulumi:"namespaceName"`
	RegistryId       string  `pulumi:"registryId"`
	RepositoryName   string  `pulumi:"repositoryName"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetImageManifestsOutput(ctx *pulumi.Context, args GetImageManifestsOutputArgs, opts ...pulumi.InvokeOption) GetImageManifestsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImageManifestsResult, error) {
			args := v.(GetImageManifestsArgs)
			r, err := GetImageManifests(ctx, &args, opts...)
			var s GetImageManifestsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImageManifestsResultOutput)
}

// A collection of arguments for invoking getImageManifests.
type GetImageManifestsOutputArgs struct {
	// mirror version.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// namespace name.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// instance ID.
	RegistryId pulumi.StringInput `pulumi:"registryId"`
	// mirror warehouse name.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetImageManifestsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestsArgs)(nil)).Elem()
}

// A collection of values returned by getImageManifests.
type GetImageManifestsResultOutput struct{ *pulumi.OutputState }

func (GetImageManifestsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageManifestsResult)(nil)).Elem()
}

func (o GetImageManifestsResultOutput) ToGetImageManifestsResultOutput() GetImageManifestsResultOutput {
	return o
}

func (o GetImageManifestsResultOutput) ToGetImageManifestsResultOutputWithContext(ctx context.Context) GetImageManifestsResultOutput {
	return o
}

// configuration information of the image.
func (o GetImageManifestsResultOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.Config }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetImageManifestsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImageManifestsResultOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// Manifest information of the image.
func (o GetImageManifestsResultOutput) Manifest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.Manifest }).(pulumi.StringOutput)
}

func (o GetImageManifestsResultOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.NamespaceName }).(pulumi.StringOutput)
}

func (o GetImageManifestsResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o GetImageManifestsResultOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageManifestsResult) string { return v.RepositoryName }).(pulumi.StringOutput)
}

func (o GetImageManifestsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImageManifestsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImageManifestsResultOutput{})
}
