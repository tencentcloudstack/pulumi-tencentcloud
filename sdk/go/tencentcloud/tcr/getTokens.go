// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tcr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of TCR tokens.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tcr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tcr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tcr.GetTokens(ctx, &tcr.GetTokensArgs{
//				InstanceId: "cls-satg5125",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTokens(ctx *pulumi.Context, args *GetTokensArgs, opts ...pulumi.InvokeOption) (*GetTokensResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTokensResult
	err := ctx.Invoke("tencentcloud:Tcr/getTokens:getTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTokens.
type GetTokensArgs struct {
	// ID of the instance that the token belongs to.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// ID of the TCR token to query.
	TokenId *string `pulumi:"tokenId"`
}

// A collection of values returned by getTokens.
type GetTokensResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Id of TCR token.
	TokenId *string `pulumi:"tokenId"`
	// Information list of the dedicated TCR tokens.
	TokenLists []GetTokensTokenList `pulumi:"tokenLists"`
}

func GetTokensOutput(ctx *pulumi.Context, args GetTokensOutputArgs, opts ...pulumi.InvokeOption) GetTokensResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTokensResult, error) {
			args := v.(GetTokensArgs)
			r, err := GetTokens(ctx, &args, opts...)
			var s GetTokensResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTokensResultOutput)
}

// A collection of arguments for invoking getTokens.
type GetTokensOutputArgs struct {
	// ID of the instance that the token belongs to.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// ID of the TCR token to query.
	TokenId pulumi.StringPtrInput `pulumi:"tokenId"`
}

func (GetTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokensArgs)(nil)).Elem()
}

// A collection of values returned by getTokens.
type GetTokensResultOutput struct{ *pulumi.OutputState }

func (GetTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokensResult)(nil)).Elem()
}

func (o GetTokensResultOutput) ToGetTokensResultOutput() GetTokensResultOutput {
	return o
}

func (o GetTokensResultOutput) ToGetTokensResultOutputWithContext(ctx context.Context) GetTokensResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTokensResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTokensResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetTokensResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTokensResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Id of TCR token.
func (o GetTokensResultOutput) TokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTokensResult) *string { return v.TokenId }).(pulumi.StringPtrOutput)
}

// Information list of the dedicated TCR tokens.
func (o GetTokensResultOutput) TokenLists() GetTokensTokenListArrayOutput {
	return o.ApplyT(func(v GetTokensResult) []GetTokensTokenList { return v.TokenLists }).(GetTokensTokenListArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTokensResultOutput{})
}
