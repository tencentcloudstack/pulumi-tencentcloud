// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of rum logExportList
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rum.GetLogExportList(ctx, &rum.GetLogExportListArgs{
//				ProjectId: 1,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogExportList(ctx *pulumi.Context, args *GetLogExportListArgs, opts ...pulumi.InvokeOption) (*GetLogExportListResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetLogExportListResult
	err := ctx.Invoke("tencentcloud:Rum/getLogExportList:getLogExportList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogExportList.
type GetLogExportListArgs struct {
	// Project ID.
	ProjectId int `pulumi:"projectId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getLogExportList.
type GetLogExportListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	ProjectId int    `pulumi:"projectId"`
	// Return result.
	Result           string  `pulumi:"result"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetLogExportListOutput(ctx *pulumi.Context, args GetLogExportListOutputArgs, opts ...pulumi.InvokeOption) GetLogExportListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogExportListResult, error) {
			args := v.(GetLogExportListArgs)
			r, err := GetLogExportList(ctx, &args, opts...)
			var s GetLogExportListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogExportListResultOutput)
}

// A collection of arguments for invoking getLogExportList.
type GetLogExportListOutputArgs struct {
	// Project ID.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetLogExportListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogExportListArgs)(nil)).Elem()
}

// A collection of values returned by getLogExportList.
type GetLogExportListResultOutput struct{ *pulumi.OutputState }

func (GetLogExportListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogExportListResult)(nil)).Elem()
}

func (o GetLogExportListResultOutput) ToGetLogExportListResultOutput() GetLogExportListResultOutput {
	return o
}

func (o GetLogExportListResultOutput) ToGetLogExportListResultOutputWithContext(ctx context.Context) GetLogExportListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogExportListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogExportListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLogExportListResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogExportListResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Return result.
func (o GetLogExportListResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogExportListResult) string { return v.Result }).(pulumi.StringOutput)
}

func (o GetLogExportListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogExportListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogExportListResultOutput{})
}
