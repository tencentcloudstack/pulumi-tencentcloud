// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a rum tawInstance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rum.NewTawInstance(ctx, "tawInstance", &Rum.TawInstanceArgs{
//				AreaId:            pulumi.Int(1),
//				ChargeType:        pulumi.Int(1),
//				DataRetentionDays: pulumi.Int(30),
//				InstanceDesc:      pulumi.String("instanceDesc-1"),
//				InstanceName:      pulumi.String("instanceName-1"),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// rum taw_instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Rum/tawInstance:TawInstance taw_instance tawInstance_id
//
// ```
type TawInstance struct {
	pulumi.CustomResourceState

	// Region ID (at least greater than 0).
	AreaId pulumi.IntOutput `pulumi:"areaId"`
	// Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
	ChargeStatus pulumi.IntOutput `pulumi:"chargeStatus"`
	// Billing type (1: Pay-as-you-go).
	ChargeType pulumi.IntOutput `pulumi:"chargeType"`
	// Cluster ID.
	ClusterId pulumi.IntOutput `pulumi:"clusterId"`
	// Create time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Data retention period (at least greater than 0).
	DataRetentionDays pulumi.IntOutput `pulumi:"dataRetentionDays"`
	// Instance description (up to 1,024 bytes).
	InstanceDesc pulumi.StringPtrOutput `pulumi:"instanceDesc"`
	// Instance name (up to 255 bytes).
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
	InstanceStatus pulumi.IntOutput `pulumi:"instanceStatus"`
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// Update time.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewTawInstance registers a new resource with the given unique name, arguments, and options.
func NewTawInstance(ctx *pulumi.Context,
	name string, args *TawInstanceArgs, opts ...pulumi.ResourceOption) (*TawInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AreaId == nil {
		return nil, errors.New("invalid value for required argument 'AreaId'")
	}
	if args.ChargeType == nil {
		return nil, errors.New("invalid value for required argument 'ChargeType'")
	}
	if args.DataRetentionDays == nil {
		return nil, errors.New("invalid value for required argument 'DataRetentionDays'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TawInstance
	err := ctx.RegisterResource("tencentcloud:Rum/tawInstance:TawInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTawInstance gets an existing TawInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTawInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TawInstanceState, opts ...pulumi.ResourceOption) (*TawInstance, error) {
	var resource TawInstance
	err := ctx.ReadResource("tencentcloud:Rum/tawInstance:TawInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TawInstance resources.
type tawInstanceState struct {
	// Region ID (at least greater than 0).
	AreaId *int `pulumi:"areaId"`
	// Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
	ChargeStatus *int `pulumi:"chargeStatus"`
	// Billing type (1: Pay-as-you-go).
	ChargeType *int `pulumi:"chargeType"`
	// Cluster ID.
	ClusterId *int `pulumi:"clusterId"`
	// Create time.
	CreatedAt *string `pulumi:"createdAt"`
	// Data retention period (at least greater than 0).
	DataRetentionDays *int `pulumi:"dataRetentionDays"`
	// Instance description (up to 1,024 bytes).
	InstanceDesc *string `pulumi:"instanceDesc"`
	// Instance name (up to 255 bytes).
	InstanceName *string `pulumi:"instanceName"`
	// Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
	InstanceStatus *int `pulumi:"instanceStatus"`
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags map[string]interface{} `pulumi:"tags"`
	// Update time.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type TawInstanceState struct {
	// Region ID (at least greater than 0).
	AreaId pulumi.IntPtrInput
	// Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
	ChargeStatus pulumi.IntPtrInput
	// Billing type (1: Pay-as-you-go).
	ChargeType pulumi.IntPtrInput
	// Cluster ID.
	ClusterId pulumi.IntPtrInput
	// Create time.
	CreatedAt pulumi.StringPtrInput
	// Data retention period (at least greater than 0).
	DataRetentionDays pulumi.IntPtrInput
	// Instance description (up to 1,024 bytes).
	InstanceDesc pulumi.StringPtrInput
	// Instance name (up to 255 bytes).
	InstanceName pulumi.StringPtrInput
	// Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
	InstanceStatus pulumi.IntPtrInput
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags pulumi.MapInput
	// Update time.
	UpdatedAt pulumi.StringPtrInput
}

func (TawInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*tawInstanceState)(nil)).Elem()
}

type tawInstanceArgs struct {
	// Region ID (at least greater than 0).
	AreaId int `pulumi:"areaId"`
	// Billing type (1: Pay-as-you-go).
	ChargeType int `pulumi:"chargeType"`
	// Data retention period (at least greater than 0).
	DataRetentionDays int `pulumi:"dataRetentionDays"`
	// Instance description (up to 1,024 bytes).
	InstanceDesc *string `pulumi:"instanceDesc"`
	// Instance name (up to 255 bytes).
	InstanceName string `pulumi:"instanceName"`
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a TawInstance resource.
type TawInstanceArgs struct {
	// Region ID (at least greater than 0).
	AreaId pulumi.IntInput
	// Billing type (1: Pay-as-you-go).
	ChargeType pulumi.IntInput
	// Data retention period (at least greater than 0).
	DataRetentionDays pulumi.IntInput
	// Instance description (up to 1,024 bytes).
	InstanceDesc pulumi.StringPtrInput
	// Instance name (up to 255 bytes).
	InstanceName pulumi.StringInput
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags pulumi.MapInput
}

func (TawInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tawInstanceArgs)(nil)).Elem()
}

type TawInstanceInput interface {
	pulumi.Input

	ToTawInstanceOutput() TawInstanceOutput
	ToTawInstanceOutputWithContext(ctx context.Context) TawInstanceOutput
}

func (*TawInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**TawInstance)(nil)).Elem()
}

func (i *TawInstance) ToTawInstanceOutput() TawInstanceOutput {
	return i.ToTawInstanceOutputWithContext(context.Background())
}

func (i *TawInstance) ToTawInstanceOutputWithContext(ctx context.Context) TawInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TawInstanceOutput)
}

// TawInstanceArrayInput is an input type that accepts TawInstanceArray and TawInstanceArrayOutput values.
// You can construct a concrete instance of `TawInstanceArrayInput` via:
//
//	TawInstanceArray{ TawInstanceArgs{...} }
type TawInstanceArrayInput interface {
	pulumi.Input

	ToTawInstanceArrayOutput() TawInstanceArrayOutput
	ToTawInstanceArrayOutputWithContext(context.Context) TawInstanceArrayOutput
}

type TawInstanceArray []TawInstanceInput

func (TawInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TawInstance)(nil)).Elem()
}

func (i TawInstanceArray) ToTawInstanceArrayOutput() TawInstanceArrayOutput {
	return i.ToTawInstanceArrayOutputWithContext(context.Background())
}

func (i TawInstanceArray) ToTawInstanceArrayOutputWithContext(ctx context.Context) TawInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TawInstanceArrayOutput)
}

// TawInstanceMapInput is an input type that accepts TawInstanceMap and TawInstanceMapOutput values.
// You can construct a concrete instance of `TawInstanceMapInput` via:
//
//	TawInstanceMap{ "key": TawInstanceArgs{...} }
type TawInstanceMapInput interface {
	pulumi.Input

	ToTawInstanceMapOutput() TawInstanceMapOutput
	ToTawInstanceMapOutputWithContext(context.Context) TawInstanceMapOutput
}

type TawInstanceMap map[string]TawInstanceInput

func (TawInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TawInstance)(nil)).Elem()
}

func (i TawInstanceMap) ToTawInstanceMapOutput() TawInstanceMapOutput {
	return i.ToTawInstanceMapOutputWithContext(context.Background())
}

func (i TawInstanceMap) ToTawInstanceMapOutputWithContext(ctx context.Context) TawInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TawInstanceMapOutput)
}

type TawInstanceOutput struct{ *pulumi.OutputState }

func (TawInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TawInstance)(nil)).Elem()
}

func (o TawInstanceOutput) ToTawInstanceOutput() TawInstanceOutput {
	return o
}

func (o TawInstanceOutput) ToTawInstanceOutputWithContext(ctx context.Context) TawInstanceOutput {
	return o
}

// Region ID (at least greater than 0).
func (o TawInstanceOutput) AreaId() pulumi.IntOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.IntOutput { return v.AreaId }).(pulumi.IntOutput)
}

// Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
func (o TawInstanceOutput) ChargeStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.IntOutput { return v.ChargeStatus }).(pulumi.IntOutput)
}

// Billing type (1: Pay-as-you-go).
func (o TawInstanceOutput) ChargeType() pulumi.IntOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.IntOutput { return v.ChargeType }).(pulumi.IntOutput)
}

// Cluster ID.
func (o TawInstanceOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.IntOutput { return v.ClusterId }).(pulumi.IntOutput)
}

// Create time.
func (o TawInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Data retention period (at least greater than 0).
func (o TawInstanceOutput) DataRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.IntOutput { return v.DataRetentionDays }).(pulumi.IntOutput)
}

// Instance description (up to 1,024 bytes).
func (o TawInstanceOutput) InstanceDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.StringPtrOutput { return v.InstanceDesc }).(pulumi.StringPtrOutput)
}

// Instance name (up to 255 bytes).
func (o TawInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
func (o TawInstanceOutput) InstanceStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.IntOutput { return v.InstanceStatus }).(pulumi.IntOutput)
}

// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
func (o TawInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// Update time.
func (o TawInstanceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TawInstance) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TawInstanceArrayOutput struct{ *pulumi.OutputState }

func (TawInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TawInstance)(nil)).Elem()
}

func (o TawInstanceArrayOutput) ToTawInstanceArrayOutput() TawInstanceArrayOutput {
	return o
}

func (o TawInstanceArrayOutput) ToTawInstanceArrayOutputWithContext(ctx context.Context) TawInstanceArrayOutput {
	return o
}

func (o TawInstanceArrayOutput) Index(i pulumi.IntInput) TawInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TawInstance {
		return vs[0].([]*TawInstance)[vs[1].(int)]
	}).(TawInstanceOutput)
}

type TawInstanceMapOutput struct{ *pulumi.OutputState }

func (TawInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TawInstance)(nil)).Elem()
}

func (o TawInstanceMapOutput) ToTawInstanceMapOutput() TawInstanceMapOutput {
	return o
}

func (o TawInstanceMapOutput) ToTawInstanceMapOutputWithContext(ctx context.Context) TawInstanceMapOutput {
	return o
}

func (o TawInstanceMapOutput) MapIndex(k pulumi.StringInput) TawInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TawInstance {
		return vs[0].(map[string]*TawInstance)[vs[1].(string)]
	}).(TawInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TawInstanceInput)(nil)).Elem(), &TawInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*TawInstanceArrayInput)(nil)).Elem(), TawInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TawInstanceMapInput)(nil)).Elem(), TawInstanceMap{})
	pulumi.RegisterOutputType(TawInstanceOutput{})
	pulumi.RegisterOutputType(TawInstanceArrayOutput{})
	pulumi.RegisterOutputType(TawInstanceMapOutput{})
}
