// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of rum whitelist
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rum.GetWhitelist(ctx, &rum.GetWhitelistArgs{
//				InstanceId: "rum-pasZKEI3RLgakj",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWhitelist(ctx *pulumi.Context, args *LookupWhitelistArgs, opts ...pulumi.InvokeOption) (*LookupWhitelistResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupWhitelistResult
	err := ctx.Invoke("tencentcloud:Rum/getWhitelist:getWhitelist", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWhitelist.
type LookupWhitelistArgs struct {
	// Instance ID, such as taw-123.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getWhitelist.
type LookupWhitelistResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// While list.
	WhitelistSets []GetWhitelistWhitelistSet `pulumi:"whitelistSets"`
}

func LookupWhitelistOutput(ctx *pulumi.Context, args LookupWhitelistOutputArgs, opts ...pulumi.InvokeOption) LookupWhitelistResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWhitelistResult, error) {
			args := v.(LookupWhitelistArgs)
			r, err := LookupWhitelist(ctx, &args, opts...)
			var s LookupWhitelistResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWhitelistResultOutput)
}

// A collection of arguments for invoking getWhitelist.
type LookupWhitelistOutputArgs struct {
	// Instance ID, such as taw-123.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (LookupWhitelistOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWhitelistArgs)(nil)).Elem()
}

// A collection of values returned by getWhitelist.
type LookupWhitelistResultOutput struct{ *pulumi.OutputState }

func (LookupWhitelistResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWhitelistResult)(nil)).Elem()
}

func (o LookupWhitelistResultOutput) ToLookupWhitelistResultOutput() LookupWhitelistResultOutput {
	return o
}

func (o LookupWhitelistResultOutput) ToLookupWhitelistResultOutputWithContext(ctx context.Context) LookupWhitelistResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWhitelistResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWhitelistResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWhitelistResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWhitelistResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupWhitelistResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWhitelistResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// While list.
func (o LookupWhitelistResultOutput) WhitelistSets() GetWhitelistWhitelistSetArrayOutput {
	return o.ApplyT(func(v LookupWhitelistResult) []GetWhitelistWhitelistSet { return v.WhitelistSets }).(GetWhitelistWhitelistSetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWhitelistResultOutput{})
}
