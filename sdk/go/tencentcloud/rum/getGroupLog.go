// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of rum groupLog
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rum.GetGroupLog(ctx, &rum.GetGroupLogArgs{
//				EndTime:    "1625454840000",
//				GroupField: "level",
//				OrderBy:    "desc",
//				ProjectId:  1,
//				Query:      "id:123 AND type:\"log\"",
//				StartTime:  "1625444040000",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroupLog(ctx *pulumi.Context, args *GetGroupLogArgs, opts ...pulumi.InvokeOption) (*GetGroupLogResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetGroupLogResult
	err := ctx.Invoke("tencentcloud:Rum/getGroupLog:getGroupLog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupLog.
type GetGroupLogArgs struct {
	// End time but is represented using a timestamp in milliseconds.
	EndTime string `pulumi:"endTime"`
	// The field used for group.
	GroupField string `pulumi:"groupField"`
	// Sorting method. `desc`:Descending order; `asc`: Ascending order.
	OrderBy string `pulumi:"orderBy"`
	// Project ID.
	ProjectId int `pulumi:"projectId"`
	// Log Query syntax statement.
	Query string `pulumi:"query"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Start time but is represented using a timestamp in milliseconds.
	StartTime string `pulumi:"startTime"`
}

// A collection of values returned by getGroupLog.
type GetGroupLogResult struct {
	EndTime    string `pulumi:"endTime"`
	GroupField string `pulumi:"groupField"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	OrderBy   string `pulumi:"orderBy"`
	ProjectId int    `pulumi:"projectId"`
	Query     string `pulumi:"query"`
	// Return value.
	Result           string  `pulumi:"result"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        string  `pulumi:"startTime"`
}

func GetGroupLogOutput(ctx *pulumi.Context, args GetGroupLogOutputArgs, opts ...pulumi.InvokeOption) GetGroupLogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupLogResult, error) {
			args := v.(GetGroupLogArgs)
			r, err := GetGroupLog(ctx, &args, opts...)
			var s GetGroupLogResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupLogResultOutput)
}

// A collection of arguments for invoking getGroupLog.
type GetGroupLogOutputArgs struct {
	// End time but is represented using a timestamp in milliseconds.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The field used for group.
	GroupField pulumi.StringInput `pulumi:"groupField"`
	// Sorting method. `desc`:Descending order; `asc`: Ascending order.
	OrderBy pulumi.StringInput `pulumi:"orderBy"`
	// Project ID.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Log Query syntax statement.
	Query pulumi.StringInput `pulumi:"query"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Start time but is represented using a timestamp in milliseconds.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetGroupLogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupLogArgs)(nil)).Elem()
}

// A collection of values returned by getGroupLog.
type GetGroupLogResultOutput struct{ *pulumi.OutputState }

func (GetGroupLogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupLogResult)(nil)).Elem()
}

func (o GetGroupLogResultOutput) ToGetGroupLogResultOutput() GetGroupLogResultOutput {
	return o
}

func (o GetGroupLogResultOutput) ToGetGroupLogResultOutputWithContext(ctx context.Context) GetGroupLogResultOutput {
	return o
}

func (o GetGroupLogResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetGroupLogResultOutput) GroupField() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.GroupField }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupLogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGroupLogResultOutput) OrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.OrderBy }).(pulumi.StringOutput)
}

func (o GetGroupLogResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupLogResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o GetGroupLogResultOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.Query }).(pulumi.StringOutput)
}

// Return value.
func (o GetGroupLogResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.Result }).(pulumi.StringOutput)
}

func (o GetGroupLogResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupLogResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetGroupLogResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLogResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupLogResultOutput{})
}
