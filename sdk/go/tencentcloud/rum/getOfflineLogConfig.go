// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of rum offlineLogConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rum.GetOfflineLogConfig(ctx, &rum.GetOfflineLogConfigArgs{
//				ProjectKey: "ZEYrYfvaYQ30jRdmPx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOfflineLogConfig(ctx *pulumi.Context, args *GetOfflineLogConfigArgs, opts ...pulumi.InvokeOption) (*GetOfflineLogConfigResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetOfflineLogConfigResult
	err := ctx.Invoke("tencentcloud:Rum/getOfflineLogConfig:getOfflineLogConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOfflineLogConfig.
type GetOfflineLogConfigArgs struct {
	// Unique project key for reporting.
	ProjectKey string `pulumi:"projectKey"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getOfflineLogConfig.
type GetOfflineLogConfigResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// API call information.
	Msg              string  `pulumi:"msg"`
	ProjectKey       string  `pulumi:"projectKey"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Unique identifier of the user to be listened on(aid or uin).
	UniqueIdSets []string `pulumi:"uniqueIdSets"`
}

func GetOfflineLogConfigOutput(ctx *pulumi.Context, args GetOfflineLogConfigOutputArgs, opts ...pulumi.InvokeOption) GetOfflineLogConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOfflineLogConfigResult, error) {
			args := v.(GetOfflineLogConfigArgs)
			r, err := GetOfflineLogConfig(ctx, &args, opts...)
			var s GetOfflineLogConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOfflineLogConfigResultOutput)
}

// A collection of arguments for invoking getOfflineLogConfig.
type GetOfflineLogConfigOutputArgs struct {
	// Unique project key for reporting.
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetOfflineLogConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfflineLogConfigArgs)(nil)).Elem()
}

// A collection of values returned by getOfflineLogConfig.
type GetOfflineLogConfigResultOutput struct{ *pulumi.OutputState }

func (GetOfflineLogConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfflineLogConfigResult)(nil)).Elem()
}

func (o GetOfflineLogConfigResultOutput) ToGetOfflineLogConfigResultOutput() GetOfflineLogConfigResultOutput {
	return o
}

func (o GetOfflineLogConfigResultOutput) ToGetOfflineLogConfigResultOutputWithContext(ctx context.Context) GetOfflineLogConfigResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetOfflineLogConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfflineLogConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// API call information.
func (o GetOfflineLogConfigResultOutput) Msg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfflineLogConfigResult) string { return v.Msg }).(pulumi.StringOutput)
}

func (o GetOfflineLogConfigResultOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfflineLogConfigResult) string { return v.ProjectKey }).(pulumi.StringOutput)
}

func (o GetOfflineLogConfigResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOfflineLogConfigResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Unique identifier of the user to be listened on(aid or uin).
func (o GetOfflineLogConfigResultOutput) UniqueIdSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOfflineLogConfigResult) []string { return v.UniqueIdSets }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOfflineLogConfigResultOutput{})
}
