// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a rum whitelist
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Rum"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rum.NewWhitelist(ctx, "whitelist", &Rum.WhitelistArgs{
//				InstanceId:   pulumi.String("rum-pasZKEI3RLgakj"),
//				Remark:       pulumi.String("white list remark"),
//				WhitelistUin: pulumi.String("20221122"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// rum whitelist can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Rum/whitelist:Whitelist whitelist whitelist_id
//
// ```
type Whitelist struct {
	pulumi.CustomResourceState

	// Business identifier.
	Aid pulumi.StringPtrOutput `pulumi:"aid"`
	// Creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Creator ID.
	CreateUser pulumi.StringOutput `pulumi:"createUser"`
	// Instance ID, such as taw-123.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Remarks.
	Remark pulumi.StringOutput `pulumi:"remark"`
	// End time.
	Ttl pulumi.StringOutput `pulumi:"ttl"`
	// uin: business identifier.
	WhitelistUin pulumi.StringOutput `pulumi:"whitelistUin"`
	// Auto-Increment allowlist ID.
	Wid pulumi.StringOutput `pulumi:"wid"`
}

// NewWhitelist registers a new resource with the given unique name, arguments, and options.
func NewWhitelist(ctx *pulumi.Context,
	name string, args *WhitelistArgs, opts ...pulumi.ResourceOption) (*Whitelist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Remark == nil {
		return nil, errors.New("invalid value for required argument 'Remark'")
	}
	if args.WhitelistUin == nil {
		return nil, errors.New("invalid value for required argument 'WhitelistUin'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Whitelist
	err := ctx.RegisterResource("tencentcloud:Rum/whitelist:Whitelist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWhitelist gets an existing Whitelist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWhitelist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WhitelistState, opts ...pulumi.ResourceOption) (*Whitelist, error) {
	var resource Whitelist
	err := ctx.ReadResource("tencentcloud:Rum/whitelist:Whitelist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Whitelist resources.
type whitelistState struct {
	// Business identifier.
	Aid *string `pulumi:"aid"`
	// Creation time.
	CreateTime *string `pulumi:"createTime"`
	// Creator ID.
	CreateUser *string `pulumi:"createUser"`
	// Instance ID, such as taw-123.
	InstanceId *string `pulumi:"instanceId"`
	// Remarks.
	Remark *string `pulumi:"remark"`
	// End time.
	Ttl *string `pulumi:"ttl"`
	// uin: business identifier.
	WhitelistUin *string `pulumi:"whitelistUin"`
	// Auto-Increment allowlist ID.
	Wid *string `pulumi:"wid"`
}

type WhitelistState struct {
	// Business identifier.
	Aid pulumi.StringPtrInput
	// Creation time.
	CreateTime pulumi.StringPtrInput
	// Creator ID.
	CreateUser pulumi.StringPtrInput
	// Instance ID, such as taw-123.
	InstanceId pulumi.StringPtrInput
	// Remarks.
	Remark pulumi.StringPtrInput
	// End time.
	Ttl pulumi.StringPtrInput
	// uin: business identifier.
	WhitelistUin pulumi.StringPtrInput
	// Auto-Increment allowlist ID.
	Wid pulumi.StringPtrInput
}

func (WhitelistState) ElementType() reflect.Type {
	return reflect.TypeOf((*whitelistState)(nil)).Elem()
}

type whitelistArgs struct {
	// Business identifier.
	Aid *string `pulumi:"aid"`
	// Instance ID, such as taw-123.
	InstanceId string `pulumi:"instanceId"`
	// Remarks.
	Remark string `pulumi:"remark"`
	// uin: business identifier.
	WhitelistUin string `pulumi:"whitelistUin"`
}

// The set of arguments for constructing a Whitelist resource.
type WhitelistArgs struct {
	// Business identifier.
	Aid pulumi.StringPtrInput
	// Instance ID, such as taw-123.
	InstanceId pulumi.StringInput
	// Remarks.
	Remark pulumi.StringInput
	// uin: business identifier.
	WhitelistUin pulumi.StringInput
}

func (WhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*whitelistArgs)(nil)).Elem()
}

type WhitelistInput interface {
	pulumi.Input

	ToWhitelistOutput() WhitelistOutput
	ToWhitelistOutputWithContext(ctx context.Context) WhitelistOutput
}

func (*Whitelist) ElementType() reflect.Type {
	return reflect.TypeOf((**Whitelist)(nil)).Elem()
}

func (i *Whitelist) ToWhitelistOutput() WhitelistOutput {
	return i.ToWhitelistOutputWithContext(context.Background())
}

func (i *Whitelist) ToWhitelistOutputWithContext(ctx context.Context) WhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WhitelistOutput)
}

// WhitelistArrayInput is an input type that accepts WhitelistArray and WhitelistArrayOutput values.
// You can construct a concrete instance of `WhitelistArrayInput` via:
//
//	WhitelistArray{ WhitelistArgs{...} }
type WhitelistArrayInput interface {
	pulumi.Input

	ToWhitelistArrayOutput() WhitelistArrayOutput
	ToWhitelistArrayOutputWithContext(context.Context) WhitelistArrayOutput
}

type WhitelistArray []WhitelistInput

func (WhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Whitelist)(nil)).Elem()
}

func (i WhitelistArray) ToWhitelistArrayOutput() WhitelistArrayOutput {
	return i.ToWhitelistArrayOutputWithContext(context.Background())
}

func (i WhitelistArray) ToWhitelistArrayOutputWithContext(ctx context.Context) WhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WhitelistArrayOutput)
}

// WhitelistMapInput is an input type that accepts WhitelistMap and WhitelistMapOutput values.
// You can construct a concrete instance of `WhitelistMapInput` via:
//
//	WhitelistMap{ "key": WhitelistArgs{...} }
type WhitelistMapInput interface {
	pulumi.Input

	ToWhitelistMapOutput() WhitelistMapOutput
	ToWhitelistMapOutputWithContext(context.Context) WhitelistMapOutput
}

type WhitelistMap map[string]WhitelistInput

func (WhitelistMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Whitelist)(nil)).Elem()
}

func (i WhitelistMap) ToWhitelistMapOutput() WhitelistMapOutput {
	return i.ToWhitelistMapOutputWithContext(context.Background())
}

func (i WhitelistMap) ToWhitelistMapOutputWithContext(ctx context.Context) WhitelistMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WhitelistMapOutput)
}

type WhitelistOutput struct{ *pulumi.OutputState }

func (WhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Whitelist)(nil)).Elem()
}

func (o WhitelistOutput) ToWhitelistOutput() WhitelistOutput {
	return o
}

func (o WhitelistOutput) ToWhitelistOutputWithContext(ctx context.Context) WhitelistOutput {
	return o
}

// Business identifier.
func (o WhitelistOutput) Aid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringPtrOutput { return v.Aid }).(pulumi.StringPtrOutput)
}

// Creation time.
func (o WhitelistOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Creator ID.
func (o WhitelistOutput) CreateUser() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.CreateUser }).(pulumi.StringOutput)
}

// Instance ID, such as taw-123.
func (o WhitelistOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Remarks.
func (o WhitelistOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.Remark }).(pulumi.StringOutput)
}

// End time.
func (o WhitelistOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.Ttl }).(pulumi.StringOutput)
}

// uin: business identifier.
func (o WhitelistOutput) WhitelistUin() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.WhitelistUin }).(pulumi.StringOutput)
}

// Auto-Increment allowlist ID.
func (o WhitelistOutput) Wid() pulumi.StringOutput {
	return o.ApplyT(func(v *Whitelist) pulumi.StringOutput { return v.Wid }).(pulumi.StringOutput)
}

type WhitelistArrayOutput struct{ *pulumi.OutputState }

func (WhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Whitelist)(nil)).Elem()
}

func (o WhitelistArrayOutput) ToWhitelistArrayOutput() WhitelistArrayOutput {
	return o
}

func (o WhitelistArrayOutput) ToWhitelistArrayOutputWithContext(ctx context.Context) WhitelistArrayOutput {
	return o
}

func (o WhitelistArrayOutput) Index(i pulumi.IntInput) WhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Whitelist {
		return vs[0].([]*Whitelist)[vs[1].(int)]
	}).(WhitelistOutput)
}

type WhitelistMapOutput struct{ *pulumi.OutputState }

func (WhitelistMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Whitelist)(nil)).Elem()
}

func (o WhitelistMapOutput) ToWhitelistMapOutput() WhitelistMapOutput {
	return o
}

func (o WhitelistMapOutput) ToWhitelistMapOutputWithContext(ctx context.Context) WhitelistMapOutput {
	return o
}

func (o WhitelistMapOutput) MapIndex(k pulumi.StringInput) WhitelistOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Whitelist {
		return vs[0].(map[string]*Whitelist)[vs[1].(string)]
	}).(WhitelistOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WhitelistInput)(nil)).Elem(), &Whitelist{})
	pulumi.RegisterInputType(reflect.TypeOf((*WhitelistArrayInput)(nil)).Elem(), WhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WhitelistMapInput)(nil)).Elem(), WhitelistMap{})
	pulumi.RegisterOutputType(WhitelistOutput{})
	pulumi.RegisterOutputType(WhitelistArrayOutput{})
	pulumi.RegisterOutputType(WhitelistMapOutput{})
}
