// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cbs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cbs snapshotSharePermission
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cbs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cbs.NewSnapshotSharePermission(ctx, "snapshotSharePermission", &Cbs.SnapshotSharePermissionArgs{
//				AccountIds: pulumi.StringArray{
//					pulumi.String("1xxxxxx"),
//					pulumi.String("2xxxxxx"),
//				},
//				SnapshotId: pulumi.String("snap-xxxxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cbs snapshot_share_permission can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cbs/snapshotSharePermission:SnapshotSharePermission snapshot_share_permission snap-xxxxxx
//
// ```
type SnapshotSharePermission struct {
	pulumi.CustomResourceState

	// List of account IDs with which a snapshot is shared. For the format of array-type parameters, see[API Introduction](https://cloud.tencent.com/document/api/213/568). You can find the account ID in[Account Information](https://console.cloud.tencent.com/developer).
	AccountIds pulumi.StringArrayOutput `pulumi:"accountIds"`
	// The ID of the snapshot to be queried. You can obtain this by using [DescribeSnapshots](https://cloud.tencent.com/document/api/362/15647).
	SnapshotId pulumi.StringOutput `pulumi:"snapshotId"`
}

// NewSnapshotSharePermission registers a new resource with the given unique name, arguments, and options.
func NewSnapshotSharePermission(ctx *pulumi.Context,
	name string, args *SnapshotSharePermissionArgs, opts ...pulumi.ResourceOption) (*SnapshotSharePermission, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountIds == nil {
		return nil, errors.New("invalid value for required argument 'AccountIds'")
	}
	if args.SnapshotId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SnapshotSharePermission
	err := ctx.RegisterResource("tencentcloud:Cbs/snapshotSharePermission:SnapshotSharePermission", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotSharePermission gets an existing SnapshotSharePermission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotSharePermission(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotSharePermissionState, opts ...pulumi.ResourceOption) (*SnapshotSharePermission, error) {
	var resource SnapshotSharePermission
	err := ctx.ReadResource("tencentcloud:Cbs/snapshotSharePermission:SnapshotSharePermission", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotSharePermission resources.
type snapshotSharePermissionState struct {
	// List of account IDs with which a snapshot is shared. For the format of array-type parameters, see[API Introduction](https://cloud.tencent.com/document/api/213/568). You can find the account ID in[Account Information](https://console.cloud.tencent.com/developer).
	AccountIds []string `pulumi:"accountIds"`
	// The ID of the snapshot to be queried. You can obtain this by using [DescribeSnapshots](https://cloud.tencent.com/document/api/362/15647).
	SnapshotId *string `pulumi:"snapshotId"`
}

type SnapshotSharePermissionState struct {
	// List of account IDs with which a snapshot is shared. For the format of array-type parameters, see[API Introduction](https://cloud.tencent.com/document/api/213/568). You can find the account ID in[Account Information](https://console.cloud.tencent.com/developer).
	AccountIds pulumi.StringArrayInput
	// The ID of the snapshot to be queried. You can obtain this by using [DescribeSnapshots](https://cloud.tencent.com/document/api/362/15647).
	SnapshotId pulumi.StringPtrInput
}

func (SnapshotSharePermissionState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotSharePermissionState)(nil)).Elem()
}

type snapshotSharePermissionArgs struct {
	// List of account IDs with which a snapshot is shared. For the format of array-type parameters, see[API Introduction](https://cloud.tencent.com/document/api/213/568). You can find the account ID in[Account Information](https://console.cloud.tencent.com/developer).
	AccountIds []string `pulumi:"accountIds"`
	// The ID of the snapshot to be queried. You can obtain this by using [DescribeSnapshots](https://cloud.tencent.com/document/api/362/15647).
	SnapshotId string `pulumi:"snapshotId"`
}

// The set of arguments for constructing a SnapshotSharePermission resource.
type SnapshotSharePermissionArgs struct {
	// List of account IDs with which a snapshot is shared. For the format of array-type parameters, see[API Introduction](https://cloud.tencent.com/document/api/213/568). You can find the account ID in[Account Information](https://console.cloud.tencent.com/developer).
	AccountIds pulumi.StringArrayInput
	// The ID of the snapshot to be queried. You can obtain this by using [DescribeSnapshots](https://cloud.tencent.com/document/api/362/15647).
	SnapshotId pulumi.StringInput
}

func (SnapshotSharePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotSharePermissionArgs)(nil)).Elem()
}

type SnapshotSharePermissionInput interface {
	pulumi.Input

	ToSnapshotSharePermissionOutput() SnapshotSharePermissionOutput
	ToSnapshotSharePermissionOutputWithContext(ctx context.Context) SnapshotSharePermissionOutput
}

func (*SnapshotSharePermission) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotSharePermission)(nil)).Elem()
}

func (i *SnapshotSharePermission) ToSnapshotSharePermissionOutput() SnapshotSharePermissionOutput {
	return i.ToSnapshotSharePermissionOutputWithContext(context.Background())
}

func (i *SnapshotSharePermission) ToSnapshotSharePermissionOutputWithContext(ctx context.Context) SnapshotSharePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotSharePermissionOutput)
}

// SnapshotSharePermissionArrayInput is an input type that accepts SnapshotSharePermissionArray and SnapshotSharePermissionArrayOutput values.
// You can construct a concrete instance of `SnapshotSharePermissionArrayInput` via:
//
//	SnapshotSharePermissionArray{ SnapshotSharePermissionArgs{...} }
type SnapshotSharePermissionArrayInput interface {
	pulumi.Input

	ToSnapshotSharePermissionArrayOutput() SnapshotSharePermissionArrayOutput
	ToSnapshotSharePermissionArrayOutputWithContext(context.Context) SnapshotSharePermissionArrayOutput
}

type SnapshotSharePermissionArray []SnapshotSharePermissionInput

func (SnapshotSharePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SnapshotSharePermission)(nil)).Elem()
}

func (i SnapshotSharePermissionArray) ToSnapshotSharePermissionArrayOutput() SnapshotSharePermissionArrayOutput {
	return i.ToSnapshotSharePermissionArrayOutputWithContext(context.Background())
}

func (i SnapshotSharePermissionArray) ToSnapshotSharePermissionArrayOutputWithContext(ctx context.Context) SnapshotSharePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotSharePermissionArrayOutput)
}

// SnapshotSharePermissionMapInput is an input type that accepts SnapshotSharePermissionMap and SnapshotSharePermissionMapOutput values.
// You can construct a concrete instance of `SnapshotSharePermissionMapInput` via:
//
//	SnapshotSharePermissionMap{ "key": SnapshotSharePermissionArgs{...} }
type SnapshotSharePermissionMapInput interface {
	pulumi.Input

	ToSnapshotSharePermissionMapOutput() SnapshotSharePermissionMapOutput
	ToSnapshotSharePermissionMapOutputWithContext(context.Context) SnapshotSharePermissionMapOutput
}

type SnapshotSharePermissionMap map[string]SnapshotSharePermissionInput

func (SnapshotSharePermissionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SnapshotSharePermission)(nil)).Elem()
}

func (i SnapshotSharePermissionMap) ToSnapshotSharePermissionMapOutput() SnapshotSharePermissionMapOutput {
	return i.ToSnapshotSharePermissionMapOutputWithContext(context.Background())
}

func (i SnapshotSharePermissionMap) ToSnapshotSharePermissionMapOutputWithContext(ctx context.Context) SnapshotSharePermissionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotSharePermissionMapOutput)
}

type SnapshotSharePermissionOutput struct{ *pulumi.OutputState }

func (SnapshotSharePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotSharePermission)(nil)).Elem()
}

func (o SnapshotSharePermissionOutput) ToSnapshotSharePermissionOutput() SnapshotSharePermissionOutput {
	return o
}

func (o SnapshotSharePermissionOutput) ToSnapshotSharePermissionOutputWithContext(ctx context.Context) SnapshotSharePermissionOutput {
	return o
}

// List of account IDs with which a snapshot is shared. For the format of array-type parameters, see[API Introduction](https://cloud.tencent.com/document/api/213/568). You can find the account ID in[Account Information](https://console.cloud.tencent.com/developer).
func (o SnapshotSharePermissionOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SnapshotSharePermission) pulumi.StringArrayOutput { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// The ID of the snapshot to be queried. You can obtain this by using [DescribeSnapshots](https://cloud.tencent.com/document/api/362/15647).
func (o SnapshotSharePermissionOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *SnapshotSharePermission) pulumi.StringOutput { return v.SnapshotId }).(pulumi.StringOutput)
}

type SnapshotSharePermissionArrayOutput struct{ *pulumi.OutputState }

func (SnapshotSharePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SnapshotSharePermission)(nil)).Elem()
}

func (o SnapshotSharePermissionArrayOutput) ToSnapshotSharePermissionArrayOutput() SnapshotSharePermissionArrayOutput {
	return o
}

func (o SnapshotSharePermissionArrayOutput) ToSnapshotSharePermissionArrayOutputWithContext(ctx context.Context) SnapshotSharePermissionArrayOutput {
	return o
}

func (o SnapshotSharePermissionArrayOutput) Index(i pulumi.IntInput) SnapshotSharePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SnapshotSharePermission {
		return vs[0].([]*SnapshotSharePermission)[vs[1].(int)]
	}).(SnapshotSharePermissionOutput)
}

type SnapshotSharePermissionMapOutput struct{ *pulumi.OutputState }

func (SnapshotSharePermissionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SnapshotSharePermission)(nil)).Elem()
}

func (o SnapshotSharePermissionMapOutput) ToSnapshotSharePermissionMapOutput() SnapshotSharePermissionMapOutput {
	return o
}

func (o SnapshotSharePermissionMapOutput) ToSnapshotSharePermissionMapOutputWithContext(ctx context.Context) SnapshotSharePermissionMapOutput {
	return o
}

func (o SnapshotSharePermissionMapOutput) MapIndex(k pulumi.StringInput) SnapshotSharePermissionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SnapshotSharePermission {
		return vs[0].(map[string]*SnapshotSharePermission)[vs[1].(string)]
	}).(SnapshotSharePermissionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotSharePermissionInput)(nil)).Elem(), &SnapshotSharePermission{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotSharePermissionArrayInput)(nil)).Elem(), SnapshotSharePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotSharePermissionMapInput)(nil)).Elem(), SnapshotSharePermissionMap{})
	pulumi.RegisterOutputType(SnapshotSharePermissionOutput{})
	pulumi.RegisterOutputType(SnapshotSharePermissionArrayOutput{})
	pulumi.RegisterOutputType(SnapshotSharePermissionMapOutput{})
}
