// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cbs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CBS snapshot policy attachment resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cbs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cbs.NewSnapshotPolicyAttachment(ctx, "foo", &Cbs.SnapshotPolicyAttachmentArgs{
//				StorageId:        pulumi.Any(tencentcloud_cbs_storage.Foo.Id),
//				SnapshotPolicyId: pulumi.Any(tencentcloud_cbs_snapshot_policy.Policy.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SnapshotPolicyAttachment struct {
	pulumi.CustomResourceState

	// ID of CBS snapshot policy.
	SnapshotPolicyId pulumi.StringOutput `pulumi:"snapshotPolicyId"`
	// ID of CBS.
	StorageId pulumi.StringOutput `pulumi:"storageId"`
}

// NewSnapshotPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewSnapshotPolicyAttachment(ctx *pulumi.Context,
	name string, args *SnapshotPolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*SnapshotPolicyAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SnapshotPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotPolicyId'")
	}
	if args.StorageId == nil {
		return nil, errors.New("invalid value for required argument 'StorageId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SnapshotPolicyAttachment
	err := ctx.RegisterResource("tencentcloud:Cbs/snapshotPolicyAttachment:SnapshotPolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotPolicyAttachment gets an existing SnapshotPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotPolicyAttachmentState, opts ...pulumi.ResourceOption) (*SnapshotPolicyAttachment, error) {
	var resource SnapshotPolicyAttachment
	err := ctx.ReadResource("tencentcloud:Cbs/snapshotPolicyAttachment:SnapshotPolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotPolicyAttachment resources.
type snapshotPolicyAttachmentState struct {
	// ID of CBS snapshot policy.
	SnapshotPolicyId *string `pulumi:"snapshotPolicyId"`
	// ID of CBS.
	StorageId *string `pulumi:"storageId"`
}

type SnapshotPolicyAttachmentState struct {
	// ID of CBS snapshot policy.
	SnapshotPolicyId pulumi.StringPtrInput
	// ID of CBS.
	StorageId pulumi.StringPtrInput
}

func (SnapshotPolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotPolicyAttachmentState)(nil)).Elem()
}

type snapshotPolicyAttachmentArgs struct {
	// ID of CBS snapshot policy.
	SnapshotPolicyId string `pulumi:"snapshotPolicyId"`
	// ID of CBS.
	StorageId string `pulumi:"storageId"`
}

// The set of arguments for constructing a SnapshotPolicyAttachment resource.
type SnapshotPolicyAttachmentArgs struct {
	// ID of CBS snapshot policy.
	SnapshotPolicyId pulumi.StringInput
	// ID of CBS.
	StorageId pulumi.StringInput
}

func (SnapshotPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotPolicyAttachmentArgs)(nil)).Elem()
}

type SnapshotPolicyAttachmentInput interface {
	pulumi.Input

	ToSnapshotPolicyAttachmentOutput() SnapshotPolicyAttachmentOutput
	ToSnapshotPolicyAttachmentOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentOutput
}

func (*SnapshotPolicyAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotPolicyAttachment)(nil)).Elem()
}

func (i *SnapshotPolicyAttachment) ToSnapshotPolicyAttachmentOutput() SnapshotPolicyAttachmentOutput {
	return i.ToSnapshotPolicyAttachmentOutputWithContext(context.Background())
}

func (i *SnapshotPolicyAttachment) ToSnapshotPolicyAttachmentOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPolicyAttachmentOutput)
}

// SnapshotPolicyAttachmentArrayInput is an input type that accepts SnapshotPolicyAttachmentArray and SnapshotPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `SnapshotPolicyAttachmentArrayInput` via:
//
//	SnapshotPolicyAttachmentArray{ SnapshotPolicyAttachmentArgs{...} }
type SnapshotPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToSnapshotPolicyAttachmentArrayOutput() SnapshotPolicyAttachmentArrayOutput
	ToSnapshotPolicyAttachmentArrayOutputWithContext(context.Context) SnapshotPolicyAttachmentArrayOutput
}

type SnapshotPolicyAttachmentArray []SnapshotPolicyAttachmentInput

func (SnapshotPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SnapshotPolicyAttachment)(nil)).Elem()
}

func (i SnapshotPolicyAttachmentArray) ToSnapshotPolicyAttachmentArrayOutput() SnapshotPolicyAttachmentArrayOutput {
	return i.ToSnapshotPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i SnapshotPolicyAttachmentArray) ToSnapshotPolicyAttachmentArrayOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPolicyAttachmentArrayOutput)
}

// SnapshotPolicyAttachmentMapInput is an input type that accepts SnapshotPolicyAttachmentMap and SnapshotPolicyAttachmentMapOutput values.
// You can construct a concrete instance of `SnapshotPolicyAttachmentMapInput` via:
//
//	SnapshotPolicyAttachmentMap{ "key": SnapshotPolicyAttachmentArgs{...} }
type SnapshotPolicyAttachmentMapInput interface {
	pulumi.Input

	ToSnapshotPolicyAttachmentMapOutput() SnapshotPolicyAttachmentMapOutput
	ToSnapshotPolicyAttachmentMapOutputWithContext(context.Context) SnapshotPolicyAttachmentMapOutput
}

type SnapshotPolicyAttachmentMap map[string]SnapshotPolicyAttachmentInput

func (SnapshotPolicyAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SnapshotPolicyAttachment)(nil)).Elem()
}

func (i SnapshotPolicyAttachmentMap) ToSnapshotPolicyAttachmentMapOutput() SnapshotPolicyAttachmentMapOutput {
	return i.ToSnapshotPolicyAttachmentMapOutputWithContext(context.Background())
}

func (i SnapshotPolicyAttachmentMap) ToSnapshotPolicyAttachmentMapOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotPolicyAttachmentMapOutput)
}

type SnapshotPolicyAttachmentOutput struct{ *pulumi.OutputState }

func (SnapshotPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotPolicyAttachment)(nil)).Elem()
}

func (o SnapshotPolicyAttachmentOutput) ToSnapshotPolicyAttachmentOutput() SnapshotPolicyAttachmentOutput {
	return o
}

func (o SnapshotPolicyAttachmentOutput) ToSnapshotPolicyAttachmentOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentOutput {
	return o
}

// ID of CBS snapshot policy.
func (o SnapshotPolicyAttachmentOutput) SnapshotPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SnapshotPolicyAttachment) pulumi.StringOutput { return v.SnapshotPolicyId }).(pulumi.StringOutput)
}

// ID of CBS.
func (o SnapshotPolicyAttachmentOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v *SnapshotPolicyAttachment) pulumi.StringOutput { return v.StorageId }).(pulumi.StringOutput)
}

type SnapshotPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (SnapshotPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SnapshotPolicyAttachment)(nil)).Elem()
}

func (o SnapshotPolicyAttachmentArrayOutput) ToSnapshotPolicyAttachmentArrayOutput() SnapshotPolicyAttachmentArrayOutput {
	return o
}

func (o SnapshotPolicyAttachmentArrayOutput) ToSnapshotPolicyAttachmentArrayOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentArrayOutput {
	return o
}

func (o SnapshotPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) SnapshotPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SnapshotPolicyAttachment {
		return vs[0].([]*SnapshotPolicyAttachment)[vs[1].(int)]
	}).(SnapshotPolicyAttachmentOutput)
}

type SnapshotPolicyAttachmentMapOutput struct{ *pulumi.OutputState }

func (SnapshotPolicyAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SnapshotPolicyAttachment)(nil)).Elem()
}

func (o SnapshotPolicyAttachmentMapOutput) ToSnapshotPolicyAttachmentMapOutput() SnapshotPolicyAttachmentMapOutput {
	return o
}

func (o SnapshotPolicyAttachmentMapOutput) ToSnapshotPolicyAttachmentMapOutputWithContext(ctx context.Context) SnapshotPolicyAttachmentMapOutput {
	return o
}

func (o SnapshotPolicyAttachmentMapOutput) MapIndex(k pulumi.StringInput) SnapshotPolicyAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SnapshotPolicyAttachment {
		return vs[0].(map[string]*SnapshotPolicyAttachment)[vs[1].(string)]
	}).(SnapshotPolicyAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPolicyAttachmentInput)(nil)).Elem(), &SnapshotPolicyAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPolicyAttachmentArrayInput)(nil)).Elem(), SnapshotPolicyAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotPolicyAttachmentMapInput)(nil)).Elem(), SnapshotPolicyAttachmentMap{})
	pulumi.RegisterOutputType(SnapshotPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(SnapshotPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(SnapshotPolicyAttachmentMapOutput{})
}
