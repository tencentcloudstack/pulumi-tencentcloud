// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cat node
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cat"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cat"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cat.GetNode(ctx, &cat.GetNodeArgs{
//				IsIpv6:   pulumi.BoolRef(false),
//				Location: pulumi.IntRef(2),
//				NodeType: pulumi.IntRef(1),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNode(ctx *pulumi.Context, args *GetNodeArgs, opts ...pulumi.InvokeOption) (*GetNodeResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetNodeResult
	err := ctx.Invoke("tencentcloud:Cat/getNode:getNode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNode.
type GetNodeArgs struct {
	// is IPv6.
	IsIpv6 *bool `pulumi:"isIpv6"`
	// Node area:1=Chinese Mainland,2=Hong Kong, Macao and Taiwan,3=Overseas.
	Location *int `pulumi:"location"`
	// Node name.
	NodeName *string `pulumi:"nodeName"`
	// Node type 1:IDC,2:LastMile,3:Mobile.
	NodeType *int `pulumi:"nodeType"`
	// Payment mode:1=Trial version,2=Paid version.
	PayMode *int `pulumi:"payMode"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getNode.
type GetNodeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	IsIpv6 *bool  `pulumi:"isIpv6"`
	// Node area:1=Chinese Mainland,2=Hong Kong, Macao and Taiwan,3=Overseas.
	Location *int `pulumi:"location"`
	// Probe node list.
	NodeDefines      []GetNodeNodeDefine `pulumi:"nodeDefines"`
	NodeName         *string             `pulumi:"nodeName"`
	NodeType         *int                `pulumi:"nodeType"`
	PayMode          *int                `pulumi:"payMode"`
	ResultOutputFile *string             `pulumi:"resultOutputFile"`
}

func GetNodeOutput(ctx *pulumi.Context, args GetNodeOutputArgs, opts ...pulumi.InvokeOption) GetNodeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNodeResult, error) {
			args := v.(GetNodeArgs)
			r, err := GetNode(ctx, &args, opts...)
			var s GetNodeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNodeResultOutput)
}

// A collection of arguments for invoking getNode.
type GetNodeOutputArgs struct {
	// is IPv6.
	IsIpv6 pulumi.BoolPtrInput `pulumi:"isIpv6"`
	// Node area:1=Chinese Mainland,2=Hong Kong, Macao and Taiwan,3=Overseas.
	Location pulumi.IntPtrInput `pulumi:"location"`
	// Node name.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
	// Node type 1:IDC,2:LastMile,3:Mobile.
	NodeType pulumi.IntPtrInput `pulumi:"nodeType"`
	// Payment mode:1=Trial version,2=Paid version.
	PayMode pulumi.IntPtrInput `pulumi:"payMode"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetNodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeArgs)(nil)).Elem()
}

// A collection of values returned by getNode.
type GetNodeResultOutput struct{ *pulumi.OutputState }

func (GetNodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeResult)(nil)).Elem()
}

func (o GetNodeResultOutput) ToGetNodeResultOutput() GetNodeResultOutput {
	return o
}

func (o GetNodeResultOutput) ToGetNodeResultOutputWithContext(ctx context.Context) GetNodeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetNodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNodeResultOutput) IsIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNodeResult) *bool { return v.IsIpv6 }).(pulumi.BoolPtrOutput)
}

// Node area:1=Chinese Mainland,2=Hong Kong, Macao and Taiwan,3=Overseas.
func (o GetNodeResultOutput) Location() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNodeResult) *int { return v.Location }).(pulumi.IntPtrOutput)
}

// Probe node list.
func (o GetNodeResultOutput) NodeDefines() GetNodeNodeDefineArrayOutput {
	return o.ApplyT(func(v GetNodeResult) []GetNodeNodeDefine { return v.NodeDefines }).(GetNodeNodeDefineArrayOutput)
}

func (o GetNodeResultOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodeResult) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

func (o GetNodeResultOutput) NodeType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNodeResult) *int { return v.NodeType }).(pulumi.IntPtrOutput)
}

func (o GetNodeResultOutput) PayMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNodeResult) *int { return v.PayMode }).(pulumi.IntPtrOutput)
}

func (o GetNodeResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodeResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNodeResultOutput{})
}
