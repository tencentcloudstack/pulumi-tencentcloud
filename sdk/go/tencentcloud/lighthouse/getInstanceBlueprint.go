// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lighthouse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of lighthouse instanceBlueprint
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Lighthouse"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Lighthouse"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Lighthouse.GetInstanceBlueprint(ctx, &lighthouse.GetInstanceBlueprintArgs{
//				InstanceIds: []string{
//					"lhins-xxxxxx",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstanceBlueprint(ctx *pulumi.Context, args *GetInstanceBlueprintArgs, opts ...pulumi.InvokeOption) (*GetInstanceBlueprintResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetInstanceBlueprintResult
	err := ctx.Invoke("tencentcloud:Lighthouse/getInstanceBlueprint:getInstanceBlueprint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceBlueprint.
type GetInstanceBlueprintArgs struct {
	// Instance ID list, which currently can contain only one instance.
	InstanceIds []string `pulumi:"instanceIds"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getInstanceBlueprint.
type GetInstanceBlueprintResult struct {
	// Blueprint instance list information.
	BlueprintInstanceSets []GetInstanceBlueprintBlueprintInstanceSet `pulumi:"blueprintInstanceSets"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	InstanceIds      []string `pulumi:"instanceIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

func GetInstanceBlueprintOutput(ctx *pulumi.Context, args GetInstanceBlueprintOutputArgs, opts ...pulumi.InvokeOption) GetInstanceBlueprintResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceBlueprintResult, error) {
			args := v.(GetInstanceBlueprintArgs)
			r, err := GetInstanceBlueprint(ctx, &args, opts...)
			var s GetInstanceBlueprintResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceBlueprintResultOutput)
}

// A collection of arguments for invoking getInstanceBlueprint.
type GetInstanceBlueprintOutputArgs struct {
	// Instance ID list, which currently can contain only one instance.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetInstanceBlueprintOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBlueprintArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceBlueprint.
type GetInstanceBlueprintResultOutput struct{ *pulumi.OutputState }

func (GetInstanceBlueprintResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBlueprintResult)(nil)).Elem()
}

func (o GetInstanceBlueprintResultOutput) ToGetInstanceBlueprintResultOutput() GetInstanceBlueprintResultOutput {
	return o
}

func (o GetInstanceBlueprintResultOutput) ToGetInstanceBlueprintResultOutputWithContext(ctx context.Context) GetInstanceBlueprintResultOutput {
	return o
}

// Blueprint instance list information.
func (o GetInstanceBlueprintResultOutput) BlueprintInstanceSets() GetInstanceBlueprintBlueprintInstanceSetArrayOutput {
	return o.ApplyT(func(v GetInstanceBlueprintResult) []GetInstanceBlueprintBlueprintInstanceSet {
		return v.BlueprintInstanceSets
	}).(GetInstanceBlueprintBlueprintInstanceSetArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceBlueprintResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBlueprintResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceBlueprintResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBlueprintResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetInstanceBlueprintResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceBlueprintResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceBlueprintResultOutput{})
}
