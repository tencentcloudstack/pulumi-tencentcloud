// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lighthouse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of lighthouse instanceDiskNum
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Lighthouse"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Lighthouse"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Lighthouse.GetInstanceDiskNum(ctx, &lighthouse.GetInstanceDiskNumArgs{
//				InstanceIds: []string{
//					"lhins-xxxxxx",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstanceDiskNum(ctx *pulumi.Context, args *GetInstanceDiskNumArgs, opts ...pulumi.InvokeOption) (*GetInstanceDiskNumResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetInstanceDiskNumResult
	err := ctx.Invoke("tencentcloud:Lighthouse/getInstanceDiskNum:getInstanceDiskNum", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceDiskNum.
type GetInstanceDiskNumArgs struct {
	// List of instance IDs.
	InstanceIds []string `pulumi:"instanceIds"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getInstanceDiskNum.
type GetInstanceDiskNumResult struct {
	// Mount information list.
	AttachDetailSets []GetInstanceDiskNumAttachDetailSet `pulumi:"attachDetailSets"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	InstanceIds      []string `pulumi:"instanceIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

func GetInstanceDiskNumOutput(ctx *pulumi.Context, args GetInstanceDiskNumOutputArgs, opts ...pulumi.InvokeOption) GetInstanceDiskNumResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceDiskNumResult, error) {
			args := v.(GetInstanceDiskNumArgs)
			r, err := GetInstanceDiskNum(ctx, &args, opts...)
			var s GetInstanceDiskNumResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceDiskNumResultOutput)
}

// A collection of arguments for invoking getInstanceDiskNum.
type GetInstanceDiskNumOutputArgs struct {
	// List of instance IDs.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetInstanceDiskNumOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDiskNumArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceDiskNum.
type GetInstanceDiskNumResultOutput struct{ *pulumi.OutputState }

func (GetInstanceDiskNumResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDiskNumResult)(nil)).Elem()
}

func (o GetInstanceDiskNumResultOutput) ToGetInstanceDiskNumResultOutput() GetInstanceDiskNumResultOutput {
	return o
}

func (o GetInstanceDiskNumResultOutput) ToGetInstanceDiskNumResultOutputWithContext(ctx context.Context) GetInstanceDiskNumResultOutput {
	return o
}

// Mount information list.
func (o GetInstanceDiskNumResultOutput) AttachDetailSets() GetInstanceDiskNumAttachDetailSetArrayOutput {
	return o.ApplyT(func(v GetInstanceDiskNumResult) []GetInstanceDiskNumAttachDetailSet { return v.AttachDetailSets }).(GetInstanceDiskNumAttachDetailSetArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceDiskNumResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDiskNumResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceDiskNumResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceDiskNumResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetInstanceDiskNumResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceDiskNumResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceDiskNumResultOutput{})
}
