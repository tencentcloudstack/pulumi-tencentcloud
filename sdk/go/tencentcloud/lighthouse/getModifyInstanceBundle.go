// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lighthouse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of lighthouse modifyInstanceBundle
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Lighthouse"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Lighthouse"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Lighthouse.GetModifyInstanceBundle(ctx, &lighthouse.GetModifyInstanceBundleArgs{
//				Filters: []lighthouse.GetModifyInstanceBundleFilter{
//					lighthouse.GetModifyInstanceBundleFilter{
//						Name: "bundle-id",
//						Values: []string{
//							"bundle_gen_mc_med2_02",
//						},
//					},
//				},
//				InstanceId: "lhins-xxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetModifyInstanceBundle(ctx *pulumi.Context, args *GetModifyInstanceBundleArgs, opts ...pulumi.InvokeOption) (*GetModifyInstanceBundleResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetModifyInstanceBundleResult
	err := ctx.Invoke("tencentcloud:Lighthouse/getModifyInstanceBundle:getModifyInstanceBundle", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getModifyInstanceBundle.
type GetModifyInstanceBundleArgs struct {
	// Filter list.
	// - `bundle-id`: filter by the bundle ID.
	// - `support-platform-type`: filter by system type, valid values: `LINUX_UNIX`, `WINDOWS`.
	// - `bundle-type`: filter according to package type, valid values: `GENERAL_BUNDLE`, `STORAGE_BUNDLE`, `ENTERPRISE_BUNDLE`, `EXCLUSIVE_BUNDLE`, `BEFAST_BUNDLE`.
	// - `bundle-state`: filter according to package status, valid values: `ONLINE`, `OFFLINE`.
	//   NOTE: The upper limit of Filters per request is 10. The upper limit of Filter.Values is 5. Parameter does not support specifying both BundleIds and Filters.
	Filters []GetModifyInstanceBundleFilter `pulumi:"filters"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getModifyInstanceBundle.
type GetModifyInstanceBundleResult struct {
	Filters []GetModifyInstanceBundleFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Change package details.
	ModifyBundleSets []GetModifyInstanceBundleModifyBundleSet `pulumi:"modifyBundleSets"`
	ResultOutputFile *string                                  `pulumi:"resultOutputFile"`
}

func GetModifyInstanceBundleOutput(ctx *pulumi.Context, args GetModifyInstanceBundleOutputArgs, opts ...pulumi.InvokeOption) GetModifyInstanceBundleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetModifyInstanceBundleResult, error) {
			args := v.(GetModifyInstanceBundleArgs)
			r, err := GetModifyInstanceBundle(ctx, &args, opts...)
			var s GetModifyInstanceBundleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetModifyInstanceBundleResultOutput)
}

// A collection of arguments for invoking getModifyInstanceBundle.
type GetModifyInstanceBundleOutputArgs struct {
	// Filter list.
	// - `bundle-id`: filter by the bundle ID.
	// - `support-platform-type`: filter by system type, valid values: `LINUX_UNIX`, `WINDOWS`.
	// - `bundle-type`: filter according to package type, valid values: `GENERAL_BUNDLE`, `STORAGE_BUNDLE`, `ENTERPRISE_BUNDLE`, `EXCLUSIVE_BUNDLE`, `BEFAST_BUNDLE`.
	// - `bundle-state`: filter according to package status, valid values: `ONLINE`, `OFFLINE`.
	//   NOTE: The upper limit of Filters per request is 10. The upper limit of Filter.Values is 5. Parameter does not support specifying both BundleIds and Filters.
	Filters GetModifyInstanceBundleFilterArrayInput `pulumi:"filters"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetModifyInstanceBundleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModifyInstanceBundleArgs)(nil)).Elem()
}

// A collection of values returned by getModifyInstanceBundle.
type GetModifyInstanceBundleResultOutput struct{ *pulumi.OutputState }

func (GetModifyInstanceBundleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModifyInstanceBundleResult)(nil)).Elem()
}

func (o GetModifyInstanceBundleResultOutput) ToGetModifyInstanceBundleResultOutput() GetModifyInstanceBundleResultOutput {
	return o
}

func (o GetModifyInstanceBundleResultOutput) ToGetModifyInstanceBundleResultOutputWithContext(ctx context.Context) GetModifyInstanceBundleResultOutput {
	return o
}

func (o GetModifyInstanceBundleResultOutput) Filters() GetModifyInstanceBundleFilterArrayOutput {
	return o.ApplyT(func(v GetModifyInstanceBundleResult) []GetModifyInstanceBundleFilter { return v.Filters }).(GetModifyInstanceBundleFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetModifyInstanceBundleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetModifyInstanceBundleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetModifyInstanceBundleResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModifyInstanceBundleResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Change package details.
func (o GetModifyInstanceBundleResultOutput) ModifyBundleSets() GetModifyInstanceBundleModifyBundleSetArrayOutput {
	return o.ApplyT(func(v GetModifyInstanceBundleResult) []GetModifyInstanceBundleModifyBundleSet {
		return v.ModifyBundleSets
	}).(GetModifyInstanceBundleModifyBundleSetArrayOutput)
}

func (o GetModifyInstanceBundleResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetModifyInstanceBundleResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetModifyInstanceBundleResultOutput{})
}
