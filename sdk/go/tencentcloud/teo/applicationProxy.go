// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationProxy struct {
	pulumi.CustomResourceState

	// - `0`: Disable acceleration.- `1`: Enable acceleration.
	AccelerateType pulumi.IntOutput `pulumi:"accelerateType"`
	// Acceleration area. Valid values: `mainland`, `overseas`.
	Area pulumi.StringOutput `pulumi:"area"`
	// Application proxy block status. Valid values: `banned`, `banning`, `recover`, `recovering`.
	BanStatus pulumi.StringOutput `pulumi:"banStatus"`
	// When `ProxyType` is hostname, this field is the ID of the subdomain.
	HostId pulumi.StringOutput `pulumi:"hostId"`
	// IPv6 access configuration.
	Ipv6 ApplicationProxyIpv6Output `pulumi:"ipv6"`
	// Scheduling mode.- `ip`: Anycast IP.- `domain`: CNAME.
	PlatType pulumi.StringOutput `pulumi:"platType"`
	// Proxy ID.
	ProxyId pulumi.StringOutput `pulumi:"proxyId"`
	// When `ProxyType` is hostname, `ProxyName` is the domain or subdomain name.When `ProxyType` is instance, `ProxyName` is
	// the name of proxy application.
	ProxyName pulumi.StringOutput `pulumi:"proxyName"`
	// Layer 4 proxy mode. Valid values:- `hostname`: subdomain mode.- `instance`: instance mode.
	ProxyType pulumi.StringOutput `pulumi:"proxyType"`
	// Scheduling information.
	ScheduleValues pulumi.StringArrayOutput `pulumi:"scheduleValues"`
	// - `0`: Disable security protection.- `1`: Enable security protection.
	SecurityType pulumi.IntOutput `pulumi:"securityType"`
	// Session persistence duration. Value range: 30-3600 (in seconds), default value is 600.
	SessionPersistTime pulumi.IntOutput `pulumi:"sessionPersistTime"`
	// Status of this application proxy. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
	// Disable.- `progress`: Deploying.- `stopping`: Deactivating.- `fail`: Deploy or deactivate failed.
	Status pulumi.StringOutput `pulumi:"status"`
	// Last modification date.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Site ID.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewApplicationProxy registers a new resource with the given unique name, arguments, and options.
func NewApplicationProxy(ctx *pulumi.Context,
	name string, args *ApplicationProxyArgs, opts ...pulumi.ResourceOption) (*ApplicationProxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccelerateType == nil {
		return nil, errors.New("invalid value for required argument 'AccelerateType'")
	}
	if args.PlatType == nil {
		return nil, errors.New("invalid value for required argument 'PlatType'")
	}
	if args.ProxyName == nil {
		return nil, errors.New("invalid value for required argument 'ProxyName'")
	}
	if args.SecurityType == nil {
		return nil, errors.New("invalid value for required argument 'SecurityType'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ApplicationProxy
	err := ctx.RegisterResource("tencentcloud:Teo/applicationProxy:ApplicationProxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationProxy gets an existing ApplicationProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationProxyState, opts ...pulumi.ResourceOption) (*ApplicationProxy, error) {
	var resource ApplicationProxy
	err := ctx.ReadResource("tencentcloud:Teo/applicationProxy:ApplicationProxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationProxy resources.
type applicationProxyState struct {
	// - `0`: Disable acceleration.- `1`: Enable acceleration.
	AccelerateType *int `pulumi:"accelerateType"`
	// Acceleration area. Valid values: `mainland`, `overseas`.
	Area *string `pulumi:"area"`
	// Application proxy block status. Valid values: `banned`, `banning`, `recover`, `recovering`.
	BanStatus *string `pulumi:"banStatus"`
	// When `ProxyType` is hostname, this field is the ID of the subdomain.
	HostId *string `pulumi:"hostId"`
	// IPv6 access configuration.
	Ipv6 *ApplicationProxyIpv6 `pulumi:"ipv6"`
	// Scheduling mode.- `ip`: Anycast IP.- `domain`: CNAME.
	PlatType *string `pulumi:"platType"`
	// Proxy ID.
	ProxyId *string `pulumi:"proxyId"`
	// When `ProxyType` is hostname, `ProxyName` is the domain or subdomain name.When `ProxyType` is instance, `ProxyName` is
	// the name of proxy application.
	ProxyName *string `pulumi:"proxyName"`
	// Layer 4 proxy mode. Valid values:- `hostname`: subdomain mode.- `instance`: instance mode.
	ProxyType *string `pulumi:"proxyType"`
	// Scheduling information.
	ScheduleValues []string `pulumi:"scheduleValues"`
	// - `0`: Disable security protection.- `1`: Enable security protection.
	SecurityType *int `pulumi:"securityType"`
	// Session persistence duration. Value range: 30-3600 (in seconds), default value is 600.
	SessionPersistTime *int `pulumi:"sessionPersistTime"`
	// Status of this application proxy. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
	// Disable.- `progress`: Deploying.- `stopping`: Deactivating.- `fail`: Deploy or deactivate failed.
	Status *string `pulumi:"status"`
	// Last modification date.
	UpdateTime *string `pulumi:"updateTime"`
	// Site ID.
	ZoneId *string `pulumi:"zoneId"`
}

type ApplicationProxyState struct {
	// - `0`: Disable acceleration.- `1`: Enable acceleration.
	AccelerateType pulumi.IntPtrInput
	// Acceleration area. Valid values: `mainland`, `overseas`.
	Area pulumi.StringPtrInput
	// Application proxy block status. Valid values: `banned`, `banning`, `recover`, `recovering`.
	BanStatus pulumi.StringPtrInput
	// When `ProxyType` is hostname, this field is the ID of the subdomain.
	HostId pulumi.StringPtrInput
	// IPv6 access configuration.
	Ipv6 ApplicationProxyIpv6PtrInput
	// Scheduling mode.- `ip`: Anycast IP.- `domain`: CNAME.
	PlatType pulumi.StringPtrInput
	// Proxy ID.
	ProxyId pulumi.StringPtrInput
	// When `ProxyType` is hostname, `ProxyName` is the domain or subdomain name.When `ProxyType` is instance, `ProxyName` is
	// the name of proxy application.
	ProxyName pulumi.StringPtrInput
	// Layer 4 proxy mode. Valid values:- `hostname`: subdomain mode.- `instance`: instance mode.
	ProxyType pulumi.StringPtrInput
	// Scheduling information.
	ScheduleValues pulumi.StringArrayInput
	// - `0`: Disable security protection.- `1`: Enable security protection.
	SecurityType pulumi.IntPtrInput
	// Session persistence duration. Value range: 30-3600 (in seconds), default value is 600.
	SessionPersistTime pulumi.IntPtrInput
	// Status of this application proxy. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
	// Disable.- `progress`: Deploying.- `stopping`: Deactivating.- `fail`: Deploy or deactivate failed.
	Status pulumi.StringPtrInput
	// Last modification date.
	UpdateTime pulumi.StringPtrInput
	// Site ID.
	ZoneId pulumi.StringPtrInput
}

func (ApplicationProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationProxyState)(nil)).Elem()
}

type applicationProxyArgs struct {
	// - `0`: Disable acceleration.- `1`: Enable acceleration.
	AccelerateType int `pulumi:"accelerateType"`
	// IPv6 access configuration.
	Ipv6 *ApplicationProxyIpv6 `pulumi:"ipv6"`
	// Scheduling mode.- `ip`: Anycast IP.- `domain`: CNAME.
	PlatType string `pulumi:"platType"`
	// When `ProxyType` is hostname, `ProxyName` is the domain or subdomain name.When `ProxyType` is instance, `ProxyName` is
	// the name of proxy application.
	ProxyName string `pulumi:"proxyName"`
	// Layer 4 proxy mode. Valid values:- `hostname`: subdomain mode.- `instance`: instance mode.
	ProxyType *string `pulumi:"proxyType"`
	// - `0`: Disable security protection.- `1`: Enable security protection.
	SecurityType int `pulumi:"securityType"`
	// Session persistence duration. Value range: 30-3600 (in seconds), default value is 600.
	SessionPersistTime *int `pulumi:"sessionPersistTime"`
	// Status of this application proxy. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
	// Disable.- `progress`: Deploying.- `stopping`: Deactivating.- `fail`: Deploy or deactivate failed.
	Status *string `pulumi:"status"`
	// Site ID.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ApplicationProxy resource.
type ApplicationProxyArgs struct {
	// - `0`: Disable acceleration.- `1`: Enable acceleration.
	AccelerateType pulumi.IntInput
	// IPv6 access configuration.
	Ipv6 ApplicationProxyIpv6PtrInput
	// Scheduling mode.- `ip`: Anycast IP.- `domain`: CNAME.
	PlatType pulumi.StringInput
	// When `ProxyType` is hostname, `ProxyName` is the domain or subdomain name.When `ProxyType` is instance, `ProxyName` is
	// the name of proxy application.
	ProxyName pulumi.StringInput
	// Layer 4 proxy mode. Valid values:- `hostname`: subdomain mode.- `instance`: instance mode.
	ProxyType pulumi.StringPtrInput
	// - `0`: Disable security protection.- `1`: Enable security protection.
	SecurityType pulumi.IntInput
	// Session persistence duration. Value range: 30-3600 (in seconds), default value is 600.
	SessionPersistTime pulumi.IntPtrInput
	// Status of this application proxy. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
	// Disable.- `progress`: Deploying.- `stopping`: Deactivating.- `fail`: Deploy or deactivate failed.
	Status pulumi.StringPtrInput
	// Site ID.
	ZoneId pulumi.StringInput
}

func (ApplicationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationProxyArgs)(nil)).Elem()
}

type ApplicationProxyInput interface {
	pulumi.Input

	ToApplicationProxyOutput() ApplicationProxyOutput
	ToApplicationProxyOutputWithContext(ctx context.Context) ApplicationProxyOutput
}

func (*ApplicationProxy) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxy)(nil)).Elem()
}

func (i *ApplicationProxy) ToApplicationProxyOutput() ApplicationProxyOutput {
	return i.ToApplicationProxyOutputWithContext(context.Background())
}

func (i *ApplicationProxy) ToApplicationProxyOutputWithContext(ctx context.Context) ApplicationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyOutput)
}

// ApplicationProxyArrayInput is an input type that accepts ApplicationProxyArray and ApplicationProxyArrayOutput values.
// You can construct a concrete instance of `ApplicationProxyArrayInput` via:
//
//	ApplicationProxyArray{ ApplicationProxyArgs{...} }
type ApplicationProxyArrayInput interface {
	pulumi.Input

	ToApplicationProxyArrayOutput() ApplicationProxyArrayOutput
	ToApplicationProxyArrayOutputWithContext(context.Context) ApplicationProxyArrayOutput
}

type ApplicationProxyArray []ApplicationProxyInput

func (ApplicationProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationProxy)(nil)).Elem()
}

func (i ApplicationProxyArray) ToApplicationProxyArrayOutput() ApplicationProxyArrayOutput {
	return i.ToApplicationProxyArrayOutputWithContext(context.Background())
}

func (i ApplicationProxyArray) ToApplicationProxyArrayOutputWithContext(ctx context.Context) ApplicationProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyArrayOutput)
}

// ApplicationProxyMapInput is an input type that accepts ApplicationProxyMap and ApplicationProxyMapOutput values.
// You can construct a concrete instance of `ApplicationProxyMapInput` via:
//
//	ApplicationProxyMap{ "key": ApplicationProxyArgs{...} }
type ApplicationProxyMapInput interface {
	pulumi.Input

	ToApplicationProxyMapOutput() ApplicationProxyMapOutput
	ToApplicationProxyMapOutputWithContext(context.Context) ApplicationProxyMapOutput
}

type ApplicationProxyMap map[string]ApplicationProxyInput

func (ApplicationProxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationProxy)(nil)).Elem()
}

func (i ApplicationProxyMap) ToApplicationProxyMapOutput() ApplicationProxyMapOutput {
	return i.ToApplicationProxyMapOutputWithContext(context.Background())
}

func (i ApplicationProxyMap) ToApplicationProxyMapOutputWithContext(ctx context.Context) ApplicationProxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyMapOutput)
}

type ApplicationProxyOutput struct{ *pulumi.OutputState }

func (ApplicationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxy)(nil)).Elem()
}

func (o ApplicationProxyOutput) ToApplicationProxyOutput() ApplicationProxyOutput {
	return o
}

func (o ApplicationProxyOutput) ToApplicationProxyOutputWithContext(ctx context.Context) ApplicationProxyOutput {
	return o
}

// - `0`: Disable acceleration.- `1`: Enable acceleration.
func (o ApplicationProxyOutput) AccelerateType() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.IntOutput { return v.AccelerateType }).(pulumi.IntOutput)
}

// Acceleration area. Valid values: `mainland`, `overseas`.
func (o ApplicationProxyOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.Area }).(pulumi.StringOutput)
}

// Application proxy block status. Valid values: `banned`, `banning`, `recover`, `recovering`.
func (o ApplicationProxyOutput) BanStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.BanStatus }).(pulumi.StringOutput)
}

// When `ProxyType` is hostname, this field is the ID of the subdomain.
func (o ApplicationProxyOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.HostId }).(pulumi.StringOutput)
}

// IPv6 access configuration.
func (o ApplicationProxyOutput) Ipv6() ApplicationProxyIpv6Output {
	return o.ApplyT(func(v *ApplicationProxy) ApplicationProxyIpv6Output { return v.Ipv6 }).(ApplicationProxyIpv6Output)
}

// Scheduling mode.- `ip`: Anycast IP.- `domain`: CNAME.
func (o ApplicationProxyOutput) PlatType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.PlatType }).(pulumi.StringOutput)
}

// Proxy ID.
func (o ApplicationProxyOutput) ProxyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.ProxyId }).(pulumi.StringOutput)
}

// When `ProxyType` is hostname, `ProxyName` is the domain or subdomain name.When `ProxyType` is instance, `ProxyName` is
// the name of proxy application.
func (o ApplicationProxyOutput) ProxyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.ProxyName }).(pulumi.StringOutput)
}

// Layer 4 proxy mode. Valid values:- `hostname`: subdomain mode.- `instance`: instance mode.
func (o ApplicationProxyOutput) ProxyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.ProxyType }).(pulumi.StringOutput)
}

// Scheduling information.
func (o ApplicationProxyOutput) ScheduleValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringArrayOutput { return v.ScheduleValues }).(pulumi.StringArrayOutput)
}

// - `0`: Disable security protection.- `1`: Enable security protection.
func (o ApplicationProxyOutput) SecurityType() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.IntOutput { return v.SecurityType }).(pulumi.IntOutput)
}

// Session persistence duration. Value range: 30-3600 (in seconds), default value is 600.
func (o ApplicationProxyOutput) SessionPersistTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.IntOutput { return v.SessionPersistTime }).(pulumi.IntOutput)
}

// Status of this application proxy. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
// Disable.- `progress`: Deploying.- `stopping`: Deactivating.- `fail`: Deploy or deactivate failed.
func (o ApplicationProxyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Last modification date.
func (o ApplicationProxyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Site ID.
func (o ApplicationProxyOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationProxy) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ApplicationProxyArrayOutput struct{ *pulumi.OutputState }

func (ApplicationProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationProxy)(nil)).Elem()
}

func (o ApplicationProxyArrayOutput) ToApplicationProxyArrayOutput() ApplicationProxyArrayOutput {
	return o
}

func (o ApplicationProxyArrayOutput) ToApplicationProxyArrayOutputWithContext(ctx context.Context) ApplicationProxyArrayOutput {
	return o
}

func (o ApplicationProxyArrayOutput) Index(i pulumi.IntInput) ApplicationProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationProxy {
		return vs[0].([]*ApplicationProxy)[vs[1].(int)]
	}).(ApplicationProxyOutput)
}

type ApplicationProxyMapOutput struct{ *pulumi.OutputState }

func (ApplicationProxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationProxy)(nil)).Elem()
}

func (o ApplicationProxyMapOutput) ToApplicationProxyMapOutput() ApplicationProxyMapOutput {
	return o
}

func (o ApplicationProxyMapOutput) ToApplicationProxyMapOutputWithContext(ctx context.Context) ApplicationProxyMapOutput {
	return o
}

func (o ApplicationProxyMapOutput) MapIndex(k pulumi.StringInput) ApplicationProxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationProxy {
		return vs[0].(map[string]*ApplicationProxy)[vs[1].(string)]
	}).(ApplicationProxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyInput)(nil)).Elem(), &ApplicationProxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyArrayInput)(nil)).Elem(), ApplicationProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyMapInput)(nil)).Elem(), ApplicationProxyMap{})
	pulumi.RegisterOutputType(ApplicationProxyOutput{})
	pulumi.RegisterOutputType(ApplicationProxyArrayOutput{})
	pulumi.RegisterOutputType(ApplicationProxyMapOutput{})
}
