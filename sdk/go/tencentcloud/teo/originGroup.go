// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a teo originGroup
//
// ## Example Usage
// ### Self origin group
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Teo.NewOriginGroup(ctx, "originGroup", &Teo.OriginGroupArgs{
//				ConfigurationType: pulumi.String("weight"),
//				OriginGroupName:   pulumi.String("test-group"),
//				OriginRecords: teo.OriginGroupOriginRecordArray{
//					&teo.OriginGroupOriginRecordArgs{
//						Areas:   pulumi.StringArray{},
//						Port:    pulumi.Int(8080),
//						Private: pulumi.Bool(false),
//						Record:  pulumi.String("150.109.8.1"),
//						Weight:  pulumi.Int(100),
//					},
//				},
//				OriginType: pulumi.String("self"),
//				ZoneId:     pulumi.String("zone-297z8rf93cfw"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Cos origin group
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Teo"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Teo.NewOriginGroup(ctx, "originGroup", &Teo.OriginGroupArgs{
//				ConfigurationType: pulumi.String("weight"),
//				OriginGroupName:   pulumi.String("test"),
//				OriginRecords: teo.OriginGroupOriginRecordArray{
//					&teo.OriginGroupOriginRecordArgs{
//						Areas:   pulumi.StringArray{},
//						Port:    pulumi.Int(0),
//						Private: pulumi.Bool(true),
//						Record:  pulumi.String("test-ruichaolin-1310708577.cos.ap-nanjing.myqcloud.com"),
//						Weight:  pulumi.Int(100),
//					},
//				},
//				OriginType: pulumi.String("cos"),
//				ZoneId:     pulumi.String("zone-2o3h21ed8bpu"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// teo origin_group can be imported using the zone_id#originGroup_id, e.g. `
//
// ```sh
//
//	$ pulumi import tencentcloud:Teo/originGroup:OriginGroup origin_group zone-297z8rf93cfw#origin-4f8a30b2-3720-11ed-b66b-525400dceb86
//
// ```
//
//	`
type OriginGroup struct {
	pulumi.CustomResourceState

	// Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
	ConfigurationType pulumi.StringOutput `pulumi:"configurationType"`
	// OriginGroup ID.
	OriginGroupId pulumi.StringOutput `pulumi:"originGroupId"`
	// OriginGroup Name.
	OriginGroupName pulumi.StringOutput `pulumi:"originGroupName"`
	// Origin site records.
	OriginRecords OriginGroupOriginRecordArrayOutput `pulumi:"originRecords"`
	// Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `thirdParty`: third party cos.
	OriginType pulumi.StringOutput `pulumi:"originType"`
	// Last modification date.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Site ID.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewOriginGroup registers a new resource with the given unique name, arguments, and options.
func NewOriginGroup(ctx *pulumi.Context,
	name string, args *OriginGroupArgs, opts ...pulumi.ResourceOption) (*OriginGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationType == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationType'")
	}
	if args.OriginGroupName == nil {
		return nil, errors.New("invalid value for required argument 'OriginGroupName'")
	}
	if args.OriginRecords == nil {
		return nil, errors.New("invalid value for required argument 'OriginRecords'")
	}
	if args.OriginType == nil {
		return nil, errors.New("invalid value for required argument 'OriginType'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource OriginGroup
	err := ctx.RegisterResource("tencentcloud:Teo/originGroup:OriginGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginGroup gets an existing OriginGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginGroupState, opts ...pulumi.ResourceOption) (*OriginGroup, error) {
	var resource OriginGroup
	err := ctx.ReadResource("tencentcloud:Teo/originGroup:OriginGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginGroup resources.
type originGroupState struct {
	// Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
	ConfigurationType *string `pulumi:"configurationType"`
	// OriginGroup ID.
	OriginGroupId *string `pulumi:"originGroupId"`
	// OriginGroup Name.
	OriginGroupName *string `pulumi:"originGroupName"`
	// Origin site records.
	OriginRecords []OriginGroupOriginRecord `pulumi:"originRecords"`
	// Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `thirdParty`: third party cos.
	OriginType *string `pulumi:"originType"`
	// Last modification date.
	UpdateTime *string `pulumi:"updateTime"`
	// Site ID.
	ZoneId *string `pulumi:"zoneId"`
}

type OriginGroupState struct {
	// Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
	ConfigurationType pulumi.StringPtrInput
	// OriginGroup ID.
	OriginGroupId pulumi.StringPtrInput
	// OriginGroup Name.
	OriginGroupName pulumi.StringPtrInput
	// Origin site records.
	OriginRecords OriginGroupOriginRecordArrayInput
	// Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `thirdParty`: third party cos.
	OriginType pulumi.StringPtrInput
	// Last modification date.
	UpdateTime pulumi.StringPtrInput
	// Site ID.
	ZoneId pulumi.StringPtrInput
}

func (OriginGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*originGroupState)(nil)).Elem()
}

type originGroupArgs struct {
	// Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
	ConfigurationType string `pulumi:"configurationType"`
	// OriginGroup Name.
	OriginGroupName string `pulumi:"originGroupName"`
	// Origin site records.
	OriginRecords []OriginGroupOriginRecord `pulumi:"originRecords"`
	// Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `thirdParty`: third party cos.
	OriginType string `pulumi:"originType"`
	// Site ID.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a OriginGroup resource.
type OriginGroupArgs struct {
	// Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
	ConfigurationType pulumi.StringInput
	// OriginGroup Name.
	OriginGroupName pulumi.StringInput
	// Origin site records.
	OriginRecords OriginGroupOriginRecordArrayInput
	// Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `thirdParty`: third party cos.
	OriginType pulumi.StringInput
	// Site ID.
	ZoneId pulumi.StringInput
}

func (OriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originGroupArgs)(nil)).Elem()
}

type OriginGroupInput interface {
	pulumi.Input

	ToOriginGroupOutput() OriginGroupOutput
	ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput
}

func (*OriginGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroup)(nil)).Elem()
}

func (i *OriginGroup) ToOriginGroupOutput() OriginGroupOutput {
	return i.ToOriginGroupOutputWithContext(context.Background())
}

func (i *OriginGroup) ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOutput)
}

// OriginGroupArrayInput is an input type that accepts OriginGroupArray and OriginGroupArrayOutput values.
// You can construct a concrete instance of `OriginGroupArrayInput` via:
//
//	OriginGroupArray{ OriginGroupArgs{...} }
type OriginGroupArrayInput interface {
	pulumi.Input

	ToOriginGroupArrayOutput() OriginGroupArrayOutput
	ToOriginGroupArrayOutputWithContext(context.Context) OriginGroupArrayOutput
}

type OriginGroupArray []OriginGroupInput

func (OriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginGroup)(nil)).Elem()
}

func (i OriginGroupArray) ToOriginGroupArrayOutput() OriginGroupArrayOutput {
	return i.ToOriginGroupArrayOutputWithContext(context.Background())
}

func (i OriginGroupArray) ToOriginGroupArrayOutputWithContext(ctx context.Context) OriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupArrayOutput)
}

// OriginGroupMapInput is an input type that accepts OriginGroupMap and OriginGroupMapOutput values.
// You can construct a concrete instance of `OriginGroupMapInput` via:
//
//	OriginGroupMap{ "key": OriginGroupArgs{...} }
type OriginGroupMapInput interface {
	pulumi.Input

	ToOriginGroupMapOutput() OriginGroupMapOutput
	ToOriginGroupMapOutputWithContext(context.Context) OriginGroupMapOutput
}

type OriginGroupMap map[string]OriginGroupInput

func (OriginGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginGroup)(nil)).Elem()
}

func (i OriginGroupMap) ToOriginGroupMapOutput() OriginGroupMapOutput {
	return i.ToOriginGroupMapOutputWithContext(context.Background())
}

func (i OriginGroupMap) ToOriginGroupMapOutputWithContext(ctx context.Context) OriginGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMapOutput)
}

type OriginGroupOutput struct{ *pulumi.OutputState }

func (OriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroup)(nil)).Elem()
}

func (o OriginGroupOutput) ToOriginGroupOutput() OriginGroupOutput {
	return o
}

func (o OriginGroupOutput) ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput {
	return o
}

// Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
func (o OriginGroupOutput) ConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.ConfigurationType }).(pulumi.StringOutput)
}

// OriginGroup ID.
func (o OriginGroupOutput) OriginGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.OriginGroupId }).(pulumi.StringOutput)
}

// OriginGroup Name.
func (o OriginGroupOutput) OriginGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.OriginGroupName }).(pulumi.StringOutput)
}

// Origin site records.
func (o OriginGroupOutput) OriginRecords() OriginGroupOriginRecordArrayOutput {
	return o.ApplyT(func(v *OriginGroup) OriginGroupOriginRecordArrayOutput { return v.OriginRecords }).(OriginGroupOriginRecordArrayOutput)
}

// Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `thirdParty`: third party cos.
func (o OriginGroupOutput) OriginType() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.OriginType }).(pulumi.StringOutput)
}

// Last modification date.
func (o OriginGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Site ID.
func (o OriginGroupOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type OriginGroupArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginGroup)(nil)).Elem()
}

func (o OriginGroupArrayOutput) ToOriginGroupArrayOutput() OriginGroupArrayOutput {
	return o
}

func (o OriginGroupArrayOutput) ToOriginGroupArrayOutputWithContext(ctx context.Context) OriginGroupArrayOutput {
	return o
}

func (o OriginGroupArrayOutput) Index(i pulumi.IntInput) OriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OriginGroup {
		return vs[0].([]*OriginGroup)[vs[1].(int)]
	}).(OriginGroupOutput)
}

type OriginGroupMapOutput struct{ *pulumi.OutputState }

func (OriginGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginGroup)(nil)).Elem()
}

func (o OriginGroupMapOutput) ToOriginGroupMapOutput() OriginGroupMapOutput {
	return o
}

func (o OriginGroupMapOutput) ToOriginGroupMapOutputWithContext(ctx context.Context) OriginGroupMapOutput {
	return o
}

func (o OriginGroupMapOutput) MapIndex(k pulumi.StringInput) OriginGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OriginGroup {
		return vs[0].(map[string]*OriginGroup)[vs[1].(string)]
	}).(OriginGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupInput)(nil)).Elem(), &OriginGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupArrayInput)(nil)).Elem(), OriginGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupMapInput)(nil)).Elem(), OriginGroupMap{})
	pulumi.RegisterOutputType(OriginGroupOutput{})
	pulumi.RegisterOutputType(OriginGroupArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupMapOutput{})
}
