// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

type AccelerationDomainOriginInfo struct {
	// ID of the secondary origin group (valid when `OriginType=ORIGIN_GROUP`). If it is not specified, it indicates that secondary origins are not used.
	BackupOrigin *string `pulumi:"backupOrigin"`
	// The origin address. Enter the origin group ID if `OriginType=ORIGIN_GROUP`.
	Origin string `pulumi:"origin"`
	// The origin type. Values: `IP_DOMAIN`: IPv4/IPv6 address or domain name; `COS`: COS bucket address; `ORIGIN_GROUP`: Origin group; `AWS_S3`: AWS S3 bucket address; `SPACE`: EdgeOne Shield Space.
	OriginType string `pulumi:"originType"`
	// Whether to authenticate access to the private object storage origin (valid when `OriginType=COS/AWS_S3`). Values: `on`: Enable private authentication; `off`: Disable private authentication. If this field is not specified, the default value `off` is used.
	PrivateAccess *string `pulumi:"privateAccess"`
	// The private authentication parameters. This field is valid when `PrivateAccess=on`.
	PrivateParameters []AccelerationDomainOriginInfoPrivateParameter `pulumi:"privateParameters"`
}

// AccelerationDomainOriginInfoInput is an input type that accepts AccelerationDomainOriginInfoArgs and AccelerationDomainOriginInfoOutput values.
// You can construct a concrete instance of `AccelerationDomainOriginInfoInput` via:
//
//	AccelerationDomainOriginInfoArgs{...}
type AccelerationDomainOriginInfoInput interface {
	pulumi.Input

	ToAccelerationDomainOriginInfoOutput() AccelerationDomainOriginInfoOutput
	ToAccelerationDomainOriginInfoOutputWithContext(context.Context) AccelerationDomainOriginInfoOutput
}

type AccelerationDomainOriginInfoArgs struct {
	// ID of the secondary origin group (valid when `OriginType=ORIGIN_GROUP`). If it is not specified, it indicates that secondary origins are not used.
	BackupOrigin pulumi.StringPtrInput `pulumi:"backupOrigin"`
	// The origin address. Enter the origin group ID if `OriginType=ORIGIN_GROUP`.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The origin type. Values: `IP_DOMAIN`: IPv4/IPv6 address or domain name; `COS`: COS bucket address; `ORIGIN_GROUP`: Origin group; `AWS_S3`: AWS S3 bucket address; `SPACE`: EdgeOne Shield Space.
	OriginType pulumi.StringInput `pulumi:"originType"`
	// Whether to authenticate access to the private object storage origin (valid when `OriginType=COS/AWS_S3`). Values: `on`: Enable private authentication; `off`: Disable private authentication. If this field is not specified, the default value `off` is used.
	PrivateAccess pulumi.StringPtrInput `pulumi:"privateAccess"`
	// The private authentication parameters. This field is valid when `PrivateAccess=on`.
	PrivateParameters AccelerationDomainOriginInfoPrivateParameterArrayInput `pulumi:"privateParameters"`
}

func (AccelerationDomainOriginInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccelerationDomainOriginInfo)(nil)).Elem()
}

func (i AccelerationDomainOriginInfoArgs) ToAccelerationDomainOriginInfoOutput() AccelerationDomainOriginInfoOutput {
	return i.ToAccelerationDomainOriginInfoOutputWithContext(context.Background())
}

func (i AccelerationDomainOriginInfoArgs) ToAccelerationDomainOriginInfoOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccelerationDomainOriginInfoOutput)
}

func (i AccelerationDomainOriginInfoArgs) ToAccelerationDomainOriginInfoPtrOutput() AccelerationDomainOriginInfoPtrOutput {
	return i.ToAccelerationDomainOriginInfoPtrOutputWithContext(context.Background())
}

func (i AccelerationDomainOriginInfoArgs) ToAccelerationDomainOriginInfoPtrOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccelerationDomainOriginInfoOutput).ToAccelerationDomainOriginInfoPtrOutputWithContext(ctx)
}

// AccelerationDomainOriginInfoPtrInput is an input type that accepts AccelerationDomainOriginInfoArgs, AccelerationDomainOriginInfoPtr and AccelerationDomainOriginInfoPtrOutput values.
// You can construct a concrete instance of `AccelerationDomainOriginInfoPtrInput` via:
//
//	        AccelerationDomainOriginInfoArgs{...}
//
//	or:
//
//	        nil
type AccelerationDomainOriginInfoPtrInput interface {
	pulumi.Input

	ToAccelerationDomainOriginInfoPtrOutput() AccelerationDomainOriginInfoPtrOutput
	ToAccelerationDomainOriginInfoPtrOutputWithContext(context.Context) AccelerationDomainOriginInfoPtrOutput
}

type accelerationDomainOriginInfoPtrType AccelerationDomainOriginInfoArgs

func AccelerationDomainOriginInfoPtr(v *AccelerationDomainOriginInfoArgs) AccelerationDomainOriginInfoPtrInput {
	return (*accelerationDomainOriginInfoPtrType)(v)
}

func (*accelerationDomainOriginInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccelerationDomainOriginInfo)(nil)).Elem()
}

func (i *accelerationDomainOriginInfoPtrType) ToAccelerationDomainOriginInfoPtrOutput() AccelerationDomainOriginInfoPtrOutput {
	return i.ToAccelerationDomainOriginInfoPtrOutputWithContext(context.Background())
}

func (i *accelerationDomainOriginInfoPtrType) ToAccelerationDomainOriginInfoPtrOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccelerationDomainOriginInfoPtrOutput)
}

type AccelerationDomainOriginInfoOutput struct{ *pulumi.OutputState }

func (AccelerationDomainOriginInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccelerationDomainOriginInfo)(nil)).Elem()
}

func (o AccelerationDomainOriginInfoOutput) ToAccelerationDomainOriginInfoOutput() AccelerationDomainOriginInfoOutput {
	return o
}

func (o AccelerationDomainOriginInfoOutput) ToAccelerationDomainOriginInfoOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoOutput {
	return o
}

func (o AccelerationDomainOriginInfoOutput) ToAccelerationDomainOriginInfoPtrOutput() AccelerationDomainOriginInfoPtrOutput {
	return o.ToAccelerationDomainOriginInfoPtrOutputWithContext(context.Background())
}

func (o AccelerationDomainOriginInfoOutput) ToAccelerationDomainOriginInfoPtrOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccelerationDomainOriginInfo) *AccelerationDomainOriginInfo {
		return &v
	}).(AccelerationDomainOriginInfoPtrOutput)
}

// ID of the secondary origin group (valid when `OriginType=ORIGIN_GROUP`). If it is not specified, it indicates that secondary origins are not used.
func (o AccelerationDomainOriginInfoOutput) BackupOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfo) *string { return v.BackupOrigin }).(pulumi.StringPtrOutput)
}

// The origin address. Enter the origin group ID if `OriginType=ORIGIN_GROUP`.
func (o AccelerationDomainOriginInfoOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfo) string { return v.Origin }).(pulumi.StringOutput)
}

// The origin type. Values: `IP_DOMAIN`: IPv4/IPv6 address or domain name; `COS`: COS bucket address; `ORIGIN_GROUP`: Origin group; `AWS_S3`: AWS S3 bucket address; `SPACE`: EdgeOne Shield Space.
func (o AccelerationDomainOriginInfoOutput) OriginType() pulumi.StringOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfo) string { return v.OriginType }).(pulumi.StringOutput)
}

// Whether to authenticate access to the private object storage origin (valid when `OriginType=COS/AWS_S3`). Values: `on`: Enable private authentication; `off`: Disable private authentication. If this field is not specified, the default value `off` is used.
func (o AccelerationDomainOriginInfoOutput) PrivateAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfo) *string { return v.PrivateAccess }).(pulumi.StringPtrOutput)
}

// The private authentication parameters. This field is valid when `PrivateAccess=on`.
func (o AccelerationDomainOriginInfoOutput) PrivateParameters() AccelerationDomainOriginInfoPrivateParameterArrayOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfo) []AccelerationDomainOriginInfoPrivateParameter {
		return v.PrivateParameters
	}).(AccelerationDomainOriginInfoPrivateParameterArrayOutput)
}

type AccelerationDomainOriginInfoPtrOutput struct{ *pulumi.OutputState }

func (AccelerationDomainOriginInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccelerationDomainOriginInfo)(nil)).Elem()
}

func (o AccelerationDomainOriginInfoPtrOutput) ToAccelerationDomainOriginInfoPtrOutput() AccelerationDomainOriginInfoPtrOutput {
	return o
}

func (o AccelerationDomainOriginInfoPtrOutput) ToAccelerationDomainOriginInfoPtrOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPtrOutput {
	return o
}

func (o AccelerationDomainOriginInfoPtrOutput) Elem() AccelerationDomainOriginInfoOutput {
	return o.ApplyT(func(v *AccelerationDomainOriginInfo) AccelerationDomainOriginInfo {
		if v != nil {
			return *v
		}
		var ret AccelerationDomainOriginInfo
		return ret
	}).(AccelerationDomainOriginInfoOutput)
}

// ID of the secondary origin group (valid when `OriginType=ORIGIN_GROUP`). If it is not specified, it indicates that secondary origins are not used.
func (o AccelerationDomainOriginInfoPtrOutput) BackupOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccelerationDomainOriginInfo) *string {
		if v == nil {
			return nil
		}
		return v.BackupOrigin
	}).(pulumi.StringPtrOutput)
}

// The origin address. Enter the origin group ID if `OriginType=ORIGIN_GROUP`.
func (o AccelerationDomainOriginInfoPtrOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccelerationDomainOriginInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Origin
	}).(pulumi.StringPtrOutput)
}

// The origin type. Values: `IP_DOMAIN`: IPv4/IPv6 address or domain name; `COS`: COS bucket address; `ORIGIN_GROUP`: Origin group; `AWS_S3`: AWS S3 bucket address; `SPACE`: EdgeOne Shield Space.
func (o AccelerationDomainOriginInfoPtrOutput) OriginType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccelerationDomainOriginInfo) *string {
		if v == nil {
			return nil
		}
		return &v.OriginType
	}).(pulumi.StringPtrOutput)
}

// Whether to authenticate access to the private object storage origin (valid when `OriginType=COS/AWS_S3`). Values: `on`: Enable private authentication; `off`: Disable private authentication. If this field is not specified, the default value `off` is used.
func (o AccelerationDomainOriginInfoPtrOutput) PrivateAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccelerationDomainOriginInfo) *string {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(pulumi.StringPtrOutput)
}

// The private authentication parameters. This field is valid when `PrivateAccess=on`.
func (o AccelerationDomainOriginInfoPtrOutput) PrivateParameters() AccelerationDomainOriginInfoPrivateParameterArrayOutput {
	return o.ApplyT(func(v *AccelerationDomainOriginInfo) []AccelerationDomainOriginInfoPrivateParameter {
		if v == nil {
			return nil
		}
		return v.PrivateParameters
	}).(AccelerationDomainOriginInfoPrivateParameterArrayOutput)
}

type AccelerationDomainOriginInfoPrivateParameter struct {
	// The parameter name. Valid values: `AccessKeyId`: Access Key ID; `SecretAccessKey`: Secret Access Key.
	Name string `pulumi:"name"`
	// The parameter value.
	Value string `pulumi:"value"`
}

// AccelerationDomainOriginInfoPrivateParameterInput is an input type that accepts AccelerationDomainOriginInfoPrivateParameterArgs and AccelerationDomainOriginInfoPrivateParameterOutput values.
// You can construct a concrete instance of `AccelerationDomainOriginInfoPrivateParameterInput` via:
//
//	AccelerationDomainOriginInfoPrivateParameterArgs{...}
type AccelerationDomainOriginInfoPrivateParameterInput interface {
	pulumi.Input

	ToAccelerationDomainOriginInfoPrivateParameterOutput() AccelerationDomainOriginInfoPrivateParameterOutput
	ToAccelerationDomainOriginInfoPrivateParameterOutputWithContext(context.Context) AccelerationDomainOriginInfoPrivateParameterOutput
}

type AccelerationDomainOriginInfoPrivateParameterArgs struct {
	// The parameter name. Valid values: `AccessKeyId`: Access Key ID; `SecretAccessKey`: Secret Access Key.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AccelerationDomainOriginInfoPrivateParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccelerationDomainOriginInfoPrivateParameter)(nil)).Elem()
}

func (i AccelerationDomainOriginInfoPrivateParameterArgs) ToAccelerationDomainOriginInfoPrivateParameterOutput() AccelerationDomainOriginInfoPrivateParameterOutput {
	return i.ToAccelerationDomainOriginInfoPrivateParameterOutputWithContext(context.Background())
}

func (i AccelerationDomainOriginInfoPrivateParameterArgs) ToAccelerationDomainOriginInfoPrivateParameterOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPrivateParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccelerationDomainOriginInfoPrivateParameterOutput)
}

// AccelerationDomainOriginInfoPrivateParameterArrayInput is an input type that accepts AccelerationDomainOriginInfoPrivateParameterArray and AccelerationDomainOriginInfoPrivateParameterArrayOutput values.
// You can construct a concrete instance of `AccelerationDomainOriginInfoPrivateParameterArrayInput` via:
//
//	AccelerationDomainOriginInfoPrivateParameterArray{ AccelerationDomainOriginInfoPrivateParameterArgs{...} }
type AccelerationDomainOriginInfoPrivateParameterArrayInput interface {
	pulumi.Input

	ToAccelerationDomainOriginInfoPrivateParameterArrayOutput() AccelerationDomainOriginInfoPrivateParameterArrayOutput
	ToAccelerationDomainOriginInfoPrivateParameterArrayOutputWithContext(context.Context) AccelerationDomainOriginInfoPrivateParameterArrayOutput
}

type AccelerationDomainOriginInfoPrivateParameterArray []AccelerationDomainOriginInfoPrivateParameterInput

func (AccelerationDomainOriginInfoPrivateParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccelerationDomainOriginInfoPrivateParameter)(nil)).Elem()
}

func (i AccelerationDomainOriginInfoPrivateParameterArray) ToAccelerationDomainOriginInfoPrivateParameterArrayOutput() AccelerationDomainOriginInfoPrivateParameterArrayOutput {
	return i.ToAccelerationDomainOriginInfoPrivateParameterArrayOutputWithContext(context.Background())
}

func (i AccelerationDomainOriginInfoPrivateParameterArray) ToAccelerationDomainOriginInfoPrivateParameterArrayOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPrivateParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccelerationDomainOriginInfoPrivateParameterArrayOutput)
}

type AccelerationDomainOriginInfoPrivateParameterOutput struct{ *pulumi.OutputState }

func (AccelerationDomainOriginInfoPrivateParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccelerationDomainOriginInfoPrivateParameter)(nil)).Elem()
}

func (o AccelerationDomainOriginInfoPrivateParameterOutput) ToAccelerationDomainOriginInfoPrivateParameterOutput() AccelerationDomainOriginInfoPrivateParameterOutput {
	return o
}

func (o AccelerationDomainOriginInfoPrivateParameterOutput) ToAccelerationDomainOriginInfoPrivateParameterOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPrivateParameterOutput {
	return o
}

// The parameter name. Valid values: `AccessKeyId`: Access Key ID; `SecretAccessKey`: Secret Access Key.
func (o AccelerationDomainOriginInfoPrivateParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfoPrivateParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The parameter value.
func (o AccelerationDomainOriginInfoPrivateParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AccelerationDomainOriginInfoPrivateParameter) string { return v.Value }).(pulumi.StringOutput)
}

type AccelerationDomainOriginInfoPrivateParameterArrayOutput struct{ *pulumi.OutputState }

func (AccelerationDomainOriginInfoPrivateParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccelerationDomainOriginInfoPrivateParameter)(nil)).Elem()
}

func (o AccelerationDomainOriginInfoPrivateParameterArrayOutput) ToAccelerationDomainOriginInfoPrivateParameterArrayOutput() AccelerationDomainOriginInfoPrivateParameterArrayOutput {
	return o
}

func (o AccelerationDomainOriginInfoPrivateParameterArrayOutput) ToAccelerationDomainOriginInfoPrivateParameterArrayOutputWithContext(ctx context.Context) AccelerationDomainOriginInfoPrivateParameterArrayOutput {
	return o
}

func (o AccelerationDomainOriginInfoPrivateParameterArrayOutput) Index(i pulumi.IntInput) AccelerationDomainOriginInfoPrivateParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccelerationDomainOriginInfoPrivateParameter {
		return vs[0].([]AccelerationDomainOriginInfoPrivateParameter)[vs[1].(int)]
	}).(AccelerationDomainOriginInfoPrivateParameterOutput)
}

type ApplicationProxyIpv6 struct {
	// - `on`: Enable.- `off`: Disable.
	Switch string `pulumi:"switch"`
}

// ApplicationProxyIpv6Input is an input type that accepts ApplicationProxyIpv6Args and ApplicationProxyIpv6Output values.
// You can construct a concrete instance of `ApplicationProxyIpv6Input` via:
//
//	ApplicationProxyIpv6Args{...}
type ApplicationProxyIpv6Input interface {
	pulumi.Input

	ToApplicationProxyIpv6Output() ApplicationProxyIpv6Output
	ToApplicationProxyIpv6OutputWithContext(context.Context) ApplicationProxyIpv6Output
}

type ApplicationProxyIpv6Args struct {
	// - `on`: Enable.- `off`: Disable.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ApplicationProxyIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProxyIpv6)(nil)).Elem()
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6Output() ApplicationProxyIpv6Output {
	return i.ToApplicationProxyIpv6OutputWithContext(context.Background())
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6OutputWithContext(ctx context.Context) ApplicationProxyIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyIpv6Output)
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return i.ToApplicationProxyIpv6PtrOutputWithContext(context.Background())
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyIpv6Output).ToApplicationProxyIpv6PtrOutputWithContext(ctx)
}

// ApplicationProxyIpv6PtrInput is an input type that accepts ApplicationProxyIpv6Args, ApplicationProxyIpv6Ptr and ApplicationProxyIpv6PtrOutput values.
// You can construct a concrete instance of `ApplicationProxyIpv6PtrInput` via:
//
//	        ApplicationProxyIpv6Args{...}
//
//	or:
//
//	        nil
type ApplicationProxyIpv6PtrInput interface {
	pulumi.Input

	ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput
	ToApplicationProxyIpv6PtrOutputWithContext(context.Context) ApplicationProxyIpv6PtrOutput
}

type applicationProxyIpv6PtrType ApplicationProxyIpv6Args

func ApplicationProxyIpv6Ptr(v *ApplicationProxyIpv6Args) ApplicationProxyIpv6PtrInput {
	return (*applicationProxyIpv6PtrType)(v)
}

func (*applicationProxyIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxyIpv6)(nil)).Elem()
}

func (i *applicationProxyIpv6PtrType) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return i.ToApplicationProxyIpv6PtrOutputWithContext(context.Background())
}

func (i *applicationProxyIpv6PtrType) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyIpv6PtrOutput)
}

type ApplicationProxyIpv6Output struct{ *pulumi.OutputState }

func (ApplicationProxyIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProxyIpv6)(nil)).Elem()
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6Output() ApplicationProxyIpv6Output {
	return o
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6OutputWithContext(ctx context.Context) ApplicationProxyIpv6Output {
	return o
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return o.ToApplicationProxyIpv6PtrOutputWithContext(context.Background())
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationProxyIpv6) *ApplicationProxyIpv6 {
		return &v
	}).(ApplicationProxyIpv6PtrOutput)
}

// - `on`: Enable.- `off`: Disable.
func (o ApplicationProxyIpv6Output) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProxyIpv6) string { return v.Switch }).(pulumi.StringOutput)
}

type ApplicationProxyIpv6PtrOutput struct{ *pulumi.OutputState }

func (ApplicationProxyIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxyIpv6)(nil)).Elem()
}

func (o ApplicationProxyIpv6PtrOutput) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return o
}

func (o ApplicationProxyIpv6PtrOutput) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return o
}

func (o ApplicationProxyIpv6PtrOutput) Elem() ApplicationProxyIpv6Output {
	return o.ApplyT(func(v *ApplicationProxyIpv6) ApplicationProxyIpv6 {
		if v != nil {
			return *v
		}
		var ret ApplicationProxyIpv6
		return ret
	}).(ApplicationProxyIpv6Output)
}

// - `on`: Enable.- `off`: Disable.
func (o ApplicationProxyIpv6PtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationProxyIpv6) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type CertificateConfigServerCertInfo struct {
	// Alias of the certificate.Note: This field may return null, indicating that no valid values can be obtained.
	Alias *string `pulumi:"alias"`
	// ID of the server certificate.Note: This field may return null, indicating that no valid values can be obtained.
	CertId string `pulumi:"certId"`
	// Domain name of the certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
	CommonName *string `pulumi:"commonName"`
	// Time when the certificate is deployed. Note: This field may return null, indicating that no valid values can be obtained.
	DeployTime *string `pulumi:"deployTime"`
	// Time when the certificate expires. Note: This field may return null, indicating that no valid values can be obtained.
	ExpireTime *string `pulumi:"expireTime"`
	// Signature algorithm. Note: This field may return null, indicating that no valid values can be obtained.
	SignAlgo *string `pulumi:"signAlgo"`
	// Type of the certificate. Values: `default`: Default certificate; `upload`: Specified certificate; `managed`: Tencent Cloud-managed certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
	Type *string `pulumi:"type"`
}

// CertificateConfigServerCertInfoInput is an input type that accepts CertificateConfigServerCertInfoArgs and CertificateConfigServerCertInfoOutput values.
// You can construct a concrete instance of `CertificateConfigServerCertInfoInput` via:
//
//	CertificateConfigServerCertInfoArgs{...}
type CertificateConfigServerCertInfoInput interface {
	pulumi.Input

	ToCertificateConfigServerCertInfoOutput() CertificateConfigServerCertInfoOutput
	ToCertificateConfigServerCertInfoOutputWithContext(context.Context) CertificateConfigServerCertInfoOutput
}

type CertificateConfigServerCertInfoArgs struct {
	// Alias of the certificate.Note: This field may return null, indicating that no valid values can be obtained.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// ID of the server certificate.Note: This field may return null, indicating that no valid values can be obtained.
	CertId pulumi.StringInput `pulumi:"certId"`
	// Domain name of the certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// Time when the certificate is deployed. Note: This field may return null, indicating that no valid values can be obtained.
	DeployTime pulumi.StringPtrInput `pulumi:"deployTime"`
	// Time when the certificate expires. Note: This field may return null, indicating that no valid values can be obtained.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
	// Signature algorithm. Note: This field may return null, indicating that no valid values can be obtained.
	SignAlgo pulumi.StringPtrInput `pulumi:"signAlgo"`
	// Type of the certificate. Values: `default`: Default certificate; `upload`: Specified certificate; `managed`: Tencent Cloud-managed certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateConfigServerCertInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigServerCertInfo)(nil)).Elem()
}

func (i CertificateConfigServerCertInfoArgs) ToCertificateConfigServerCertInfoOutput() CertificateConfigServerCertInfoOutput {
	return i.ToCertificateConfigServerCertInfoOutputWithContext(context.Background())
}

func (i CertificateConfigServerCertInfoArgs) ToCertificateConfigServerCertInfoOutputWithContext(ctx context.Context) CertificateConfigServerCertInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigServerCertInfoOutput)
}

// CertificateConfigServerCertInfoArrayInput is an input type that accepts CertificateConfigServerCertInfoArray and CertificateConfigServerCertInfoArrayOutput values.
// You can construct a concrete instance of `CertificateConfigServerCertInfoArrayInput` via:
//
//	CertificateConfigServerCertInfoArray{ CertificateConfigServerCertInfoArgs{...} }
type CertificateConfigServerCertInfoArrayInput interface {
	pulumi.Input

	ToCertificateConfigServerCertInfoArrayOutput() CertificateConfigServerCertInfoArrayOutput
	ToCertificateConfigServerCertInfoArrayOutputWithContext(context.Context) CertificateConfigServerCertInfoArrayOutput
}

type CertificateConfigServerCertInfoArray []CertificateConfigServerCertInfoInput

func (CertificateConfigServerCertInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigServerCertInfo)(nil)).Elem()
}

func (i CertificateConfigServerCertInfoArray) ToCertificateConfigServerCertInfoArrayOutput() CertificateConfigServerCertInfoArrayOutput {
	return i.ToCertificateConfigServerCertInfoArrayOutputWithContext(context.Background())
}

func (i CertificateConfigServerCertInfoArray) ToCertificateConfigServerCertInfoArrayOutputWithContext(ctx context.Context) CertificateConfigServerCertInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigServerCertInfoArrayOutput)
}

type CertificateConfigServerCertInfoOutput struct{ *pulumi.OutputState }

func (CertificateConfigServerCertInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigServerCertInfo)(nil)).Elem()
}

func (o CertificateConfigServerCertInfoOutput) ToCertificateConfigServerCertInfoOutput() CertificateConfigServerCertInfoOutput {
	return o
}

func (o CertificateConfigServerCertInfoOutput) ToCertificateConfigServerCertInfoOutputWithContext(ctx context.Context) CertificateConfigServerCertInfoOutput {
	return o
}

// Alias of the certificate.Note: This field may return null, indicating that no valid values can be obtained.
func (o CertificateConfigServerCertInfoOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// ID of the server certificate.Note: This field may return null, indicating that no valid values can be obtained.
func (o CertificateConfigServerCertInfoOutput) CertId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) string { return v.CertId }).(pulumi.StringOutput)
}

// Domain name of the certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
func (o CertificateConfigServerCertInfoOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// Time when the certificate is deployed. Note: This field may return null, indicating that no valid values can be obtained.
func (o CertificateConfigServerCertInfoOutput) DeployTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) *string { return v.DeployTime }).(pulumi.StringPtrOutput)
}

// Time when the certificate expires. Note: This field may return null, indicating that no valid values can be obtained.
func (o CertificateConfigServerCertInfoOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// Signature algorithm. Note: This field may return null, indicating that no valid values can be obtained.
func (o CertificateConfigServerCertInfoOutput) SignAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) *string { return v.SignAlgo }).(pulumi.StringPtrOutput)
}

// Type of the certificate. Values: `default`: Default certificate; `upload`: Specified certificate; `managed`: Tencent Cloud-managed certificate. Note: This field may return `null`, indicating that no valid value can be obtained.
func (o CertificateConfigServerCertInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigServerCertInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CertificateConfigServerCertInfoArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigServerCertInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigServerCertInfo)(nil)).Elem()
}

func (o CertificateConfigServerCertInfoArrayOutput) ToCertificateConfigServerCertInfoArrayOutput() CertificateConfigServerCertInfoArrayOutput {
	return o
}

func (o CertificateConfigServerCertInfoArrayOutput) ToCertificateConfigServerCertInfoArrayOutputWithContext(ctx context.Context) CertificateConfigServerCertInfoArrayOutput {
	return o
}

func (o CertificateConfigServerCertInfoArrayOutput) Index(i pulumi.IntInput) CertificateConfigServerCertInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigServerCertInfo {
		return vs[0].([]CertificateConfigServerCertInfo)[vs[1].(int)]
	}).(CertificateConfigServerCertInfoOutput)
}

type FunctionRuleFunctionRuleCondition struct {
	// For edge function trigger rule conditions, if all items in the list are satisfied, then the condition is considered fulfilled.
	RuleConditions []FunctionRuleFunctionRuleConditionRuleCondition `pulumi:"ruleConditions"`
}

// FunctionRuleFunctionRuleConditionInput is an input type that accepts FunctionRuleFunctionRuleConditionArgs and FunctionRuleFunctionRuleConditionOutput values.
// You can construct a concrete instance of `FunctionRuleFunctionRuleConditionInput` via:
//
//	FunctionRuleFunctionRuleConditionArgs{...}
type FunctionRuleFunctionRuleConditionInput interface {
	pulumi.Input

	ToFunctionRuleFunctionRuleConditionOutput() FunctionRuleFunctionRuleConditionOutput
	ToFunctionRuleFunctionRuleConditionOutputWithContext(context.Context) FunctionRuleFunctionRuleConditionOutput
}

type FunctionRuleFunctionRuleConditionArgs struct {
	// For edge function trigger rule conditions, if all items in the list are satisfied, then the condition is considered fulfilled.
	RuleConditions FunctionRuleFunctionRuleConditionRuleConditionArrayInput `pulumi:"ruleConditions"`
}

func (FunctionRuleFunctionRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuleFunctionRuleCondition)(nil)).Elem()
}

func (i FunctionRuleFunctionRuleConditionArgs) ToFunctionRuleFunctionRuleConditionOutput() FunctionRuleFunctionRuleConditionOutput {
	return i.ToFunctionRuleFunctionRuleConditionOutputWithContext(context.Background())
}

func (i FunctionRuleFunctionRuleConditionArgs) ToFunctionRuleFunctionRuleConditionOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuleFunctionRuleConditionOutput)
}

// FunctionRuleFunctionRuleConditionArrayInput is an input type that accepts FunctionRuleFunctionRuleConditionArray and FunctionRuleFunctionRuleConditionArrayOutput values.
// You can construct a concrete instance of `FunctionRuleFunctionRuleConditionArrayInput` via:
//
//	FunctionRuleFunctionRuleConditionArray{ FunctionRuleFunctionRuleConditionArgs{...} }
type FunctionRuleFunctionRuleConditionArrayInput interface {
	pulumi.Input

	ToFunctionRuleFunctionRuleConditionArrayOutput() FunctionRuleFunctionRuleConditionArrayOutput
	ToFunctionRuleFunctionRuleConditionArrayOutputWithContext(context.Context) FunctionRuleFunctionRuleConditionArrayOutput
}

type FunctionRuleFunctionRuleConditionArray []FunctionRuleFunctionRuleConditionInput

func (FunctionRuleFunctionRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionRuleFunctionRuleCondition)(nil)).Elem()
}

func (i FunctionRuleFunctionRuleConditionArray) ToFunctionRuleFunctionRuleConditionArrayOutput() FunctionRuleFunctionRuleConditionArrayOutput {
	return i.ToFunctionRuleFunctionRuleConditionArrayOutputWithContext(context.Background())
}

func (i FunctionRuleFunctionRuleConditionArray) ToFunctionRuleFunctionRuleConditionArrayOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuleFunctionRuleConditionArrayOutput)
}

type FunctionRuleFunctionRuleConditionOutput struct{ *pulumi.OutputState }

func (FunctionRuleFunctionRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuleFunctionRuleCondition)(nil)).Elem()
}

func (o FunctionRuleFunctionRuleConditionOutput) ToFunctionRuleFunctionRuleConditionOutput() FunctionRuleFunctionRuleConditionOutput {
	return o
}

func (o FunctionRuleFunctionRuleConditionOutput) ToFunctionRuleFunctionRuleConditionOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionOutput {
	return o
}

// For edge function trigger rule conditions, if all items in the list are satisfied, then the condition is considered fulfilled.
func (o FunctionRuleFunctionRuleConditionOutput) RuleConditions() FunctionRuleFunctionRuleConditionRuleConditionArrayOutput {
	return o.ApplyT(func(v FunctionRuleFunctionRuleCondition) []FunctionRuleFunctionRuleConditionRuleCondition {
		return v.RuleConditions
	}).(FunctionRuleFunctionRuleConditionRuleConditionArrayOutput)
}

type FunctionRuleFunctionRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (FunctionRuleFunctionRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionRuleFunctionRuleCondition)(nil)).Elem()
}

func (o FunctionRuleFunctionRuleConditionArrayOutput) ToFunctionRuleFunctionRuleConditionArrayOutput() FunctionRuleFunctionRuleConditionArrayOutput {
	return o
}

func (o FunctionRuleFunctionRuleConditionArrayOutput) ToFunctionRuleFunctionRuleConditionArrayOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionArrayOutput {
	return o
}

func (o FunctionRuleFunctionRuleConditionArrayOutput) Index(i pulumi.IntInput) FunctionRuleFunctionRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionRuleFunctionRuleCondition {
		return vs[0].([]FunctionRuleFunctionRuleCondition)[vs[1].(int)]
	}).(FunctionRuleFunctionRuleConditionOutput)
}

type FunctionRuleFunctionRuleConditionRuleCondition struct {
	// Whether the parameter value is case insensitive. Default value: false.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
	Name *string `pulumi:"name"`
	// Operator. Valid values:
	Operator string `pulumi:"operator"`
	// The match type. Values:
	Target string `pulumi:"target"`
	// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
	// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
	// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
	// - When `Target=all`, it indicates any site request.
	// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
	// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
	// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
	// - When `Target=client_country`, enter the ISO-3166 country/region code.
	// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
	// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
	Values []string `pulumi:"values"`
}

// FunctionRuleFunctionRuleConditionRuleConditionInput is an input type that accepts FunctionRuleFunctionRuleConditionRuleConditionArgs and FunctionRuleFunctionRuleConditionRuleConditionOutput values.
// You can construct a concrete instance of `FunctionRuleFunctionRuleConditionRuleConditionInput` via:
//
//	FunctionRuleFunctionRuleConditionRuleConditionArgs{...}
type FunctionRuleFunctionRuleConditionRuleConditionInput interface {
	pulumi.Input

	ToFunctionRuleFunctionRuleConditionRuleConditionOutput() FunctionRuleFunctionRuleConditionRuleConditionOutput
	ToFunctionRuleFunctionRuleConditionRuleConditionOutputWithContext(context.Context) FunctionRuleFunctionRuleConditionRuleConditionOutput
}

type FunctionRuleFunctionRuleConditionRuleConditionArgs struct {
	// Whether the parameter value is case insensitive. Default value: false.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Operator. Valid values:
	Operator pulumi.StringInput `pulumi:"operator"`
	// The match type. Values:
	Target pulumi.StringInput `pulumi:"target"`
	// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
	// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
	// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
	// - When `Target=all`, it indicates any site request.
	// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
	// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
	// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
	// - When `Target=client_country`, enter the ISO-3166 country/region code.
	// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
	// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (FunctionRuleFunctionRuleConditionRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuleFunctionRuleConditionRuleCondition)(nil)).Elem()
}

func (i FunctionRuleFunctionRuleConditionRuleConditionArgs) ToFunctionRuleFunctionRuleConditionRuleConditionOutput() FunctionRuleFunctionRuleConditionRuleConditionOutput {
	return i.ToFunctionRuleFunctionRuleConditionRuleConditionOutputWithContext(context.Background())
}

func (i FunctionRuleFunctionRuleConditionRuleConditionArgs) ToFunctionRuleFunctionRuleConditionRuleConditionOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuleFunctionRuleConditionRuleConditionOutput)
}

// FunctionRuleFunctionRuleConditionRuleConditionArrayInput is an input type that accepts FunctionRuleFunctionRuleConditionRuleConditionArray and FunctionRuleFunctionRuleConditionRuleConditionArrayOutput values.
// You can construct a concrete instance of `FunctionRuleFunctionRuleConditionRuleConditionArrayInput` via:
//
//	FunctionRuleFunctionRuleConditionRuleConditionArray{ FunctionRuleFunctionRuleConditionRuleConditionArgs{...} }
type FunctionRuleFunctionRuleConditionRuleConditionArrayInput interface {
	pulumi.Input

	ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutput() FunctionRuleFunctionRuleConditionRuleConditionArrayOutput
	ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutputWithContext(context.Context) FunctionRuleFunctionRuleConditionRuleConditionArrayOutput
}

type FunctionRuleFunctionRuleConditionRuleConditionArray []FunctionRuleFunctionRuleConditionRuleConditionInput

func (FunctionRuleFunctionRuleConditionRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionRuleFunctionRuleConditionRuleCondition)(nil)).Elem()
}

func (i FunctionRuleFunctionRuleConditionRuleConditionArray) ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutput() FunctionRuleFunctionRuleConditionRuleConditionArrayOutput {
	return i.ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutputWithContext(context.Background())
}

func (i FunctionRuleFunctionRuleConditionRuleConditionArray) ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuleFunctionRuleConditionRuleConditionArrayOutput)
}

type FunctionRuleFunctionRuleConditionRuleConditionOutput struct{ *pulumi.OutputState }

func (FunctionRuleFunctionRuleConditionRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuleFunctionRuleConditionRuleCondition)(nil)).Elem()
}

func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) ToFunctionRuleFunctionRuleConditionRuleConditionOutput() FunctionRuleFunctionRuleConditionRuleConditionOutput {
	return o
}

func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) ToFunctionRuleFunctionRuleConditionRuleConditionOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionRuleConditionOutput {
	return o
}

// Whether the parameter value is case insensitive. Default value: false.
func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionRuleFunctionRuleConditionRuleCondition) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionRuleFunctionRuleConditionRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator. Valid values:
func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuleFunctionRuleConditionRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// The match type. Values:
func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuleFunctionRuleConditionRuleCondition) string { return v.Target }).(pulumi.StringOutput)
}

// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
// - When `Target=all`, it indicates any site request.
// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
// - When `Target=client_country`, enter the ISO-3166 country/region code.
// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
func (o FunctionRuleFunctionRuleConditionRuleConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionRuleFunctionRuleConditionRuleCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type FunctionRuleFunctionRuleConditionRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (FunctionRuleFunctionRuleConditionRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionRuleFunctionRuleConditionRuleCondition)(nil)).Elem()
}

func (o FunctionRuleFunctionRuleConditionRuleConditionArrayOutput) ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutput() FunctionRuleFunctionRuleConditionRuleConditionArrayOutput {
	return o
}

func (o FunctionRuleFunctionRuleConditionRuleConditionArrayOutput) ToFunctionRuleFunctionRuleConditionRuleConditionArrayOutputWithContext(ctx context.Context) FunctionRuleFunctionRuleConditionRuleConditionArrayOutput {
	return o
}

func (o FunctionRuleFunctionRuleConditionRuleConditionArrayOutput) Index(i pulumi.IntInput) FunctionRuleFunctionRuleConditionRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionRuleFunctionRuleConditionRuleCondition {
		return vs[0].([]FunctionRuleFunctionRuleConditionRuleCondition)[vs[1].(int)]
	}).(FunctionRuleFunctionRuleConditionRuleConditionOutput)
}

type FunctionRuntimeEnvironmentEnvironmentVariable struct {
	// The name of the variable, which is limited to alphanumeric characters and the special characters `@`, `.`, `-`, and `_`. It can have a maximum of 64 bytes and should not be duplicated.
	Key string `pulumi:"key"`
	// The type of the variable can have the following values:  - `string`: Represents a string type.  - `json`: Represents a JSON object type.
	Type string `pulumi:"type"`
	// The value of the variable, which is limited to a maximum of 5000 bytes. The default value is empty.
	Value string `pulumi:"value"`
}

// FunctionRuntimeEnvironmentEnvironmentVariableInput is an input type that accepts FunctionRuntimeEnvironmentEnvironmentVariableArgs and FunctionRuntimeEnvironmentEnvironmentVariableOutput values.
// You can construct a concrete instance of `FunctionRuntimeEnvironmentEnvironmentVariableInput` via:
//
//	FunctionRuntimeEnvironmentEnvironmentVariableArgs{...}
type FunctionRuntimeEnvironmentEnvironmentVariableInput interface {
	pulumi.Input

	ToFunctionRuntimeEnvironmentEnvironmentVariableOutput() FunctionRuntimeEnvironmentEnvironmentVariableOutput
	ToFunctionRuntimeEnvironmentEnvironmentVariableOutputWithContext(context.Context) FunctionRuntimeEnvironmentEnvironmentVariableOutput
}

type FunctionRuntimeEnvironmentEnvironmentVariableArgs struct {
	// The name of the variable, which is limited to alphanumeric characters and the special characters `@`, `.`, `-`, and `_`. It can have a maximum of 64 bytes and should not be duplicated.
	Key pulumi.StringInput `pulumi:"key"`
	// The type of the variable can have the following values:  - `string`: Represents a string type.  - `json`: Represents a JSON object type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the variable, which is limited to a maximum of 5000 bytes. The default value is empty.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FunctionRuntimeEnvironmentEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuntimeEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i FunctionRuntimeEnvironmentEnvironmentVariableArgs) ToFunctionRuntimeEnvironmentEnvironmentVariableOutput() FunctionRuntimeEnvironmentEnvironmentVariableOutput {
	return i.ToFunctionRuntimeEnvironmentEnvironmentVariableOutputWithContext(context.Background())
}

func (i FunctionRuntimeEnvironmentEnvironmentVariableArgs) ToFunctionRuntimeEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) FunctionRuntimeEnvironmentEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuntimeEnvironmentEnvironmentVariableOutput)
}

// FunctionRuntimeEnvironmentEnvironmentVariableArrayInput is an input type that accepts FunctionRuntimeEnvironmentEnvironmentVariableArray and FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `FunctionRuntimeEnvironmentEnvironmentVariableArrayInput` via:
//
//	FunctionRuntimeEnvironmentEnvironmentVariableArray{ FunctionRuntimeEnvironmentEnvironmentVariableArgs{...} }
type FunctionRuntimeEnvironmentEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutput() FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput
	ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutputWithContext(context.Context) FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput
}

type FunctionRuntimeEnvironmentEnvironmentVariableArray []FunctionRuntimeEnvironmentEnvironmentVariableInput

func (FunctionRuntimeEnvironmentEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionRuntimeEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i FunctionRuntimeEnvironmentEnvironmentVariableArray) ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutput() FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput {
	return i.ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i FunctionRuntimeEnvironmentEnvironmentVariableArray) ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput)
}

type FunctionRuntimeEnvironmentEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (FunctionRuntimeEnvironmentEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuntimeEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o FunctionRuntimeEnvironmentEnvironmentVariableOutput) ToFunctionRuntimeEnvironmentEnvironmentVariableOutput() FunctionRuntimeEnvironmentEnvironmentVariableOutput {
	return o
}

func (o FunctionRuntimeEnvironmentEnvironmentVariableOutput) ToFunctionRuntimeEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) FunctionRuntimeEnvironmentEnvironmentVariableOutput {
	return o
}

// The name of the variable, which is limited to alphanumeric characters and the special characters `@`, `.`, `-`, and `_`. It can have a maximum of 64 bytes and should not be duplicated.
func (o FunctionRuntimeEnvironmentEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuntimeEnvironmentEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// The type of the variable can have the following values:  - `string`: Represents a string type.  - `json`: Represents a JSON object type.
func (o FunctionRuntimeEnvironmentEnvironmentVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuntimeEnvironmentEnvironmentVariable) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the variable, which is limited to a maximum of 5000 bytes. The default value is empty.
func (o FunctionRuntimeEnvironmentEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuntimeEnvironmentEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionRuntimeEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput) ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutput() FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput) ToFunctionRuntimeEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) FunctionRuntimeEnvironmentEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionRuntimeEnvironmentEnvironmentVariable {
		return vs[0].([]FunctionRuntimeEnvironmentEnvironmentVariable)[vs[1].(int)]
	}).(FunctionRuntimeEnvironmentEnvironmentVariableOutput)
}

type L4ProxyDdosProtectionConfig struct {
	// Exclusive DDoS protection specifications in the Chinese mainland. For details, see [Dedicated DDoS Mitigation Fee (Pay-as-You-Go)] (https://intl.cloud.tencent.com/document/product/1552/94162?from_cn_redirect=1). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `BASE30_MAX300`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 30 Gbps and an elastic protection bandwidth of up to 300 Gbps; `BASE60_MAX600`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 60 Gbps and an elastic protection bandwidth of up to 600 Gbps. If no parameters are filled, the default value PLATFORM is used.
	LevelMainland *string `pulumi:"levelMainland"`
	// Exclusive DDoS protection specifications in the worldwide region (excluding the Chinese mainland). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `ANYCAST300`: Exclusive DDoS protection enabled, offering a total maximum protection bandwidth of 300 Gbps; `ANYCAST_ALLIN`: Exclusive DDoS protection enabled, utilizing all available protection resources for protection. When no parameters are filled, the default value PLATFORM is used.
	LevelOverseas *string `pulumi:"levelOverseas"`
	// Configuration of elastic protection bandwidth for exclusive DDoS protection in the Chinese mainland.Valid only when exclusive DDoS protection in the Chinese mainland is enabled (refer to the LevelMainland parameter configuration), and the value has the following limitations: When exclusive DDoS protection is enabled in the Chinese mainland and the 30 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE30_MAX300): the value range is 30 to 300 in Gbps; When exclusive DDoS protection is enabled in the Chinese mainland and the 60 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE60_MAX600): the value range is 60 to 600 in Gbps; When the default protection of the platform is used (the LevelMainland parameter value is PLATFORM): configuration is not supported, and the value of this parameter is invalid.
	MaxBandwidthMainland *int `pulumi:"maxBandwidthMainland"`
}

// L4ProxyDdosProtectionConfigInput is an input type that accepts L4ProxyDdosProtectionConfigArgs and L4ProxyDdosProtectionConfigOutput values.
// You can construct a concrete instance of `L4ProxyDdosProtectionConfigInput` via:
//
//	L4ProxyDdosProtectionConfigArgs{...}
type L4ProxyDdosProtectionConfigInput interface {
	pulumi.Input

	ToL4ProxyDdosProtectionConfigOutput() L4ProxyDdosProtectionConfigOutput
	ToL4ProxyDdosProtectionConfigOutputWithContext(context.Context) L4ProxyDdosProtectionConfigOutput
}

type L4ProxyDdosProtectionConfigArgs struct {
	// Exclusive DDoS protection specifications in the Chinese mainland. For details, see [Dedicated DDoS Mitigation Fee (Pay-as-You-Go)] (https://intl.cloud.tencent.com/document/product/1552/94162?from_cn_redirect=1). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `BASE30_MAX300`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 30 Gbps and an elastic protection bandwidth of up to 300 Gbps; `BASE60_MAX600`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 60 Gbps and an elastic protection bandwidth of up to 600 Gbps. If no parameters are filled, the default value PLATFORM is used.
	LevelMainland pulumi.StringPtrInput `pulumi:"levelMainland"`
	// Exclusive DDoS protection specifications in the worldwide region (excluding the Chinese mainland). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `ANYCAST300`: Exclusive DDoS protection enabled, offering a total maximum protection bandwidth of 300 Gbps; `ANYCAST_ALLIN`: Exclusive DDoS protection enabled, utilizing all available protection resources for protection. When no parameters are filled, the default value PLATFORM is used.
	LevelOverseas pulumi.StringPtrInput `pulumi:"levelOverseas"`
	// Configuration of elastic protection bandwidth for exclusive DDoS protection in the Chinese mainland.Valid only when exclusive DDoS protection in the Chinese mainland is enabled (refer to the LevelMainland parameter configuration), and the value has the following limitations: When exclusive DDoS protection is enabled in the Chinese mainland and the 30 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE30_MAX300): the value range is 30 to 300 in Gbps; When exclusive DDoS protection is enabled in the Chinese mainland and the 60 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE60_MAX600): the value range is 60 to 600 in Gbps; When the default protection of the platform is used (the LevelMainland parameter value is PLATFORM): configuration is not supported, and the value of this parameter is invalid.
	MaxBandwidthMainland pulumi.IntPtrInput `pulumi:"maxBandwidthMainland"`
}

func (L4ProxyDdosProtectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4ProxyDdosProtectionConfig)(nil)).Elem()
}

func (i L4ProxyDdosProtectionConfigArgs) ToL4ProxyDdosProtectionConfigOutput() L4ProxyDdosProtectionConfigOutput {
	return i.ToL4ProxyDdosProtectionConfigOutputWithContext(context.Background())
}

func (i L4ProxyDdosProtectionConfigArgs) ToL4ProxyDdosProtectionConfigOutputWithContext(ctx context.Context) L4ProxyDdosProtectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4ProxyDdosProtectionConfigOutput)
}

func (i L4ProxyDdosProtectionConfigArgs) ToL4ProxyDdosProtectionConfigPtrOutput() L4ProxyDdosProtectionConfigPtrOutput {
	return i.ToL4ProxyDdosProtectionConfigPtrOutputWithContext(context.Background())
}

func (i L4ProxyDdosProtectionConfigArgs) ToL4ProxyDdosProtectionConfigPtrOutputWithContext(ctx context.Context) L4ProxyDdosProtectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4ProxyDdosProtectionConfigOutput).ToL4ProxyDdosProtectionConfigPtrOutputWithContext(ctx)
}

// L4ProxyDdosProtectionConfigPtrInput is an input type that accepts L4ProxyDdosProtectionConfigArgs, L4ProxyDdosProtectionConfigPtr and L4ProxyDdosProtectionConfigPtrOutput values.
// You can construct a concrete instance of `L4ProxyDdosProtectionConfigPtrInput` via:
//
//	        L4ProxyDdosProtectionConfigArgs{...}
//
//	or:
//
//	        nil
type L4ProxyDdosProtectionConfigPtrInput interface {
	pulumi.Input

	ToL4ProxyDdosProtectionConfigPtrOutput() L4ProxyDdosProtectionConfigPtrOutput
	ToL4ProxyDdosProtectionConfigPtrOutputWithContext(context.Context) L4ProxyDdosProtectionConfigPtrOutput
}

type l4proxyDdosProtectionConfigPtrType L4ProxyDdosProtectionConfigArgs

func L4ProxyDdosProtectionConfigPtr(v *L4ProxyDdosProtectionConfigArgs) L4ProxyDdosProtectionConfigPtrInput {
	return (*l4proxyDdosProtectionConfigPtrType)(v)
}

func (*l4proxyDdosProtectionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**L4ProxyDdosProtectionConfig)(nil)).Elem()
}

func (i *l4proxyDdosProtectionConfigPtrType) ToL4ProxyDdosProtectionConfigPtrOutput() L4ProxyDdosProtectionConfigPtrOutput {
	return i.ToL4ProxyDdosProtectionConfigPtrOutputWithContext(context.Background())
}

func (i *l4proxyDdosProtectionConfigPtrType) ToL4ProxyDdosProtectionConfigPtrOutputWithContext(ctx context.Context) L4ProxyDdosProtectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4ProxyDdosProtectionConfigPtrOutput)
}

type L4ProxyDdosProtectionConfigOutput struct{ *pulumi.OutputState }

func (L4ProxyDdosProtectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4ProxyDdosProtectionConfig)(nil)).Elem()
}

func (o L4ProxyDdosProtectionConfigOutput) ToL4ProxyDdosProtectionConfigOutput() L4ProxyDdosProtectionConfigOutput {
	return o
}

func (o L4ProxyDdosProtectionConfigOutput) ToL4ProxyDdosProtectionConfigOutputWithContext(ctx context.Context) L4ProxyDdosProtectionConfigOutput {
	return o
}

func (o L4ProxyDdosProtectionConfigOutput) ToL4ProxyDdosProtectionConfigPtrOutput() L4ProxyDdosProtectionConfigPtrOutput {
	return o.ToL4ProxyDdosProtectionConfigPtrOutputWithContext(context.Background())
}

func (o L4ProxyDdosProtectionConfigOutput) ToL4ProxyDdosProtectionConfigPtrOutputWithContext(ctx context.Context) L4ProxyDdosProtectionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v L4ProxyDdosProtectionConfig) *L4ProxyDdosProtectionConfig {
		return &v
	}).(L4ProxyDdosProtectionConfigPtrOutput)
}

// Exclusive DDoS protection specifications in the Chinese mainland. For details, see [Dedicated DDoS Mitigation Fee (Pay-as-You-Go)] (https://intl.cloud.tencent.com/document/product/1552/94162?from_cn_redirect=1). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `BASE30_MAX300`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 30 Gbps and an elastic protection bandwidth of up to 300 Gbps; `BASE60_MAX600`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 60 Gbps and an elastic protection bandwidth of up to 600 Gbps. If no parameters are filled, the default value PLATFORM is used.
func (o L4ProxyDdosProtectionConfigOutput) LevelMainland() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4ProxyDdosProtectionConfig) *string { return v.LevelMainland }).(pulumi.StringPtrOutput)
}

// Exclusive DDoS protection specifications in the worldwide region (excluding the Chinese mainland). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `ANYCAST300`: Exclusive DDoS protection enabled, offering a total maximum protection bandwidth of 300 Gbps; `ANYCAST_ALLIN`: Exclusive DDoS protection enabled, utilizing all available protection resources for protection. When no parameters are filled, the default value PLATFORM is used.
func (o L4ProxyDdosProtectionConfigOutput) LevelOverseas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4ProxyDdosProtectionConfig) *string { return v.LevelOverseas }).(pulumi.StringPtrOutput)
}

// Configuration of elastic protection bandwidth for exclusive DDoS protection in the Chinese mainland.Valid only when exclusive DDoS protection in the Chinese mainland is enabled (refer to the LevelMainland parameter configuration), and the value has the following limitations: When exclusive DDoS protection is enabled in the Chinese mainland and the 30 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE30_MAX300): the value range is 30 to 300 in Gbps; When exclusive DDoS protection is enabled in the Chinese mainland and the 60 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE60_MAX600): the value range is 60 to 600 in Gbps; When the default protection of the platform is used (the LevelMainland parameter value is PLATFORM): configuration is not supported, and the value of this parameter is invalid.
func (o L4ProxyDdosProtectionConfigOutput) MaxBandwidthMainland() pulumi.IntPtrOutput {
	return o.ApplyT(func(v L4ProxyDdosProtectionConfig) *int { return v.MaxBandwidthMainland }).(pulumi.IntPtrOutput)
}

type L4ProxyDdosProtectionConfigPtrOutput struct{ *pulumi.OutputState }

func (L4ProxyDdosProtectionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L4ProxyDdosProtectionConfig)(nil)).Elem()
}

func (o L4ProxyDdosProtectionConfigPtrOutput) ToL4ProxyDdosProtectionConfigPtrOutput() L4ProxyDdosProtectionConfigPtrOutput {
	return o
}

func (o L4ProxyDdosProtectionConfigPtrOutput) ToL4ProxyDdosProtectionConfigPtrOutputWithContext(ctx context.Context) L4ProxyDdosProtectionConfigPtrOutput {
	return o
}

func (o L4ProxyDdosProtectionConfigPtrOutput) Elem() L4ProxyDdosProtectionConfigOutput {
	return o.ApplyT(func(v *L4ProxyDdosProtectionConfig) L4ProxyDdosProtectionConfig {
		if v != nil {
			return *v
		}
		var ret L4ProxyDdosProtectionConfig
		return ret
	}).(L4ProxyDdosProtectionConfigOutput)
}

// Exclusive DDoS protection specifications in the Chinese mainland. For details, see [Dedicated DDoS Mitigation Fee (Pay-as-You-Go)] (https://intl.cloud.tencent.com/document/product/1552/94162?from_cn_redirect=1). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `BASE30_MAX300`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 30 Gbps and an elastic protection bandwidth of up to 300 Gbps; `BASE60_MAX600`: Exclusive DDoS protection enabled, providing a baseline protection bandwidth of 60 Gbps and an elastic protection bandwidth of up to 600 Gbps. If no parameters are filled, the default value PLATFORM is used.
func (o L4ProxyDdosProtectionConfigPtrOutput) LevelMainland() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L4ProxyDdosProtectionConfig) *string {
		if v == nil {
			return nil
		}
		return v.LevelMainland
	}).(pulumi.StringPtrOutput)
}

// Exclusive DDoS protection specifications in the worldwide region (excluding the Chinese mainland). `PLATFORM`: Default protection of the platform, i.e., Exclusive DDoS protection is not enabled; `ANYCAST300`: Exclusive DDoS protection enabled, offering a total maximum protection bandwidth of 300 Gbps; `ANYCAST_ALLIN`: Exclusive DDoS protection enabled, utilizing all available protection resources for protection. When no parameters are filled, the default value PLATFORM is used.
func (o L4ProxyDdosProtectionConfigPtrOutput) LevelOverseas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L4ProxyDdosProtectionConfig) *string {
		if v == nil {
			return nil
		}
		return v.LevelOverseas
	}).(pulumi.StringPtrOutput)
}

// Configuration of elastic protection bandwidth for exclusive DDoS protection in the Chinese mainland.Valid only when exclusive DDoS protection in the Chinese mainland is enabled (refer to the LevelMainland parameter configuration), and the value has the following limitations: When exclusive DDoS protection is enabled in the Chinese mainland and the 30 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE30_MAX300): the value range is 30 to 300 in Gbps; When exclusive DDoS protection is enabled in the Chinese mainland and the 60 Gbps baseline protection bandwidth is used (the LevelMainland parameter value is BASE60_MAX600): the value range is 60 to 600 in Gbps; When the default protection of the platform is used (the LevelMainland parameter value is PLATFORM): configuration is not supported, and the value of this parameter is invalid.
func (o L4ProxyDdosProtectionConfigPtrOutput) MaxBandwidthMainland() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *L4ProxyDdosProtectionConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxBandwidthMainland
	}).(pulumi.IntPtrOutput)
}

type OriginGroupRecord struct {
	// Whether to use private authentication, it takes effect when the origin site type RecordType=COS/AWS_S3, the values are:
	Private *bool `pulumi:"private"`
	// Parameters for private authentication. Only valid when `Private` is `true`.
	PrivateParameters []OriginGroupRecordPrivateParameter `pulumi:"privateParameters"`
	// Origin site record value, does not include port information, can be: IPv4, IPv6, domain name format.
	Record string `pulumi:"record"`
	// Origin record ID.
	RecordId *string `pulumi:"recordId"`
	// Origin site type, the values are:
	Type *string `pulumi:"type"`
	// The weight of the origin site, the value is 0-100. If it is not filled in, it means that the weight will not be set and the system will schedule it freely. If it is filled in with 0, it means that the weight is 0 and the traffic will not be scheduled to this origin site.
	Weight *int `pulumi:"weight"`
}

// OriginGroupRecordInput is an input type that accepts OriginGroupRecordArgs and OriginGroupRecordOutput values.
// You can construct a concrete instance of `OriginGroupRecordInput` via:
//
//	OriginGroupRecordArgs{...}
type OriginGroupRecordInput interface {
	pulumi.Input

	ToOriginGroupRecordOutput() OriginGroupRecordOutput
	ToOriginGroupRecordOutputWithContext(context.Context) OriginGroupRecordOutput
}

type OriginGroupRecordArgs struct {
	// Whether to use private authentication, it takes effect when the origin site type RecordType=COS/AWS_S3, the values are:
	Private pulumi.BoolPtrInput `pulumi:"private"`
	// Parameters for private authentication. Only valid when `Private` is `true`.
	PrivateParameters OriginGroupRecordPrivateParameterArrayInput `pulumi:"privateParameters"`
	// Origin site record value, does not include port information, can be: IPv4, IPv6, domain name format.
	Record pulumi.StringInput `pulumi:"record"`
	// Origin record ID.
	RecordId pulumi.StringPtrInput `pulumi:"recordId"`
	// Origin site type, the values are:
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The weight of the origin site, the value is 0-100. If it is not filled in, it means that the weight will not be set and the system will schedule it freely. If it is filled in with 0, it means that the weight is 0 and the traffic will not be scheduled to this origin site.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (OriginGroupRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupRecord)(nil)).Elem()
}

func (i OriginGroupRecordArgs) ToOriginGroupRecordOutput() OriginGroupRecordOutput {
	return i.ToOriginGroupRecordOutputWithContext(context.Background())
}

func (i OriginGroupRecordArgs) ToOriginGroupRecordOutputWithContext(ctx context.Context) OriginGroupRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupRecordOutput)
}

// OriginGroupRecordArrayInput is an input type that accepts OriginGroupRecordArray and OriginGroupRecordArrayOutput values.
// You can construct a concrete instance of `OriginGroupRecordArrayInput` via:
//
//	OriginGroupRecordArray{ OriginGroupRecordArgs{...} }
type OriginGroupRecordArrayInput interface {
	pulumi.Input

	ToOriginGroupRecordArrayOutput() OriginGroupRecordArrayOutput
	ToOriginGroupRecordArrayOutputWithContext(context.Context) OriginGroupRecordArrayOutput
}

type OriginGroupRecordArray []OriginGroupRecordInput

func (OriginGroupRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupRecord)(nil)).Elem()
}

func (i OriginGroupRecordArray) ToOriginGroupRecordArrayOutput() OriginGroupRecordArrayOutput {
	return i.ToOriginGroupRecordArrayOutputWithContext(context.Background())
}

func (i OriginGroupRecordArray) ToOriginGroupRecordArrayOutputWithContext(ctx context.Context) OriginGroupRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupRecordArrayOutput)
}

type OriginGroupRecordOutput struct{ *pulumi.OutputState }

func (OriginGroupRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupRecord)(nil)).Elem()
}

func (o OriginGroupRecordOutput) ToOriginGroupRecordOutput() OriginGroupRecordOutput {
	return o
}

func (o OriginGroupRecordOutput) ToOriginGroupRecordOutputWithContext(ctx context.Context) OriginGroupRecordOutput {
	return o
}

// Whether to use private authentication, it takes effect when the origin site type RecordType=COS/AWS_S3, the values are:
func (o OriginGroupRecordOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginGroupRecord) *bool { return v.Private }).(pulumi.BoolPtrOutput)
}

// Parameters for private authentication. Only valid when `Private` is `true`.
func (o OriginGroupRecordOutput) PrivateParameters() OriginGroupRecordPrivateParameterArrayOutput {
	return o.ApplyT(func(v OriginGroupRecord) []OriginGroupRecordPrivateParameter { return v.PrivateParameters }).(OriginGroupRecordPrivateParameterArrayOutput)
}

// Origin site record value, does not include port information, can be: IPv4, IPv6, domain name format.
func (o OriginGroupRecordOutput) Record() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupRecord) string { return v.Record }).(pulumi.StringOutput)
}

// Origin record ID.
func (o OriginGroupRecordOutput) RecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupRecord) *string { return v.RecordId }).(pulumi.StringPtrOutput)
}

// Origin site type, the values are:
func (o OriginGroupRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of the origin site, the value is 0-100. If it is not filled in, it means that the weight will not be set and the system will schedule it freely. If it is filled in with 0, it means that the weight is 0 and the traffic will not be scheduled to this origin site.
func (o OriginGroupRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginGroupRecord) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type OriginGroupRecordArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupRecord)(nil)).Elem()
}

func (o OriginGroupRecordArrayOutput) ToOriginGroupRecordArrayOutput() OriginGroupRecordArrayOutput {
	return o
}

func (o OriginGroupRecordArrayOutput) ToOriginGroupRecordArrayOutputWithContext(ctx context.Context) OriginGroupRecordArrayOutput {
	return o
}

func (o OriginGroupRecordArrayOutput) Index(i pulumi.IntInput) OriginGroupRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupRecord {
		return vs[0].([]OriginGroupRecord)[vs[1].(int)]
	}).(OriginGroupRecordOutput)
}

type OriginGroupRecordPrivateParameter struct {
	// Private authentication parameter name, the values are:
	Name string `pulumi:"name"`
	// Private authentication parameter value.
	Value string `pulumi:"value"`
}

// OriginGroupRecordPrivateParameterInput is an input type that accepts OriginGroupRecordPrivateParameterArgs and OriginGroupRecordPrivateParameterOutput values.
// You can construct a concrete instance of `OriginGroupRecordPrivateParameterInput` via:
//
//	OriginGroupRecordPrivateParameterArgs{...}
type OriginGroupRecordPrivateParameterInput interface {
	pulumi.Input

	ToOriginGroupRecordPrivateParameterOutput() OriginGroupRecordPrivateParameterOutput
	ToOriginGroupRecordPrivateParameterOutputWithContext(context.Context) OriginGroupRecordPrivateParameterOutput
}

type OriginGroupRecordPrivateParameterArgs struct {
	// Private authentication parameter name, the values are:
	Name pulumi.StringInput `pulumi:"name"`
	// Private authentication parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OriginGroupRecordPrivateParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupRecordPrivateParameter)(nil)).Elem()
}

func (i OriginGroupRecordPrivateParameterArgs) ToOriginGroupRecordPrivateParameterOutput() OriginGroupRecordPrivateParameterOutput {
	return i.ToOriginGroupRecordPrivateParameterOutputWithContext(context.Background())
}

func (i OriginGroupRecordPrivateParameterArgs) ToOriginGroupRecordPrivateParameterOutputWithContext(ctx context.Context) OriginGroupRecordPrivateParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupRecordPrivateParameterOutput)
}

// OriginGroupRecordPrivateParameterArrayInput is an input type that accepts OriginGroupRecordPrivateParameterArray and OriginGroupRecordPrivateParameterArrayOutput values.
// You can construct a concrete instance of `OriginGroupRecordPrivateParameterArrayInput` via:
//
//	OriginGroupRecordPrivateParameterArray{ OriginGroupRecordPrivateParameterArgs{...} }
type OriginGroupRecordPrivateParameterArrayInput interface {
	pulumi.Input

	ToOriginGroupRecordPrivateParameterArrayOutput() OriginGroupRecordPrivateParameterArrayOutput
	ToOriginGroupRecordPrivateParameterArrayOutputWithContext(context.Context) OriginGroupRecordPrivateParameterArrayOutput
}

type OriginGroupRecordPrivateParameterArray []OriginGroupRecordPrivateParameterInput

func (OriginGroupRecordPrivateParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupRecordPrivateParameter)(nil)).Elem()
}

func (i OriginGroupRecordPrivateParameterArray) ToOriginGroupRecordPrivateParameterArrayOutput() OriginGroupRecordPrivateParameterArrayOutput {
	return i.ToOriginGroupRecordPrivateParameterArrayOutputWithContext(context.Background())
}

func (i OriginGroupRecordPrivateParameterArray) ToOriginGroupRecordPrivateParameterArrayOutputWithContext(ctx context.Context) OriginGroupRecordPrivateParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupRecordPrivateParameterArrayOutput)
}

type OriginGroupRecordPrivateParameterOutput struct{ *pulumi.OutputState }

func (OriginGroupRecordPrivateParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupRecordPrivateParameter)(nil)).Elem()
}

func (o OriginGroupRecordPrivateParameterOutput) ToOriginGroupRecordPrivateParameterOutput() OriginGroupRecordPrivateParameterOutput {
	return o
}

func (o OriginGroupRecordPrivateParameterOutput) ToOriginGroupRecordPrivateParameterOutputWithContext(ctx context.Context) OriginGroupRecordPrivateParameterOutput {
	return o
}

// Private authentication parameter name, the values are:
func (o OriginGroupRecordPrivateParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupRecordPrivateParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Private authentication parameter value.
func (o OriginGroupRecordPrivateParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupRecordPrivateParameter) string { return v.Value }).(pulumi.StringOutput)
}

type OriginGroupRecordPrivateParameterArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupRecordPrivateParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupRecordPrivateParameter)(nil)).Elem()
}

func (o OriginGroupRecordPrivateParameterArrayOutput) ToOriginGroupRecordPrivateParameterArrayOutput() OriginGroupRecordPrivateParameterArrayOutput {
	return o
}

func (o OriginGroupRecordPrivateParameterArrayOutput) ToOriginGroupRecordPrivateParameterArrayOutputWithContext(ctx context.Context) OriginGroupRecordPrivateParameterArrayOutput {
	return o
}

func (o OriginGroupRecordPrivateParameterArrayOutput) Index(i pulumi.IntInput) OriginGroupRecordPrivateParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupRecordPrivateParameter {
		return vs[0].([]OriginGroupRecordPrivateParameter)[vs[1].(int)]
	}).(OriginGroupRecordPrivateParameterOutput)
}

type OriginGroupReference struct {
	// The instance ID of the reference type.
	InstanceId *string `pulumi:"instanceId"`
	// Instance name of the application type.
	InstanceName *string `pulumi:"instanceName"`
	// Reference service type, the values are:
	InstanceType *string `pulumi:"instanceType"`
}

// OriginGroupReferenceInput is an input type that accepts OriginGroupReferenceArgs and OriginGroupReferenceOutput values.
// You can construct a concrete instance of `OriginGroupReferenceInput` via:
//
//	OriginGroupReferenceArgs{...}
type OriginGroupReferenceInput interface {
	pulumi.Input

	ToOriginGroupReferenceOutput() OriginGroupReferenceOutput
	ToOriginGroupReferenceOutputWithContext(context.Context) OriginGroupReferenceOutput
}

type OriginGroupReferenceArgs struct {
	// The instance ID of the reference type.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Instance name of the application type.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Reference service type, the values are:
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (OriginGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupReference)(nil)).Elem()
}

func (i OriginGroupReferenceArgs) ToOriginGroupReferenceOutput() OriginGroupReferenceOutput {
	return i.ToOriginGroupReferenceOutputWithContext(context.Background())
}

func (i OriginGroupReferenceArgs) ToOriginGroupReferenceOutputWithContext(ctx context.Context) OriginGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupReferenceOutput)
}

// OriginGroupReferenceArrayInput is an input type that accepts OriginGroupReferenceArray and OriginGroupReferenceArrayOutput values.
// You can construct a concrete instance of `OriginGroupReferenceArrayInput` via:
//
//	OriginGroupReferenceArray{ OriginGroupReferenceArgs{...} }
type OriginGroupReferenceArrayInput interface {
	pulumi.Input

	ToOriginGroupReferenceArrayOutput() OriginGroupReferenceArrayOutput
	ToOriginGroupReferenceArrayOutputWithContext(context.Context) OriginGroupReferenceArrayOutput
}

type OriginGroupReferenceArray []OriginGroupReferenceInput

func (OriginGroupReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupReference)(nil)).Elem()
}

func (i OriginGroupReferenceArray) ToOriginGroupReferenceArrayOutput() OriginGroupReferenceArrayOutput {
	return i.ToOriginGroupReferenceArrayOutputWithContext(context.Background())
}

func (i OriginGroupReferenceArray) ToOriginGroupReferenceArrayOutputWithContext(ctx context.Context) OriginGroupReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupReferenceArrayOutput)
}

type OriginGroupReferenceOutput struct{ *pulumi.OutputState }

func (OriginGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupReference)(nil)).Elem()
}

func (o OriginGroupReferenceOutput) ToOriginGroupReferenceOutput() OriginGroupReferenceOutput {
	return o
}

func (o OriginGroupReferenceOutput) ToOriginGroupReferenceOutputWithContext(ctx context.Context) OriginGroupReferenceOutput {
	return o
}

// The instance ID of the reference type.
func (o OriginGroupReferenceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupReference) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Instance name of the application type.
func (o OriginGroupReferenceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupReference) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Reference service type, the values are:
func (o OriginGroupReferenceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupReference) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

type OriginGroupReferenceArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupReference)(nil)).Elem()
}

func (o OriginGroupReferenceArrayOutput) ToOriginGroupReferenceArrayOutput() OriginGroupReferenceArrayOutput {
	return o
}

func (o OriginGroupReferenceArrayOutput) ToOriginGroupReferenceArrayOutputWithContext(ctx context.Context) OriginGroupReferenceArrayOutput {
	return o
}

func (o OriginGroupReferenceArrayOutput) Index(i pulumi.IntInput) OriginGroupReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupReference {
		return vs[0].([]OriginGroupReference)[vs[1].(int)]
	}).(OriginGroupReferenceOutput)
}

type RealtimeLogDeliveryCls struct {
	// Tencent Cloud CLS log set ID.
	LogSetId string `pulumi:"logSetId"`
	// The region where the Tencent Cloud CLS log set is located.
	LogSetRegion string `pulumi:"logSetRegion"`
	// Tencent Cloud CLS log topic ID.
	TopicId string `pulumi:"topicId"`
}

// RealtimeLogDeliveryClsInput is an input type that accepts RealtimeLogDeliveryClsArgs and RealtimeLogDeliveryClsOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryClsInput` via:
//
//	RealtimeLogDeliveryClsArgs{...}
type RealtimeLogDeliveryClsInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryClsOutput() RealtimeLogDeliveryClsOutput
	ToRealtimeLogDeliveryClsOutputWithContext(context.Context) RealtimeLogDeliveryClsOutput
}

type RealtimeLogDeliveryClsArgs struct {
	// Tencent Cloud CLS log set ID.
	LogSetId pulumi.StringInput `pulumi:"logSetId"`
	// The region where the Tencent Cloud CLS log set is located.
	LogSetRegion pulumi.StringInput `pulumi:"logSetRegion"`
	// Tencent Cloud CLS log topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (RealtimeLogDeliveryClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCls)(nil)).Elem()
}

func (i RealtimeLogDeliveryClsArgs) ToRealtimeLogDeliveryClsOutput() RealtimeLogDeliveryClsOutput {
	return i.ToRealtimeLogDeliveryClsOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryClsArgs) ToRealtimeLogDeliveryClsOutputWithContext(ctx context.Context) RealtimeLogDeliveryClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryClsOutput)
}

func (i RealtimeLogDeliveryClsArgs) ToRealtimeLogDeliveryClsPtrOutput() RealtimeLogDeliveryClsPtrOutput {
	return i.ToRealtimeLogDeliveryClsPtrOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryClsArgs) ToRealtimeLogDeliveryClsPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryClsOutput).ToRealtimeLogDeliveryClsPtrOutputWithContext(ctx)
}

// RealtimeLogDeliveryClsPtrInput is an input type that accepts RealtimeLogDeliveryClsArgs, RealtimeLogDeliveryClsPtr and RealtimeLogDeliveryClsPtrOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryClsPtrInput` via:
//
//	        RealtimeLogDeliveryClsArgs{...}
//
//	or:
//
//	        nil
type RealtimeLogDeliveryClsPtrInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryClsPtrOutput() RealtimeLogDeliveryClsPtrOutput
	ToRealtimeLogDeliveryClsPtrOutputWithContext(context.Context) RealtimeLogDeliveryClsPtrOutput
}

type realtimeLogDeliveryClsPtrType RealtimeLogDeliveryClsArgs

func RealtimeLogDeliveryClsPtr(v *RealtimeLogDeliveryClsArgs) RealtimeLogDeliveryClsPtrInput {
	return (*realtimeLogDeliveryClsPtrType)(v)
}

func (*realtimeLogDeliveryClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryCls)(nil)).Elem()
}

func (i *realtimeLogDeliveryClsPtrType) ToRealtimeLogDeliveryClsPtrOutput() RealtimeLogDeliveryClsPtrOutput {
	return i.ToRealtimeLogDeliveryClsPtrOutputWithContext(context.Background())
}

func (i *realtimeLogDeliveryClsPtrType) ToRealtimeLogDeliveryClsPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryClsPtrOutput)
}

type RealtimeLogDeliveryClsOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCls)(nil)).Elem()
}

func (o RealtimeLogDeliveryClsOutput) ToRealtimeLogDeliveryClsOutput() RealtimeLogDeliveryClsOutput {
	return o
}

func (o RealtimeLogDeliveryClsOutput) ToRealtimeLogDeliveryClsOutputWithContext(ctx context.Context) RealtimeLogDeliveryClsOutput {
	return o
}

func (o RealtimeLogDeliveryClsOutput) ToRealtimeLogDeliveryClsPtrOutput() RealtimeLogDeliveryClsPtrOutput {
	return o.ToRealtimeLogDeliveryClsPtrOutputWithContext(context.Background())
}

func (o RealtimeLogDeliveryClsOutput) ToRealtimeLogDeliveryClsPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RealtimeLogDeliveryCls) *RealtimeLogDeliveryCls {
		return &v
	}).(RealtimeLogDeliveryClsPtrOutput)
}

// Tencent Cloud CLS log set ID.
func (o RealtimeLogDeliveryClsOutput) LogSetId() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCls) string { return v.LogSetId }).(pulumi.StringOutput)
}

// The region where the Tencent Cloud CLS log set is located.
func (o RealtimeLogDeliveryClsOutput) LogSetRegion() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCls) string { return v.LogSetRegion }).(pulumi.StringOutput)
}

// Tencent Cloud CLS log topic ID.
func (o RealtimeLogDeliveryClsOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCls) string { return v.TopicId }).(pulumi.StringOutput)
}

type RealtimeLogDeliveryClsPtrOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryCls)(nil)).Elem()
}

func (o RealtimeLogDeliveryClsPtrOutput) ToRealtimeLogDeliveryClsPtrOutput() RealtimeLogDeliveryClsPtrOutput {
	return o
}

func (o RealtimeLogDeliveryClsPtrOutput) ToRealtimeLogDeliveryClsPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryClsPtrOutput {
	return o
}

func (o RealtimeLogDeliveryClsPtrOutput) Elem() RealtimeLogDeliveryClsOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCls) RealtimeLogDeliveryCls {
		if v != nil {
			return *v
		}
		var ret RealtimeLogDeliveryCls
		return ret
	}).(RealtimeLogDeliveryClsOutput)
}

// Tencent Cloud CLS log set ID.
func (o RealtimeLogDeliveryClsPtrOutput) LogSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCls) *string {
		if v == nil {
			return nil
		}
		return &v.LogSetId
	}).(pulumi.StringPtrOutput)
}

// The region where the Tencent Cloud CLS log set is located.
func (o RealtimeLogDeliveryClsPtrOutput) LogSetRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCls) *string {
		if v == nil {
			return nil
		}
		return &v.LogSetRegion
	}).(pulumi.StringPtrOutput)
}

// Tencent Cloud CLS log topic ID.
func (o RealtimeLogDeliveryClsPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCls) *string {
		if v == nil {
			return nil
		}
		return &v.TopicId
	}).(pulumi.StringPtrOutput)
}

type RealtimeLogDeliveryCustomEndpoint struct {
	// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
	AccessId *string `pulumi:"accessId"`
	// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
	AccessKey *string `pulumi:"accessKey"`
	// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
	CompressType *string `pulumi:"compressType"`
	// The custom request header carried when delivering logs. If the header name you fill in is the default header carried by EdgeOne log push, such as Content-Type, then the header value you fill in will overwrite the default value. The header value references a single variable ${batchSize} to obtain the number of logs included in each POST request.
	Headers []RealtimeLogDeliveryCustomEndpointHeader `pulumi:"headers"`
	// When sending logs via POST request, the application layer protocol type used can be: `http`: HTTP protocol; `https`: HTTPS protocol. If not filled in, the protocol type will be parsed according to the filled in URL address.
	Protocol *string `pulumi:"protocol"`
	// The custom HTTP interface address for real-time log delivery. Currently, only HTTP/HTTPS protocols are supported.
	Url string `pulumi:"url"`
}

// RealtimeLogDeliveryCustomEndpointInput is an input type that accepts RealtimeLogDeliveryCustomEndpointArgs and RealtimeLogDeliveryCustomEndpointOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryCustomEndpointInput` via:
//
//	RealtimeLogDeliveryCustomEndpointArgs{...}
type RealtimeLogDeliveryCustomEndpointInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryCustomEndpointOutput() RealtimeLogDeliveryCustomEndpointOutput
	ToRealtimeLogDeliveryCustomEndpointOutputWithContext(context.Context) RealtimeLogDeliveryCustomEndpointOutput
}

type RealtimeLogDeliveryCustomEndpointArgs struct {
	// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
	AccessId pulumi.StringPtrInput `pulumi:"accessId"`
	// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
	CompressType pulumi.StringPtrInput `pulumi:"compressType"`
	// The custom request header carried when delivering logs. If the header name you fill in is the default header carried by EdgeOne log push, such as Content-Type, then the header value you fill in will overwrite the default value. The header value references a single variable ${batchSize} to obtain the number of logs included in each POST request.
	Headers RealtimeLogDeliveryCustomEndpointHeaderArrayInput `pulumi:"headers"`
	// When sending logs via POST request, the application layer protocol type used can be: `http`: HTTP protocol; `https`: HTTPS protocol. If not filled in, the protocol type will be parsed according to the filled in URL address.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The custom HTTP interface address for real-time log delivery. Currently, only HTTP/HTTPS protocols are supported.
	Url pulumi.StringInput `pulumi:"url"`
}

func (RealtimeLogDeliveryCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCustomEndpoint)(nil)).Elem()
}

func (i RealtimeLogDeliveryCustomEndpointArgs) ToRealtimeLogDeliveryCustomEndpointOutput() RealtimeLogDeliveryCustomEndpointOutput {
	return i.ToRealtimeLogDeliveryCustomEndpointOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryCustomEndpointArgs) ToRealtimeLogDeliveryCustomEndpointOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomEndpointOutput)
}

func (i RealtimeLogDeliveryCustomEndpointArgs) ToRealtimeLogDeliveryCustomEndpointPtrOutput() RealtimeLogDeliveryCustomEndpointPtrOutput {
	return i.ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryCustomEndpointArgs) ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomEndpointOutput).ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(ctx)
}

// RealtimeLogDeliveryCustomEndpointPtrInput is an input type that accepts RealtimeLogDeliveryCustomEndpointArgs, RealtimeLogDeliveryCustomEndpointPtr and RealtimeLogDeliveryCustomEndpointPtrOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryCustomEndpointPtrInput` via:
//
//	        RealtimeLogDeliveryCustomEndpointArgs{...}
//
//	or:
//
//	        nil
type RealtimeLogDeliveryCustomEndpointPtrInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryCustomEndpointPtrOutput() RealtimeLogDeliveryCustomEndpointPtrOutput
	ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(context.Context) RealtimeLogDeliveryCustomEndpointPtrOutput
}

type realtimeLogDeliveryCustomEndpointPtrType RealtimeLogDeliveryCustomEndpointArgs

func RealtimeLogDeliveryCustomEndpointPtr(v *RealtimeLogDeliveryCustomEndpointArgs) RealtimeLogDeliveryCustomEndpointPtrInput {
	return (*realtimeLogDeliveryCustomEndpointPtrType)(v)
}

func (*realtimeLogDeliveryCustomEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryCustomEndpoint)(nil)).Elem()
}

func (i *realtimeLogDeliveryCustomEndpointPtrType) ToRealtimeLogDeliveryCustomEndpointPtrOutput() RealtimeLogDeliveryCustomEndpointPtrOutput {
	return i.ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(context.Background())
}

func (i *realtimeLogDeliveryCustomEndpointPtrType) ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomEndpointPtrOutput)
}

type RealtimeLogDeliveryCustomEndpointOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCustomEndpoint)(nil)).Elem()
}

func (o RealtimeLogDeliveryCustomEndpointOutput) ToRealtimeLogDeliveryCustomEndpointOutput() RealtimeLogDeliveryCustomEndpointOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointOutput) ToRealtimeLogDeliveryCustomEndpointOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointOutput) ToRealtimeLogDeliveryCustomEndpointPtrOutput() RealtimeLogDeliveryCustomEndpointPtrOutput {
	return o.ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(context.Background())
}

func (o RealtimeLogDeliveryCustomEndpointOutput) ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RealtimeLogDeliveryCustomEndpoint) *RealtimeLogDeliveryCustomEndpoint {
		return &v
	}).(RealtimeLogDeliveryCustomEndpointPtrOutput)
}

// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryCustomEndpointOutput) AccessId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpoint) *string { return v.AccessId }).(pulumi.StringPtrOutput)
}

// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryCustomEndpointOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpoint) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
func (o RealtimeLogDeliveryCustomEndpointOutput) CompressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpoint) *string { return v.CompressType }).(pulumi.StringPtrOutput)
}

// The custom request header carried when delivering logs. If the header name you fill in is the default header carried by EdgeOne log push, such as Content-Type, then the header value you fill in will overwrite the default value. The header value references a single variable ${batchSize} to obtain the number of logs included in each POST request.
func (o RealtimeLogDeliveryCustomEndpointOutput) Headers() RealtimeLogDeliveryCustomEndpointHeaderArrayOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpoint) []RealtimeLogDeliveryCustomEndpointHeader { return v.Headers }).(RealtimeLogDeliveryCustomEndpointHeaderArrayOutput)
}

// When sending logs via POST request, the application layer protocol type used can be: `http`: HTTP protocol; `https`: HTTPS protocol. If not filled in, the protocol type will be parsed according to the filled in URL address.
func (o RealtimeLogDeliveryCustomEndpointOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpoint) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The custom HTTP interface address for real-time log delivery. Currently, only HTTP/HTTPS protocols are supported.
func (o RealtimeLogDeliveryCustomEndpointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpoint) string { return v.Url }).(pulumi.StringOutput)
}

type RealtimeLogDeliveryCustomEndpointPtrOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryCustomEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryCustomEndpoint)(nil)).Elem()
}

func (o RealtimeLogDeliveryCustomEndpointPtrOutput) ToRealtimeLogDeliveryCustomEndpointPtrOutput() RealtimeLogDeliveryCustomEndpointPtrOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointPtrOutput) ToRealtimeLogDeliveryCustomEndpointPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointPtrOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointPtrOutput) Elem() RealtimeLogDeliveryCustomEndpointOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) RealtimeLogDeliveryCustomEndpoint {
		if v != nil {
			return *v
		}
		var ret RealtimeLogDeliveryCustomEndpoint
		return ret
	}).(RealtimeLogDeliveryCustomEndpointOutput)
}

// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryCustomEndpointPtrOutput) AccessId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.AccessId
	}).(pulumi.StringPtrOutput)
}

// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryCustomEndpointPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
func (o RealtimeLogDeliveryCustomEndpointPtrOutput) CompressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.CompressType
	}).(pulumi.StringPtrOutput)
}

// The custom request header carried when delivering logs. If the header name you fill in is the default header carried by EdgeOne log push, such as Content-Type, then the header value you fill in will overwrite the default value. The header value references a single variable ${batchSize} to obtain the number of logs included in each POST request.
func (o RealtimeLogDeliveryCustomEndpointPtrOutput) Headers() RealtimeLogDeliveryCustomEndpointHeaderArrayOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) []RealtimeLogDeliveryCustomEndpointHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RealtimeLogDeliveryCustomEndpointHeaderArrayOutput)
}

// When sending logs via POST request, the application layer protocol type used can be: `http`: HTTP protocol; `https`: HTTPS protocol. If not filled in, the protocol type will be parsed according to the filled in URL address.
func (o RealtimeLogDeliveryCustomEndpointPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The custom HTTP interface address for real-time log delivery. Currently, only HTTP/HTTPS protocols are supported.
func (o RealtimeLogDeliveryCustomEndpointPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type RealtimeLogDeliveryCustomEndpointHeader struct {
	// HTTP header name.
	Name string `pulumi:"name"`
	// HTTP header value.
	Value string `pulumi:"value"`
}

// RealtimeLogDeliveryCustomEndpointHeaderInput is an input type that accepts RealtimeLogDeliveryCustomEndpointHeaderArgs and RealtimeLogDeliveryCustomEndpointHeaderOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryCustomEndpointHeaderInput` via:
//
//	RealtimeLogDeliveryCustomEndpointHeaderArgs{...}
type RealtimeLogDeliveryCustomEndpointHeaderInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryCustomEndpointHeaderOutput() RealtimeLogDeliveryCustomEndpointHeaderOutput
	ToRealtimeLogDeliveryCustomEndpointHeaderOutputWithContext(context.Context) RealtimeLogDeliveryCustomEndpointHeaderOutput
}

type RealtimeLogDeliveryCustomEndpointHeaderArgs struct {
	// HTTP header name.
	Name pulumi.StringInput `pulumi:"name"`
	// HTTP header value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RealtimeLogDeliveryCustomEndpointHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCustomEndpointHeader)(nil)).Elem()
}

func (i RealtimeLogDeliveryCustomEndpointHeaderArgs) ToRealtimeLogDeliveryCustomEndpointHeaderOutput() RealtimeLogDeliveryCustomEndpointHeaderOutput {
	return i.ToRealtimeLogDeliveryCustomEndpointHeaderOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryCustomEndpointHeaderArgs) ToRealtimeLogDeliveryCustomEndpointHeaderOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomEndpointHeaderOutput)
}

// RealtimeLogDeliveryCustomEndpointHeaderArrayInput is an input type that accepts RealtimeLogDeliveryCustomEndpointHeaderArray and RealtimeLogDeliveryCustomEndpointHeaderArrayOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryCustomEndpointHeaderArrayInput` via:
//
//	RealtimeLogDeliveryCustomEndpointHeaderArray{ RealtimeLogDeliveryCustomEndpointHeaderArgs{...} }
type RealtimeLogDeliveryCustomEndpointHeaderArrayInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutput() RealtimeLogDeliveryCustomEndpointHeaderArrayOutput
	ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutputWithContext(context.Context) RealtimeLogDeliveryCustomEndpointHeaderArrayOutput
}

type RealtimeLogDeliveryCustomEndpointHeaderArray []RealtimeLogDeliveryCustomEndpointHeaderInput

func (RealtimeLogDeliveryCustomEndpointHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryCustomEndpointHeader)(nil)).Elem()
}

func (i RealtimeLogDeliveryCustomEndpointHeaderArray) ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutput() RealtimeLogDeliveryCustomEndpointHeaderArrayOutput {
	return i.ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryCustomEndpointHeaderArray) ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomEndpointHeaderArrayOutput)
}

type RealtimeLogDeliveryCustomEndpointHeaderOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryCustomEndpointHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCustomEndpointHeader)(nil)).Elem()
}

func (o RealtimeLogDeliveryCustomEndpointHeaderOutput) ToRealtimeLogDeliveryCustomEndpointHeaderOutput() RealtimeLogDeliveryCustomEndpointHeaderOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointHeaderOutput) ToRealtimeLogDeliveryCustomEndpointHeaderOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointHeaderOutput {
	return o
}

// HTTP header name.
func (o RealtimeLogDeliveryCustomEndpointHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpointHeader) string { return v.Name }).(pulumi.StringOutput)
}

// HTTP header value.
func (o RealtimeLogDeliveryCustomEndpointHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomEndpointHeader) string { return v.Value }).(pulumi.StringOutput)
}

type RealtimeLogDeliveryCustomEndpointHeaderArrayOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryCustomEndpointHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryCustomEndpointHeader)(nil)).Elem()
}

func (o RealtimeLogDeliveryCustomEndpointHeaderArrayOutput) ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutput() RealtimeLogDeliveryCustomEndpointHeaderArrayOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointHeaderArrayOutput) ToRealtimeLogDeliveryCustomEndpointHeaderArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomEndpointHeaderArrayOutput {
	return o
}

func (o RealtimeLogDeliveryCustomEndpointHeaderArrayOutput) Index(i pulumi.IntInput) RealtimeLogDeliveryCustomEndpointHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealtimeLogDeliveryCustomEndpointHeader {
		return vs[0].([]RealtimeLogDeliveryCustomEndpointHeader)[vs[1].(int)]
	}).(RealtimeLogDeliveryCustomEndpointHeaderOutput)
}

type RealtimeLogDeliveryCustomField struct {
	// Whether to deliver this field. If left blank, this field will not be delivered.
	Enabled *bool `pulumi:"enabled"`
	// Extract data from the specified location in the HTTP request and response. The values are: `ReqHeader`: extract the specified field value from the HTTP request header; `RspHeader`: extract the specified field value from the HTTP response header; `Cookie`: extract the specified field value from the Cookie.
	Name string `pulumi:"name"`
	// The name of the parameter whose value needs to be extracted, for example: Accept-Language.
	Value string `pulumi:"value"`
}

// RealtimeLogDeliveryCustomFieldInput is an input type that accepts RealtimeLogDeliveryCustomFieldArgs and RealtimeLogDeliveryCustomFieldOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryCustomFieldInput` via:
//
//	RealtimeLogDeliveryCustomFieldArgs{...}
type RealtimeLogDeliveryCustomFieldInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryCustomFieldOutput() RealtimeLogDeliveryCustomFieldOutput
	ToRealtimeLogDeliveryCustomFieldOutputWithContext(context.Context) RealtimeLogDeliveryCustomFieldOutput
}

type RealtimeLogDeliveryCustomFieldArgs struct {
	// Whether to deliver this field. If left blank, this field will not be delivered.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Extract data from the specified location in the HTTP request and response. The values are: `ReqHeader`: extract the specified field value from the HTTP request header; `RspHeader`: extract the specified field value from the HTTP response header; `Cookie`: extract the specified field value from the Cookie.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the parameter whose value needs to be extracted, for example: Accept-Language.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RealtimeLogDeliveryCustomFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCustomField)(nil)).Elem()
}

func (i RealtimeLogDeliveryCustomFieldArgs) ToRealtimeLogDeliveryCustomFieldOutput() RealtimeLogDeliveryCustomFieldOutput {
	return i.ToRealtimeLogDeliveryCustomFieldOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryCustomFieldArgs) ToRealtimeLogDeliveryCustomFieldOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomFieldOutput)
}

// RealtimeLogDeliveryCustomFieldArrayInput is an input type that accepts RealtimeLogDeliveryCustomFieldArray and RealtimeLogDeliveryCustomFieldArrayOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryCustomFieldArrayInput` via:
//
//	RealtimeLogDeliveryCustomFieldArray{ RealtimeLogDeliveryCustomFieldArgs{...} }
type RealtimeLogDeliveryCustomFieldArrayInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryCustomFieldArrayOutput() RealtimeLogDeliveryCustomFieldArrayOutput
	ToRealtimeLogDeliveryCustomFieldArrayOutputWithContext(context.Context) RealtimeLogDeliveryCustomFieldArrayOutput
}

type RealtimeLogDeliveryCustomFieldArray []RealtimeLogDeliveryCustomFieldInput

func (RealtimeLogDeliveryCustomFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryCustomField)(nil)).Elem()
}

func (i RealtimeLogDeliveryCustomFieldArray) ToRealtimeLogDeliveryCustomFieldArrayOutput() RealtimeLogDeliveryCustomFieldArrayOutput {
	return i.ToRealtimeLogDeliveryCustomFieldArrayOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryCustomFieldArray) ToRealtimeLogDeliveryCustomFieldArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryCustomFieldArrayOutput)
}

type RealtimeLogDeliveryCustomFieldOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryCustomFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryCustomField)(nil)).Elem()
}

func (o RealtimeLogDeliveryCustomFieldOutput) ToRealtimeLogDeliveryCustomFieldOutput() RealtimeLogDeliveryCustomFieldOutput {
	return o
}

func (o RealtimeLogDeliveryCustomFieldOutput) ToRealtimeLogDeliveryCustomFieldOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomFieldOutput {
	return o
}

// Whether to deliver this field. If left blank, this field will not be delivered.
func (o RealtimeLogDeliveryCustomFieldOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomField) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Extract data from the specified location in the HTTP request and response. The values are: `ReqHeader`: extract the specified field value from the HTTP request header; `RspHeader`: extract the specified field value from the HTTP response header; `Cookie`: extract the specified field value from the Cookie.
func (o RealtimeLogDeliveryCustomFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomField) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the parameter whose value needs to be extracted, for example: Accept-Language.
func (o RealtimeLogDeliveryCustomFieldOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryCustomField) string { return v.Value }).(pulumi.StringOutput)
}

type RealtimeLogDeliveryCustomFieldArrayOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryCustomFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryCustomField)(nil)).Elem()
}

func (o RealtimeLogDeliveryCustomFieldArrayOutput) ToRealtimeLogDeliveryCustomFieldArrayOutput() RealtimeLogDeliveryCustomFieldArrayOutput {
	return o
}

func (o RealtimeLogDeliveryCustomFieldArrayOutput) ToRealtimeLogDeliveryCustomFieldArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryCustomFieldArrayOutput {
	return o
}

func (o RealtimeLogDeliveryCustomFieldArrayOutput) Index(i pulumi.IntInput) RealtimeLogDeliveryCustomFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealtimeLogDeliveryCustomField {
		return vs[0].([]RealtimeLogDeliveryCustomField)[vs[1].(int)]
	}).(RealtimeLogDeliveryCustomFieldOutput)
}

type RealtimeLogDeliveryDeliveryCondition struct {
	// Log filtering conditions, the detailed filtering conditions are as follows: - `EdgeResponseStatusCode`: filter according to the status code returned by the EdgeOne node to the client. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to 0; - `OriginResponseStatusCode`: filter according to the origin response status code. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to -1; - `SecurityAction`: filter according to the final disposal action after the request hits the security rule. Supported operators: `equal`; Optional options are as follows: `-`: unknown/miss; `Monitor`: observe; `JSChallenge`: JavaScript challenge; `Deny`: intercept; `Allow`: allow; `BlockIP`: IP ban; `Redirect`: redirect; `ReturnCustomPage`: return to a custom page; `ManagedChallenge`: managed challenge; `Silence`: silent; `LongDelay`: respond after a long wait; `ShortDelay`: respond after a short wait; -`SecurityModule`: filter according to the name of the security module that finally handles the request. Supported operators: `equal`; Optional options: `-`: unknown/missed; `CustomRule`: Web Protection - Custom Rules; `RateLimitingCustomRule`: Web Protection - Rate Limiting Rules; `ManagedRule`: Web Protection - Managed Rules; `L7DDoS`: Web Protection - CC Attack Protection; `BotManagement`: Bot Management - Bot Basic Management; `BotClientReputation`: Bot Management - Client Profile Analysis; `BotBehaviorAnalysis`: Bot Management - Bot Intelligent Analysis; `BotCustomRule`: Bot Management - Custom Bot Rules; `BotActiveDetection`: Bot Management - Active Feature Recognition.
	Conditions []RealtimeLogDeliveryDeliveryConditionCondition `pulumi:"conditions"`
}

// RealtimeLogDeliveryDeliveryConditionInput is an input type that accepts RealtimeLogDeliveryDeliveryConditionArgs and RealtimeLogDeliveryDeliveryConditionOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryDeliveryConditionInput` via:
//
//	RealtimeLogDeliveryDeliveryConditionArgs{...}
type RealtimeLogDeliveryDeliveryConditionInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryDeliveryConditionOutput() RealtimeLogDeliveryDeliveryConditionOutput
	ToRealtimeLogDeliveryDeliveryConditionOutputWithContext(context.Context) RealtimeLogDeliveryDeliveryConditionOutput
}

type RealtimeLogDeliveryDeliveryConditionArgs struct {
	// Log filtering conditions, the detailed filtering conditions are as follows: - `EdgeResponseStatusCode`: filter according to the status code returned by the EdgeOne node to the client. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to 0; - `OriginResponseStatusCode`: filter according to the origin response status code. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to -1; - `SecurityAction`: filter according to the final disposal action after the request hits the security rule. Supported operators: `equal`; Optional options are as follows: `-`: unknown/miss; `Monitor`: observe; `JSChallenge`: JavaScript challenge; `Deny`: intercept; `Allow`: allow; `BlockIP`: IP ban; `Redirect`: redirect; `ReturnCustomPage`: return to a custom page; `ManagedChallenge`: managed challenge; `Silence`: silent; `LongDelay`: respond after a long wait; `ShortDelay`: respond after a short wait; -`SecurityModule`: filter according to the name of the security module that finally handles the request. Supported operators: `equal`; Optional options: `-`: unknown/missed; `CustomRule`: Web Protection - Custom Rules; `RateLimitingCustomRule`: Web Protection - Rate Limiting Rules; `ManagedRule`: Web Protection - Managed Rules; `L7DDoS`: Web Protection - CC Attack Protection; `BotManagement`: Bot Management - Bot Basic Management; `BotClientReputation`: Bot Management - Client Profile Analysis; `BotBehaviorAnalysis`: Bot Management - Bot Intelligent Analysis; `BotCustomRule`: Bot Management - Custom Bot Rules; `BotActiveDetection`: Bot Management - Active Feature Recognition.
	Conditions RealtimeLogDeliveryDeliveryConditionConditionArrayInput `pulumi:"conditions"`
}

func (RealtimeLogDeliveryDeliveryConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryDeliveryCondition)(nil)).Elem()
}

func (i RealtimeLogDeliveryDeliveryConditionArgs) ToRealtimeLogDeliveryDeliveryConditionOutput() RealtimeLogDeliveryDeliveryConditionOutput {
	return i.ToRealtimeLogDeliveryDeliveryConditionOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryDeliveryConditionArgs) ToRealtimeLogDeliveryDeliveryConditionOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryDeliveryConditionOutput)
}

// RealtimeLogDeliveryDeliveryConditionArrayInput is an input type that accepts RealtimeLogDeliveryDeliveryConditionArray and RealtimeLogDeliveryDeliveryConditionArrayOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryDeliveryConditionArrayInput` via:
//
//	RealtimeLogDeliveryDeliveryConditionArray{ RealtimeLogDeliveryDeliveryConditionArgs{...} }
type RealtimeLogDeliveryDeliveryConditionArrayInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryDeliveryConditionArrayOutput() RealtimeLogDeliveryDeliveryConditionArrayOutput
	ToRealtimeLogDeliveryDeliveryConditionArrayOutputWithContext(context.Context) RealtimeLogDeliveryDeliveryConditionArrayOutput
}

type RealtimeLogDeliveryDeliveryConditionArray []RealtimeLogDeliveryDeliveryConditionInput

func (RealtimeLogDeliveryDeliveryConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryDeliveryCondition)(nil)).Elem()
}

func (i RealtimeLogDeliveryDeliveryConditionArray) ToRealtimeLogDeliveryDeliveryConditionArrayOutput() RealtimeLogDeliveryDeliveryConditionArrayOutput {
	return i.ToRealtimeLogDeliveryDeliveryConditionArrayOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryDeliveryConditionArray) ToRealtimeLogDeliveryDeliveryConditionArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryDeliveryConditionArrayOutput)
}

type RealtimeLogDeliveryDeliveryConditionOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryDeliveryConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryDeliveryCondition)(nil)).Elem()
}

func (o RealtimeLogDeliveryDeliveryConditionOutput) ToRealtimeLogDeliveryDeliveryConditionOutput() RealtimeLogDeliveryDeliveryConditionOutput {
	return o
}

func (o RealtimeLogDeliveryDeliveryConditionOutput) ToRealtimeLogDeliveryDeliveryConditionOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionOutput {
	return o
}

// Log filtering conditions, the detailed filtering conditions are as follows: - `EdgeResponseStatusCode`: filter according to the status code returned by the EdgeOne node to the client. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to 0; - `OriginResponseStatusCode`: filter according to the origin response status code. Supported operators: `equal`, `great`, `less`, `greatEqual`, `lessEqual`; Value range: any integer greater than or equal to -1; - `SecurityAction`: filter according to the final disposal action after the request hits the security rule. Supported operators: `equal`; Optional options are as follows: `-`: unknown/miss; `Monitor`: observe; `JSChallenge`: JavaScript challenge; `Deny`: intercept; `Allow`: allow; `BlockIP`: IP ban; `Redirect`: redirect; `ReturnCustomPage`: return to a custom page; `ManagedChallenge`: managed challenge; `Silence`: silent; `LongDelay`: respond after a long wait; `ShortDelay`: respond after a short wait; -`SecurityModule`: filter according to the name of the security module that finally handles the request. Supported operators: `equal`; Optional options: `-`: unknown/missed; `CustomRule`: Web Protection - Custom Rules; `RateLimitingCustomRule`: Web Protection - Rate Limiting Rules; `ManagedRule`: Web Protection - Managed Rules; `L7DDoS`: Web Protection - CC Attack Protection; `BotManagement`: Bot Management - Bot Basic Management; `BotClientReputation`: Bot Management - Client Profile Analysis; `BotBehaviorAnalysis`: Bot Management - Bot Intelligent Analysis; `BotCustomRule`: Bot Management - Custom Bot Rules; `BotActiveDetection`: Bot Management - Active Feature Recognition.
func (o RealtimeLogDeliveryDeliveryConditionOutput) Conditions() RealtimeLogDeliveryDeliveryConditionConditionArrayOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryDeliveryCondition) []RealtimeLogDeliveryDeliveryConditionCondition {
		return v.Conditions
	}).(RealtimeLogDeliveryDeliveryConditionConditionArrayOutput)
}

type RealtimeLogDeliveryDeliveryConditionArrayOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryDeliveryConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryDeliveryCondition)(nil)).Elem()
}

func (o RealtimeLogDeliveryDeliveryConditionArrayOutput) ToRealtimeLogDeliveryDeliveryConditionArrayOutput() RealtimeLogDeliveryDeliveryConditionArrayOutput {
	return o
}

func (o RealtimeLogDeliveryDeliveryConditionArrayOutput) ToRealtimeLogDeliveryDeliveryConditionArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionArrayOutput {
	return o
}

func (o RealtimeLogDeliveryDeliveryConditionArrayOutput) Index(i pulumi.IntInput) RealtimeLogDeliveryDeliveryConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealtimeLogDeliveryDeliveryCondition {
		return vs[0].([]RealtimeLogDeliveryDeliveryCondition)[vs[1].(int)]
	}).(RealtimeLogDeliveryDeliveryConditionOutput)
}

type RealtimeLogDeliveryDeliveryConditionCondition struct {
	// The key of the filter condition.
	Key string `pulumi:"key"`
	// Query condition operator, operation types are: `equals`: equal; `notEquals`: not equal; `include`: include; `notInclude`: not include; `startWith`: start with value; `notStartWith`: not start with value; `endWith`: end with value; `notEndWith`: not end with value.
	Operator string `pulumi:"operator"`
	// The value of the filter condition.
	Values []string `pulumi:"values"`
}

// RealtimeLogDeliveryDeliveryConditionConditionInput is an input type that accepts RealtimeLogDeliveryDeliveryConditionConditionArgs and RealtimeLogDeliveryDeliveryConditionConditionOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryDeliveryConditionConditionInput` via:
//
//	RealtimeLogDeliveryDeliveryConditionConditionArgs{...}
type RealtimeLogDeliveryDeliveryConditionConditionInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryDeliveryConditionConditionOutput() RealtimeLogDeliveryDeliveryConditionConditionOutput
	ToRealtimeLogDeliveryDeliveryConditionConditionOutputWithContext(context.Context) RealtimeLogDeliveryDeliveryConditionConditionOutput
}

type RealtimeLogDeliveryDeliveryConditionConditionArgs struct {
	// The key of the filter condition.
	Key pulumi.StringInput `pulumi:"key"`
	// Query condition operator, operation types are: `equals`: equal; `notEquals`: not equal; `include`: include; `notInclude`: not include; `startWith`: start with value; `notStartWith`: not start with value; `endWith`: end with value; `notEndWith`: not end with value.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The value of the filter condition.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RealtimeLogDeliveryDeliveryConditionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryDeliveryConditionCondition)(nil)).Elem()
}

func (i RealtimeLogDeliveryDeliveryConditionConditionArgs) ToRealtimeLogDeliveryDeliveryConditionConditionOutput() RealtimeLogDeliveryDeliveryConditionConditionOutput {
	return i.ToRealtimeLogDeliveryDeliveryConditionConditionOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryDeliveryConditionConditionArgs) ToRealtimeLogDeliveryDeliveryConditionConditionOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryDeliveryConditionConditionOutput)
}

// RealtimeLogDeliveryDeliveryConditionConditionArrayInput is an input type that accepts RealtimeLogDeliveryDeliveryConditionConditionArray and RealtimeLogDeliveryDeliveryConditionConditionArrayOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryDeliveryConditionConditionArrayInput` via:
//
//	RealtimeLogDeliveryDeliveryConditionConditionArray{ RealtimeLogDeliveryDeliveryConditionConditionArgs{...} }
type RealtimeLogDeliveryDeliveryConditionConditionArrayInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutput() RealtimeLogDeliveryDeliveryConditionConditionArrayOutput
	ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutputWithContext(context.Context) RealtimeLogDeliveryDeliveryConditionConditionArrayOutput
}

type RealtimeLogDeliveryDeliveryConditionConditionArray []RealtimeLogDeliveryDeliveryConditionConditionInput

func (RealtimeLogDeliveryDeliveryConditionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryDeliveryConditionCondition)(nil)).Elem()
}

func (i RealtimeLogDeliveryDeliveryConditionConditionArray) ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutput() RealtimeLogDeliveryDeliveryConditionConditionArrayOutput {
	return i.ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryDeliveryConditionConditionArray) ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryDeliveryConditionConditionArrayOutput)
}

type RealtimeLogDeliveryDeliveryConditionConditionOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryDeliveryConditionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryDeliveryConditionCondition)(nil)).Elem()
}

func (o RealtimeLogDeliveryDeliveryConditionConditionOutput) ToRealtimeLogDeliveryDeliveryConditionConditionOutput() RealtimeLogDeliveryDeliveryConditionConditionOutput {
	return o
}

func (o RealtimeLogDeliveryDeliveryConditionConditionOutput) ToRealtimeLogDeliveryDeliveryConditionConditionOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionConditionOutput {
	return o
}

// The key of the filter condition.
func (o RealtimeLogDeliveryDeliveryConditionConditionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryDeliveryConditionCondition) string { return v.Key }).(pulumi.StringOutput)
}

// Query condition operator, operation types are: `equals`: equal; `notEquals`: not equal; `include`: include; `notInclude`: not include; `startWith`: start with value; `notStartWith`: not start with value; `endWith`: end with value; `notEndWith`: not end with value.
func (o RealtimeLogDeliveryDeliveryConditionConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryDeliveryConditionCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// The value of the filter condition.
func (o RealtimeLogDeliveryDeliveryConditionConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryDeliveryConditionCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RealtimeLogDeliveryDeliveryConditionConditionArrayOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryDeliveryConditionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogDeliveryDeliveryConditionCondition)(nil)).Elem()
}

func (o RealtimeLogDeliveryDeliveryConditionConditionArrayOutput) ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutput() RealtimeLogDeliveryDeliveryConditionConditionArrayOutput {
	return o
}

func (o RealtimeLogDeliveryDeliveryConditionConditionArrayOutput) ToRealtimeLogDeliveryDeliveryConditionConditionArrayOutputWithContext(ctx context.Context) RealtimeLogDeliveryDeliveryConditionConditionArrayOutput {
	return o
}

func (o RealtimeLogDeliveryDeliveryConditionConditionArrayOutput) Index(i pulumi.IntInput) RealtimeLogDeliveryDeliveryConditionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealtimeLogDeliveryDeliveryConditionCondition {
		return vs[0].([]RealtimeLogDeliveryDeliveryConditionCondition)[vs[1].(int)]
	}).(RealtimeLogDeliveryDeliveryConditionConditionOutput)
}

type RealtimeLogDeliveryLogFormat struct {
	// A string to be added before each log delivery batch. Each log delivery batch may contain multiple log records.
	BatchPrefix *string `pulumi:"batchPrefix"`
	// A string to append after each log delivery batch.
	BatchSuffix *string `pulumi:"batchSuffix"`
	// In a single log record, a string is inserted between fields as a separator. The possible values are: `	`: tab character; `,`: comma; `;`: semicolon.
	FieldDelimiter *string `pulumi:"fieldDelimiter"`
	// The default output format type for log delivery. The possible values are: `json`: Use the default log output format JSON Lines. The fields in a single log are presented as key-value pairs; `csv`: Use the default log output format csv. Only field values are presented in a single log, without field names.
	FormatType string `pulumi:"formatType"`
	// The string inserted between log records as a separator. The possible values are: ``: newline character; `	`: tab character; `,`: comma.
	RecordDelimiter *string `pulumi:"recordDelimiter"`
	// A string to prepend to each log record.
	RecordPrefix *string `pulumi:"recordPrefix"`
	// A string to append to each log record.
	//
	// The `s3` object supports the following:
	RecordSuffix *string `pulumi:"recordSuffix"`
}

// RealtimeLogDeliveryLogFormatInput is an input type that accepts RealtimeLogDeliveryLogFormatArgs and RealtimeLogDeliveryLogFormatOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryLogFormatInput` via:
//
//	RealtimeLogDeliveryLogFormatArgs{...}
type RealtimeLogDeliveryLogFormatInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryLogFormatOutput() RealtimeLogDeliveryLogFormatOutput
	ToRealtimeLogDeliveryLogFormatOutputWithContext(context.Context) RealtimeLogDeliveryLogFormatOutput
}

type RealtimeLogDeliveryLogFormatArgs struct {
	// A string to be added before each log delivery batch. Each log delivery batch may contain multiple log records.
	BatchPrefix pulumi.StringPtrInput `pulumi:"batchPrefix"`
	// A string to append after each log delivery batch.
	BatchSuffix pulumi.StringPtrInput `pulumi:"batchSuffix"`
	// In a single log record, a string is inserted between fields as a separator. The possible values are: `	`: tab character; `,`: comma; `;`: semicolon.
	FieldDelimiter pulumi.StringPtrInput `pulumi:"fieldDelimiter"`
	// The default output format type for log delivery. The possible values are: `json`: Use the default log output format JSON Lines. The fields in a single log are presented as key-value pairs; `csv`: Use the default log output format csv. Only field values are presented in a single log, without field names.
	FormatType pulumi.StringInput `pulumi:"formatType"`
	// The string inserted between log records as a separator. The possible values are: ``: newline character; `	`: tab character; `,`: comma.
	RecordDelimiter pulumi.StringPtrInput `pulumi:"recordDelimiter"`
	// A string to prepend to each log record.
	RecordPrefix pulumi.StringPtrInput `pulumi:"recordPrefix"`
	// A string to append to each log record.
	//
	// The `s3` object supports the following:
	RecordSuffix pulumi.StringPtrInput `pulumi:"recordSuffix"`
}

func (RealtimeLogDeliveryLogFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryLogFormat)(nil)).Elem()
}

func (i RealtimeLogDeliveryLogFormatArgs) ToRealtimeLogDeliveryLogFormatOutput() RealtimeLogDeliveryLogFormatOutput {
	return i.ToRealtimeLogDeliveryLogFormatOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryLogFormatArgs) ToRealtimeLogDeliveryLogFormatOutputWithContext(ctx context.Context) RealtimeLogDeliveryLogFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryLogFormatOutput)
}

func (i RealtimeLogDeliveryLogFormatArgs) ToRealtimeLogDeliveryLogFormatPtrOutput() RealtimeLogDeliveryLogFormatPtrOutput {
	return i.ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryLogFormatArgs) ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryLogFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryLogFormatOutput).ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(ctx)
}

// RealtimeLogDeliveryLogFormatPtrInput is an input type that accepts RealtimeLogDeliveryLogFormatArgs, RealtimeLogDeliveryLogFormatPtr and RealtimeLogDeliveryLogFormatPtrOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryLogFormatPtrInput` via:
//
//	        RealtimeLogDeliveryLogFormatArgs{...}
//
//	or:
//
//	        nil
type RealtimeLogDeliveryLogFormatPtrInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryLogFormatPtrOutput() RealtimeLogDeliveryLogFormatPtrOutput
	ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(context.Context) RealtimeLogDeliveryLogFormatPtrOutput
}

type realtimeLogDeliveryLogFormatPtrType RealtimeLogDeliveryLogFormatArgs

func RealtimeLogDeliveryLogFormatPtr(v *RealtimeLogDeliveryLogFormatArgs) RealtimeLogDeliveryLogFormatPtrInput {
	return (*realtimeLogDeliveryLogFormatPtrType)(v)
}

func (*realtimeLogDeliveryLogFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryLogFormat)(nil)).Elem()
}

func (i *realtimeLogDeliveryLogFormatPtrType) ToRealtimeLogDeliveryLogFormatPtrOutput() RealtimeLogDeliveryLogFormatPtrOutput {
	return i.ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(context.Background())
}

func (i *realtimeLogDeliveryLogFormatPtrType) ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryLogFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryLogFormatPtrOutput)
}

type RealtimeLogDeliveryLogFormatOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryLogFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryLogFormat)(nil)).Elem()
}

func (o RealtimeLogDeliveryLogFormatOutput) ToRealtimeLogDeliveryLogFormatOutput() RealtimeLogDeliveryLogFormatOutput {
	return o
}

func (o RealtimeLogDeliveryLogFormatOutput) ToRealtimeLogDeliveryLogFormatOutputWithContext(ctx context.Context) RealtimeLogDeliveryLogFormatOutput {
	return o
}

func (o RealtimeLogDeliveryLogFormatOutput) ToRealtimeLogDeliveryLogFormatPtrOutput() RealtimeLogDeliveryLogFormatPtrOutput {
	return o.ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(context.Background())
}

func (o RealtimeLogDeliveryLogFormatOutput) ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryLogFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RealtimeLogDeliveryLogFormat) *RealtimeLogDeliveryLogFormat {
		return &v
	}).(RealtimeLogDeliveryLogFormatPtrOutput)
}

// A string to be added before each log delivery batch. Each log delivery batch may contain multiple log records.
func (o RealtimeLogDeliveryLogFormatOutput) BatchPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) *string { return v.BatchPrefix }).(pulumi.StringPtrOutput)
}

// A string to append after each log delivery batch.
func (o RealtimeLogDeliveryLogFormatOutput) BatchSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) *string { return v.BatchSuffix }).(pulumi.StringPtrOutput)
}

// In a single log record, a string is inserted between fields as a separator. The possible values are: `	`: tab character; `,`: comma; `;`: semicolon.
func (o RealtimeLogDeliveryLogFormatOutput) FieldDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) *string { return v.FieldDelimiter }).(pulumi.StringPtrOutput)
}

// The default output format type for log delivery. The possible values are: `json`: Use the default log output format JSON Lines. The fields in a single log are presented as key-value pairs; `csv`: Use the default log output format csv. Only field values are presented in a single log, without field names.
func (o RealtimeLogDeliveryLogFormatOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) string { return v.FormatType }).(pulumi.StringOutput)
}

// The string inserted between log records as a separator. The possible values are: “: newline character; `	`: tab character; `,`: comma.
func (o RealtimeLogDeliveryLogFormatOutput) RecordDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) *string { return v.RecordDelimiter }).(pulumi.StringPtrOutput)
}

// A string to prepend to each log record.
func (o RealtimeLogDeliveryLogFormatOutput) RecordPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) *string { return v.RecordPrefix }).(pulumi.StringPtrOutput)
}

// A string to append to each log record.
//
// The `s3` object supports the following:
func (o RealtimeLogDeliveryLogFormatOutput) RecordSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryLogFormat) *string { return v.RecordSuffix }).(pulumi.StringPtrOutput)
}

type RealtimeLogDeliveryLogFormatPtrOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryLogFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryLogFormat)(nil)).Elem()
}

func (o RealtimeLogDeliveryLogFormatPtrOutput) ToRealtimeLogDeliveryLogFormatPtrOutput() RealtimeLogDeliveryLogFormatPtrOutput {
	return o
}

func (o RealtimeLogDeliveryLogFormatPtrOutput) ToRealtimeLogDeliveryLogFormatPtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryLogFormatPtrOutput {
	return o
}

func (o RealtimeLogDeliveryLogFormatPtrOutput) Elem() RealtimeLogDeliveryLogFormatOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) RealtimeLogDeliveryLogFormat {
		if v != nil {
			return *v
		}
		var ret RealtimeLogDeliveryLogFormat
		return ret
	}).(RealtimeLogDeliveryLogFormatOutput)
}

// A string to be added before each log delivery batch. Each log delivery batch may contain multiple log records.
func (o RealtimeLogDeliveryLogFormatPtrOutput) BatchPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return v.BatchPrefix
	}).(pulumi.StringPtrOutput)
}

// A string to append after each log delivery batch.
func (o RealtimeLogDeliveryLogFormatPtrOutput) BatchSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return v.BatchSuffix
	}).(pulumi.StringPtrOutput)
}

// In a single log record, a string is inserted between fields as a separator. The possible values are: `	`: tab character; `,`: comma; `;`: semicolon.
func (o RealtimeLogDeliveryLogFormatPtrOutput) FieldDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return v.FieldDelimiter
	}).(pulumi.StringPtrOutput)
}

// The default output format type for log delivery. The possible values are: `json`: Use the default log output format JSON Lines. The fields in a single log are presented as key-value pairs; `csv`: Use the default log output format csv. Only field values are presented in a single log, without field names.
func (o RealtimeLogDeliveryLogFormatPtrOutput) FormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return &v.FormatType
	}).(pulumi.StringPtrOutput)
}

// The string inserted between log records as a separator. The possible values are: “: newline character; `	`: tab character; `,`: comma.
func (o RealtimeLogDeliveryLogFormatPtrOutput) RecordDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return v.RecordDelimiter
	}).(pulumi.StringPtrOutput)
}

// A string to prepend to each log record.
func (o RealtimeLogDeliveryLogFormatPtrOutput) RecordPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return v.RecordPrefix
	}).(pulumi.StringPtrOutput)
}

// A string to append to each log record.
//
// The `s3` object supports the following:
func (o RealtimeLogDeliveryLogFormatPtrOutput) RecordSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryLogFormat) *string {
		if v == nil {
			return nil
		}
		return v.RecordSuffix
	}).(pulumi.StringPtrOutput)
}

type RealtimeLogDeliveryS3 struct {
	// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
	AccessId string `pulumi:"accessId"`
	// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
	AccessKey string `pulumi:"accessKey"`
	// Bucket name and log storage directory, for example: `your_bucket_name/EO-logs/`. If this directory does not exist in the bucket, it will be created automatically.
	Bucket string `pulumi:"bucket"`
	// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
	CompressType *string `pulumi:"compressType"`
	// URLs that do not include bucket names or paths, for example: `https://storage.googleapis.com`, `https://s3.ap-northeast-2.amazonaws.com`, `https://cos.ap-nanjing.myqcloud.com`.
	Endpoint string `pulumi:"endpoint"`
	// The region where the bucket is located, for example: ap-northeast-2.
	Region string `pulumi:"region"`
}

// RealtimeLogDeliveryS3Input is an input type that accepts RealtimeLogDeliveryS3Args and RealtimeLogDeliveryS3Output values.
// You can construct a concrete instance of `RealtimeLogDeliveryS3Input` via:
//
//	RealtimeLogDeliveryS3Args{...}
type RealtimeLogDeliveryS3Input interface {
	pulumi.Input

	ToRealtimeLogDeliveryS3Output() RealtimeLogDeliveryS3Output
	ToRealtimeLogDeliveryS3OutputWithContext(context.Context) RealtimeLogDeliveryS3Output
}

type RealtimeLogDeliveryS3Args struct {
	// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
	AccessId pulumi.StringInput `pulumi:"accessId"`
	// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// Bucket name and log storage directory, for example: `your_bucket_name/EO-logs/`. If this directory does not exist in the bucket, it will be created automatically.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
	CompressType pulumi.StringPtrInput `pulumi:"compressType"`
	// URLs that do not include bucket names or paths, for example: `https://storage.googleapis.com`, `https://s3.ap-northeast-2.amazonaws.com`, `https://cos.ap-nanjing.myqcloud.com`.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The region where the bucket is located, for example: ap-northeast-2.
	Region pulumi.StringInput `pulumi:"region"`
}

func (RealtimeLogDeliveryS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryS3)(nil)).Elem()
}

func (i RealtimeLogDeliveryS3Args) ToRealtimeLogDeliveryS3Output() RealtimeLogDeliveryS3Output {
	return i.ToRealtimeLogDeliveryS3OutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryS3Args) ToRealtimeLogDeliveryS3OutputWithContext(ctx context.Context) RealtimeLogDeliveryS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryS3Output)
}

func (i RealtimeLogDeliveryS3Args) ToRealtimeLogDeliveryS3PtrOutput() RealtimeLogDeliveryS3PtrOutput {
	return i.ToRealtimeLogDeliveryS3PtrOutputWithContext(context.Background())
}

func (i RealtimeLogDeliveryS3Args) ToRealtimeLogDeliveryS3PtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryS3Output).ToRealtimeLogDeliveryS3PtrOutputWithContext(ctx)
}

// RealtimeLogDeliveryS3PtrInput is an input type that accepts RealtimeLogDeliveryS3Args, RealtimeLogDeliveryS3Ptr and RealtimeLogDeliveryS3PtrOutput values.
// You can construct a concrete instance of `RealtimeLogDeliveryS3PtrInput` via:
//
//	        RealtimeLogDeliveryS3Args{...}
//
//	or:
//
//	        nil
type RealtimeLogDeliveryS3PtrInput interface {
	pulumi.Input

	ToRealtimeLogDeliveryS3PtrOutput() RealtimeLogDeliveryS3PtrOutput
	ToRealtimeLogDeliveryS3PtrOutputWithContext(context.Context) RealtimeLogDeliveryS3PtrOutput
}

type realtimeLogDeliveryS3PtrType RealtimeLogDeliveryS3Args

func RealtimeLogDeliveryS3Ptr(v *RealtimeLogDeliveryS3Args) RealtimeLogDeliveryS3PtrInput {
	return (*realtimeLogDeliveryS3PtrType)(v)
}

func (*realtimeLogDeliveryS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryS3)(nil)).Elem()
}

func (i *realtimeLogDeliveryS3PtrType) ToRealtimeLogDeliveryS3PtrOutput() RealtimeLogDeliveryS3PtrOutput {
	return i.ToRealtimeLogDeliveryS3PtrOutputWithContext(context.Background())
}

func (i *realtimeLogDeliveryS3PtrType) ToRealtimeLogDeliveryS3PtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogDeliveryS3PtrOutput)
}

type RealtimeLogDeliveryS3Output struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogDeliveryS3)(nil)).Elem()
}

func (o RealtimeLogDeliveryS3Output) ToRealtimeLogDeliveryS3Output() RealtimeLogDeliveryS3Output {
	return o
}

func (o RealtimeLogDeliveryS3Output) ToRealtimeLogDeliveryS3OutputWithContext(ctx context.Context) RealtimeLogDeliveryS3Output {
	return o
}

func (o RealtimeLogDeliveryS3Output) ToRealtimeLogDeliveryS3PtrOutput() RealtimeLogDeliveryS3PtrOutput {
	return o.ToRealtimeLogDeliveryS3PtrOutputWithContext(context.Background())
}

func (o RealtimeLogDeliveryS3Output) ToRealtimeLogDeliveryS3PtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RealtimeLogDeliveryS3) *RealtimeLogDeliveryS3 {
		return &v
	}).(RealtimeLogDeliveryS3PtrOutput)
}

// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryS3Output) AccessId() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryS3) string { return v.AccessId }).(pulumi.StringOutput)
}

// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryS3Output) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryS3) string { return v.AccessKey }).(pulumi.StringOutput)
}

// Bucket name and log storage directory, for example: `your_bucket_name/EO-logs/`. If this directory does not exist in the bucket, it will be created automatically.
func (o RealtimeLogDeliveryS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
func (o RealtimeLogDeliveryS3Output) CompressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryS3) *string { return v.CompressType }).(pulumi.StringPtrOutput)
}

// URLs that do not include bucket names or paths, for example: `https://storage.googleapis.com`, `https://s3.ap-northeast-2.amazonaws.com`, `https://cos.ap-nanjing.myqcloud.com`.
func (o RealtimeLogDeliveryS3Output) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryS3) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The region where the bucket is located, for example: ap-northeast-2.
func (o RealtimeLogDeliveryS3Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogDeliveryS3) string { return v.Region }).(pulumi.StringOutput)
}

type RealtimeLogDeliveryS3PtrOutput struct{ *pulumi.OutputState }

func (RealtimeLogDeliveryS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogDeliveryS3)(nil)).Elem()
}

func (o RealtimeLogDeliveryS3PtrOutput) ToRealtimeLogDeliveryS3PtrOutput() RealtimeLogDeliveryS3PtrOutput {
	return o
}

func (o RealtimeLogDeliveryS3PtrOutput) ToRealtimeLogDeliveryS3PtrOutputWithContext(ctx context.Context) RealtimeLogDeliveryS3PtrOutput {
	return o
}

func (o RealtimeLogDeliveryS3PtrOutput) Elem() RealtimeLogDeliveryS3Output {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) RealtimeLogDeliveryS3 {
		if v != nil {
			return *v
		}
		var ret RealtimeLogDeliveryS3
		return ret
	}).(RealtimeLogDeliveryS3Output)
}

// Fill in a custom SecretId to generate an encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryS3PtrOutput) AccessId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return &v.AccessId
	}).(pulumi.StringPtrOutput)
}

// Fill in the custom SecretKey to generate the encrypted signature. This parameter is required if the source site requires authentication.
func (o RealtimeLogDeliveryS3PtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket name and log storage directory, for example: `your_bucket_name/EO-logs/`. If this directory does not exist in the bucket, it will be created automatically.
func (o RealtimeLogDeliveryS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Data compression type, the possible values are: `gzip`: use gzip compression. If it is not filled in, compression is not enabled.
func (o RealtimeLogDeliveryS3PtrOutput) CompressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return v.CompressType
	}).(pulumi.StringPtrOutput)
}

// URLs that do not include bucket names or paths, for example: `https://storage.googleapis.com`, `https://s3.ap-northeast-2.amazonaws.com`, `https://cos.ap-nanjing.myqcloud.com`.
func (o RealtimeLogDeliveryS3PtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The region where the bucket is located, for example: ap-northeast-2.
func (o RealtimeLogDeliveryS3PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RealtimeLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type RuleEngineRule struct {
	// Feature to be executed.
	Actions []RuleEngineRuleAction `pulumi:"actions"`
	// OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
	Ors []RuleEngineRuleOr `pulumi:"ors"`
	// The nested rule.
	SubRules []RuleEngineRuleSubRule `pulumi:"subRules"`
}

// RuleEngineRuleInput is an input type that accepts RuleEngineRuleArgs and RuleEngineRuleOutput values.
// You can construct a concrete instance of `RuleEngineRuleInput` via:
//
//	RuleEngineRuleArgs{...}
type RuleEngineRuleInput interface {
	pulumi.Input

	ToRuleEngineRuleOutput() RuleEngineRuleOutput
	ToRuleEngineRuleOutputWithContext(context.Context) RuleEngineRuleOutput
}

type RuleEngineRuleArgs struct {
	// Feature to be executed.
	Actions RuleEngineRuleActionArrayInput `pulumi:"actions"`
	// OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
	Ors RuleEngineRuleOrArrayInput `pulumi:"ors"`
	// The nested rule.
	SubRules RuleEngineRuleSubRuleArrayInput `pulumi:"subRules"`
}

func (RuleEngineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRule)(nil)).Elem()
}

func (i RuleEngineRuleArgs) ToRuleEngineRuleOutput() RuleEngineRuleOutput {
	return i.ToRuleEngineRuleOutputWithContext(context.Background())
}

func (i RuleEngineRuleArgs) ToRuleEngineRuleOutputWithContext(ctx context.Context) RuleEngineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOutput)
}

// RuleEngineRuleArrayInput is an input type that accepts RuleEngineRuleArray and RuleEngineRuleArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleArrayInput` via:
//
//	RuleEngineRuleArray{ RuleEngineRuleArgs{...} }
type RuleEngineRuleArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleArrayOutput() RuleEngineRuleArrayOutput
	ToRuleEngineRuleArrayOutputWithContext(context.Context) RuleEngineRuleArrayOutput
}

type RuleEngineRuleArray []RuleEngineRuleInput

func (RuleEngineRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRule)(nil)).Elem()
}

func (i RuleEngineRuleArray) ToRuleEngineRuleArrayOutput() RuleEngineRuleArrayOutput {
	return i.ToRuleEngineRuleArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleArray) ToRuleEngineRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleArrayOutput)
}

type RuleEngineRuleOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRule)(nil)).Elem()
}

func (o RuleEngineRuleOutput) ToRuleEngineRuleOutput() RuleEngineRuleOutput {
	return o
}

func (o RuleEngineRuleOutput) ToRuleEngineRuleOutputWithContext(ctx context.Context) RuleEngineRuleOutput {
	return o
}

// Feature to be executed.
func (o RuleEngineRuleOutput) Actions() RuleEngineRuleActionArrayOutput {
	return o.ApplyT(func(v RuleEngineRule) []RuleEngineRuleAction { return v.Actions }).(RuleEngineRuleActionArrayOutput)
}

// OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
func (o RuleEngineRuleOutput) Ors() RuleEngineRuleOrArrayOutput {
	return o.ApplyT(func(v RuleEngineRule) []RuleEngineRuleOr { return v.Ors }).(RuleEngineRuleOrArrayOutput)
}

// The nested rule.
func (o RuleEngineRuleOutput) SubRules() RuleEngineRuleSubRuleArrayOutput {
	return o.ApplyT(func(v RuleEngineRule) []RuleEngineRuleSubRule { return v.SubRules }).(RuleEngineRuleSubRuleArrayOutput)
}

type RuleEngineRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRule)(nil)).Elem()
}

func (o RuleEngineRuleArrayOutput) ToRuleEngineRuleArrayOutput() RuleEngineRuleArrayOutput {
	return o
}

func (o RuleEngineRuleArrayOutput) ToRuleEngineRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleArrayOutput {
	return o
}

func (o RuleEngineRuleArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRule {
		return vs[0].([]RuleEngineRule)[vs[1].(int)]
	}).(RuleEngineRuleOutput)
}

type RuleEngineRuleAction struct {
	// Feature operation with a status code. Features of this type include:
	CodeAction *RuleEngineRuleActionCodeAction `pulumi:"codeAction"`
	// Common operation. Values:
	NormalAction *RuleEngineRuleActionNormalAction `pulumi:"normalAction"`
	// Feature operation with a request/response header. Features of this type include:
	RewriteAction *RuleEngineRuleActionRewriteAction `pulumi:"rewriteAction"`
}

// RuleEngineRuleActionInput is an input type that accepts RuleEngineRuleActionArgs and RuleEngineRuleActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionInput` via:
//
//	RuleEngineRuleActionArgs{...}
type RuleEngineRuleActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionOutput() RuleEngineRuleActionOutput
	ToRuleEngineRuleActionOutputWithContext(context.Context) RuleEngineRuleActionOutput
}

type RuleEngineRuleActionArgs struct {
	// Feature operation with a status code. Features of this type include:
	CodeAction RuleEngineRuleActionCodeActionPtrInput `pulumi:"codeAction"`
	// Common operation. Values:
	NormalAction RuleEngineRuleActionNormalActionPtrInput `pulumi:"normalAction"`
	// Feature operation with a request/response header. Features of this type include:
	RewriteAction RuleEngineRuleActionRewriteActionPtrInput `pulumi:"rewriteAction"`
}

func (RuleEngineRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleActionArgs) ToRuleEngineRuleActionOutput() RuleEngineRuleActionOutput {
	return i.ToRuleEngineRuleActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionArgs) ToRuleEngineRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionOutput)
}

// RuleEngineRuleActionArrayInput is an input type that accepts RuleEngineRuleActionArray and RuleEngineRuleActionArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionArrayInput` via:
//
//	RuleEngineRuleActionArray{ RuleEngineRuleActionArgs{...} }
type RuleEngineRuleActionArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionArrayOutput() RuleEngineRuleActionArrayOutput
	ToRuleEngineRuleActionArrayOutputWithContext(context.Context) RuleEngineRuleActionArrayOutput
}

type RuleEngineRuleActionArray []RuleEngineRuleActionInput

func (RuleEngineRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleActionArray) ToRuleEngineRuleActionArrayOutput() RuleEngineRuleActionArrayOutput {
	return i.ToRuleEngineRuleActionArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionArray) ToRuleEngineRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionArrayOutput)
}

type RuleEngineRuleActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleActionOutput) ToRuleEngineRuleActionOutput() RuleEngineRuleActionOutput {
	return o
}

func (o RuleEngineRuleActionOutput) ToRuleEngineRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleActionOutput {
	return o
}

// Feature operation with a status code. Features of this type include:
func (o RuleEngineRuleActionOutput) CodeAction() RuleEngineRuleActionCodeActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleAction) *RuleEngineRuleActionCodeAction { return v.CodeAction }).(RuleEngineRuleActionCodeActionPtrOutput)
}

// Common operation. Values:
func (o RuleEngineRuleActionOutput) NormalAction() RuleEngineRuleActionNormalActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleAction) *RuleEngineRuleActionNormalAction { return v.NormalAction }).(RuleEngineRuleActionNormalActionPtrOutput)
}

// Feature operation with a request/response header. Features of this type include:
func (o RuleEngineRuleActionOutput) RewriteAction() RuleEngineRuleActionRewriteActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleAction) *RuleEngineRuleActionRewriteAction { return v.RewriteAction }).(RuleEngineRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleActionArrayOutput) ToRuleEngineRuleActionArrayOutput() RuleEngineRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleActionArrayOutput) ToRuleEngineRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleActionArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleAction {
		return vs[0].([]RuleEngineRuleAction)[vs[1].(int)]
	}).(RuleEngineRuleActionOutput)
}

type RuleEngineRuleActionCodeAction struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action string `pulumi:"action"`
	// Operation parameter.
	Parameters []RuleEngineRuleActionCodeActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleActionCodeActionInput is an input type that accepts RuleEngineRuleActionCodeActionArgs and RuleEngineRuleActionCodeActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionInput` via:
//
//	RuleEngineRuleActionCodeActionArgs{...}
type RuleEngineRuleActionCodeActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionOutput() RuleEngineRuleActionCodeActionOutput
	ToRuleEngineRuleActionCodeActionOutputWithContext(context.Context) RuleEngineRuleActionCodeActionOutput
}

type RuleEngineRuleActionCodeActionArgs struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action pulumi.StringInput `pulumi:"action"`
	// Operation parameter.
	Parameters RuleEngineRuleActionCodeActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleActionCodeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionOutput() RuleEngineRuleActionCodeActionOutput {
	return i.ToRuleEngineRuleActionCodeActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionOutput)
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionOutput).ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleActionCodeActionPtrInput is an input type that accepts RuleEngineRuleActionCodeActionArgs, RuleEngineRuleActionCodeActionPtr and RuleEngineRuleActionCodeActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionPtrInput` via:
//
//	        RuleEngineRuleActionCodeActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleActionCodeActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput
	ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Context) RuleEngineRuleActionCodeActionPtrOutput
}

type ruleEngineRuleActionCodeActionPtrType RuleEngineRuleActionCodeActionArgs

func RuleEngineRuleActionCodeActionPtr(v *RuleEngineRuleActionCodeActionArgs) RuleEngineRuleActionCodeActionPtrInput {
	return (*ruleEngineRuleActionCodeActionPtrType)(v)
}

func (*ruleEngineRuleActionCodeActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (i *ruleEngineRuleActionCodeActionPtrType) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleActionCodeActionPtrType) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionPtrOutput)
}

type RuleEngineRuleActionCodeActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionOutput() RuleEngineRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return o.ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleActionCodeAction) *RuleEngineRuleActionCodeAction {
		return &v
	}).(RuleEngineRuleActionCodeActionPtrOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleActionCodeActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeAction) string { return v.Action }).(pulumi.StringOutput)
}

// Operation parameter.
func (o RuleEngineRuleActionCodeActionOutput) Parameters() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeAction) []RuleEngineRuleActionCodeActionParameter { return v.Parameters }).(RuleEngineRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleActionCodeActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionPtrOutput) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionPtrOutput) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionPtrOutput) Elem() RuleEngineRuleActionCodeActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionCodeAction) RuleEngineRuleActionCodeAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleActionCodeAction
		return ret
	}).(RuleEngineRuleActionCodeActionOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleActionCodeActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionCodeAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Operation parameter.
func (o RuleEngineRuleActionCodeActionPtrOutput) Parameters() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionCodeAction) []RuleEngineRuleActionCodeActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleActionCodeActionParameter struct {
	// Parameter name.
	Name string `pulumi:"name"`
	// The status code.
	StatusCode int `pulumi:"statusCode"`
	// Parameter value.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleActionCodeActionParameterInput is an input type that accepts RuleEngineRuleActionCodeActionParameterArgs and RuleEngineRuleActionCodeActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionParameterInput` via:
//
//	RuleEngineRuleActionCodeActionParameterArgs{...}
type RuleEngineRuleActionCodeActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionParameterOutput() RuleEngineRuleActionCodeActionParameterOutput
	ToRuleEngineRuleActionCodeActionParameterOutputWithContext(context.Context) RuleEngineRuleActionCodeActionParameterOutput
}

type RuleEngineRuleActionCodeActionParameterArgs struct {
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// The status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
	// Parameter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleActionCodeActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionCodeActionParameterArgs) ToRuleEngineRuleActionCodeActionParameterOutput() RuleEngineRuleActionCodeActionParameterOutput {
	return i.ToRuleEngineRuleActionCodeActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionParameterArgs) ToRuleEngineRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionParameterOutput)
}

// RuleEngineRuleActionCodeActionParameterArrayInput is an input type that accepts RuleEngineRuleActionCodeActionParameterArray and RuleEngineRuleActionCodeActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionParameterArrayInput` via:
//
//	RuleEngineRuleActionCodeActionParameterArray{ RuleEngineRuleActionCodeActionParameterArgs{...} }
type RuleEngineRuleActionCodeActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionParameterArrayOutput() RuleEngineRuleActionCodeActionParameterArrayOutput
	ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleActionCodeActionParameterArrayOutput
}

type RuleEngineRuleActionCodeActionParameterArray []RuleEngineRuleActionCodeActionParameterInput

func (RuleEngineRuleActionCodeActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionCodeActionParameterArray) ToRuleEngineRuleActionCodeActionParameterArrayOutput() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return i.ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionParameterArray) ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleActionCodeActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionParameterOutput) ToRuleEngineRuleActionCodeActionParameterOutput() RuleEngineRuleActionCodeActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterOutput) ToRuleEngineRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterOutput {
	return o
}

// Parameter name.
func (o RuleEngineRuleActionCodeActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The status code.
func (o RuleEngineRuleActionCodeActionParameterOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeActionParameter) int { return v.StatusCode }).(pulumi.IntOutput)
}

// Parameter value.
func (o RuleEngineRuleActionCodeActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleActionCodeActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleActionCodeActionParameterArrayOutput() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionCodeActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleActionCodeActionParameter {
		return vs[0].([]RuleEngineRuleActionCodeActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleActionCodeActionParameterOutput)
}

type RuleEngineRuleActionNormalAction struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action string `pulumi:"action"`
	// Parameter.
	Parameters []RuleEngineRuleActionNormalActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleActionNormalActionInput is an input type that accepts RuleEngineRuleActionNormalActionArgs and RuleEngineRuleActionNormalActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionInput` via:
//
//	RuleEngineRuleActionNormalActionArgs{...}
type RuleEngineRuleActionNormalActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionOutput() RuleEngineRuleActionNormalActionOutput
	ToRuleEngineRuleActionNormalActionOutputWithContext(context.Context) RuleEngineRuleActionNormalActionOutput
}

type RuleEngineRuleActionNormalActionArgs struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action pulumi.StringInput `pulumi:"action"`
	// Parameter.
	Parameters RuleEngineRuleActionNormalActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleActionNormalActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionOutput() RuleEngineRuleActionNormalActionOutput {
	return i.ToRuleEngineRuleActionNormalActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionOutput)
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionOutput).ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleActionNormalActionPtrInput is an input type that accepts RuleEngineRuleActionNormalActionArgs, RuleEngineRuleActionNormalActionPtr and RuleEngineRuleActionNormalActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionPtrInput` via:
//
//	        RuleEngineRuleActionNormalActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleActionNormalActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput
	ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Context) RuleEngineRuleActionNormalActionPtrOutput
}

type ruleEngineRuleActionNormalActionPtrType RuleEngineRuleActionNormalActionArgs

func RuleEngineRuleActionNormalActionPtr(v *RuleEngineRuleActionNormalActionArgs) RuleEngineRuleActionNormalActionPtrInput {
	return (*ruleEngineRuleActionNormalActionPtrType)(v)
}

func (*ruleEngineRuleActionNormalActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (i *ruleEngineRuleActionNormalActionPtrType) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleActionNormalActionPtrType) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionPtrOutput)
}

type RuleEngineRuleActionNormalActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionOutput() RuleEngineRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return o.ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleActionNormalAction) *RuleEngineRuleActionNormalAction {
		return &v
	}).(RuleEngineRuleActionNormalActionPtrOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleActionNormalActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalAction) string { return v.Action }).(pulumi.StringOutput)
}

// Parameter.
func (o RuleEngineRuleActionNormalActionOutput) Parameters() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalAction) []RuleEngineRuleActionNormalActionParameter {
		return v.Parameters
	}).(RuleEngineRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleActionNormalActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionPtrOutput) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionPtrOutput) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionPtrOutput) Elem() RuleEngineRuleActionNormalActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionNormalAction) RuleEngineRuleActionNormalAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleActionNormalAction
		return ret
	}).(RuleEngineRuleActionNormalActionOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleActionNormalActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionNormalAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Parameter.
func (o RuleEngineRuleActionNormalActionPtrOutput) Parameters() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionNormalAction) []RuleEngineRuleActionNormalActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleActionNormalActionParameter struct {
	// Parameter name.
	Name string `pulumi:"name"`
	// Parameter value.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleActionNormalActionParameterInput is an input type that accepts RuleEngineRuleActionNormalActionParameterArgs and RuleEngineRuleActionNormalActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionParameterInput` via:
//
//	RuleEngineRuleActionNormalActionParameterArgs{...}
type RuleEngineRuleActionNormalActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionParameterOutput() RuleEngineRuleActionNormalActionParameterOutput
	ToRuleEngineRuleActionNormalActionParameterOutputWithContext(context.Context) RuleEngineRuleActionNormalActionParameterOutput
}

type RuleEngineRuleActionNormalActionParameterArgs struct {
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleActionNormalActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionNormalActionParameterArgs) ToRuleEngineRuleActionNormalActionParameterOutput() RuleEngineRuleActionNormalActionParameterOutput {
	return i.ToRuleEngineRuleActionNormalActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionParameterArgs) ToRuleEngineRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionParameterOutput)
}

// RuleEngineRuleActionNormalActionParameterArrayInput is an input type that accepts RuleEngineRuleActionNormalActionParameterArray and RuleEngineRuleActionNormalActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionParameterArrayInput` via:
//
//	RuleEngineRuleActionNormalActionParameterArray{ RuleEngineRuleActionNormalActionParameterArgs{...} }
type RuleEngineRuleActionNormalActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionParameterArrayOutput() RuleEngineRuleActionNormalActionParameterArrayOutput
	ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleActionNormalActionParameterArrayOutput
}

type RuleEngineRuleActionNormalActionParameterArray []RuleEngineRuleActionNormalActionParameterInput

func (RuleEngineRuleActionNormalActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionNormalActionParameterArray) ToRuleEngineRuleActionNormalActionParameterArrayOutput() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return i.ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionParameterArray) ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleActionNormalActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionParameterOutput) ToRuleEngineRuleActionNormalActionParameterOutput() RuleEngineRuleActionNormalActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterOutput) ToRuleEngineRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterOutput {
	return o
}

// Parameter name.
func (o RuleEngineRuleActionNormalActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Parameter value.
func (o RuleEngineRuleActionNormalActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleActionNormalActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleActionNormalActionParameterArrayOutput() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionNormalActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleActionNormalActionParameter {
		return vs[0].([]RuleEngineRuleActionNormalActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleActionNormalActionParameterOutput)
}

type RuleEngineRuleActionRewriteAction struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action string `pulumi:"action"`
	// Parameter.
	Parameters []RuleEngineRuleActionRewriteActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleActionRewriteActionInput is an input type that accepts RuleEngineRuleActionRewriteActionArgs and RuleEngineRuleActionRewriteActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionInput` via:
//
//	RuleEngineRuleActionRewriteActionArgs{...}
type RuleEngineRuleActionRewriteActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionOutput() RuleEngineRuleActionRewriteActionOutput
	ToRuleEngineRuleActionRewriteActionOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionOutput
}

type RuleEngineRuleActionRewriteActionArgs struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action pulumi.StringInput `pulumi:"action"`
	// Parameter.
	Parameters RuleEngineRuleActionRewriteActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleActionRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionOutput() RuleEngineRuleActionRewriteActionOutput {
	return i.ToRuleEngineRuleActionRewriteActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionOutput)
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionOutput).ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleActionRewriteActionPtrInput is an input type that accepts RuleEngineRuleActionRewriteActionArgs, RuleEngineRuleActionRewriteActionPtr and RuleEngineRuleActionRewriteActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionPtrInput` via:
//
//	        RuleEngineRuleActionRewriteActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleActionRewriteActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput
	ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionPtrOutput
}

type ruleEngineRuleActionRewriteActionPtrType RuleEngineRuleActionRewriteActionArgs

func RuleEngineRuleActionRewriteActionPtr(v *RuleEngineRuleActionRewriteActionArgs) RuleEngineRuleActionRewriteActionPtrInput {
	return (*ruleEngineRuleActionRewriteActionPtrType)(v)
}

func (*ruleEngineRuleActionRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (i *ruleEngineRuleActionRewriteActionPtrType) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleActionRewriteActionPtrType) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleActionRewriteActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionOutput() RuleEngineRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return o.ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleActionRewriteAction) *RuleEngineRuleActionRewriteAction {
		return &v
	}).(RuleEngineRuleActionRewriteActionPtrOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleActionRewriteActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteAction) string { return v.Action }).(pulumi.StringOutput)
}

// Parameter.
func (o RuleEngineRuleActionRewriteActionOutput) Parameters() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteAction) []RuleEngineRuleActionRewriteActionParameter {
		return v.Parameters
	}).(RuleEngineRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleActionRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) Elem() RuleEngineRuleActionRewriteActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionRewriteAction) RuleEngineRuleActionRewriteAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleActionRewriteAction
		return ret
	}).(RuleEngineRuleActionRewriteActionOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleActionRewriteActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Parameter.
func (o RuleEngineRuleActionRewriteActionPtrOutput) Parameters() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionRewriteAction) []RuleEngineRuleActionRewriteActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleActionRewriteActionParameter struct {
	// Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
	// - add: Add the HTTP header.
	// - set: Rewrite the HTTP header.
	// - del: Delete the HTTP header.
	Action string `pulumi:"action"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Parameter value.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleActionRewriteActionParameterInput is an input type that accepts RuleEngineRuleActionRewriteActionParameterArgs and RuleEngineRuleActionRewriteActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionParameterInput` via:
//
//	RuleEngineRuleActionRewriteActionParameterArgs{...}
type RuleEngineRuleActionRewriteActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionParameterOutput() RuleEngineRuleActionRewriteActionParameterOutput
	ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionParameterOutput
}

type RuleEngineRuleActionRewriteActionParameterArgs struct {
	// Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
	// - add: Add the HTTP header.
	// - set: Rewrite the HTTP header.
	// - del: Delete the HTTP header.
	Action pulumi.StringInput `pulumi:"action"`
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleActionRewriteActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionRewriteActionParameterArgs) ToRuleEngineRuleActionRewriteActionParameterOutput() RuleEngineRuleActionRewriteActionParameterOutput {
	return i.ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionParameterArgs) ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionParameterOutput)
}

// RuleEngineRuleActionRewriteActionParameterArrayInput is an input type that accepts RuleEngineRuleActionRewriteActionParameterArray and RuleEngineRuleActionRewriteActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionParameterArrayInput` via:
//
//	RuleEngineRuleActionRewriteActionParameterArray{ RuleEngineRuleActionRewriteActionParameterArgs{...} }
type RuleEngineRuleActionRewriteActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleActionRewriteActionParameterArrayOutput
	ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionParameterArrayOutput
}

type RuleEngineRuleActionRewriteActionParameterArray []RuleEngineRuleActionRewriteActionParameterInput

func (RuleEngineRuleActionRewriteActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionRewriteActionParameterArray) ToRuleEngineRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return i.ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionParameterArray) ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleActionRewriteActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) ToRuleEngineRuleActionRewriteActionParameterOutput() RuleEngineRuleActionRewriteActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterOutput {
	return o
}

// Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
// - add: Add the HTTP header.
// - set: Rewrite the HTTP header.
// - del: Delete the HTTP header.
func (o RuleEngineRuleActionRewriteActionParameterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteActionParameter) string { return v.Action }).(pulumi.StringOutput)
}

// Parameter name.
func (o RuleEngineRuleActionRewriteActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Parameter value.
func (o RuleEngineRuleActionRewriteActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleActionRewriteActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionRewriteActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleActionRewriteActionParameter {
		return vs[0].([]RuleEngineRuleActionRewriteActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleActionRewriteActionParameterOutput)
}

type RuleEngineRuleOr struct {
	// Rule engine condition. This condition will be considered met if all items in the array are met.
	Ands []RuleEngineRuleOrAnd `pulumi:"ands"`
}

// RuleEngineRuleOrInput is an input type that accepts RuleEngineRuleOrArgs and RuleEngineRuleOrOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrInput` via:
//
//	RuleEngineRuleOrArgs{...}
type RuleEngineRuleOrInput interface {
	pulumi.Input

	ToRuleEngineRuleOrOutput() RuleEngineRuleOrOutput
	ToRuleEngineRuleOrOutputWithContext(context.Context) RuleEngineRuleOrOutput
}

type RuleEngineRuleOrArgs struct {
	// Rule engine condition. This condition will be considered met if all items in the array are met.
	Ands RuleEngineRuleOrAndArrayInput `pulumi:"ands"`
}

func (RuleEngineRuleOrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleOrArgs) ToRuleEngineRuleOrOutput() RuleEngineRuleOrOutput {
	return i.ToRuleEngineRuleOrOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrArgs) ToRuleEngineRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleOrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrOutput)
}

// RuleEngineRuleOrArrayInput is an input type that accepts RuleEngineRuleOrArray and RuleEngineRuleOrArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrArrayInput` via:
//
//	RuleEngineRuleOrArray{ RuleEngineRuleOrArgs{...} }
type RuleEngineRuleOrArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleOrArrayOutput() RuleEngineRuleOrArrayOutput
	ToRuleEngineRuleOrArrayOutputWithContext(context.Context) RuleEngineRuleOrArrayOutput
}

type RuleEngineRuleOrArray []RuleEngineRuleOrInput

func (RuleEngineRuleOrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleOrArray) ToRuleEngineRuleOrArrayOutput() RuleEngineRuleOrArrayOutput {
	return i.ToRuleEngineRuleOrArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrArray) ToRuleEngineRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrArrayOutput)
}

type RuleEngineRuleOrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleOrOutput) ToRuleEngineRuleOrOutput() RuleEngineRuleOrOutput {
	return o
}

func (o RuleEngineRuleOrOutput) ToRuleEngineRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleOrOutput {
	return o
}

// Rule engine condition. This condition will be considered met if all items in the array are met.
func (o RuleEngineRuleOrOutput) Ands() RuleEngineRuleOrAndArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleOr) []RuleEngineRuleOrAnd { return v.Ands }).(RuleEngineRuleOrAndArrayOutput)
}

type RuleEngineRuleOrArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleOrArrayOutput) ToRuleEngineRuleOrArrayOutput() RuleEngineRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleOrArrayOutput) ToRuleEngineRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleOrArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleOrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleOr {
		return vs[0].([]RuleEngineRuleOr)[vs[1].(int)]
	}).(RuleEngineRuleOrOutput)
}

type RuleEngineRuleOrAnd struct {
	// Whether the parameter value is case insensitive. Default value: false.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
	Name *string `pulumi:"name"`
	// Operator. Valid values:
	Operator string `pulumi:"operator"`
	// The match type. Values:
	Target string `pulumi:"target"`
	// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
	// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
	// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
	// - When `Target=all`, it indicates any site request.
	// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
	// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
	// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
	// - When `Target=client_country`, enter the ISO-3166 country/region code.
	// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
	// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleOrAndInput is an input type that accepts RuleEngineRuleOrAndArgs and RuleEngineRuleOrAndOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrAndInput` via:
//
//	RuleEngineRuleOrAndArgs{...}
type RuleEngineRuleOrAndInput interface {
	pulumi.Input

	ToRuleEngineRuleOrAndOutput() RuleEngineRuleOrAndOutput
	ToRuleEngineRuleOrAndOutputWithContext(context.Context) RuleEngineRuleOrAndOutput
}

type RuleEngineRuleOrAndArgs struct {
	// Whether the parameter value is case insensitive. Default value: false.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Operator. Valid values:
	Operator pulumi.StringInput `pulumi:"operator"`
	// The match type. Values:
	Target pulumi.StringInput `pulumi:"target"`
	// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
	// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
	// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
	// - When `Target=all`, it indicates any site request.
	// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
	// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
	// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
	// - When `Target=client_country`, enter the ISO-3166 country/region code.
	// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
	// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleOrAndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleOrAndArgs) ToRuleEngineRuleOrAndOutput() RuleEngineRuleOrAndOutput {
	return i.ToRuleEngineRuleOrAndOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrAndArgs) ToRuleEngineRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleOrAndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrAndOutput)
}

// RuleEngineRuleOrAndArrayInput is an input type that accepts RuleEngineRuleOrAndArray and RuleEngineRuleOrAndArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrAndArrayInput` via:
//
//	RuleEngineRuleOrAndArray{ RuleEngineRuleOrAndArgs{...} }
type RuleEngineRuleOrAndArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleOrAndArrayOutput() RuleEngineRuleOrAndArrayOutput
	ToRuleEngineRuleOrAndArrayOutputWithContext(context.Context) RuleEngineRuleOrAndArrayOutput
}

type RuleEngineRuleOrAndArray []RuleEngineRuleOrAndInput

func (RuleEngineRuleOrAndArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleOrAndArray) ToRuleEngineRuleOrAndArrayOutput() RuleEngineRuleOrAndArrayOutput {
	return i.ToRuleEngineRuleOrAndArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrAndArray) ToRuleEngineRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrAndArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrAndArrayOutput)
}

type RuleEngineRuleOrAndOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrAndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleOrAndOutput) ToRuleEngineRuleOrAndOutput() RuleEngineRuleOrAndOutput {
	return o
}

func (o RuleEngineRuleOrAndOutput) ToRuleEngineRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleOrAndOutput {
	return o
}

// Whether the parameter value is case insensitive. Default value: false.
func (o RuleEngineRuleOrAndOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
func (o RuleEngineRuleOrAndOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator. Valid values:
func (o RuleEngineRuleOrAndOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) string { return v.Operator }).(pulumi.StringOutput)
}

// The match type. Values:
func (o RuleEngineRuleOrAndOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) string { return v.Target }).(pulumi.StringOutput)
}

// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
// - When `Target=all`, it indicates any site request.
// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
// - When `Target=client_country`, enter the ISO-3166 country/region code.
// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
func (o RuleEngineRuleOrAndOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleOrAndArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrAndArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleOrAndArrayOutput) ToRuleEngineRuleOrAndArrayOutput() RuleEngineRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleOrAndArrayOutput) ToRuleEngineRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleOrAndArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleOrAndOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleOrAnd {
		return vs[0].([]RuleEngineRuleOrAnd)[vs[1].(int)]
	}).(RuleEngineRuleOrAndOutput)
}

type RuleEngineRuleSubRule struct {
	// Nested rule settings.
	Rules []RuleEngineRuleSubRuleRule `pulumi:"rules"`
	// Tag of the rule.
	Tags []string `pulumi:"tags"`
}

// RuleEngineRuleSubRuleInput is an input type that accepts RuleEngineRuleSubRuleArgs and RuleEngineRuleSubRuleOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleInput` via:
//
//	RuleEngineRuleSubRuleArgs{...}
type RuleEngineRuleSubRuleInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleOutput() RuleEngineRuleSubRuleOutput
	ToRuleEngineRuleSubRuleOutputWithContext(context.Context) RuleEngineRuleSubRuleOutput
}

type RuleEngineRuleSubRuleArgs struct {
	// Nested rule settings.
	Rules RuleEngineRuleSubRuleRuleArrayInput `pulumi:"rules"`
	// Tag of the rule.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (RuleEngineRuleSubRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleArgs) ToRuleEngineRuleSubRuleOutput() RuleEngineRuleSubRuleOutput {
	return i.ToRuleEngineRuleSubRuleOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleArgs) ToRuleEngineRuleSubRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleOutput)
}

// RuleEngineRuleSubRuleArrayInput is an input type that accepts RuleEngineRuleSubRuleArray and RuleEngineRuleSubRuleArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleArrayInput` via:
//
//	RuleEngineRuleSubRuleArray{ RuleEngineRuleSubRuleArgs{...} }
type RuleEngineRuleSubRuleArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleArrayOutput() RuleEngineRuleSubRuleArrayOutput
	ToRuleEngineRuleSubRuleArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleArrayOutput
}

type RuleEngineRuleSubRuleArray []RuleEngineRuleSubRuleInput

func (RuleEngineRuleSubRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleArray) ToRuleEngineRuleSubRuleArrayOutput() RuleEngineRuleSubRuleArrayOutput {
	return i.ToRuleEngineRuleSubRuleArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleArray) ToRuleEngineRuleSubRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleArrayOutput)
}

type RuleEngineRuleSubRuleOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleOutput) ToRuleEngineRuleSubRuleOutput() RuleEngineRuleSubRuleOutput {
	return o
}

func (o RuleEngineRuleSubRuleOutput) ToRuleEngineRuleSubRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleOutput {
	return o
}

// Nested rule settings.
func (o RuleEngineRuleSubRuleOutput) Rules() RuleEngineRuleSubRuleRuleArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRule) []RuleEngineRuleSubRuleRule { return v.Rules }).(RuleEngineRuleSubRuleRuleArrayOutput)
}

// Tag of the rule.
func (o RuleEngineRuleSubRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleArrayOutput) ToRuleEngineRuleSubRuleArrayOutput() RuleEngineRuleSubRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleArrayOutput) ToRuleEngineRuleSubRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRule {
		return vs[0].([]RuleEngineRuleSubRule)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleOutput)
}

type RuleEngineRuleSubRuleRule struct {
	// Feature to be executed.
	Actions []RuleEngineRuleSubRuleRuleAction `pulumi:"actions"`
	// OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
	Ors []RuleEngineRuleSubRuleRuleOr `pulumi:"ors"`
}

// RuleEngineRuleSubRuleRuleInput is an input type that accepts RuleEngineRuleSubRuleRuleArgs and RuleEngineRuleSubRuleRuleOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleInput` via:
//
//	RuleEngineRuleSubRuleRuleArgs{...}
type RuleEngineRuleSubRuleRuleInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOutput() RuleEngineRuleSubRuleRuleOutput
	ToRuleEngineRuleSubRuleRuleOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOutput
}

type RuleEngineRuleSubRuleRuleArgs struct {
	// Feature to be executed.
	Actions RuleEngineRuleSubRuleRuleActionArrayInput `pulumi:"actions"`
	// OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
	Ors RuleEngineRuleSubRuleRuleOrArrayInput `pulumi:"ors"`
}

func (RuleEngineRuleSubRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleArgs) ToRuleEngineRuleSubRuleRuleOutput() RuleEngineRuleSubRuleRuleOutput {
	return i.ToRuleEngineRuleSubRuleRuleOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleArgs) ToRuleEngineRuleSubRuleRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOutput)
}

// RuleEngineRuleSubRuleRuleArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleArray and RuleEngineRuleSubRuleRuleArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleArray{ RuleEngineRuleSubRuleRuleArgs{...} }
type RuleEngineRuleSubRuleRuleArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleArrayOutput() RuleEngineRuleSubRuleRuleArrayOutput
	ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleArrayOutput
}

type RuleEngineRuleSubRuleRuleArray []RuleEngineRuleSubRuleRuleInput

func (RuleEngineRuleSubRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleArray) ToRuleEngineRuleSubRuleRuleArrayOutput() RuleEngineRuleSubRuleRuleArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleArray) ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleArrayOutput)
}

type RuleEngineRuleSubRuleRuleOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOutput) ToRuleEngineRuleSubRuleRuleOutput() RuleEngineRuleSubRuleRuleOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOutput) ToRuleEngineRuleSubRuleRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOutput {
	return o
}

// Feature to be executed.
func (o RuleEngineRuleSubRuleRuleOutput) Actions() RuleEngineRuleSubRuleRuleActionArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRule) []RuleEngineRuleSubRuleRuleAction { return v.Actions }).(RuleEngineRuleSubRuleRuleActionArrayOutput)
}

// OR Conditions list of the rule. Rule would be triggered if any of the condition is true.
func (o RuleEngineRuleSubRuleRuleOutput) Ors() RuleEngineRuleSubRuleRuleOrArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRule) []RuleEngineRuleSubRuleRuleOr { return v.Ors }).(RuleEngineRuleSubRuleRuleOrArrayOutput)
}

type RuleEngineRuleSubRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleArrayOutput) ToRuleEngineRuleSubRuleRuleArrayOutput() RuleEngineRuleSubRuleRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleArrayOutput) ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRule {
		return vs[0].([]RuleEngineRuleSubRuleRule)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleOutput)
}

type RuleEngineRuleSubRuleRuleAction struct {
	// Feature operation with a status code. Features of this type include:
	CodeAction *RuleEngineRuleSubRuleRuleActionCodeAction `pulumi:"codeAction"`
	// Common operation. Values:
	NormalAction *RuleEngineRuleSubRuleRuleActionNormalAction `pulumi:"normalAction"`
	// Feature operation with a request/response header. Features of this type include:
	RewriteAction *RuleEngineRuleSubRuleRuleActionRewriteAction `pulumi:"rewriteAction"`
}

// RuleEngineRuleSubRuleRuleActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionArgs and RuleEngineRuleSubRuleRuleActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionArgs{...}
type RuleEngineRuleSubRuleRuleActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionOutput() RuleEngineRuleSubRuleRuleActionOutput
	ToRuleEngineRuleSubRuleRuleActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionOutput
}

type RuleEngineRuleSubRuleRuleActionArgs struct {
	// Feature operation with a status code. Features of this type include:
	CodeAction RuleEngineRuleSubRuleRuleActionCodeActionPtrInput `pulumi:"codeAction"`
	// Common operation. Values:
	NormalAction RuleEngineRuleSubRuleRuleActionNormalActionPtrInput `pulumi:"normalAction"`
	// Feature operation with a request/response header. Features of this type include:
	RewriteAction RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput `pulumi:"rewriteAction"`
}

func (RuleEngineRuleSubRuleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionArgs) ToRuleEngineRuleSubRuleRuleActionOutput() RuleEngineRuleSubRuleRuleActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionArgs) ToRuleEngineRuleSubRuleRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionOutput)
}

// RuleEngineRuleSubRuleRuleActionArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionArray and RuleEngineRuleSubRuleRuleActionArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionArray{ RuleEngineRuleSubRuleRuleActionArgs{...} }
type RuleEngineRuleSubRuleRuleActionArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionArrayOutput() RuleEngineRuleSubRuleRuleActionArrayOutput
	ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionArrayOutput
}

type RuleEngineRuleSubRuleRuleActionArray []RuleEngineRuleSubRuleRuleActionInput

func (RuleEngineRuleSubRuleRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionArray) ToRuleEngineRuleSubRuleRuleActionArrayOutput() RuleEngineRuleSubRuleRuleActionArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionArray) ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionOutput) ToRuleEngineRuleSubRuleRuleActionOutput() RuleEngineRuleSubRuleRuleActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionOutput) ToRuleEngineRuleSubRuleRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionOutput {
	return o
}

// Feature operation with a status code. Features of this type include:
func (o RuleEngineRuleSubRuleRuleActionOutput) CodeAction() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleAction) *RuleEngineRuleSubRuleRuleActionCodeAction {
		return v.CodeAction
	}).(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput)
}

// Common operation. Values:
func (o RuleEngineRuleSubRuleRuleActionOutput) NormalAction() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleAction) *RuleEngineRuleSubRuleRuleActionNormalAction {
		return v.NormalAction
	}).(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput)
}

// Feature operation with a request/response header. Features of this type include:
func (o RuleEngineRuleSubRuleRuleActionOutput) RewriteAction() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleAction) *RuleEngineRuleSubRuleRuleActionRewriteAction {
		return v.RewriteAction
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionArrayOutput) ToRuleEngineRuleSubRuleRuleActionArrayOutput() RuleEngineRuleSubRuleRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionArrayOutput) ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleAction {
		return vs[0].([]RuleEngineRuleSubRuleRuleAction)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeAction struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action string `pulumi:"action"`
	// Operation parameter.
	Parameters []RuleEngineRuleSubRuleRuleActionCodeActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleSubRuleRuleActionCodeActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionArgs and RuleEngineRuleSubRuleRuleActionCodeActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionCodeActionArgs{...}
type RuleEngineRuleSubRuleRuleActionCodeActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionOutput() RuleEngineRuleSubRuleRuleActionCodeActionOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionOutput
}

type RuleEngineRuleSubRuleRuleActionCodeActionArgs struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action pulumi.StringInput `pulumi:"action"`
	// Operation parameter.
	Parameters RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleSubRuleRuleActionCodeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionOutput() RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionOutput)
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionOutput).ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleSubRuleRuleActionCodeActionPtrInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionArgs, RuleEngineRuleSubRuleRuleActionCodeActionPtr and RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionPtrInput` via:
//
//	        RuleEngineRuleSubRuleRuleActionCodeActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleSubRuleRuleActionCodeActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput
}

type ruleEngineRuleSubRuleRuleActionCodeActionPtrType RuleEngineRuleSubRuleRuleActionCodeActionArgs

func RuleEngineRuleSubRuleRuleActionCodeActionPtr(v *RuleEngineRuleSubRuleRuleActionCodeActionArgs) RuleEngineRuleSubRuleRuleActionCodeActionPtrInput {
	return (*ruleEngineRuleSubRuleRuleActionCodeActionPtrType)(v)
}

func (*ruleEngineRuleSubRuleRuleActionCodeActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (i *ruleEngineRuleSubRuleRuleActionCodeActionPtrType) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleSubRuleRuleActionCodeActionPtrType) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionOutput() RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o.ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleSubRuleRuleActionCodeAction) *RuleEngineRuleSubRuleRuleActionCodeAction {
		return &v
	}).(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeAction) string { return v.Action }).(pulumi.StringOutput)
}

// Operation parameter.
func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) Parameters() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeAction) []RuleEngineRuleSubRuleRuleActionCodeActionParameter {
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) Elem() RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionCodeAction) RuleEngineRuleSubRuleRuleActionCodeAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleSubRuleRuleActionCodeAction
		return ret
	}).(RuleEngineRuleSubRuleRuleActionCodeActionOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionCodeAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Operation parameter.
func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) Parameters() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionCodeAction) []RuleEngineRuleSubRuleRuleActionCodeActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameter struct {
	// Parameter name.
	Name string `pulumi:"name"`
	// The status code.
	StatusCode int `pulumi:"statusCode"`
	// Parameter value.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleActionCodeActionParameterInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs and RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionParameterInput` via:
//
//	RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs{...}
type RuleEngineRuleSubRuleRuleActionCodeActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs struct {
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// The status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
	// Parameter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput)
}

// RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionParameterArray and RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionCodeActionParameterArray{ RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs{...} }
type RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterArray []RuleEngineRuleSubRuleRuleActionCodeActionParameterInput

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArray) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArray) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return o
}

// Parameter name.
func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The status code.
func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeActionParameter) int { return v.StatusCode }).(pulumi.IntOutput)
}

// Parameter value.
func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleActionCodeActionParameter {
		return vs[0].([]RuleEngineRuleSubRuleRuleActionCodeActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalAction struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action string `pulumi:"action"`
	// Parameter.
	Parameters []RuleEngineRuleSubRuleRuleActionNormalActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleSubRuleRuleActionNormalActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionArgs and RuleEngineRuleSubRuleRuleActionNormalActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionNormalActionArgs{...}
type RuleEngineRuleSubRuleRuleActionNormalActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionOutput() RuleEngineRuleSubRuleRuleActionNormalActionOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionOutput
}

type RuleEngineRuleSubRuleRuleActionNormalActionArgs struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action pulumi.StringInput `pulumi:"action"`
	// Parameter.
	Parameters RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleSubRuleRuleActionNormalActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionOutput() RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionOutput)
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionOutput).ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleSubRuleRuleActionNormalActionPtrInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionArgs, RuleEngineRuleSubRuleRuleActionNormalActionPtr and RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionPtrInput` via:
//
//	        RuleEngineRuleSubRuleRuleActionNormalActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleSubRuleRuleActionNormalActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput
}

type ruleEngineRuleSubRuleRuleActionNormalActionPtrType RuleEngineRuleSubRuleRuleActionNormalActionArgs

func RuleEngineRuleSubRuleRuleActionNormalActionPtr(v *RuleEngineRuleSubRuleRuleActionNormalActionArgs) RuleEngineRuleSubRuleRuleActionNormalActionPtrInput {
	return (*ruleEngineRuleSubRuleRuleActionNormalActionPtrType)(v)
}

func (*ruleEngineRuleSubRuleRuleActionNormalActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (i *ruleEngineRuleSubRuleRuleActionNormalActionPtrType) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleSubRuleRuleActionNormalActionPtrType) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionOutput() RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o.ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleSubRuleRuleActionNormalAction) *RuleEngineRuleSubRuleRuleActionNormalAction {
		return &v
	}).(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalAction) string { return v.Action }).(pulumi.StringOutput)
}

// Parameter.
func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) Parameters() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalAction) []RuleEngineRuleSubRuleRuleActionNormalActionParameter {
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) Elem() RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionNormalAction) RuleEngineRuleSubRuleRuleActionNormalAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleSubRuleRuleActionNormalAction
		return ret
	}).(RuleEngineRuleSubRuleRuleActionNormalActionOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionNormalAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Parameter.
func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) Parameters() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionNormalAction) []RuleEngineRuleSubRuleRuleActionNormalActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameter struct {
	// Parameter name.
	Name string `pulumi:"name"`
	// Parameter value.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleActionNormalActionParameterInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs and RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionParameterInput` via:
//
//	RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs{...}
type RuleEngineRuleSubRuleRuleActionNormalActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs struct {
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput)
}

// RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionParameterArray and RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionNormalActionParameterArray{ RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs{...} }
type RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterArray []RuleEngineRuleSubRuleRuleActionNormalActionParameterInput

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArray) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArray) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return o
}

// Parameter name.
func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Parameter value.
func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleActionNormalActionParameter {
		return vs[0].([]RuleEngineRuleSubRuleRuleActionNormalActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteAction struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action string `pulumi:"action"`
	// Parameter.
	Parameters []RuleEngineRuleSubRuleRuleActionRewriteActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleSubRuleRuleActionRewriteActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionArgs and RuleEngineRuleSubRuleRuleActionRewriteActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionRewriteActionArgs{...}
type RuleEngineRuleSubRuleRuleActionRewriteActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionOutput() RuleEngineRuleSubRuleRuleActionRewriteActionOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionOutput
}

type RuleEngineRuleSubRuleRuleActionRewriteActionArgs struct {
	// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
	Action pulumi.StringInput `pulumi:"action"`
	// Parameter.
	Parameters RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutput() RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionOutput)
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionOutput).ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionArgs, RuleEngineRuleSubRuleRuleActionRewriteActionPtr and RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput` via:
//
//	        RuleEngineRuleSubRuleRuleActionRewriteActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput
}

type ruleEngineRuleSubRuleRuleActionRewriteActionPtrType RuleEngineRuleSubRuleRuleActionRewriteActionArgs

func RuleEngineRuleSubRuleRuleActionRewriteActionPtr(v *RuleEngineRuleSubRuleRuleActionRewriteActionArgs) RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput {
	return (*ruleEngineRuleSubRuleRuleActionRewriteActionPtrType)(v)
}

func (*ruleEngineRuleSubRuleRuleActionRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (i *ruleEngineRuleSubRuleRuleActionRewriteActionPtrType) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleSubRuleRuleActionRewriteActionPtrType) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutput() RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o.ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleSubRuleRuleActionRewriteAction) *RuleEngineRuleSubRuleRuleActionRewriteAction {
		return &v
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteAction) string { return v.Action }).(pulumi.StringOutput)
}

// Parameter.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) Parameters() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteAction) []RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) Elem() RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionRewriteAction) RuleEngineRuleSubRuleRuleActionRewriteAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleSubRuleRuleActionRewriteAction
		return ret
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionOutput)
}

// Feature name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the feature name.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Parameter.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) Parameters() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionRewriteAction) []RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameter struct {
	// Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
	// - add: Add the HTTP header.
	// - set: Rewrite the HTTP header.
	// - del: Delete the HTTP header.
	Action string `pulumi:"action"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Parameter value.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs and RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput` via:
//
//	RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs{...}
type RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs struct {
	// Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
	// - add: Add the HTTP header.
	// - set: Rewrite the HTTP header.
	// - del: Delete the HTTP header.
	Action pulumi.StringInput `pulumi:"action"`
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput)
}

// RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray and RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray{ RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs{...} }
type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray []RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return o
}

// Feature parameter name. You can call the [DescribeRulesSetting](https://tcloud4api.woa.com/document/product/1657/79433?!preview&!document=1) API to view the requirements for entering the parameter name, which has three values:
// - add: Add the HTTP header.
// - set: Rewrite the HTTP header.
// - del: Delete the HTTP header.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteActionParameter) string { return v.Action }).(pulumi.StringOutput)
}

// Parameter name.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Parameter value.
func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
		return vs[0].([]RuleEngineRuleSubRuleRuleActionRewriteActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput)
}

type RuleEngineRuleSubRuleRuleOr struct {
	// Rule engine condition. This condition will be considered met if all items in the array are met.
	Ands []RuleEngineRuleSubRuleRuleOrAnd `pulumi:"ands"`
}

// RuleEngineRuleSubRuleRuleOrInput is an input type that accepts RuleEngineRuleSubRuleRuleOrArgs and RuleEngineRuleSubRuleRuleOrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrInput` via:
//
//	RuleEngineRuleSubRuleRuleOrArgs{...}
type RuleEngineRuleSubRuleRuleOrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrOutput() RuleEngineRuleSubRuleRuleOrOutput
	ToRuleEngineRuleSubRuleRuleOrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrOutput
}

type RuleEngineRuleSubRuleRuleOrArgs struct {
	// Rule engine condition. This condition will be considered met if all items in the array are met.
	Ands RuleEngineRuleSubRuleRuleOrAndArrayInput `pulumi:"ands"`
}

func (RuleEngineRuleSubRuleRuleOrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrArgs) ToRuleEngineRuleSubRuleRuleOrOutput() RuleEngineRuleSubRuleRuleOrOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrArgs) ToRuleEngineRuleSubRuleRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrOutput)
}

// RuleEngineRuleSubRuleRuleOrArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleOrArray and RuleEngineRuleSubRuleRuleOrArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleOrArray{ RuleEngineRuleSubRuleRuleOrArgs{...} }
type RuleEngineRuleSubRuleRuleOrArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrArrayOutput() RuleEngineRuleSubRuleRuleOrArrayOutput
	ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrArrayOutput
}

type RuleEngineRuleSubRuleRuleOrArray []RuleEngineRuleSubRuleRuleOrInput

func (RuleEngineRuleSubRuleRuleOrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrArray) ToRuleEngineRuleSubRuleRuleOrArrayOutput() RuleEngineRuleSubRuleRuleOrArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrArray) ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrOutput) ToRuleEngineRuleSubRuleRuleOrOutput() RuleEngineRuleSubRuleRuleOrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrOutput) ToRuleEngineRuleSubRuleRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrOutput {
	return o
}

// Rule engine condition. This condition will be considered met if all items in the array are met.
func (o RuleEngineRuleSubRuleRuleOrOutput) Ands() RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOr) []RuleEngineRuleSubRuleRuleOrAnd { return v.Ands }).(RuleEngineRuleSubRuleRuleOrAndArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrArrayOutput) ToRuleEngineRuleSubRuleRuleOrArrayOutput() RuleEngineRuleSubRuleRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrArrayOutput) ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleOrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleOr {
		return vs[0].([]RuleEngineRuleSubRuleRuleOr)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleOrOutput)
}

type RuleEngineRuleSubRuleRuleOrAnd struct {
	// Whether the parameter value is case insensitive. Default value: false.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
	Name *string `pulumi:"name"`
	// Operator. Valid values:
	Operator string `pulumi:"operator"`
	// The match type. Values:
	Target string `pulumi:"target"`
	// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
	// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
	// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
	// - When `Target=all`, it indicates any site request.
	// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
	// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
	// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
	// - When `Target=client_country`, enter the ISO-3166 country/region code.
	// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
	// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
	Values []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleOrAndInput is an input type that accepts RuleEngineRuleSubRuleRuleOrAndArgs and RuleEngineRuleSubRuleRuleOrAndOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrAndInput` via:
//
//	RuleEngineRuleSubRuleRuleOrAndArgs{...}
type RuleEngineRuleSubRuleRuleOrAndInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrAndOutput() RuleEngineRuleSubRuleRuleOrAndOutput
	ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrAndOutput
}

type RuleEngineRuleSubRuleRuleOrAndArgs struct {
	// Whether the parameter value is case insensitive. Default value: false.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Operator. Valid values:
	Operator pulumi.StringInput `pulumi:"operator"`
	// The match type. Values:
	Target pulumi.StringInput `pulumi:"target"`
	// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
	// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
	// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
	// - When `Target=all`, it indicates any site request.
	// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
	// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
	// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
	// - When `Target=client_country`, enter the ISO-3166 country/region code.
	// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
	// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleOrAndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrAndArgs) ToRuleEngineRuleSubRuleRuleOrAndOutput() RuleEngineRuleSubRuleRuleOrAndOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrAndArgs) ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrAndOutput)
}

// RuleEngineRuleSubRuleRuleOrAndArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleOrAndArray and RuleEngineRuleSubRuleRuleOrAndArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrAndArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleOrAndArray{ RuleEngineRuleSubRuleRuleOrAndArgs{...} }
type RuleEngineRuleSubRuleRuleOrAndArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrAndArrayOutput() RuleEngineRuleSubRuleRuleOrAndArrayOutput
	ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrAndArrayOutput
}

type RuleEngineRuleSubRuleRuleOrAndArray []RuleEngineRuleSubRuleRuleOrAndInput

func (RuleEngineRuleSubRuleRuleOrAndArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrAndArray) ToRuleEngineRuleSubRuleRuleOrAndArrayOutput() RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrAndArray) ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrAndArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrAndOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrAndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) ToRuleEngineRuleSubRuleRuleOrAndOutput() RuleEngineRuleSubRuleRuleOrAndOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndOutput {
	return o
}

// Whether the parameter value is case insensitive. Default value: false.
func (o RuleEngineRuleSubRuleRuleOrAndOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// The parameter name of the match type. This field is required only when `Target=query_string/request_header`.
func (o RuleEngineRuleSubRuleRuleOrAndOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator. Valid values:
func (o RuleEngineRuleSubRuleRuleOrAndOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) string { return v.Operator }).(pulumi.StringOutput)
}

// The match type. Values:
func (o RuleEngineRuleSubRuleRuleOrAndOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) string { return v.Target }).(pulumi.StringOutput)
}

// The parameter value of the match type. It can be an empty string only when `Target=query string/request header` and `Operator=exist/notexist`.
// - When `Target=extension`, enter the file extension, such as "jpg" and "txt".
// - When `Target=filename`, enter the file name, such as "foo" in "foo.jpg".
// - When `Target=all`, it indicates any site request.
// - When `Target=host`, enter the host under the current site, such as "www.maxx55.com".
// - When `Target=url`, enter the partial URL path under the current site, such as "/example".
// - When `Target=full_url`, enter the complete URL under the current site. It must contain the HTTP protocol, host, and path, such as "https://www.maxx55.cn/example".
// - When `Target=client_country`, enter the ISO-3166 country/region code.
// - When `Target=query_string`, enter the value of the query string, such as "cn" and "1" in "lang=cn&version=1".
// - When `Target=request_header`, enter the HTTP request header value, such as "zh-CN,zh;q=0.9" in the "Accept-Language:zh-CN,zh;q=0.9" header.
func (o RuleEngineRuleSubRuleRuleOrAndOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrAndArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrAndArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrAndArrayOutput) ToRuleEngineRuleSubRuleRuleOrAndArrayOutput() RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndArrayOutput) ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleOrAndOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleOrAnd {
		return vs[0].([]RuleEngineRuleSubRuleRuleOrAnd)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleOrAndOutput)
}

type SecurityIpGroupIpGroup struct {
	// IP group content. Only supports IP and IP mask.
	Contents []string `pulumi:"contents"`
	// Group ID.
	GroupId *int `pulumi:"groupId"`
	// Group name.
	Name string `pulumi:"name"`
}

// SecurityIpGroupIpGroupInput is an input type that accepts SecurityIpGroupIpGroupArgs and SecurityIpGroupIpGroupOutput values.
// You can construct a concrete instance of `SecurityIpGroupIpGroupInput` via:
//
//	SecurityIpGroupIpGroupArgs{...}
type SecurityIpGroupIpGroupInput interface {
	pulumi.Input

	ToSecurityIpGroupIpGroupOutput() SecurityIpGroupIpGroupOutput
	ToSecurityIpGroupIpGroupOutputWithContext(context.Context) SecurityIpGroupIpGroupOutput
}

type SecurityIpGroupIpGroupArgs struct {
	// IP group content. Only supports IP and IP mask.
	Contents pulumi.StringArrayInput `pulumi:"contents"`
	// Group ID.
	GroupId pulumi.IntPtrInput `pulumi:"groupId"`
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SecurityIpGroupIpGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityIpGroupIpGroup)(nil)).Elem()
}

func (i SecurityIpGroupIpGroupArgs) ToSecurityIpGroupIpGroupOutput() SecurityIpGroupIpGroupOutput {
	return i.ToSecurityIpGroupIpGroupOutputWithContext(context.Background())
}

func (i SecurityIpGroupIpGroupArgs) ToSecurityIpGroupIpGroupOutputWithContext(ctx context.Context) SecurityIpGroupIpGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityIpGroupIpGroupOutput)
}

func (i SecurityIpGroupIpGroupArgs) ToSecurityIpGroupIpGroupPtrOutput() SecurityIpGroupIpGroupPtrOutput {
	return i.ToSecurityIpGroupIpGroupPtrOutputWithContext(context.Background())
}

func (i SecurityIpGroupIpGroupArgs) ToSecurityIpGroupIpGroupPtrOutputWithContext(ctx context.Context) SecurityIpGroupIpGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityIpGroupIpGroupOutput).ToSecurityIpGroupIpGroupPtrOutputWithContext(ctx)
}

// SecurityIpGroupIpGroupPtrInput is an input type that accepts SecurityIpGroupIpGroupArgs, SecurityIpGroupIpGroupPtr and SecurityIpGroupIpGroupPtrOutput values.
// You can construct a concrete instance of `SecurityIpGroupIpGroupPtrInput` via:
//
//	        SecurityIpGroupIpGroupArgs{...}
//
//	or:
//
//	        nil
type SecurityIpGroupIpGroupPtrInput interface {
	pulumi.Input

	ToSecurityIpGroupIpGroupPtrOutput() SecurityIpGroupIpGroupPtrOutput
	ToSecurityIpGroupIpGroupPtrOutputWithContext(context.Context) SecurityIpGroupIpGroupPtrOutput
}

type securityIpGroupIpGroupPtrType SecurityIpGroupIpGroupArgs

func SecurityIpGroupIpGroupPtr(v *SecurityIpGroupIpGroupArgs) SecurityIpGroupIpGroupPtrInput {
	return (*securityIpGroupIpGroupPtrType)(v)
}

func (*securityIpGroupIpGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityIpGroupIpGroup)(nil)).Elem()
}

func (i *securityIpGroupIpGroupPtrType) ToSecurityIpGroupIpGroupPtrOutput() SecurityIpGroupIpGroupPtrOutput {
	return i.ToSecurityIpGroupIpGroupPtrOutputWithContext(context.Background())
}

func (i *securityIpGroupIpGroupPtrType) ToSecurityIpGroupIpGroupPtrOutputWithContext(ctx context.Context) SecurityIpGroupIpGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityIpGroupIpGroupPtrOutput)
}

type SecurityIpGroupIpGroupOutput struct{ *pulumi.OutputState }

func (SecurityIpGroupIpGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityIpGroupIpGroup)(nil)).Elem()
}

func (o SecurityIpGroupIpGroupOutput) ToSecurityIpGroupIpGroupOutput() SecurityIpGroupIpGroupOutput {
	return o
}

func (o SecurityIpGroupIpGroupOutput) ToSecurityIpGroupIpGroupOutputWithContext(ctx context.Context) SecurityIpGroupIpGroupOutput {
	return o
}

func (o SecurityIpGroupIpGroupOutput) ToSecurityIpGroupIpGroupPtrOutput() SecurityIpGroupIpGroupPtrOutput {
	return o.ToSecurityIpGroupIpGroupPtrOutputWithContext(context.Background())
}

func (o SecurityIpGroupIpGroupOutput) ToSecurityIpGroupIpGroupPtrOutputWithContext(ctx context.Context) SecurityIpGroupIpGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityIpGroupIpGroup) *SecurityIpGroupIpGroup {
		return &v
	}).(SecurityIpGroupIpGroupPtrOutput)
}

// IP group content. Only supports IP and IP mask.
func (o SecurityIpGroupIpGroupOutput) Contents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityIpGroupIpGroup) []string { return v.Contents }).(pulumi.StringArrayOutput)
}

// Group ID.
func (o SecurityIpGroupIpGroupOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityIpGroupIpGroup) *int { return v.GroupId }).(pulumi.IntPtrOutput)
}

// Group name.
func (o SecurityIpGroupIpGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityIpGroupIpGroup) string { return v.Name }).(pulumi.StringOutput)
}

type SecurityIpGroupIpGroupPtrOutput struct{ *pulumi.OutputState }

func (SecurityIpGroupIpGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityIpGroupIpGroup)(nil)).Elem()
}

func (o SecurityIpGroupIpGroupPtrOutput) ToSecurityIpGroupIpGroupPtrOutput() SecurityIpGroupIpGroupPtrOutput {
	return o
}

func (o SecurityIpGroupIpGroupPtrOutput) ToSecurityIpGroupIpGroupPtrOutputWithContext(ctx context.Context) SecurityIpGroupIpGroupPtrOutput {
	return o
}

func (o SecurityIpGroupIpGroupPtrOutput) Elem() SecurityIpGroupIpGroupOutput {
	return o.ApplyT(func(v *SecurityIpGroupIpGroup) SecurityIpGroupIpGroup {
		if v != nil {
			return *v
		}
		var ret SecurityIpGroupIpGroup
		return ret
	}).(SecurityIpGroupIpGroupOutput)
}

// IP group content. Only supports IP and IP mask.
func (o SecurityIpGroupIpGroupPtrOutput) Contents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityIpGroupIpGroup) []string {
		if v == nil {
			return nil
		}
		return v.Contents
	}).(pulumi.StringArrayOutput)
}

// Group ID.
func (o SecurityIpGroupIpGroupPtrOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityIpGroupIpGroup) *int {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.IntPtrOutput)
}

// Group name.
func (o SecurityIpGroupIpGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityIpGroupIpGroup) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ZoneOwnershipVerification struct {
	// CNAME access, using DNS to resolve the information required for authentication. For details, please refer to [Site/Domain Name Ownership Verification ](https://cloud.tencent.com/document/product/1552/70789#7af6ecf8-afca-4e35-8811-b5797ed1bde5). Note: This field may return null, indicating that no valid value can be obtained.
	DnsVerifications []ZoneOwnershipVerificationDnsVerification `pulumi:"dnsVerifications"`
}

// ZoneOwnershipVerificationInput is an input type that accepts ZoneOwnershipVerificationArgs and ZoneOwnershipVerificationOutput values.
// You can construct a concrete instance of `ZoneOwnershipVerificationInput` via:
//
//	ZoneOwnershipVerificationArgs{...}
type ZoneOwnershipVerificationInput interface {
	pulumi.Input

	ToZoneOwnershipVerificationOutput() ZoneOwnershipVerificationOutput
	ToZoneOwnershipVerificationOutputWithContext(context.Context) ZoneOwnershipVerificationOutput
}

type ZoneOwnershipVerificationArgs struct {
	// CNAME access, using DNS to resolve the information required for authentication. For details, please refer to [Site/Domain Name Ownership Verification ](https://cloud.tencent.com/document/product/1552/70789#7af6ecf8-afca-4e35-8811-b5797ed1bde5). Note: This field may return null, indicating that no valid value can be obtained.
	DnsVerifications ZoneOwnershipVerificationDnsVerificationArrayInput `pulumi:"dnsVerifications"`
}

func (ZoneOwnershipVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneOwnershipVerification)(nil)).Elem()
}

func (i ZoneOwnershipVerificationArgs) ToZoneOwnershipVerificationOutput() ZoneOwnershipVerificationOutput {
	return i.ToZoneOwnershipVerificationOutputWithContext(context.Background())
}

func (i ZoneOwnershipVerificationArgs) ToZoneOwnershipVerificationOutputWithContext(ctx context.Context) ZoneOwnershipVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneOwnershipVerificationOutput)
}

// ZoneOwnershipVerificationArrayInput is an input type that accepts ZoneOwnershipVerificationArray and ZoneOwnershipVerificationArrayOutput values.
// You can construct a concrete instance of `ZoneOwnershipVerificationArrayInput` via:
//
//	ZoneOwnershipVerificationArray{ ZoneOwnershipVerificationArgs{...} }
type ZoneOwnershipVerificationArrayInput interface {
	pulumi.Input

	ToZoneOwnershipVerificationArrayOutput() ZoneOwnershipVerificationArrayOutput
	ToZoneOwnershipVerificationArrayOutputWithContext(context.Context) ZoneOwnershipVerificationArrayOutput
}

type ZoneOwnershipVerificationArray []ZoneOwnershipVerificationInput

func (ZoneOwnershipVerificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneOwnershipVerification)(nil)).Elem()
}

func (i ZoneOwnershipVerificationArray) ToZoneOwnershipVerificationArrayOutput() ZoneOwnershipVerificationArrayOutput {
	return i.ToZoneOwnershipVerificationArrayOutputWithContext(context.Background())
}

func (i ZoneOwnershipVerificationArray) ToZoneOwnershipVerificationArrayOutputWithContext(ctx context.Context) ZoneOwnershipVerificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneOwnershipVerificationArrayOutput)
}

type ZoneOwnershipVerificationOutput struct{ *pulumi.OutputState }

func (ZoneOwnershipVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneOwnershipVerification)(nil)).Elem()
}

func (o ZoneOwnershipVerificationOutput) ToZoneOwnershipVerificationOutput() ZoneOwnershipVerificationOutput {
	return o
}

func (o ZoneOwnershipVerificationOutput) ToZoneOwnershipVerificationOutputWithContext(ctx context.Context) ZoneOwnershipVerificationOutput {
	return o
}

// CNAME access, using DNS to resolve the information required for authentication. For details, please refer to [Site/Domain Name Ownership Verification ](https://cloud.tencent.com/document/product/1552/70789#7af6ecf8-afca-4e35-8811-b5797ed1bde5). Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneOwnershipVerificationOutput) DnsVerifications() ZoneOwnershipVerificationDnsVerificationArrayOutput {
	return o.ApplyT(func(v ZoneOwnershipVerification) []ZoneOwnershipVerificationDnsVerification {
		return v.DnsVerifications
	}).(ZoneOwnershipVerificationDnsVerificationArrayOutput)
}

type ZoneOwnershipVerificationArrayOutput struct{ *pulumi.OutputState }

func (ZoneOwnershipVerificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneOwnershipVerification)(nil)).Elem()
}

func (o ZoneOwnershipVerificationArrayOutput) ToZoneOwnershipVerificationArrayOutput() ZoneOwnershipVerificationArrayOutput {
	return o
}

func (o ZoneOwnershipVerificationArrayOutput) ToZoneOwnershipVerificationArrayOutputWithContext(ctx context.Context) ZoneOwnershipVerificationArrayOutput {
	return o
}

func (o ZoneOwnershipVerificationArrayOutput) Index(i pulumi.IntInput) ZoneOwnershipVerificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneOwnershipVerification {
		return vs[0].([]ZoneOwnershipVerification)[vs[1].(int)]
	}).(ZoneOwnershipVerificationOutput)
}

type ZoneOwnershipVerificationDnsVerification struct {
	// Record type.
	RecordType *string `pulumi:"recordType"`
	// Record the value.
	RecordValue *string `pulumi:"recordValue"`
	// Host record.
	Subdomain *string `pulumi:"subdomain"`
}

// ZoneOwnershipVerificationDnsVerificationInput is an input type that accepts ZoneOwnershipVerificationDnsVerificationArgs and ZoneOwnershipVerificationDnsVerificationOutput values.
// You can construct a concrete instance of `ZoneOwnershipVerificationDnsVerificationInput` via:
//
//	ZoneOwnershipVerificationDnsVerificationArgs{...}
type ZoneOwnershipVerificationDnsVerificationInput interface {
	pulumi.Input

	ToZoneOwnershipVerificationDnsVerificationOutput() ZoneOwnershipVerificationDnsVerificationOutput
	ToZoneOwnershipVerificationDnsVerificationOutputWithContext(context.Context) ZoneOwnershipVerificationDnsVerificationOutput
}

type ZoneOwnershipVerificationDnsVerificationArgs struct {
	// Record type.
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
	// Record the value.
	RecordValue pulumi.StringPtrInput `pulumi:"recordValue"`
	// Host record.
	Subdomain pulumi.StringPtrInput `pulumi:"subdomain"`
}

func (ZoneOwnershipVerificationDnsVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneOwnershipVerificationDnsVerification)(nil)).Elem()
}

func (i ZoneOwnershipVerificationDnsVerificationArgs) ToZoneOwnershipVerificationDnsVerificationOutput() ZoneOwnershipVerificationDnsVerificationOutput {
	return i.ToZoneOwnershipVerificationDnsVerificationOutputWithContext(context.Background())
}

func (i ZoneOwnershipVerificationDnsVerificationArgs) ToZoneOwnershipVerificationDnsVerificationOutputWithContext(ctx context.Context) ZoneOwnershipVerificationDnsVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneOwnershipVerificationDnsVerificationOutput)
}

// ZoneOwnershipVerificationDnsVerificationArrayInput is an input type that accepts ZoneOwnershipVerificationDnsVerificationArray and ZoneOwnershipVerificationDnsVerificationArrayOutput values.
// You can construct a concrete instance of `ZoneOwnershipVerificationDnsVerificationArrayInput` via:
//
//	ZoneOwnershipVerificationDnsVerificationArray{ ZoneOwnershipVerificationDnsVerificationArgs{...} }
type ZoneOwnershipVerificationDnsVerificationArrayInput interface {
	pulumi.Input

	ToZoneOwnershipVerificationDnsVerificationArrayOutput() ZoneOwnershipVerificationDnsVerificationArrayOutput
	ToZoneOwnershipVerificationDnsVerificationArrayOutputWithContext(context.Context) ZoneOwnershipVerificationDnsVerificationArrayOutput
}

type ZoneOwnershipVerificationDnsVerificationArray []ZoneOwnershipVerificationDnsVerificationInput

func (ZoneOwnershipVerificationDnsVerificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneOwnershipVerificationDnsVerification)(nil)).Elem()
}

func (i ZoneOwnershipVerificationDnsVerificationArray) ToZoneOwnershipVerificationDnsVerificationArrayOutput() ZoneOwnershipVerificationDnsVerificationArrayOutput {
	return i.ToZoneOwnershipVerificationDnsVerificationArrayOutputWithContext(context.Background())
}

func (i ZoneOwnershipVerificationDnsVerificationArray) ToZoneOwnershipVerificationDnsVerificationArrayOutputWithContext(ctx context.Context) ZoneOwnershipVerificationDnsVerificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneOwnershipVerificationDnsVerificationArrayOutput)
}

type ZoneOwnershipVerificationDnsVerificationOutput struct{ *pulumi.OutputState }

func (ZoneOwnershipVerificationDnsVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneOwnershipVerificationDnsVerification)(nil)).Elem()
}

func (o ZoneOwnershipVerificationDnsVerificationOutput) ToZoneOwnershipVerificationDnsVerificationOutput() ZoneOwnershipVerificationDnsVerificationOutput {
	return o
}

func (o ZoneOwnershipVerificationDnsVerificationOutput) ToZoneOwnershipVerificationDnsVerificationOutputWithContext(ctx context.Context) ZoneOwnershipVerificationDnsVerificationOutput {
	return o
}

// Record type.
func (o ZoneOwnershipVerificationDnsVerificationOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneOwnershipVerificationDnsVerification) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// Record the value.
func (o ZoneOwnershipVerificationDnsVerificationOutput) RecordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneOwnershipVerificationDnsVerification) *string { return v.RecordValue }).(pulumi.StringPtrOutput)
}

// Host record.
func (o ZoneOwnershipVerificationDnsVerificationOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneOwnershipVerificationDnsVerification) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

type ZoneOwnershipVerificationDnsVerificationArrayOutput struct{ *pulumi.OutputState }

func (ZoneOwnershipVerificationDnsVerificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneOwnershipVerificationDnsVerification)(nil)).Elem()
}

func (o ZoneOwnershipVerificationDnsVerificationArrayOutput) ToZoneOwnershipVerificationDnsVerificationArrayOutput() ZoneOwnershipVerificationDnsVerificationArrayOutput {
	return o
}

func (o ZoneOwnershipVerificationDnsVerificationArrayOutput) ToZoneOwnershipVerificationDnsVerificationArrayOutputWithContext(ctx context.Context) ZoneOwnershipVerificationDnsVerificationArrayOutput {
	return o
}

func (o ZoneOwnershipVerificationDnsVerificationArrayOutput) Index(i pulumi.IntInput) ZoneOwnershipVerificationDnsVerificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneOwnershipVerificationDnsVerification {
		return vs[0].([]ZoneOwnershipVerificationDnsVerification)[vs[1].(int)]
	}).(ZoneOwnershipVerificationDnsVerificationOutput)
}

type ZoneSettingCache struct {
	// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Cache *ZoneSettingCacheCache `pulumi:"cache"`
	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin *ZoneSettingCacheFollowOrigin `pulumi:"followOrigin"`
	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	NoCache *ZoneSettingCacheNoCache `pulumi:"noCache"`
}

// ZoneSettingCacheInput is an input type that accepts ZoneSettingCacheArgs and ZoneSettingCacheOutput values.
// You can construct a concrete instance of `ZoneSettingCacheInput` via:
//
//	ZoneSettingCacheArgs{...}
type ZoneSettingCacheInput interface {
	pulumi.Input

	ToZoneSettingCacheOutput() ZoneSettingCacheOutput
	ToZoneSettingCacheOutputWithContext(context.Context) ZoneSettingCacheOutput
}

type ZoneSettingCacheArgs struct {
	// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Cache ZoneSettingCacheCachePtrInput `pulumi:"cache"`
	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin ZoneSettingCacheFollowOriginPtrInput `pulumi:"followOrigin"`
	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	NoCache ZoneSettingCacheNoCachePtrInput `pulumi:"noCache"`
}

func (ZoneSettingCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCache)(nil)).Elem()
}

func (i ZoneSettingCacheArgs) ToZoneSettingCacheOutput() ZoneSettingCacheOutput {
	return i.ToZoneSettingCacheOutputWithContext(context.Background())
}

func (i ZoneSettingCacheArgs) ToZoneSettingCacheOutputWithContext(ctx context.Context) ZoneSettingCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheOutput)
}

func (i ZoneSettingCacheArgs) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return i.ToZoneSettingCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheArgs) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheOutput).ToZoneSettingCachePtrOutputWithContext(ctx)
}

// ZoneSettingCachePtrInput is an input type that accepts ZoneSettingCacheArgs, ZoneSettingCachePtr and ZoneSettingCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingCachePtrInput` via:
//
//	        ZoneSettingCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCachePtrInput interface {
	pulumi.Input

	ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput
	ToZoneSettingCachePtrOutputWithContext(context.Context) ZoneSettingCachePtrOutput
}

type zoneSettingCachePtrType ZoneSettingCacheArgs

func ZoneSettingCachePtr(v *ZoneSettingCacheArgs) ZoneSettingCachePtrInput {
	return (*zoneSettingCachePtrType)(v)
}

func (*zoneSettingCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCache)(nil)).Elem()
}

func (i *zoneSettingCachePtrType) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return i.ToZoneSettingCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingCachePtrType) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePtrOutput)
}

type ZoneSettingCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCache)(nil)).Elem()
}

func (o ZoneSettingCacheOutput) ToZoneSettingCacheOutput() ZoneSettingCacheOutput {
	return o
}

func (o ZoneSettingCacheOutput) ToZoneSettingCacheOutputWithContext(ctx context.Context) ZoneSettingCacheOutput {
	return o
}

func (o ZoneSettingCacheOutput) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return o.ToZoneSettingCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheOutput) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCache) *ZoneSettingCache {
		return &v
	}).(ZoneSettingCachePtrOutput)
}

// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheOutput) Cache() ZoneSettingCacheCachePtrOutput {
	return o.ApplyT(func(v ZoneSettingCache) *ZoneSettingCacheCache { return v.Cache }).(ZoneSettingCacheCachePtrOutput)
}

// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheOutput) FollowOrigin() ZoneSettingCacheFollowOriginPtrOutput {
	return o.ApplyT(func(v ZoneSettingCache) *ZoneSettingCacheFollowOrigin { return v.FollowOrigin }).(ZoneSettingCacheFollowOriginPtrOutput)
}

// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheOutput) NoCache() ZoneSettingCacheNoCachePtrOutput {
	return o.ApplyT(func(v ZoneSettingCache) *ZoneSettingCacheNoCache { return v.NoCache }).(ZoneSettingCacheNoCachePtrOutput)
}

type ZoneSettingCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCache)(nil)).Elem()
}

func (o ZoneSettingCachePtrOutput) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return o
}

func (o ZoneSettingCachePtrOutput) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return o
}

func (o ZoneSettingCachePtrOutput) Elem() ZoneSettingCacheOutput {
	return o.ApplyT(func(v *ZoneSettingCache) ZoneSettingCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCache
		return ret
	}).(ZoneSettingCacheOutput)
}

// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCachePtrOutput) Cache() ZoneSettingCacheCachePtrOutput {
	return o.ApplyT(func(v *ZoneSettingCache) *ZoneSettingCacheCache {
		if v == nil {
			return nil
		}
		return v.Cache
	}).(ZoneSettingCacheCachePtrOutput)
}

// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCachePtrOutput) FollowOrigin() ZoneSettingCacheFollowOriginPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCache) *ZoneSettingCacheFollowOrigin {
		if v == nil {
			return nil
		}
		return v.FollowOrigin
	}).(ZoneSettingCacheFollowOriginPtrOutput)
}

// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCachePtrOutput) NoCache() ZoneSettingCacheNoCachePtrOutput {
	return o.ApplyT(func(v *ZoneSettingCache) *ZoneSettingCacheNoCache {
		if v == nil {
			return nil
		}
		return v.NoCache
	}).(ZoneSettingCacheNoCachePtrOutput)
}

type ZoneSettingCacheCache struct {
	// Cache expiration time settings.
	// Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	CacheTime *int `pulumi:"cacheTime"`
	// Cache configuration switch.
	Switch *string `pulumi:"switch"`
}

// ZoneSettingCacheCacheInput is an input type that accepts ZoneSettingCacheCacheArgs and ZoneSettingCacheCacheOutput values.
// You can construct a concrete instance of `ZoneSettingCacheCacheInput` via:
//
//	ZoneSettingCacheCacheArgs{...}
type ZoneSettingCacheCacheInput interface {
	pulumi.Input

	ToZoneSettingCacheCacheOutput() ZoneSettingCacheCacheOutput
	ToZoneSettingCacheCacheOutputWithContext(context.Context) ZoneSettingCacheCacheOutput
}

type ZoneSettingCacheCacheArgs struct {
	// Cache expiration time settings.
	// Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	CacheTime pulumi.IntPtrInput `pulumi:"cacheTime"`
	// Cache configuration switch.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (ZoneSettingCacheCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheCache)(nil)).Elem()
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCacheOutput() ZoneSettingCacheCacheOutput {
	return i.ToZoneSettingCacheCacheOutputWithContext(context.Background())
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCacheOutputWithContext(ctx context.Context) ZoneSettingCacheCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheCacheOutput)
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return i.ToZoneSettingCacheCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheCacheOutput).ToZoneSettingCacheCachePtrOutputWithContext(ctx)
}

// ZoneSettingCacheCachePtrInput is an input type that accepts ZoneSettingCacheCacheArgs, ZoneSettingCacheCachePtr and ZoneSettingCacheCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheCachePtrInput` via:
//
//	        ZoneSettingCacheCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheCachePtrInput interface {
	pulumi.Input

	ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput
	ToZoneSettingCacheCachePtrOutputWithContext(context.Context) ZoneSettingCacheCachePtrOutput
}

type zoneSettingCacheCachePtrType ZoneSettingCacheCacheArgs

func ZoneSettingCacheCachePtr(v *ZoneSettingCacheCacheArgs) ZoneSettingCacheCachePtrInput {
	return (*zoneSettingCacheCachePtrType)(v)
}

func (*zoneSettingCacheCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheCache)(nil)).Elem()
}

func (i *zoneSettingCacheCachePtrType) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return i.ToZoneSettingCacheCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheCachePtrType) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheCachePtrOutput)
}

type ZoneSettingCacheCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheCache)(nil)).Elem()
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCacheOutput() ZoneSettingCacheCacheOutput {
	return o
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCacheOutputWithContext(ctx context.Context) ZoneSettingCacheCacheOutput {
	return o
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return o.ToZoneSettingCacheCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheCache) *ZoneSettingCacheCache {
		return &v
	}).(ZoneSettingCacheCachePtrOutput)
}

// Cache expiration time settings.
// Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheCacheOutput) CacheTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheCache) *int { return v.CacheTime }).(pulumi.IntPtrOutput)
}

// Cache configuration switch.
func (o ZoneSettingCacheCacheOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheCache) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheCache)(nil)).Elem()
}

func (o ZoneSettingCacheCachePtrOutput) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return o
}

func (o ZoneSettingCacheCachePtrOutput) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return o
}

func (o ZoneSettingCacheCachePtrOutput) Elem() ZoneSettingCacheCacheOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) ZoneSettingCacheCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheCache
		return ret
	}).(ZoneSettingCacheCacheOutput)
}

// Cache expiration time settings.
// Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheCachePtrOutput) CacheTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) *int {
		if v == nil {
			return nil
		}
		return v.CacheTime
	}).(pulumi.IntPtrOutput)
}

// Cache configuration switch.
func (o ZoneSettingCacheCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheFollowOrigin struct {
	// Specifies whether to follow the origin server configuration.
	Switch *string `pulumi:"switch"`
}

// ZoneSettingCacheFollowOriginInput is an input type that accepts ZoneSettingCacheFollowOriginArgs and ZoneSettingCacheFollowOriginOutput values.
// You can construct a concrete instance of `ZoneSettingCacheFollowOriginInput` via:
//
//	ZoneSettingCacheFollowOriginArgs{...}
type ZoneSettingCacheFollowOriginInput interface {
	pulumi.Input

	ToZoneSettingCacheFollowOriginOutput() ZoneSettingCacheFollowOriginOutput
	ToZoneSettingCacheFollowOriginOutputWithContext(context.Context) ZoneSettingCacheFollowOriginOutput
}

type ZoneSettingCacheFollowOriginArgs struct {
	// Specifies whether to follow the origin server configuration.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (ZoneSettingCacheFollowOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginOutput() ZoneSettingCacheFollowOriginOutput {
	return i.ToZoneSettingCacheFollowOriginOutputWithContext(context.Background())
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheFollowOriginOutput)
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return i.ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheFollowOriginOutput).ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx)
}

// ZoneSettingCacheFollowOriginPtrInput is an input type that accepts ZoneSettingCacheFollowOriginArgs, ZoneSettingCacheFollowOriginPtr and ZoneSettingCacheFollowOriginPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheFollowOriginPtrInput` via:
//
//	        ZoneSettingCacheFollowOriginArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheFollowOriginPtrInput interface {
	pulumi.Input

	ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput
	ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Context) ZoneSettingCacheFollowOriginPtrOutput
}

type zoneSettingCacheFollowOriginPtrType ZoneSettingCacheFollowOriginArgs

func ZoneSettingCacheFollowOriginPtr(v *ZoneSettingCacheFollowOriginArgs) ZoneSettingCacheFollowOriginPtrInput {
	return (*zoneSettingCacheFollowOriginPtrType)(v)
}

func (*zoneSettingCacheFollowOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (i *zoneSettingCacheFollowOriginPtrType) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return i.ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheFollowOriginPtrType) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheFollowOriginPtrOutput)
}

type ZoneSettingCacheFollowOriginOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheFollowOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginOutput() ZoneSettingCacheFollowOriginOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return o.ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheFollowOrigin) *ZoneSettingCacheFollowOrigin {
		return &v
	}).(ZoneSettingCacheFollowOriginPtrOutput)
}

// Specifies whether to follow the origin server configuration.
func (o ZoneSettingCacheFollowOriginOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheFollowOrigin) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheFollowOriginPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheFollowOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (o ZoneSettingCacheFollowOriginPtrOutput) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginPtrOutput) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginPtrOutput) Elem() ZoneSettingCacheFollowOriginOutput {
	return o.ApplyT(func(v *ZoneSettingCacheFollowOrigin) ZoneSettingCacheFollowOrigin {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheFollowOrigin
		return ret
	}).(ZoneSettingCacheFollowOriginOutput)
}

// Specifies whether to follow the origin server configuration.
func (o ZoneSettingCacheFollowOriginPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheFollowOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheKey struct {
	// Specifies whether to enable full-path cache.
	FullUrlCache *string `pulumi:"fullUrlCache"`
	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	IgnoreCase *string `pulumi:"ignoreCase"`
	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	QueryString *ZoneSettingCacheKeyQueryString `pulumi:"queryString"`
}

// ZoneSettingCacheKeyInput is an input type that accepts ZoneSettingCacheKeyArgs and ZoneSettingCacheKeyOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyInput` via:
//
//	ZoneSettingCacheKeyArgs{...}
type ZoneSettingCacheKeyInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyOutput() ZoneSettingCacheKeyOutput
	ToZoneSettingCacheKeyOutputWithContext(context.Context) ZoneSettingCacheKeyOutput
}

type ZoneSettingCacheKeyArgs struct {
	// Specifies whether to enable full-path cache.
	FullUrlCache pulumi.StringPtrInput `pulumi:"fullUrlCache"`
	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	IgnoreCase pulumi.StringPtrInput `pulumi:"ignoreCase"`
	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	QueryString ZoneSettingCacheKeyQueryStringPtrInput `pulumi:"queryString"`
}

func (ZoneSettingCacheKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKey)(nil)).Elem()
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyOutput() ZoneSettingCacheKeyOutput {
	return i.ToZoneSettingCacheKeyOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyOutputWithContext(ctx context.Context) ZoneSettingCacheKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyOutput)
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return i.ToZoneSettingCacheKeyPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyOutput).ToZoneSettingCacheKeyPtrOutputWithContext(ctx)
}

// ZoneSettingCacheKeyPtrInput is an input type that accepts ZoneSettingCacheKeyArgs, ZoneSettingCacheKeyPtr and ZoneSettingCacheKeyPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyPtrInput` via:
//
//	        ZoneSettingCacheKeyArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheKeyPtrInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput
	ToZoneSettingCacheKeyPtrOutputWithContext(context.Context) ZoneSettingCacheKeyPtrOutput
}

type zoneSettingCacheKeyPtrType ZoneSettingCacheKeyArgs

func ZoneSettingCacheKeyPtr(v *ZoneSettingCacheKeyArgs) ZoneSettingCacheKeyPtrInput {
	return (*zoneSettingCacheKeyPtrType)(v)
}

func (*zoneSettingCacheKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKey)(nil)).Elem()
}

func (i *zoneSettingCacheKeyPtrType) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return i.ToZoneSettingCacheKeyPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheKeyPtrType) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyPtrOutput)
}

type ZoneSettingCacheKeyOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKey)(nil)).Elem()
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyOutput() ZoneSettingCacheKeyOutput {
	return o
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyOutputWithContext(ctx context.Context) ZoneSettingCacheKeyOutput {
	return o
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return o.ToZoneSettingCacheKeyPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheKey) *ZoneSettingCacheKey {
		return &v
	}).(ZoneSettingCacheKeyPtrOutput)
}

// Specifies whether to enable full-path cache.
func (o ZoneSettingCacheKeyOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKey) *string { return v.FullUrlCache }).(pulumi.StringPtrOutput)
}

// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheKeyOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKey) *string { return v.IgnoreCase }).(pulumi.StringPtrOutput)
}

// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheKeyOutput) QueryString() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKey) *ZoneSettingCacheKeyQueryString { return v.QueryString }).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

type ZoneSettingCacheKeyPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKey)(nil)).Elem()
}

func (o ZoneSettingCacheKeyPtrOutput) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyPtrOutput) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyPtrOutput) Elem() ZoneSettingCacheKeyOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) ZoneSettingCacheKey {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheKey
		return ret
	}).(ZoneSettingCacheKeyOutput)
}

// Specifies whether to enable full-path cache.
func (o ZoneSettingCacheKeyPtrOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) *string {
		if v == nil {
			return nil
		}
		return v.FullUrlCache
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheKeyPtrOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.StringPtrOutput)
}

// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheKeyPtrOutput) QueryString() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) *ZoneSettingCacheKeyQueryString {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

type ZoneSettingCacheKeyQueryString struct {
	// `includeCustom`: Include the specified query strings.
	Action *string `pulumi:"action"`
	// Whether to use QueryString as part of CacheKey.
	Switch string `pulumi:"switch"`
	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	Values []string `pulumi:"values"`
}

// ZoneSettingCacheKeyQueryStringInput is an input type that accepts ZoneSettingCacheKeyQueryStringArgs and ZoneSettingCacheKeyQueryStringOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyQueryStringInput` via:
//
//	ZoneSettingCacheKeyQueryStringArgs{...}
type ZoneSettingCacheKeyQueryStringInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyQueryStringOutput() ZoneSettingCacheKeyQueryStringOutput
	ToZoneSettingCacheKeyQueryStringOutputWithContext(context.Context) ZoneSettingCacheKeyQueryStringOutput
}

type ZoneSettingCacheKeyQueryStringArgs struct {
	// `includeCustom`: Include the specified query strings.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Whether to use QueryString as part of CacheKey.
	Switch pulumi.StringInput `pulumi:"switch"`
	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ZoneSettingCacheKeyQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringOutput() ZoneSettingCacheKeyQueryStringOutput {
	return i.ToZoneSettingCacheKeyQueryStringOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyQueryStringOutput)
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return i.ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyQueryStringOutput).ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx)
}

// ZoneSettingCacheKeyQueryStringPtrInput is an input type that accepts ZoneSettingCacheKeyQueryStringArgs, ZoneSettingCacheKeyQueryStringPtr and ZoneSettingCacheKeyQueryStringPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyQueryStringPtrInput` via:
//
//	        ZoneSettingCacheKeyQueryStringArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheKeyQueryStringPtrInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput
	ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Context) ZoneSettingCacheKeyQueryStringPtrOutput
}

type zoneSettingCacheKeyQueryStringPtrType ZoneSettingCacheKeyQueryStringArgs

func ZoneSettingCacheKeyQueryStringPtr(v *ZoneSettingCacheKeyQueryStringArgs) ZoneSettingCacheKeyQueryStringPtrInput {
	return (*zoneSettingCacheKeyQueryStringPtrType)(v)
}

func (*zoneSettingCacheKeyQueryStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (i *zoneSettingCacheKeyQueryStringPtrType) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return i.ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheKeyQueryStringPtrType) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

type ZoneSettingCacheKeyQueryStringOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringOutput() ZoneSettingCacheKeyQueryStringOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheKeyQueryString) *ZoneSettingCacheKeyQueryString {
		return &v
	}).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

// `includeCustom`: Include the specified query strings.
func (o ZoneSettingCacheKeyQueryStringOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKeyQueryString) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Whether to use QueryString as part of CacheKey.
func (o ZoneSettingCacheKeyQueryStringOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingCacheKeyQueryString) string { return v.Switch }).(pulumi.StringOutput)
}

// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheKeyQueryStringOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingCacheKeyQueryString) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ZoneSettingCacheKeyQueryStringPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyQueryStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) Elem() ZoneSettingCacheKeyQueryStringOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) ZoneSettingCacheKeyQueryString {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheKeyQueryString
		return ret
	}).(ZoneSettingCacheKeyQueryStringOutput)
}

// `includeCustom`: Include the specified query strings.
func (o ZoneSettingCacheKeyQueryStringPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Whether to use QueryString as part of CacheKey.
func (o ZoneSettingCacheKeyQueryStringPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingCacheKeyQueryStringPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ZoneSettingCacheNoCache struct {
	// Whether to cache the configuration.
	Switch *string `pulumi:"switch"`
}

// ZoneSettingCacheNoCacheInput is an input type that accepts ZoneSettingCacheNoCacheArgs and ZoneSettingCacheNoCacheOutput values.
// You can construct a concrete instance of `ZoneSettingCacheNoCacheInput` via:
//
//	ZoneSettingCacheNoCacheArgs{...}
type ZoneSettingCacheNoCacheInput interface {
	pulumi.Input

	ToZoneSettingCacheNoCacheOutput() ZoneSettingCacheNoCacheOutput
	ToZoneSettingCacheNoCacheOutputWithContext(context.Context) ZoneSettingCacheNoCacheOutput
}

type ZoneSettingCacheNoCacheArgs struct {
	// Whether to cache the configuration.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (ZoneSettingCacheNoCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheNoCache)(nil)).Elem()
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCacheOutput() ZoneSettingCacheNoCacheOutput {
	return i.ToZoneSettingCacheNoCacheOutputWithContext(context.Background())
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCacheOutputWithContext(ctx context.Context) ZoneSettingCacheNoCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheNoCacheOutput)
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return i.ToZoneSettingCacheNoCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheNoCacheOutput).ToZoneSettingCacheNoCachePtrOutputWithContext(ctx)
}

// ZoneSettingCacheNoCachePtrInput is an input type that accepts ZoneSettingCacheNoCacheArgs, ZoneSettingCacheNoCachePtr and ZoneSettingCacheNoCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheNoCachePtrInput` via:
//
//	        ZoneSettingCacheNoCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheNoCachePtrInput interface {
	pulumi.Input

	ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput
	ToZoneSettingCacheNoCachePtrOutputWithContext(context.Context) ZoneSettingCacheNoCachePtrOutput
}

type zoneSettingCacheNoCachePtrType ZoneSettingCacheNoCacheArgs

func ZoneSettingCacheNoCachePtr(v *ZoneSettingCacheNoCacheArgs) ZoneSettingCacheNoCachePtrInput {
	return (*zoneSettingCacheNoCachePtrType)(v)
}

func (*zoneSettingCacheNoCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheNoCache)(nil)).Elem()
}

func (i *zoneSettingCacheNoCachePtrType) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return i.ToZoneSettingCacheNoCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheNoCachePtrType) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheNoCachePtrOutput)
}

type ZoneSettingCacheNoCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheNoCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheNoCache)(nil)).Elem()
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCacheOutput() ZoneSettingCacheNoCacheOutput {
	return o
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCacheOutputWithContext(ctx context.Context) ZoneSettingCacheNoCacheOutput {
	return o
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return o.ToZoneSettingCacheNoCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheNoCache) *ZoneSettingCacheNoCache {
		return &v
	}).(ZoneSettingCacheNoCachePtrOutput)
}

// Whether to cache the configuration.
func (o ZoneSettingCacheNoCacheOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheNoCache) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheNoCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheNoCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheNoCache)(nil)).Elem()
}

func (o ZoneSettingCacheNoCachePtrOutput) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return o
}

func (o ZoneSettingCacheNoCachePtrOutput) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return o
}

func (o ZoneSettingCacheNoCachePtrOutput) Elem() ZoneSettingCacheNoCacheOutput {
	return o.ApplyT(func(v *ZoneSettingCacheNoCache) ZoneSettingCacheNoCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheNoCache
		return ret
	}).(ZoneSettingCacheNoCacheOutput)
}

// Whether to cache the configuration.
func (o ZoneSettingCacheNoCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheNoCache) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCachePrefresh struct {
	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	Percent *int `pulumi:"percent"`
	// Specifies whether to enable cache prefresh.
	Switch string `pulumi:"switch"`
}

// ZoneSettingCachePrefreshInput is an input type that accepts ZoneSettingCachePrefreshArgs and ZoneSettingCachePrefreshOutput values.
// You can construct a concrete instance of `ZoneSettingCachePrefreshInput` via:
//
//	ZoneSettingCachePrefreshArgs{...}
type ZoneSettingCachePrefreshInput interface {
	pulumi.Input

	ToZoneSettingCachePrefreshOutput() ZoneSettingCachePrefreshOutput
	ToZoneSettingCachePrefreshOutputWithContext(context.Context) ZoneSettingCachePrefreshOutput
}

type ZoneSettingCachePrefreshArgs struct {
	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	Percent pulumi.IntPtrInput `pulumi:"percent"`
	// Specifies whether to enable cache prefresh.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingCachePrefreshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCachePrefresh)(nil)).Elem()
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshOutput() ZoneSettingCachePrefreshOutput {
	return i.ToZoneSettingCachePrefreshOutputWithContext(context.Background())
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePrefreshOutput)
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return i.ToZoneSettingCachePrefreshPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePrefreshOutput).ToZoneSettingCachePrefreshPtrOutputWithContext(ctx)
}

// ZoneSettingCachePrefreshPtrInput is an input type that accepts ZoneSettingCachePrefreshArgs, ZoneSettingCachePrefreshPtr and ZoneSettingCachePrefreshPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCachePrefreshPtrInput` via:
//
//	        ZoneSettingCachePrefreshArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCachePrefreshPtrInput interface {
	pulumi.Input

	ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput
	ToZoneSettingCachePrefreshPtrOutputWithContext(context.Context) ZoneSettingCachePrefreshPtrOutput
}

type zoneSettingCachePrefreshPtrType ZoneSettingCachePrefreshArgs

func ZoneSettingCachePrefreshPtr(v *ZoneSettingCachePrefreshArgs) ZoneSettingCachePrefreshPtrInput {
	return (*zoneSettingCachePrefreshPtrType)(v)
}

func (*zoneSettingCachePrefreshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCachePrefresh)(nil)).Elem()
}

func (i *zoneSettingCachePrefreshPtrType) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return i.ToZoneSettingCachePrefreshPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCachePrefreshPtrType) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePrefreshPtrOutput)
}

type ZoneSettingCachePrefreshOutput struct{ *pulumi.OutputState }

func (ZoneSettingCachePrefreshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCachePrefresh)(nil)).Elem()
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshOutput() ZoneSettingCachePrefreshOutput {
	return o
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshOutput {
	return o
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return o.ToZoneSettingCachePrefreshPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCachePrefresh) *ZoneSettingCachePrefresh {
		return &v
	}).(ZoneSettingCachePrefreshPtrOutput)
}

// Percentage of cache time before try to prefresh. Valid value range: 1-99.
func (o ZoneSettingCachePrefreshOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingCachePrefresh) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

// Specifies whether to enable cache prefresh.
func (o ZoneSettingCachePrefreshOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingCachePrefresh) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingCachePrefreshPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCachePrefreshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCachePrefresh)(nil)).Elem()
}

func (o ZoneSettingCachePrefreshPtrOutput) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return o
}

func (o ZoneSettingCachePrefreshPtrOutput) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return o
}

func (o ZoneSettingCachePrefreshPtrOutput) Elem() ZoneSettingCachePrefreshOutput {
	return o.ApplyT(func(v *ZoneSettingCachePrefresh) ZoneSettingCachePrefresh {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCachePrefresh
		return ret
	}).(ZoneSettingCachePrefreshOutput)
}

// Percentage of cache time before try to prefresh. Valid value range: 1-99.
func (o ZoneSettingCachePrefreshPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCachePrefresh) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

// Specifies whether to enable cache prefresh.
func (o ZoneSettingCachePrefreshPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCachePrefresh) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingClientIpHeader struct {
	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	HeaderName *string `pulumi:"headerName"`
	// Specifies whether to enable client IP header.
	Switch string `pulumi:"switch"`
}

// ZoneSettingClientIpHeaderInput is an input type that accepts ZoneSettingClientIpHeaderArgs and ZoneSettingClientIpHeaderOutput values.
// You can construct a concrete instance of `ZoneSettingClientIpHeaderInput` via:
//
//	ZoneSettingClientIpHeaderArgs{...}
type ZoneSettingClientIpHeaderInput interface {
	pulumi.Input

	ToZoneSettingClientIpHeaderOutput() ZoneSettingClientIpHeaderOutput
	ToZoneSettingClientIpHeaderOutputWithContext(context.Context) ZoneSettingClientIpHeaderOutput
}

type ZoneSettingClientIpHeaderArgs struct {
	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Specifies whether to enable client IP header.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingClientIpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingClientIpHeader)(nil)).Elem()
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderOutput() ZoneSettingClientIpHeaderOutput {
	return i.ToZoneSettingClientIpHeaderOutputWithContext(context.Background())
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingClientIpHeaderOutput)
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return i.ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Background())
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingClientIpHeaderOutput).ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx)
}

// ZoneSettingClientIpHeaderPtrInput is an input type that accepts ZoneSettingClientIpHeaderArgs, ZoneSettingClientIpHeaderPtr and ZoneSettingClientIpHeaderPtrOutput values.
// You can construct a concrete instance of `ZoneSettingClientIpHeaderPtrInput` via:
//
//	        ZoneSettingClientIpHeaderArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingClientIpHeaderPtrInput interface {
	pulumi.Input

	ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput
	ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Context) ZoneSettingClientIpHeaderPtrOutput
}

type zoneSettingClientIpHeaderPtrType ZoneSettingClientIpHeaderArgs

func ZoneSettingClientIpHeaderPtr(v *ZoneSettingClientIpHeaderArgs) ZoneSettingClientIpHeaderPtrInput {
	return (*zoneSettingClientIpHeaderPtrType)(v)
}

func (*zoneSettingClientIpHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingClientIpHeader)(nil)).Elem()
}

func (i *zoneSettingClientIpHeaderPtrType) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return i.ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Background())
}

func (i *zoneSettingClientIpHeaderPtrType) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingClientIpHeaderPtrOutput)
}

type ZoneSettingClientIpHeaderOutput struct{ *pulumi.OutputState }

func (ZoneSettingClientIpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingClientIpHeader)(nil)).Elem()
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderOutput() ZoneSettingClientIpHeaderOutput {
	return o
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderOutput {
	return o
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return o.ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Background())
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingClientIpHeader) *ZoneSettingClientIpHeader {
		return &v
	}).(ZoneSettingClientIpHeaderPtrOutput)
}

// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingClientIpHeaderOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingClientIpHeader) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable client IP header.
func (o ZoneSettingClientIpHeaderOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingClientIpHeader) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingClientIpHeaderPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingClientIpHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingClientIpHeader)(nil)).Elem()
}

func (o ZoneSettingClientIpHeaderPtrOutput) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return o
}

func (o ZoneSettingClientIpHeaderPtrOutput) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return o
}

func (o ZoneSettingClientIpHeaderPtrOutput) Elem() ZoneSettingClientIpHeaderOutput {
	return o.ApplyT(func(v *ZoneSettingClientIpHeader) ZoneSettingClientIpHeader {
		if v != nil {
			return *v
		}
		var ret ZoneSettingClientIpHeader
		return ret
	}).(ZoneSettingClientIpHeaderOutput)
}

// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingClientIpHeaderPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingClientIpHeader) *string {
		if v == nil {
			return nil
		}
		return v.HeaderName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to enable client IP header.
func (o ZoneSettingClientIpHeaderPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingClientIpHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCompression struct {
	// Compression algorithms to select. Valid values: `brotli`, `gzip`.
	Algorithms []string `pulumi:"algorithms"`
	// Whether to enable Smart compression.
	Switch string `pulumi:"switch"`
}

// ZoneSettingCompressionInput is an input type that accepts ZoneSettingCompressionArgs and ZoneSettingCompressionOutput values.
// You can construct a concrete instance of `ZoneSettingCompressionInput` via:
//
//	ZoneSettingCompressionArgs{...}
type ZoneSettingCompressionInput interface {
	pulumi.Input

	ToZoneSettingCompressionOutput() ZoneSettingCompressionOutput
	ToZoneSettingCompressionOutputWithContext(context.Context) ZoneSettingCompressionOutput
}

type ZoneSettingCompressionArgs struct {
	// Compression algorithms to select. Valid values: `brotli`, `gzip`.
	Algorithms pulumi.StringArrayInput `pulumi:"algorithms"`
	// Whether to enable Smart compression.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCompression)(nil)).Elem()
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionOutput() ZoneSettingCompressionOutput {
	return i.ToZoneSettingCompressionOutputWithContext(context.Background())
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionOutputWithContext(ctx context.Context) ZoneSettingCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCompressionOutput)
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return i.ToZoneSettingCompressionPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCompressionOutput).ToZoneSettingCompressionPtrOutputWithContext(ctx)
}

// ZoneSettingCompressionPtrInput is an input type that accepts ZoneSettingCompressionArgs, ZoneSettingCompressionPtr and ZoneSettingCompressionPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCompressionPtrInput` via:
//
//	        ZoneSettingCompressionArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCompressionPtrInput interface {
	pulumi.Input

	ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput
	ToZoneSettingCompressionPtrOutputWithContext(context.Context) ZoneSettingCompressionPtrOutput
}

type zoneSettingCompressionPtrType ZoneSettingCompressionArgs

func ZoneSettingCompressionPtr(v *ZoneSettingCompressionArgs) ZoneSettingCompressionPtrInput {
	return (*zoneSettingCompressionPtrType)(v)
}

func (*zoneSettingCompressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCompression)(nil)).Elem()
}

func (i *zoneSettingCompressionPtrType) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return i.ToZoneSettingCompressionPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCompressionPtrType) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCompressionPtrOutput)
}

type ZoneSettingCompressionOutput struct{ *pulumi.OutputState }

func (ZoneSettingCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCompression)(nil)).Elem()
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionOutput() ZoneSettingCompressionOutput {
	return o
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionOutputWithContext(ctx context.Context) ZoneSettingCompressionOutput {
	return o
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return o.ToZoneSettingCompressionPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCompression) *ZoneSettingCompression {
		return &v
	}).(ZoneSettingCompressionPtrOutput)
}

// Compression algorithms to select. Valid values: `brotli`, `gzip`.
func (o ZoneSettingCompressionOutput) Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingCompression) []string { return v.Algorithms }).(pulumi.StringArrayOutput)
}

// Whether to enable Smart compression.
func (o ZoneSettingCompressionOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingCompression) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingCompressionPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCompression)(nil)).Elem()
}

func (o ZoneSettingCompressionPtrOutput) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return o
}

func (o ZoneSettingCompressionPtrOutput) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return o
}

func (o ZoneSettingCompressionPtrOutput) Elem() ZoneSettingCompressionOutput {
	return o.ApplyT(func(v *ZoneSettingCompression) ZoneSettingCompression {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCompression
		return ret
	}).(ZoneSettingCompressionOutput)
}

// Compression algorithms to select. Valid values: `brotli`, `gzip`.
func (o ZoneSettingCompressionPtrOutput) Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingCompression) []string {
		if v == nil {
			return nil
		}
		return v.Algorithms
	}).(pulumi.StringArrayOutput)
}

// Whether to enable Smart compression.
func (o ZoneSettingCompressionPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCompression) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingForceRedirect struct {
	// Redirection status code.
	// - 301
	// - 302 Note: This field may return null, indicating that no valid value can be obtained.
	RedirectStatusCode *int `pulumi:"redirectStatusCode"`
	// Whether to enable force redirect.
	Switch string `pulumi:"switch"`
}

// ZoneSettingForceRedirectInput is an input type that accepts ZoneSettingForceRedirectArgs and ZoneSettingForceRedirectOutput values.
// You can construct a concrete instance of `ZoneSettingForceRedirectInput` via:
//
//	ZoneSettingForceRedirectArgs{...}
type ZoneSettingForceRedirectInput interface {
	pulumi.Input

	ToZoneSettingForceRedirectOutput() ZoneSettingForceRedirectOutput
	ToZoneSettingForceRedirectOutputWithContext(context.Context) ZoneSettingForceRedirectOutput
}

type ZoneSettingForceRedirectArgs struct {
	// Redirection status code.
	// - 301
	// - 302 Note: This field may return null, indicating that no valid value can be obtained.
	RedirectStatusCode pulumi.IntPtrInput `pulumi:"redirectStatusCode"`
	// Whether to enable force redirect.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingForceRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingForceRedirect)(nil)).Elem()
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectOutput() ZoneSettingForceRedirectOutput {
	return i.ToZoneSettingForceRedirectOutputWithContext(context.Background())
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectOutputWithContext(ctx context.Context) ZoneSettingForceRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingForceRedirectOutput)
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return i.ToZoneSettingForceRedirectPtrOutputWithContext(context.Background())
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingForceRedirectOutput).ToZoneSettingForceRedirectPtrOutputWithContext(ctx)
}

// ZoneSettingForceRedirectPtrInput is an input type that accepts ZoneSettingForceRedirectArgs, ZoneSettingForceRedirectPtr and ZoneSettingForceRedirectPtrOutput values.
// You can construct a concrete instance of `ZoneSettingForceRedirectPtrInput` via:
//
//	        ZoneSettingForceRedirectArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingForceRedirectPtrInput interface {
	pulumi.Input

	ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput
	ToZoneSettingForceRedirectPtrOutputWithContext(context.Context) ZoneSettingForceRedirectPtrOutput
}

type zoneSettingForceRedirectPtrType ZoneSettingForceRedirectArgs

func ZoneSettingForceRedirectPtr(v *ZoneSettingForceRedirectArgs) ZoneSettingForceRedirectPtrInput {
	return (*zoneSettingForceRedirectPtrType)(v)
}

func (*zoneSettingForceRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingForceRedirect)(nil)).Elem()
}

func (i *zoneSettingForceRedirectPtrType) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return i.ToZoneSettingForceRedirectPtrOutputWithContext(context.Background())
}

func (i *zoneSettingForceRedirectPtrType) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingForceRedirectPtrOutput)
}

type ZoneSettingForceRedirectOutput struct{ *pulumi.OutputState }

func (ZoneSettingForceRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingForceRedirect)(nil)).Elem()
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectOutput() ZoneSettingForceRedirectOutput {
	return o
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectOutputWithContext(ctx context.Context) ZoneSettingForceRedirectOutput {
	return o
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return o.ToZoneSettingForceRedirectPtrOutputWithContext(context.Background())
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingForceRedirect) *ZoneSettingForceRedirect {
		return &v
	}).(ZoneSettingForceRedirectPtrOutput)
}

// Redirection status code.
// - 301
// - 302 Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingForceRedirectOutput) RedirectStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingForceRedirect) *int { return v.RedirectStatusCode }).(pulumi.IntPtrOutput)
}

// Whether to enable force redirect.
func (o ZoneSettingForceRedirectOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingForceRedirect) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingForceRedirectPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingForceRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingForceRedirect)(nil)).Elem()
}

func (o ZoneSettingForceRedirectPtrOutput) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return o
}

func (o ZoneSettingForceRedirectPtrOutput) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return o
}

func (o ZoneSettingForceRedirectPtrOutput) Elem() ZoneSettingForceRedirectOutput {
	return o.ApplyT(func(v *ZoneSettingForceRedirect) ZoneSettingForceRedirect {
		if v != nil {
			return *v
		}
		var ret ZoneSettingForceRedirect
		return ret
	}).(ZoneSettingForceRedirectOutput)
}

// Redirection status code.
// - 301
// - 302 Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingForceRedirectPtrOutput) RedirectStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingForceRedirect) *int {
		if v == nil {
			return nil
		}
		return v.RedirectStatusCode
	}).(pulumi.IntPtrOutput)
}

// Whether to enable force redirect.
func (o ZoneSettingForceRedirectPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingForceRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingHttps struct {
	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Hsts *ZoneSettingHttpsHsts `pulumi:"hsts"`
	// HTTP2 configuration switch.
	Http2 *string `pulumi:"http2"`
	// OCSP configuration switch.
	OcspStapling *string `pulumi:"ocspStapling"`
	// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.
	// Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	//
	// The `ipv6` object supports the following:
	TlsVersions []string `pulumi:"tlsVersions"`
}

// ZoneSettingHttpsInput is an input type that accepts ZoneSettingHttpsArgs and ZoneSettingHttpsOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsInput` via:
//
//	ZoneSettingHttpsArgs{...}
type ZoneSettingHttpsInput interface {
	pulumi.Input

	ToZoneSettingHttpsOutput() ZoneSettingHttpsOutput
	ToZoneSettingHttpsOutputWithContext(context.Context) ZoneSettingHttpsOutput
}

type ZoneSettingHttpsArgs struct {
	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Hsts ZoneSettingHttpsHstsPtrInput `pulumi:"hsts"`
	// HTTP2 configuration switch.
	Http2 pulumi.StringPtrInput `pulumi:"http2"`
	// OCSP configuration switch.
	OcspStapling pulumi.StringPtrInput `pulumi:"ocspStapling"`
	// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.
	// Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	//
	// The `ipv6` object supports the following:
	TlsVersions pulumi.StringArrayInput `pulumi:"tlsVersions"`
}

func (ZoneSettingHttpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttps)(nil)).Elem()
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsOutput() ZoneSettingHttpsOutput {
	return i.ToZoneSettingHttpsOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsOutputWithContext(ctx context.Context) ZoneSettingHttpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsOutput)
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return i.ToZoneSettingHttpsPtrOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsOutput).ToZoneSettingHttpsPtrOutputWithContext(ctx)
}

// ZoneSettingHttpsPtrInput is an input type that accepts ZoneSettingHttpsArgs, ZoneSettingHttpsPtr and ZoneSettingHttpsPtrOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsPtrInput` via:
//
//	        ZoneSettingHttpsArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingHttpsPtrInput interface {
	pulumi.Input

	ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput
	ToZoneSettingHttpsPtrOutputWithContext(context.Context) ZoneSettingHttpsPtrOutput
}

type zoneSettingHttpsPtrType ZoneSettingHttpsArgs

func ZoneSettingHttpsPtr(v *ZoneSettingHttpsArgs) ZoneSettingHttpsPtrInput {
	return (*zoneSettingHttpsPtrType)(v)
}

func (*zoneSettingHttpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttps)(nil)).Elem()
}

func (i *zoneSettingHttpsPtrType) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return i.ToZoneSettingHttpsPtrOutputWithContext(context.Background())
}

func (i *zoneSettingHttpsPtrType) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsPtrOutput)
}

type ZoneSettingHttpsOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttps)(nil)).Elem()
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsOutput() ZoneSettingHttpsOutput {
	return o
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsOutputWithContext(ctx context.Context) ZoneSettingHttpsOutput {
	return o
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return o.ToZoneSettingHttpsPtrOutputWithContext(context.Background())
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingHttps) *ZoneSettingHttps {
		return &v
	}).(ZoneSettingHttpsPtrOutput)
}

// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsOutput) Hsts() ZoneSettingHttpsHstsPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttps) *ZoneSettingHttpsHsts { return v.Hsts }).(ZoneSettingHttpsHstsPtrOutput)
}

// HTTP2 configuration switch.
func (o ZoneSettingHttpsOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttps) *string { return v.Http2 }).(pulumi.StringPtrOutput)
}

// OCSP configuration switch.
func (o ZoneSettingHttpsOutput) OcspStapling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttps) *string { return v.OcspStapling }).(pulumi.StringPtrOutput)
}

// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.
// Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
//
// The `ipv6` object supports the following:
func (o ZoneSettingHttpsOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingHttps) []string { return v.TlsVersions }).(pulumi.StringArrayOutput)
}

type ZoneSettingHttpsPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttps)(nil)).Elem()
}

func (o ZoneSettingHttpsPtrOutput) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return o
}

func (o ZoneSettingHttpsPtrOutput) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return o
}

func (o ZoneSettingHttpsPtrOutput) Elem() ZoneSettingHttpsOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) ZoneSettingHttps {
		if v != nil {
			return *v
		}
		var ret ZoneSettingHttps
		return ret
	}).(ZoneSettingHttpsOutput)
}

// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsPtrOutput) Hsts() ZoneSettingHttpsHstsPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) *ZoneSettingHttpsHsts {
		if v == nil {
			return nil
		}
		return v.Hsts
	}).(ZoneSettingHttpsHstsPtrOutput)
}

// HTTP2 configuration switch.
func (o ZoneSettingHttpsPtrOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) *string {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(pulumi.StringPtrOutput)
}

// OCSP configuration switch.
func (o ZoneSettingHttpsPtrOutput) OcspStapling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) *string {
		if v == nil {
			return nil
		}
		return v.OcspStapling
	}).(pulumi.StringPtrOutput)
}

// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.
// Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
//
// The `ipv6` object supports the following:
func (o ZoneSettingHttpsPtrOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) []string {
		if v == nil {
			return nil
		}
		return v.TlsVersions
	}).(pulumi.StringArrayOutput)
}

type ZoneSettingHttpsHsts struct {
	// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	IncludeSubDomains *string `pulumi:"includeSubDomains"`
	// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAge *int `pulumi:"maxAge"`
	// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	Preload *string `pulumi:"preload"`
	// `on`: Enable.
	Switch string `pulumi:"switch"`
}

// ZoneSettingHttpsHstsInput is an input type that accepts ZoneSettingHttpsHstsArgs and ZoneSettingHttpsHstsOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsHstsInput` via:
//
//	ZoneSettingHttpsHstsArgs{...}
type ZoneSettingHttpsHstsInput interface {
	pulumi.Input

	ToZoneSettingHttpsHstsOutput() ZoneSettingHttpsHstsOutput
	ToZoneSettingHttpsHstsOutputWithContext(context.Context) ZoneSettingHttpsHstsOutput
}

type ZoneSettingHttpsHstsArgs struct {
	// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	IncludeSubDomains pulumi.StringPtrInput `pulumi:"includeSubDomains"`
	// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
	// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	Preload pulumi.StringPtrInput `pulumi:"preload"`
	// `on`: Enable.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingHttpsHstsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttpsHsts)(nil)).Elem()
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsOutput() ZoneSettingHttpsHstsOutput {
	return i.ToZoneSettingHttpsHstsOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsHstsOutput)
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return i.ToZoneSettingHttpsHstsPtrOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsHstsOutput).ToZoneSettingHttpsHstsPtrOutputWithContext(ctx)
}

// ZoneSettingHttpsHstsPtrInput is an input type that accepts ZoneSettingHttpsHstsArgs, ZoneSettingHttpsHstsPtr and ZoneSettingHttpsHstsPtrOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsHstsPtrInput` via:
//
//	        ZoneSettingHttpsHstsArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingHttpsHstsPtrInput interface {
	pulumi.Input

	ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput
	ToZoneSettingHttpsHstsPtrOutputWithContext(context.Context) ZoneSettingHttpsHstsPtrOutput
}

type zoneSettingHttpsHstsPtrType ZoneSettingHttpsHstsArgs

func ZoneSettingHttpsHstsPtr(v *ZoneSettingHttpsHstsArgs) ZoneSettingHttpsHstsPtrInput {
	return (*zoneSettingHttpsHstsPtrType)(v)
}

func (*zoneSettingHttpsHstsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttpsHsts)(nil)).Elem()
}

func (i *zoneSettingHttpsHstsPtrType) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return i.ToZoneSettingHttpsHstsPtrOutputWithContext(context.Background())
}

func (i *zoneSettingHttpsHstsPtrType) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsHstsPtrOutput)
}

type ZoneSettingHttpsHstsOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsHstsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttpsHsts)(nil)).Elem()
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsOutput() ZoneSettingHttpsHstsOutput {
	return o
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsOutput {
	return o
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return o.ToZoneSettingHttpsHstsPtrOutputWithContext(context.Background())
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingHttpsHsts) *ZoneSettingHttpsHsts {
		return &v
	}).(ZoneSettingHttpsHstsPtrOutput)
}

// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsHstsOutput) IncludeSubDomains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) *string { return v.IncludeSubDomains }).(pulumi.StringPtrOutput)
}

// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsHstsOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsHstsOutput) Preload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) *string { return v.Preload }).(pulumi.StringPtrOutput)
}

// `on`: Enable.
func (o ZoneSettingHttpsHstsOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingHttpsHstsPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsHstsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttpsHsts)(nil)).Elem()
}

func (o ZoneSettingHttpsHstsPtrOutput) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return o
}

func (o ZoneSettingHttpsHstsPtrOutput) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return o
}

func (o ZoneSettingHttpsHstsPtrOutput) Elem() ZoneSettingHttpsHstsOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) ZoneSettingHttpsHsts {
		if v != nil {
			return *v
		}
		var ret ZoneSettingHttpsHsts
		return ret
	}).(ZoneSettingHttpsHstsOutput)
}

// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsHstsPtrOutput) IncludeSubDomains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *string {
		if v == nil {
			return nil
		}
		return v.IncludeSubDomains
	}).(pulumi.StringPtrOutput)
}

// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsHstsPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingHttpsHstsPtrOutput) Preload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *string {
		if v == nil {
			return nil
		}
		return v.Preload
	}).(pulumi.StringPtrOutput)
}

// `on`: Enable.
func (o ZoneSettingHttpsHstsPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingIpv6 struct {
	// Cache configuration switch.
	Switch string `pulumi:"switch"`
}

// ZoneSettingIpv6Input is an input type that accepts ZoneSettingIpv6Args and ZoneSettingIpv6Output values.
// You can construct a concrete instance of `ZoneSettingIpv6Input` via:
//
//	ZoneSettingIpv6Args{...}
type ZoneSettingIpv6Input interface {
	pulumi.Input

	ToZoneSettingIpv6Output() ZoneSettingIpv6Output
	ToZoneSettingIpv6OutputWithContext(context.Context) ZoneSettingIpv6Output
}

type ZoneSettingIpv6Args struct {
	// Cache configuration switch.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingIpv6)(nil)).Elem()
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6Output() ZoneSettingIpv6Output {
	return i.ToZoneSettingIpv6OutputWithContext(context.Background())
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6OutputWithContext(ctx context.Context) ZoneSettingIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingIpv6Output)
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return i.ToZoneSettingIpv6PtrOutputWithContext(context.Background())
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingIpv6Output).ToZoneSettingIpv6PtrOutputWithContext(ctx)
}

// ZoneSettingIpv6PtrInput is an input type that accepts ZoneSettingIpv6Args, ZoneSettingIpv6Ptr and ZoneSettingIpv6PtrOutput values.
// You can construct a concrete instance of `ZoneSettingIpv6PtrInput` via:
//
//	        ZoneSettingIpv6Args{...}
//
//	or:
//
//	        nil
type ZoneSettingIpv6PtrInput interface {
	pulumi.Input

	ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput
	ToZoneSettingIpv6PtrOutputWithContext(context.Context) ZoneSettingIpv6PtrOutput
}

type zoneSettingIpv6PtrType ZoneSettingIpv6Args

func ZoneSettingIpv6Ptr(v *ZoneSettingIpv6Args) ZoneSettingIpv6PtrInput {
	return (*zoneSettingIpv6PtrType)(v)
}

func (*zoneSettingIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingIpv6)(nil)).Elem()
}

func (i *zoneSettingIpv6PtrType) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return i.ToZoneSettingIpv6PtrOutputWithContext(context.Background())
}

func (i *zoneSettingIpv6PtrType) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingIpv6PtrOutput)
}

type ZoneSettingIpv6Output struct{ *pulumi.OutputState }

func (ZoneSettingIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingIpv6)(nil)).Elem()
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6Output() ZoneSettingIpv6Output {
	return o
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6OutputWithContext(ctx context.Context) ZoneSettingIpv6Output {
	return o
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return o.ToZoneSettingIpv6PtrOutputWithContext(context.Background())
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingIpv6) *ZoneSettingIpv6 {
		return &v
	}).(ZoneSettingIpv6PtrOutput)
}

// Cache configuration switch.
func (o ZoneSettingIpv6Output) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingIpv6) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingIpv6PtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingIpv6)(nil)).Elem()
}

func (o ZoneSettingIpv6PtrOutput) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return o
}

func (o ZoneSettingIpv6PtrOutput) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return o
}

func (o ZoneSettingIpv6PtrOutput) Elem() ZoneSettingIpv6Output {
	return o.ApplyT(func(v *ZoneSettingIpv6) ZoneSettingIpv6 {
		if v != nil {
			return *v
		}
		var ret ZoneSettingIpv6
		return ret
	}).(ZoneSettingIpv6Output)
}

// Cache configuration switch.
func (o ZoneSettingIpv6PtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingIpv6) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingMaxAge struct {
	// Specifies whether to follow the max cache age of the origin server.
	FollowOrigin *string `pulumi:"followOrigin"`
	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAgeTime *int `pulumi:"maxAgeTime"`
}

// ZoneSettingMaxAgeInput is an input type that accepts ZoneSettingMaxAgeArgs and ZoneSettingMaxAgeOutput values.
// You can construct a concrete instance of `ZoneSettingMaxAgeInput` via:
//
//	ZoneSettingMaxAgeArgs{...}
type ZoneSettingMaxAgeInput interface {
	pulumi.Input

	ToZoneSettingMaxAgeOutput() ZoneSettingMaxAgeOutput
	ToZoneSettingMaxAgeOutputWithContext(context.Context) ZoneSettingMaxAgeOutput
}

type ZoneSettingMaxAgeArgs struct {
	// Specifies whether to follow the max cache age of the origin server.
	FollowOrigin pulumi.StringPtrInput `pulumi:"followOrigin"`
	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAgeTime pulumi.IntPtrInput `pulumi:"maxAgeTime"`
}

func (ZoneSettingMaxAgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingMaxAge)(nil)).Elem()
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgeOutput() ZoneSettingMaxAgeOutput {
	return i.ToZoneSettingMaxAgeOutputWithContext(context.Background())
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgeOutputWithContext(ctx context.Context) ZoneSettingMaxAgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingMaxAgeOutput)
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return i.ToZoneSettingMaxAgePtrOutputWithContext(context.Background())
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingMaxAgeOutput).ToZoneSettingMaxAgePtrOutputWithContext(ctx)
}

// ZoneSettingMaxAgePtrInput is an input type that accepts ZoneSettingMaxAgeArgs, ZoneSettingMaxAgePtr and ZoneSettingMaxAgePtrOutput values.
// You can construct a concrete instance of `ZoneSettingMaxAgePtrInput` via:
//
//	        ZoneSettingMaxAgeArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingMaxAgePtrInput interface {
	pulumi.Input

	ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput
	ToZoneSettingMaxAgePtrOutputWithContext(context.Context) ZoneSettingMaxAgePtrOutput
}

type zoneSettingMaxAgePtrType ZoneSettingMaxAgeArgs

func ZoneSettingMaxAgePtr(v *ZoneSettingMaxAgeArgs) ZoneSettingMaxAgePtrInput {
	return (*zoneSettingMaxAgePtrType)(v)
}

func (*zoneSettingMaxAgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingMaxAge)(nil)).Elem()
}

func (i *zoneSettingMaxAgePtrType) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return i.ToZoneSettingMaxAgePtrOutputWithContext(context.Background())
}

func (i *zoneSettingMaxAgePtrType) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingMaxAgePtrOutput)
}

type ZoneSettingMaxAgeOutput struct{ *pulumi.OutputState }

func (ZoneSettingMaxAgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingMaxAge)(nil)).Elem()
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgeOutput() ZoneSettingMaxAgeOutput {
	return o
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgeOutputWithContext(ctx context.Context) ZoneSettingMaxAgeOutput {
	return o
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return o.ToZoneSettingMaxAgePtrOutputWithContext(context.Background())
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingMaxAge) *ZoneSettingMaxAge {
		return &v
	}).(ZoneSettingMaxAgePtrOutput)
}

// Specifies whether to follow the max cache age of the origin server.
func (o ZoneSettingMaxAgeOutput) FollowOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingMaxAge) *string { return v.FollowOrigin }).(pulumi.StringPtrOutput)
}

// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingMaxAgeOutput) MaxAgeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingMaxAge) *int { return v.MaxAgeTime }).(pulumi.IntPtrOutput)
}

type ZoneSettingMaxAgePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingMaxAgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingMaxAge)(nil)).Elem()
}

func (o ZoneSettingMaxAgePtrOutput) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return o
}

func (o ZoneSettingMaxAgePtrOutput) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return o
}

func (o ZoneSettingMaxAgePtrOutput) Elem() ZoneSettingMaxAgeOutput {
	return o.ApplyT(func(v *ZoneSettingMaxAge) ZoneSettingMaxAge {
		if v != nil {
			return *v
		}
		var ret ZoneSettingMaxAge
		return ret
	}).(ZoneSettingMaxAgeOutput)
}

// Specifies whether to follow the max cache age of the origin server.
func (o ZoneSettingMaxAgePtrOutput) FollowOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingMaxAge) *string {
		if v == nil {
			return nil
		}
		return v.FollowOrigin
	}).(pulumi.StringPtrOutput)
}

// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingMaxAgePtrOutput) MaxAgeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingMaxAge) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeTime
	}).(pulumi.IntPtrOutput)
}

type ZoneSettingOfflineCache struct {
	// Whether to enable offline cache.
	Switch string `pulumi:"switch"`
}

// ZoneSettingOfflineCacheInput is an input type that accepts ZoneSettingOfflineCacheArgs and ZoneSettingOfflineCacheOutput values.
// You can construct a concrete instance of `ZoneSettingOfflineCacheInput` via:
//
//	ZoneSettingOfflineCacheArgs{...}
type ZoneSettingOfflineCacheInput interface {
	pulumi.Input

	ToZoneSettingOfflineCacheOutput() ZoneSettingOfflineCacheOutput
	ToZoneSettingOfflineCacheOutputWithContext(context.Context) ZoneSettingOfflineCacheOutput
}

type ZoneSettingOfflineCacheArgs struct {
	// Whether to enable offline cache.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingOfflineCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOfflineCache)(nil)).Elem()
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCacheOutput() ZoneSettingOfflineCacheOutput {
	return i.ToZoneSettingOfflineCacheOutputWithContext(context.Background())
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCacheOutputWithContext(ctx context.Context) ZoneSettingOfflineCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOfflineCacheOutput)
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return i.ToZoneSettingOfflineCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOfflineCacheOutput).ToZoneSettingOfflineCachePtrOutputWithContext(ctx)
}

// ZoneSettingOfflineCachePtrInput is an input type that accepts ZoneSettingOfflineCacheArgs, ZoneSettingOfflineCachePtr and ZoneSettingOfflineCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingOfflineCachePtrInput` via:
//
//	        ZoneSettingOfflineCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingOfflineCachePtrInput interface {
	pulumi.Input

	ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput
	ToZoneSettingOfflineCachePtrOutputWithContext(context.Context) ZoneSettingOfflineCachePtrOutput
}

type zoneSettingOfflineCachePtrType ZoneSettingOfflineCacheArgs

func ZoneSettingOfflineCachePtr(v *ZoneSettingOfflineCacheArgs) ZoneSettingOfflineCachePtrInput {
	return (*zoneSettingOfflineCachePtrType)(v)
}

func (*zoneSettingOfflineCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOfflineCache)(nil)).Elem()
}

func (i *zoneSettingOfflineCachePtrType) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return i.ToZoneSettingOfflineCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingOfflineCachePtrType) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOfflineCachePtrOutput)
}

type ZoneSettingOfflineCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingOfflineCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOfflineCache)(nil)).Elem()
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCacheOutput() ZoneSettingOfflineCacheOutput {
	return o
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCacheOutputWithContext(ctx context.Context) ZoneSettingOfflineCacheOutput {
	return o
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return o.ToZoneSettingOfflineCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingOfflineCache) *ZoneSettingOfflineCache {
		return &v
	}).(ZoneSettingOfflineCachePtrOutput)
}

// Whether to enable offline cache.
func (o ZoneSettingOfflineCacheOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingOfflineCache) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingOfflineCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingOfflineCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOfflineCache)(nil)).Elem()
}

func (o ZoneSettingOfflineCachePtrOutput) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return o
}

func (o ZoneSettingOfflineCachePtrOutput) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return o
}

func (o ZoneSettingOfflineCachePtrOutput) Elem() ZoneSettingOfflineCacheOutput {
	return o.ApplyT(func(v *ZoneSettingOfflineCache) ZoneSettingOfflineCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingOfflineCache
		return ret
	}).(ZoneSettingOfflineCacheOutput)
}

// Whether to enable offline cache.
func (o ZoneSettingOfflineCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingOfflineCache) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingOrigin struct {
	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	BackupOrigins []string `pulumi:"backupOrigins"`
	// Origin-pull protocol.
	OriginPullProtocol *string `pulumi:"originPullProtocol"`
	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	Origins []string `pulumi:"origins"`
}

// ZoneSettingOriginInput is an input type that accepts ZoneSettingOriginArgs and ZoneSettingOriginOutput values.
// You can construct a concrete instance of `ZoneSettingOriginInput` via:
//
//	ZoneSettingOriginArgs{...}
type ZoneSettingOriginInput interface {
	pulumi.Input

	ToZoneSettingOriginOutput() ZoneSettingOriginOutput
	ToZoneSettingOriginOutputWithContext(context.Context) ZoneSettingOriginOutput
}

type ZoneSettingOriginArgs struct {
	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	BackupOrigins pulumi.StringArrayInput `pulumi:"backupOrigins"`
	// Origin-pull protocol.
	OriginPullProtocol pulumi.StringPtrInput `pulumi:"originPullProtocol"`
	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	Origins pulumi.StringArrayInput `pulumi:"origins"`
}

func (ZoneSettingOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOrigin)(nil)).Elem()
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginOutput() ZoneSettingOriginOutput {
	return i.ToZoneSettingOriginOutputWithContext(context.Background())
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginOutputWithContext(ctx context.Context) ZoneSettingOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOriginOutput)
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return i.ToZoneSettingOriginPtrOutputWithContext(context.Background())
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOriginOutput).ToZoneSettingOriginPtrOutputWithContext(ctx)
}

// ZoneSettingOriginPtrInput is an input type that accepts ZoneSettingOriginArgs, ZoneSettingOriginPtr and ZoneSettingOriginPtrOutput values.
// You can construct a concrete instance of `ZoneSettingOriginPtrInput` via:
//
//	        ZoneSettingOriginArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingOriginPtrInput interface {
	pulumi.Input

	ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput
	ToZoneSettingOriginPtrOutputWithContext(context.Context) ZoneSettingOriginPtrOutput
}

type zoneSettingOriginPtrType ZoneSettingOriginArgs

func ZoneSettingOriginPtr(v *ZoneSettingOriginArgs) ZoneSettingOriginPtrInput {
	return (*zoneSettingOriginPtrType)(v)
}

func (*zoneSettingOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOrigin)(nil)).Elem()
}

func (i *zoneSettingOriginPtrType) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return i.ToZoneSettingOriginPtrOutputWithContext(context.Background())
}

func (i *zoneSettingOriginPtrType) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOriginPtrOutput)
}

type ZoneSettingOriginOutput struct{ *pulumi.OutputState }

func (ZoneSettingOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOrigin)(nil)).Elem()
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginOutput() ZoneSettingOriginOutput {
	return o
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginOutputWithContext(ctx context.Context) ZoneSettingOriginOutput {
	return o
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return o.ToZoneSettingOriginPtrOutputWithContext(context.Background())
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingOrigin) *ZoneSettingOrigin {
		return &v
	}).(ZoneSettingOriginPtrOutput)
}

// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingOriginOutput) BackupOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) []string { return v.BackupOrigins }).(pulumi.StringArrayOutput)
}

// Origin-pull protocol.
func (o ZoneSettingOriginOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) *string { return v.OriginPullProtocol }).(pulumi.StringPtrOutput)
}

// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingOriginOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

type ZoneSettingOriginPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOrigin)(nil)).Elem()
}

func (o ZoneSettingOriginPtrOutput) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return o
}

func (o ZoneSettingOriginPtrOutput) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return o
}

func (o ZoneSettingOriginPtrOutput) Elem() ZoneSettingOriginOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) ZoneSettingOrigin {
		if v != nil {
			return *v
		}
		var ret ZoneSettingOrigin
		return ret
	}).(ZoneSettingOriginOutput)
}

// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingOriginPtrOutput) BackupOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) []string {
		if v == nil {
			return nil
		}
		return v.BackupOrigins
	}).(pulumi.StringArrayOutput)
}

// Origin-pull protocol.
func (o ZoneSettingOriginPtrOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) *string {
		if v == nil {
			return nil
		}
		return v.OriginPullProtocol
	}).(pulumi.StringPtrOutput)
}

// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingOriginPtrOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) []string {
		if v == nil {
			return nil
		}
		return v.Origins
	}).(pulumi.StringArrayOutput)
}

type ZoneSettingPostMaxSize struct {
	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	MaxSize *int `pulumi:"maxSize"`
	// Specifies whether to enable custom setting of the maximum file size.
	Switch string `pulumi:"switch"`
}

// ZoneSettingPostMaxSizeInput is an input type that accepts ZoneSettingPostMaxSizeArgs and ZoneSettingPostMaxSizeOutput values.
// You can construct a concrete instance of `ZoneSettingPostMaxSizeInput` via:
//
//	ZoneSettingPostMaxSizeArgs{...}
type ZoneSettingPostMaxSizeInput interface {
	pulumi.Input

	ToZoneSettingPostMaxSizeOutput() ZoneSettingPostMaxSizeOutput
	ToZoneSettingPostMaxSizeOutputWithContext(context.Context) ZoneSettingPostMaxSizeOutput
}

type ZoneSettingPostMaxSizeArgs struct {
	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// Specifies whether to enable custom setting of the maximum file size.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingPostMaxSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingPostMaxSize)(nil)).Elem()
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizeOutput() ZoneSettingPostMaxSizeOutput {
	return i.ToZoneSettingPostMaxSizeOutputWithContext(context.Background())
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizeOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingPostMaxSizeOutput)
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return i.ToZoneSettingPostMaxSizePtrOutputWithContext(context.Background())
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingPostMaxSizeOutput).ToZoneSettingPostMaxSizePtrOutputWithContext(ctx)
}

// ZoneSettingPostMaxSizePtrInput is an input type that accepts ZoneSettingPostMaxSizeArgs, ZoneSettingPostMaxSizePtr and ZoneSettingPostMaxSizePtrOutput values.
// You can construct a concrete instance of `ZoneSettingPostMaxSizePtrInput` via:
//
//	        ZoneSettingPostMaxSizeArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingPostMaxSizePtrInput interface {
	pulumi.Input

	ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput
	ToZoneSettingPostMaxSizePtrOutputWithContext(context.Context) ZoneSettingPostMaxSizePtrOutput
}

type zoneSettingPostMaxSizePtrType ZoneSettingPostMaxSizeArgs

func ZoneSettingPostMaxSizePtr(v *ZoneSettingPostMaxSizeArgs) ZoneSettingPostMaxSizePtrInput {
	return (*zoneSettingPostMaxSizePtrType)(v)
}

func (*zoneSettingPostMaxSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingPostMaxSize)(nil)).Elem()
}

func (i *zoneSettingPostMaxSizePtrType) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return i.ToZoneSettingPostMaxSizePtrOutputWithContext(context.Background())
}

func (i *zoneSettingPostMaxSizePtrType) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingPostMaxSizePtrOutput)
}

type ZoneSettingPostMaxSizeOutput struct{ *pulumi.OutputState }

func (ZoneSettingPostMaxSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingPostMaxSize)(nil)).Elem()
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizeOutput() ZoneSettingPostMaxSizeOutput {
	return o
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizeOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizeOutput {
	return o
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return o.ToZoneSettingPostMaxSizePtrOutputWithContext(context.Background())
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingPostMaxSize) *ZoneSettingPostMaxSize {
		return &v
	}).(ZoneSettingPostMaxSizePtrOutput)
}

// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingPostMaxSizeOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingPostMaxSize) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Specifies whether to enable custom setting of the maximum file size.
func (o ZoneSettingPostMaxSizeOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingPostMaxSize) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingPostMaxSizePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingPostMaxSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingPostMaxSize)(nil)).Elem()
}

func (o ZoneSettingPostMaxSizePtrOutput) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return o
}

func (o ZoneSettingPostMaxSizePtrOutput) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return o
}

func (o ZoneSettingPostMaxSizePtrOutput) Elem() ZoneSettingPostMaxSizeOutput {
	return o.ApplyT(func(v *ZoneSettingPostMaxSize) ZoneSettingPostMaxSize {
		if v != nil {
			return *v
		}
		var ret ZoneSettingPostMaxSize
		return ret
	}).(ZoneSettingPostMaxSizeOutput)
}

// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
func (o ZoneSettingPostMaxSizePtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingPostMaxSize) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Specifies whether to enable custom setting of the maximum file size.
func (o ZoneSettingPostMaxSizePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingPostMaxSize) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingQuic struct {
	// Whether to enable QUIC.
	Switch string `pulumi:"switch"`
}

// ZoneSettingQuicInput is an input type that accepts ZoneSettingQuicArgs and ZoneSettingQuicOutput values.
// You can construct a concrete instance of `ZoneSettingQuicInput` via:
//
//	ZoneSettingQuicArgs{...}
type ZoneSettingQuicInput interface {
	pulumi.Input

	ToZoneSettingQuicOutput() ZoneSettingQuicOutput
	ToZoneSettingQuicOutputWithContext(context.Context) ZoneSettingQuicOutput
}

type ZoneSettingQuicArgs struct {
	// Whether to enable QUIC.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingQuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingQuic)(nil)).Elem()
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicOutput() ZoneSettingQuicOutput {
	return i.ToZoneSettingQuicOutputWithContext(context.Background())
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicOutputWithContext(ctx context.Context) ZoneSettingQuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingQuicOutput)
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return i.ToZoneSettingQuicPtrOutputWithContext(context.Background())
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingQuicOutput).ToZoneSettingQuicPtrOutputWithContext(ctx)
}

// ZoneSettingQuicPtrInput is an input type that accepts ZoneSettingQuicArgs, ZoneSettingQuicPtr and ZoneSettingQuicPtrOutput values.
// You can construct a concrete instance of `ZoneSettingQuicPtrInput` via:
//
//	        ZoneSettingQuicArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingQuicPtrInput interface {
	pulumi.Input

	ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput
	ToZoneSettingQuicPtrOutputWithContext(context.Context) ZoneSettingQuicPtrOutput
}

type zoneSettingQuicPtrType ZoneSettingQuicArgs

func ZoneSettingQuicPtr(v *ZoneSettingQuicArgs) ZoneSettingQuicPtrInput {
	return (*zoneSettingQuicPtrType)(v)
}

func (*zoneSettingQuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingQuic)(nil)).Elem()
}

func (i *zoneSettingQuicPtrType) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return i.ToZoneSettingQuicPtrOutputWithContext(context.Background())
}

func (i *zoneSettingQuicPtrType) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingQuicPtrOutput)
}

type ZoneSettingQuicOutput struct{ *pulumi.OutputState }

func (ZoneSettingQuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingQuic)(nil)).Elem()
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicOutput() ZoneSettingQuicOutput {
	return o
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicOutputWithContext(ctx context.Context) ZoneSettingQuicOutput {
	return o
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return o.ToZoneSettingQuicPtrOutputWithContext(context.Background())
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingQuic) *ZoneSettingQuic {
		return &v
	}).(ZoneSettingQuicPtrOutput)
}

// Whether to enable QUIC.
func (o ZoneSettingQuicOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingQuic) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingQuicPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingQuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingQuic)(nil)).Elem()
}

func (o ZoneSettingQuicPtrOutput) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return o
}

func (o ZoneSettingQuicPtrOutput) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return o
}

func (o ZoneSettingQuicPtrOutput) Elem() ZoneSettingQuicOutput {
	return o.ApplyT(func(v *ZoneSettingQuic) ZoneSettingQuic {
		if v != nil {
			return *v
		}
		var ret ZoneSettingQuic
		return ret
	}).(ZoneSettingQuicOutput)
}

// Whether to enable QUIC.
func (o ZoneSettingQuicPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingQuic) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingSmartRouting struct {
	// Whether to enable HTTP2 origin-pull.
	Switch string `pulumi:"switch"`
}

// ZoneSettingSmartRoutingInput is an input type that accepts ZoneSettingSmartRoutingArgs and ZoneSettingSmartRoutingOutput values.
// You can construct a concrete instance of `ZoneSettingSmartRoutingInput` via:
//
//	ZoneSettingSmartRoutingArgs{...}
type ZoneSettingSmartRoutingInput interface {
	pulumi.Input

	ToZoneSettingSmartRoutingOutput() ZoneSettingSmartRoutingOutput
	ToZoneSettingSmartRoutingOutputWithContext(context.Context) ZoneSettingSmartRoutingOutput
}

type ZoneSettingSmartRoutingArgs struct {
	// Whether to enable HTTP2 origin-pull.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingSmartRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingSmartRouting)(nil)).Elem()
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingOutput() ZoneSettingSmartRoutingOutput {
	return i.ToZoneSettingSmartRoutingOutputWithContext(context.Background())
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingSmartRoutingOutput)
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return i.ToZoneSettingSmartRoutingPtrOutputWithContext(context.Background())
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingSmartRoutingOutput).ToZoneSettingSmartRoutingPtrOutputWithContext(ctx)
}

// ZoneSettingSmartRoutingPtrInput is an input type that accepts ZoneSettingSmartRoutingArgs, ZoneSettingSmartRoutingPtr and ZoneSettingSmartRoutingPtrOutput values.
// You can construct a concrete instance of `ZoneSettingSmartRoutingPtrInput` via:
//
//	        ZoneSettingSmartRoutingArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingSmartRoutingPtrInput interface {
	pulumi.Input

	ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput
	ToZoneSettingSmartRoutingPtrOutputWithContext(context.Context) ZoneSettingSmartRoutingPtrOutput
}

type zoneSettingSmartRoutingPtrType ZoneSettingSmartRoutingArgs

func ZoneSettingSmartRoutingPtr(v *ZoneSettingSmartRoutingArgs) ZoneSettingSmartRoutingPtrInput {
	return (*zoneSettingSmartRoutingPtrType)(v)
}

func (*zoneSettingSmartRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingSmartRouting)(nil)).Elem()
}

func (i *zoneSettingSmartRoutingPtrType) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return i.ToZoneSettingSmartRoutingPtrOutputWithContext(context.Background())
}

func (i *zoneSettingSmartRoutingPtrType) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingSmartRoutingPtrOutput)
}

type ZoneSettingSmartRoutingOutput struct{ *pulumi.OutputState }

func (ZoneSettingSmartRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingSmartRouting)(nil)).Elem()
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingOutput() ZoneSettingSmartRoutingOutput {
	return o
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingOutput {
	return o
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return o.ToZoneSettingSmartRoutingPtrOutputWithContext(context.Background())
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingSmartRouting) *ZoneSettingSmartRouting {
		return &v
	}).(ZoneSettingSmartRoutingPtrOutput)
}

// Whether to enable HTTP2 origin-pull.
func (o ZoneSettingSmartRoutingOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingSmartRouting) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingSmartRoutingPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingSmartRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingSmartRouting)(nil)).Elem()
}

func (o ZoneSettingSmartRoutingPtrOutput) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return o
}

func (o ZoneSettingSmartRoutingPtrOutput) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return o
}

func (o ZoneSettingSmartRoutingPtrOutput) Elem() ZoneSettingSmartRoutingOutput {
	return o.ApplyT(func(v *ZoneSettingSmartRouting) ZoneSettingSmartRouting {
		if v != nil {
			return *v
		}
		var ret ZoneSettingSmartRouting
		return ret
	}).(ZoneSettingSmartRoutingOutput)
}

// Whether to enable HTTP2 origin-pull.
func (o ZoneSettingSmartRoutingPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingSmartRouting) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingUpstreamHttp2 struct {
	// Cache configuration switch.
	Switch string `pulumi:"switch"`
}

// ZoneSettingUpstreamHttp2Input is an input type that accepts ZoneSettingUpstreamHttp2Args and ZoneSettingUpstreamHttp2Output values.
// You can construct a concrete instance of `ZoneSettingUpstreamHttp2Input` via:
//
//	ZoneSettingUpstreamHttp2Args{...}
type ZoneSettingUpstreamHttp2Input interface {
	pulumi.Input

	ToZoneSettingUpstreamHttp2Output() ZoneSettingUpstreamHttp2Output
	ToZoneSettingUpstreamHttp2OutputWithContext(context.Context) ZoneSettingUpstreamHttp2Output
}

type ZoneSettingUpstreamHttp2Args struct {
	// Cache configuration switch.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingUpstreamHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2Output() ZoneSettingUpstreamHttp2Output {
	return i.ToZoneSettingUpstreamHttp2OutputWithContext(context.Background())
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2OutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingUpstreamHttp2Output)
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return i.ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Background())
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingUpstreamHttp2Output).ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx)
}

// ZoneSettingUpstreamHttp2PtrInput is an input type that accepts ZoneSettingUpstreamHttp2Args, ZoneSettingUpstreamHttp2Ptr and ZoneSettingUpstreamHttp2PtrOutput values.
// You can construct a concrete instance of `ZoneSettingUpstreamHttp2PtrInput` via:
//
//	        ZoneSettingUpstreamHttp2Args{...}
//
//	or:
//
//	        nil
type ZoneSettingUpstreamHttp2PtrInput interface {
	pulumi.Input

	ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput
	ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Context) ZoneSettingUpstreamHttp2PtrOutput
}

type zoneSettingUpstreamHttp2PtrType ZoneSettingUpstreamHttp2Args

func ZoneSettingUpstreamHttp2Ptr(v *ZoneSettingUpstreamHttp2Args) ZoneSettingUpstreamHttp2PtrInput {
	return (*zoneSettingUpstreamHttp2PtrType)(v)
}

func (*zoneSettingUpstreamHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (i *zoneSettingUpstreamHttp2PtrType) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return i.ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Background())
}

func (i *zoneSettingUpstreamHttp2PtrType) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingUpstreamHttp2PtrOutput)
}

type ZoneSettingUpstreamHttp2Output struct{ *pulumi.OutputState }

func (ZoneSettingUpstreamHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2Output() ZoneSettingUpstreamHttp2Output {
	return o
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2OutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2Output {
	return o
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return o.ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Background())
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingUpstreamHttp2) *ZoneSettingUpstreamHttp2 {
		return &v
	}).(ZoneSettingUpstreamHttp2PtrOutput)
}

// Cache configuration switch.
func (o ZoneSettingUpstreamHttp2Output) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingUpstreamHttp2) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingUpstreamHttp2PtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingUpstreamHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (o ZoneSettingUpstreamHttp2PtrOutput) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return o
}

func (o ZoneSettingUpstreamHttp2PtrOutput) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return o
}

func (o ZoneSettingUpstreamHttp2PtrOutput) Elem() ZoneSettingUpstreamHttp2Output {
	return o.ApplyT(func(v *ZoneSettingUpstreamHttp2) ZoneSettingUpstreamHttp2 {
		if v != nil {
			return *v
		}
		var ret ZoneSettingUpstreamHttp2
		return ret
	}).(ZoneSettingUpstreamHttp2Output)
}

// Cache configuration switch.
func (o ZoneSettingUpstreamHttp2PtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingUpstreamHttp2) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingWebSocket struct {
	// Whether to enable custom WebSocket timeout setting. When it's off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
	Switch string `pulumi:"switch"`
	// Sets timeout period in seconds. Maximum value: 120.
	Timeout *int `pulumi:"timeout"`
}

// ZoneSettingWebSocketInput is an input type that accepts ZoneSettingWebSocketArgs and ZoneSettingWebSocketOutput values.
// You can construct a concrete instance of `ZoneSettingWebSocketInput` via:
//
//	ZoneSettingWebSocketArgs{...}
type ZoneSettingWebSocketInput interface {
	pulumi.Input

	ToZoneSettingWebSocketOutput() ZoneSettingWebSocketOutput
	ToZoneSettingWebSocketOutputWithContext(context.Context) ZoneSettingWebSocketOutput
}

type ZoneSettingWebSocketArgs struct {
	// Whether to enable custom WebSocket timeout setting. When it's off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
	Switch pulumi.StringInput `pulumi:"switch"`
	// Sets timeout period in seconds. Maximum value: 120.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (ZoneSettingWebSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingWebSocket)(nil)).Elem()
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketOutput() ZoneSettingWebSocketOutput {
	return i.ToZoneSettingWebSocketOutputWithContext(context.Background())
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketOutputWithContext(ctx context.Context) ZoneSettingWebSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingWebSocketOutput)
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return i.ToZoneSettingWebSocketPtrOutputWithContext(context.Background())
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingWebSocketOutput).ToZoneSettingWebSocketPtrOutputWithContext(ctx)
}

// ZoneSettingWebSocketPtrInput is an input type that accepts ZoneSettingWebSocketArgs, ZoneSettingWebSocketPtr and ZoneSettingWebSocketPtrOutput values.
// You can construct a concrete instance of `ZoneSettingWebSocketPtrInput` via:
//
//	        ZoneSettingWebSocketArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingWebSocketPtrInput interface {
	pulumi.Input

	ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput
	ToZoneSettingWebSocketPtrOutputWithContext(context.Context) ZoneSettingWebSocketPtrOutput
}

type zoneSettingWebSocketPtrType ZoneSettingWebSocketArgs

func ZoneSettingWebSocketPtr(v *ZoneSettingWebSocketArgs) ZoneSettingWebSocketPtrInput {
	return (*zoneSettingWebSocketPtrType)(v)
}

func (*zoneSettingWebSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingWebSocket)(nil)).Elem()
}

func (i *zoneSettingWebSocketPtrType) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return i.ToZoneSettingWebSocketPtrOutputWithContext(context.Background())
}

func (i *zoneSettingWebSocketPtrType) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingWebSocketPtrOutput)
}

type ZoneSettingWebSocketOutput struct{ *pulumi.OutputState }

func (ZoneSettingWebSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingWebSocket)(nil)).Elem()
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketOutput() ZoneSettingWebSocketOutput {
	return o
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketOutputWithContext(ctx context.Context) ZoneSettingWebSocketOutput {
	return o
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return o.ToZoneSettingWebSocketPtrOutputWithContext(context.Background())
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingWebSocket) *ZoneSettingWebSocket {
		return &v
	}).(ZoneSettingWebSocketPtrOutput)
}

// Whether to enable custom WebSocket timeout setting. When it's off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
func (o ZoneSettingWebSocketOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingWebSocket) string { return v.Switch }).(pulumi.StringOutput)
}

// Sets timeout period in seconds. Maximum value: 120.
func (o ZoneSettingWebSocketOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingWebSocket) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ZoneSettingWebSocketPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingWebSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingWebSocket)(nil)).Elem()
}

func (o ZoneSettingWebSocketPtrOutput) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return o
}

func (o ZoneSettingWebSocketPtrOutput) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return o
}

func (o ZoneSettingWebSocketPtrOutput) Elem() ZoneSettingWebSocketOutput {
	return o.ApplyT(func(v *ZoneSettingWebSocket) ZoneSettingWebSocket {
		if v != nil {
			return *v
		}
		var ret ZoneSettingWebSocket
		return ret
	}).(ZoneSettingWebSocketOutput)
}

// Whether to enable custom WebSocket timeout setting. When it's off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
func (o ZoneSettingWebSocketPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingWebSocket) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

// Sets timeout period in seconds. Maximum value: 120.
func (o ZoneSettingWebSocketPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingWebSocket) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type GetRuleEngineSettingsAction struct {
	// Action name.
	Action string `pulumi:"action"`
	// Action properties.
	Properties []GetRuleEngineSettingsActionProperty `pulumi:"properties"`
}

// GetRuleEngineSettingsActionInput is an input type that accepts GetRuleEngineSettingsActionArgs and GetRuleEngineSettingsActionOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionInput` via:
//
//	GetRuleEngineSettingsActionArgs{...}
type GetRuleEngineSettingsActionInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionOutput() GetRuleEngineSettingsActionOutput
	ToGetRuleEngineSettingsActionOutputWithContext(context.Context) GetRuleEngineSettingsActionOutput
}

type GetRuleEngineSettingsActionArgs struct {
	// Action name.
	Action pulumi.StringInput `pulumi:"action"`
	// Action properties.
	Properties GetRuleEngineSettingsActionPropertyArrayInput `pulumi:"properties"`
}

func (GetRuleEngineSettingsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsAction)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionArgs) ToGetRuleEngineSettingsActionOutput() GetRuleEngineSettingsActionOutput {
	return i.ToGetRuleEngineSettingsActionOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionArgs) ToGetRuleEngineSettingsActionOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionOutput)
}

// GetRuleEngineSettingsActionArrayInput is an input type that accepts GetRuleEngineSettingsActionArray and GetRuleEngineSettingsActionArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionArrayInput` via:
//
//	GetRuleEngineSettingsActionArray{ GetRuleEngineSettingsActionArgs{...} }
type GetRuleEngineSettingsActionArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionArrayOutput() GetRuleEngineSettingsActionArrayOutput
	ToGetRuleEngineSettingsActionArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionArrayOutput
}

type GetRuleEngineSettingsActionArray []GetRuleEngineSettingsActionInput

func (GetRuleEngineSettingsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsAction)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionArray) ToGetRuleEngineSettingsActionArrayOutput() GetRuleEngineSettingsActionArrayOutput {
	return i.ToGetRuleEngineSettingsActionArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionArray) ToGetRuleEngineSettingsActionArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionArrayOutput)
}

type GetRuleEngineSettingsActionOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsAction)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionOutput) ToGetRuleEngineSettingsActionOutput() GetRuleEngineSettingsActionOutput {
	return o
}

func (o GetRuleEngineSettingsActionOutput) ToGetRuleEngineSettingsActionOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionOutput {
	return o
}

// Action name.
func (o GetRuleEngineSettingsActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsAction) string { return v.Action }).(pulumi.StringOutput)
}

// Action properties.
func (o GetRuleEngineSettingsActionOutput) Properties() GetRuleEngineSettingsActionPropertyArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsAction) []GetRuleEngineSettingsActionProperty { return v.Properties }).(GetRuleEngineSettingsActionPropertyArrayOutput)
}

type GetRuleEngineSettingsActionArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsAction)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionArrayOutput) ToGetRuleEngineSettingsActionArrayOutput() GetRuleEngineSettingsActionArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionArrayOutput) ToGetRuleEngineSettingsActionArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsAction {
		return vs[0].([]GetRuleEngineSettingsAction)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionOutput)
}

type GetRuleEngineSettingsActionProperty struct {
	// Associative properties of this property, they are all required. Note: This field may return null, indicating that no valid value can be obtained.
	ChoiceProperties []GetRuleEngineSettingsActionPropertyChoiceProperty `pulumi:"choiceProperties"`
	// The choices which can be used. This list may be empty.
	ChoicesValues []string `pulumi:"choicesValues"`
	// Special parameter. Note: This field may return null, indicating that no valid value can be obtained.
	ExtraParameters []GetRuleEngineSettingsActionPropertyExtraParameter `pulumi:"extraParameters"`
	// Whether this property is allowed to set empty.
	IsAllowEmpty bool `pulumi:"isAllowEmpty"`
	// Whether this property is allowed to set multiple values.
	IsMultiple bool `pulumi:"isMultiple"`
	// Max integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Max int `pulumi:"max"`
	// Min integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Min int `pulumi:"min"`
	// Property name.
	Name string `pulumi:"name"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type string `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyInput is an input type that accepts GetRuleEngineSettingsActionPropertyArgs and GetRuleEngineSettingsActionPropertyOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyInput` via:
//
//	GetRuleEngineSettingsActionPropertyArgs{...}
type GetRuleEngineSettingsActionPropertyInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyOutput() GetRuleEngineSettingsActionPropertyOutput
	ToGetRuleEngineSettingsActionPropertyOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyOutput
}

type GetRuleEngineSettingsActionPropertyArgs struct {
	// Associative properties of this property, they are all required. Note: This field may return null, indicating that no valid value can be obtained.
	ChoiceProperties GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput `pulumi:"choiceProperties"`
	// The choices which can be used. This list may be empty.
	ChoicesValues pulumi.StringArrayInput `pulumi:"choicesValues"`
	// Special parameter. Note: This field may return null, indicating that no valid value can be obtained.
	ExtraParameters GetRuleEngineSettingsActionPropertyExtraParameterArrayInput `pulumi:"extraParameters"`
	// Whether this property is allowed to set empty.
	IsAllowEmpty pulumi.BoolInput `pulumi:"isAllowEmpty"`
	// Whether this property is allowed to set multiple values.
	IsMultiple pulumi.BoolInput `pulumi:"isMultiple"`
	// Max integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Max pulumi.IntInput `pulumi:"max"`
	// Min integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Min pulumi.IntInput `pulumi:"min"`
	// Property name.
	Name pulumi.StringInput `pulumi:"name"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyArgs) ToGetRuleEngineSettingsActionPropertyOutput() GetRuleEngineSettingsActionPropertyOutput {
	return i.ToGetRuleEngineSettingsActionPropertyOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyArgs) ToGetRuleEngineSettingsActionPropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyOutput)
}

// GetRuleEngineSettingsActionPropertyArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyArray and GetRuleEngineSettingsActionPropertyArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyArray{ GetRuleEngineSettingsActionPropertyArgs{...} }
type GetRuleEngineSettingsActionPropertyArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyArrayOutput() GetRuleEngineSettingsActionPropertyArrayOutput
	ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyArrayOutput
}

type GetRuleEngineSettingsActionPropertyArray []GetRuleEngineSettingsActionPropertyInput

func (GetRuleEngineSettingsActionPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyArray) ToGetRuleEngineSettingsActionPropertyArrayOutput() GetRuleEngineSettingsActionPropertyArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyArray) ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyArrayOutput)
}

type GetRuleEngineSettingsActionPropertyOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyOutput) ToGetRuleEngineSettingsActionPropertyOutput() GetRuleEngineSettingsActionPropertyOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyOutput) ToGetRuleEngineSettingsActionPropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyOutput {
	return o
}

// Associative properties of this property, they are all required. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetRuleEngineSettingsActionPropertyOutput) ChoiceProperties() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) []GetRuleEngineSettingsActionPropertyChoiceProperty {
		return v.ChoiceProperties
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput)
}

// The choices which can be used. This list may be empty.
func (o GetRuleEngineSettingsActionPropertyOutput) ChoicesValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) []string { return v.ChoicesValues }).(pulumi.StringArrayOutput)
}

// Special parameter. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetRuleEngineSettingsActionPropertyOutput) ExtraParameters() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) []GetRuleEngineSettingsActionPropertyExtraParameter {
		return v.ExtraParameters
	}).(GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput)
}

// Whether this property is allowed to set empty.
func (o GetRuleEngineSettingsActionPropertyOutput) IsAllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) bool { return v.IsAllowEmpty }).(pulumi.BoolOutput)
}

// Whether this property is allowed to set multiple values.
func (o GetRuleEngineSettingsActionPropertyOutput) IsMultiple() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) bool { return v.IsMultiple }).(pulumi.BoolOutput)
}

// Max integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
func (o GetRuleEngineSettingsActionPropertyOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) int { return v.Max }).(pulumi.IntOutput)
}

// Min integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
func (o GetRuleEngineSettingsActionPropertyOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) int { return v.Min }).(pulumi.IntOutput)
}

// Property name.
func (o GetRuleEngineSettingsActionPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) string { return v.Name }).(pulumi.StringOutput)
}

// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
func (o GetRuleEngineSettingsActionPropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyArrayOutput() GetRuleEngineSettingsActionPropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionProperty {
		return vs[0].([]GetRuleEngineSettingsActionProperty)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyOutput)
}

type GetRuleEngineSettingsActionPropertyChoiceProperty struct {
	// The choices which can be used. This list may be empty.
	ChoicesValues []string `pulumi:"choicesValues"`
	// Special parameter. Note: This field may return null, indicating that no valid value can be obtained.
	ExtraParameters []GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter `pulumi:"extraParameters"`
	// Whether this property is allowed to set empty.
	IsAllowEmpty bool `pulumi:"isAllowEmpty"`
	// Whether this property is allowed to set multiple values.
	IsMultiple bool `pulumi:"isMultiple"`
	// Max integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Max int `pulumi:"max"`
	// Min integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Min int `pulumi:"min"`
	// Property name.
	Name string `pulumi:"name"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type string `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyChoicePropertyInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyArgs and GetRuleEngineSettingsActionPropertyChoicePropertyOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyArgs{...}
type GetRuleEngineSettingsActionPropertyChoicePropertyInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyOutput() GetRuleEngineSettingsActionPropertyChoicePropertyOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyArgs struct {
	// The choices which can be used. This list may be empty.
	ChoicesValues pulumi.StringArrayInput `pulumi:"choicesValues"`
	// Special parameter. Note: This field may return null, indicating that no valid value can be obtained.
	ExtraParameters GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput `pulumi:"extraParameters"`
	// Whether this property is allowed to set empty.
	IsAllowEmpty pulumi.BoolInput `pulumi:"isAllowEmpty"`
	// Whether this property is allowed to set multiple values.
	IsMultiple pulumi.BoolInput `pulumi:"isMultiple"`
	// Max integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Max pulumi.IntInput `pulumi:"max"`
	// Min integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
	Min pulumi.IntInput `pulumi:"min"`
	// Property name.
	Name pulumi.StringInput `pulumi:"name"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyChoicePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutput() GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyOutput)
}

// GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyArray and GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyArray{ GetRuleEngineSettingsActionPropertyChoicePropertyArgs{...} }
type GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyArray []GetRuleEngineSettingsActionPropertyChoicePropertyInput

func (GetRuleEngineSettingsActionPropertyChoicePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutput() GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return o
}

// The choices which can be used. This list may be empty.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ChoicesValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) []string { return v.ChoicesValues }).(pulumi.StringArrayOutput)
}

// Special parameter. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ExtraParameters() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) []GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter {
		return v.ExtraParameters
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput)
}

// Whether this property is allowed to set empty.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) IsAllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) bool { return v.IsAllowEmpty }).(pulumi.BoolOutput)
}

// Whether this property is allowed to set multiple values.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) IsMultiple() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) bool { return v.IsMultiple }).(pulumi.BoolOutput)
}

// Max integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) int { return v.Max }).(pulumi.IntOutput)
}

// Min integer value can bse used when property type is `CUSTOM_NUM`. When `Min` and `Max` both are 0, this field is meaningless.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) int { return v.Min }).(pulumi.IntOutput)
}

// Property name.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) string { return v.Name }).(pulumi.StringOutput)
}

// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionPropertyChoiceProperty {
		return vs[0].([]GetRuleEngineSettingsActionPropertyChoiceProperty)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter struct {
	// A list of choices which can be used when `Type` is `CHOICE`.
	Choices []string `pulumi:"choices"`
	// Parameter name. Valid values:- `Action`: this extra parameter is required when modify HTTP header, this action should be a `RewriteAction`.- `StatusCode`: this extra parameter is required when modify HTTP status code, this action should be a `CodeAction`.- `NULL`: this action should be a `NormalAction`.
	Id string `pulumi:"id"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type string `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs and GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs{...}
type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs struct {
	// A list of choices which can be used when `Type` is `CHOICE`.
	Choices pulumi.StringArrayInput `pulumi:"choices"`
	// Parameter name. Valid values:- `Action`: this extra parameter is required when modify HTTP header, this action should be a `RewriteAction`.- `StatusCode`: this extra parameter is required when modify HTTP status code, this action should be a `CodeAction`.- `NULL`: this action should be a `NormalAction`.
	Id pulumi.StringInput `pulumi:"id"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput)
}

// GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray and GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray{ GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs{...} }
type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray []GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return o
}

// A list of choices which can be used when `Type` is `CHOICE`.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) Choices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter) []string { return v.Choices }).(pulumi.StringArrayOutput)
}

// Parameter name. Valid values:- `Action`: this extra parameter is required when modify HTTP header, this action should be a `RewriteAction`.- `StatusCode`: this extra parameter is required when modify HTTP status code, this action should be a `CodeAction`.- `NULL`: this action should be a `NormalAction`.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter) string { return v.Id }).(pulumi.StringOutput)
}

// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter {
		return vs[0].([]GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput)
}

type GetRuleEngineSettingsActionPropertyExtraParameter struct {
	// A list of choices which can be used when `Type` is `CHOICE`.
	Choices []string `pulumi:"choices"`
	// Parameter name. Valid values:- `Action`: this extra parameter is required when modify HTTP header, this action should be a `RewriteAction`.- `StatusCode`: this extra parameter is required when modify HTTP status code, this action should be a `CodeAction`.- `NULL`: this action should be a `NormalAction`.
	Id string `pulumi:"id"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type string `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyExtraParameterInput is an input type that accepts GetRuleEngineSettingsActionPropertyExtraParameterArgs and GetRuleEngineSettingsActionPropertyExtraParameterOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyExtraParameterInput` via:
//
//	GetRuleEngineSettingsActionPropertyExtraParameterArgs{...}
type GetRuleEngineSettingsActionPropertyExtraParameterInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyExtraParameterOutput
	ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyExtraParameterOutput
}

type GetRuleEngineSettingsActionPropertyExtraParameterArgs struct {
	// A list of choices which can be used when `Type` is `CHOICE`.
	Choices pulumi.StringArrayInput `pulumi:"choices"`
	// Parameter name. Valid values:- `Action`: this extra parameter is required when modify HTTP header, this action should be a `RewriteAction`.- `StatusCode`: this extra parameter is required when modify HTTP status code, this action should be a `CodeAction`.- `NULL`: this action should be a `NormalAction`.
	Id pulumi.StringInput `pulumi:"id"`
	// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyExtraParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return i.ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyExtraParameterOutput)
}

// GetRuleEngineSettingsActionPropertyExtraParameterArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyExtraParameterArray and GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyExtraParameterArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyExtraParameterArray{ GetRuleEngineSettingsActionPropertyExtraParameterArgs{...} }
type GetRuleEngineSettingsActionPropertyExtraParameterArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput
	ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput
}

type GetRuleEngineSettingsActionPropertyExtraParameterArray []GetRuleEngineSettingsActionPropertyExtraParameterInput

func (GetRuleEngineSettingsActionPropertyExtraParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput)
}

type GetRuleEngineSettingsActionPropertyExtraParameterOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyExtraParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return o
}

// A list of choices which can be used when `Type` is `CHOICE`.
func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) Choices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyExtraParameter) []string { return v.Choices }).(pulumi.StringArrayOutput)
}

// Parameter name. Valid values:- `Action`: this extra parameter is required when modify HTTP header, this action should be a `RewriteAction`.- `StatusCode`: this extra parameter is required when modify HTTP status code, this action should be a `CodeAction`.- `NULL`: this action should be a `NormalAction`.
func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyExtraParameter) string { return v.Id }).(pulumi.StringOutput)
}

// Property value type. Valid values:- `CHOICE`: enum type, must select one of the value in `ChoicesValue`.- `TOGGLE`: switch type, must select one of the value in `ChoicesValue`.- `OBJECT`: object type, the `ChoiceProperties` list all properties of the object.- `CUSTOM_NUM`: integer type.- `CUSTOM_STRING`: string type.
func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyExtraParameter) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionPropertyExtraParameter {
		return vs[0].([]GetRuleEngineSettingsActionPropertyExtraParameter)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyExtraParameterOutput)
}

type GetZoneAvailablePlansPlanInfoList struct {
	// Acceleration area of the plan. Valid value: `mainland`, `overseas`.
	Area string `pulumi:"area"`
	// Settlement Currency Type. Valid values: `CNY`, `USD`.
	Currency string `pulumi:"currency"`
	// The number of fluxes included in the zone plan. Unit: Byte.
	Flux int `pulumi:"flux"`
	// Billing cycle. Valid values:
	Frequency string `pulumi:"frequency"`
	// Plan type.
	PlanType string `pulumi:"planType"`
	// Price of the plan. Unit: cent.
	Price float64 `pulumi:"price"`
	// The number of requests included in the zone plan.
	Request int `pulumi:"request"`
	// The number of zones this zone plan can bind.
	SiteNumber int `pulumi:"siteNumber"`
}

// GetZoneAvailablePlansPlanInfoListInput is an input type that accepts GetZoneAvailablePlansPlanInfoListArgs and GetZoneAvailablePlansPlanInfoListOutput values.
// You can construct a concrete instance of `GetZoneAvailablePlansPlanInfoListInput` via:
//
//	GetZoneAvailablePlansPlanInfoListArgs{...}
type GetZoneAvailablePlansPlanInfoListInput interface {
	pulumi.Input

	ToGetZoneAvailablePlansPlanInfoListOutput() GetZoneAvailablePlansPlanInfoListOutput
	ToGetZoneAvailablePlansPlanInfoListOutputWithContext(context.Context) GetZoneAvailablePlansPlanInfoListOutput
}

type GetZoneAvailablePlansPlanInfoListArgs struct {
	// Acceleration area of the plan. Valid value: `mainland`, `overseas`.
	Area pulumi.StringInput `pulumi:"area"`
	// Settlement Currency Type. Valid values: `CNY`, `USD`.
	Currency pulumi.StringInput `pulumi:"currency"`
	// The number of fluxes included in the zone plan. Unit: Byte.
	Flux pulumi.IntInput `pulumi:"flux"`
	// Billing cycle. Valid values:
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// Plan type.
	PlanType pulumi.StringInput `pulumi:"planType"`
	// Price of the plan. Unit: cent.
	Price pulumi.Float64Input `pulumi:"price"`
	// The number of requests included in the zone plan.
	Request pulumi.IntInput `pulumi:"request"`
	// The number of zones this zone plan can bind.
	SiteNumber pulumi.IntInput `pulumi:"siteNumber"`
}

func (GetZoneAvailablePlansPlanInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (i GetZoneAvailablePlansPlanInfoListArgs) ToGetZoneAvailablePlansPlanInfoListOutput() GetZoneAvailablePlansPlanInfoListOutput {
	return i.ToGetZoneAvailablePlansPlanInfoListOutputWithContext(context.Background())
}

func (i GetZoneAvailablePlansPlanInfoListArgs) ToGetZoneAvailablePlansPlanInfoListOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneAvailablePlansPlanInfoListOutput)
}

// GetZoneAvailablePlansPlanInfoListArrayInput is an input type that accepts GetZoneAvailablePlansPlanInfoListArray and GetZoneAvailablePlansPlanInfoListArrayOutput values.
// You can construct a concrete instance of `GetZoneAvailablePlansPlanInfoListArrayInput` via:
//
//	GetZoneAvailablePlansPlanInfoListArray{ GetZoneAvailablePlansPlanInfoListArgs{...} }
type GetZoneAvailablePlansPlanInfoListArrayInput interface {
	pulumi.Input

	ToGetZoneAvailablePlansPlanInfoListArrayOutput() GetZoneAvailablePlansPlanInfoListArrayOutput
	ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(context.Context) GetZoneAvailablePlansPlanInfoListArrayOutput
}

type GetZoneAvailablePlansPlanInfoListArray []GetZoneAvailablePlansPlanInfoListInput

func (GetZoneAvailablePlansPlanInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (i GetZoneAvailablePlansPlanInfoListArray) ToGetZoneAvailablePlansPlanInfoListArrayOutput() GetZoneAvailablePlansPlanInfoListArrayOutput {
	return i.ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(context.Background())
}

func (i GetZoneAvailablePlansPlanInfoListArray) ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneAvailablePlansPlanInfoListArrayOutput)
}

type GetZoneAvailablePlansPlanInfoListOutput struct{ *pulumi.OutputState }

func (GetZoneAvailablePlansPlanInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (o GetZoneAvailablePlansPlanInfoListOutput) ToGetZoneAvailablePlansPlanInfoListOutput() GetZoneAvailablePlansPlanInfoListOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListOutput) ToGetZoneAvailablePlansPlanInfoListOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListOutput {
	return o
}

// Acceleration area of the plan. Valid value: `mainland`, `overseas`.
func (o GetZoneAvailablePlansPlanInfoListOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.Area }).(pulumi.StringOutput)
}

// Settlement Currency Type. Valid values: `CNY`, `USD`.
func (o GetZoneAvailablePlansPlanInfoListOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.Currency }).(pulumi.StringOutput)
}

// The number of fluxes included in the zone plan. Unit: Byte.
func (o GetZoneAvailablePlansPlanInfoListOutput) Flux() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.Flux }).(pulumi.IntOutput)
}

// Billing cycle. Valid values:
func (o GetZoneAvailablePlansPlanInfoListOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.Frequency }).(pulumi.StringOutput)
}

// Plan type.
func (o GetZoneAvailablePlansPlanInfoListOutput) PlanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.PlanType }).(pulumi.StringOutput)
}

// Price of the plan. Unit: cent.
func (o GetZoneAvailablePlansPlanInfoListOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) float64 { return v.Price }).(pulumi.Float64Output)
}

// The number of requests included in the zone plan.
func (o GetZoneAvailablePlansPlanInfoListOutput) Request() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.Request }).(pulumi.IntOutput)
}

// The number of zones this zone plan can bind.
func (o GetZoneAvailablePlansPlanInfoListOutput) SiteNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.SiteNumber }).(pulumi.IntOutput)
}

type GetZoneAvailablePlansPlanInfoListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneAvailablePlansPlanInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (o GetZoneAvailablePlansPlanInfoListArrayOutput) ToGetZoneAvailablePlansPlanInfoListArrayOutput() GetZoneAvailablePlansPlanInfoListArrayOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListArrayOutput) ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListArrayOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListArrayOutput) Index(i pulumi.IntInput) GetZoneAvailablePlansPlanInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneAvailablePlansPlanInfoList {
		return vs[0].([]GetZoneAvailablePlansPlanInfoList)[vs[1].(int)]
	}).(GetZoneAvailablePlansPlanInfoListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccelerationDomainOriginInfoInput)(nil)).Elem(), AccelerationDomainOriginInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccelerationDomainOriginInfoPtrInput)(nil)).Elem(), AccelerationDomainOriginInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccelerationDomainOriginInfoPrivateParameterInput)(nil)).Elem(), AccelerationDomainOriginInfoPrivateParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccelerationDomainOriginInfoPrivateParameterArrayInput)(nil)).Elem(), AccelerationDomainOriginInfoPrivateParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyIpv6Input)(nil)).Elem(), ApplicationProxyIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyIpv6PtrInput)(nil)).Elem(), ApplicationProxyIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigServerCertInfoInput)(nil)).Elem(), CertificateConfigServerCertInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigServerCertInfoArrayInput)(nil)).Elem(), CertificateConfigServerCertInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuleFunctionRuleConditionInput)(nil)).Elem(), FunctionRuleFunctionRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuleFunctionRuleConditionArrayInput)(nil)).Elem(), FunctionRuleFunctionRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuleFunctionRuleConditionRuleConditionInput)(nil)).Elem(), FunctionRuleFunctionRuleConditionRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuleFunctionRuleConditionRuleConditionArrayInput)(nil)).Elem(), FunctionRuleFunctionRuleConditionRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuntimeEnvironmentEnvironmentVariableInput)(nil)).Elem(), FunctionRuntimeEnvironmentEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuntimeEnvironmentEnvironmentVariableArrayInput)(nil)).Elem(), FunctionRuntimeEnvironmentEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4ProxyDdosProtectionConfigInput)(nil)).Elem(), L4ProxyDdosProtectionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*L4ProxyDdosProtectionConfigPtrInput)(nil)).Elem(), L4ProxyDdosProtectionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupRecordInput)(nil)).Elem(), OriginGroupRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupRecordArrayInput)(nil)).Elem(), OriginGroupRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupRecordPrivateParameterInput)(nil)).Elem(), OriginGroupRecordPrivateParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupRecordPrivateParameterArrayInput)(nil)).Elem(), OriginGroupRecordPrivateParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupReferenceInput)(nil)).Elem(), OriginGroupReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupReferenceArrayInput)(nil)).Elem(), OriginGroupReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryClsInput)(nil)).Elem(), RealtimeLogDeliveryClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryClsPtrInput)(nil)).Elem(), RealtimeLogDeliveryClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryCustomEndpointInput)(nil)).Elem(), RealtimeLogDeliveryCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryCustomEndpointPtrInput)(nil)).Elem(), RealtimeLogDeliveryCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryCustomEndpointHeaderInput)(nil)).Elem(), RealtimeLogDeliveryCustomEndpointHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryCustomEndpointHeaderArrayInput)(nil)).Elem(), RealtimeLogDeliveryCustomEndpointHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryCustomFieldInput)(nil)).Elem(), RealtimeLogDeliveryCustomFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryCustomFieldArrayInput)(nil)).Elem(), RealtimeLogDeliveryCustomFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryDeliveryConditionInput)(nil)).Elem(), RealtimeLogDeliveryDeliveryConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryDeliveryConditionArrayInput)(nil)).Elem(), RealtimeLogDeliveryDeliveryConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryDeliveryConditionConditionInput)(nil)).Elem(), RealtimeLogDeliveryDeliveryConditionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryDeliveryConditionConditionArrayInput)(nil)).Elem(), RealtimeLogDeliveryDeliveryConditionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryLogFormatInput)(nil)).Elem(), RealtimeLogDeliveryLogFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryLogFormatPtrInput)(nil)).Elem(), RealtimeLogDeliveryLogFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryS3Input)(nil)).Elem(), RealtimeLogDeliveryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogDeliveryS3PtrInput)(nil)).Elem(), RealtimeLogDeliveryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleInput)(nil)).Elem(), RuleEngineRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleArrayInput)(nil)).Elem(), RuleEngineRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionInput)(nil)).Elem(), RuleEngineRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionArrayInput)(nil)).Elem(), RuleEngineRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionInput)(nil)).Elem(), RuleEngineRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionPtrInput)(nil)).Elem(), RuleEngineRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionParameterInput)(nil)).Elem(), RuleEngineRuleActionCodeActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleActionCodeActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionInput)(nil)).Elem(), RuleEngineRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionPtrInput)(nil)).Elem(), RuleEngineRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionParameterInput)(nil)).Elem(), RuleEngineRuleActionNormalActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleActionNormalActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionPtrInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameterInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrInput)(nil)).Elem(), RuleEngineRuleOrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrArrayInput)(nil)).Elem(), RuleEngineRuleOrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrAndInput)(nil)).Elem(), RuleEngineRuleOrAndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrAndArrayInput)(nil)).Elem(), RuleEngineRuleOrAndArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleInput)(nil)).Elem(), RuleEngineRuleSubRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionPtrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameterInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionPtrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameterInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAndInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrAndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAndArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrAndArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityIpGroupIpGroupInput)(nil)).Elem(), SecurityIpGroupIpGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityIpGroupIpGroupPtrInput)(nil)).Elem(), SecurityIpGroupIpGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneOwnershipVerificationInput)(nil)).Elem(), ZoneOwnershipVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneOwnershipVerificationArrayInput)(nil)).Elem(), ZoneOwnershipVerificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneOwnershipVerificationDnsVerificationInput)(nil)).Elem(), ZoneOwnershipVerificationDnsVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneOwnershipVerificationDnsVerificationArrayInput)(nil)).Elem(), ZoneOwnershipVerificationDnsVerificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheInput)(nil)).Elem(), ZoneSettingCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCachePtrInput)(nil)).Elem(), ZoneSettingCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheCacheInput)(nil)).Elem(), ZoneSettingCacheCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheCachePtrInput)(nil)).Elem(), ZoneSettingCacheCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheFollowOriginInput)(nil)).Elem(), ZoneSettingCacheFollowOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheFollowOriginPtrInput)(nil)).Elem(), ZoneSettingCacheFollowOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyInput)(nil)).Elem(), ZoneSettingCacheKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyPtrInput)(nil)).Elem(), ZoneSettingCacheKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyQueryStringInput)(nil)).Elem(), ZoneSettingCacheKeyQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyQueryStringPtrInput)(nil)).Elem(), ZoneSettingCacheKeyQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheNoCacheInput)(nil)).Elem(), ZoneSettingCacheNoCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheNoCachePtrInput)(nil)).Elem(), ZoneSettingCacheNoCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCachePrefreshInput)(nil)).Elem(), ZoneSettingCachePrefreshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCachePrefreshPtrInput)(nil)).Elem(), ZoneSettingCachePrefreshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingClientIpHeaderInput)(nil)).Elem(), ZoneSettingClientIpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingClientIpHeaderPtrInput)(nil)).Elem(), ZoneSettingClientIpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCompressionInput)(nil)).Elem(), ZoneSettingCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCompressionPtrInput)(nil)).Elem(), ZoneSettingCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingForceRedirectInput)(nil)).Elem(), ZoneSettingForceRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingForceRedirectPtrInput)(nil)).Elem(), ZoneSettingForceRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsInput)(nil)).Elem(), ZoneSettingHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsPtrInput)(nil)).Elem(), ZoneSettingHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsHstsInput)(nil)).Elem(), ZoneSettingHttpsHstsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsHstsPtrInput)(nil)).Elem(), ZoneSettingHttpsHstsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingIpv6Input)(nil)).Elem(), ZoneSettingIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingIpv6PtrInput)(nil)).Elem(), ZoneSettingIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingMaxAgeInput)(nil)).Elem(), ZoneSettingMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingMaxAgePtrInput)(nil)).Elem(), ZoneSettingMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOfflineCacheInput)(nil)).Elem(), ZoneSettingOfflineCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOfflineCachePtrInput)(nil)).Elem(), ZoneSettingOfflineCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOriginInput)(nil)).Elem(), ZoneSettingOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOriginPtrInput)(nil)).Elem(), ZoneSettingOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingPostMaxSizeInput)(nil)).Elem(), ZoneSettingPostMaxSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingPostMaxSizePtrInput)(nil)).Elem(), ZoneSettingPostMaxSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingQuicInput)(nil)).Elem(), ZoneSettingQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingQuicPtrInput)(nil)).Elem(), ZoneSettingQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingSmartRoutingInput)(nil)).Elem(), ZoneSettingSmartRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingSmartRoutingPtrInput)(nil)).Elem(), ZoneSettingSmartRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingUpstreamHttp2Input)(nil)).Elem(), ZoneSettingUpstreamHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingUpstreamHttp2PtrInput)(nil)).Elem(), ZoneSettingUpstreamHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingWebSocketInput)(nil)).Elem(), ZoneSettingWebSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingWebSocketPtrInput)(nil)).Elem(), ZoneSettingWebSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionInput)(nil)).Elem(), GetRuleEngineSettingsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameterInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyExtraParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameterArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyExtraParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneAvailablePlansPlanInfoListInput)(nil)).Elem(), GetZoneAvailablePlansPlanInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneAvailablePlansPlanInfoListArrayInput)(nil)).Elem(), GetZoneAvailablePlansPlanInfoListArray{})
	pulumi.RegisterOutputType(AccelerationDomainOriginInfoOutput{})
	pulumi.RegisterOutputType(AccelerationDomainOriginInfoPtrOutput{})
	pulumi.RegisterOutputType(AccelerationDomainOriginInfoPrivateParameterOutput{})
	pulumi.RegisterOutputType(AccelerationDomainOriginInfoPrivateParameterArrayOutput{})
	pulumi.RegisterOutputType(ApplicationProxyIpv6Output{})
	pulumi.RegisterOutputType(ApplicationProxyIpv6PtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigServerCertInfoOutput{})
	pulumi.RegisterOutputType(CertificateConfigServerCertInfoArrayOutput{})
	pulumi.RegisterOutputType(FunctionRuleFunctionRuleConditionOutput{})
	pulumi.RegisterOutputType(FunctionRuleFunctionRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(FunctionRuleFunctionRuleConditionRuleConditionOutput{})
	pulumi.RegisterOutputType(FunctionRuleFunctionRuleConditionRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(FunctionRuntimeEnvironmentEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(FunctionRuntimeEnvironmentEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(L4ProxyDdosProtectionConfigOutput{})
	pulumi.RegisterOutputType(L4ProxyDdosProtectionConfigPtrOutput{})
	pulumi.RegisterOutputType(OriginGroupRecordOutput{})
	pulumi.RegisterOutputType(OriginGroupRecordArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupRecordPrivateParameterOutput{})
	pulumi.RegisterOutputType(OriginGroupRecordPrivateParameterArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupReferenceOutput{})
	pulumi.RegisterOutputType(OriginGroupReferenceArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryClsOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryClsPtrOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryCustomEndpointOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryCustomEndpointPtrOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryCustomEndpointHeaderOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryCustomEndpointHeaderArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryCustomFieldOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryCustomFieldArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryDeliveryConditionOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryDeliveryConditionArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryDeliveryConditionConditionOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryDeliveryConditionConditionArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryLogFormatOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryLogFormatPtrOutput{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryS3Output{})
	pulumi.RegisterOutputType(RealtimeLogDeliveryS3PtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrAndOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrAndArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrAndOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrAndArrayOutput{})
	pulumi.RegisterOutputType(SecurityIpGroupIpGroupOutput{})
	pulumi.RegisterOutputType(SecurityIpGroupIpGroupPtrOutput{})
	pulumi.RegisterOutputType(ZoneOwnershipVerificationOutput{})
	pulumi.RegisterOutputType(ZoneOwnershipVerificationArrayOutput{})
	pulumi.RegisterOutputType(ZoneOwnershipVerificationDnsVerificationOutput{})
	pulumi.RegisterOutputType(ZoneOwnershipVerificationDnsVerificationArrayOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheFollowOriginOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheFollowOriginPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyQueryStringOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyQueryStringPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheNoCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheNoCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCachePrefreshOutput{})
	pulumi.RegisterOutputType(ZoneSettingCachePrefreshPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingClientIpHeaderOutput{})
	pulumi.RegisterOutputType(ZoneSettingClientIpHeaderPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCompressionOutput{})
	pulumi.RegisterOutputType(ZoneSettingCompressionPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingForceRedirectOutput{})
	pulumi.RegisterOutputType(ZoneSettingForceRedirectPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsHstsOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsHstsPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingIpv6Output{})
	pulumi.RegisterOutputType(ZoneSettingIpv6PtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingMaxAgeOutput{})
	pulumi.RegisterOutputType(ZoneSettingMaxAgePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingOfflineCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingOfflineCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingOriginOutput{})
	pulumi.RegisterOutputType(ZoneSettingOriginPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingPostMaxSizeOutput{})
	pulumi.RegisterOutputType(ZoneSettingPostMaxSizePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingQuicOutput{})
	pulumi.RegisterOutputType(ZoneSettingQuicPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingSmartRoutingOutput{})
	pulumi.RegisterOutputType(ZoneSettingSmartRoutingPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingUpstreamHttp2Output{})
	pulumi.RegisterOutputType(ZoneSettingUpstreamHttp2PtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingWebSocketOutput{})
	pulumi.RegisterOutputType(ZoneSettingWebSocketPtrOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyExtraParameterOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput{})
	pulumi.RegisterOutputType(GetZoneAvailablePlansPlanInfoListOutput{})
	pulumi.RegisterOutputType(GetZoneAvailablePlansPlanInfoListArrayOutput{})
}
