// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AclRuleRuleList struct {
	// The default is *, which means that any host can be accessed. Currently, ckafka does not support host and ip network segment.
	Host string `pulumi:"host"`
	// Acl operation mode, enumeration value (all operations All, read Read, write Write).
	Operation string `pulumi:"operation"`
	// permission type, (Deny|Allow).
	PermissionType string `pulumi:"permissionType"`
	// User list, the default is User:, which means that any user can access, and the current user can only be the user included in the user list. The input format needs to be prefixed with [User:]. For example, user A is passed in as User:A.
	Principal string `pulumi:"principal"`
}

// AclRuleRuleListInput is an input type that accepts AclRuleRuleListArgs and AclRuleRuleListOutput values.
// You can construct a concrete instance of `AclRuleRuleListInput` via:
//
//	AclRuleRuleListArgs{...}
type AclRuleRuleListInput interface {
	pulumi.Input

	ToAclRuleRuleListOutput() AclRuleRuleListOutput
	ToAclRuleRuleListOutputWithContext(context.Context) AclRuleRuleListOutput
}

type AclRuleRuleListArgs struct {
	// The default is *, which means that any host can be accessed. Currently, ckafka does not support host and ip network segment.
	Host pulumi.StringInput `pulumi:"host"`
	// Acl operation mode, enumeration value (all operations All, read Read, write Write).
	Operation pulumi.StringInput `pulumi:"operation"`
	// permission type, (Deny|Allow).
	PermissionType pulumi.StringInput `pulumi:"permissionType"`
	// User list, the default is User:, which means that any user can access, and the current user can only be the user included in the user list. The input format needs to be prefixed with [User:]. For example, user A is passed in as User:A.
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (AclRuleRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleRuleList)(nil)).Elem()
}

func (i AclRuleRuleListArgs) ToAclRuleRuleListOutput() AclRuleRuleListOutput {
	return i.ToAclRuleRuleListOutputWithContext(context.Background())
}

func (i AclRuleRuleListArgs) ToAclRuleRuleListOutputWithContext(ctx context.Context) AclRuleRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleRuleListOutput)
}

// AclRuleRuleListArrayInput is an input type that accepts AclRuleRuleListArray and AclRuleRuleListArrayOutput values.
// You can construct a concrete instance of `AclRuleRuleListArrayInput` via:
//
//	AclRuleRuleListArray{ AclRuleRuleListArgs{...} }
type AclRuleRuleListArrayInput interface {
	pulumi.Input

	ToAclRuleRuleListArrayOutput() AclRuleRuleListArrayOutput
	ToAclRuleRuleListArrayOutputWithContext(context.Context) AclRuleRuleListArrayOutput
}

type AclRuleRuleListArray []AclRuleRuleListInput

func (AclRuleRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleRuleList)(nil)).Elem()
}

func (i AclRuleRuleListArray) ToAclRuleRuleListArrayOutput() AclRuleRuleListArrayOutput {
	return i.ToAclRuleRuleListArrayOutputWithContext(context.Background())
}

func (i AclRuleRuleListArray) ToAclRuleRuleListArrayOutputWithContext(ctx context.Context) AclRuleRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleRuleListArrayOutput)
}

type AclRuleRuleListOutput struct{ *pulumi.OutputState }

func (AclRuleRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleRuleList)(nil)).Elem()
}

func (o AclRuleRuleListOutput) ToAclRuleRuleListOutput() AclRuleRuleListOutput {
	return o
}

func (o AclRuleRuleListOutput) ToAclRuleRuleListOutputWithContext(ctx context.Context) AclRuleRuleListOutput {
	return o
}

// The default is *, which means that any host can be accessed. Currently, ckafka does not support host and ip network segment.
func (o AclRuleRuleListOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleRuleList) string { return v.Host }).(pulumi.StringOutput)
}

// Acl operation mode, enumeration value (all operations All, read Read, write Write).
func (o AclRuleRuleListOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleRuleList) string { return v.Operation }).(pulumi.StringOutput)
}

// permission type, (Deny|Allow).
func (o AclRuleRuleListOutput) PermissionType() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleRuleList) string { return v.PermissionType }).(pulumi.StringOutput)
}

// User list, the default is User:, which means that any user can access, and the current user can only be the user included in the user list. The input format needs to be prefixed with [User:]. For example, user A is passed in as User:A.
func (o AclRuleRuleListOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleRuleList) string { return v.Principal }).(pulumi.StringOutput)
}

type AclRuleRuleListArrayOutput struct{ *pulumi.OutputState }

func (AclRuleRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleRuleList)(nil)).Elem()
}

func (o AclRuleRuleListArrayOutput) ToAclRuleRuleListArrayOutput() AclRuleRuleListArrayOutput {
	return o
}

func (o AclRuleRuleListArrayOutput) ToAclRuleRuleListArrayOutputWithContext(ctx context.Context) AclRuleRuleListArrayOutput {
	return o
}

func (o AclRuleRuleListArrayOutput) Index(i pulumi.IntInput) AclRuleRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRuleRuleList {
		return vs[0].([]AclRuleRuleList)[vs[1].(int)]
	}).(AclRuleRuleListOutput)
}

type ConnectResourceClickhouseConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Password for Clickhouse connection source.
	Password string `pulumi:"password"`
	// Clickhouse connection port.
	Port int `pulumi:"port"`
	// Instance resources for Click House connection sources.
	Resource string `pulumi:"resource"`
	// Whether the Clickhouse connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// The username of the clickhouse connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceClickhouseConnectParamInput is an input type that accepts ConnectResourceClickhouseConnectParamArgs and ConnectResourceClickhouseConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceClickhouseConnectParamInput` via:
//
//	ConnectResourceClickhouseConnectParamArgs{...}
type ConnectResourceClickhouseConnectParamInput interface {
	pulumi.Input

	ToConnectResourceClickhouseConnectParamOutput() ConnectResourceClickhouseConnectParamOutput
	ToConnectResourceClickhouseConnectParamOutputWithContext(context.Context) ConnectResourceClickhouseConnectParamOutput
}

type ConnectResourceClickhouseConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Password for Clickhouse connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// Clickhouse connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resources for Click House connection sources.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the Clickhouse connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// The username of the clickhouse connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceClickhouseConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamOutput() ConnectResourceClickhouseConnectParamOutput {
	return i.ToConnectResourceClickhouseConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceClickhouseConnectParamOutput)
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return i.ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceClickhouseConnectParamArgs) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceClickhouseConnectParamOutput).ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceClickhouseConnectParamPtrInput is an input type that accepts ConnectResourceClickhouseConnectParamArgs, ConnectResourceClickhouseConnectParamPtr and ConnectResourceClickhouseConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceClickhouseConnectParamPtrInput` via:
//
//	        ConnectResourceClickhouseConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceClickhouseConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput
	ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Context) ConnectResourceClickhouseConnectParamPtrOutput
}

type connectResourceClickhouseConnectParamPtrType ConnectResourceClickhouseConnectParamArgs

func ConnectResourceClickhouseConnectParamPtr(v *ConnectResourceClickhouseConnectParamArgs) ConnectResourceClickhouseConnectParamPtrInput {
	return (*connectResourceClickhouseConnectParamPtrType)(v)
}

func (*connectResourceClickhouseConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (i *connectResourceClickhouseConnectParamPtrType) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return i.ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceClickhouseConnectParamPtrType) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceClickhouseConnectParamPtrOutput)
}

type ConnectResourceClickhouseConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceClickhouseConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamOutput() ConnectResourceClickhouseConnectParamOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return o.ToConnectResourceClickhouseConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceClickhouseConnectParamOutput) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceClickhouseConnectParam) *ConnectResourceClickhouseConnectParam {
		return &v
	}).(ConnectResourceClickhouseConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceClickhouseConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Password for Clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Clickhouse connection port.
func (o ConnectResourceClickhouseConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resources for Click House connection sources.
func (o ConnectResourceClickhouseConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the Clickhouse connection source is a self-built cluster.
func (o ConnectResourceClickhouseConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// The username of the clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceClickhouseConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceClickhouseConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceClickhouseConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceClickhouseConnectParam)(nil)).Elem()
}

func (o ConnectResourceClickhouseConnectParamPtrOutput) ToConnectResourceClickhouseConnectParamPtrOutput() ConnectResourceClickhouseConnectParamPtrOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamPtrOutput) ToConnectResourceClickhouseConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceClickhouseConnectParamPtrOutput {
	return o
}

func (o ConnectResourceClickhouseConnectParamPtrOutput) Elem() ConnectResourceClickhouseConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) ConnectResourceClickhouseConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceClickhouseConnectParam
		return ret
	}).(ConnectResourceClickhouseConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceClickhouseConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Password for Clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Clickhouse connection port.
func (o ConnectResourceClickhouseConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resources for Click House connection sources.
func (o ConnectResourceClickhouseConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether the Clickhouse connection source is a self-built cluster.
func (o ConnectResourceClickhouseConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// Instance VIP of the ClickHouse connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the source of the ClickHouse connection, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceClickhouseConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// The username of the clickhouse connection source.
func (o ConnectResourceClickhouseConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceClickhouseConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceDorisConnectParam struct {
	// Doris http CLB port, Usually mapped to port 8040 of be.
	BePort *int `pulumi:"bePort"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Doris  password.
	Password string `pulumi:"password"`
	// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
	Port int `pulumi:"port"`
	// Doris  instanceId.
	Resource string `pulumi:"resource"`
	// Doris Whether the connection source is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// Doris vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// Doris vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Doris  The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceDorisConnectParamInput is an input type that accepts ConnectResourceDorisConnectParamArgs and ConnectResourceDorisConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceDorisConnectParamInput` via:
//
//	ConnectResourceDorisConnectParamArgs{...}
type ConnectResourceDorisConnectParamInput interface {
	pulumi.Input

	ToConnectResourceDorisConnectParamOutput() ConnectResourceDorisConnectParamOutput
	ToConnectResourceDorisConnectParamOutputWithContext(context.Context) ConnectResourceDorisConnectParamOutput
}

type ConnectResourceDorisConnectParamArgs struct {
	// Doris http CLB port, Usually mapped to port 8040 of be.
	BePort pulumi.IntPtrInput `pulumi:"bePort"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Doris  password.
	Password pulumi.StringInput `pulumi:"password"`
	// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
	Port pulumi.IntInput `pulumi:"port"`
	// Doris  instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Doris Whether the connection source is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// Doris vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// Doris vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Doris  The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceDorisConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamOutput() ConnectResourceDorisConnectParamOutput {
	return i.ToConnectResourceDorisConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDorisConnectParamOutput)
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return i.ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceDorisConnectParamArgs) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDorisConnectParamOutput).ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceDorisConnectParamPtrInput is an input type that accepts ConnectResourceDorisConnectParamArgs, ConnectResourceDorisConnectParamPtr and ConnectResourceDorisConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceDorisConnectParamPtrInput` via:
//
//	        ConnectResourceDorisConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceDorisConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput
	ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Context) ConnectResourceDorisConnectParamPtrOutput
}

type connectResourceDorisConnectParamPtrType ConnectResourceDorisConnectParamArgs

func ConnectResourceDorisConnectParamPtr(v *ConnectResourceDorisConnectParamArgs) ConnectResourceDorisConnectParamPtrInput {
	return (*connectResourceDorisConnectParamPtrType)(v)
}

func (*connectResourceDorisConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (i *connectResourceDorisConnectParamPtrType) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return i.ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceDorisConnectParamPtrType) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDorisConnectParamPtrOutput)
}

type ConnectResourceDorisConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceDorisConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamOutput() ConnectResourceDorisConnectParamOutput {
	return o
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamOutput {
	return o
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return o.ToConnectResourceDorisConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceDorisConnectParamOutput) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceDorisConnectParam) *ConnectResourceDorisConnectParam {
		return &v
	}).(ConnectResourceDorisConnectParamPtrOutput)
}

// Doris http CLB port, Usually mapped to port 8040 of be.
func (o ConnectResourceDorisConnectParamOutput) BePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *int { return v.BePort }).(pulumi.IntPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDorisConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Doris  password.
func (o ConnectResourceDorisConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
func (o ConnectResourceDorisConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Doris  instanceId.
func (o ConnectResourceDorisConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Doris Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceDorisConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// Doris vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// Doris vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Doris  The username of the connection source.
func (o ConnectResourceDorisConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDorisConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceDorisConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceDorisConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDorisConnectParam)(nil)).Elem()
}

func (o ConnectResourceDorisConnectParamPtrOutput) ToConnectResourceDorisConnectParamPtrOutput() ConnectResourceDorisConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDorisConnectParamPtrOutput) ToConnectResourceDorisConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDorisConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDorisConnectParamPtrOutput) Elem() ConnectResourceDorisConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) ConnectResourceDorisConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceDorisConnectParam
		return ret
	}).(ConnectResourceDorisConnectParamOutput)
}

// Doris http CLB port, Usually mapped to port 8040 of be.
func (o ConnectResourceDorisConnectParamPtrOutput) BePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *int {
		if v == nil {
			return nil
		}
		return v.BePort
	}).(pulumi.IntPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDorisConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Doris  password.
func (o ConnectResourceDorisConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Doris jdbc CLB port, Usually mapped to port 9030 of fe.
func (o ConnectResourceDorisConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Doris  instanceId.
func (o ConnectResourceDorisConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Doris Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceDorisConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// Doris vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// Doris vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceDorisConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Doris  The username of the connection source.
func (o ConnectResourceDorisConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDorisConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceDtsConnectParam struct {
	// Id of the Dts consumption group.
	GroupId string `pulumi:"groupId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// The password of the Dts consumption group.
	Password string `pulumi:"password"`
	// Dts port.
	Port int `pulumi:"port"`
	// Dts instance Id.
	Resource string `pulumi:"resource"`
	// Topic subscribed by Dts.
	Topic string `pulumi:"topic"`
	// The account number of the Dts consumption group.
	UserName string `pulumi:"userName"`
}

// ConnectResourceDtsConnectParamInput is an input type that accepts ConnectResourceDtsConnectParamArgs and ConnectResourceDtsConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceDtsConnectParamInput` via:
//
//	ConnectResourceDtsConnectParamArgs{...}
type ConnectResourceDtsConnectParamInput interface {
	pulumi.Input

	ToConnectResourceDtsConnectParamOutput() ConnectResourceDtsConnectParamOutput
	ToConnectResourceDtsConnectParamOutputWithContext(context.Context) ConnectResourceDtsConnectParamOutput
}

type ConnectResourceDtsConnectParamArgs struct {
	// Id of the Dts consumption group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// The password of the Dts consumption group.
	Password pulumi.StringInput `pulumi:"password"`
	// Dts port.
	Port pulumi.IntInput `pulumi:"port"`
	// Dts instance Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Topic subscribed by Dts.
	Topic pulumi.StringInput `pulumi:"topic"`
	// The account number of the Dts consumption group.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceDtsConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamOutput() ConnectResourceDtsConnectParamOutput {
	return i.ToConnectResourceDtsConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDtsConnectParamOutput)
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return i.ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceDtsConnectParamArgs) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDtsConnectParamOutput).ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceDtsConnectParamPtrInput is an input type that accepts ConnectResourceDtsConnectParamArgs, ConnectResourceDtsConnectParamPtr and ConnectResourceDtsConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceDtsConnectParamPtrInput` via:
//
//	        ConnectResourceDtsConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceDtsConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput
	ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Context) ConnectResourceDtsConnectParamPtrOutput
}

type connectResourceDtsConnectParamPtrType ConnectResourceDtsConnectParamArgs

func ConnectResourceDtsConnectParamPtr(v *ConnectResourceDtsConnectParamArgs) ConnectResourceDtsConnectParamPtrInput {
	return (*connectResourceDtsConnectParamPtrType)(v)
}

func (*connectResourceDtsConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (i *connectResourceDtsConnectParamPtrType) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return i.ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceDtsConnectParamPtrType) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceDtsConnectParamPtrOutput)
}

type ConnectResourceDtsConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceDtsConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamOutput() ConnectResourceDtsConnectParamOutput {
	return o
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamOutput {
	return o
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return o.ToConnectResourceDtsConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceDtsConnectParamOutput) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceDtsConnectParam) *ConnectResourceDtsConnectParam {
		return &v
	}).(ConnectResourceDtsConnectParamPtrOutput)
}

// Id of the Dts consumption group.
func (o ConnectResourceDtsConnectParamOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.GroupId }).(pulumi.StringOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDtsConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// The password of the Dts consumption group.
func (o ConnectResourceDtsConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Dts port.
func (o ConnectResourceDtsConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Dts instance Id.
func (o ConnectResourceDtsConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Topic subscribed by Dts.
func (o ConnectResourceDtsConnectParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.Topic }).(pulumi.StringOutput)
}

// The account number of the Dts consumption group.
func (o ConnectResourceDtsConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceDtsConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceDtsConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceDtsConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceDtsConnectParam)(nil)).Elem()
}

func (o ConnectResourceDtsConnectParamPtrOutput) ToConnectResourceDtsConnectParamPtrOutput() ConnectResourceDtsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDtsConnectParamPtrOutput) ToConnectResourceDtsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceDtsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceDtsConnectParamPtrOutput) Elem() ConnectResourceDtsConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) ConnectResourceDtsConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceDtsConnectParam
		return ret
	}).(ConnectResourceDtsConnectParamOutput)
}

// Id of the Dts consumption group.
func (o ConnectResourceDtsConnectParamPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceDtsConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// The password of the Dts consumption group.
func (o ConnectResourceDtsConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Dts port.
func (o ConnectResourceDtsConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Dts instance Id.
func (o ConnectResourceDtsConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Topic subscribed by Dts.
func (o ConnectResourceDtsConnectParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

// The account number of the Dts consumption group.
func (o ConnectResourceDtsConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceDtsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceEsConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Es The password of the connection source.
	Password string `pulumi:"password"`
	// Es port.
	Port int `pulumi:"port"`
	// Instance resource of Es connection source.
	Resource string `pulumi:"resource"`
	// Whether the Es connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Es The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceEsConnectParamInput is an input type that accepts ConnectResourceEsConnectParamArgs and ConnectResourceEsConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceEsConnectParamInput` via:
//
//	ConnectResourceEsConnectParamArgs{...}
type ConnectResourceEsConnectParamInput interface {
	pulumi.Input

	ToConnectResourceEsConnectParamOutput() ConnectResourceEsConnectParamOutput
	ToConnectResourceEsConnectParamOutputWithContext(context.Context) ConnectResourceEsConnectParamOutput
}

type ConnectResourceEsConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Es The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// Es port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of Es connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the Es connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Es The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceEsConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceEsConnectParam)(nil)).Elem()
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamOutput() ConnectResourceEsConnectParamOutput {
	return i.ToConnectResourceEsConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceEsConnectParamOutput)
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return i.ToConnectResourceEsConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceEsConnectParamArgs) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceEsConnectParamOutput).ToConnectResourceEsConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceEsConnectParamPtrInput is an input type that accepts ConnectResourceEsConnectParamArgs, ConnectResourceEsConnectParamPtr and ConnectResourceEsConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceEsConnectParamPtrInput` via:
//
//	        ConnectResourceEsConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceEsConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput
	ToConnectResourceEsConnectParamPtrOutputWithContext(context.Context) ConnectResourceEsConnectParamPtrOutput
}

type connectResourceEsConnectParamPtrType ConnectResourceEsConnectParamArgs

func ConnectResourceEsConnectParamPtr(v *ConnectResourceEsConnectParamArgs) ConnectResourceEsConnectParamPtrInput {
	return (*connectResourceEsConnectParamPtrType)(v)
}

func (*connectResourceEsConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceEsConnectParam)(nil)).Elem()
}

func (i *connectResourceEsConnectParamPtrType) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return i.ToConnectResourceEsConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceEsConnectParamPtrType) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceEsConnectParamPtrOutput)
}

type ConnectResourceEsConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceEsConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceEsConnectParam)(nil)).Elem()
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamOutput() ConnectResourceEsConnectParamOutput {
	return o
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamOutput {
	return o
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return o.ToConnectResourceEsConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceEsConnectParamOutput) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceEsConnectParam) *ConnectResourceEsConnectParam {
		return &v
	}).(ConnectResourceEsConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceEsConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Es The password of the connection source.
func (o ConnectResourceEsConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// Es port.
func (o ConnectResourceEsConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of Es connection source.
func (o ConnectResourceEsConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the Es connection source is a self-built cluster.
func (o ConnectResourceEsConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Es The username of the connection source.
func (o ConnectResourceEsConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceEsConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceEsConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceEsConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceEsConnectParam)(nil)).Elem()
}

func (o ConnectResourceEsConnectParamPtrOutput) ToConnectResourceEsConnectParamPtrOutput() ConnectResourceEsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceEsConnectParamPtrOutput) ToConnectResourceEsConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceEsConnectParamPtrOutput {
	return o
}

func (o ConnectResourceEsConnectParamPtrOutput) Elem() ConnectResourceEsConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) ConnectResourceEsConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceEsConnectParam
		return ret
	}).(ConnectResourceEsConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceEsConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Es The password of the connection source.
func (o ConnectResourceEsConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Es port.
func (o ConnectResourceEsConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resource of Es connection source.
func (o ConnectResourceEsConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether the Es connection source is a self-built cluster.
func (o ConnectResourceEsConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance vip of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the Es connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceEsConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Es The username of the connection source.
func (o ConnectResourceEsConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceEsConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceKafkaConnectParam struct {
	// Kafka broker ip, Mandatory when self-built.
	BrokerAddress *string `pulumi:"brokerAddress"`
	// Whether to update to the associated Dip task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// CKafka instanceId region, Required when crossing regions.
	Region *string `pulumi:"region"`
	// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
	Resource *string `pulumi:"resource"`
	// Whether it is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
}

// ConnectResourceKafkaConnectParamInput is an input type that accepts ConnectResourceKafkaConnectParamArgs and ConnectResourceKafkaConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceKafkaConnectParamInput` via:
//
//	ConnectResourceKafkaConnectParamArgs{...}
type ConnectResourceKafkaConnectParamInput interface {
	pulumi.Input

	ToConnectResourceKafkaConnectParamOutput() ConnectResourceKafkaConnectParamOutput
	ToConnectResourceKafkaConnectParamOutputWithContext(context.Context) ConnectResourceKafkaConnectParamOutput
}

type ConnectResourceKafkaConnectParamArgs struct {
	// Kafka broker ip, Mandatory when self-built.
	BrokerAddress pulumi.StringPtrInput `pulumi:"brokerAddress"`
	// Whether to update to the associated Dip task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// CKafka instanceId region, Required when crossing regions.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Whether it is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
}

func (ConnectResourceKafkaConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamOutput() ConnectResourceKafkaConnectParamOutput {
	return i.ToConnectResourceKafkaConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceKafkaConnectParamOutput)
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return i.ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceKafkaConnectParamArgs) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceKafkaConnectParamOutput).ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceKafkaConnectParamPtrInput is an input type that accepts ConnectResourceKafkaConnectParamArgs, ConnectResourceKafkaConnectParamPtr and ConnectResourceKafkaConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceKafkaConnectParamPtrInput` via:
//
//	        ConnectResourceKafkaConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceKafkaConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput
	ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Context) ConnectResourceKafkaConnectParamPtrOutput
}

type connectResourceKafkaConnectParamPtrType ConnectResourceKafkaConnectParamArgs

func ConnectResourceKafkaConnectParamPtr(v *ConnectResourceKafkaConnectParamArgs) ConnectResourceKafkaConnectParamPtrInput {
	return (*connectResourceKafkaConnectParamPtrType)(v)
}

func (*connectResourceKafkaConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (i *connectResourceKafkaConnectParamPtrType) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return i.ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceKafkaConnectParamPtrType) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceKafkaConnectParamPtrOutput)
}

type ConnectResourceKafkaConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceKafkaConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamOutput() ConnectResourceKafkaConnectParamOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return o.ToConnectResourceKafkaConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceKafkaConnectParamOutput) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceKafkaConnectParam) *ConnectResourceKafkaConnectParam {
		return &v
	}).(ConnectResourceKafkaConnectParamPtrOutput)
}

// Kafka broker ip, Mandatory when self-built.
func (o ConnectResourceKafkaConnectParamOutput) BrokerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *string { return v.BrokerAddress }).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceKafkaConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// CKafka instanceId region, Required when crossing regions.
func (o ConnectResourceKafkaConnectParamOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceKafkaConnectParamOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster, default: false.
func (o ConnectResourceKafkaConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceKafkaConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

type ConnectResourceKafkaConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceKafkaConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceKafkaConnectParam)(nil)).Elem()
}

func (o ConnectResourceKafkaConnectParamPtrOutput) ToConnectResourceKafkaConnectParamPtrOutput() ConnectResourceKafkaConnectParamPtrOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamPtrOutput) ToConnectResourceKafkaConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceKafkaConnectParamPtrOutput {
	return o
}

func (o ConnectResourceKafkaConnectParamPtrOutput) Elem() ConnectResourceKafkaConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) ConnectResourceKafkaConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceKafkaConnectParam
		return ret
	}).(ConnectResourceKafkaConnectParamOutput)
}

// Kafka broker ip, Mandatory when self-built.
func (o ConnectResourceKafkaConnectParamPtrOutput) BrokerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.BrokerAddress
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceKafkaConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// CKafka instanceId region, Required when crossing regions.
func (o ConnectResourceKafkaConnectParamPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Kafka instanceId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceKafkaConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster, default: false.
func (o ConnectResourceKafkaConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceKafkaConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

type ConnectResourceMariadbConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// MariaDB password.
	Password string `pulumi:"password"`
	// MariaDB port.
	Port int `pulumi:"port"`
	// MariaDB instanceId.
	Resource string `pulumi:"resource"`
	// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// MariaDB The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceMariadbConnectParamInput is an input type that accepts ConnectResourceMariadbConnectParamArgs and ConnectResourceMariadbConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceMariadbConnectParamInput` via:
//
//	ConnectResourceMariadbConnectParamArgs{...}
type ConnectResourceMariadbConnectParamInput interface {
	pulumi.Input

	ToConnectResourceMariadbConnectParamOutput() ConnectResourceMariadbConnectParamOutput
	ToConnectResourceMariadbConnectParamOutputWithContext(context.Context) ConnectResourceMariadbConnectParamOutput
}

type ConnectResourceMariadbConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// MariaDB password.
	Password pulumi.StringInput `pulumi:"password"`
	// MariaDB port.
	Port pulumi.IntInput `pulumi:"port"`
	// MariaDB instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// MariaDB The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceMariadbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamOutput() ConnectResourceMariadbConnectParamOutput {
	return i.ToConnectResourceMariadbConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMariadbConnectParamOutput)
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return i.ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceMariadbConnectParamArgs) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMariadbConnectParamOutput).ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceMariadbConnectParamPtrInput is an input type that accepts ConnectResourceMariadbConnectParamArgs, ConnectResourceMariadbConnectParamPtr and ConnectResourceMariadbConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceMariadbConnectParamPtrInput` via:
//
//	        ConnectResourceMariadbConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceMariadbConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput
	ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Context) ConnectResourceMariadbConnectParamPtrOutput
}

type connectResourceMariadbConnectParamPtrType ConnectResourceMariadbConnectParamArgs

func ConnectResourceMariadbConnectParamPtr(v *ConnectResourceMariadbConnectParamArgs) ConnectResourceMariadbConnectParamPtrInput {
	return (*connectResourceMariadbConnectParamPtrType)(v)
}

func (*connectResourceMariadbConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (i *connectResourceMariadbConnectParamPtrType) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return i.ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceMariadbConnectParamPtrType) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMariadbConnectParamPtrOutput)
}

type ConnectResourceMariadbConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceMariadbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamOutput() ConnectResourceMariadbConnectParamOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return o.ToConnectResourceMariadbConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceMariadbConnectParamOutput) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceMariadbConnectParam) *ConnectResourceMariadbConnectParam {
		return &v
	}).(ConnectResourceMariadbConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMariadbConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// MariaDB password.
func (o ConnectResourceMariadbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// MariaDB port.
func (o ConnectResourceMariadbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// MariaDB instanceId.
func (o ConnectResourceMariadbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// MariaDB The username of the connection source.
func (o ConnectResourceMariadbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMariadbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceMariadbConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceMariadbConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMariadbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMariadbConnectParamPtrOutput) ToConnectResourceMariadbConnectParamPtrOutput() ConnectResourceMariadbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamPtrOutput) ToConnectResourceMariadbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMariadbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMariadbConnectParamPtrOutput) Elem() ConnectResourceMariadbConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) ConnectResourceMariadbConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceMariadbConnectParam
		return ret
	}).(ConnectResourceMariadbConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMariadbConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// MariaDB password.
func (o ConnectResourceMariadbConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// MariaDB port.
func (o ConnectResourceMariadbConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// MariaDB instanceId.
func (o ConnectResourceMariadbConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// The instance vip of the Maria DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// MariaDB vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMariadbConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// MariaDB The username of the connection source.
func (o ConnectResourceMariadbConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMariadbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceMongodbConnectParam struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Password for the source of the Mongo DB connection.
	Password string `pulumi:"password"`
	// MongoDB port.
	Port int `pulumi:"port"`
	// Instance resource of Mongo DB connection source.
	Resource string `pulumi:"resource"`
	// Whether the Mongo DB connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// The username of the Mongo DB connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceMongodbConnectParamInput is an input type that accepts ConnectResourceMongodbConnectParamArgs and ConnectResourceMongodbConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceMongodbConnectParamInput` via:
//
//	ConnectResourceMongodbConnectParamArgs{...}
type ConnectResourceMongodbConnectParamInput interface {
	pulumi.Input

	ToConnectResourceMongodbConnectParamOutput() ConnectResourceMongodbConnectParamOutput
	ToConnectResourceMongodbConnectParamOutputWithContext(context.Context) ConnectResourceMongodbConnectParamOutput
}

type ConnectResourceMongodbConnectParamArgs struct {
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Password for the source of the Mongo DB connection.
	Password pulumi.StringInput `pulumi:"password"`
	// MongoDB port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of Mongo DB connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the Mongo DB connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// The username of the Mongo DB connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceMongodbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamOutput() ConnectResourceMongodbConnectParamOutput {
	return i.ToConnectResourceMongodbConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMongodbConnectParamOutput)
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return i.ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceMongodbConnectParamArgs) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMongodbConnectParamOutput).ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceMongodbConnectParamPtrInput is an input type that accepts ConnectResourceMongodbConnectParamArgs, ConnectResourceMongodbConnectParamPtr and ConnectResourceMongodbConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceMongodbConnectParamPtrInput` via:
//
//	        ConnectResourceMongodbConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceMongodbConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput
	ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Context) ConnectResourceMongodbConnectParamPtrOutput
}

type connectResourceMongodbConnectParamPtrType ConnectResourceMongodbConnectParamArgs

func ConnectResourceMongodbConnectParamPtr(v *ConnectResourceMongodbConnectParamArgs) ConnectResourceMongodbConnectParamPtrInput {
	return (*connectResourceMongodbConnectParamPtrType)(v)
}

func (*connectResourceMongodbConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (i *connectResourceMongodbConnectParamPtrType) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return i.ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceMongodbConnectParamPtrType) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMongodbConnectParamPtrOutput)
}

type ConnectResourceMongodbConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceMongodbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamOutput() ConnectResourceMongodbConnectParamOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return o.ToConnectResourceMongodbConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceMongodbConnectParamOutput) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceMongodbConnectParam) *ConnectResourceMongodbConnectParam {
		return &v
	}).(ConnectResourceMongodbConnectParamPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMongodbConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Password for the source of the Mongo DB connection.
func (o ConnectResourceMongodbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// MongoDB port.
func (o ConnectResourceMongodbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the Mongo DB connection source is a self-built cluster.
func (o ConnectResourceMongodbConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMongodbConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
func (o ConnectResourceMongodbConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// The username of the Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMongodbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceMongodbConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceMongodbConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMongodbConnectParam)(nil)).Elem()
}

func (o ConnectResourceMongodbConnectParamPtrOutput) ToConnectResourceMongodbConnectParamPtrOutput() ConnectResourceMongodbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamPtrOutput) ToConnectResourceMongodbConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMongodbConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMongodbConnectParamPtrOutput) Elem() ConnectResourceMongodbConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) ConnectResourceMongodbConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceMongodbConnectParam
		return ret
	}).(ConnectResourceMongodbConnectParamOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMongodbConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Password for the source of the Mongo DB connection.
func (o ConnectResourceMongodbConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// MongoDB port.
func (o ConnectResourceMongodbConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resource of Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether the Mongo DB connection source is a self-built cluster.
func (o ConnectResourceMongodbConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance VIP of the Mongo DB connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMongodbConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the Mongo DB connection source, which is required when it is a Tencent Cloud instance.
func (o ConnectResourceMongodbConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// The username of the Mongo DB connection source.
func (o ConnectResourceMongodbConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMongodbConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceMysqlConnectParam struct {
	// Required when type is TDSQL C_MYSQL.
	ClusterId *string `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// Mysql connection source password.
	Password string `pulumi:"password"`
	// MySQL port.
	Port int `pulumi:"port"`
	// Instance resource of My SQL connection source.
	Resource string `pulumi:"resource"`
	// Mysql Whether the connection source is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Username of Mysql connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceMysqlConnectParamInput is an input type that accepts ConnectResourceMysqlConnectParamArgs and ConnectResourceMysqlConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceMysqlConnectParamInput` via:
//
//	ConnectResourceMysqlConnectParamArgs{...}
type ConnectResourceMysqlConnectParamInput interface {
	pulumi.Input

	ToConnectResourceMysqlConnectParamOutput() ConnectResourceMysqlConnectParamOutput
	ToConnectResourceMysqlConnectParamOutputWithContext(context.Context) ConnectResourceMysqlConnectParamOutput
}

type ConnectResourceMysqlConnectParamArgs struct {
	// Required when type is TDSQL C_MYSQL.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// Mysql connection source password.
	Password pulumi.StringInput `pulumi:"password"`
	// MySQL port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of My SQL connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Mysql Whether the connection source is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Username of Mysql connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceMysqlConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamOutput() ConnectResourceMysqlConnectParamOutput {
	return i.ToConnectResourceMysqlConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMysqlConnectParamOutput)
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return i.ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceMysqlConnectParamArgs) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMysqlConnectParamOutput).ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceMysqlConnectParamPtrInput is an input type that accepts ConnectResourceMysqlConnectParamArgs, ConnectResourceMysqlConnectParamPtr and ConnectResourceMysqlConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceMysqlConnectParamPtrInput` via:
//
//	        ConnectResourceMysqlConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceMysqlConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput
	ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Context) ConnectResourceMysqlConnectParamPtrOutput
}

type connectResourceMysqlConnectParamPtrType ConnectResourceMysqlConnectParamArgs

func ConnectResourceMysqlConnectParamPtr(v *ConnectResourceMysqlConnectParamArgs) ConnectResourceMysqlConnectParamPtrInput {
	return (*connectResourceMysqlConnectParamPtrType)(v)
}

func (*connectResourceMysqlConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (i *connectResourceMysqlConnectParamPtrType) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return i.ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceMysqlConnectParamPtrType) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceMysqlConnectParamPtrOutput)
}

type ConnectResourceMysqlConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceMysqlConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamOutput() ConnectResourceMysqlConnectParamOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return o.ToConnectResourceMysqlConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceMysqlConnectParamOutput) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceMysqlConnectParam) *ConnectResourceMysqlConnectParam {
		return &v
	}).(ConnectResourceMysqlConnectParamPtrOutput)
}

// Required when type is TDSQL C_MYSQL.
func (o ConnectResourceMysqlConnectParamOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMysqlConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// Mysql connection source password.
func (o ConnectResourceMysqlConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// MySQL port.
func (o ConnectResourceMysqlConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of My SQL connection source.
func (o ConnectResourceMysqlConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Mysql Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceMysqlConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Username of Mysql connection source.
func (o ConnectResourceMysqlConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceMysqlConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceMysqlConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceMysqlConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceMysqlConnectParam)(nil)).Elem()
}

func (o ConnectResourceMysqlConnectParamPtrOutput) ToConnectResourceMysqlConnectParamPtrOutput() ConnectResourceMysqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamPtrOutput) ToConnectResourceMysqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceMysqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourceMysqlConnectParamPtrOutput) Elem() ConnectResourceMysqlConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) ConnectResourceMysqlConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceMysqlConnectParam
		return ret
	}).(ConnectResourceMysqlConnectParamOutput)
}

// Required when type is TDSQL C_MYSQL.
func (o ConnectResourceMysqlConnectParamPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourceMysqlConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// Mysql connection source password.
func (o ConnectResourceMysqlConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// MySQL port.
func (o ConnectResourceMysqlConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Instance resource of My SQL connection source.
func (o ConnectResourceMysqlConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Mysql Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourceMysqlConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance vip of the MySQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The vpc Id of the My SQL connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourceMysqlConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Username of Mysql connection source.
func (o ConnectResourceMysqlConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceMysqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourcePostgresqlConnectParam struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId *string `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// PostgreSQL password.
	Password string `pulumi:"password"`
	// PostgreSQL port.
	Port int `pulumi:"port"`
	// PostgreSQL instanceId.
	Resource string `pulumi:"resource"`
	// PostgreSQL Whether the connection source is a self-built cluster, default: false.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// PostgreSQL The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourcePostgresqlConnectParamInput is an input type that accepts ConnectResourcePostgresqlConnectParamArgs and ConnectResourcePostgresqlConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourcePostgresqlConnectParamInput` via:
//
//	ConnectResourcePostgresqlConnectParamArgs{...}
type ConnectResourcePostgresqlConnectParamInput interface {
	pulumi.Input

	ToConnectResourcePostgresqlConnectParamOutput() ConnectResourcePostgresqlConnectParamOutput
	ToConnectResourcePostgresqlConnectParamOutputWithContext(context.Context) ConnectResourcePostgresqlConnectParamOutput
}

type ConnectResourcePostgresqlConnectParamArgs struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// Whether to update to the associated Datahub task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// PostgreSQL password.
	Password pulumi.StringInput `pulumi:"password"`
	// PostgreSQL port.
	Port pulumi.IntInput `pulumi:"port"`
	// PostgreSQL instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// PostgreSQL Whether the connection source is a self-built cluster, default: false.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// PostgreSQL The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourcePostgresqlConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamOutput() ConnectResourcePostgresqlConnectParamOutput {
	return i.ToConnectResourcePostgresqlConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourcePostgresqlConnectParamOutput)
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return i.ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourcePostgresqlConnectParamArgs) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourcePostgresqlConnectParamOutput).ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourcePostgresqlConnectParamPtrInput is an input type that accepts ConnectResourcePostgresqlConnectParamArgs, ConnectResourcePostgresqlConnectParamPtr and ConnectResourcePostgresqlConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourcePostgresqlConnectParamPtrInput` via:
//
//	        ConnectResourcePostgresqlConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourcePostgresqlConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput
	ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Context) ConnectResourcePostgresqlConnectParamPtrOutput
}

type connectResourcePostgresqlConnectParamPtrType ConnectResourcePostgresqlConnectParamArgs

func ConnectResourcePostgresqlConnectParamPtr(v *ConnectResourcePostgresqlConnectParamArgs) ConnectResourcePostgresqlConnectParamPtrInput {
	return (*connectResourcePostgresqlConnectParamPtrType)(v)
}

func (*connectResourcePostgresqlConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (i *connectResourcePostgresqlConnectParamPtrType) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return i.ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourcePostgresqlConnectParamPtrType) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourcePostgresqlConnectParamPtrOutput)
}

type ConnectResourcePostgresqlConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourcePostgresqlConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamOutput() ConnectResourcePostgresqlConnectParamOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return o.ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourcePostgresqlConnectParamOutput) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourcePostgresqlConnectParam) *ConnectResourcePostgresqlConnectParam {
		return &v
	}).(ConnectResourcePostgresqlConnectParamPtrOutput)
}

// Required when type is TDSQL C_POSTGRESQL.
func (o ConnectResourcePostgresqlConnectParamOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourcePostgresqlConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// PostgreSQL password.
func (o ConnectResourcePostgresqlConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// PostgreSQL port.
func (o ConnectResourcePostgresqlConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// PostgreSQL instanceId.
func (o ConnectResourcePostgresqlConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// PostgreSQL Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourcePostgresqlConnectParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// PostgreSQL The username of the connection source.
func (o ConnectResourcePostgresqlConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourcePostgresqlConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourcePostgresqlConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourcePostgresqlConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourcePostgresqlConnectParam)(nil)).Elem()
}

func (o ConnectResourcePostgresqlConnectParamPtrOutput) ToConnectResourcePostgresqlConnectParamPtrOutput() ConnectResourcePostgresqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamPtrOutput) ToConnectResourcePostgresqlConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourcePostgresqlConnectParamPtrOutput {
	return o
}

func (o ConnectResourcePostgresqlConnectParamPtrOutput) Elem() ConnectResourcePostgresqlConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) ConnectResourcePostgresqlConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourcePostgresqlConnectParam
		return ret
	}).(ConnectResourcePostgresqlConnectParamOutput)
}

// Required when type is TDSQL C_POSTGRESQL.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// Whether to update to the associated Datahub task, default: false.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// PostgreSQL password.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL port.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL instanceId.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL Whether the connection source is a self-built cluster, default: false.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// The instance VIP of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// The instance vpcId of the Postgresql connection source, when it is a Tencent Cloud instance, it is required.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL The username of the connection source.
func (o ConnectResourcePostgresqlConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourcePostgresqlConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type ConnectResourceSqlserverConnectParam struct {
	// Whether to update to the associated Dip task, default: false.
	IsUpdate *bool `pulumi:"isUpdate"`
	// SQLServer password.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// SQLServer instanceId.
	Resource string `pulumi:"resource"`
	// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip *string `pulumi:"serviceVip"`
	// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// SQLServer The username of the connection source.
	UserName string `pulumi:"userName"`
}

// ConnectResourceSqlserverConnectParamInput is an input type that accepts ConnectResourceSqlserverConnectParamArgs and ConnectResourceSqlserverConnectParamOutput values.
// You can construct a concrete instance of `ConnectResourceSqlserverConnectParamInput` via:
//
//	ConnectResourceSqlserverConnectParamArgs{...}
type ConnectResourceSqlserverConnectParamInput interface {
	pulumi.Input

	ToConnectResourceSqlserverConnectParamOutput() ConnectResourceSqlserverConnectParamOutput
	ToConnectResourceSqlserverConnectParamOutputWithContext(context.Context) ConnectResourceSqlserverConnectParamOutput
}

type ConnectResourceSqlserverConnectParamArgs struct {
	// Whether to update to the associated Dip task, default: false.
	IsUpdate pulumi.BoolPtrInput `pulumi:"isUpdate"`
	// SQLServer password.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// SQLServer instanceId.
	Resource pulumi.StringInput `pulumi:"resource"`
	// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// SQLServer The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ConnectResourceSqlserverConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamOutput() ConnectResourceSqlserverConnectParamOutput {
	return i.ToConnectResourceSqlserverConnectParamOutputWithContext(context.Background())
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceSqlserverConnectParamOutput)
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return i.ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Background())
}

func (i ConnectResourceSqlserverConnectParamArgs) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceSqlserverConnectParamOutput).ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx)
}

// ConnectResourceSqlserverConnectParamPtrInput is an input type that accepts ConnectResourceSqlserverConnectParamArgs, ConnectResourceSqlserverConnectParamPtr and ConnectResourceSqlserverConnectParamPtrOutput values.
// You can construct a concrete instance of `ConnectResourceSqlserverConnectParamPtrInput` via:
//
//	        ConnectResourceSqlserverConnectParamArgs{...}
//
//	or:
//
//	        nil
type ConnectResourceSqlserverConnectParamPtrInput interface {
	pulumi.Input

	ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput
	ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Context) ConnectResourceSqlserverConnectParamPtrOutput
}

type connectResourceSqlserverConnectParamPtrType ConnectResourceSqlserverConnectParamArgs

func ConnectResourceSqlserverConnectParamPtr(v *ConnectResourceSqlserverConnectParamArgs) ConnectResourceSqlserverConnectParamPtrInput {
	return (*connectResourceSqlserverConnectParamPtrType)(v)
}

func (*connectResourceSqlserverConnectParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (i *connectResourceSqlserverConnectParamPtrType) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return i.ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Background())
}

func (i *connectResourceSqlserverConnectParamPtrType) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectResourceSqlserverConnectParamPtrOutput)
}

type ConnectResourceSqlserverConnectParamOutput struct{ *pulumi.OutputState }

func (ConnectResourceSqlserverConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamOutput() ConnectResourceSqlserverConnectParamOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return o.ToConnectResourceSqlserverConnectParamPtrOutputWithContext(context.Background())
}

func (o ConnectResourceSqlserverConnectParamOutput) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectResourceSqlserverConnectParam) *ConnectResourceSqlserverConnectParam {
		return &v
	}).(ConnectResourceSqlserverConnectParamPtrOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceSqlserverConnectParamOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) *bool { return v.IsUpdate }).(pulumi.BoolPtrOutput)
}

// SQLServer password.
func (o ConnectResourceSqlserverConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o ConnectResourceSqlserverConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// SQLServer instanceId.
func (o ConnectResourceSqlserverConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// SQLServer The username of the connection source.
func (o ConnectResourceSqlserverConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResourceSqlserverConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type ConnectResourceSqlserverConnectParamPtrOutput struct{ *pulumi.OutputState }

func (ConnectResourceSqlserverConnectParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectResourceSqlserverConnectParam)(nil)).Elem()
}

func (o ConnectResourceSqlserverConnectParamPtrOutput) ToConnectResourceSqlserverConnectParamPtrOutput() ConnectResourceSqlserverConnectParamPtrOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamPtrOutput) ToConnectResourceSqlserverConnectParamPtrOutputWithContext(ctx context.Context) ConnectResourceSqlserverConnectParamPtrOutput {
	return o
}

func (o ConnectResourceSqlserverConnectParamPtrOutput) Elem() ConnectResourceSqlserverConnectParamOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) ConnectResourceSqlserverConnectParam {
		if v != nil {
			return *v
		}
		var ret ConnectResourceSqlserverConnectParam
		return ret
	}).(ConnectResourceSqlserverConnectParamOutput)
}

// Whether to update to the associated Dip task, default: false.
func (o ConnectResourceSqlserverConnectParamPtrOutput) IsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpdate
	}).(pulumi.BoolPtrOutput)
}

// SQLServer password.
func (o ConnectResourceSqlserverConnectParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// SQLServer port.
func (o ConnectResourceSqlserverConnectParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// SQLServer instanceId.
func (o ConnectResourceSqlserverConnectParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// SQLServer instance vip, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// SQLServer vpcId, When it is a Tencent Cloud instance, it is required.
func (o ConnectResourceSqlserverConnectParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// SQLServer The username of the connection source.
func (o ConnectResourceSqlserverConnectParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectResourceSqlserverConnectParam) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResource struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParam *DatahubTaskSourceResourceClickHouseParam `pulumi:"clickHouseParam"`
	// Cls configuration, Required when Type is CLS.
	ClsParam *DatahubTaskSourceResourceClsParam `pulumi:"clsParam"`
	// Cos configuration, required when Type is COS.
	CosParam *DatahubTaskSourceResourceCosParam `pulumi:"cosParam"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParam *DatahubTaskSourceResourceCtsdbParam `pulumi:"ctsdbParam"`
	// Dts configuration, required when Type is DTS.
	DtsParam *DatahubTaskSourceResourceDtsParam `pulumi:"dtsParam"`
	// Es configuration, required when Type is ES.
	EsParam *DatahubTaskSourceResourceEsParam `pulumi:"esParam"`
	// EB configuration, required when type is EB.
	EventBusParam *DatahubTaskSourceResourceEventBusParam `pulumi:"eventBusParam"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParam *DatahubTaskSourceResourceKafkaParam `pulumi:"kafkaParam"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParam *DatahubTaskSourceResourceMariaDbParam `pulumi:"mariaDbParam"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParam *DatahubTaskSourceResourceMongoDbParam `pulumi:"mongoDbParam"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParam *DatahubTaskSourceResourceMySqlParam `pulumi:"mySqlParam"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParam *DatahubTaskSourceResourcePostgreSqlParam `pulumi:"postgreSqlParam"`
	// Scf configuration, Required when Type is SCF.
	ScfParam *DatahubTaskSourceResourceScfParam `pulumi:"scfParam"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParam *DatahubTaskSourceResourceSqlServerParam `pulumi:"sqlServerParam"`
	// Tdw configuration, required when Type is TDW.
	TdwParam *DatahubTaskSourceResourceTdwParam `pulumi:"tdwParam"`
	// Topic configuration, Required when Type is Topic.
	TopicParam *DatahubTaskSourceResourceTopicParam `pulumi:"topicParam"`
	// resource type.
	Type string `pulumi:"type"`
}

// DatahubTaskSourceResourceInput is an input type that accepts DatahubTaskSourceResourceArgs and DatahubTaskSourceResourceOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceInput` via:
//
//	DatahubTaskSourceResourceArgs{...}
type DatahubTaskSourceResourceInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceOutput() DatahubTaskSourceResourceOutput
	ToDatahubTaskSourceResourceOutputWithContext(context.Context) DatahubTaskSourceResourceOutput
}

type DatahubTaskSourceResourceArgs struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParam DatahubTaskSourceResourceClickHouseParamPtrInput `pulumi:"clickHouseParam"`
	// Cls configuration, Required when Type is CLS.
	ClsParam DatahubTaskSourceResourceClsParamPtrInput `pulumi:"clsParam"`
	// Cos configuration, required when Type is COS.
	CosParam DatahubTaskSourceResourceCosParamPtrInput `pulumi:"cosParam"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParam DatahubTaskSourceResourceCtsdbParamPtrInput `pulumi:"ctsdbParam"`
	// Dts configuration, required when Type is DTS.
	DtsParam DatahubTaskSourceResourceDtsParamPtrInput `pulumi:"dtsParam"`
	// Es configuration, required when Type is ES.
	EsParam DatahubTaskSourceResourceEsParamPtrInput `pulumi:"esParam"`
	// EB configuration, required when type is EB.
	EventBusParam DatahubTaskSourceResourceEventBusParamPtrInput `pulumi:"eventBusParam"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParam DatahubTaskSourceResourceKafkaParamPtrInput `pulumi:"kafkaParam"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParam DatahubTaskSourceResourceMariaDbParamPtrInput `pulumi:"mariaDbParam"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParam DatahubTaskSourceResourceMongoDbParamPtrInput `pulumi:"mongoDbParam"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParam DatahubTaskSourceResourceMySqlParamPtrInput `pulumi:"mySqlParam"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParam DatahubTaskSourceResourcePostgreSqlParamPtrInput `pulumi:"postgreSqlParam"`
	// Scf configuration, Required when Type is SCF.
	ScfParam DatahubTaskSourceResourceScfParamPtrInput `pulumi:"scfParam"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParam DatahubTaskSourceResourceSqlServerParamPtrInput `pulumi:"sqlServerParam"`
	// Tdw configuration, required when Type is TDW.
	TdwParam DatahubTaskSourceResourceTdwParamPtrInput `pulumi:"tdwParam"`
	// Topic configuration, Required when Type is Topic.
	TopicParam DatahubTaskSourceResourceTopicParamPtrInput `pulumi:"topicParam"`
	// resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskSourceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResource)(nil)).Elem()
}

func (i DatahubTaskSourceResourceArgs) ToDatahubTaskSourceResourceOutput() DatahubTaskSourceResourceOutput {
	return i.ToDatahubTaskSourceResourceOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceArgs) ToDatahubTaskSourceResourceOutputWithContext(ctx context.Context) DatahubTaskSourceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceOutput)
}

func (i DatahubTaskSourceResourceArgs) ToDatahubTaskSourceResourcePtrOutput() DatahubTaskSourceResourcePtrOutput {
	return i.ToDatahubTaskSourceResourcePtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceArgs) ToDatahubTaskSourceResourcePtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceOutput).ToDatahubTaskSourceResourcePtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourcePtrInput is an input type that accepts DatahubTaskSourceResourceArgs, DatahubTaskSourceResourcePtr and DatahubTaskSourceResourcePtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourcePtrInput` via:
//
//	        DatahubTaskSourceResourceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourcePtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourcePtrOutput() DatahubTaskSourceResourcePtrOutput
	ToDatahubTaskSourceResourcePtrOutputWithContext(context.Context) DatahubTaskSourceResourcePtrOutput
}

type datahubTaskSourceResourcePtrType DatahubTaskSourceResourceArgs

func DatahubTaskSourceResourcePtr(v *DatahubTaskSourceResourceArgs) DatahubTaskSourceResourcePtrInput {
	return (*datahubTaskSourceResourcePtrType)(v)
}

func (*datahubTaskSourceResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResource)(nil)).Elem()
}

func (i *datahubTaskSourceResourcePtrType) ToDatahubTaskSourceResourcePtrOutput() DatahubTaskSourceResourcePtrOutput {
	return i.ToDatahubTaskSourceResourcePtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourcePtrType) ToDatahubTaskSourceResourcePtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourcePtrOutput)
}

type DatahubTaskSourceResourceOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResource)(nil)).Elem()
}

func (o DatahubTaskSourceResourceOutput) ToDatahubTaskSourceResourceOutput() DatahubTaskSourceResourceOutput {
	return o
}

func (o DatahubTaskSourceResourceOutput) ToDatahubTaskSourceResourceOutputWithContext(ctx context.Context) DatahubTaskSourceResourceOutput {
	return o
}

func (o DatahubTaskSourceResourceOutput) ToDatahubTaskSourceResourcePtrOutput() DatahubTaskSourceResourcePtrOutput {
	return o.ToDatahubTaskSourceResourcePtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceOutput) ToDatahubTaskSourceResourcePtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResource) *DatahubTaskSourceResource {
		return &v
	}).(DatahubTaskSourceResourcePtrOutput)
}

// ClickHouse config, Type CLICKHOUSE requierd.
func (o DatahubTaskSourceResourceOutput) ClickHouseParam() DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceClickHouseParam { return v.ClickHouseParam }).(DatahubTaskSourceResourceClickHouseParamPtrOutput)
}

// Cls configuration, Required when Type is CLS.
func (o DatahubTaskSourceResourceOutput) ClsParam() DatahubTaskSourceResourceClsParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceClsParam { return v.ClsParam }).(DatahubTaskSourceResourceClsParamPtrOutput)
}

// Cos configuration, required when Type is COS.
func (o DatahubTaskSourceResourceOutput) CosParam() DatahubTaskSourceResourceCosParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceCosParam { return v.CosParam }).(DatahubTaskSourceResourceCosParamPtrOutput)
}

// Ctsdb configuration, Required when Type is CTSDB.
func (o DatahubTaskSourceResourceOutput) CtsdbParam() DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceCtsdbParam { return v.CtsdbParam }).(DatahubTaskSourceResourceCtsdbParamPtrOutput)
}

// Dts configuration, required when Type is DTS.
func (o DatahubTaskSourceResourceOutput) DtsParam() DatahubTaskSourceResourceDtsParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceDtsParam { return v.DtsParam }).(DatahubTaskSourceResourceDtsParamPtrOutput)
}

// Es configuration, required when Type is ES.
func (o DatahubTaskSourceResourceOutput) EsParam() DatahubTaskSourceResourceEsParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceEsParam { return v.EsParam }).(DatahubTaskSourceResourceEsParamPtrOutput)
}

// EB configuration, required when type is EB.
func (o DatahubTaskSourceResourceOutput) EventBusParam() DatahubTaskSourceResourceEventBusParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceEventBusParam { return v.EventBusParam }).(DatahubTaskSourceResourceEventBusParamPtrOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o DatahubTaskSourceResourceOutput) KafkaParam() DatahubTaskSourceResourceKafkaParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceKafkaParam { return v.KafkaParam }).(DatahubTaskSourceResourceKafkaParamPtrOutput)
}

// MariaDB configuration, Required when Type is MARIADB.
func (o DatahubTaskSourceResourceOutput) MariaDbParam() DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceMariaDbParam { return v.MariaDbParam }).(DatahubTaskSourceResourceMariaDbParamPtrOutput)
}

// MongoDB config, Required when Type is MONGODB.
func (o DatahubTaskSourceResourceOutput) MongoDbParam() DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceMongoDbParam { return v.MongoDbParam }).(DatahubTaskSourceResourceMongoDbParamPtrOutput)
}

// MySQL configuration, Required when Type is MYSQL.
func (o DatahubTaskSourceResourceOutput) MySqlParam() DatahubTaskSourceResourceMySqlParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceMySqlParam { return v.MySqlParam }).(DatahubTaskSourceResourceMySqlParamPtrOutput)
}

// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
func (o DatahubTaskSourceResourceOutput) PostgreSqlParam() DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourcePostgreSqlParam { return v.PostgreSqlParam }).(DatahubTaskSourceResourcePostgreSqlParamPtrOutput)
}

// Scf configuration, Required when Type is SCF.
func (o DatahubTaskSourceResourceOutput) ScfParam() DatahubTaskSourceResourceScfParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceScfParam { return v.ScfParam }).(DatahubTaskSourceResourceScfParamPtrOutput)
}

// SQLServer configuration, Required when Type is SQLSERVER.
func (o DatahubTaskSourceResourceOutput) SqlServerParam() DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceSqlServerParam { return v.SqlServerParam }).(DatahubTaskSourceResourceSqlServerParamPtrOutput)
}

// Tdw configuration, required when Type is TDW.
func (o DatahubTaskSourceResourceOutput) TdwParam() DatahubTaskSourceResourceTdwParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceTdwParam { return v.TdwParam }).(DatahubTaskSourceResourceTdwParamPtrOutput)
}

// Topic configuration, Required when Type is Topic.
func (o DatahubTaskSourceResourceOutput) TopicParam() DatahubTaskSourceResourceTopicParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) *DatahubTaskSourceResourceTopicParam { return v.TopicParam }).(DatahubTaskSourceResourceTopicParamPtrOutput)
}

// resource type.
func (o DatahubTaskSourceResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResource) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourcePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResource)(nil)).Elem()
}

func (o DatahubTaskSourceResourcePtrOutput) ToDatahubTaskSourceResourcePtrOutput() DatahubTaskSourceResourcePtrOutput {
	return o
}

func (o DatahubTaskSourceResourcePtrOutput) ToDatahubTaskSourceResourcePtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePtrOutput {
	return o
}

func (o DatahubTaskSourceResourcePtrOutput) Elem() DatahubTaskSourceResourceOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) DatahubTaskSourceResource {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResource
		return ret
	}).(DatahubTaskSourceResourceOutput)
}

// ClickHouse config, Type CLICKHOUSE requierd.
func (o DatahubTaskSourceResourcePtrOutput) ClickHouseParam() DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceClickHouseParam {
		if v == nil {
			return nil
		}
		return v.ClickHouseParam
	}).(DatahubTaskSourceResourceClickHouseParamPtrOutput)
}

// Cls configuration, Required when Type is CLS.
func (o DatahubTaskSourceResourcePtrOutput) ClsParam() DatahubTaskSourceResourceClsParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceClsParam {
		if v == nil {
			return nil
		}
		return v.ClsParam
	}).(DatahubTaskSourceResourceClsParamPtrOutput)
}

// Cos configuration, required when Type is COS.
func (o DatahubTaskSourceResourcePtrOutput) CosParam() DatahubTaskSourceResourceCosParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceCosParam {
		if v == nil {
			return nil
		}
		return v.CosParam
	}).(DatahubTaskSourceResourceCosParamPtrOutput)
}

// Ctsdb configuration, Required when Type is CTSDB.
func (o DatahubTaskSourceResourcePtrOutput) CtsdbParam() DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceCtsdbParam {
		if v == nil {
			return nil
		}
		return v.CtsdbParam
	}).(DatahubTaskSourceResourceCtsdbParamPtrOutput)
}

// Dts configuration, required when Type is DTS.
func (o DatahubTaskSourceResourcePtrOutput) DtsParam() DatahubTaskSourceResourceDtsParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceDtsParam {
		if v == nil {
			return nil
		}
		return v.DtsParam
	}).(DatahubTaskSourceResourceDtsParamPtrOutput)
}

// Es configuration, required when Type is ES.
func (o DatahubTaskSourceResourcePtrOutput) EsParam() DatahubTaskSourceResourceEsParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceEsParam {
		if v == nil {
			return nil
		}
		return v.EsParam
	}).(DatahubTaskSourceResourceEsParamPtrOutput)
}

// EB configuration, required when type is EB.
func (o DatahubTaskSourceResourcePtrOutput) EventBusParam() DatahubTaskSourceResourceEventBusParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceEventBusParam {
		if v == nil {
			return nil
		}
		return v.EventBusParam
	}).(DatahubTaskSourceResourceEventBusParamPtrOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o DatahubTaskSourceResourcePtrOutput) KafkaParam() DatahubTaskSourceResourceKafkaParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceKafkaParam {
		if v == nil {
			return nil
		}
		return v.KafkaParam
	}).(DatahubTaskSourceResourceKafkaParamPtrOutput)
}

// MariaDB configuration, Required when Type is MARIADB.
func (o DatahubTaskSourceResourcePtrOutput) MariaDbParam() DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceMariaDbParam {
		if v == nil {
			return nil
		}
		return v.MariaDbParam
	}).(DatahubTaskSourceResourceMariaDbParamPtrOutput)
}

// MongoDB config, Required when Type is MONGODB.
func (o DatahubTaskSourceResourcePtrOutput) MongoDbParam() DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceMongoDbParam {
		if v == nil {
			return nil
		}
		return v.MongoDbParam
	}).(DatahubTaskSourceResourceMongoDbParamPtrOutput)
}

// MySQL configuration, Required when Type is MYSQL.
func (o DatahubTaskSourceResourcePtrOutput) MySqlParam() DatahubTaskSourceResourceMySqlParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceMySqlParam {
		if v == nil {
			return nil
		}
		return v.MySqlParam
	}).(DatahubTaskSourceResourceMySqlParamPtrOutput)
}

// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
func (o DatahubTaskSourceResourcePtrOutput) PostgreSqlParam() DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourcePostgreSqlParam {
		if v == nil {
			return nil
		}
		return v.PostgreSqlParam
	}).(DatahubTaskSourceResourcePostgreSqlParamPtrOutput)
}

// Scf configuration, Required when Type is SCF.
func (o DatahubTaskSourceResourcePtrOutput) ScfParam() DatahubTaskSourceResourceScfParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceScfParam {
		if v == nil {
			return nil
		}
		return v.ScfParam
	}).(DatahubTaskSourceResourceScfParamPtrOutput)
}

// SQLServer configuration, Required when Type is SQLSERVER.
func (o DatahubTaskSourceResourcePtrOutput) SqlServerParam() DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceSqlServerParam {
		if v == nil {
			return nil
		}
		return v.SqlServerParam
	}).(DatahubTaskSourceResourceSqlServerParamPtrOutput)
}

// Tdw configuration, required when Type is TDW.
func (o DatahubTaskSourceResourcePtrOutput) TdwParam() DatahubTaskSourceResourceTdwParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceTdwParam {
		if v == nil {
			return nil
		}
		return v.TdwParam
	}).(DatahubTaskSourceResourceTdwParamPtrOutput)
}

// Topic configuration, Required when Type is Topic.
func (o DatahubTaskSourceResourcePtrOutput) TopicParam() DatahubTaskSourceResourceTopicParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *DatahubTaskSourceResourceTopicParam {
		if v == nil {
			return nil
		}
		return v.TopicParam
	}).(DatahubTaskSourceResourceTopicParamPtrOutput)
}

// resource type.
func (o DatahubTaskSourceResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParam struct {
	// ClickHouse cluster.
	Cluster string `pulumi:"cluster"`
	// ClickHouse database name.
	Database string `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls *DatahubTaskSourceResourceClickHouseParamDropCls `pulumi:"dropCls"`
	// Whether ClickHouse discards the message that fails to parse, the default is true.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// ClickHouse ip.
	Ip *string `pulumi:"ip"`
	// ClickHouse passwd.
	Password *string `pulumi:"password"`
	// ClickHouse port.
	Port *int `pulumi:"port"`
	// resource id.
	Resource string `pulumi:"resource"`
	// ClickHouse schema.
	Schemas []DatahubTaskSourceResourceClickHouseParamSchema `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip *string `pulumi:"serviceVip"`
	// ClickHouse table.
	Table string `pulumi:"table"`
	// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
	Type *string `pulumi:"type"`
	// instance vpc id.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// ClickHouse user name.
	UserName *string `pulumi:"userName"`
}

// DatahubTaskSourceResourceClickHouseParamInput is an input type that accepts DatahubTaskSourceResourceClickHouseParamArgs and DatahubTaskSourceResourceClickHouseParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClickHouseParamInput` via:
//
//	DatahubTaskSourceResourceClickHouseParamArgs{...}
type DatahubTaskSourceResourceClickHouseParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClickHouseParamOutput() DatahubTaskSourceResourceClickHouseParamOutput
	ToDatahubTaskSourceResourceClickHouseParamOutputWithContext(context.Context) DatahubTaskSourceResourceClickHouseParamOutput
}

type DatahubTaskSourceResourceClickHouseParamArgs struct {
	// ClickHouse cluster.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// ClickHouse database name.
	Database pulumi.StringInput `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls DatahubTaskSourceResourceClickHouseParamDropClsPtrInput `pulumi:"dropCls"`
	// Whether ClickHouse discards the message that fails to parse, the default is true.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// ClickHouse ip.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// ClickHouse passwd.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// ClickHouse port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// resource id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// ClickHouse schema.
	Schemas DatahubTaskSourceResourceClickHouseParamSchemaArrayInput `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// ClickHouse table.
	Table pulumi.StringInput `pulumi:"table"`
	// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// instance vpc id.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// ClickHouse user name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DatahubTaskSourceResourceClickHouseParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceClickHouseParamArgs) ToDatahubTaskSourceResourceClickHouseParamOutput() DatahubTaskSourceResourceClickHouseParamOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClickHouseParamArgs) ToDatahubTaskSourceResourceClickHouseParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamOutput)
}

func (i DatahubTaskSourceResourceClickHouseParamArgs) ToDatahubTaskSourceResourceClickHouseParamPtrOutput() DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClickHouseParamArgs) ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamOutput).ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceClickHouseParamPtrInput is an input type that accepts DatahubTaskSourceResourceClickHouseParamArgs, DatahubTaskSourceResourceClickHouseParamPtr and DatahubTaskSourceResourceClickHouseParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClickHouseParamPtrInput` via:
//
//	        DatahubTaskSourceResourceClickHouseParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceClickHouseParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClickHouseParamPtrOutput() DatahubTaskSourceResourceClickHouseParamPtrOutput
	ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceClickHouseParamPtrOutput
}

type datahubTaskSourceResourceClickHouseParamPtrType DatahubTaskSourceResourceClickHouseParamArgs

func DatahubTaskSourceResourceClickHouseParamPtr(v *DatahubTaskSourceResourceClickHouseParamArgs) DatahubTaskSourceResourceClickHouseParamPtrInput {
	return (*datahubTaskSourceResourceClickHouseParamPtrType)(v)
}

func (*datahubTaskSourceResourceClickHouseParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceClickHouseParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceClickHouseParamPtrType) ToDatahubTaskSourceResourceClickHouseParamPtrOutput() DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceClickHouseParamPtrType) ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClickHouseParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClickHouseParamOutput) ToDatahubTaskSourceResourceClickHouseParamOutput() DatahubTaskSourceResourceClickHouseParamOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamOutput) ToDatahubTaskSourceResourceClickHouseParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamOutput) ToDatahubTaskSourceResourceClickHouseParamPtrOutput() DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return o.ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceClickHouseParamOutput) ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceClickHouseParam) *DatahubTaskSourceResourceClickHouseParam {
		return &v
	}).(DatahubTaskSourceResourceClickHouseParamPtrOutput)
}

// ClickHouse cluster.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) string { return v.Cluster }).(pulumi.StringOutput)
}

// ClickHouse database name.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) string { return v.Database }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskSourceResourceClickHouseParamOutput) DropCls() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *DatahubTaskSourceResourceClickHouseParamDropCls {
		return v.DropCls
	}).(DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput)
}

// Whether ClickHouse discards the message that fails to parse, the default is true.
func (o DatahubTaskSourceResourceClickHouseParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// ClickHouse ip.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// ClickHouse passwd.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// ClickHouse port.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// resource id.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) string { return v.Resource }).(pulumi.StringOutput)
}

// ClickHouse schema.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Schemas() DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) []DatahubTaskSourceResourceClickHouseParamSchema {
		return v.Schemas
	}).(DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceClickHouseParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskSourceResourceClickHouseParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// ClickHouse table.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) string { return v.Table }).(pulumi.StringOutput)
}

// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: “.
func (o DatahubTaskSourceResourceClickHouseParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskSourceResourceClickHouseParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// ClickHouse user name.
func (o DatahubTaskSourceResourceClickHouseParamOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParam) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClickHouseParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceClickHouseParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) ToDatahubTaskSourceResourceClickHouseParamPtrOutput() DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) ToDatahubTaskSourceResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Elem() DatahubTaskSourceResourceClickHouseParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) DatahubTaskSourceResourceClickHouseParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceClickHouseParam
		return ret
	}).(DatahubTaskSourceResourceClickHouseParamOutput)
}

// ClickHouse cluster.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(pulumi.StringPtrOutput)
}

// ClickHouse database name.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) DropCls() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *DatahubTaskSourceResourceClickHouseParamDropCls {
		if v == nil {
			return nil
		}
		return v.DropCls
	}).(DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput)
}

// Whether ClickHouse discards the message that fails to parse, the default is true.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// ClickHouse ip.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// ClickHouse passwd.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// ClickHouse port.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// resource id.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// ClickHouse schema.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Schemas() DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) []DatahubTaskSourceResourceClickHouseParamSchema {
		if v == nil {
			return nil
		}
		return v.Schemas
	}).(DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// ClickHouse table.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: “.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// ClickHouse user name.
func (o DatahubTaskSourceResourceClickHouseParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParamDropCls struct {
	// cls LogSet id.
	DropClsLogSet *string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin *string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion *string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId *string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls *bool `pulumi:"dropInvalidMessageToCls"`
}

// DatahubTaskSourceResourceClickHouseParamDropClsInput is an input type that accepts DatahubTaskSourceResourceClickHouseParamDropClsArgs and DatahubTaskSourceResourceClickHouseParamDropClsOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClickHouseParamDropClsInput` via:
//
//	DatahubTaskSourceResourceClickHouseParamDropClsArgs{...}
type DatahubTaskSourceResourceClickHouseParamDropClsInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClickHouseParamDropClsOutput() DatahubTaskSourceResourceClickHouseParamDropClsOutput
	ToDatahubTaskSourceResourceClickHouseParamDropClsOutputWithContext(context.Context) DatahubTaskSourceResourceClickHouseParamDropClsOutput
}

type DatahubTaskSourceResourceClickHouseParamDropClsArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringPtrInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringPtrInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringPtrInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringPtrInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolPtrInput `pulumi:"dropInvalidMessageToCls"`
}

func (DatahubTaskSourceResourceClickHouseParamDropClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamDropCls)(nil)).Elem()
}

func (i DatahubTaskSourceResourceClickHouseParamDropClsArgs) ToDatahubTaskSourceResourceClickHouseParamDropClsOutput() DatahubTaskSourceResourceClickHouseParamDropClsOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamDropClsOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClickHouseParamDropClsArgs) ToDatahubTaskSourceResourceClickHouseParamDropClsOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamDropClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamDropClsOutput)
}

func (i DatahubTaskSourceResourceClickHouseParamDropClsArgs) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutput() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClickHouseParamDropClsArgs) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamDropClsOutput).ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceClickHouseParamDropClsPtrInput is an input type that accepts DatahubTaskSourceResourceClickHouseParamDropClsArgs, DatahubTaskSourceResourceClickHouseParamDropClsPtr and DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClickHouseParamDropClsPtrInput` via:
//
//	        DatahubTaskSourceResourceClickHouseParamDropClsArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceClickHouseParamDropClsPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutput() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput
	ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(context.Context) DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput
}

type datahubTaskSourceResourceClickHouseParamDropClsPtrType DatahubTaskSourceResourceClickHouseParamDropClsArgs

func DatahubTaskSourceResourceClickHouseParamDropClsPtr(v *DatahubTaskSourceResourceClickHouseParamDropClsArgs) DatahubTaskSourceResourceClickHouseParamDropClsPtrInput {
	return (*datahubTaskSourceResourceClickHouseParamDropClsPtrType)(v)
}

func (*datahubTaskSourceResourceClickHouseParamDropClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceClickHouseParamDropCls)(nil)).Elem()
}

func (i *datahubTaskSourceResourceClickHouseParamDropClsPtrType) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutput() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceClickHouseParamDropClsPtrType) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParamDropClsOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClickHouseParamDropClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamDropCls)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) ToDatahubTaskSourceResourceClickHouseParamDropClsOutput() DatahubTaskSourceResourceClickHouseParamDropClsOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) ToDatahubTaskSourceResourceClickHouseParamDropClsOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamDropClsOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutput() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return o.ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceClickHouseParamDropCls) *DatahubTaskSourceResourceClickHouseParamDropCls {
		return &v
	}).(DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput)
}

// cls LogSet id.
func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamDropCls) *string { return v.DropClsLogSet }).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamDropCls) *string { return v.DropClsOwneruin }).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamDropCls) *string { return v.DropClsRegion }).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamDropCls) *string { return v.DropClsTopicId }).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskSourceResourceClickHouseParamDropClsOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamDropCls) *bool { return v.DropInvalidMessageToCls }).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceClickHouseParamDropCls)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutput() DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) ToDatahubTaskSourceResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) Elem() DatahubTaskSourceResourceClickHouseParamDropClsOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParamDropCls) DatahubTaskSourceResourceClickHouseParamDropCls {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceClickHouseParamDropCls
		return ret
	}).(DatahubTaskSourceResourceClickHouseParamDropClsOutput)
}

// cls LogSet id.
func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsLogSet
	}).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsOwneruin
	}).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsRegion
	}).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsTopicId
	}).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClickHouseParamDropCls) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceClickHouseParamSchema struct {
	// Whether the column item is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// column name.
	ColumnName string `pulumi:"columnName"`
	// The json Key name corresponding to this column.
	JsonKey string `pulumi:"jsonKey"`
	// type of table column.
	Type string `pulumi:"type"`
}

// DatahubTaskSourceResourceClickHouseParamSchemaInput is an input type that accepts DatahubTaskSourceResourceClickHouseParamSchemaArgs and DatahubTaskSourceResourceClickHouseParamSchemaOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClickHouseParamSchemaInput` via:
//
//	DatahubTaskSourceResourceClickHouseParamSchemaArgs{...}
type DatahubTaskSourceResourceClickHouseParamSchemaInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClickHouseParamSchemaOutput() DatahubTaskSourceResourceClickHouseParamSchemaOutput
	ToDatahubTaskSourceResourceClickHouseParamSchemaOutputWithContext(context.Context) DatahubTaskSourceResourceClickHouseParamSchemaOutput
}

type DatahubTaskSourceResourceClickHouseParamSchemaArgs struct {
	// Whether the column item is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// column name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The json Key name corresponding to this column.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// type of table column.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskSourceResourceClickHouseParamSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (i DatahubTaskSourceResourceClickHouseParamSchemaArgs) ToDatahubTaskSourceResourceClickHouseParamSchemaOutput() DatahubTaskSourceResourceClickHouseParamSchemaOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamSchemaOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClickHouseParamSchemaArgs) ToDatahubTaskSourceResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamSchemaOutput)
}

// DatahubTaskSourceResourceClickHouseParamSchemaArrayInput is an input type that accepts DatahubTaskSourceResourceClickHouseParamSchemaArray and DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClickHouseParamSchemaArrayInput` via:
//
//	DatahubTaskSourceResourceClickHouseParamSchemaArray{ DatahubTaskSourceResourceClickHouseParamSchemaArgs{...} }
type DatahubTaskSourceResourceClickHouseParamSchemaArrayInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutput() DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput
	ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutputWithContext(context.Context) DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput
}

type DatahubTaskSourceResourceClickHouseParamSchemaArray []DatahubTaskSourceResourceClickHouseParamSchemaInput

func (DatahubTaskSourceResourceClickHouseParamSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (i DatahubTaskSourceResourceClickHouseParamSchemaArray) ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutput() DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput {
	return i.ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClickHouseParamSchemaArray) ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput)
}

type DatahubTaskSourceResourceClickHouseParamSchemaOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClickHouseParamSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClickHouseParamSchemaOutput) ToDatahubTaskSourceResourceClickHouseParamSchemaOutput() DatahubTaskSourceResourceClickHouseParamSchemaOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamSchemaOutput) ToDatahubTaskSourceResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamSchemaOutput {
	return o
}

// Whether the column item is allowed to be empty.
func (o DatahubTaskSourceResourceClickHouseParamSchemaOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamSchema) bool { return v.AllowNull }).(pulumi.BoolOutput)
}

// column name.
func (o DatahubTaskSourceResourceClickHouseParamSchemaOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamSchema) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The json Key name corresponding to this column.
func (o DatahubTaskSourceResourceClickHouseParamSchemaOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamSchema) string { return v.JsonKey }).(pulumi.StringOutput)
}

// type of table column.
func (o DatahubTaskSourceResourceClickHouseParamSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClickHouseParamSchema) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput) ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutput() DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput) ToDatahubTaskSourceResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput) Index(i pulumi.IntInput) DatahubTaskSourceResourceClickHouseParamSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskSourceResourceClickHouseParamSchema {
		return vs[0].([]DatahubTaskSourceResourceClickHouseParamSchema)[vs[1].(int)]
	}).(DatahubTaskSourceResourceClickHouseParamSchemaOutput)
}

type DatahubTaskSourceResourceClsParam struct {
	// Required when Decode Json is false.
	ContentKey *string `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson bool `pulumi:"decodeJson"`
	// LogSet id.
	LogSet *string `pulumi:"logSet"`
	// cls id.
	Resource string `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField *string `pulumi:"timeField"`
}

// DatahubTaskSourceResourceClsParamInput is an input type that accepts DatahubTaskSourceResourceClsParamArgs and DatahubTaskSourceResourceClsParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClsParamInput` via:
//
//	DatahubTaskSourceResourceClsParamArgs{...}
type DatahubTaskSourceResourceClsParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClsParamOutput() DatahubTaskSourceResourceClsParamOutput
	ToDatahubTaskSourceResourceClsParamOutputWithContext(context.Context) DatahubTaskSourceResourceClsParamOutput
}

type DatahubTaskSourceResourceClsParamArgs struct {
	// Required when Decode Json is false.
	ContentKey pulumi.StringPtrInput `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson pulumi.BoolInput `pulumi:"decodeJson"`
	// LogSet id.
	LogSet pulumi.StringPtrInput `pulumi:"logSet"`
	// cls id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField pulumi.StringPtrInput `pulumi:"timeField"`
}

func (DatahubTaskSourceResourceClsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClsParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceClsParamArgs) ToDatahubTaskSourceResourceClsParamOutput() DatahubTaskSourceResourceClsParamOutput {
	return i.ToDatahubTaskSourceResourceClsParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClsParamArgs) ToDatahubTaskSourceResourceClsParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClsParamOutput)
}

func (i DatahubTaskSourceResourceClsParamArgs) ToDatahubTaskSourceResourceClsParamPtrOutput() DatahubTaskSourceResourceClsParamPtrOutput {
	return i.ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceClsParamArgs) ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClsParamOutput).ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceClsParamPtrInput is an input type that accepts DatahubTaskSourceResourceClsParamArgs, DatahubTaskSourceResourceClsParamPtr and DatahubTaskSourceResourceClsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceClsParamPtrInput` via:
//
//	        DatahubTaskSourceResourceClsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceClsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceClsParamPtrOutput() DatahubTaskSourceResourceClsParamPtrOutput
	ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceClsParamPtrOutput
}

type datahubTaskSourceResourceClsParamPtrType DatahubTaskSourceResourceClsParamArgs

func DatahubTaskSourceResourceClsParamPtr(v *DatahubTaskSourceResourceClsParamArgs) DatahubTaskSourceResourceClsParamPtrInput {
	return (*datahubTaskSourceResourceClsParamPtrType)(v)
}

func (*datahubTaskSourceResourceClsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceClsParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceClsParamPtrType) ToDatahubTaskSourceResourceClsParamPtrOutput() DatahubTaskSourceResourceClsParamPtrOutput {
	return i.ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceClsParamPtrType) ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceClsParamPtrOutput)
}

type DatahubTaskSourceResourceClsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceClsParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClsParamOutput) ToDatahubTaskSourceResourceClsParamOutput() DatahubTaskSourceResourceClsParamOutput {
	return o
}

func (o DatahubTaskSourceResourceClsParamOutput) ToDatahubTaskSourceResourceClsParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClsParamOutput {
	return o
}

func (o DatahubTaskSourceResourceClsParamOutput) ToDatahubTaskSourceResourceClsParamPtrOutput() DatahubTaskSourceResourceClsParamPtrOutput {
	return o.ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceClsParamOutput) ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceClsParam) *DatahubTaskSourceResourceClsParam {
		return &v
	}).(DatahubTaskSourceResourceClsParamPtrOutput)
}

// Required when Decode Json is false.
func (o DatahubTaskSourceResourceClsParamOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClsParam) *string { return v.ContentKey }).(pulumi.StringPtrOutput)
}

// Whether the produced information is in json format.
func (o DatahubTaskSourceResourceClsParamOutput) DecodeJson() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClsParam) bool { return v.DecodeJson }).(pulumi.BoolOutput)
}

// LogSet id.
func (o DatahubTaskSourceResourceClsParamOutput) LogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClsParam) *string { return v.LogSet }).(pulumi.StringPtrOutput)
}

// cls id.
func (o DatahubTaskSourceResourceClsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
func (o DatahubTaskSourceResourceClsParamOutput) TimeField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceClsParam) *string { return v.TimeField }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceClsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceClsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceClsParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceClsParamPtrOutput) ToDatahubTaskSourceResourceClsParamPtrOutput() DatahubTaskSourceResourceClsParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceClsParamPtrOutput) ToDatahubTaskSourceResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceClsParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceClsParamPtrOutput) Elem() DatahubTaskSourceResourceClsParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClsParam) DatahubTaskSourceResourceClsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceClsParam
		return ret
	}).(DatahubTaskSourceResourceClsParamOutput)
}

// Required when Decode Json is false.
func (o DatahubTaskSourceResourceClsParamPtrOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return v.ContentKey
	}).(pulumi.StringPtrOutput)
}

// Whether the produced information is in json format.
func (o DatahubTaskSourceResourceClsParamPtrOutput) DecodeJson() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClsParam) *bool {
		if v == nil {
			return nil
		}
		return &v.DecodeJson
	}).(pulumi.BoolPtrOutput)
}

// LogSet id.
func (o DatahubTaskSourceResourceClsParamPtrOutput) LogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return v.LogSet
	}).(pulumi.StringPtrOutput)
}

// cls id.
func (o DatahubTaskSourceResourceClsParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
func (o DatahubTaskSourceResourceClsParamPtrOutput) TimeField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return v.TimeField
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceCosParam struct {
	// The size of aggregated messages MB.
	AggregateBatchSize *int `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval *int `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName string `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat *string `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType *string `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey *string `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix *string `pulumi:"objectKeyPrefix"`
	// region code.
	Region string `pulumi:"region"`
}

// DatahubTaskSourceResourceCosParamInput is an input type that accepts DatahubTaskSourceResourceCosParamArgs and DatahubTaskSourceResourceCosParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceCosParamInput` via:
//
//	DatahubTaskSourceResourceCosParamArgs{...}
type DatahubTaskSourceResourceCosParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceCosParamOutput() DatahubTaskSourceResourceCosParamOutput
	ToDatahubTaskSourceResourceCosParamOutputWithContext(context.Context) DatahubTaskSourceResourceCosParamOutput
}

type DatahubTaskSourceResourceCosParamArgs struct {
	// The size of aggregated messages MB.
	AggregateBatchSize pulumi.IntPtrInput `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval pulumi.IntPtrInput `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat pulumi.StringPtrInput `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType pulumi.StringPtrInput `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey pulumi.StringPtrInput `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix pulumi.StringPtrInput `pulumi:"objectKeyPrefix"`
	// region code.
	Region pulumi.StringInput `pulumi:"region"`
}

func (DatahubTaskSourceResourceCosParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceCosParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceCosParamArgs) ToDatahubTaskSourceResourceCosParamOutput() DatahubTaskSourceResourceCosParamOutput {
	return i.ToDatahubTaskSourceResourceCosParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceCosParamArgs) ToDatahubTaskSourceResourceCosParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCosParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceCosParamOutput)
}

func (i DatahubTaskSourceResourceCosParamArgs) ToDatahubTaskSourceResourceCosParamPtrOutput() DatahubTaskSourceResourceCosParamPtrOutput {
	return i.ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceCosParamArgs) ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCosParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceCosParamOutput).ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceCosParamPtrInput is an input type that accepts DatahubTaskSourceResourceCosParamArgs, DatahubTaskSourceResourceCosParamPtr and DatahubTaskSourceResourceCosParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceCosParamPtrInput` via:
//
//	        DatahubTaskSourceResourceCosParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceCosParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceCosParamPtrOutput() DatahubTaskSourceResourceCosParamPtrOutput
	ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceCosParamPtrOutput
}

type datahubTaskSourceResourceCosParamPtrType DatahubTaskSourceResourceCosParamArgs

func DatahubTaskSourceResourceCosParamPtr(v *DatahubTaskSourceResourceCosParamArgs) DatahubTaskSourceResourceCosParamPtrInput {
	return (*datahubTaskSourceResourceCosParamPtrType)(v)
}

func (*datahubTaskSourceResourceCosParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceCosParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceCosParamPtrType) ToDatahubTaskSourceResourceCosParamPtrOutput() DatahubTaskSourceResourceCosParamPtrOutput {
	return i.ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceCosParamPtrType) ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCosParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceCosParamPtrOutput)
}

type DatahubTaskSourceResourceCosParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceCosParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceCosParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceCosParamOutput) ToDatahubTaskSourceResourceCosParamOutput() DatahubTaskSourceResourceCosParamOutput {
	return o
}

func (o DatahubTaskSourceResourceCosParamOutput) ToDatahubTaskSourceResourceCosParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCosParamOutput {
	return o
}

func (o DatahubTaskSourceResourceCosParamOutput) ToDatahubTaskSourceResourceCosParamPtrOutput() DatahubTaskSourceResourceCosParamPtrOutput {
	return o.ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceCosParamOutput) ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCosParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceCosParam) *DatahubTaskSourceResourceCosParam {
		return &v
	}).(DatahubTaskSourceResourceCosParamPtrOutput)
}

// The size of aggregated messages MB.
func (o DatahubTaskSourceResourceCosParamOutput) AggregateBatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) *int { return v.AggregateBatchSize }).(pulumi.IntPtrOutput)
}

// time interval.
func (o DatahubTaskSourceResourceCosParamOutput) AggregateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) *int { return v.AggregateInterval }).(pulumi.IntPtrOutput)
}

// cos bucket name.
func (o DatahubTaskSourceResourceCosParamOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) string { return v.BucketName }).(pulumi.StringOutput)
}

// Partition format formatted according to strptime time.
func (o DatahubTaskSourceResourceCosParamOutput) DirectoryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) *string { return v.DirectoryTimeFormat }).(pulumi.StringPtrOutput)
}

// The file format after message aggregation csv|json.
func (o DatahubTaskSourceResourceCosParamOutput) FormatOutputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) *string { return v.FormatOutputType }).(pulumi.StringPtrOutput)
}

// ObjectKey.
func (o DatahubTaskSourceResourceCosParamOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) *string { return v.ObjectKey }).(pulumi.StringPtrOutput)
}

// Dumped object directory prefix.
func (o DatahubTaskSourceResourceCosParamOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) *string { return v.ObjectKeyPrefix }).(pulumi.StringPtrOutput)
}

// region code.
func (o DatahubTaskSourceResourceCosParamOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCosParam) string { return v.Region }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceCosParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceCosParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceCosParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceCosParamPtrOutput) ToDatahubTaskSourceResourceCosParamPtrOutput() DatahubTaskSourceResourceCosParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceCosParamPtrOutput) ToDatahubTaskSourceResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCosParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceCosParamPtrOutput) Elem() DatahubTaskSourceResourceCosParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) DatahubTaskSourceResourceCosParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceCosParam
		return ret
	}).(DatahubTaskSourceResourceCosParamOutput)
}

// The size of aggregated messages MB.
func (o DatahubTaskSourceResourceCosParamPtrOutput) AggregateBatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *int {
		if v == nil {
			return nil
		}
		return v.AggregateBatchSize
	}).(pulumi.IntPtrOutput)
}

// time interval.
func (o DatahubTaskSourceResourceCosParamPtrOutput) AggregateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *int {
		if v == nil {
			return nil
		}
		return v.AggregateInterval
	}).(pulumi.IntPtrOutput)
}

// cos bucket name.
func (o DatahubTaskSourceResourceCosParamPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Partition format formatted according to strptime time.
func (o DatahubTaskSourceResourceCosParamPtrOutput) DirectoryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryTimeFormat
	}).(pulumi.StringPtrOutput)
}

// The file format after message aggregation csv|json.
func (o DatahubTaskSourceResourceCosParamPtrOutput) FormatOutputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.FormatOutputType
	}).(pulumi.StringPtrOutput)
}

// ObjectKey.
func (o DatahubTaskSourceResourceCosParamPtrOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKey
	}).(pulumi.StringPtrOutput)
}

// Dumped object directory prefix.
func (o DatahubTaskSourceResourceCosParamPtrOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKeyPrefix
	}).(pulumi.StringPtrOutput)
}

// region code.
func (o DatahubTaskSourceResourceCosParamPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceCtsdbParam struct {
	// Ctsdb metric.
	CtsdbMetric *string `pulumi:"ctsdbMetric"`
	// resource id.
	Resource *string `pulumi:"resource"`
}

// DatahubTaskSourceResourceCtsdbParamInput is an input type that accepts DatahubTaskSourceResourceCtsdbParamArgs and DatahubTaskSourceResourceCtsdbParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceCtsdbParamInput` via:
//
//	DatahubTaskSourceResourceCtsdbParamArgs{...}
type DatahubTaskSourceResourceCtsdbParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceCtsdbParamOutput() DatahubTaskSourceResourceCtsdbParamOutput
	ToDatahubTaskSourceResourceCtsdbParamOutputWithContext(context.Context) DatahubTaskSourceResourceCtsdbParamOutput
}

type DatahubTaskSourceResourceCtsdbParamArgs struct {
	// Ctsdb metric.
	CtsdbMetric pulumi.StringPtrInput `pulumi:"ctsdbMetric"`
	// resource id.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (DatahubTaskSourceResourceCtsdbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceCtsdbParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceCtsdbParamArgs) ToDatahubTaskSourceResourceCtsdbParamOutput() DatahubTaskSourceResourceCtsdbParamOutput {
	return i.ToDatahubTaskSourceResourceCtsdbParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceCtsdbParamArgs) ToDatahubTaskSourceResourceCtsdbParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCtsdbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceCtsdbParamOutput)
}

func (i DatahubTaskSourceResourceCtsdbParamArgs) ToDatahubTaskSourceResourceCtsdbParamPtrOutput() DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return i.ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceCtsdbParamArgs) ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceCtsdbParamOutput).ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceCtsdbParamPtrInput is an input type that accepts DatahubTaskSourceResourceCtsdbParamArgs, DatahubTaskSourceResourceCtsdbParamPtr and DatahubTaskSourceResourceCtsdbParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceCtsdbParamPtrInput` via:
//
//	        DatahubTaskSourceResourceCtsdbParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceCtsdbParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceCtsdbParamPtrOutput() DatahubTaskSourceResourceCtsdbParamPtrOutput
	ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceCtsdbParamPtrOutput
}

type datahubTaskSourceResourceCtsdbParamPtrType DatahubTaskSourceResourceCtsdbParamArgs

func DatahubTaskSourceResourceCtsdbParamPtr(v *DatahubTaskSourceResourceCtsdbParamArgs) DatahubTaskSourceResourceCtsdbParamPtrInput {
	return (*datahubTaskSourceResourceCtsdbParamPtrType)(v)
}

func (*datahubTaskSourceResourceCtsdbParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceCtsdbParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceCtsdbParamPtrType) ToDatahubTaskSourceResourceCtsdbParamPtrOutput() DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return i.ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceCtsdbParamPtrType) ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceCtsdbParamPtrOutput)
}

type DatahubTaskSourceResourceCtsdbParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceCtsdbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceCtsdbParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceCtsdbParamOutput) ToDatahubTaskSourceResourceCtsdbParamOutput() DatahubTaskSourceResourceCtsdbParamOutput {
	return o
}

func (o DatahubTaskSourceResourceCtsdbParamOutput) ToDatahubTaskSourceResourceCtsdbParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCtsdbParamOutput {
	return o
}

func (o DatahubTaskSourceResourceCtsdbParamOutput) ToDatahubTaskSourceResourceCtsdbParamPtrOutput() DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return o.ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceCtsdbParamOutput) ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceCtsdbParam) *DatahubTaskSourceResourceCtsdbParam {
		return &v
	}).(DatahubTaskSourceResourceCtsdbParamPtrOutput)
}

// Ctsdb metric.
func (o DatahubTaskSourceResourceCtsdbParamOutput) CtsdbMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCtsdbParam) *string { return v.CtsdbMetric }).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskSourceResourceCtsdbParamOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceCtsdbParam) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceCtsdbParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceCtsdbParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceCtsdbParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceCtsdbParamPtrOutput) ToDatahubTaskSourceResourceCtsdbParamPtrOutput() DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceCtsdbParamPtrOutput) ToDatahubTaskSourceResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceCtsdbParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceCtsdbParamPtrOutput) Elem() DatahubTaskSourceResourceCtsdbParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCtsdbParam) DatahubTaskSourceResourceCtsdbParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceCtsdbParam
		return ret
	}).(DatahubTaskSourceResourceCtsdbParamOutput)
}

// Ctsdb metric.
func (o DatahubTaskSourceResourceCtsdbParamPtrOutput) CtsdbMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCtsdbParam) *string {
		if v == nil {
			return nil
		}
		return v.CtsdbMetric
	}).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskSourceResourceCtsdbParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceCtsdbParam) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceDtsParam struct {
	// Dts consumer group Id.
	GroupId *string `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword *string `pulumi:"groupPassword"`
	// Dts account.
	GroupUser *string `pulumi:"groupUser"`
	// Dts connection ip.
	Ip *string `pulumi:"ip"`
	// Dts connection port.
	Port *int `pulumi:"port"`
	// Dts instance Id.
	Resource string `pulumi:"resource"`
	// Dts topic.
	Topic *string `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql *bool `pulumi:"tranSql"`
}

// DatahubTaskSourceResourceDtsParamInput is an input type that accepts DatahubTaskSourceResourceDtsParamArgs and DatahubTaskSourceResourceDtsParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceDtsParamInput` via:
//
//	DatahubTaskSourceResourceDtsParamArgs{...}
type DatahubTaskSourceResourceDtsParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceDtsParamOutput() DatahubTaskSourceResourceDtsParamOutput
	ToDatahubTaskSourceResourceDtsParamOutputWithContext(context.Context) DatahubTaskSourceResourceDtsParamOutput
}

type DatahubTaskSourceResourceDtsParamArgs struct {
	// Dts consumer group Id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword pulumi.StringPtrInput `pulumi:"groupPassword"`
	// Dts account.
	GroupUser pulumi.StringPtrInput `pulumi:"groupUser"`
	// Dts connection ip.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Dts connection port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Dts instance Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Dts topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql pulumi.BoolPtrInput `pulumi:"tranSql"`
}

func (DatahubTaskSourceResourceDtsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceDtsParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceDtsParamArgs) ToDatahubTaskSourceResourceDtsParamOutput() DatahubTaskSourceResourceDtsParamOutput {
	return i.ToDatahubTaskSourceResourceDtsParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceDtsParamArgs) ToDatahubTaskSourceResourceDtsParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceDtsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceDtsParamOutput)
}

func (i DatahubTaskSourceResourceDtsParamArgs) ToDatahubTaskSourceResourceDtsParamPtrOutput() DatahubTaskSourceResourceDtsParamPtrOutput {
	return i.ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceDtsParamArgs) ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceDtsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceDtsParamOutput).ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceDtsParamPtrInput is an input type that accepts DatahubTaskSourceResourceDtsParamArgs, DatahubTaskSourceResourceDtsParamPtr and DatahubTaskSourceResourceDtsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceDtsParamPtrInput` via:
//
//	        DatahubTaskSourceResourceDtsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceDtsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceDtsParamPtrOutput() DatahubTaskSourceResourceDtsParamPtrOutput
	ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceDtsParamPtrOutput
}

type datahubTaskSourceResourceDtsParamPtrType DatahubTaskSourceResourceDtsParamArgs

func DatahubTaskSourceResourceDtsParamPtr(v *DatahubTaskSourceResourceDtsParamArgs) DatahubTaskSourceResourceDtsParamPtrInput {
	return (*datahubTaskSourceResourceDtsParamPtrType)(v)
}

func (*datahubTaskSourceResourceDtsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceDtsParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceDtsParamPtrType) ToDatahubTaskSourceResourceDtsParamPtrOutput() DatahubTaskSourceResourceDtsParamPtrOutput {
	return i.ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceDtsParamPtrType) ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceDtsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceDtsParamPtrOutput)
}

type DatahubTaskSourceResourceDtsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceDtsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceDtsParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceDtsParamOutput) ToDatahubTaskSourceResourceDtsParamOutput() DatahubTaskSourceResourceDtsParamOutput {
	return o
}

func (o DatahubTaskSourceResourceDtsParamOutput) ToDatahubTaskSourceResourceDtsParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceDtsParamOutput {
	return o
}

func (o DatahubTaskSourceResourceDtsParamOutput) ToDatahubTaskSourceResourceDtsParamPtrOutput() DatahubTaskSourceResourceDtsParamPtrOutput {
	return o.ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceDtsParamOutput) ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceDtsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceDtsParam) *DatahubTaskSourceResourceDtsParam {
		return &v
	}).(DatahubTaskSourceResourceDtsParamPtrOutput)
}

// Dts consumer group Id.
func (o DatahubTaskSourceResourceDtsParamOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Dts consumer group passwd.
func (o DatahubTaskSourceResourceDtsParamOutput) GroupPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *string { return v.GroupPassword }).(pulumi.StringPtrOutput)
}

// Dts account.
func (o DatahubTaskSourceResourceDtsParamOutput) GroupUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *string { return v.GroupUser }).(pulumi.StringPtrOutput)
}

// Dts connection ip.
func (o DatahubTaskSourceResourceDtsParamOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Dts connection port.
func (o DatahubTaskSourceResourceDtsParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Dts instance Id.
func (o DatahubTaskSourceResourceDtsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Dts topic.
func (o DatahubTaskSourceResourceDtsParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
func (o DatahubTaskSourceResourceDtsParamOutput) TranSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceDtsParam) *bool { return v.TranSql }).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceDtsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceDtsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceDtsParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceDtsParamPtrOutput) ToDatahubTaskSourceResourceDtsParamPtrOutput() DatahubTaskSourceResourceDtsParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceDtsParamPtrOutput) ToDatahubTaskSourceResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceDtsParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceDtsParamPtrOutput) Elem() DatahubTaskSourceResourceDtsParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) DatahubTaskSourceResourceDtsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceDtsParam
		return ret
	}).(DatahubTaskSourceResourceDtsParamOutput)
}

// Dts consumer group Id.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Dts consumer group passwd.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) GroupPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.GroupPassword
	}).(pulumi.StringPtrOutput)
}

// Dts account.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) GroupUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.GroupUser
	}).(pulumi.StringPtrOutput)
}

// Dts connection ip.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Dts connection port.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Dts instance Id.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Dts topic.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
func (o DatahubTaskSourceResourceDtsParamPtrOutput) TranSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceDtsParam) *bool {
		if v == nil {
			return nil
		}
		return v.TranSql
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceEsParam struct {
	// key for data in non-json format.
	ContentKey *string `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey *string `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat *string `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField *string `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls *DatahubTaskSourceResourceEsParamDropCls `pulumi:"dropCls"`
	// dead letter queue.
	DropDlq *DatahubTaskSourceResourceEsParamDropDlq `pulumi:"dropDlq"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage *bool `pulumi:"dropInvalidJsonMessage"`
	// Whether Es discards the message of parsing failure.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index *string `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType *string `pulumi:"indexType"`
	// Es Password.
	Password *string `pulumi:"password"`
	// Es connection port.
	Port *int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip *string `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Es UserName.
	UserName *string `pulumi:"userName"`
}

// DatahubTaskSourceResourceEsParamInput is an input type that accepts DatahubTaskSourceResourceEsParamArgs and DatahubTaskSourceResourceEsParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamInput` via:
//
//	DatahubTaskSourceResourceEsParamArgs{...}
type DatahubTaskSourceResourceEsParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamOutput() DatahubTaskSourceResourceEsParamOutput
	ToDatahubTaskSourceResourceEsParamOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamOutput
}

type DatahubTaskSourceResourceEsParamArgs struct {
	// key for data in non-json format.
	ContentKey pulumi.StringPtrInput `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey pulumi.StringPtrInput `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField pulumi.StringPtrInput `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls DatahubTaskSourceResourceEsParamDropClsPtrInput `pulumi:"dropCls"`
	// dead letter queue.
	DropDlq DatahubTaskSourceResourceEsParamDropDlqPtrInput `pulumi:"dropDlq"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage pulumi.BoolPtrInput `pulumi:"dropInvalidJsonMessage"`
	// Whether Es discards the message of parsing failure.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index pulumi.StringPtrInput `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType pulumi.StringPtrInput `pulumi:"indexType"`
	// Es Password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Es connection port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Es UserName.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DatahubTaskSourceResourceEsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamArgs) ToDatahubTaskSourceResourceEsParamOutput() DatahubTaskSourceResourceEsParamOutput {
	return i.ToDatahubTaskSourceResourceEsParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamArgs) ToDatahubTaskSourceResourceEsParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamOutput)
}

func (i DatahubTaskSourceResourceEsParamArgs) ToDatahubTaskSourceResourceEsParamPtrOutput() DatahubTaskSourceResourceEsParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamArgs) ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamOutput).ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceEsParamPtrInput is an input type that accepts DatahubTaskSourceResourceEsParamArgs, DatahubTaskSourceResourceEsParamPtr and DatahubTaskSourceResourceEsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamPtrInput` via:
//
//	        DatahubTaskSourceResourceEsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceEsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamPtrOutput() DatahubTaskSourceResourceEsParamPtrOutput
	ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamPtrOutput
}

type datahubTaskSourceResourceEsParamPtrType DatahubTaskSourceResourceEsParamArgs

func DatahubTaskSourceResourceEsParamPtr(v *DatahubTaskSourceResourceEsParamArgs) DatahubTaskSourceResourceEsParamPtrInput {
	return (*datahubTaskSourceResourceEsParamPtrType)(v)
}

func (*datahubTaskSourceResourceEsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceEsParamPtrType) ToDatahubTaskSourceResourceEsParamPtrOutput() DatahubTaskSourceResourceEsParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceEsParamPtrType) ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamPtrOutput)
}

type DatahubTaskSourceResourceEsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamOutput) ToDatahubTaskSourceResourceEsParamOutput() DatahubTaskSourceResourceEsParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamOutput) ToDatahubTaskSourceResourceEsParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamOutput) ToDatahubTaskSourceResourceEsParamPtrOutput() DatahubTaskSourceResourceEsParamPtrOutput {
	return o.ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceEsParamOutput) ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceEsParam) *DatahubTaskSourceResourceEsParam {
		return &v
	}).(DatahubTaskSourceResourceEsParamPtrOutput)
}

// key for data in non-json format.
func (o DatahubTaskSourceResourceEsParamOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.ContentKey }).(pulumi.StringPtrOutput)
}

// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
func (o DatahubTaskSourceResourceEsParamOutput) DatabasePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.DatabasePrimaryKey }).(pulumi.StringPtrOutput)
}

// Es date suffix.
func (o DatahubTaskSourceResourceEsParamOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The field name of the document ID value dumped into Es.
func (o DatahubTaskSourceResourceEsParamOutput) DocumentIdField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.DocumentIdField }).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskSourceResourceEsParamOutput) DropCls() DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *DatahubTaskSourceResourceEsParamDropCls { return v.DropCls }).(DatahubTaskSourceResourceEsParamDropClsPtrOutput)
}

// dead letter queue.
func (o DatahubTaskSourceResourceEsParamOutput) DropDlq() DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *DatahubTaskSourceResourceEsParamDropDlq { return v.DropDlq }).(DatahubTaskSourceResourceEsParamDropDlqPtrOutput)
}

// Whether Es discards messages in non-json format.
func (o DatahubTaskSourceResourceEsParamOutput) DropInvalidJsonMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *bool { return v.DropInvalidJsonMessage }).(pulumi.BoolPtrOutput)
}

// Whether Es discards the message of parsing failure.
func (o DatahubTaskSourceResourceEsParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// Es index name.
func (o DatahubTaskSourceResourceEsParamOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.Index }).(pulumi.StringPtrOutput)
}

// Es custom index name type, STRING, JSONPATH, the default is STRING.
func (o DatahubTaskSourceResourceEsParamOutput) IndexType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.IndexType }).(pulumi.StringPtrOutput)
}

// Es Password.
func (o DatahubTaskSourceResourceEsParamOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Es connection port.
func (o DatahubTaskSourceResourceEsParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Resource.
func (o DatahubTaskSourceResourceEsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceEsParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskSourceResourceEsParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskSourceResourceEsParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Es UserName.
func (o DatahubTaskSourceResourceEsParamOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParam) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceEsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamPtrOutput) ToDatahubTaskSourceResourceEsParamPtrOutput() DatahubTaskSourceResourceEsParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamPtrOutput) ToDatahubTaskSourceResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamPtrOutput) Elem() DatahubTaskSourceResourceEsParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) DatahubTaskSourceResourceEsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceEsParam
		return ret
	}).(DatahubTaskSourceResourceEsParamOutput)
}

// key for data in non-json format.
func (o DatahubTaskSourceResourceEsParamPtrOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.ContentKey
	}).(pulumi.StringPtrOutput)
}

// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DatabasePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.DatabasePrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Es date suffix.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.DateFormat
	}).(pulumi.StringPtrOutput)
}

// The field name of the document ID value dumped into Es.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DocumentIdField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.DocumentIdField
	}).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DropCls() DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *DatahubTaskSourceResourceEsParamDropCls {
		if v == nil {
			return nil
		}
		return v.DropCls
	}).(DatahubTaskSourceResourceEsParamDropClsPtrOutput)
}

// dead letter queue.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DropDlq() DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *DatahubTaskSourceResourceEsParamDropDlq {
		if v == nil {
			return nil
		}
		return v.DropDlq
	}).(DatahubTaskSourceResourceEsParamDropDlqPtrOutput)
}

// Whether Es discards messages in non-json format.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DropInvalidJsonMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidJsonMessage
	}).(pulumi.BoolPtrOutput)
}

// Whether Es discards the message of parsing failure.
func (o DatahubTaskSourceResourceEsParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// Es index name.
func (o DatahubTaskSourceResourceEsParamPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.Index
	}).(pulumi.StringPtrOutput)
}

// Es custom index name type, STRING, JSONPATH, the default is STRING.
func (o DatahubTaskSourceResourceEsParamPtrOutput) IndexType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.IndexType
	}).(pulumi.StringPtrOutput)
}

// Es Password.
func (o DatahubTaskSourceResourceEsParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Es connection port.
func (o DatahubTaskSourceResourceEsParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Resource.
func (o DatahubTaskSourceResourceEsParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceEsParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskSourceResourceEsParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskSourceResourceEsParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Es UserName.
func (o DatahubTaskSourceResourceEsParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropCls struct {
	// cls LogSet id.
	DropClsLogSet *string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin *string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion *string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId *string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls *bool `pulumi:"dropInvalidMessageToCls"`
}

// DatahubTaskSourceResourceEsParamDropClsInput is an input type that accepts DatahubTaskSourceResourceEsParamDropClsArgs and DatahubTaskSourceResourceEsParamDropClsOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropClsInput` via:
//
//	DatahubTaskSourceResourceEsParamDropClsArgs{...}
type DatahubTaskSourceResourceEsParamDropClsInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropClsOutput() DatahubTaskSourceResourceEsParamDropClsOutput
	ToDatahubTaskSourceResourceEsParamDropClsOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropClsOutput
}

type DatahubTaskSourceResourceEsParamDropClsArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringPtrInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringPtrInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringPtrInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringPtrInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolPtrInput `pulumi:"dropInvalidMessageToCls"`
}

func (DatahubTaskSourceResourceEsParamDropClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropCls)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamDropClsArgs) ToDatahubTaskSourceResourceEsParamDropClsOutput() DatahubTaskSourceResourceEsParamDropClsOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropClsOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropClsArgs) ToDatahubTaskSourceResourceEsParamDropClsOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropClsOutput)
}

func (i DatahubTaskSourceResourceEsParamDropClsArgs) ToDatahubTaskSourceResourceEsParamDropClsPtrOutput() DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropClsArgs) ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropClsOutput).ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceEsParamDropClsPtrInput is an input type that accepts DatahubTaskSourceResourceEsParamDropClsArgs, DatahubTaskSourceResourceEsParamDropClsPtr and DatahubTaskSourceResourceEsParamDropClsPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropClsPtrInput` via:
//
//	        DatahubTaskSourceResourceEsParamDropClsArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceEsParamDropClsPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropClsPtrOutput() DatahubTaskSourceResourceEsParamDropClsPtrOutput
	ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropClsPtrOutput
}

type datahubTaskSourceResourceEsParamDropClsPtrType DatahubTaskSourceResourceEsParamDropClsArgs

func DatahubTaskSourceResourceEsParamDropClsPtr(v *DatahubTaskSourceResourceEsParamDropClsArgs) DatahubTaskSourceResourceEsParamDropClsPtrInput {
	return (*datahubTaskSourceResourceEsParamDropClsPtrType)(v)
}

func (*datahubTaskSourceResourceEsParamDropClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropCls)(nil)).Elem()
}

func (i *datahubTaskSourceResourceEsParamDropClsPtrType) ToDatahubTaskSourceResourceEsParamDropClsPtrOutput() DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceEsParamDropClsPtrType) ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropClsPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropClsOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropCls)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropClsOutput) ToDatahubTaskSourceResourceEsParamDropClsOutput() DatahubTaskSourceResourceEsParamDropClsOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropClsOutput) ToDatahubTaskSourceResourceEsParamDropClsOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropClsOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropClsOutput) ToDatahubTaskSourceResourceEsParamDropClsPtrOutput() DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return o.ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceEsParamDropClsOutput) ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceEsParamDropCls) *DatahubTaskSourceResourceEsParamDropCls {
		return &v
	}).(DatahubTaskSourceResourceEsParamDropClsPtrOutput)
}

// cls LogSet id.
func (o DatahubTaskSourceResourceEsParamDropClsOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropCls) *string { return v.DropClsLogSet }).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskSourceResourceEsParamDropClsOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropCls) *string { return v.DropClsOwneruin }).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskSourceResourceEsParamDropClsOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropCls) *string { return v.DropClsRegion }).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskSourceResourceEsParamDropClsOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropCls) *string { return v.DropClsTopicId }).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskSourceResourceEsParamDropClsOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropCls) *bool { return v.DropInvalidMessageToCls }).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropClsPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropCls)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) ToDatahubTaskSourceResourceEsParamDropClsPtrOutput() DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) ToDatahubTaskSourceResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) Elem() DatahubTaskSourceResourceEsParamDropClsOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropCls) DatahubTaskSourceResourceEsParamDropCls {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceEsParamDropCls
		return ret
	}).(DatahubTaskSourceResourceEsParamDropClsOutput)
}

// cls LogSet id.
func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsLogSet
	}).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsOwneruin
	}).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsRegion
	}).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsTopicId
	}).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskSourceResourceEsParamDropClsPtrOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropCls) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlq struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType *string `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam *DatahubTaskSourceResourceEsParamDropDlqKafkaParam `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts *int `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval *int `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam *DatahubTaskSourceResourceEsParamDropDlqTopicParam `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type string `pulumi:"type"`
}

// DatahubTaskSourceResourceEsParamDropDlqInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqArgs and DatahubTaskSourceResourceEsParamDropDlqOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqInput` via:
//
//	DatahubTaskSourceResourceEsParamDropDlqArgs{...}
type DatahubTaskSourceResourceEsParamDropDlqInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqOutput() DatahubTaskSourceResourceEsParamDropDlqOutput
	ToDatahubTaskSourceResourceEsParamDropDlqOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqOutput
}

type DatahubTaskSourceResourceEsParamDropDlqArgs struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType pulumi.StringPtrInput `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrInput `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts pulumi.IntPtrInput `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval pulumi.IntPtrInput `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrInput `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskSourceResourceEsParamDropDlqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamDropDlqArgs) ToDatahubTaskSourceResourceEsParamDropDlqOutput() DatahubTaskSourceResourceEsParamDropDlqOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqArgs) ToDatahubTaskSourceResourceEsParamDropDlqOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqOutput)
}

func (i DatahubTaskSourceResourceEsParamDropDlqArgs) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutput() DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqArgs) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqOutput).ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceEsParamDropDlqPtrInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqArgs, DatahubTaskSourceResourceEsParamDropDlqPtr and DatahubTaskSourceResourceEsParamDropDlqPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqPtrInput` via:
//
//	        DatahubTaskSourceResourceEsParamDropDlqArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceEsParamDropDlqPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqPtrOutput() DatahubTaskSourceResourceEsParamDropDlqPtrOutput
	ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqPtrOutput
}

type datahubTaskSourceResourceEsParamDropDlqPtrType DatahubTaskSourceResourceEsParamDropDlqArgs

func DatahubTaskSourceResourceEsParamDropDlqPtr(v *DatahubTaskSourceResourceEsParamDropDlqArgs) DatahubTaskSourceResourceEsParamDropDlqPtrInput {
	return (*datahubTaskSourceResourceEsParamDropDlqPtrType)(v)
}

func (*datahubTaskSourceResourceEsParamDropDlqPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (i *datahubTaskSourceResourceEsParamDropDlqPtrType) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutput() DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceEsParamDropDlqPtrType) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqOutput) ToDatahubTaskSourceResourceEsParamDropDlqOutput() DatahubTaskSourceResourceEsParamDropDlqOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqOutput) ToDatahubTaskSourceResourceEsParamDropDlqOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqOutput) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutput() DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return o.ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceEsParamDropDlqOutput) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceEsParamDropDlq) *DatahubTaskSourceResourceEsParamDropDlq {
		return &v
	}).(DatahubTaskSourceResourceEsParamDropDlqPtrOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskSourceResourceEsParamDropDlqOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlq) *string { return v.DlqType }).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskSourceResourceEsParamDropDlqOutput) KafkaParam() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlq) *DatahubTaskSourceResourceEsParamDropDlqKafkaParam {
		return v.KafkaParam
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskSourceResourceEsParamDropDlqOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlq) *int { return v.MaxRetryAttempts }).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskSourceResourceEsParamDropDlqOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlq) *int { return v.RetryInterval }).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskSourceResourceEsParamDropDlqOutput) TopicParam() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlq) *DatahubTaskSourceResourceEsParamDropDlqTopicParam {
		return v.TopicParam
	}).(DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskSourceResourceEsParamDropDlqOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlq) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutput() DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) ToDatahubTaskSourceResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) Elem() DatahubTaskSourceResourceEsParamDropDlqOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) DatahubTaskSourceResourceEsParamDropDlq {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceEsParamDropDlq
		return ret
	}).(DatahubTaskSourceResourceEsParamDropDlqOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) *string {
		if v == nil {
			return nil
		}
		return v.DlqType
	}).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) KafkaParam() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) *DatahubTaskSourceResourceEsParamDropDlqKafkaParam {
		if v == nil {
			return nil
		}
		return v.KafkaParam
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetryAttempts
	}).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) *int {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) TopicParam() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) *DatahubTaskSourceResourceEsParamDropDlqTopicParam {
		if v == nil {
			return nil
		}
		return v.TopicParam
	}).(DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskSourceResourceEsParamDropDlqPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlq) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParam struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType *string `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration *bool `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum *int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit *int `pulumi:"qpsLimit"`
	// instance resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName *string `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime *int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic *string `pulumi:"topic"`
	// Topic id.
	TopicId *string `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping *bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId *int `pulumi:"zoneId"`
}

// DatahubTaskSourceResourceEsParamDropDlqKafkaParamInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs and DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqKafkaParamInput` via:
//
//	DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs{...}
type DatahubTaskSourceResourceEsParamDropDlqKafkaParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput
	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolPtrInput `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntPtrInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntPtrInput `pulumi:"qpsLimit"`
	// instance resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Topic id.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolPtrInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntPtrInput `pulumi:"zoneId"`
}

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput)
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput).ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs, DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtr and DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrInput` via:
//
//	        DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput
	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput
}

type datahubTaskSourceResourceEsParamDropDlqKafkaParamPtrType DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs

func DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtr(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs) DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrInput {
	return (*datahubTaskSourceResourceEsParamDropDlqKafkaParamPtrType)(v)
}

func (*datahubTaskSourceResourceEsParamDropDlqKafkaParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceEsParamDropDlqKafkaParamPtrType) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceEsParamDropDlqKafkaParamPtrType) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *DatahubTaskSourceResourceEsParamDropDlqKafkaParam {
		return &v
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool { return v.EnableToleration }).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int { return v.PartitionNum }).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int { return v.QpsLimit }).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) TableMappings() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) []DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping {
		return v.TableMappings
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool { return v.UseTableMapping }).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int { return v.ZoneId }).(pulumi.IntPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) Elem() DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) DatahubTaskSourceResourceEsParamDropDlqKafkaParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceEsParamDropDlqKafkaParam
		return ret
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.EnableToleration
	}).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNum
	}).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.QpsLimit
	}).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// instance name.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) TableMappings() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) []DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping {
		if v == nil {
			return nil
		}
		return v.TableMappings
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseTableMapping
	}).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping struct {
	// database name.
	Database string `pulumi:"database"`
	// table name,use, to separate.
	Table string `pulumi:"table"`
	// Topic name.
	Topic string `pulumi:"topic"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
}

// DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs and DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingInput` via:
//
//	DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs{...}
type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput
	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs struct {
	// database name.
	Database pulumi.StringInput `pulumi:"database"`
	// table name,use, to separate.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

// DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray and DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput` via:
//
//	DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray{ DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs{...} }
type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
	ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray []DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingInput

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

// database name.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// table name,use, to separate.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic ID.
func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping {
		return vs[0].([]DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMapping)[vs[1].(int)]
	}).(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType *string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime *int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId *string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
}

// DatahubTaskSourceResourceEsParamDropDlqTopicParamInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs and DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqTopicParamInput` via:
//
//	DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs{...}
type DatahubTaskSourceResourceEsParamDropDlqTopicParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput
	ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput
}

type DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
}

func (DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput)
}

func (i DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput).ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrInput is an input type that accepts DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs, DatahubTaskSourceResourceEsParamDropDlqTopicParamPtr and DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrInput` via:
//
//	        DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput
	ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput
}

type datahubTaskSourceResourceEsParamDropDlqTopicParamPtrType DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs

func DatahubTaskSourceResourceEsParamDropDlqTopicParamPtr(v *DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs) DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrInput {
	return (*datahubTaskSourceResourceEsParamDropDlqTopicParamPtrType)(v)
}

func (*datahubTaskSourceResourceEsParamDropDlqTopicParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceEsParamDropDlqTopicParamPtrType) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceEsParamDropDlqTopicParamPtrType) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *DatahubTaskSourceResourceEsParamDropDlqTopicParam {
		return &v
	}).(DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEsParamDropDlqTopicParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) ToDatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) Elem() DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) DatahubTaskSourceResourceEsParamDropDlqTopicParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceEsParamDropDlqTopicParam
		return ret
	}).(DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEsParamDropDlqTopicParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceEventBusParam struct {
	// SCF function name.
	FunctionName *string `pulumi:"functionName"`
	// SCF namespace.
	Namespace *string `pulumi:"namespace"`
	// SCF version and alias.
	Qualifier *string `pulumi:"qualifier"`
	// instance id.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// resource type. EB_COS/EB_ES/EB_CLS.
	Type string `pulumi:"type"`
}

// DatahubTaskSourceResourceEventBusParamInput is an input type that accepts DatahubTaskSourceResourceEventBusParamArgs and DatahubTaskSourceResourceEventBusParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEventBusParamInput` via:
//
//	DatahubTaskSourceResourceEventBusParamArgs{...}
type DatahubTaskSourceResourceEventBusParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEventBusParamOutput() DatahubTaskSourceResourceEventBusParamOutput
	ToDatahubTaskSourceResourceEventBusParamOutputWithContext(context.Context) DatahubTaskSourceResourceEventBusParamOutput
}

type DatahubTaskSourceResourceEventBusParamArgs struct {
	// SCF function name.
	FunctionName pulumi.StringPtrInput `pulumi:"functionName"`
	// SCF namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SCF version and alias.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
	// instance id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// resource type. EB_COS/EB_ES/EB_CLS.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskSourceResourceEventBusParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEventBusParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceEventBusParamArgs) ToDatahubTaskSourceResourceEventBusParamOutput() DatahubTaskSourceResourceEventBusParamOutput {
	return i.ToDatahubTaskSourceResourceEventBusParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEventBusParamArgs) ToDatahubTaskSourceResourceEventBusParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEventBusParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEventBusParamOutput)
}

func (i DatahubTaskSourceResourceEventBusParamArgs) ToDatahubTaskSourceResourceEventBusParamPtrOutput() DatahubTaskSourceResourceEventBusParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceEventBusParamArgs) ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEventBusParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEventBusParamOutput).ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceEventBusParamPtrInput is an input type that accepts DatahubTaskSourceResourceEventBusParamArgs, DatahubTaskSourceResourceEventBusParamPtr and DatahubTaskSourceResourceEventBusParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceEventBusParamPtrInput` via:
//
//	        DatahubTaskSourceResourceEventBusParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceEventBusParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceEventBusParamPtrOutput() DatahubTaskSourceResourceEventBusParamPtrOutput
	ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceEventBusParamPtrOutput
}

type datahubTaskSourceResourceEventBusParamPtrType DatahubTaskSourceResourceEventBusParamArgs

func DatahubTaskSourceResourceEventBusParamPtr(v *DatahubTaskSourceResourceEventBusParamArgs) DatahubTaskSourceResourceEventBusParamPtrInput {
	return (*datahubTaskSourceResourceEventBusParamPtrType)(v)
}

func (*datahubTaskSourceResourceEventBusParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEventBusParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceEventBusParamPtrType) ToDatahubTaskSourceResourceEventBusParamPtrOutput() DatahubTaskSourceResourceEventBusParamPtrOutput {
	return i.ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceEventBusParamPtrType) ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEventBusParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceEventBusParamPtrOutput)
}

type DatahubTaskSourceResourceEventBusParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEventBusParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceEventBusParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEventBusParamOutput) ToDatahubTaskSourceResourceEventBusParamOutput() DatahubTaskSourceResourceEventBusParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEventBusParamOutput) ToDatahubTaskSourceResourceEventBusParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEventBusParamOutput {
	return o
}

func (o DatahubTaskSourceResourceEventBusParamOutput) ToDatahubTaskSourceResourceEventBusParamPtrOutput() DatahubTaskSourceResourceEventBusParamPtrOutput {
	return o.ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceEventBusParamOutput) ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEventBusParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceEventBusParam) *DatahubTaskSourceResourceEventBusParam {
		return &v
	}).(DatahubTaskSourceResourceEventBusParamPtrOutput)
}

// SCF function name.
func (o DatahubTaskSourceResourceEventBusParamOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEventBusParam) *string { return v.FunctionName }).(pulumi.StringPtrOutput)
}

// SCF namespace.
func (o DatahubTaskSourceResourceEventBusParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEventBusParam) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SCF version and alias.
func (o DatahubTaskSourceResourceEventBusParamOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEventBusParam) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// instance id.
func (o DatahubTaskSourceResourceEventBusParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEventBusParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceEventBusParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEventBusParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// resource type. EB_COS/EB_ES/EB_CLS.
func (o DatahubTaskSourceResourceEventBusParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceEventBusParam) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceEventBusParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceEventBusParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceEventBusParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceEventBusParamPtrOutput) ToDatahubTaskSourceResourceEventBusParamPtrOutput() DatahubTaskSourceResourceEventBusParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEventBusParamPtrOutput) ToDatahubTaskSourceResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceEventBusParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceEventBusParamPtrOutput) Elem() DatahubTaskSourceResourceEventBusParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) DatahubTaskSourceResourceEventBusParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceEventBusParam
		return ret
	}).(DatahubTaskSourceResourceEventBusParamOutput)
}

// SCF function name.
func (o DatahubTaskSourceResourceEventBusParamPtrOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return v.FunctionName
	}).(pulumi.StringPtrOutput)
}

// SCF namespace.
func (o DatahubTaskSourceResourceEventBusParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SCF version and alias.
func (o DatahubTaskSourceResourceEventBusParamPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// instance id.
func (o DatahubTaskSourceResourceEventBusParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceEventBusParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// resource type. EB_COS/EB_ES/EB_CLS.
func (o DatahubTaskSourceResourceEventBusParamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceKafkaParam struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType *string `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration *bool `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum *int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit *int `pulumi:"qpsLimit"`
	// instance resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName *string `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime *int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []DatahubTaskSourceResourceKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic *string `pulumi:"topic"`
	// Topic id.
	TopicId *string `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping *bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId *int `pulumi:"zoneId"`
}

// DatahubTaskSourceResourceKafkaParamInput is an input type that accepts DatahubTaskSourceResourceKafkaParamArgs and DatahubTaskSourceResourceKafkaParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceKafkaParamInput` via:
//
//	DatahubTaskSourceResourceKafkaParamArgs{...}
type DatahubTaskSourceResourceKafkaParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceKafkaParamOutput() DatahubTaskSourceResourceKafkaParamOutput
	ToDatahubTaskSourceResourceKafkaParamOutputWithContext(context.Context) DatahubTaskSourceResourceKafkaParamOutput
}

type DatahubTaskSourceResourceKafkaParamArgs struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolPtrInput `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntPtrInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntPtrInput `pulumi:"qpsLimit"`
	// instance resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings DatahubTaskSourceResourceKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Topic id.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolPtrInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntPtrInput `pulumi:"zoneId"`
}

func (DatahubTaskSourceResourceKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceKafkaParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceKafkaParamArgs) ToDatahubTaskSourceResourceKafkaParamOutput() DatahubTaskSourceResourceKafkaParamOutput {
	return i.ToDatahubTaskSourceResourceKafkaParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceKafkaParamArgs) ToDatahubTaskSourceResourceKafkaParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceKafkaParamOutput)
}

func (i DatahubTaskSourceResourceKafkaParamArgs) ToDatahubTaskSourceResourceKafkaParamPtrOutput() DatahubTaskSourceResourceKafkaParamPtrOutput {
	return i.ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceKafkaParamArgs) ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceKafkaParamOutput).ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceKafkaParamPtrInput is an input type that accepts DatahubTaskSourceResourceKafkaParamArgs, DatahubTaskSourceResourceKafkaParamPtr and DatahubTaskSourceResourceKafkaParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceKafkaParamPtrInput` via:
//
//	        DatahubTaskSourceResourceKafkaParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceKafkaParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceKafkaParamPtrOutput() DatahubTaskSourceResourceKafkaParamPtrOutput
	ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceKafkaParamPtrOutput
}

type datahubTaskSourceResourceKafkaParamPtrType DatahubTaskSourceResourceKafkaParamArgs

func DatahubTaskSourceResourceKafkaParamPtr(v *DatahubTaskSourceResourceKafkaParamArgs) DatahubTaskSourceResourceKafkaParamPtrInput {
	return (*datahubTaskSourceResourceKafkaParamPtrType)(v)
}

func (*datahubTaskSourceResourceKafkaParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceKafkaParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceKafkaParamPtrType) ToDatahubTaskSourceResourceKafkaParamPtrOutput() DatahubTaskSourceResourceKafkaParamPtrOutput {
	return i.ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceKafkaParamPtrType) ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceKafkaParamPtrOutput)
}

type DatahubTaskSourceResourceKafkaParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceKafkaParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceKafkaParamOutput) ToDatahubTaskSourceResourceKafkaParamOutput() DatahubTaskSourceResourceKafkaParamOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamOutput) ToDatahubTaskSourceResourceKafkaParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamOutput) ToDatahubTaskSourceResourceKafkaParamPtrOutput() DatahubTaskSourceResourceKafkaParamPtrOutput {
	return o.ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceKafkaParamOutput) ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceKafkaParam) *DatahubTaskSourceResourceKafkaParam {
		return &v
	}).(DatahubTaskSourceResourceKafkaParamPtrOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskSourceResourceKafkaParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskSourceResourceKafkaParamOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *bool { return v.EnableToleration }).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceKafkaParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskSourceResourceKafkaParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskSourceResourceKafkaParamOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *int { return v.PartitionNum }).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskSourceResourceKafkaParamOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *int { return v.QpsLimit }).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskSourceResourceKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o DatahubTaskSourceResourceKafkaParamOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskSourceResourceKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskSourceResourceKafkaParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskSourceResourceKafkaParamOutput) TableMappings() DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) []DatahubTaskSourceResourceKafkaParamTableMapping {
		return v.TableMappings
	}).(DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskSourceResourceKafkaParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskSourceResourceKafkaParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskSourceResourceKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskSourceResourceKafkaParamOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *bool { return v.UseTableMapping }).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskSourceResourceKafkaParamOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParam) *int { return v.ZoneId }).(pulumi.IntPtrOutput)
}

type DatahubTaskSourceResourceKafkaParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceKafkaParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceKafkaParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceKafkaParamPtrOutput) ToDatahubTaskSourceResourceKafkaParamPtrOutput() DatahubTaskSourceResourceKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamPtrOutput) ToDatahubTaskSourceResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamPtrOutput) Elem() DatahubTaskSourceResourceKafkaParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) DatahubTaskSourceResourceKafkaParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceKafkaParam
		return ret
	}).(DatahubTaskSourceResourceKafkaParamOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.EnableToleration
	}).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNum
	}).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.QpsLimit
	}).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// instance name.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) TableMappings() DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) []DatahubTaskSourceResourceKafkaParamTableMapping {
		if v == nil {
			return nil
		}
		return v.TableMappings
	}).(DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseTableMapping
	}).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskSourceResourceKafkaParamPtrOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskSourceResourceKafkaParamTableMapping struct {
	// database name.
	Database string `pulumi:"database"`
	// table name,use, to separate.
	Table string `pulumi:"table"`
	// Topic name.
	Topic string `pulumi:"topic"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
}

// DatahubTaskSourceResourceKafkaParamTableMappingInput is an input type that accepts DatahubTaskSourceResourceKafkaParamTableMappingArgs and DatahubTaskSourceResourceKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceKafkaParamTableMappingInput` via:
//
//	DatahubTaskSourceResourceKafkaParamTableMappingArgs{...}
type DatahubTaskSourceResourceKafkaParamTableMappingInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceKafkaParamTableMappingOutput() DatahubTaskSourceResourceKafkaParamTableMappingOutput
	ToDatahubTaskSourceResourceKafkaParamTableMappingOutputWithContext(context.Context) DatahubTaskSourceResourceKafkaParamTableMappingOutput
}

type DatahubTaskSourceResourceKafkaParamTableMappingArgs struct {
	// database name.
	Database pulumi.StringInput `pulumi:"database"`
	// table name,use, to separate.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DatahubTaskSourceResourceKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourceKafkaParamTableMappingArgs) ToDatahubTaskSourceResourceKafkaParamTableMappingOutput() DatahubTaskSourceResourceKafkaParamTableMappingOutput {
	return i.ToDatahubTaskSourceResourceKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceKafkaParamTableMappingArgs) ToDatahubTaskSourceResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceKafkaParamTableMappingOutput)
}

// DatahubTaskSourceResourceKafkaParamTableMappingArrayInput is an input type that accepts DatahubTaskSourceResourceKafkaParamTableMappingArray and DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceKafkaParamTableMappingArrayInput` via:
//
//	DatahubTaskSourceResourceKafkaParamTableMappingArray{ DatahubTaskSourceResourceKafkaParamTableMappingArgs{...} }
type DatahubTaskSourceResourceKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutput() DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput
	ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutputWithContext(context.Context) DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput
}

type DatahubTaskSourceResourceKafkaParamTableMappingArray []DatahubTaskSourceResourceKafkaParamTableMappingInput

func (DatahubTaskSourceResourceKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourceKafkaParamTableMappingArray) ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutput() DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput {
	return i.ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceKafkaParamTableMappingArray) ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput)
}

type DatahubTaskSourceResourceKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourceKafkaParamTableMappingOutput) ToDatahubTaskSourceResourceKafkaParamTableMappingOutput() DatahubTaskSourceResourceKafkaParamTableMappingOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamTableMappingOutput) ToDatahubTaskSourceResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamTableMappingOutput {
	return o
}

// database name.
func (o DatahubTaskSourceResourceKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// table name,use, to separate.
func (o DatahubTaskSourceResourceKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name.
func (o DatahubTaskSourceResourceKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic ID.
func (o DatahubTaskSourceResourceKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput) ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutput() DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput) ToDatahubTaskSourceResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskSourceResourceKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskSourceResourceKafkaParamTableMapping {
		return vs[0].([]DatahubTaskSourceResourceKafkaParamTableMapping)[vs[1].(int)]
	}).(DatahubTaskSourceResourceKafkaParamTableMappingOutput)
}

type DatahubTaskSourceResourceMariaDbParam struct {
	// MariaDB database name, * for all database.
	Database string `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges *string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery *bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix *bool `pulumi:"isTablePrefix"`
	// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns *string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat *string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema *bool `pulumi:"recordWithSchema"`
	// MariaDB connection Id.
	Resource string `pulumi:"resource"`
	// schema_only|initial, default initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// DatahubTaskSourceResourceMariaDbParamInput is an input type that accepts DatahubTaskSourceResourceMariaDbParamArgs and DatahubTaskSourceResourceMariaDbParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMariaDbParamInput` via:
//
//	DatahubTaskSourceResourceMariaDbParamArgs{...}
type DatahubTaskSourceResourceMariaDbParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMariaDbParamOutput() DatahubTaskSourceResourceMariaDbParamOutput
	ToDatahubTaskSourceResourceMariaDbParamOutputWithContext(context.Context) DatahubTaskSourceResourceMariaDbParamOutput
}

type DatahubTaskSourceResourceMariaDbParamArgs struct {
	// MariaDB database name, * for all database.
	Database pulumi.StringInput `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringPtrInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolPtrInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolPtrInput `pulumi:"isTablePrefix"`
	// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringPtrInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolPtrInput `pulumi:"recordWithSchema"`
	// MariaDB connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial, default initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (DatahubTaskSourceResourceMariaDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMariaDbParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceMariaDbParamArgs) ToDatahubTaskSourceResourceMariaDbParamOutput() DatahubTaskSourceResourceMariaDbParamOutput {
	return i.ToDatahubTaskSourceResourceMariaDbParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMariaDbParamArgs) ToDatahubTaskSourceResourceMariaDbParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMariaDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMariaDbParamOutput)
}

func (i DatahubTaskSourceResourceMariaDbParamArgs) ToDatahubTaskSourceResourceMariaDbParamPtrOutput() DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return i.ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMariaDbParamArgs) ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMariaDbParamOutput).ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceMariaDbParamPtrInput is an input type that accepts DatahubTaskSourceResourceMariaDbParamArgs, DatahubTaskSourceResourceMariaDbParamPtr and DatahubTaskSourceResourceMariaDbParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMariaDbParamPtrInput` via:
//
//	        DatahubTaskSourceResourceMariaDbParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceMariaDbParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMariaDbParamPtrOutput() DatahubTaskSourceResourceMariaDbParamPtrOutput
	ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceMariaDbParamPtrOutput
}

type datahubTaskSourceResourceMariaDbParamPtrType DatahubTaskSourceResourceMariaDbParamArgs

func DatahubTaskSourceResourceMariaDbParamPtr(v *DatahubTaskSourceResourceMariaDbParamArgs) DatahubTaskSourceResourceMariaDbParamPtrInput {
	return (*datahubTaskSourceResourceMariaDbParamPtrType)(v)
}

func (*datahubTaskSourceResourceMariaDbParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMariaDbParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceMariaDbParamPtrType) ToDatahubTaskSourceResourceMariaDbParamPtrOutput() DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return i.ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceMariaDbParamPtrType) ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMariaDbParamPtrOutput)
}

type DatahubTaskSourceResourceMariaDbParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMariaDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMariaDbParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMariaDbParamOutput) ToDatahubTaskSourceResourceMariaDbParamOutput() DatahubTaskSourceResourceMariaDbParamOutput {
	return o
}

func (o DatahubTaskSourceResourceMariaDbParamOutput) ToDatahubTaskSourceResourceMariaDbParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMariaDbParamOutput {
	return o
}

func (o DatahubTaskSourceResourceMariaDbParamOutput) ToDatahubTaskSourceResourceMariaDbParamPtrOutput() DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return o.ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceMariaDbParamOutput) ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceMariaDbParam) *DatahubTaskSourceResourceMariaDbParam {
		return &v
	}).(DatahubTaskSourceResourceMariaDbParamPtrOutput)
}

// MariaDB database name, * for all database.
func (o DatahubTaskSourceResourceMariaDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskSourceResourceMariaDbParamOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *string { return v.IncludeContentChanges }).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskSourceResourceMariaDbParamOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *bool { return v.IncludeQuery }).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskSourceResourceMariaDbParamOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *bool { return v.IsTablePrefix }).(pulumi.BoolPtrOutput)
}

// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskSourceResourceMariaDbParamOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *string { return v.KeyColumns }).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskSourceResourceMariaDbParamOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskSourceResourceMariaDbParamOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *bool { return v.RecordWithSchema }).(pulumi.BoolPtrOutput)
}

// MariaDB connection Id.
func (o DatahubTaskSourceResourceMariaDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial, default initial.
func (o DatahubTaskSourceResourceMariaDbParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskSourceResourceMariaDbParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMariaDbParam) string { return v.Table }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceMariaDbParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMariaDbParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMariaDbParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) ToDatahubTaskSourceResourceMariaDbParamPtrOutput() DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) ToDatahubTaskSourceResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMariaDbParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) Elem() DatahubTaskSourceResourceMariaDbParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) DatahubTaskSourceResourceMariaDbParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceMariaDbParam
		return ret
	}).(DatahubTaskSourceResourceMariaDbParamOutput)
}

// MariaDB database name, * for all database.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.IncludeContentChanges
	}).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQuery
	}).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTablePrefix
	}).(pulumi.BoolPtrOutput)
}

// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyColumns
	}).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.RecordWithSchema
	}).(pulumi.BoolPtrOutput)
}

// MariaDB connection Id.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// schema_only|initial, default initial.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskSourceResourceMariaDbParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceMongoDbParam struct {
	// MongoDB collection.
	Collection string `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting bool `pulumi:"copyExisting"`
	// MongoDB database name.
	Database string `pulumi:"database"`
	// Mongo DB connection ip.
	Ip *string `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent *string `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password *string `pulumi:"password"`
	// aggregation pipeline.
	Pipeline *string `pulumi:"pipeline"`
	// MongoDB connection port.
	Port *int `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference *string `pulumi:"readPreference"`
	// resource id.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName *string `pulumi:"userName"`
}

// DatahubTaskSourceResourceMongoDbParamInput is an input type that accepts DatahubTaskSourceResourceMongoDbParamArgs and DatahubTaskSourceResourceMongoDbParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMongoDbParamInput` via:
//
//	DatahubTaskSourceResourceMongoDbParamArgs{...}
type DatahubTaskSourceResourceMongoDbParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMongoDbParamOutput() DatahubTaskSourceResourceMongoDbParamOutput
	ToDatahubTaskSourceResourceMongoDbParamOutputWithContext(context.Context) DatahubTaskSourceResourceMongoDbParamOutput
}

type DatahubTaskSourceResourceMongoDbParamArgs struct {
	// MongoDB collection.
	Collection pulumi.StringInput `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting pulumi.BoolInput `pulumi:"copyExisting"`
	// MongoDB database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Mongo DB connection ip.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent pulumi.StringPtrInput `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// aggregation pipeline.
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
	// MongoDB connection port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
	// resource id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DatahubTaskSourceResourceMongoDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMongoDbParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceMongoDbParamArgs) ToDatahubTaskSourceResourceMongoDbParamOutput() DatahubTaskSourceResourceMongoDbParamOutput {
	return i.ToDatahubTaskSourceResourceMongoDbParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMongoDbParamArgs) ToDatahubTaskSourceResourceMongoDbParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMongoDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMongoDbParamOutput)
}

func (i DatahubTaskSourceResourceMongoDbParamArgs) ToDatahubTaskSourceResourceMongoDbParamPtrOutput() DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return i.ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMongoDbParamArgs) ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMongoDbParamOutput).ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceMongoDbParamPtrInput is an input type that accepts DatahubTaskSourceResourceMongoDbParamArgs, DatahubTaskSourceResourceMongoDbParamPtr and DatahubTaskSourceResourceMongoDbParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMongoDbParamPtrInput` via:
//
//	        DatahubTaskSourceResourceMongoDbParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceMongoDbParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMongoDbParamPtrOutput() DatahubTaskSourceResourceMongoDbParamPtrOutput
	ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceMongoDbParamPtrOutput
}

type datahubTaskSourceResourceMongoDbParamPtrType DatahubTaskSourceResourceMongoDbParamArgs

func DatahubTaskSourceResourceMongoDbParamPtr(v *DatahubTaskSourceResourceMongoDbParamArgs) DatahubTaskSourceResourceMongoDbParamPtrInput {
	return (*datahubTaskSourceResourceMongoDbParamPtrType)(v)
}

func (*datahubTaskSourceResourceMongoDbParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMongoDbParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceMongoDbParamPtrType) ToDatahubTaskSourceResourceMongoDbParamPtrOutput() DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return i.ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceMongoDbParamPtrType) ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMongoDbParamPtrOutput)
}

type DatahubTaskSourceResourceMongoDbParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMongoDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMongoDbParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMongoDbParamOutput) ToDatahubTaskSourceResourceMongoDbParamOutput() DatahubTaskSourceResourceMongoDbParamOutput {
	return o
}

func (o DatahubTaskSourceResourceMongoDbParamOutput) ToDatahubTaskSourceResourceMongoDbParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMongoDbParamOutput {
	return o
}

func (o DatahubTaskSourceResourceMongoDbParamOutput) ToDatahubTaskSourceResourceMongoDbParamPtrOutput() DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return o.ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceMongoDbParamOutput) ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceMongoDbParam) *DatahubTaskSourceResourceMongoDbParam {
		return &v
	}).(DatahubTaskSourceResourceMongoDbParamPtrOutput)
}

// MongoDB collection.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) string { return v.Collection }).(pulumi.StringOutput)
}

// Whether to copy the stock data, the default parameter is true.
func (o DatahubTaskSourceResourceMongoDbParamOutput) CopyExisting() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) bool { return v.CopyExisting }).(pulumi.BoolOutput)
}

// MongoDB database name.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// Mongo DB connection ip.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
func (o DatahubTaskSourceResourceMongoDbParamOutput) ListeningEvent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *string { return v.ListeningEvent }).(pulumi.StringPtrOutput)
}

// MongoDB database password.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// aggregation pipeline.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *string { return v.Pipeline }).(pulumi.StringPtrOutput)
}

// MongoDB connection port.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Master-slave priority, default master node.
func (o DatahubTaskSourceResourceMongoDbParamOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskSourceResourceMongoDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceMongoDbParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// MongoDB database user name.
func (o DatahubTaskSourceResourceMongoDbParamOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMongoDbParam) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceMongoDbParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMongoDbParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMongoDbParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) ToDatahubTaskSourceResourceMongoDbParamPtrOutput() DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) ToDatahubTaskSourceResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMongoDbParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Elem() DatahubTaskSourceResourceMongoDbParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) DatahubTaskSourceResourceMongoDbParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceMongoDbParam
		return ret
	}).(DatahubTaskSourceResourceMongoDbParamOutput)
}

// MongoDB collection.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Collection
	}).(pulumi.StringPtrOutput)
}

// Whether to copy the stock data, the default parameter is true.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) CopyExisting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *bool {
		if v == nil {
			return nil
		}
		return &v.CopyExisting
	}).(pulumi.BoolPtrOutput)
}

// MongoDB database name.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Mongo DB connection ip.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) ListeningEvent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.ListeningEvent
	}).(pulumi.StringPtrOutput)
}

// MongoDB database password.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// aggregation pipeline.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.Pipeline
	}).(pulumi.StringPtrOutput)
}

// MongoDB connection port.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Master-slave priority, default master node.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// MongoDB database user name.
func (o DatahubTaskSourceResourceMongoDbParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceMySqlParam struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn *string `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode *string `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode *string `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource *string `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom *string `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode *string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField *string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// MySQL database name, * is the whole database.
	Database string `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic *string `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls *DatahubTaskSourceResourceMySqlParamDropCls `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges *string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery *bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix *bool `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
	IsTableRegular *bool `pulumi:"isTableRegular"`
	// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns *string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat *string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema *bool `pulumi:"recordWithSchema"`
	// MySQL connection Id.
	Resource string `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase *string `pulumi:"signalDatabase"`
	// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
	Table string `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex *string `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement *string `pulumi:"topicReplacement"`
}

// DatahubTaskSourceResourceMySqlParamInput is an input type that accepts DatahubTaskSourceResourceMySqlParamArgs and DatahubTaskSourceResourceMySqlParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMySqlParamInput` via:
//
//	DatahubTaskSourceResourceMySqlParamArgs{...}
type DatahubTaskSourceResourceMySqlParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMySqlParamOutput() DatahubTaskSourceResourceMySqlParamOutput
	ToDatahubTaskSourceResourceMySqlParamOutputWithContext(context.Context) DatahubTaskSourceResourceMySqlParamOutput
}

type DatahubTaskSourceResourceMySqlParamArgs struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn pulumi.StringPtrInput `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode pulumi.StringPtrInput `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode pulumi.StringPtrInput `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource pulumi.StringPtrInput `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom pulumi.StringPtrInput `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringPtrInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringPtrInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// MySQL database name, * is the whole database.
	Database pulumi.StringInput `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic pulumi.StringPtrInput `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls DatahubTaskSourceResourceMySqlParamDropClsPtrInput `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringPtrInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolPtrInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolPtrInput `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
	IsTableRegular pulumi.BoolPtrInput `pulumi:"isTableRegular"`
	// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringPtrInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolPtrInput `pulumi:"recordWithSchema"`
	// MySQL connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase pulumi.StringPtrInput `pulumi:"signalDatabase"`
	// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex pulumi.StringPtrInput `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement pulumi.StringPtrInput `pulumi:"topicReplacement"`
}

func (DatahubTaskSourceResourceMySqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMySqlParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceMySqlParamArgs) ToDatahubTaskSourceResourceMySqlParamOutput() DatahubTaskSourceResourceMySqlParamOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMySqlParamArgs) ToDatahubTaskSourceResourceMySqlParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamOutput)
}

func (i DatahubTaskSourceResourceMySqlParamArgs) ToDatahubTaskSourceResourceMySqlParamPtrOutput() DatahubTaskSourceResourceMySqlParamPtrOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMySqlParamArgs) ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamOutput).ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceMySqlParamPtrInput is an input type that accepts DatahubTaskSourceResourceMySqlParamArgs, DatahubTaskSourceResourceMySqlParamPtr and DatahubTaskSourceResourceMySqlParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMySqlParamPtrInput` via:
//
//	        DatahubTaskSourceResourceMySqlParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceMySqlParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMySqlParamPtrOutput() DatahubTaskSourceResourceMySqlParamPtrOutput
	ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceMySqlParamPtrOutput
}

type datahubTaskSourceResourceMySqlParamPtrType DatahubTaskSourceResourceMySqlParamArgs

func DatahubTaskSourceResourceMySqlParamPtr(v *DatahubTaskSourceResourceMySqlParamArgs) DatahubTaskSourceResourceMySqlParamPtrInput {
	return (*datahubTaskSourceResourceMySqlParamPtrType)(v)
}

func (*datahubTaskSourceResourceMySqlParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMySqlParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceMySqlParamPtrType) ToDatahubTaskSourceResourceMySqlParamPtrOutput() DatahubTaskSourceResourceMySqlParamPtrOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceMySqlParamPtrType) ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamPtrOutput)
}

type DatahubTaskSourceResourceMySqlParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMySqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMySqlParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMySqlParamOutput) ToDatahubTaskSourceResourceMySqlParamOutput() DatahubTaskSourceResourceMySqlParamOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamOutput) ToDatahubTaskSourceResourceMySqlParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamOutput) ToDatahubTaskSourceResourceMySqlParamPtrOutput() DatahubTaskSourceResourceMySqlParamPtrOutput {
	return o.ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceMySqlParamOutput) ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceMySqlParam) *DatahubTaskSourceResourceMySqlParam {
		return &v
	}).(DatahubTaskSourceResourceMySqlParamPtrOutput)
}

// the name of the column to be monitored.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataSourceIncrementColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataSourceIncrementColumn }).(pulumi.StringPtrOutput)
}

// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataSourceIncrementMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataSourceIncrementMode }).(pulumi.StringPtrOutput)
}

// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataSourceMonitorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataSourceMonitorMode }).(pulumi.StringPtrOutput)
}

// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataSourceMonitorResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataSourceMonitorResource }).(pulumi.StringPtrOutput)
}

// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataSourceStartFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataSourceStartFrom }).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataTargetInsertMode }).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DataTargetPrimaryKeyField }).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskSourceResourceMySqlParamOutput) DataTargetRecordMappings() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) []DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

// MySQL database name, * is the whole database.
func (o DatahubTaskSourceResourceMySqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
func (o DatahubTaskSourceResourceMySqlParamOutput) DdlTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.DdlTopic }).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskSourceResourceMySqlParamOutput) DropCls() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *DatahubTaskSourceResourceMySqlParamDropCls {
		return v.DropCls
	}).(DatahubTaskSourceResourceMySqlParamDropClsPtrOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskSourceResourceMySqlParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskSourceResourceMySqlParamOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.IncludeContentChanges }).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskSourceResourceMySqlParamOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *bool { return v.IncludeQuery }).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskSourceResourceMySqlParamOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *bool { return v.IsTablePrefix }).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
func (o DatahubTaskSourceResourceMySqlParamOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *bool { return v.IsTableRegular }).(pulumi.BoolPtrOutput)
}

// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskSourceResourceMySqlParamOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.KeyColumns }).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskSourceResourceMySqlParamOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskSourceResourceMySqlParamOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *bool { return v.RecordWithSchema }).(pulumi.BoolPtrOutput)
}

// MySQL connection Id.
func (o DatahubTaskSourceResourceMySqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// database name of signal table.
func (o DatahubTaskSourceResourceMySqlParamOutput) SignalDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.SignalDatabase }).(pulumi.StringPtrOutput)
}

// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
func (o DatahubTaskSourceResourceMySqlParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
func (o DatahubTaskSourceResourceMySqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) string { return v.Table }).(pulumi.StringOutput)
}

// Regular expression for routing events to specific topics, defaults to (.*).
func (o DatahubTaskSourceResourceMySqlParamOutput) TopicRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.TopicRegex }).(pulumi.StringPtrOutput)
}

// TopicRegex, $1, $2.
func (o DatahubTaskSourceResourceMySqlParamOutput) TopicReplacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParam) *string { return v.TopicReplacement }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceMySqlParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMySqlParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMySqlParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMySqlParamPtrOutput) ToDatahubTaskSourceResourceMySqlParamPtrOutput() DatahubTaskSourceResourceMySqlParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamPtrOutput) ToDatahubTaskSourceResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamPtrOutput) Elem() DatahubTaskSourceResourceMySqlParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) DatahubTaskSourceResourceMySqlParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceMySqlParam
		return ret
	}).(DatahubTaskSourceResourceMySqlParamOutput)
}

// the name of the column to be monitored.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataSourceIncrementColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceIncrementColumn
	}).(pulumi.StringPtrOutput)
}

// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataSourceIncrementMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceIncrementMode
	}).(pulumi.StringPtrOutput)
}

// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataSourceMonitorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceMonitorMode
	}).(pulumi.StringPtrOutput)
}

// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataSourceMonitorResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceMonitorResource
	}).(pulumi.StringPtrOutput)
}

// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataSourceStartFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceStartFrom
	}).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetInsertMode
	}).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetPrimaryKeyField
	}).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DataTargetRecordMappings() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) []DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping {
		if v == nil {
			return nil
		}
		return v.DataTargetRecordMappings
	}).(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

// MySQL database name, * is the whole database.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DdlTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DdlTopic
	}).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DropCls() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *DatahubTaskSourceResourceMySqlParamDropCls {
		if v == nil {
			return nil
		}
		return v.DropCls
	}).(DatahubTaskSourceResourceMySqlParamDropClsPtrOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.IncludeContentChanges
	}).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQuery
	}).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTablePrefix
	}).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTableRegular
	}).(pulumi.BoolPtrOutput)
}

// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyColumns
	}).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.RecordWithSchema
	}).(pulumi.BoolPtrOutput)
}

// MySQL connection Id.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// database name of signal table.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) SignalDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.SignalDatabase
	}).(pulumi.StringPtrOutput)
}

// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// Regular expression for routing events to specific topics, defaults to (.*).
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) TopicRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicRegex
	}).(pulumi.StringPtrOutput)
}

// TopicRegex, $1, $2.
func (o DatahubTaskSourceResourceMySqlParamPtrOutput) TopicReplacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicReplacement
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull *bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement *bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName *string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize *string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits *string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue *string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo *string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey *string `pulumi:"jsonKey"`
	// message type.
	Type *string `pulumi:"type"`
}

// DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingInput is an input type that accepts DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs and DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingInput` via:
//
//	DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs{...}
type DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput
	ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Context) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput
}

type DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolPtrInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolPtrInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringPtrInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringPtrInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringPtrInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringPtrInput `pulumi:"jsonKey"`
	// message type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput)
}

// DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayInput is an input type that accepts DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray and DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayInput` via:
//
//	DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray{ DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs{...} }
type DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput
	ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput
}

type DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray []DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingInput

func (DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

type DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *bool { return v.AllowNull }).(pulumi.BoolPtrOutput)
}

// Whether it is an auto-increment column.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *bool { return v.AutoIncrement }).(pulumi.BoolPtrOutput)
}

// Column Name.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// current ColumnSize.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.ColumnSize }).(pulumi.StringPtrOutput)
}

// current Column DecimalDigits.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.DecimalDigits }).(pulumi.StringPtrOutput)
}

// Database table default parameters.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Database table extra fields.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.ExtraInfo }).(pulumi.StringPtrOutput)
}

// The key name of the message.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.JsonKey }).(pulumi.StringPtrOutput)
}

// message type.
func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput() DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping {
		return vs[0].([]DatahubTaskSourceResourceMySqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput)
}

type DatahubTaskSourceResourceMySqlParamDropCls struct {
	// cls LogSet id.
	DropClsLogSet *string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin *string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion *string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId *string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls *bool `pulumi:"dropInvalidMessageToCls"`
}

// DatahubTaskSourceResourceMySqlParamDropClsInput is an input type that accepts DatahubTaskSourceResourceMySqlParamDropClsArgs and DatahubTaskSourceResourceMySqlParamDropClsOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMySqlParamDropClsInput` via:
//
//	DatahubTaskSourceResourceMySqlParamDropClsArgs{...}
type DatahubTaskSourceResourceMySqlParamDropClsInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMySqlParamDropClsOutput() DatahubTaskSourceResourceMySqlParamDropClsOutput
	ToDatahubTaskSourceResourceMySqlParamDropClsOutputWithContext(context.Context) DatahubTaskSourceResourceMySqlParamDropClsOutput
}

type DatahubTaskSourceResourceMySqlParamDropClsArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringPtrInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringPtrInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringPtrInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringPtrInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolPtrInput `pulumi:"dropInvalidMessageToCls"`
}

func (DatahubTaskSourceResourceMySqlParamDropClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDropCls)(nil)).Elem()
}

func (i DatahubTaskSourceResourceMySqlParamDropClsArgs) ToDatahubTaskSourceResourceMySqlParamDropClsOutput() DatahubTaskSourceResourceMySqlParamDropClsOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamDropClsOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMySqlParamDropClsArgs) ToDatahubTaskSourceResourceMySqlParamDropClsOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDropClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamDropClsOutput)
}

func (i DatahubTaskSourceResourceMySqlParamDropClsArgs) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutput() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceMySqlParamDropClsArgs) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamDropClsOutput).ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceMySqlParamDropClsPtrInput is an input type that accepts DatahubTaskSourceResourceMySqlParamDropClsArgs, DatahubTaskSourceResourceMySqlParamDropClsPtr and DatahubTaskSourceResourceMySqlParamDropClsPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceMySqlParamDropClsPtrInput` via:
//
//	        DatahubTaskSourceResourceMySqlParamDropClsArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceMySqlParamDropClsPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutput() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput
	ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(context.Context) DatahubTaskSourceResourceMySqlParamDropClsPtrOutput
}

type datahubTaskSourceResourceMySqlParamDropClsPtrType DatahubTaskSourceResourceMySqlParamDropClsArgs

func DatahubTaskSourceResourceMySqlParamDropClsPtr(v *DatahubTaskSourceResourceMySqlParamDropClsArgs) DatahubTaskSourceResourceMySqlParamDropClsPtrInput {
	return (*datahubTaskSourceResourceMySqlParamDropClsPtrType)(v)
}

func (*datahubTaskSourceResourceMySqlParamDropClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMySqlParamDropCls)(nil)).Elem()
}

func (i *datahubTaskSourceResourceMySqlParamDropClsPtrType) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutput() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return i.ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceMySqlParamDropClsPtrType) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceMySqlParamDropClsPtrOutput)
}

type DatahubTaskSourceResourceMySqlParamDropClsOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMySqlParamDropClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDropCls)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) ToDatahubTaskSourceResourceMySqlParamDropClsOutput() DatahubTaskSourceResourceMySqlParamDropClsOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) ToDatahubTaskSourceResourceMySqlParamDropClsOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDropClsOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutput() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return o.ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceMySqlParamDropCls) *DatahubTaskSourceResourceMySqlParamDropCls {
		return &v
	}).(DatahubTaskSourceResourceMySqlParamDropClsPtrOutput)
}

// cls LogSet id.
func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDropCls) *string { return v.DropClsLogSet }).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDropCls) *string { return v.DropClsOwneruin }).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDropCls) *string { return v.DropClsRegion }).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDropCls) *string { return v.DropClsTopicId }).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskSourceResourceMySqlParamDropClsOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceMySqlParamDropCls) *bool { return v.DropInvalidMessageToCls }).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceMySqlParamDropClsPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceMySqlParamDropCls)(nil)).Elem()
}

func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutput() DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) ToDatahubTaskSourceResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceMySqlParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) Elem() DatahubTaskSourceResourceMySqlParamDropClsOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParamDropCls) DatahubTaskSourceResourceMySqlParamDropCls {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceMySqlParamDropCls
		return ret
	}).(DatahubTaskSourceResourceMySqlParamDropClsOutput)
}

// cls LogSet id.
func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsLogSet
	}).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsOwneruin
	}).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsRegion
	}).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsTopicId
	}).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskSourceResourceMySqlParamDropClsPtrOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceMySqlParamDropCls) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourcePostgreSqlParam struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat *string `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode *string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField *string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// PostgreSQL database name.
	Database string `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular *bool `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns *string `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName string `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema *bool `pulumi:"recordWithSchema"`
	// PostgreSQL connection Id.
	Resource string `pulumi:"resource"`
	// never|initial, default initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
	Table string `pulumi:"table"`
}

// DatahubTaskSourceResourcePostgreSqlParamInput is an input type that accepts DatahubTaskSourceResourcePostgreSqlParamArgs and DatahubTaskSourceResourcePostgreSqlParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourcePostgreSqlParamInput` via:
//
//	DatahubTaskSourceResourcePostgreSqlParamArgs{...}
type DatahubTaskSourceResourcePostgreSqlParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourcePostgreSqlParamOutput() DatahubTaskSourceResourcePostgreSqlParamOutput
	ToDatahubTaskSourceResourcePostgreSqlParamOutputWithContext(context.Context) DatahubTaskSourceResourcePostgreSqlParamOutput
}

type DatahubTaskSourceResourcePostgreSqlParamArgs struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat pulumi.StringPtrInput `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringPtrInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringPtrInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// PostgreSQL database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular pulumi.BoolPtrInput `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringPtrInput `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName pulumi.StringInput `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolPtrInput `pulumi:"recordWithSchema"`
	// PostgreSQL connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// never|initial, default initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (DatahubTaskSourceResourcePostgreSqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourcePostgreSqlParamArgs) ToDatahubTaskSourceResourcePostgreSqlParamOutput() DatahubTaskSourceResourcePostgreSqlParamOutput {
	return i.ToDatahubTaskSourceResourcePostgreSqlParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourcePostgreSqlParamArgs) ToDatahubTaskSourceResourcePostgreSqlParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourcePostgreSqlParamOutput)
}

func (i DatahubTaskSourceResourcePostgreSqlParamArgs) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutput() DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return i.ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourcePostgreSqlParamArgs) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourcePostgreSqlParamOutput).ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourcePostgreSqlParamPtrInput is an input type that accepts DatahubTaskSourceResourcePostgreSqlParamArgs, DatahubTaskSourceResourcePostgreSqlParamPtr and DatahubTaskSourceResourcePostgreSqlParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourcePostgreSqlParamPtrInput` via:
//
//	        DatahubTaskSourceResourcePostgreSqlParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourcePostgreSqlParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourcePostgreSqlParamPtrOutput() DatahubTaskSourceResourcePostgreSqlParamPtrOutput
	ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourcePostgreSqlParamPtrOutput
}

type datahubTaskSourceResourcePostgreSqlParamPtrType DatahubTaskSourceResourcePostgreSqlParamArgs

func DatahubTaskSourceResourcePostgreSqlParamPtr(v *DatahubTaskSourceResourcePostgreSqlParamArgs) DatahubTaskSourceResourcePostgreSqlParamPtrInput {
	return (*datahubTaskSourceResourcePostgreSqlParamPtrType)(v)
}

func (*datahubTaskSourceResourcePostgreSqlParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourcePostgreSqlParamPtrType) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutput() DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return i.ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourcePostgreSqlParamPtrType) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourcePostgreSqlParamPtrOutput)
}

type DatahubTaskSourceResourcePostgreSqlParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourcePostgreSqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourcePostgreSqlParamOutput) ToDatahubTaskSourceResourcePostgreSqlParamOutput() DatahubTaskSourceResourcePostgreSqlParamOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamOutput) ToDatahubTaskSourceResourcePostgreSqlParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamOutput) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutput() DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return o.ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourcePostgreSqlParamOutput) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourcePostgreSqlParam) *DatahubTaskSourceResourcePostgreSqlParam {
		return &v
	}).(DatahubTaskSourceResourcePostgreSqlParamPtrOutput)
}

// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *string { return v.DataFormat }).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *string { return v.DataTargetInsertMode }).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *string { return v.DataTargetPrimaryKeyField }).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) DataTargetRecordMappings() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) []DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

// PostgreSQL database name.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *bool { return v.IsTableRegular }).(pulumi.BoolPtrOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *string { return v.KeyColumns }).(pulumi.StringPtrOutput)
}

// (decoderbufs/pgoutput), default decoderbufs.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) string { return v.PluginName }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *bool { return v.RecordWithSchema }).(pulumi.BoolPtrOutput)
}

// PostgreSQL connection Id.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// never|initial, default initial.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
func (o DatahubTaskSourceResourcePostgreSqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParam) string { return v.Table }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourcePostgreSqlParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourcePostgreSqlParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutput() DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) ToDatahubTaskSourceResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) Elem() DatahubTaskSourceResourcePostgreSqlParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) DatahubTaskSourceResourcePostgreSqlParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourcePostgreSqlParam
		return ret
	}).(DatahubTaskSourceResourcePostgreSqlParamOutput)
}

// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetInsertMode
	}).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetPrimaryKeyField
	}).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) DataTargetRecordMappings() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) []DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping {
		if v == nil {
			return nil
		}
		return v.DataTargetRecordMappings
	}).(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

// PostgreSQL database name.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTableRegular
	}).(pulumi.BoolPtrOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyColumns
	}).(pulumi.StringPtrOutput)
}

// (decoderbufs/pgoutput), default decoderbufs.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) PluginName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.PluginName
	}).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.RecordWithSchema
	}).(pulumi.BoolPtrOutput)
}

// PostgreSQL connection Id.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// never|initial, default initial.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
func (o DatahubTaskSourceResourcePostgreSqlParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull *bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement *bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName *string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize *string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits *string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue *string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo *string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey *string `pulumi:"jsonKey"`
	// message type.
	Type *string `pulumi:"type"`
}

// DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingInput is an input type that accepts DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs and DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingInput` via:
//
//	DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs{...}
type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput
	ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Context) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput
}

type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolPtrInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolPtrInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringPtrInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringPtrInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringPtrInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringPtrInput `pulumi:"jsonKey"`
	// message type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return i.ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

// DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput is an input type that accepts DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray and DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput` via:
//
//	DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray{ DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs{...} }
type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
	ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
}

type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray []DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingInput

func (DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return i.ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *bool { return v.AllowNull }).(pulumi.BoolPtrOutput)
}

// Whether it is an auto-increment column.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *bool { return v.AutoIncrement }).(pulumi.BoolPtrOutput)
}

// Column Name.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// current ColumnSize.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.ColumnSize }).(pulumi.StringPtrOutput)
}

// current Column DecimalDigits.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string {
		return v.DecimalDigits
	}).(pulumi.StringPtrOutput)
}

// Database table default parameters.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Database table extra fields.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.ExtraInfo }).(pulumi.StringPtrOutput)
}

// The key name of the message.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.JsonKey }).(pulumi.StringPtrOutput)
}

// message type.
func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping {
		return vs[0].([]DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

type DatahubTaskSourceResourceScfParam struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize *int `pulumi:"batchSize"`
	// SCF function name.
	FunctionName string `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries *int `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace *string `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier *string `pulumi:"qualifier"`
}

// DatahubTaskSourceResourceScfParamInput is an input type that accepts DatahubTaskSourceResourceScfParamArgs and DatahubTaskSourceResourceScfParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceScfParamInput` via:
//
//	DatahubTaskSourceResourceScfParamArgs{...}
type DatahubTaskSourceResourceScfParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceScfParamOutput() DatahubTaskSourceResourceScfParamOutput
	ToDatahubTaskSourceResourceScfParamOutputWithContext(context.Context) DatahubTaskSourceResourceScfParamOutput
}

type DatahubTaskSourceResourceScfParamArgs struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// SCF function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
}

func (DatahubTaskSourceResourceScfParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceScfParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceScfParamArgs) ToDatahubTaskSourceResourceScfParamOutput() DatahubTaskSourceResourceScfParamOutput {
	return i.ToDatahubTaskSourceResourceScfParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceScfParamArgs) ToDatahubTaskSourceResourceScfParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceScfParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceScfParamOutput)
}

func (i DatahubTaskSourceResourceScfParamArgs) ToDatahubTaskSourceResourceScfParamPtrOutput() DatahubTaskSourceResourceScfParamPtrOutput {
	return i.ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceScfParamArgs) ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceScfParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceScfParamOutput).ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceScfParamPtrInput is an input type that accepts DatahubTaskSourceResourceScfParamArgs, DatahubTaskSourceResourceScfParamPtr and DatahubTaskSourceResourceScfParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceScfParamPtrInput` via:
//
//	        DatahubTaskSourceResourceScfParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceScfParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceScfParamPtrOutput() DatahubTaskSourceResourceScfParamPtrOutput
	ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceScfParamPtrOutput
}

type datahubTaskSourceResourceScfParamPtrType DatahubTaskSourceResourceScfParamArgs

func DatahubTaskSourceResourceScfParamPtr(v *DatahubTaskSourceResourceScfParamArgs) DatahubTaskSourceResourceScfParamPtrInput {
	return (*datahubTaskSourceResourceScfParamPtrType)(v)
}

func (*datahubTaskSourceResourceScfParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceScfParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceScfParamPtrType) ToDatahubTaskSourceResourceScfParamPtrOutput() DatahubTaskSourceResourceScfParamPtrOutput {
	return i.ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceScfParamPtrType) ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceScfParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceScfParamPtrOutput)
}

type DatahubTaskSourceResourceScfParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceScfParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceScfParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceScfParamOutput) ToDatahubTaskSourceResourceScfParamOutput() DatahubTaskSourceResourceScfParamOutput {
	return o
}

func (o DatahubTaskSourceResourceScfParamOutput) ToDatahubTaskSourceResourceScfParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceScfParamOutput {
	return o
}

func (o DatahubTaskSourceResourceScfParamOutput) ToDatahubTaskSourceResourceScfParamPtrOutput() DatahubTaskSourceResourceScfParamPtrOutput {
	return o.ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceScfParamOutput) ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceScfParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceScfParam) *DatahubTaskSourceResourceScfParam {
		return &v
	}).(DatahubTaskSourceResourceScfParamPtrOutput)
}

// The maximum number of messages sent in each batch, the default is 1000.
func (o DatahubTaskSourceResourceScfParamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceScfParam) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// SCF function name.
func (o DatahubTaskSourceResourceScfParamOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceScfParam) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The number of retries after the SCF call fails, the default is 5.
func (o DatahubTaskSourceResourceScfParamOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceScfParam) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// SCF cloud function namespace, the default is default.
func (o DatahubTaskSourceResourceScfParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceScfParam) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o DatahubTaskSourceResourceScfParamOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceScfParam) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceScfParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceScfParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceScfParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceScfParamPtrOutput) ToDatahubTaskSourceResourceScfParamPtrOutput() DatahubTaskSourceResourceScfParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceScfParamPtrOutput) ToDatahubTaskSourceResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceScfParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceScfParamPtrOutput) Elem() DatahubTaskSourceResourceScfParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceScfParam) DatahubTaskSourceResourceScfParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceScfParam
		return ret
	}).(DatahubTaskSourceResourceScfParamOutput)
}

// The maximum number of messages sent in each batch, the default is 1000.
func (o DatahubTaskSourceResourceScfParamPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceScfParam) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// SCF function name.
func (o DatahubTaskSourceResourceScfParamPtrOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceScfParam) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionName
	}).(pulumi.StringPtrOutput)
}

// The number of retries after the SCF call fails, the default is 5.
func (o DatahubTaskSourceResourceScfParamPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceScfParam) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// SCF cloud function namespace, the default is default.
func (o DatahubTaskSourceResourceScfParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceScfParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o DatahubTaskSourceResourceScfParamPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceScfParam) *string {
		if v == nil {
			return nil
		}
		return v.Qualifier
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceSqlServerParam struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// SQLServer connection Id.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// DatahubTaskSourceResourceSqlServerParamInput is an input type that accepts DatahubTaskSourceResourceSqlServerParamArgs and DatahubTaskSourceResourceSqlServerParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceSqlServerParamInput` via:
//
//	DatahubTaskSourceResourceSqlServerParamArgs{...}
type DatahubTaskSourceResourceSqlServerParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceSqlServerParamOutput() DatahubTaskSourceResourceSqlServerParamOutput
	ToDatahubTaskSourceResourceSqlServerParamOutputWithContext(context.Context) DatahubTaskSourceResourceSqlServerParamOutput
}

type DatahubTaskSourceResourceSqlServerParamArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// SQLServer connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (DatahubTaskSourceResourceSqlServerParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceSqlServerParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceSqlServerParamArgs) ToDatahubTaskSourceResourceSqlServerParamOutput() DatahubTaskSourceResourceSqlServerParamOutput {
	return i.ToDatahubTaskSourceResourceSqlServerParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceSqlServerParamArgs) ToDatahubTaskSourceResourceSqlServerParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceSqlServerParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceSqlServerParamOutput)
}

func (i DatahubTaskSourceResourceSqlServerParamArgs) ToDatahubTaskSourceResourceSqlServerParamPtrOutput() DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return i.ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceSqlServerParamArgs) ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceSqlServerParamOutput).ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceSqlServerParamPtrInput is an input type that accepts DatahubTaskSourceResourceSqlServerParamArgs, DatahubTaskSourceResourceSqlServerParamPtr and DatahubTaskSourceResourceSqlServerParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceSqlServerParamPtrInput` via:
//
//	        DatahubTaskSourceResourceSqlServerParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceSqlServerParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceSqlServerParamPtrOutput() DatahubTaskSourceResourceSqlServerParamPtrOutput
	ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceSqlServerParamPtrOutput
}

type datahubTaskSourceResourceSqlServerParamPtrType DatahubTaskSourceResourceSqlServerParamArgs

func DatahubTaskSourceResourceSqlServerParamPtr(v *DatahubTaskSourceResourceSqlServerParamArgs) DatahubTaskSourceResourceSqlServerParamPtrInput {
	return (*datahubTaskSourceResourceSqlServerParamPtrType)(v)
}

func (*datahubTaskSourceResourceSqlServerParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceSqlServerParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceSqlServerParamPtrType) ToDatahubTaskSourceResourceSqlServerParamPtrOutput() DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return i.ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceSqlServerParamPtrType) ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceSqlServerParamPtrOutput)
}

type DatahubTaskSourceResourceSqlServerParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceSqlServerParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceSqlServerParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceSqlServerParamOutput) ToDatahubTaskSourceResourceSqlServerParamOutput() DatahubTaskSourceResourceSqlServerParamOutput {
	return o
}

func (o DatahubTaskSourceResourceSqlServerParamOutput) ToDatahubTaskSourceResourceSqlServerParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceSqlServerParamOutput {
	return o
}

func (o DatahubTaskSourceResourceSqlServerParamOutput) ToDatahubTaskSourceResourceSqlServerParamPtrOutput() DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return o.ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceSqlServerParamOutput) ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceSqlServerParam) *DatahubTaskSourceResourceSqlServerParam {
		return &v
	}).(DatahubTaskSourceResourceSqlServerParamPtrOutput)
}

// SQLServer database name.
func (o DatahubTaskSourceResourceSqlServerParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceSqlServerParam) string { return v.Database }).(pulumi.StringOutput)
}

// SQLServer connection Id.
func (o DatahubTaskSourceResourceSqlServerParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceSqlServerParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o DatahubTaskSourceResourceSqlServerParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceSqlServerParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskSourceResourceSqlServerParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceSqlServerParam) string { return v.Table }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceSqlServerParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceSqlServerParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceSqlServerParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) ToDatahubTaskSourceResourceSqlServerParamPtrOutput() DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) ToDatahubTaskSourceResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceSqlServerParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) Elem() DatahubTaskSourceResourceSqlServerParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceSqlServerParam) DatahubTaskSourceResourceSqlServerParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceSqlServerParam
		return ret
	}).(DatahubTaskSourceResourceSqlServerParamOutput)
}

// SQLServer database name.
func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// SQLServer connection Id.
func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// schema_only|initial default initial.
func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskSourceResourceSqlServerParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceTdwParam struct {
	// Tdw bid.
	Bid string `pulumi:"bid"`
	// default true.
	IsDomestic *bool `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost *string `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort *int `pulumi:"tdwPort"`
	// Tdw tid.
	Tid string `pulumi:"tid"`
}

// DatahubTaskSourceResourceTdwParamInput is an input type that accepts DatahubTaskSourceResourceTdwParamArgs and DatahubTaskSourceResourceTdwParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceTdwParamInput` via:
//
//	DatahubTaskSourceResourceTdwParamArgs{...}
type DatahubTaskSourceResourceTdwParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceTdwParamOutput() DatahubTaskSourceResourceTdwParamOutput
	ToDatahubTaskSourceResourceTdwParamOutputWithContext(context.Context) DatahubTaskSourceResourceTdwParamOutput
}

type DatahubTaskSourceResourceTdwParamArgs struct {
	// Tdw bid.
	Bid pulumi.StringInput `pulumi:"bid"`
	// default true.
	IsDomestic pulumi.BoolPtrInput `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost pulumi.StringPtrInput `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort pulumi.IntPtrInput `pulumi:"tdwPort"`
	// Tdw tid.
	Tid pulumi.StringInput `pulumi:"tid"`
}

func (DatahubTaskSourceResourceTdwParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceTdwParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceTdwParamArgs) ToDatahubTaskSourceResourceTdwParamOutput() DatahubTaskSourceResourceTdwParamOutput {
	return i.ToDatahubTaskSourceResourceTdwParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceTdwParamArgs) ToDatahubTaskSourceResourceTdwParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTdwParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceTdwParamOutput)
}

func (i DatahubTaskSourceResourceTdwParamArgs) ToDatahubTaskSourceResourceTdwParamPtrOutput() DatahubTaskSourceResourceTdwParamPtrOutput {
	return i.ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceTdwParamArgs) ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTdwParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceTdwParamOutput).ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceTdwParamPtrInput is an input type that accepts DatahubTaskSourceResourceTdwParamArgs, DatahubTaskSourceResourceTdwParamPtr and DatahubTaskSourceResourceTdwParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceTdwParamPtrInput` via:
//
//	        DatahubTaskSourceResourceTdwParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceTdwParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceTdwParamPtrOutput() DatahubTaskSourceResourceTdwParamPtrOutput
	ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceTdwParamPtrOutput
}

type datahubTaskSourceResourceTdwParamPtrType DatahubTaskSourceResourceTdwParamArgs

func DatahubTaskSourceResourceTdwParamPtr(v *DatahubTaskSourceResourceTdwParamArgs) DatahubTaskSourceResourceTdwParamPtrInput {
	return (*datahubTaskSourceResourceTdwParamPtrType)(v)
}

func (*datahubTaskSourceResourceTdwParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceTdwParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceTdwParamPtrType) ToDatahubTaskSourceResourceTdwParamPtrOutput() DatahubTaskSourceResourceTdwParamPtrOutput {
	return i.ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceTdwParamPtrType) ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTdwParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceTdwParamPtrOutput)
}

type DatahubTaskSourceResourceTdwParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceTdwParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceTdwParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceTdwParamOutput) ToDatahubTaskSourceResourceTdwParamOutput() DatahubTaskSourceResourceTdwParamOutput {
	return o
}

func (o DatahubTaskSourceResourceTdwParamOutput) ToDatahubTaskSourceResourceTdwParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTdwParamOutput {
	return o
}

func (o DatahubTaskSourceResourceTdwParamOutput) ToDatahubTaskSourceResourceTdwParamPtrOutput() DatahubTaskSourceResourceTdwParamPtrOutput {
	return o.ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceTdwParamOutput) ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTdwParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceTdwParam) *DatahubTaskSourceResourceTdwParam {
		return &v
	}).(DatahubTaskSourceResourceTdwParamPtrOutput)
}

// Tdw bid.
func (o DatahubTaskSourceResourceTdwParamOutput) Bid() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTdwParam) string { return v.Bid }).(pulumi.StringOutput)
}

// default true.
func (o DatahubTaskSourceResourceTdwParamOutput) IsDomestic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTdwParam) *bool { return v.IsDomestic }).(pulumi.BoolPtrOutput)
}

// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
func (o DatahubTaskSourceResourceTdwParamOutput) TdwHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTdwParam) *string { return v.TdwHost }).(pulumi.StringPtrOutput)
}

// TDW port, default 8099.
func (o DatahubTaskSourceResourceTdwParamOutput) TdwPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTdwParam) *int { return v.TdwPort }).(pulumi.IntPtrOutput)
}

// Tdw tid.
func (o DatahubTaskSourceResourceTdwParamOutput) Tid() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTdwParam) string { return v.Tid }).(pulumi.StringOutput)
}

type DatahubTaskSourceResourceTdwParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceTdwParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceTdwParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceTdwParamPtrOutput) ToDatahubTaskSourceResourceTdwParamPtrOutput() DatahubTaskSourceResourceTdwParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceTdwParamPtrOutput) ToDatahubTaskSourceResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTdwParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceTdwParamPtrOutput) Elem() DatahubTaskSourceResourceTdwParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTdwParam) DatahubTaskSourceResourceTdwParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceTdwParam
		return ret
	}).(DatahubTaskSourceResourceTdwParamOutput)
}

// Tdw bid.
func (o DatahubTaskSourceResourceTdwParamPtrOutput) Bid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTdwParam) *string {
		if v == nil {
			return nil
		}
		return &v.Bid
	}).(pulumi.StringPtrOutput)
}

// default true.
func (o DatahubTaskSourceResourceTdwParamPtrOutput) IsDomestic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTdwParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsDomestic
	}).(pulumi.BoolPtrOutput)
}

// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
func (o DatahubTaskSourceResourceTdwParamPtrOutput) TdwHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTdwParam) *string {
		if v == nil {
			return nil
		}
		return v.TdwHost
	}).(pulumi.StringPtrOutput)
}

// TDW port, default 8099.
func (o DatahubTaskSourceResourceTdwParamPtrOutput) TdwPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTdwParam) *int {
		if v == nil {
			return nil
		}
		return v.TdwPort
	}).(pulumi.IntPtrOutput)
}

// Tdw tid.
func (o DatahubTaskSourceResourceTdwParamPtrOutput) Tid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTdwParam) *string {
		if v == nil {
			return nil
		}
		return &v.Tid
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskSourceResourceTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType *string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime *int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId *string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
}

// DatahubTaskSourceResourceTopicParamInput is an input type that accepts DatahubTaskSourceResourceTopicParamArgs and DatahubTaskSourceResourceTopicParamOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceTopicParamInput` via:
//
//	DatahubTaskSourceResourceTopicParamArgs{...}
type DatahubTaskSourceResourceTopicParamInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceTopicParamOutput() DatahubTaskSourceResourceTopicParamOutput
	ToDatahubTaskSourceResourceTopicParamOutputWithContext(context.Context) DatahubTaskSourceResourceTopicParamOutput
}

type DatahubTaskSourceResourceTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
}

func (DatahubTaskSourceResourceTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceTopicParam)(nil)).Elem()
}

func (i DatahubTaskSourceResourceTopicParamArgs) ToDatahubTaskSourceResourceTopicParamOutput() DatahubTaskSourceResourceTopicParamOutput {
	return i.ToDatahubTaskSourceResourceTopicParamOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceTopicParamArgs) ToDatahubTaskSourceResourceTopicParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceTopicParamOutput)
}

func (i DatahubTaskSourceResourceTopicParamArgs) ToDatahubTaskSourceResourceTopicParamPtrOutput() DatahubTaskSourceResourceTopicParamPtrOutput {
	return i.ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskSourceResourceTopicParamArgs) ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceTopicParamOutput).ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(ctx)
}

// DatahubTaskSourceResourceTopicParamPtrInput is an input type that accepts DatahubTaskSourceResourceTopicParamArgs, DatahubTaskSourceResourceTopicParamPtr and DatahubTaskSourceResourceTopicParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskSourceResourceTopicParamPtrInput` via:
//
//	        DatahubTaskSourceResourceTopicParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskSourceResourceTopicParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskSourceResourceTopicParamPtrOutput() DatahubTaskSourceResourceTopicParamPtrOutput
	ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(context.Context) DatahubTaskSourceResourceTopicParamPtrOutput
}

type datahubTaskSourceResourceTopicParamPtrType DatahubTaskSourceResourceTopicParamArgs

func DatahubTaskSourceResourceTopicParamPtr(v *DatahubTaskSourceResourceTopicParamArgs) DatahubTaskSourceResourceTopicParamPtrInput {
	return (*datahubTaskSourceResourceTopicParamPtrType)(v)
}

func (*datahubTaskSourceResourceTopicParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceTopicParam)(nil)).Elem()
}

func (i *datahubTaskSourceResourceTopicParamPtrType) ToDatahubTaskSourceResourceTopicParamPtrOutput() DatahubTaskSourceResourceTopicParamPtrOutput {
	return i.ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskSourceResourceTopicParamPtrType) ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskSourceResourceTopicParamPtrOutput)
}

type DatahubTaskSourceResourceTopicParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskSourceResourceTopicParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceTopicParamOutput) ToDatahubTaskSourceResourceTopicParamOutput() DatahubTaskSourceResourceTopicParamOutput {
	return o
}

func (o DatahubTaskSourceResourceTopicParamOutput) ToDatahubTaskSourceResourceTopicParamOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTopicParamOutput {
	return o
}

func (o DatahubTaskSourceResourceTopicParamOutput) ToDatahubTaskSourceResourceTopicParamPtrOutput() DatahubTaskSourceResourceTopicParamPtrOutput {
	return o.ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskSourceResourceTopicParamOutput) ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTopicParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskSourceResourceTopicParam) *DatahubTaskSourceResourceTopicParam {
		return &v
	}).(DatahubTaskSourceResourceTopicParamPtrOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskSourceResourceTopicParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceTopicParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskSourceResourceTopicParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskSourceResourceTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskSourceResourceTopicParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskSourceResourceTopicParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskSourceResourceTopicParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskSourceResourceTopicParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

type DatahubTaskSourceResourceTopicParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskSourceResourceTopicParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskSourceResourceTopicParam)(nil)).Elem()
}

func (o DatahubTaskSourceResourceTopicParamPtrOutput) ToDatahubTaskSourceResourceTopicParamPtrOutput() DatahubTaskSourceResourceTopicParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceTopicParamPtrOutput) ToDatahubTaskSourceResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskSourceResourceTopicParamPtrOutput {
	return o
}

func (o DatahubTaskSourceResourceTopicParamPtrOutput) Elem() DatahubTaskSourceResourceTopicParamOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) DatahubTaskSourceResourceTopicParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskSourceResourceTopicParam
		return ret
	}).(DatahubTaskSourceResourceTopicParamOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskSourceResourceTopicParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskSourceResourceTopicParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskSourceResourceTopicParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskSourceResourceTopicParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskSourceResourceTopicParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskSourceResourceTopicParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskSourceResourceTopicParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskSourceResourceTopicParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResource struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParam *DatahubTaskTargetResourceClickHouseParam `pulumi:"clickHouseParam"`
	// Cls configuration, Required when Type is CLS.
	ClsParam *DatahubTaskTargetResourceClsParam `pulumi:"clsParam"`
	// Cos configuration, required when Type is COS.
	CosParam *DatahubTaskTargetResourceCosParam `pulumi:"cosParam"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParam *DatahubTaskTargetResourceCtsdbParam `pulumi:"ctsdbParam"`
	// Dts configuration, required when Type is DTS.
	DtsParam *DatahubTaskTargetResourceDtsParam `pulumi:"dtsParam"`
	// Es configuration, required when Type is ES.
	EsParam *DatahubTaskTargetResourceEsParam `pulumi:"esParam"`
	// EB configuration, required when type is EB.
	EventBusParam *DatahubTaskTargetResourceEventBusParam `pulumi:"eventBusParam"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParam *DatahubTaskTargetResourceKafkaParam `pulumi:"kafkaParam"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParam *DatahubTaskTargetResourceMariaDbParam `pulumi:"mariaDbParam"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParam *DatahubTaskTargetResourceMongoDbParam `pulumi:"mongoDbParam"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParam *DatahubTaskTargetResourceMySqlParam `pulumi:"mySqlParam"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParam *DatahubTaskTargetResourcePostgreSqlParam `pulumi:"postgreSqlParam"`
	// Scf configuration, Required when Type is SCF.
	ScfParam *DatahubTaskTargetResourceScfParam `pulumi:"scfParam"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParam *DatahubTaskTargetResourceSqlServerParam `pulumi:"sqlServerParam"`
	// Tdw configuration, required when Type is TDW.
	TdwParam *DatahubTaskTargetResourceTdwParam `pulumi:"tdwParam"`
	// Topic configuration, Required when Type is Topic.
	TopicParam *DatahubTaskTargetResourceTopicParam `pulumi:"topicParam"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// DatahubTaskTargetResourceInput is an input type that accepts DatahubTaskTargetResourceArgs and DatahubTaskTargetResourceOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceInput` via:
//
//	DatahubTaskTargetResourceArgs{...}
type DatahubTaskTargetResourceInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceOutput() DatahubTaskTargetResourceOutput
	ToDatahubTaskTargetResourceOutputWithContext(context.Context) DatahubTaskTargetResourceOutput
}

type DatahubTaskTargetResourceArgs struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParam DatahubTaskTargetResourceClickHouseParamPtrInput `pulumi:"clickHouseParam"`
	// Cls configuration, Required when Type is CLS.
	ClsParam DatahubTaskTargetResourceClsParamPtrInput `pulumi:"clsParam"`
	// Cos configuration, required when Type is COS.
	CosParam DatahubTaskTargetResourceCosParamPtrInput `pulumi:"cosParam"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParam DatahubTaskTargetResourceCtsdbParamPtrInput `pulumi:"ctsdbParam"`
	// Dts configuration, required when Type is DTS.
	DtsParam DatahubTaskTargetResourceDtsParamPtrInput `pulumi:"dtsParam"`
	// Es configuration, required when Type is ES.
	EsParam DatahubTaskTargetResourceEsParamPtrInput `pulumi:"esParam"`
	// EB configuration, required when type is EB.
	EventBusParam DatahubTaskTargetResourceEventBusParamPtrInput `pulumi:"eventBusParam"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParam DatahubTaskTargetResourceKafkaParamPtrInput `pulumi:"kafkaParam"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParam DatahubTaskTargetResourceMariaDbParamPtrInput `pulumi:"mariaDbParam"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParam DatahubTaskTargetResourceMongoDbParamPtrInput `pulumi:"mongoDbParam"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParam DatahubTaskTargetResourceMySqlParamPtrInput `pulumi:"mySqlParam"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParam DatahubTaskTargetResourcePostgreSqlParamPtrInput `pulumi:"postgreSqlParam"`
	// Scf configuration, Required when Type is SCF.
	ScfParam DatahubTaskTargetResourceScfParamPtrInput `pulumi:"scfParam"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParam DatahubTaskTargetResourceSqlServerParamPtrInput `pulumi:"sqlServerParam"`
	// Tdw configuration, required when Type is TDW.
	TdwParam DatahubTaskTargetResourceTdwParamPtrInput `pulumi:"tdwParam"`
	// Topic configuration, Required when Type is Topic.
	TopicParam DatahubTaskTargetResourceTopicParamPtrInput `pulumi:"topicParam"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskTargetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResource)(nil)).Elem()
}

func (i DatahubTaskTargetResourceArgs) ToDatahubTaskTargetResourceOutput() DatahubTaskTargetResourceOutput {
	return i.ToDatahubTaskTargetResourceOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceArgs) ToDatahubTaskTargetResourceOutputWithContext(ctx context.Context) DatahubTaskTargetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceOutput)
}

func (i DatahubTaskTargetResourceArgs) ToDatahubTaskTargetResourcePtrOutput() DatahubTaskTargetResourcePtrOutput {
	return i.ToDatahubTaskTargetResourcePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceArgs) ToDatahubTaskTargetResourcePtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceOutput).ToDatahubTaskTargetResourcePtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourcePtrInput is an input type that accepts DatahubTaskTargetResourceArgs, DatahubTaskTargetResourcePtr and DatahubTaskTargetResourcePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourcePtrInput` via:
//
//	        DatahubTaskTargetResourceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourcePtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourcePtrOutput() DatahubTaskTargetResourcePtrOutput
	ToDatahubTaskTargetResourcePtrOutputWithContext(context.Context) DatahubTaskTargetResourcePtrOutput
}

type datahubTaskTargetResourcePtrType DatahubTaskTargetResourceArgs

func DatahubTaskTargetResourcePtr(v *DatahubTaskTargetResourceArgs) DatahubTaskTargetResourcePtrInput {
	return (*datahubTaskTargetResourcePtrType)(v)
}

func (*datahubTaskTargetResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResource)(nil)).Elem()
}

func (i *datahubTaskTargetResourcePtrType) ToDatahubTaskTargetResourcePtrOutput() DatahubTaskTargetResourcePtrOutput {
	return i.ToDatahubTaskTargetResourcePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourcePtrType) ToDatahubTaskTargetResourcePtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourcePtrOutput)
}

type DatahubTaskTargetResourceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResource)(nil)).Elem()
}

func (o DatahubTaskTargetResourceOutput) ToDatahubTaskTargetResourceOutput() DatahubTaskTargetResourceOutput {
	return o
}

func (o DatahubTaskTargetResourceOutput) ToDatahubTaskTargetResourceOutputWithContext(ctx context.Context) DatahubTaskTargetResourceOutput {
	return o
}

func (o DatahubTaskTargetResourceOutput) ToDatahubTaskTargetResourcePtrOutput() DatahubTaskTargetResourcePtrOutput {
	return o.ToDatahubTaskTargetResourcePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceOutput) ToDatahubTaskTargetResourcePtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResource) *DatahubTaskTargetResource {
		return &v
	}).(DatahubTaskTargetResourcePtrOutput)
}

// ClickHouse config, Type CLICKHOUSE requierd.
func (o DatahubTaskTargetResourceOutput) ClickHouseParam() DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceClickHouseParam { return v.ClickHouseParam }).(DatahubTaskTargetResourceClickHouseParamPtrOutput)
}

// Cls configuration, Required when Type is CLS.
func (o DatahubTaskTargetResourceOutput) ClsParam() DatahubTaskTargetResourceClsParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceClsParam { return v.ClsParam }).(DatahubTaskTargetResourceClsParamPtrOutput)
}

// Cos configuration, required when Type is COS.
func (o DatahubTaskTargetResourceOutput) CosParam() DatahubTaskTargetResourceCosParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceCosParam { return v.CosParam }).(DatahubTaskTargetResourceCosParamPtrOutput)
}

// Ctsdb configuration, Required when Type is CTSDB.
func (o DatahubTaskTargetResourceOutput) CtsdbParam() DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceCtsdbParam { return v.CtsdbParam }).(DatahubTaskTargetResourceCtsdbParamPtrOutput)
}

// Dts configuration, required when Type is DTS.
func (o DatahubTaskTargetResourceOutput) DtsParam() DatahubTaskTargetResourceDtsParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceDtsParam { return v.DtsParam }).(DatahubTaskTargetResourceDtsParamPtrOutput)
}

// Es configuration, required when Type is ES.
func (o DatahubTaskTargetResourceOutput) EsParam() DatahubTaskTargetResourceEsParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceEsParam { return v.EsParam }).(DatahubTaskTargetResourceEsParamPtrOutput)
}

// EB configuration, required when type is EB.
func (o DatahubTaskTargetResourceOutput) EventBusParam() DatahubTaskTargetResourceEventBusParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceEventBusParam { return v.EventBusParam }).(DatahubTaskTargetResourceEventBusParamPtrOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o DatahubTaskTargetResourceOutput) KafkaParam() DatahubTaskTargetResourceKafkaParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceKafkaParam { return v.KafkaParam }).(DatahubTaskTargetResourceKafkaParamPtrOutput)
}

// MariaDB configuration, Required when Type is MARIADB.
func (o DatahubTaskTargetResourceOutput) MariaDbParam() DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceMariaDbParam { return v.MariaDbParam }).(DatahubTaskTargetResourceMariaDbParamPtrOutput)
}

// MongoDB config, Required when Type is MONGODB.
func (o DatahubTaskTargetResourceOutput) MongoDbParam() DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceMongoDbParam { return v.MongoDbParam }).(DatahubTaskTargetResourceMongoDbParamPtrOutput)
}

// MySQL configuration, Required when Type is MYSQL.
func (o DatahubTaskTargetResourceOutput) MySqlParam() DatahubTaskTargetResourceMySqlParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceMySqlParam { return v.MySqlParam }).(DatahubTaskTargetResourceMySqlParamPtrOutput)
}

// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
func (o DatahubTaskTargetResourceOutput) PostgreSqlParam() DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourcePostgreSqlParam { return v.PostgreSqlParam }).(DatahubTaskTargetResourcePostgreSqlParamPtrOutput)
}

// Scf configuration, Required when Type is SCF.
func (o DatahubTaskTargetResourceOutput) ScfParam() DatahubTaskTargetResourceScfParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceScfParam { return v.ScfParam }).(DatahubTaskTargetResourceScfParamPtrOutput)
}

// SQLServer configuration, Required when Type is SQLSERVER.
func (o DatahubTaskTargetResourceOutput) SqlServerParam() DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceSqlServerParam { return v.SqlServerParam }).(DatahubTaskTargetResourceSqlServerParamPtrOutput)
}

// Tdw configuration, required when Type is TDW.
func (o DatahubTaskTargetResourceOutput) TdwParam() DatahubTaskTargetResourceTdwParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceTdwParam { return v.TdwParam }).(DatahubTaskTargetResourceTdwParamPtrOutput)
}

// Topic configuration, Required when Type is Topic.
func (o DatahubTaskTargetResourceOutput) TopicParam() DatahubTaskTargetResourceTopicParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) *DatahubTaskTargetResourceTopicParam { return v.TopicParam }).(DatahubTaskTargetResourceTopicParamPtrOutput)
}

// Resource Type.
func (o DatahubTaskTargetResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResource) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourcePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResource)(nil)).Elem()
}

func (o DatahubTaskTargetResourcePtrOutput) ToDatahubTaskTargetResourcePtrOutput() DatahubTaskTargetResourcePtrOutput {
	return o
}

func (o DatahubTaskTargetResourcePtrOutput) ToDatahubTaskTargetResourcePtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePtrOutput {
	return o
}

func (o DatahubTaskTargetResourcePtrOutput) Elem() DatahubTaskTargetResourceOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) DatahubTaskTargetResource {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResource
		return ret
	}).(DatahubTaskTargetResourceOutput)
}

// ClickHouse config, Type CLICKHOUSE requierd.
func (o DatahubTaskTargetResourcePtrOutput) ClickHouseParam() DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceClickHouseParam {
		if v == nil {
			return nil
		}
		return v.ClickHouseParam
	}).(DatahubTaskTargetResourceClickHouseParamPtrOutput)
}

// Cls configuration, Required when Type is CLS.
func (o DatahubTaskTargetResourcePtrOutput) ClsParam() DatahubTaskTargetResourceClsParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceClsParam {
		if v == nil {
			return nil
		}
		return v.ClsParam
	}).(DatahubTaskTargetResourceClsParamPtrOutput)
}

// Cos configuration, required when Type is COS.
func (o DatahubTaskTargetResourcePtrOutput) CosParam() DatahubTaskTargetResourceCosParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceCosParam {
		if v == nil {
			return nil
		}
		return v.CosParam
	}).(DatahubTaskTargetResourceCosParamPtrOutput)
}

// Ctsdb configuration, Required when Type is CTSDB.
func (o DatahubTaskTargetResourcePtrOutput) CtsdbParam() DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceCtsdbParam {
		if v == nil {
			return nil
		}
		return v.CtsdbParam
	}).(DatahubTaskTargetResourceCtsdbParamPtrOutput)
}

// Dts configuration, required when Type is DTS.
func (o DatahubTaskTargetResourcePtrOutput) DtsParam() DatahubTaskTargetResourceDtsParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceDtsParam {
		if v == nil {
			return nil
		}
		return v.DtsParam
	}).(DatahubTaskTargetResourceDtsParamPtrOutput)
}

// Es configuration, required when Type is ES.
func (o DatahubTaskTargetResourcePtrOutput) EsParam() DatahubTaskTargetResourceEsParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceEsParam {
		if v == nil {
			return nil
		}
		return v.EsParam
	}).(DatahubTaskTargetResourceEsParamPtrOutput)
}

// EB configuration, required when type is EB.
func (o DatahubTaskTargetResourcePtrOutput) EventBusParam() DatahubTaskTargetResourceEventBusParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceEventBusParam {
		if v == nil {
			return nil
		}
		return v.EventBusParam
	}).(DatahubTaskTargetResourceEventBusParamPtrOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o DatahubTaskTargetResourcePtrOutput) KafkaParam() DatahubTaskTargetResourceKafkaParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceKafkaParam {
		if v == nil {
			return nil
		}
		return v.KafkaParam
	}).(DatahubTaskTargetResourceKafkaParamPtrOutput)
}

// MariaDB configuration, Required when Type is MARIADB.
func (o DatahubTaskTargetResourcePtrOutput) MariaDbParam() DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceMariaDbParam {
		if v == nil {
			return nil
		}
		return v.MariaDbParam
	}).(DatahubTaskTargetResourceMariaDbParamPtrOutput)
}

// MongoDB config, Required when Type is MONGODB.
func (o DatahubTaskTargetResourcePtrOutput) MongoDbParam() DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceMongoDbParam {
		if v == nil {
			return nil
		}
		return v.MongoDbParam
	}).(DatahubTaskTargetResourceMongoDbParamPtrOutput)
}

// MySQL configuration, Required when Type is MYSQL.
func (o DatahubTaskTargetResourcePtrOutput) MySqlParam() DatahubTaskTargetResourceMySqlParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceMySqlParam {
		if v == nil {
			return nil
		}
		return v.MySqlParam
	}).(DatahubTaskTargetResourceMySqlParamPtrOutput)
}

// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
func (o DatahubTaskTargetResourcePtrOutput) PostgreSqlParam() DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourcePostgreSqlParam {
		if v == nil {
			return nil
		}
		return v.PostgreSqlParam
	}).(DatahubTaskTargetResourcePostgreSqlParamPtrOutput)
}

// Scf configuration, Required when Type is SCF.
func (o DatahubTaskTargetResourcePtrOutput) ScfParam() DatahubTaskTargetResourceScfParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceScfParam {
		if v == nil {
			return nil
		}
		return v.ScfParam
	}).(DatahubTaskTargetResourceScfParamPtrOutput)
}

// SQLServer configuration, Required when Type is SQLSERVER.
func (o DatahubTaskTargetResourcePtrOutput) SqlServerParam() DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceSqlServerParam {
		if v == nil {
			return nil
		}
		return v.SqlServerParam
	}).(DatahubTaskTargetResourceSqlServerParamPtrOutput)
}

// Tdw configuration, required when Type is TDW.
func (o DatahubTaskTargetResourcePtrOutput) TdwParam() DatahubTaskTargetResourceTdwParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceTdwParam {
		if v == nil {
			return nil
		}
		return v.TdwParam
	}).(DatahubTaskTargetResourceTdwParamPtrOutput)
}

// Topic configuration, Required when Type is Topic.
func (o DatahubTaskTargetResourcePtrOutput) TopicParam() DatahubTaskTargetResourceTopicParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *DatahubTaskTargetResourceTopicParam {
		if v == nil {
			return nil
		}
		return v.TopicParam
	}).(DatahubTaskTargetResourceTopicParamPtrOutput)
}

// Resource Type.
func (o DatahubTaskTargetResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParam struct {
	// ClickHouse cluster.
	Cluster string `pulumi:"cluster"`
	// ClickHouse database name.
	Database string `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls *DatahubTaskTargetResourceClickHouseParamDropCls `pulumi:"dropCls"`
	// Whether ClickHouse discards the message that fails to parse, the default is true.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// ClickHouse ip.
	Ip *string `pulumi:"ip"`
	// ClickHouse passwd.
	Password *string `pulumi:"password"`
	// ClickHouse port.
	Port *int `pulumi:"port"`
	// resource id.
	Resource string `pulumi:"resource"`
	// ClickHouse schema.
	Schemas []DatahubTaskTargetResourceClickHouseParamSchema `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip *string `pulumi:"serviceVip"`
	// ClickHouse table.
	Table string `pulumi:"table"`
	// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
	Type *string `pulumi:"type"`
	// instance vpc id.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// ClickHouse user name.
	UserName *string `pulumi:"userName"`
}

// DatahubTaskTargetResourceClickHouseParamInput is an input type that accepts DatahubTaskTargetResourceClickHouseParamArgs and DatahubTaskTargetResourceClickHouseParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClickHouseParamInput` via:
//
//	DatahubTaskTargetResourceClickHouseParamArgs{...}
type DatahubTaskTargetResourceClickHouseParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClickHouseParamOutput() DatahubTaskTargetResourceClickHouseParamOutput
	ToDatahubTaskTargetResourceClickHouseParamOutputWithContext(context.Context) DatahubTaskTargetResourceClickHouseParamOutput
}

type DatahubTaskTargetResourceClickHouseParamArgs struct {
	// ClickHouse cluster.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// ClickHouse database name.
	Database pulumi.StringInput `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls DatahubTaskTargetResourceClickHouseParamDropClsPtrInput `pulumi:"dropCls"`
	// Whether ClickHouse discards the message that fails to parse, the default is true.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// ClickHouse ip.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// ClickHouse passwd.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// ClickHouse port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// resource id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// ClickHouse schema.
	Schemas DatahubTaskTargetResourceClickHouseParamSchemaArrayInput `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// ClickHouse table.
	Table pulumi.StringInput `pulumi:"table"`
	// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// instance vpc id.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// ClickHouse user name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DatahubTaskTargetResourceClickHouseParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceClickHouseParamArgs) ToDatahubTaskTargetResourceClickHouseParamOutput() DatahubTaskTargetResourceClickHouseParamOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClickHouseParamArgs) ToDatahubTaskTargetResourceClickHouseParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamOutput)
}

func (i DatahubTaskTargetResourceClickHouseParamArgs) ToDatahubTaskTargetResourceClickHouseParamPtrOutput() DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClickHouseParamArgs) ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamOutput).ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceClickHouseParamPtrInput is an input type that accepts DatahubTaskTargetResourceClickHouseParamArgs, DatahubTaskTargetResourceClickHouseParamPtr and DatahubTaskTargetResourceClickHouseParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClickHouseParamPtrInput` via:
//
//	        DatahubTaskTargetResourceClickHouseParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceClickHouseParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClickHouseParamPtrOutput() DatahubTaskTargetResourceClickHouseParamPtrOutput
	ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceClickHouseParamPtrOutput
}

type datahubTaskTargetResourceClickHouseParamPtrType DatahubTaskTargetResourceClickHouseParamArgs

func DatahubTaskTargetResourceClickHouseParamPtr(v *DatahubTaskTargetResourceClickHouseParamArgs) DatahubTaskTargetResourceClickHouseParamPtrInput {
	return (*datahubTaskTargetResourceClickHouseParamPtrType)(v)
}

func (*datahubTaskTargetResourceClickHouseParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceClickHouseParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceClickHouseParamPtrType) ToDatahubTaskTargetResourceClickHouseParamPtrOutput() DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceClickHouseParamPtrType) ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClickHouseParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClickHouseParamOutput) ToDatahubTaskTargetResourceClickHouseParamOutput() DatahubTaskTargetResourceClickHouseParamOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamOutput) ToDatahubTaskTargetResourceClickHouseParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamOutput) ToDatahubTaskTargetResourceClickHouseParamPtrOutput() DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return o.ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceClickHouseParamOutput) ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceClickHouseParam) *DatahubTaskTargetResourceClickHouseParam {
		return &v
	}).(DatahubTaskTargetResourceClickHouseParamPtrOutput)
}

// ClickHouse cluster.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) string { return v.Cluster }).(pulumi.StringOutput)
}

// ClickHouse database name.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) string { return v.Database }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskTargetResourceClickHouseParamOutput) DropCls() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *DatahubTaskTargetResourceClickHouseParamDropCls {
		return v.DropCls
	}).(DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput)
}

// Whether ClickHouse discards the message that fails to parse, the default is true.
func (o DatahubTaskTargetResourceClickHouseParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// ClickHouse ip.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// ClickHouse passwd.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// ClickHouse port.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// resource id.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) string { return v.Resource }).(pulumi.StringOutput)
}

// ClickHouse schema.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Schemas() DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) []DatahubTaskTargetResourceClickHouseParamSchema {
		return v.Schemas
	}).(DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceClickHouseParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskTargetResourceClickHouseParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// ClickHouse table.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) string { return v.Table }).(pulumi.StringOutput)
}

// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: “.
func (o DatahubTaskTargetResourceClickHouseParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskTargetResourceClickHouseParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// ClickHouse user name.
func (o DatahubTaskTargetResourceClickHouseParamOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParam) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClickHouseParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceClickHouseParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) ToDatahubTaskTargetResourceClickHouseParamPtrOutput() DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) ToDatahubTaskTargetResourceClickHouseParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Elem() DatahubTaskTargetResourceClickHouseParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) DatahubTaskTargetResourceClickHouseParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceClickHouseParam
		return ret
	}).(DatahubTaskTargetResourceClickHouseParamOutput)
}

// ClickHouse cluster.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(pulumi.StringPtrOutput)
}

// ClickHouse database name.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) DropCls() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *DatahubTaskTargetResourceClickHouseParamDropCls {
		if v == nil {
			return nil
		}
		return v.DropCls
	}).(DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput)
}

// Whether ClickHouse discards the message that fails to parse, the default is true.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// ClickHouse ip.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// ClickHouse passwd.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// ClickHouse port.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// resource id.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// ClickHouse schema.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Schemas() DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) []DatahubTaskTargetResourceClickHouseParamSchema {
		if v == nil {
			return nil
		}
		return v.Schemas
	}).(DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// ClickHouse table.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: “.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// ClickHouse user name.
func (o DatahubTaskTargetResourceClickHouseParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParam) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParamDropCls struct {
	// cls LogSet id.
	DropClsLogSet *string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin *string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion *string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId *string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls *bool `pulumi:"dropInvalidMessageToCls"`
}

// DatahubTaskTargetResourceClickHouseParamDropClsInput is an input type that accepts DatahubTaskTargetResourceClickHouseParamDropClsArgs and DatahubTaskTargetResourceClickHouseParamDropClsOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClickHouseParamDropClsInput` via:
//
//	DatahubTaskTargetResourceClickHouseParamDropClsArgs{...}
type DatahubTaskTargetResourceClickHouseParamDropClsInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClickHouseParamDropClsOutput() DatahubTaskTargetResourceClickHouseParamDropClsOutput
	ToDatahubTaskTargetResourceClickHouseParamDropClsOutputWithContext(context.Context) DatahubTaskTargetResourceClickHouseParamDropClsOutput
}

type DatahubTaskTargetResourceClickHouseParamDropClsArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringPtrInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringPtrInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringPtrInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringPtrInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolPtrInput `pulumi:"dropInvalidMessageToCls"`
}

func (DatahubTaskTargetResourceClickHouseParamDropClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamDropCls)(nil)).Elem()
}

func (i DatahubTaskTargetResourceClickHouseParamDropClsArgs) ToDatahubTaskTargetResourceClickHouseParamDropClsOutput() DatahubTaskTargetResourceClickHouseParamDropClsOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamDropClsOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClickHouseParamDropClsArgs) ToDatahubTaskTargetResourceClickHouseParamDropClsOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamDropClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamDropClsOutput)
}

func (i DatahubTaskTargetResourceClickHouseParamDropClsArgs) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutput() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClickHouseParamDropClsArgs) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamDropClsOutput).ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceClickHouseParamDropClsPtrInput is an input type that accepts DatahubTaskTargetResourceClickHouseParamDropClsArgs, DatahubTaskTargetResourceClickHouseParamDropClsPtr and DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClickHouseParamDropClsPtrInput` via:
//
//	        DatahubTaskTargetResourceClickHouseParamDropClsArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceClickHouseParamDropClsPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutput() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput
	ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(context.Context) DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput
}

type datahubTaskTargetResourceClickHouseParamDropClsPtrType DatahubTaskTargetResourceClickHouseParamDropClsArgs

func DatahubTaskTargetResourceClickHouseParamDropClsPtr(v *DatahubTaskTargetResourceClickHouseParamDropClsArgs) DatahubTaskTargetResourceClickHouseParamDropClsPtrInput {
	return (*datahubTaskTargetResourceClickHouseParamDropClsPtrType)(v)
}

func (*datahubTaskTargetResourceClickHouseParamDropClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceClickHouseParamDropCls)(nil)).Elem()
}

func (i *datahubTaskTargetResourceClickHouseParamDropClsPtrType) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutput() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceClickHouseParamDropClsPtrType) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParamDropClsOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClickHouseParamDropClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamDropCls)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) ToDatahubTaskTargetResourceClickHouseParamDropClsOutput() DatahubTaskTargetResourceClickHouseParamDropClsOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) ToDatahubTaskTargetResourceClickHouseParamDropClsOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamDropClsOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutput() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return o.ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceClickHouseParamDropCls) *DatahubTaskTargetResourceClickHouseParamDropCls {
		return &v
	}).(DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput)
}

// cls LogSet id.
func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamDropCls) *string { return v.DropClsLogSet }).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamDropCls) *string { return v.DropClsOwneruin }).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamDropCls) *string { return v.DropClsRegion }).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamDropCls) *string { return v.DropClsTopicId }).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskTargetResourceClickHouseParamDropClsOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamDropCls) *bool { return v.DropInvalidMessageToCls }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceClickHouseParamDropCls)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutput() DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) ToDatahubTaskTargetResourceClickHouseParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) Elem() DatahubTaskTargetResourceClickHouseParamDropClsOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParamDropCls) DatahubTaskTargetResourceClickHouseParamDropCls {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceClickHouseParamDropCls
		return ret
	}).(DatahubTaskTargetResourceClickHouseParamDropClsOutput)
}

// cls LogSet id.
func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsLogSet
	}).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsOwneruin
	}).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsRegion
	}).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsTopicId
	}).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClickHouseParamDropCls) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceClickHouseParamSchema struct {
	// Whether the column item is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// column name.
	ColumnName string `pulumi:"columnName"`
	// The json Key name corresponding to this column.
	JsonKey string `pulumi:"jsonKey"`
	// type of table column.
	Type string `pulumi:"type"`
}

// DatahubTaskTargetResourceClickHouseParamSchemaInput is an input type that accepts DatahubTaskTargetResourceClickHouseParamSchemaArgs and DatahubTaskTargetResourceClickHouseParamSchemaOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClickHouseParamSchemaInput` via:
//
//	DatahubTaskTargetResourceClickHouseParamSchemaArgs{...}
type DatahubTaskTargetResourceClickHouseParamSchemaInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClickHouseParamSchemaOutput() DatahubTaskTargetResourceClickHouseParamSchemaOutput
	ToDatahubTaskTargetResourceClickHouseParamSchemaOutputWithContext(context.Context) DatahubTaskTargetResourceClickHouseParamSchemaOutput
}

type DatahubTaskTargetResourceClickHouseParamSchemaArgs struct {
	// Whether the column item is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// column name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The json Key name corresponding to this column.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// type of table column.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskTargetResourceClickHouseParamSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (i DatahubTaskTargetResourceClickHouseParamSchemaArgs) ToDatahubTaskTargetResourceClickHouseParamSchemaOutput() DatahubTaskTargetResourceClickHouseParamSchemaOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamSchemaOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClickHouseParamSchemaArgs) ToDatahubTaskTargetResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamSchemaOutput)
}

// DatahubTaskTargetResourceClickHouseParamSchemaArrayInput is an input type that accepts DatahubTaskTargetResourceClickHouseParamSchemaArray and DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClickHouseParamSchemaArrayInput` via:
//
//	DatahubTaskTargetResourceClickHouseParamSchemaArray{ DatahubTaskTargetResourceClickHouseParamSchemaArgs{...} }
type DatahubTaskTargetResourceClickHouseParamSchemaArrayInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutput() DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput
	ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutputWithContext(context.Context) DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput
}

type DatahubTaskTargetResourceClickHouseParamSchemaArray []DatahubTaskTargetResourceClickHouseParamSchemaInput

func (DatahubTaskTargetResourceClickHouseParamSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (i DatahubTaskTargetResourceClickHouseParamSchemaArray) ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutput() DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput {
	return i.ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClickHouseParamSchemaArray) ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput)
}

type DatahubTaskTargetResourceClickHouseParamSchemaOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClickHouseParamSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClickHouseParamSchemaOutput) ToDatahubTaskTargetResourceClickHouseParamSchemaOutput() DatahubTaskTargetResourceClickHouseParamSchemaOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamSchemaOutput) ToDatahubTaskTargetResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamSchemaOutput {
	return o
}

// Whether the column item is allowed to be empty.
func (o DatahubTaskTargetResourceClickHouseParamSchemaOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamSchema) bool { return v.AllowNull }).(pulumi.BoolOutput)
}

// column name.
func (o DatahubTaskTargetResourceClickHouseParamSchemaOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamSchema) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The json Key name corresponding to this column.
func (o DatahubTaskTargetResourceClickHouseParamSchemaOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamSchema) string { return v.JsonKey }).(pulumi.StringOutput)
}

// type of table column.
func (o DatahubTaskTargetResourceClickHouseParamSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClickHouseParamSchema) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput) ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutput() DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput) ToDatahubTaskTargetResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput) Index(i pulumi.IntInput) DatahubTaskTargetResourceClickHouseParamSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTargetResourceClickHouseParamSchema {
		return vs[0].([]DatahubTaskTargetResourceClickHouseParamSchema)[vs[1].(int)]
	}).(DatahubTaskTargetResourceClickHouseParamSchemaOutput)
}

type DatahubTaskTargetResourceClsParam struct {
	// Required when Decode Json is false.
	ContentKey *string `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson bool `pulumi:"decodeJson"`
	// LogSet id.
	LogSet *string `pulumi:"logSet"`
	// cls id.
	Resource string `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField *string `pulumi:"timeField"`
}

// DatahubTaskTargetResourceClsParamInput is an input type that accepts DatahubTaskTargetResourceClsParamArgs and DatahubTaskTargetResourceClsParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClsParamInput` via:
//
//	DatahubTaskTargetResourceClsParamArgs{...}
type DatahubTaskTargetResourceClsParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClsParamOutput() DatahubTaskTargetResourceClsParamOutput
	ToDatahubTaskTargetResourceClsParamOutputWithContext(context.Context) DatahubTaskTargetResourceClsParamOutput
}

type DatahubTaskTargetResourceClsParamArgs struct {
	// Required when Decode Json is false.
	ContentKey pulumi.StringPtrInput `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson pulumi.BoolInput `pulumi:"decodeJson"`
	// LogSet id.
	LogSet pulumi.StringPtrInput `pulumi:"logSet"`
	// cls id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField pulumi.StringPtrInput `pulumi:"timeField"`
}

func (DatahubTaskTargetResourceClsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClsParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceClsParamArgs) ToDatahubTaskTargetResourceClsParamOutput() DatahubTaskTargetResourceClsParamOutput {
	return i.ToDatahubTaskTargetResourceClsParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClsParamArgs) ToDatahubTaskTargetResourceClsParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClsParamOutput)
}

func (i DatahubTaskTargetResourceClsParamArgs) ToDatahubTaskTargetResourceClsParamPtrOutput() DatahubTaskTargetResourceClsParamPtrOutput {
	return i.ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceClsParamArgs) ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClsParamOutput).ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceClsParamPtrInput is an input type that accepts DatahubTaskTargetResourceClsParamArgs, DatahubTaskTargetResourceClsParamPtr and DatahubTaskTargetResourceClsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceClsParamPtrInput` via:
//
//	        DatahubTaskTargetResourceClsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceClsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceClsParamPtrOutput() DatahubTaskTargetResourceClsParamPtrOutput
	ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceClsParamPtrOutput
}

type datahubTaskTargetResourceClsParamPtrType DatahubTaskTargetResourceClsParamArgs

func DatahubTaskTargetResourceClsParamPtr(v *DatahubTaskTargetResourceClsParamArgs) DatahubTaskTargetResourceClsParamPtrInput {
	return (*datahubTaskTargetResourceClsParamPtrType)(v)
}

func (*datahubTaskTargetResourceClsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceClsParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceClsParamPtrType) ToDatahubTaskTargetResourceClsParamPtrOutput() DatahubTaskTargetResourceClsParamPtrOutput {
	return i.ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceClsParamPtrType) ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceClsParamPtrOutput)
}

type DatahubTaskTargetResourceClsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceClsParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClsParamOutput) ToDatahubTaskTargetResourceClsParamOutput() DatahubTaskTargetResourceClsParamOutput {
	return o
}

func (o DatahubTaskTargetResourceClsParamOutput) ToDatahubTaskTargetResourceClsParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClsParamOutput {
	return o
}

func (o DatahubTaskTargetResourceClsParamOutput) ToDatahubTaskTargetResourceClsParamPtrOutput() DatahubTaskTargetResourceClsParamPtrOutput {
	return o.ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceClsParamOutput) ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceClsParam) *DatahubTaskTargetResourceClsParam {
		return &v
	}).(DatahubTaskTargetResourceClsParamPtrOutput)
}

// Required when Decode Json is false.
func (o DatahubTaskTargetResourceClsParamOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClsParam) *string { return v.ContentKey }).(pulumi.StringPtrOutput)
}

// Whether the produced information is in json format.
func (o DatahubTaskTargetResourceClsParamOutput) DecodeJson() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClsParam) bool { return v.DecodeJson }).(pulumi.BoolOutput)
}

// LogSet id.
func (o DatahubTaskTargetResourceClsParamOutput) LogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClsParam) *string { return v.LogSet }).(pulumi.StringPtrOutput)
}

// cls id.
func (o DatahubTaskTargetResourceClsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
func (o DatahubTaskTargetResourceClsParamOutput) TimeField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceClsParam) *string { return v.TimeField }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceClsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceClsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceClsParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceClsParamPtrOutput) ToDatahubTaskTargetResourceClsParamPtrOutput() DatahubTaskTargetResourceClsParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceClsParamPtrOutput) ToDatahubTaskTargetResourceClsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceClsParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceClsParamPtrOutput) Elem() DatahubTaskTargetResourceClsParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClsParam) DatahubTaskTargetResourceClsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceClsParam
		return ret
	}).(DatahubTaskTargetResourceClsParamOutput)
}

// Required when Decode Json is false.
func (o DatahubTaskTargetResourceClsParamPtrOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return v.ContentKey
	}).(pulumi.StringPtrOutput)
}

// Whether the produced information is in json format.
func (o DatahubTaskTargetResourceClsParamPtrOutput) DecodeJson() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClsParam) *bool {
		if v == nil {
			return nil
		}
		return &v.DecodeJson
	}).(pulumi.BoolPtrOutput)
}

// LogSet id.
func (o DatahubTaskTargetResourceClsParamPtrOutput) LogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return v.LogSet
	}).(pulumi.StringPtrOutput)
}

// cls id.
func (o DatahubTaskTargetResourceClsParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
func (o DatahubTaskTargetResourceClsParamPtrOutput) TimeField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceClsParam) *string {
		if v == nil {
			return nil
		}
		return v.TimeField
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceCosParam struct {
	// The size of aggregated messages MB.
	AggregateBatchSize *int `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval *int `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName string `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat *string `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType *string `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey *string `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix *string `pulumi:"objectKeyPrefix"`
	// region code.
	Region string `pulumi:"region"`
}

// DatahubTaskTargetResourceCosParamInput is an input type that accepts DatahubTaskTargetResourceCosParamArgs and DatahubTaskTargetResourceCosParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceCosParamInput` via:
//
//	DatahubTaskTargetResourceCosParamArgs{...}
type DatahubTaskTargetResourceCosParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceCosParamOutput() DatahubTaskTargetResourceCosParamOutput
	ToDatahubTaskTargetResourceCosParamOutputWithContext(context.Context) DatahubTaskTargetResourceCosParamOutput
}

type DatahubTaskTargetResourceCosParamArgs struct {
	// The size of aggregated messages MB.
	AggregateBatchSize pulumi.IntPtrInput `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval pulumi.IntPtrInput `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat pulumi.StringPtrInput `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType pulumi.StringPtrInput `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey pulumi.StringPtrInput `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix pulumi.StringPtrInput `pulumi:"objectKeyPrefix"`
	// region code.
	Region pulumi.StringInput `pulumi:"region"`
}

func (DatahubTaskTargetResourceCosParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceCosParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceCosParamArgs) ToDatahubTaskTargetResourceCosParamOutput() DatahubTaskTargetResourceCosParamOutput {
	return i.ToDatahubTaskTargetResourceCosParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceCosParamArgs) ToDatahubTaskTargetResourceCosParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCosParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceCosParamOutput)
}

func (i DatahubTaskTargetResourceCosParamArgs) ToDatahubTaskTargetResourceCosParamPtrOutput() DatahubTaskTargetResourceCosParamPtrOutput {
	return i.ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceCosParamArgs) ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCosParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceCosParamOutput).ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceCosParamPtrInput is an input type that accepts DatahubTaskTargetResourceCosParamArgs, DatahubTaskTargetResourceCosParamPtr and DatahubTaskTargetResourceCosParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceCosParamPtrInput` via:
//
//	        DatahubTaskTargetResourceCosParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceCosParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceCosParamPtrOutput() DatahubTaskTargetResourceCosParamPtrOutput
	ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceCosParamPtrOutput
}

type datahubTaskTargetResourceCosParamPtrType DatahubTaskTargetResourceCosParamArgs

func DatahubTaskTargetResourceCosParamPtr(v *DatahubTaskTargetResourceCosParamArgs) DatahubTaskTargetResourceCosParamPtrInput {
	return (*datahubTaskTargetResourceCosParamPtrType)(v)
}

func (*datahubTaskTargetResourceCosParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceCosParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceCosParamPtrType) ToDatahubTaskTargetResourceCosParamPtrOutput() DatahubTaskTargetResourceCosParamPtrOutput {
	return i.ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceCosParamPtrType) ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCosParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceCosParamPtrOutput)
}

type DatahubTaskTargetResourceCosParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceCosParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceCosParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceCosParamOutput) ToDatahubTaskTargetResourceCosParamOutput() DatahubTaskTargetResourceCosParamOutput {
	return o
}

func (o DatahubTaskTargetResourceCosParamOutput) ToDatahubTaskTargetResourceCosParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCosParamOutput {
	return o
}

func (o DatahubTaskTargetResourceCosParamOutput) ToDatahubTaskTargetResourceCosParamPtrOutput() DatahubTaskTargetResourceCosParamPtrOutput {
	return o.ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceCosParamOutput) ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCosParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceCosParam) *DatahubTaskTargetResourceCosParam {
		return &v
	}).(DatahubTaskTargetResourceCosParamPtrOutput)
}

// The size of aggregated messages MB.
func (o DatahubTaskTargetResourceCosParamOutput) AggregateBatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) *int { return v.AggregateBatchSize }).(pulumi.IntPtrOutput)
}

// time interval.
func (o DatahubTaskTargetResourceCosParamOutput) AggregateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) *int { return v.AggregateInterval }).(pulumi.IntPtrOutput)
}

// cos bucket name.
func (o DatahubTaskTargetResourceCosParamOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) string { return v.BucketName }).(pulumi.StringOutput)
}

// Partition format formatted according to strptime time.
func (o DatahubTaskTargetResourceCosParamOutput) DirectoryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) *string { return v.DirectoryTimeFormat }).(pulumi.StringPtrOutput)
}

// The file format after message aggregation csv|json.
func (o DatahubTaskTargetResourceCosParamOutput) FormatOutputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) *string { return v.FormatOutputType }).(pulumi.StringPtrOutput)
}

// ObjectKey.
func (o DatahubTaskTargetResourceCosParamOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) *string { return v.ObjectKey }).(pulumi.StringPtrOutput)
}

// Dumped object directory prefix.
func (o DatahubTaskTargetResourceCosParamOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) *string { return v.ObjectKeyPrefix }).(pulumi.StringPtrOutput)
}

// region code.
func (o DatahubTaskTargetResourceCosParamOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCosParam) string { return v.Region }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceCosParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceCosParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceCosParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceCosParamPtrOutput) ToDatahubTaskTargetResourceCosParamPtrOutput() DatahubTaskTargetResourceCosParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceCosParamPtrOutput) ToDatahubTaskTargetResourceCosParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCosParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceCosParamPtrOutput) Elem() DatahubTaskTargetResourceCosParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) DatahubTaskTargetResourceCosParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceCosParam
		return ret
	}).(DatahubTaskTargetResourceCosParamOutput)
}

// The size of aggregated messages MB.
func (o DatahubTaskTargetResourceCosParamPtrOutput) AggregateBatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *int {
		if v == nil {
			return nil
		}
		return v.AggregateBatchSize
	}).(pulumi.IntPtrOutput)
}

// time interval.
func (o DatahubTaskTargetResourceCosParamPtrOutput) AggregateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *int {
		if v == nil {
			return nil
		}
		return v.AggregateInterval
	}).(pulumi.IntPtrOutput)
}

// cos bucket name.
func (o DatahubTaskTargetResourceCosParamPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Partition format formatted according to strptime time.
func (o DatahubTaskTargetResourceCosParamPtrOutput) DirectoryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryTimeFormat
	}).(pulumi.StringPtrOutput)
}

// The file format after message aggregation csv|json.
func (o DatahubTaskTargetResourceCosParamPtrOutput) FormatOutputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.FormatOutputType
	}).(pulumi.StringPtrOutput)
}

// ObjectKey.
func (o DatahubTaskTargetResourceCosParamPtrOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKey
	}).(pulumi.StringPtrOutput)
}

// Dumped object directory prefix.
func (o DatahubTaskTargetResourceCosParamPtrOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKeyPrefix
	}).(pulumi.StringPtrOutput)
}

// region code.
func (o DatahubTaskTargetResourceCosParamPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCosParam) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceCtsdbParam struct {
	// Ctsdb metric.
	CtsdbMetric *string `pulumi:"ctsdbMetric"`
	// resource id.
	Resource *string `pulumi:"resource"`
}

// DatahubTaskTargetResourceCtsdbParamInput is an input type that accepts DatahubTaskTargetResourceCtsdbParamArgs and DatahubTaskTargetResourceCtsdbParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceCtsdbParamInput` via:
//
//	DatahubTaskTargetResourceCtsdbParamArgs{...}
type DatahubTaskTargetResourceCtsdbParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceCtsdbParamOutput() DatahubTaskTargetResourceCtsdbParamOutput
	ToDatahubTaskTargetResourceCtsdbParamOutputWithContext(context.Context) DatahubTaskTargetResourceCtsdbParamOutput
}

type DatahubTaskTargetResourceCtsdbParamArgs struct {
	// Ctsdb metric.
	CtsdbMetric pulumi.StringPtrInput `pulumi:"ctsdbMetric"`
	// resource id.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (DatahubTaskTargetResourceCtsdbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceCtsdbParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceCtsdbParamArgs) ToDatahubTaskTargetResourceCtsdbParamOutput() DatahubTaskTargetResourceCtsdbParamOutput {
	return i.ToDatahubTaskTargetResourceCtsdbParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceCtsdbParamArgs) ToDatahubTaskTargetResourceCtsdbParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCtsdbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceCtsdbParamOutput)
}

func (i DatahubTaskTargetResourceCtsdbParamArgs) ToDatahubTaskTargetResourceCtsdbParamPtrOutput() DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return i.ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceCtsdbParamArgs) ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceCtsdbParamOutput).ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceCtsdbParamPtrInput is an input type that accepts DatahubTaskTargetResourceCtsdbParamArgs, DatahubTaskTargetResourceCtsdbParamPtr and DatahubTaskTargetResourceCtsdbParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceCtsdbParamPtrInput` via:
//
//	        DatahubTaskTargetResourceCtsdbParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceCtsdbParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceCtsdbParamPtrOutput() DatahubTaskTargetResourceCtsdbParamPtrOutput
	ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceCtsdbParamPtrOutput
}

type datahubTaskTargetResourceCtsdbParamPtrType DatahubTaskTargetResourceCtsdbParamArgs

func DatahubTaskTargetResourceCtsdbParamPtr(v *DatahubTaskTargetResourceCtsdbParamArgs) DatahubTaskTargetResourceCtsdbParamPtrInput {
	return (*datahubTaskTargetResourceCtsdbParamPtrType)(v)
}

func (*datahubTaskTargetResourceCtsdbParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceCtsdbParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceCtsdbParamPtrType) ToDatahubTaskTargetResourceCtsdbParamPtrOutput() DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return i.ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceCtsdbParamPtrType) ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceCtsdbParamPtrOutput)
}

type DatahubTaskTargetResourceCtsdbParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceCtsdbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceCtsdbParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceCtsdbParamOutput) ToDatahubTaskTargetResourceCtsdbParamOutput() DatahubTaskTargetResourceCtsdbParamOutput {
	return o
}

func (o DatahubTaskTargetResourceCtsdbParamOutput) ToDatahubTaskTargetResourceCtsdbParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCtsdbParamOutput {
	return o
}

func (o DatahubTaskTargetResourceCtsdbParamOutput) ToDatahubTaskTargetResourceCtsdbParamPtrOutput() DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return o.ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceCtsdbParamOutput) ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceCtsdbParam) *DatahubTaskTargetResourceCtsdbParam {
		return &v
	}).(DatahubTaskTargetResourceCtsdbParamPtrOutput)
}

// Ctsdb metric.
func (o DatahubTaskTargetResourceCtsdbParamOutput) CtsdbMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCtsdbParam) *string { return v.CtsdbMetric }).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskTargetResourceCtsdbParamOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceCtsdbParam) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceCtsdbParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceCtsdbParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceCtsdbParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceCtsdbParamPtrOutput) ToDatahubTaskTargetResourceCtsdbParamPtrOutput() DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceCtsdbParamPtrOutput) ToDatahubTaskTargetResourceCtsdbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceCtsdbParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceCtsdbParamPtrOutput) Elem() DatahubTaskTargetResourceCtsdbParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCtsdbParam) DatahubTaskTargetResourceCtsdbParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceCtsdbParam
		return ret
	}).(DatahubTaskTargetResourceCtsdbParamOutput)
}

// Ctsdb metric.
func (o DatahubTaskTargetResourceCtsdbParamPtrOutput) CtsdbMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCtsdbParam) *string {
		if v == nil {
			return nil
		}
		return v.CtsdbMetric
	}).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskTargetResourceCtsdbParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceCtsdbParam) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceDtsParam struct {
	// Dts consumer group Id.
	GroupId *string `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword *string `pulumi:"groupPassword"`
	// Dts account.
	GroupUser *string `pulumi:"groupUser"`
	// Dts connection ip.
	Ip *string `pulumi:"ip"`
	// Dts connection port.
	Port *int `pulumi:"port"`
	// Dts instance Id.
	Resource string `pulumi:"resource"`
	// Dts topic.
	Topic *string `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql *bool `pulumi:"tranSql"`
}

// DatahubTaskTargetResourceDtsParamInput is an input type that accepts DatahubTaskTargetResourceDtsParamArgs and DatahubTaskTargetResourceDtsParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceDtsParamInput` via:
//
//	DatahubTaskTargetResourceDtsParamArgs{...}
type DatahubTaskTargetResourceDtsParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceDtsParamOutput() DatahubTaskTargetResourceDtsParamOutput
	ToDatahubTaskTargetResourceDtsParamOutputWithContext(context.Context) DatahubTaskTargetResourceDtsParamOutput
}

type DatahubTaskTargetResourceDtsParamArgs struct {
	// Dts consumer group Id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword pulumi.StringPtrInput `pulumi:"groupPassword"`
	// Dts account.
	GroupUser pulumi.StringPtrInput `pulumi:"groupUser"`
	// Dts connection ip.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Dts connection port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Dts instance Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Dts topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql pulumi.BoolPtrInput `pulumi:"tranSql"`
}

func (DatahubTaskTargetResourceDtsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceDtsParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceDtsParamArgs) ToDatahubTaskTargetResourceDtsParamOutput() DatahubTaskTargetResourceDtsParamOutput {
	return i.ToDatahubTaskTargetResourceDtsParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceDtsParamArgs) ToDatahubTaskTargetResourceDtsParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceDtsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceDtsParamOutput)
}

func (i DatahubTaskTargetResourceDtsParamArgs) ToDatahubTaskTargetResourceDtsParamPtrOutput() DatahubTaskTargetResourceDtsParamPtrOutput {
	return i.ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceDtsParamArgs) ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceDtsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceDtsParamOutput).ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceDtsParamPtrInput is an input type that accepts DatahubTaskTargetResourceDtsParamArgs, DatahubTaskTargetResourceDtsParamPtr and DatahubTaskTargetResourceDtsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceDtsParamPtrInput` via:
//
//	        DatahubTaskTargetResourceDtsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceDtsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceDtsParamPtrOutput() DatahubTaskTargetResourceDtsParamPtrOutput
	ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceDtsParamPtrOutput
}

type datahubTaskTargetResourceDtsParamPtrType DatahubTaskTargetResourceDtsParamArgs

func DatahubTaskTargetResourceDtsParamPtr(v *DatahubTaskTargetResourceDtsParamArgs) DatahubTaskTargetResourceDtsParamPtrInput {
	return (*datahubTaskTargetResourceDtsParamPtrType)(v)
}

func (*datahubTaskTargetResourceDtsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceDtsParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceDtsParamPtrType) ToDatahubTaskTargetResourceDtsParamPtrOutput() DatahubTaskTargetResourceDtsParamPtrOutput {
	return i.ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceDtsParamPtrType) ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceDtsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceDtsParamPtrOutput)
}

type DatahubTaskTargetResourceDtsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceDtsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceDtsParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceDtsParamOutput) ToDatahubTaskTargetResourceDtsParamOutput() DatahubTaskTargetResourceDtsParamOutput {
	return o
}

func (o DatahubTaskTargetResourceDtsParamOutput) ToDatahubTaskTargetResourceDtsParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceDtsParamOutput {
	return o
}

func (o DatahubTaskTargetResourceDtsParamOutput) ToDatahubTaskTargetResourceDtsParamPtrOutput() DatahubTaskTargetResourceDtsParamPtrOutput {
	return o.ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceDtsParamOutput) ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceDtsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceDtsParam) *DatahubTaskTargetResourceDtsParam {
		return &v
	}).(DatahubTaskTargetResourceDtsParamPtrOutput)
}

// Dts consumer group Id.
func (o DatahubTaskTargetResourceDtsParamOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Dts consumer group passwd.
func (o DatahubTaskTargetResourceDtsParamOutput) GroupPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *string { return v.GroupPassword }).(pulumi.StringPtrOutput)
}

// Dts account.
func (o DatahubTaskTargetResourceDtsParamOutput) GroupUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *string { return v.GroupUser }).(pulumi.StringPtrOutput)
}

// Dts connection ip.
func (o DatahubTaskTargetResourceDtsParamOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Dts connection port.
func (o DatahubTaskTargetResourceDtsParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Dts instance Id.
func (o DatahubTaskTargetResourceDtsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Dts topic.
func (o DatahubTaskTargetResourceDtsParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
func (o DatahubTaskTargetResourceDtsParamOutput) TranSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceDtsParam) *bool { return v.TranSql }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceDtsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceDtsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceDtsParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceDtsParamPtrOutput) ToDatahubTaskTargetResourceDtsParamPtrOutput() DatahubTaskTargetResourceDtsParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceDtsParamPtrOutput) ToDatahubTaskTargetResourceDtsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceDtsParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceDtsParamPtrOutput) Elem() DatahubTaskTargetResourceDtsParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) DatahubTaskTargetResourceDtsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceDtsParam
		return ret
	}).(DatahubTaskTargetResourceDtsParamOutput)
}

// Dts consumer group Id.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Dts consumer group passwd.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) GroupPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.GroupPassword
	}).(pulumi.StringPtrOutput)
}

// Dts account.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) GroupUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.GroupUser
	}).(pulumi.StringPtrOutput)
}

// Dts connection ip.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Dts connection port.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Dts instance Id.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Dts topic.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
func (o DatahubTaskTargetResourceDtsParamPtrOutput) TranSql() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceDtsParam) *bool {
		if v == nil {
			return nil
		}
		return v.TranSql
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceEsParam struct {
	// key for data in non-json format.
	ContentKey *string `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey *string `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat *string `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField *string `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls *DatahubTaskTargetResourceEsParamDropCls `pulumi:"dropCls"`
	// dead letter queue.
	DropDlq *DatahubTaskTargetResourceEsParamDropDlq `pulumi:"dropDlq"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage *bool `pulumi:"dropInvalidJsonMessage"`
	// Whether Es discards the message of parsing failure.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index *string `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType *string `pulumi:"indexType"`
	// Es Password.
	Password *string `pulumi:"password"`
	// Es connection port.
	Port *int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip *string `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId *string `pulumi:"uniqVpcId"`
	// Es UserName.
	UserName *string `pulumi:"userName"`
}

// DatahubTaskTargetResourceEsParamInput is an input type that accepts DatahubTaskTargetResourceEsParamArgs and DatahubTaskTargetResourceEsParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamInput` via:
//
//	DatahubTaskTargetResourceEsParamArgs{...}
type DatahubTaskTargetResourceEsParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamOutput() DatahubTaskTargetResourceEsParamOutput
	ToDatahubTaskTargetResourceEsParamOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamOutput
}

type DatahubTaskTargetResourceEsParamArgs struct {
	// key for data in non-json format.
	ContentKey pulumi.StringPtrInput `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey pulumi.StringPtrInput `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField pulumi.StringPtrInput `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls DatahubTaskTargetResourceEsParamDropClsPtrInput `pulumi:"dropCls"`
	// dead letter queue.
	DropDlq DatahubTaskTargetResourceEsParamDropDlqPtrInput `pulumi:"dropDlq"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage pulumi.BoolPtrInput `pulumi:"dropInvalidJsonMessage"`
	// Whether Es discards the message of parsing failure.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index pulumi.StringPtrInput `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType pulumi.StringPtrInput `pulumi:"indexType"`
	// Es Password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Es connection port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringPtrInput `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId pulumi.StringPtrInput `pulumi:"uniqVpcId"`
	// Es UserName.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DatahubTaskTargetResourceEsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamArgs) ToDatahubTaskTargetResourceEsParamOutput() DatahubTaskTargetResourceEsParamOutput {
	return i.ToDatahubTaskTargetResourceEsParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamArgs) ToDatahubTaskTargetResourceEsParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamOutput)
}

func (i DatahubTaskTargetResourceEsParamArgs) ToDatahubTaskTargetResourceEsParamPtrOutput() DatahubTaskTargetResourceEsParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamArgs) ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamOutput).ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceEsParamPtrInput is an input type that accepts DatahubTaskTargetResourceEsParamArgs, DatahubTaskTargetResourceEsParamPtr and DatahubTaskTargetResourceEsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamPtrInput` via:
//
//	        DatahubTaskTargetResourceEsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceEsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamPtrOutput() DatahubTaskTargetResourceEsParamPtrOutput
	ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamPtrOutput
}

type datahubTaskTargetResourceEsParamPtrType DatahubTaskTargetResourceEsParamArgs

func DatahubTaskTargetResourceEsParamPtr(v *DatahubTaskTargetResourceEsParamArgs) DatahubTaskTargetResourceEsParamPtrInput {
	return (*datahubTaskTargetResourceEsParamPtrType)(v)
}

func (*datahubTaskTargetResourceEsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceEsParamPtrType) ToDatahubTaskTargetResourceEsParamPtrOutput() DatahubTaskTargetResourceEsParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceEsParamPtrType) ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamPtrOutput)
}

type DatahubTaskTargetResourceEsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamOutput) ToDatahubTaskTargetResourceEsParamOutput() DatahubTaskTargetResourceEsParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamOutput) ToDatahubTaskTargetResourceEsParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamOutput) ToDatahubTaskTargetResourceEsParamPtrOutput() DatahubTaskTargetResourceEsParamPtrOutput {
	return o.ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceEsParamOutput) ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceEsParam) *DatahubTaskTargetResourceEsParam {
		return &v
	}).(DatahubTaskTargetResourceEsParamPtrOutput)
}

// key for data in non-json format.
func (o DatahubTaskTargetResourceEsParamOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.ContentKey }).(pulumi.StringPtrOutput)
}

// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
func (o DatahubTaskTargetResourceEsParamOutput) DatabasePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.DatabasePrimaryKey }).(pulumi.StringPtrOutput)
}

// Es date suffix.
func (o DatahubTaskTargetResourceEsParamOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The field name of the document ID value dumped into Es.
func (o DatahubTaskTargetResourceEsParamOutput) DocumentIdField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.DocumentIdField }).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskTargetResourceEsParamOutput) DropCls() DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *DatahubTaskTargetResourceEsParamDropCls { return v.DropCls }).(DatahubTaskTargetResourceEsParamDropClsPtrOutput)
}

// dead letter queue.
func (o DatahubTaskTargetResourceEsParamOutput) DropDlq() DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *DatahubTaskTargetResourceEsParamDropDlq { return v.DropDlq }).(DatahubTaskTargetResourceEsParamDropDlqPtrOutput)
}

// Whether Es discards messages in non-json format.
func (o DatahubTaskTargetResourceEsParamOutput) DropInvalidJsonMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *bool { return v.DropInvalidJsonMessage }).(pulumi.BoolPtrOutput)
}

// Whether Es discards the message of parsing failure.
func (o DatahubTaskTargetResourceEsParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// Es index name.
func (o DatahubTaskTargetResourceEsParamOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.Index }).(pulumi.StringPtrOutput)
}

// Es custom index name type, STRING, JSONPATH, the default is STRING.
func (o DatahubTaskTargetResourceEsParamOutput) IndexType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.IndexType }).(pulumi.StringPtrOutput)
}

// Es Password.
func (o DatahubTaskTargetResourceEsParamOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Es connection port.
func (o DatahubTaskTargetResourceEsParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Resource.
func (o DatahubTaskTargetResourceEsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceEsParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskTargetResourceEsParamOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.ServiceVip }).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskTargetResourceEsParamOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.UniqVpcId }).(pulumi.StringPtrOutput)
}

// Es UserName.
func (o DatahubTaskTargetResourceEsParamOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParam) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceEsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamPtrOutput) ToDatahubTaskTargetResourceEsParamPtrOutput() DatahubTaskTargetResourceEsParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamPtrOutput) ToDatahubTaskTargetResourceEsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamPtrOutput) Elem() DatahubTaskTargetResourceEsParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) DatahubTaskTargetResourceEsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceEsParam
		return ret
	}).(DatahubTaskTargetResourceEsParamOutput)
}

// key for data in non-json format.
func (o DatahubTaskTargetResourceEsParamPtrOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.ContentKey
	}).(pulumi.StringPtrOutput)
}

// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DatabasePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.DatabasePrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Es date suffix.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.DateFormat
	}).(pulumi.StringPtrOutput)
}

// The field name of the document ID value dumped into Es.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DocumentIdField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.DocumentIdField
	}).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DropCls() DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *DatahubTaskTargetResourceEsParamDropCls {
		if v == nil {
			return nil
		}
		return v.DropCls
	}).(DatahubTaskTargetResourceEsParamDropClsPtrOutput)
}

// dead letter queue.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DropDlq() DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *DatahubTaskTargetResourceEsParamDropDlq {
		if v == nil {
			return nil
		}
		return v.DropDlq
	}).(DatahubTaskTargetResourceEsParamDropDlqPtrOutput)
}

// Whether Es discards messages in non-json format.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DropInvalidJsonMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidJsonMessage
	}).(pulumi.BoolPtrOutput)
}

// Whether Es discards the message of parsing failure.
func (o DatahubTaskTargetResourceEsParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// Es index name.
func (o DatahubTaskTargetResourceEsParamPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.Index
	}).(pulumi.StringPtrOutput)
}

// Es custom index name type, STRING, JSONPATH, the default is STRING.
func (o DatahubTaskTargetResourceEsParamPtrOutput) IndexType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.IndexType
	}).(pulumi.StringPtrOutput)
}

// Es Password.
func (o DatahubTaskTargetResourceEsParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Es connection port.
func (o DatahubTaskTargetResourceEsParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Resource.
func (o DatahubTaskTargetResourceEsParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceEsParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// instance vip.
func (o DatahubTaskTargetResourceEsParamPtrOutput) ServiceVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.ServiceVip
	}).(pulumi.StringPtrOutput)
}

// instance vpc id.
func (o DatahubTaskTargetResourceEsParamPtrOutput) UniqVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.UniqVpcId
	}).(pulumi.StringPtrOutput)
}

// Es UserName.
func (o DatahubTaskTargetResourceEsParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParam) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropCls struct {
	// cls LogSet id.
	DropClsLogSet *string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin *string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion *string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId *string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls *bool `pulumi:"dropInvalidMessageToCls"`
}

// DatahubTaskTargetResourceEsParamDropClsInput is an input type that accepts DatahubTaskTargetResourceEsParamDropClsArgs and DatahubTaskTargetResourceEsParamDropClsOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropClsInput` via:
//
//	DatahubTaskTargetResourceEsParamDropClsArgs{...}
type DatahubTaskTargetResourceEsParamDropClsInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropClsOutput() DatahubTaskTargetResourceEsParamDropClsOutput
	ToDatahubTaskTargetResourceEsParamDropClsOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropClsOutput
}

type DatahubTaskTargetResourceEsParamDropClsArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringPtrInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringPtrInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringPtrInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringPtrInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolPtrInput `pulumi:"dropInvalidMessageToCls"`
}

func (DatahubTaskTargetResourceEsParamDropClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropCls)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamDropClsArgs) ToDatahubTaskTargetResourceEsParamDropClsOutput() DatahubTaskTargetResourceEsParamDropClsOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropClsOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropClsArgs) ToDatahubTaskTargetResourceEsParamDropClsOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropClsOutput)
}

func (i DatahubTaskTargetResourceEsParamDropClsArgs) ToDatahubTaskTargetResourceEsParamDropClsPtrOutput() DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropClsArgs) ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropClsOutput).ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceEsParamDropClsPtrInput is an input type that accepts DatahubTaskTargetResourceEsParamDropClsArgs, DatahubTaskTargetResourceEsParamDropClsPtr and DatahubTaskTargetResourceEsParamDropClsPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropClsPtrInput` via:
//
//	        DatahubTaskTargetResourceEsParamDropClsArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceEsParamDropClsPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropClsPtrOutput() DatahubTaskTargetResourceEsParamDropClsPtrOutput
	ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropClsPtrOutput
}

type datahubTaskTargetResourceEsParamDropClsPtrType DatahubTaskTargetResourceEsParamDropClsArgs

func DatahubTaskTargetResourceEsParamDropClsPtr(v *DatahubTaskTargetResourceEsParamDropClsArgs) DatahubTaskTargetResourceEsParamDropClsPtrInput {
	return (*datahubTaskTargetResourceEsParamDropClsPtrType)(v)
}

func (*datahubTaskTargetResourceEsParamDropClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropCls)(nil)).Elem()
}

func (i *datahubTaskTargetResourceEsParamDropClsPtrType) ToDatahubTaskTargetResourceEsParamDropClsPtrOutput() DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceEsParamDropClsPtrType) ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropClsPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropClsOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropCls)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropClsOutput) ToDatahubTaskTargetResourceEsParamDropClsOutput() DatahubTaskTargetResourceEsParamDropClsOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropClsOutput) ToDatahubTaskTargetResourceEsParamDropClsOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropClsOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropClsOutput) ToDatahubTaskTargetResourceEsParamDropClsPtrOutput() DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return o.ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceEsParamDropClsOutput) ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceEsParamDropCls) *DatahubTaskTargetResourceEsParamDropCls {
		return &v
	}).(DatahubTaskTargetResourceEsParamDropClsPtrOutput)
}

// cls LogSet id.
func (o DatahubTaskTargetResourceEsParamDropClsOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropCls) *string { return v.DropClsLogSet }).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskTargetResourceEsParamDropClsOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropCls) *string { return v.DropClsOwneruin }).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskTargetResourceEsParamDropClsOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropCls) *string { return v.DropClsRegion }).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskTargetResourceEsParamDropClsOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropCls) *string { return v.DropClsTopicId }).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskTargetResourceEsParamDropClsOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropCls) *bool { return v.DropInvalidMessageToCls }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropClsPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropCls)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) ToDatahubTaskTargetResourceEsParamDropClsPtrOutput() DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) ToDatahubTaskTargetResourceEsParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) Elem() DatahubTaskTargetResourceEsParamDropClsOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropCls) DatahubTaskTargetResourceEsParamDropCls {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceEsParamDropCls
		return ret
	}).(DatahubTaskTargetResourceEsParamDropClsOutput)
}

// cls LogSet id.
func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsLogSet
	}).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsOwneruin
	}).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsRegion
	}).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsTopicId
	}).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskTargetResourceEsParamDropClsPtrOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropCls) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlq struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType *string `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam *DatahubTaskTargetResourceEsParamDropDlqKafkaParam `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts *int `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval *int `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam *DatahubTaskTargetResourceEsParamDropDlqTopicParam `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type string `pulumi:"type"`
}

// DatahubTaskTargetResourceEsParamDropDlqInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqArgs and DatahubTaskTargetResourceEsParamDropDlqOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqInput` via:
//
//	DatahubTaskTargetResourceEsParamDropDlqArgs{...}
type DatahubTaskTargetResourceEsParamDropDlqInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqOutput() DatahubTaskTargetResourceEsParamDropDlqOutput
	ToDatahubTaskTargetResourceEsParamDropDlqOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqOutput
}

type DatahubTaskTargetResourceEsParamDropDlqArgs struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType pulumi.StringPtrInput `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrInput `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts pulumi.IntPtrInput `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval pulumi.IntPtrInput `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrInput `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskTargetResourceEsParamDropDlqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamDropDlqArgs) ToDatahubTaskTargetResourceEsParamDropDlqOutput() DatahubTaskTargetResourceEsParamDropDlqOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqArgs) ToDatahubTaskTargetResourceEsParamDropDlqOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqOutput)
}

func (i DatahubTaskTargetResourceEsParamDropDlqArgs) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutput() DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqArgs) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqOutput).ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceEsParamDropDlqPtrInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqArgs, DatahubTaskTargetResourceEsParamDropDlqPtr and DatahubTaskTargetResourceEsParamDropDlqPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqPtrInput` via:
//
//	        DatahubTaskTargetResourceEsParamDropDlqArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceEsParamDropDlqPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqPtrOutput() DatahubTaskTargetResourceEsParamDropDlqPtrOutput
	ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqPtrOutput
}

type datahubTaskTargetResourceEsParamDropDlqPtrType DatahubTaskTargetResourceEsParamDropDlqArgs

func DatahubTaskTargetResourceEsParamDropDlqPtr(v *DatahubTaskTargetResourceEsParamDropDlqArgs) DatahubTaskTargetResourceEsParamDropDlqPtrInput {
	return (*datahubTaskTargetResourceEsParamDropDlqPtrType)(v)
}

func (*datahubTaskTargetResourceEsParamDropDlqPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (i *datahubTaskTargetResourceEsParamDropDlqPtrType) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutput() DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceEsParamDropDlqPtrType) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqOutput) ToDatahubTaskTargetResourceEsParamDropDlqOutput() DatahubTaskTargetResourceEsParamDropDlqOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqOutput) ToDatahubTaskTargetResourceEsParamDropDlqOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqOutput) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutput() DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return o.ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceEsParamDropDlqOutput) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceEsParamDropDlq) *DatahubTaskTargetResourceEsParamDropDlq {
		return &v
	}).(DatahubTaskTargetResourceEsParamDropDlqPtrOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskTargetResourceEsParamDropDlqOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlq) *string { return v.DlqType }).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskTargetResourceEsParamDropDlqOutput) KafkaParam() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlq) *DatahubTaskTargetResourceEsParamDropDlqKafkaParam {
		return v.KafkaParam
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskTargetResourceEsParamDropDlqOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlq) *int { return v.MaxRetryAttempts }).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskTargetResourceEsParamDropDlqOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlq) *int { return v.RetryInterval }).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskTargetResourceEsParamDropDlqOutput) TopicParam() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlq) *DatahubTaskTargetResourceEsParamDropDlqTopicParam {
		return v.TopicParam
	}).(DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskTargetResourceEsParamDropDlqOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlq) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutput() DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) ToDatahubTaskTargetResourceEsParamDropDlqPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) Elem() DatahubTaskTargetResourceEsParamDropDlqOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) DatahubTaskTargetResourceEsParamDropDlq {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceEsParamDropDlq
		return ret
	}).(DatahubTaskTargetResourceEsParamDropDlqOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) *string {
		if v == nil {
			return nil
		}
		return v.DlqType
	}).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) KafkaParam() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) *DatahubTaskTargetResourceEsParamDropDlqKafkaParam {
		if v == nil {
			return nil
		}
		return v.KafkaParam
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetryAttempts
	}).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) *int {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) TopicParam() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) *DatahubTaskTargetResourceEsParamDropDlqTopicParam {
		if v == nil {
			return nil
		}
		return v.TopicParam
	}).(DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskTargetResourceEsParamDropDlqPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlq) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParam struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType *string `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration *bool `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum *int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit *int `pulumi:"qpsLimit"`
	// instance resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName *string `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime *int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic *string `pulumi:"topic"`
	// Topic id.
	TopicId *string `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping *bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId *int `pulumi:"zoneId"`
}

// DatahubTaskTargetResourceEsParamDropDlqKafkaParamInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs and DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqKafkaParamInput` via:
//
//	DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs{...}
type DatahubTaskTargetResourceEsParamDropDlqKafkaParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput
	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolPtrInput `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntPtrInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntPtrInput `pulumi:"qpsLimit"`
	// instance resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Topic id.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolPtrInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntPtrInput `pulumi:"zoneId"`
}

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput)
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput).ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs, DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtr and DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrInput` via:
//
//	        DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput
	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput
}

type datahubTaskTargetResourceEsParamDropDlqKafkaParamPtrType DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs

func DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtr(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs) DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrInput {
	return (*datahubTaskTargetResourceEsParamDropDlqKafkaParamPtrType)(v)
}

func (*datahubTaskTargetResourceEsParamDropDlqKafkaParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceEsParamDropDlqKafkaParamPtrType) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceEsParamDropDlqKafkaParamPtrType) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *DatahubTaskTargetResourceEsParamDropDlqKafkaParam {
		return &v
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool { return v.EnableToleration }).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int { return v.PartitionNum }).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int { return v.QpsLimit }).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) TableMappings() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) []DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping {
		return v.TableMappings
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool { return v.UseTableMapping }).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int { return v.ZoneId }).(pulumi.IntPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) Elem() DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) DatahubTaskTargetResourceEsParamDropDlqKafkaParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceEsParamDropDlqKafkaParam
		return ret
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.EnableToleration
	}).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNum
	}).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.QpsLimit
	}).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// instance name.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) TableMappings() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) []DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping {
		if v == nil {
			return nil
		}
		return v.TableMappings
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseTableMapping
	}).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping struct {
	// database name.
	Database string `pulumi:"database"`
	// table name,use, to separate.
	Table string `pulumi:"table"`
	// Topic name.
	Topic string `pulumi:"topic"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
}

// DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs and DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingInput` via:
//
//	DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs{...}
type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput
	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs struct {
	// database name.
	Database pulumi.StringInput `pulumi:"database"`
	// table name,use, to separate.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

// DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray and DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput` via:
//
//	DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray{ DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs{...} }
type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
	ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray []DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingInput

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

// database name.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// table name,use, to separate.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic ID.
func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping {
		return vs[0].([]DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMapping)[vs[1].(int)]
	}).(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType *string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime *int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId *string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
}

// DatahubTaskTargetResourceEsParamDropDlqTopicParamInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs and DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqTopicParamInput` via:
//
//	DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs{...}
type DatahubTaskTargetResourceEsParamDropDlqTopicParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput
	ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput
}

type DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
}

func (DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput)
}

func (i DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput).ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrInput is an input type that accepts DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs, DatahubTaskTargetResourceEsParamDropDlqTopicParamPtr and DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrInput` via:
//
//	        DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput
	ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput
}

type datahubTaskTargetResourceEsParamDropDlqTopicParamPtrType DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs

func DatahubTaskTargetResourceEsParamDropDlqTopicParamPtr(v *DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs) DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrInput {
	return (*datahubTaskTargetResourceEsParamDropDlqTopicParamPtrType)(v)
}

func (*datahubTaskTargetResourceEsParamDropDlqTopicParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceEsParamDropDlqTopicParamPtrType) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceEsParamDropDlqTopicParamPtrType) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *DatahubTaskTargetResourceEsParamDropDlqTopicParam {
		return &v
	}).(DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEsParamDropDlqTopicParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput() DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) ToDatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) Elem() DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) DatahubTaskTargetResourceEsParamDropDlqTopicParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceEsParamDropDlqTopicParam
		return ret
	}).(DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEsParamDropDlqTopicParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceEventBusParam struct {
	// SCF function name.
	FunctionName *string `pulumi:"functionName"`
	// SCF namespace.
	Namespace *string `pulumi:"namespace"`
	// SCF version and alias.
	Qualifier *string `pulumi:"qualifier"`
	// instance id.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// resource type. EB_COS/EB_ES/EB_CLS.
	Type string `pulumi:"type"`
}

// DatahubTaskTargetResourceEventBusParamInput is an input type that accepts DatahubTaskTargetResourceEventBusParamArgs and DatahubTaskTargetResourceEventBusParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEventBusParamInput` via:
//
//	DatahubTaskTargetResourceEventBusParamArgs{...}
type DatahubTaskTargetResourceEventBusParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEventBusParamOutput() DatahubTaskTargetResourceEventBusParamOutput
	ToDatahubTaskTargetResourceEventBusParamOutputWithContext(context.Context) DatahubTaskTargetResourceEventBusParamOutput
}

type DatahubTaskTargetResourceEventBusParamArgs struct {
	// SCF function name.
	FunctionName pulumi.StringPtrInput `pulumi:"functionName"`
	// SCF namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SCF version and alias.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
	// instance id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// resource type. EB_COS/EB_ES/EB_CLS.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskTargetResourceEventBusParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEventBusParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceEventBusParamArgs) ToDatahubTaskTargetResourceEventBusParamOutput() DatahubTaskTargetResourceEventBusParamOutput {
	return i.ToDatahubTaskTargetResourceEventBusParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEventBusParamArgs) ToDatahubTaskTargetResourceEventBusParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEventBusParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEventBusParamOutput)
}

func (i DatahubTaskTargetResourceEventBusParamArgs) ToDatahubTaskTargetResourceEventBusParamPtrOutput() DatahubTaskTargetResourceEventBusParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceEventBusParamArgs) ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEventBusParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEventBusParamOutput).ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceEventBusParamPtrInput is an input type that accepts DatahubTaskTargetResourceEventBusParamArgs, DatahubTaskTargetResourceEventBusParamPtr and DatahubTaskTargetResourceEventBusParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceEventBusParamPtrInput` via:
//
//	        DatahubTaskTargetResourceEventBusParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceEventBusParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceEventBusParamPtrOutput() DatahubTaskTargetResourceEventBusParamPtrOutput
	ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceEventBusParamPtrOutput
}

type datahubTaskTargetResourceEventBusParamPtrType DatahubTaskTargetResourceEventBusParamArgs

func DatahubTaskTargetResourceEventBusParamPtr(v *DatahubTaskTargetResourceEventBusParamArgs) DatahubTaskTargetResourceEventBusParamPtrInput {
	return (*datahubTaskTargetResourceEventBusParamPtrType)(v)
}

func (*datahubTaskTargetResourceEventBusParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEventBusParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceEventBusParamPtrType) ToDatahubTaskTargetResourceEventBusParamPtrOutput() DatahubTaskTargetResourceEventBusParamPtrOutput {
	return i.ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceEventBusParamPtrType) ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEventBusParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceEventBusParamPtrOutput)
}

type DatahubTaskTargetResourceEventBusParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEventBusParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceEventBusParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEventBusParamOutput) ToDatahubTaskTargetResourceEventBusParamOutput() DatahubTaskTargetResourceEventBusParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEventBusParamOutput) ToDatahubTaskTargetResourceEventBusParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEventBusParamOutput {
	return o
}

func (o DatahubTaskTargetResourceEventBusParamOutput) ToDatahubTaskTargetResourceEventBusParamPtrOutput() DatahubTaskTargetResourceEventBusParamPtrOutput {
	return o.ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceEventBusParamOutput) ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEventBusParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceEventBusParam) *DatahubTaskTargetResourceEventBusParam {
		return &v
	}).(DatahubTaskTargetResourceEventBusParamPtrOutput)
}

// SCF function name.
func (o DatahubTaskTargetResourceEventBusParamOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEventBusParam) *string { return v.FunctionName }).(pulumi.StringPtrOutput)
}

// SCF namespace.
func (o DatahubTaskTargetResourceEventBusParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEventBusParam) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SCF version and alias.
func (o DatahubTaskTargetResourceEventBusParamOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEventBusParam) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// instance id.
func (o DatahubTaskTargetResourceEventBusParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEventBusParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceEventBusParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEventBusParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// resource type. EB_COS/EB_ES/EB_CLS.
func (o DatahubTaskTargetResourceEventBusParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceEventBusParam) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceEventBusParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceEventBusParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceEventBusParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceEventBusParamPtrOutput) ToDatahubTaskTargetResourceEventBusParamPtrOutput() DatahubTaskTargetResourceEventBusParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEventBusParamPtrOutput) ToDatahubTaskTargetResourceEventBusParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceEventBusParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceEventBusParamPtrOutput) Elem() DatahubTaskTargetResourceEventBusParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) DatahubTaskTargetResourceEventBusParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceEventBusParam
		return ret
	}).(DatahubTaskTargetResourceEventBusParamOutput)
}

// SCF function name.
func (o DatahubTaskTargetResourceEventBusParamPtrOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return v.FunctionName
	}).(pulumi.StringPtrOutput)
}

// SCF namespace.
func (o DatahubTaskTargetResourceEventBusParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SCF version and alias.
func (o DatahubTaskTargetResourceEventBusParamPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// instance id.
func (o DatahubTaskTargetResourceEventBusParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceEventBusParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// resource type. EB_COS/EB_ES/EB_CLS.
func (o DatahubTaskTargetResourceEventBusParamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceEventBusParam) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceKafkaParam struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType *string `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration *bool `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum *int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit *int `pulumi:"qpsLimit"`
	// instance resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName *string `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime *int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []DatahubTaskTargetResourceKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic *string `pulumi:"topic"`
	// Topic id.
	TopicId *string `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping *bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId *int `pulumi:"zoneId"`
}

// DatahubTaskTargetResourceKafkaParamInput is an input type that accepts DatahubTaskTargetResourceKafkaParamArgs and DatahubTaskTargetResourceKafkaParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceKafkaParamInput` via:
//
//	DatahubTaskTargetResourceKafkaParamArgs{...}
type DatahubTaskTargetResourceKafkaParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceKafkaParamOutput() DatahubTaskTargetResourceKafkaParamOutput
	ToDatahubTaskTargetResourceKafkaParamOutputWithContext(context.Context) DatahubTaskTargetResourceKafkaParamOutput
}

type DatahubTaskTargetResourceKafkaParamArgs struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolPtrInput `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntPtrInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntPtrInput `pulumi:"qpsLimit"`
	// instance resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings DatahubTaskTargetResourceKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Topic id.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolPtrInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntPtrInput `pulumi:"zoneId"`
}

func (DatahubTaskTargetResourceKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceKafkaParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceKafkaParamArgs) ToDatahubTaskTargetResourceKafkaParamOutput() DatahubTaskTargetResourceKafkaParamOutput {
	return i.ToDatahubTaskTargetResourceKafkaParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceKafkaParamArgs) ToDatahubTaskTargetResourceKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceKafkaParamOutput)
}

func (i DatahubTaskTargetResourceKafkaParamArgs) ToDatahubTaskTargetResourceKafkaParamPtrOutput() DatahubTaskTargetResourceKafkaParamPtrOutput {
	return i.ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceKafkaParamArgs) ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceKafkaParamOutput).ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceKafkaParamPtrInput is an input type that accepts DatahubTaskTargetResourceKafkaParamArgs, DatahubTaskTargetResourceKafkaParamPtr and DatahubTaskTargetResourceKafkaParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceKafkaParamPtrInput` via:
//
//	        DatahubTaskTargetResourceKafkaParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceKafkaParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceKafkaParamPtrOutput() DatahubTaskTargetResourceKafkaParamPtrOutput
	ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceKafkaParamPtrOutput
}

type datahubTaskTargetResourceKafkaParamPtrType DatahubTaskTargetResourceKafkaParamArgs

func DatahubTaskTargetResourceKafkaParamPtr(v *DatahubTaskTargetResourceKafkaParamArgs) DatahubTaskTargetResourceKafkaParamPtrInput {
	return (*datahubTaskTargetResourceKafkaParamPtrType)(v)
}

func (*datahubTaskTargetResourceKafkaParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceKafkaParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceKafkaParamPtrType) ToDatahubTaskTargetResourceKafkaParamPtrOutput() DatahubTaskTargetResourceKafkaParamPtrOutput {
	return i.ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceKafkaParamPtrType) ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceKafkaParamPtrOutput)
}

type DatahubTaskTargetResourceKafkaParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceKafkaParamOutput) ToDatahubTaskTargetResourceKafkaParamOutput() DatahubTaskTargetResourceKafkaParamOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamOutput) ToDatahubTaskTargetResourceKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamOutput) ToDatahubTaskTargetResourceKafkaParamPtrOutput() DatahubTaskTargetResourceKafkaParamPtrOutput {
	return o.ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceKafkaParamOutput) ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceKafkaParam) *DatahubTaskTargetResourceKafkaParam {
		return &v
	}).(DatahubTaskTargetResourceKafkaParamPtrOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTargetResourceKafkaParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTargetResourceKafkaParamOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *bool { return v.EnableToleration }).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceKafkaParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTargetResourceKafkaParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTargetResourceKafkaParamOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *int { return v.PartitionNum }).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTargetResourceKafkaParamOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *int { return v.QpsLimit }).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTargetResourceKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o DatahubTaskTargetResourceKafkaParamOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTargetResourceKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTargetResourceKafkaParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTargetResourceKafkaParamOutput) TableMappings() DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) []DatahubTaskTargetResourceKafkaParamTableMapping {
		return v.TableMappings
	}).(DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTargetResourceKafkaParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTargetResourceKafkaParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTargetResourceKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTargetResourceKafkaParamOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *bool { return v.UseTableMapping }).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTargetResourceKafkaParamOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParam) *int { return v.ZoneId }).(pulumi.IntPtrOutput)
}

type DatahubTaskTargetResourceKafkaParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceKafkaParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceKafkaParamPtrOutput) ToDatahubTaskTargetResourceKafkaParamPtrOutput() DatahubTaskTargetResourceKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamPtrOutput) ToDatahubTaskTargetResourceKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamPtrOutput) Elem() DatahubTaskTargetResourceKafkaParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) DatahubTaskTargetResourceKafkaParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceKafkaParam
		return ret
	}).(DatahubTaskTargetResourceKafkaParamOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.EnableToleration
	}).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNum
	}).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.QpsLimit
	}).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// instance name.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) TableMappings() DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) []DatahubTaskTargetResourceKafkaParamTableMapping {
		if v == nil {
			return nil
		}
		return v.TableMappings
	}).(DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseTableMapping
	}).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTargetResourceKafkaParamPtrOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTargetResourceKafkaParamTableMapping struct {
	// database name.
	Database string `pulumi:"database"`
	// table name,use, to separate.
	Table string `pulumi:"table"`
	// Topic name.
	Topic string `pulumi:"topic"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
}

// DatahubTaskTargetResourceKafkaParamTableMappingInput is an input type that accepts DatahubTaskTargetResourceKafkaParamTableMappingArgs and DatahubTaskTargetResourceKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceKafkaParamTableMappingInput` via:
//
//	DatahubTaskTargetResourceKafkaParamTableMappingArgs{...}
type DatahubTaskTargetResourceKafkaParamTableMappingInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceKafkaParamTableMappingOutput() DatahubTaskTargetResourceKafkaParamTableMappingOutput
	ToDatahubTaskTargetResourceKafkaParamTableMappingOutputWithContext(context.Context) DatahubTaskTargetResourceKafkaParamTableMappingOutput
}

type DatahubTaskTargetResourceKafkaParamTableMappingArgs struct {
	// database name.
	Database pulumi.StringInput `pulumi:"database"`
	// table name,use, to separate.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DatahubTaskTargetResourceKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourceKafkaParamTableMappingArgs) ToDatahubTaskTargetResourceKafkaParamTableMappingOutput() DatahubTaskTargetResourceKafkaParamTableMappingOutput {
	return i.ToDatahubTaskTargetResourceKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceKafkaParamTableMappingArgs) ToDatahubTaskTargetResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceKafkaParamTableMappingOutput)
}

// DatahubTaskTargetResourceKafkaParamTableMappingArrayInput is an input type that accepts DatahubTaskTargetResourceKafkaParamTableMappingArray and DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceKafkaParamTableMappingArrayInput` via:
//
//	DatahubTaskTargetResourceKafkaParamTableMappingArray{ DatahubTaskTargetResourceKafkaParamTableMappingArgs{...} }
type DatahubTaskTargetResourceKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutput() DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput
	ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutputWithContext(context.Context) DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput
}

type DatahubTaskTargetResourceKafkaParamTableMappingArray []DatahubTaskTargetResourceKafkaParamTableMappingInput

func (DatahubTaskTargetResourceKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourceKafkaParamTableMappingArray) ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutput() DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput {
	return i.ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceKafkaParamTableMappingArray) ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput)
}

type DatahubTaskTargetResourceKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourceKafkaParamTableMappingOutput) ToDatahubTaskTargetResourceKafkaParamTableMappingOutput() DatahubTaskTargetResourceKafkaParamTableMappingOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamTableMappingOutput) ToDatahubTaskTargetResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamTableMappingOutput {
	return o
}

// database name.
func (o DatahubTaskTargetResourceKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// table name,use, to separate.
func (o DatahubTaskTargetResourceKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name.
func (o DatahubTaskTargetResourceKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic ID.
func (o DatahubTaskTargetResourceKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput) ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutput() DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput) ToDatahubTaskTargetResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskTargetResourceKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTargetResourceKafkaParamTableMapping {
		return vs[0].([]DatahubTaskTargetResourceKafkaParamTableMapping)[vs[1].(int)]
	}).(DatahubTaskTargetResourceKafkaParamTableMappingOutput)
}

type DatahubTaskTargetResourceMariaDbParam struct {
	// MariaDB database name, * for all database.
	Database string `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges *string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery *bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix *bool `pulumi:"isTablePrefix"`
	// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns *string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat *string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema *bool `pulumi:"recordWithSchema"`
	// MariaDB connection Id.
	Resource string `pulumi:"resource"`
	// schema_only|initial, default initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// DatahubTaskTargetResourceMariaDbParamInput is an input type that accepts DatahubTaskTargetResourceMariaDbParamArgs and DatahubTaskTargetResourceMariaDbParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMariaDbParamInput` via:
//
//	DatahubTaskTargetResourceMariaDbParamArgs{...}
type DatahubTaskTargetResourceMariaDbParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMariaDbParamOutput() DatahubTaskTargetResourceMariaDbParamOutput
	ToDatahubTaskTargetResourceMariaDbParamOutputWithContext(context.Context) DatahubTaskTargetResourceMariaDbParamOutput
}

type DatahubTaskTargetResourceMariaDbParamArgs struct {
	// MariaDB database name, * for all database.
	Database pulumi.StringInput `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringPtrInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolPtrInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolPtrInput `pulumi:"isTablePrefix"`
	// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringPtrInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolPtrInput `pulumi:"recordWithSchema"`
	// MariaDB connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial, default initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (DatahubTaskTargetResourceMariaDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMariaDbParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceMariaDbParamArgs) ToDatahubTaskTargetResourceMariaDbParamOutput() DatahubTaskTargetResourceMariaDbParamOutput {
	return i.ToDatahubTaskTargetResourceMariaDbParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMariaDbParamArgs) ToDatahubTaskTargetResourceMariaDbParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMariaDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMariaDbParamOutput)
}

func (i DatahubTaskTargetResourceMariaDbParamArgs) ToDatahubTaskTargetResourceMariaDbParamPtrOutput() DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return i.ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMariaDbParamArgs) ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMariaDbParamOutput).ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceMariaDbParamPtrInput is an input type that accepts DatahubTaskTargetResourceMariaDbParamArgs, DatahubTaskTargetResourceMariaDbParamPtr and DatahubTaskTargetResourceMariaDbParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMariaDbParamPtrInput` via:
//
//	        DatahubTaskTargetResourceMariaDbParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceMariaDbParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMariaDbParamPtrOutput() DatahubTaskTargetResourceMariaDbParamPtrOutput
	ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceMariaDbParamPtrOutput
}

type datahubTaskTargetResourceMariaDbParamPtrType DatahubTaskTargetResourceMariaDbParamArgs

func DatahubTaskTargetResourceMariaDbParamPtr(v *DatahubTaskTargetResourceMariaDbParamArgs) DatahubTaskTargetResourceMariaDbParamPtrInput {
	return (*datahubTaskTargetResourceMariaDbParamPtrType)(v)
}

func (*datahubTaskTargetResourceMariaDbParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMariaDbParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceMariaDbParamPtrType) ToDatahubTaskTargetResourceMariaDbParamPtrOutput() DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return i.ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceMariaDbParamPtrType) ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMariaDbParamPtrOutput)
}

type DatahubTaskTargetResourceMariaDbParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMariaDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMariaDbParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMariaDbParamOutput) ToDatahubTaskTargetResourceMariaDbParamOutput() DatahubTaskTargetResourceMariaDbParamOutput {
	return o
}

func (o DatahubTaskTargetResourceMariaDbParamOutput) ToDatahubTaskTargetResourceMariaDbParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMariaDbParamOutput {
	return o
}

func (o DatahubTaskTargetResourceMariaDbParamOutput) ToDatahubTaskTargetResourceMariaDbParamPtrOutput() DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return o.ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceMariaDbParamOutput) ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceMariaDbParam) *DatahubTaskTargetResourceMariaDbParam {
		return &v
	}).(DatahubTaskTargetResourceMariaDbParamPtrOutput)
}

// MariaDB database name, * for all database.
func (o DatahubTaskTargetResourceMariaDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskTargetResourceMariaDbParamOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *string { return v.IncludeContentChanges }).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskTargetResourceMariaDbParamOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *bool { return v.IncludeQuery }).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskTargetResourceMariaDbParamOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *bool { return v.IsTablePrefix }).(pulumi.BoolPtrOutput)
}

// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskTargetResourceMariaDbParamOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *string { return v.KeyColumns }).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskTargetResourceMariaDbParamOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskTargetResourceMariaDbParamOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *bool { return v.RecordWithSchema }).(pulumi.BoolPtrOutput)
}

// MariaDB connection Id.
func (o DatahubTaskTargetResourceMariaDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial, default initial.
func (o DatahubTaskTargetResourceMariaDbParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskTargetResourceMariaDbParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMariaDbParam) string { return v.Table }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceMariaDbParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMariaDbParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMariaDbParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) ToDatahubTaskTargetResourceMariaDbParamPtrOutput() DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) ToDatahubTaskTargetResourceMariaDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMariaDbParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) Elem() DatahubTaskTargetResourceMariaDbParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) DatahubTaskTargetResourceMariaDbParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceMariaDbParam
		return ret
	}).(DatahubTaskTargetResourceMariaDbParamOutput)
}

// MariaDB database name, * for all database.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.IncludeContentChanges
	}).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQuery
	}).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTablePrefix
	}).(pulumi.BoolPtrOutput)
}

// Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyColumns
	}).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.RecordWithSchema
	}).(pulumi.BoolPtrOutput)
}

// MariaDB connection Id.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// schema_only|initial, default initial.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskTargetResourceMariaDbParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMariaDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceMongoDbParam struct {
	// MongoDB collection.
	Collection string `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting bool `pulumi:"copyExisting"`
	// MongoDB database name.
	Database string `pulumi:"database"`
	// Mongo DB connection ip.
	Ip *string `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent *string `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password *string `pulumi:"password"`
	// aggregation pipeline.
	Pipeline *string `pulumi:"pipeline"`
	// MongoDB connection port.
	Port *int `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference *string `pulumi:"readPreference"`
	// resource id.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt *bool `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName *string `pulumi:"userName"`
}

// DatahubTaskTargetResourceMongoDbParamInput is an input type that accepts DatahubTaskTargetResourceMongoDbParamArgs and DatahubTaskTargetResourceMongoDbParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMongoDbParamInput` via:
//
//	DatahubTaskTargetResourceMongoDbParamArgs{...}
type DatahubTaskTargetResourceMongoDbParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMongoDbParamOutput() DatahubTaskTargetResourceMongoDbParamOutput
	ToDatahubTaskTargetResourceMongoDbParamOutputWithContext(context.Context) DatahubTaskTargetResourceMongoDbParamOutput
}

type DatahubTaskTargetResourceMongoDbParamArgs struct {
	// MongoDB collection.
	Collection pulumi.StringInput `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting pulumi.BoolInput `pulumi:"copyExisting"`
	// MongoDB database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Mongo DB connection ip.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent pulumi.StringPtrInput `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// aggregation pipeline.
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
	// MongoDB connection port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
	// resource id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolPtrInput `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DatahubTaskTargetResourceMongoDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMongoDbParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceMongoDbParamArgs) ToDatahubTaskTargetResourceMongoDbParamOutput() DatahubTaskTargetResourceMongoDbParamOutput {
	return i.ToDatahubTaskTargetResourceMongoDbParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMongoDbParamArgs) ToDatahubTaskTargetResourceMongoDbParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMongoDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMongoDbParamOutput)
}

func (i DatahubTaskTargetResourceMongoDbParamArgs) ToDatahubTaskTargetResourceMongoDbParamPtrOutput() DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return i.ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMongoDbParamArgs) ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMongoDbParamOutput).ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceMongoDbParamPtrInput is an input type that accepts DatahubTaskTargetResourceMongoDbParamArgs, DatahubTaskTargetResourceMongoDbParamPtr and DatahubTaskTargetResourceMongoDbParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMongoDbParamPtrInput` via:
//
//	        DatahubTaskTargetResourceMongoDbParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceMongoDbParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMongoDbParamPtrOutput() DatahubTaskTargetResourceMongoDbParamPtrOutput
	ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceMongoDbParamPtrOutput
}

type datahubTaskTargetResourceMongoDbParamPtrType DatahubTaskTargetResourceMongoDbParamArgs

func DatahubTaskTargetResourceMongoDbParamPtr(v *DatahubTaskTargetResourceMongoDbParamArgs) DatahubTaskTargetResourceMongoDbParamPtrInput {
	return (*datahubTaskTargetResourceMongoDbParamPtrType)(v)
}

func (*datahubTaskTargetResourceMongoDbParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMongoDbParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceMongoDbParamPtrType) ToDatahubTaskTargetResourceMongoDbParamPtrOutput() DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return i.ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceMongoDbParamPtrType) ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMongoDbParamPtrOutput)
}

type DatahubTaskTargetResourceMongoDbParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMongoDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMongoDbParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMongoDbParamOutput) ToDatahubTaskTargetResourceMongoDbParamOutput() DatahubTaskTargetResourceMongoDbParamOutput {
	return o
}

func (o DatahubTaskTargetResourceMongoDbParamOutput) ToDatahubTaskTargetResourceMongoDbParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMongoDbParamOutput {
	return o
}

func (o DatahubTaskTargetResourceMongoDbParamOutput) ToDatahubTaskTargetResourceMongoDbParamPtrOutput() DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return o.ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceMongoDbParamOutput) ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceMongoDbParam) *DatahubTaskTargetResourceMongoDbParam {
		return &v
	}).(DatahubTaskTargetResourceMongoDbParamPtrOutput)
}

// MongoDB collection.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) string { return v.Collection }).(pulumi.StringOutput)
}

// Whether to copy the stock data, the default parameter is true.
func (o DatahubTaskTargetResourceMongoDbParamOutput) CopyExisting() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) bool { return v.CopyExisting }).(pulumi.BoolOutput)
}

// MongoDB database name.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// Mongo DB connection ip.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
func (o DatahubTaskTargetResourceMongoDbParamOutput) ListeningEvent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *string { return v.ListeningEvent }).(pulumi.StringPtrOutput)
}

// MongoDB database password.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// aggregation pipeline.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *string { return v.Pipeline }).(pulumi.StringPtrOutput)
}

// MongoDB connection port.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Master-slave priority, default master node.
func (o DatahubTaskTargetResourceMongoDbParamOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskTargetResourceMongoDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceMongoDbParamOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *bool { return v.SelfBuilt }).(pulumi.BoolPtrOutput)
}

// MongoDB database user name.
func (o DatahubTaskTargetResourceMongoDbParamOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMongoDbParam) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceMongoDbParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMongoDbParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMongoDbParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) ToDatahubTaskTargetResourceMongoDbParamPtrOutput() DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) ToDatahubTaskTargetResourceMongoDbParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMongoDbParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Elem() DatahubTaskTargetResourceMongoDbParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) DatahubTaskTargetResourceMongoDbParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceMongoDbParam
		return ret
	}).(DatahubTaskTargetResourceMongoDbParamOutput)
}

// MongoDB collection.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Collection
	}).(pulumi.StringPtrOutput)
}

// Whether to copy the stock data, the default parameter is true.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) CopyExisting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *bool {
		if v == nil {
			return nil
		}
		return &v.CopyExisting
	}).(pulumi.BoolPtrOutput)
}

// MongoDB database name.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Mongo DB connection ip.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) ListeningEvent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.ListeningEvent
	}).(pulumi.StringPtrOutput)
}

// MongoDB database password.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// aggregation pipeline.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.Pipeline
	}).(pulumi.StringPtrOutput)
}

// MongoDB connection port.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Master-slave priority, default master node.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

// resource id.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Whether it is a self-built cluster.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *bool {
		if v == nil {
			return nil
		}
		return v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// MongoDB database user name.
func (o DatahubTaskTargetResourceMongoDbParamPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMongoDbParam) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceMySqlParam struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn *string `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode *string `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode *string `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource *string `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom *string `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode *string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField *string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// MySQL database name, * is the whole database.
	Database string `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic *string `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls *DatahubTaskTargetResourceMySqlParamDropCls `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges *string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery *bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix *bool `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
	IsTableRegular *bool `pulumi:"isTableRegular"`
	// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns *string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat *string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema *bool `pulumi:"recordWithSchema"`
	// MySQL connection Id.
	Resource string `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase *string `pulumi:"signalDatabase"`
	// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
	Table string `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex *string `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement *string `pulumi:"topicReplacement"`
}

// DatahubTaskTargetResourceMySqlParamInput is an input type that accepts DatahubTaskTargetResourceMySqlParamArgs and DatahubTaskTargetResourceMySqlParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMySqlParamInput` via:
//
//	DatahubTaskTargetResourceMySqlParamArgs{...}
type DatahubTaskTargetResourceMySqlParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMySqlParamOutput() DatahubTaskTargetResourceMySqlParamOutput
	ToDatahubTaskTargetResourceMySqlParamOutputWithContext(context.Context) DatahubTaskTargetResourceMySqlParamOutput
}

type DatahubTaskTargetResourceMySqlParamArgs struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn pulumi.StringPtrInput `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode pulumi.StringPtrInput `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode pulumi.StringPtrInput `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource pulumi.StringPtrInput `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom pulumi.StringPtrInput `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringPtrInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringPtrInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// MySQL database name, * is the whole database.
	Database pulumi.StringInput `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic pulumi.StringPtrInput `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls DatahubTaskTargetResourceMySqlParamDropClsPtrInput `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringPtrInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolPtrInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolPtrInput `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
	IsTableRegular pulumi.BoolPtrInput `pulumi:"isTableRegular"`
	// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringPtrInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolPtrInput `pulumi:"recordWithSchema"`
	// MySQL connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase pulumi.StringPtrInput `pulumi:"signalDatabase"`
	// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex pulumi.StringPtrInput `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement pulumi.StringPtrInput `pulumi:"topicReplacement"`
}

func (DatahubTaskTargetResourceMySqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMySqlParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceMySqlParamArgs) ToDatahubTaskTargetResourceMySqlParamOutput() DatahubTaskTargetResourceMySqlParamOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMySqlParamArgs) ToDatahubTaskTargetResourceMySqlParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamOutput)
}

func (i DatahubTaskTargetResourceMySqlParamArgs) ToDatahubTaskTargetResourceMySqlParamPtrOutput() DatahubTaskTargetResourceMySqlParamPtrOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMySqlParamArgs) ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamOutput).ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceMySqlParamPtrInput is an input type that accepts DatahubTaskTargetResourceMySqlParamArgs, DatahubTaskTargetResourceMySqlParamPtr and DatahubTaskTargetResourceMySqlParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMySqlParamPtrInput` via:
//
//	        DatahubTaskTargetResourceMySqlParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceMySqlParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMySqlParamPtrOutput() DatahubTaskTargetResourceMySqlParamPtrOutput
	ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceMySqlParamPtrOutput
}

type datahubTaskTargetResourceMySqlParamPtrType DatahubTaskTargetResourceMySqlParamArgs

func DatahubTaskTargetResourceMySqlParamPtr(v *DatahubTaskTargetResourceMySqlParamArgs) DatahubTaskTargetResourceMySqlParamPtrInput {
	return (*datahubTaskTargetResourceMySqlParamPtrType)(v)
}

func (*datahubTaskTargetResourceMySqlParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMySqlParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceMySqlParamPtrType) ToDatahubTaskTargetResourceMySqlParamPtrOutput() DatahubTaskTargetResourceMySqlParamPtrOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceMySqlParamPtrType) ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamPtrOutput)
}

type DatahubTaskTargetResourceMySqlParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMySqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMySqlParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMySqlParamOutput) ToDatahubTaskTargetResourceMySqlParamOutput() DatahubTaskTargetResourceMySqlParamOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamOutput) ToDatahubTaskTargetResourceMySqlParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamOutput) ToDatahubTaskTargetResourceMySqlParamPtrOutput() DatahubTaskTargetResourceMySqlParamPtrOutput {
	return o.ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceMySqlParamOutput) ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceMySqlParam) *DatahubTaskTargetResourceMySqlParam {
		return &v
	}).(DatahubTaskTargetResourceMySqlParamPtrOutput)
}

// the name of the column to be monitored.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataSourceIncrementColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataSourceIncrementColumn }).(pulumi.StringPtrOutput)
}

// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataSourceIncrementMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataSourceIncrementMode }).(pulumi.StringPtrOutput)
}

// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataSourceMonitorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataSourceMonitorMode }).(pulumi.StringPtrOutput)
}

// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataSourceMonitorResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataSourceMonitorResource }).(pulumi.StringPtrOutput)
}

// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataSourceStartFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataSourceStartFrom }).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataTargetInsertMode }).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DataTargetPrimaryKeyField }).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskTargetResourceMySqlParamOutput) DataTargetRecordMappings() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) []DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

// MySQL database name, * is the whole database.
func (o DatahubTaskTargetResourceMySqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
func (o DatahubTaskTargetResourceMySqlParamOutput) DdlTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.DdlTopic }).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskTargetResourceMySqlParamOutput) DropCls() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *DatahubTaskTargetResourceMySqlParamDropCls {
		return v.DropCls
	}).(DatahubTaskTargetResourceMySqlParamDropClsPtrOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskTargetResourceMySqlParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskTargetResourceMySqlParamOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.IncludeContentChanges }).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskTargetResourceMySqlParamOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *bool { return v.IncludeQuery }).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskTargetResourceMySqlParamOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *bool { return v.IsTablePrefix }).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
func (o DatahubTaskTargetResourceMySqlParamOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *bool { return v.IsTableRegular }).(pulumi.BoolPtrOutput)
}

// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskTargetResourceMySqlParamOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.KeyColumns }).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskTargetResourceMySqlParamOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskTargetResourceMySqlParamOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *bool { return v.RecordWithSchema }).(pulumi.BoolPtrOutput)
}

// MySQL connection Id.
func (o DatahubTaskTargetResourceMySqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// database name of signal table.
func (o DatahubTaskTargetResourceMySqlParamOutput) SignalDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.SignalDatabase }).(pulumi.StringPtrOutput)
}

// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
func (o DatahubTaskTargetResourceMySqlParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
func (o DatahubTaskTargetResourceMySqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) string { return v.Table }).(pulumi.StringOutput)
}

// Regular expression for routing events to specific topics, defaults to (.*).
func (o DatahubTaskTargetResourceMySqlParamOutput) TopicRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.TopicRegex }).(pulumi.StringPtrOutput)
}

// TopicRegex, $1, $2.
func (o DatahubTaskTargetResourceMySqlParamOutput) TopicReplacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParam) *string { return v.TopicReplacement }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceMySqlParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMySqlParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMySqlParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMySqlParamPtrOutput) ToDatahubTaskTargetResourceMySqlParamPtrOutput() DatahubTaskTargetResourceMySqlParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamPtrOutput) ToDatahubTaskTargetResourceMySqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamPtrOutput) Elem() DatahubTaskTargetResourceMySqlParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) DatahubTaskTargetResourceMySqlParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceMySqlParam
		return ret
	}).(DatahubTaskTargetResourceMySqlParamOutput)
}

// the name of the column to be monitored.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataSourceIncrementColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceIncrementColumn
	}).(pulumi.StringPtrOutput)
}

// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataSourceIncrementMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceIncrementMode
	}).(pulumi.StringPtrOutput)
}

// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataSourceMonitorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceMonitorMode
	}).(pulumi.StringPtrOutput)
}

// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataSourceMonitorResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceMonitorResource
	}).(pulumi.StringPtrOutput)
}

// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataSourceStartFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataSourceStartFrom
	}).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetInsertMode
	}).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetPrimaryKeyField
	}).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DataTargetRecordMappings() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) []DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping {
		if v == nil {
			return nil
		}
		return v.DataTargetRecordMappings
	}).(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

// MySQL database name, * is the whole database.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DdlTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DdlTopic
	}).(pulumi.StringPtrOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DropCls() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *DatahubTaskTargetResourceMySqlParamDropCls {
		if v == nil {
			return nil
		}
		return v.DropCls
	}).(DatahubTaskTargetResourceMySqlParamDropClsPtrOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) IncludeContentChanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.IncludeContentChanges
	}).(pulumi.StringPtrOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQuery
	}).(pulumi.BoolPtrOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) IsTablePrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTablePrefix
	}).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTableRegular
	}).(pulumi.BoolPtrOutput)
}

// Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyColumns
	}).(pulumi.StringPtrOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.RecordWithSchema
	}).(pulumi.BoolPtrOutput)
}

// MySQL connection Id.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// database name of signal table.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) SignalDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.SignalDatabase
	}).(pulumi.StringPtrOutput)
}

// whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// Regular expression for routing events to specific topics, defaults to (.*).
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) TopicRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicRegex
	}).(pulumi.StringPtrOutput)
}

// TopicRegex, $1, $2.
func (o DatahubTaskTargetResourceMySqlParamPtrOutput) TopicReplacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicReplacement
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull *bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement *bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName *string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize *string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits *string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue *string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo *string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey *string `pulumi:"jsonKey"`
	// message type.
	Type *string `pulumi:"type"`
}

// DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingInput is an input type that accepts DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs and DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingInput` via:
//
//	DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs{...}
type DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput
	ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Context) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput
}

type DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolPtrInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolPtrInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringPtrInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringPtrInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringPtrInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringPtrInput `pulumi:"jsonKey"`
	// message type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput)
}

// DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayInput is an input type that accepts DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray and DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayInput` via:
//
//	DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray{ DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs{...} }
type DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput
	ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput
}

type DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray []DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingInput

func (DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

type DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *bool { return v.AllowNull }).(pulumi.BoolPtrOutput)
}

// Whether it is an auto-increment column.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *bool { return v.AutoIncrement }).(pulumi.BoolPtrOutput)
}

// Column Name.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// current ColumnSize.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.ColumnSize }).(pulumi.StringPtrOutput)
}

// current Column DecimalDigits.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.DecimalDigits }).(pulumi.StringPtrOutput)
}

// Database table default parameters.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Database table extra fields.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.ExtraInfo }).(pulumi.StringPtrOutput)
}

// The key name of the message.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.JsonKey }).(pulumi.StringPtrOutput)
}

// message type.
func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput() DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping {
		return vs[0].([]DatahubTaskTargetResourceMySqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput)
}

type DatahubTaskTargetResourceMySqlParamDropCls struct {
	// cls LogSet id.
	DropClsLogSet *string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin *string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion *string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId *string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls *bool `pulumi:"dropInvalidMessageToCls"`
}

// DatahubTaskTargetResourceMySqlParamDropClsInput is an input type that accepts DatahubTaskTargetResourceMySqlParamDropClsArgs and DatahubTaskTargetResourceMySqlParamDropClsOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMySqlParamDropClsInput` via:
//
//	DatahubTaskTargetResourceMySqlParamDropClsArgs{...}
type DatahubTaskTargetResourceMySqlParamDropClsInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMySqlParamDropClsOutput() DatahubTaskTargetResourceMySqlParamDropClsOutput
	ToDatahubTaskTargetResourceMySqlParamDropClsOutputWithContext(context.Context) DatahubTaskTargetResourceMySqlParamDropClsOutput
}

type DatahubTaskTargetResourceMySqlParamDropClsArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringPtrInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringPtrInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringPtrInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringPtrInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolPtrInput `pulumi:"dropInvalidMessageToCls"`
}

func (DatahubTaskTargetResourceMySqlParamDropClsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDropCls)(nil)).Elem()
}

func (i DatahubTaskTargetResourceMySqlParamDropClsArgs) ToDatahubTaskTargetResourceMySqlParamDropClsOutput() DatahubTaskTargetResourceMySqlParamDropClsOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamDropClsOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMySqlParamDropClsArgs) ToDatahubTaskTargetResourceMySqlParamDropClsOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDropClsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamDropClsOutput)
}

func (i DatahubTaskTargetResourceMySqlParamDropClsArgs) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutput() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceMySqlParamDropClsArgs) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamDropClsOutput).ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceMySqlParamDropClsPtrInput is an input type that accepts DatahubTaskTargetResourceMySqlParamDropClsArgs, DatahubTaskTargetResourceMySqlParamDropClsPtr and DatahubTaskTargetResourceMySqlParamDropClsPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceMySqlParamDropClsPtrInput` via:
//
//	        DatahubTaskTargetResourceMySqlParamDropClsArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceMySqlParamDropClsPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutput() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput
	ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(context.Context) DatahubTaskTargetResourceMySqlParamDropClsPtrOutput
}

type datahubTaskTargetResourceMySqlParamDropClsPtrType DatahubTaskTargetResourceMySqlParamDropClsArgs

func DatahubTaskTargetResourceMySqlParamDropClsPtr(v *DatahubTaskTargetResourceMySqlParamDropClsArgs) DatahubTaskTargetResourceMySqlParamDropClsPtrInput {
	return (*datahubTaskTargetResourceMySqlParamDropClsPtrType)(v)
}

func (*datahubTaskTargetResourceMySqlParamDropClsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMySqlParamDropCls)(nil)).Elem()
}

func (i *datahubTaskTargetResourceMySqlParamDropClsPtrType) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutput() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return i.ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceMySqlParamDropClsPtrType) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceMySqlParamDropClsPtrOutput)
}

type DatahubTaskTargetResourceMySqlParamDropClsOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMySqlParamDropClsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDropCls)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) ToDatahubTaskTargetResourceMySqlParamDropClsOutput() DatahubTaskTargetResourceMySqlParamDropClsOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) ToDatahubTaskTargetResourceMySqlParamDropClsOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDropClsOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutput() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return o.ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceMySqlParamDropCls) *DatahubTaskTargetResourceMySqlParamDropCls {
		return &v
	}).(DatahubTaskTargetResourceMySqlParamDropClsPtrOutput)
}

// cls LogSet id.
func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDropCls) *string { return v.DropClsLogSet }).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDropCls) *string { return v.DropClsOwneruin }).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDropCls) *string { return v.DropClsRegion }).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDropCls) *string { return v.DropClsTopicId }).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskTargetResourceMySqlParamDropClsOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceMySqlParamDropCls) *bool { return v.DropInvalidMessageToCls }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceMySqlParamDropClsPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceMySqlParamDropCls)(nil)).Elem()
}

func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutput() DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) ToDatahubTaskTargetResourceMySqlParamDropClsPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceMySqlParamDropClsPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) Elem() DatahubTaskTargetResourceMySqlParamDropClsOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParamDropCls) DatahubTaskTargetResourceMySqlParamDropCls {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceMySqlParamDropCls
		return ret
	}).(DatahubTaskTargetResourceMySqlParamDropClsOutput)
}

// cls LogSet id.
func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) DropClsLogSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsLogSet
	}).(pulumi.StringPtrOutput)
}

// account.
func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) DropClsOwneruin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsOwneruin
	}).(pulumi.StringPtrOutput)
}

// The region where the cls is delivered.
func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) DropClsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsRegion
	}).(pulumi.StringPtrOutput)
}

// cls topic.
func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) DropClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParamDropCls) *string {
		if v == nil {
			return nil
		}
		return v.DropClsTopicId
	}).(pulumi.StringPtrOutput)
}

// Whether to deliver to cls.
func (o DatahubTaskTargetResourceMySqlParamDropClsPtrOutput) DropInvalidMessageToCls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceMySqlParamDropCls) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourcePostgreSqlParam struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat *string `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode *string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField *string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// PostgreSQL database name.
	Database string `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage *bool `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular *bool `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns *string `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName string `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema *bool `pulumi:"recordWithSchema"`
	// PostgreSQL connection Id.
	Resource string `pulumi:"resource"`
	// never|initial, default initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
	Table string `pulumi:"table"`
}

// DatahubTaskTargetResourcePostgreSqlParamInput is an input type that accepts DatahubTaskTargetResourcePostgreSqlParamArgs and DatahubTaskTargetResourcePostgreSqlParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourcePostgreSqlParamInput` via:
//
//	DatahubTaskTargetResourcePostgreSqlParamArgs{...}
type DatahubTaskTargetResourcePostgreSqlParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourcePostgreSqlParamOutput() DatahubTaskTargetResourcePostgreSqlParamOutput
	ToDatahubTaskTargetResourcePostgreSqlParamOutputWithContext(context.Context) DatahubTaskTargetResourcePostgreSqlParamOutput
}

type DatahubTaskTargetResourcePostgreSqlParamArgs struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat pulumi.StringPtrInput `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringPtrInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringPtrInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// PostgreSQL database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolPtrInput `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular pulumi.BoolPtrInput `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringPtrInput `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName pulumi.StringInput `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolPtrInput `pulumi:"recordWithSchema"`
	// PostgreSQL connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// never|initial, default initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (DatahubTaskTargetResourcePostgreSqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourcePostgreSqlParamArgs) ToDatahubTaskTargetResourcePostgreSqlParamOutput() DatahubTaskTargetResourcePostgreSqlParamOutput {
	return i.ToDatahubTaskTargetResourcePostgreSqlParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourcePostgreSqlParamArgs) ToDatahubTaskTargetResourcePostgreSqlParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourcePostgreSqlParamOutput)
}

func (i DatahubTaskTargetResourcePostgreSqlParamArgs) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutput() DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return i.ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourcePostgreSqlParamArgs) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourcePostgreSqlParamOutput).ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourcePostgreSqlParamPtrInput is an input type that accepts DatahubTaskTargetResourcePostgreSqlParamArgs, DatahubTaskTargetResourcePostgreSqlParamPtr and DatahubTaskTargetResourcePostgreSqlParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourcePostgreSqlParamPtrInput` via:
//
//	        DatahubTaskTargetResourcePostgreSqlParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourcePostgreSqlParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourcePostgreSqlParamPtrOutput() DatahubTaskTargetResourcePostgreSqlParamPtrOutput
	ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourcePostgreSqlParamPtrOutput
}

type datahubTaskTargetResourcePostgreSqlParamPtrType DatahubTaskTargetResourcePostgreSqlParamArgs

func DatahubTaskTargetResourcePostgreSqlParamPtr(v *DatahubTaskTargetResourcePostgreSqlParamArgs) DatahubTaskTargetResourcePostgreSqlParamPtrInput {
	return (*datahubTaskTargetResourcePostgreSqlParamPtrType)(v)
}

func (*datahubTaskTargetResourcePostgreSqlParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourcePostgreSqlParamPtrType) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutput() DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return i.ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourcePostgreSqlParamPtrType) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourcePostgreSqlParamPtrOutput)
}

type DatahubTaskTargetResourcePostgreSqlParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourcePostgreSqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourcePostgreSqlParamOutput) ToDatahubTaskTargetResourcePostgreSqlParamOutput() DatahubTaskTargetResourcePostgreSqlParamOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamOutput) ToDatahubTaskTargetResourcePostgreSqlParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamOutput) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutput() DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return o.ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourcePostgreSqlParamOutput) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourcePostgreSqlParam) *DatahubTaskTargetResourcePostgreSqlParam {
		return &v
	}).(DatahubTaskTargetResourcePostgreSqlParamPtrOutput)
}

// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *string { return v.DataFormat }).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *string { return v.DataTargetInsertMode }).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *string { return v.DataTargetPrimaryKeyField }).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) DataTargetRecordMappings() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) []DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

// PostgreSQL database name.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *bool { return v.DropInvalidMessage }).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *bool { return v.IsTableRegular }).(pulumi.BoolPtrOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *string { return v.KeyColumns }).(pulumi.StringPtrOutput)
}

// (decoderbufs/pgoutput), default decoderbufs.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) string { return v.PluginName }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *bool { return v.RecordWithSchema }).(pulumi.BoolPtrOutput)
}

// PostgreSQL connection Id.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// never|initial, default initial.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
func (o DatahubTaskTargetResourcePostgreSqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParam) string { return v.Table }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourcePostgreSqlParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourcePostgreSqlParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutput() DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) ToDatahubTaskTargetResourcePostgreSqlParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) Elem() DatahubTaskTargetResourcePostgreSqlParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) DatahubTaskTargetResourcePostgreSqlParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourcePostgreSqlParam
		return ret
	}).(DatahubTaskTargetResourcePostgreSqlParamOutput)
}

// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) DataTargetInsertMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetInsertMode
	}).(pulumi.StringPtrOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) DataTargetPrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.DataTargetPrimaryKeyField
	}).(pulumi.StringPtrOutput)
}

// Mapping relationship between tables and messages.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) DataTargetRecordMappings() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) []DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping {
		if v == nil {
			return nil
		}
		return v.DataTargetRecordMappings
	}).(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

// PostgreSQL database name.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) DropInvalidMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.DropInvalidMessage
	}).(pulumi.BoolPtrOutput)
}

// Whether the input table is a regular expression.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) IsTableRegular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsTableRegular
	}).(pulumi.BoolPtrOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) KeyColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyColumns
	}).(pulumi.StringPtrOutput)
}

// (decoderbufs/pgoutput), default decoderbufs.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) PluginName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.PluginName
	}).(pulumi.StringPtrOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) RecordWithSchema() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *bool {
		if v == nil {
			return nil
		}
		return v.RecordWithSchema
	}).(pulumi.BoolPtrOutput)
}

// PostgreSQL connection Id.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// never|initial, default initial.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
func (o DatahubTaskTargetResourcePostgreSqlParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourcePostgreSqlParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull *bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement *bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName *string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize *string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits *string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue *string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo *string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey *string `pulumi:"jsonKey"`
	// message type.
	Type *string `pulumi:"type"`
}

// DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingInput is an input type that accepts DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs and DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingInput` via:
//
//	DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs{...}
type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput
	ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Context) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput
}

type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolPtrInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolPtrInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringPtrInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringPtrInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringPtrInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringPtrInput `pulumi:"jsonKey"`
	// message type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return i.ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

// DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput is an input type that accepts DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray and DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput` via:
//
//	DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray{ DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs{...} }
type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
	ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
}

type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray []DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingInput

func (DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return i.ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *bool { return v.AllowNull }).(pulumi.BoolPtrOutput)
}

// Whether it is an auto-increment column.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *bool { return v.AutoIncrement }).(pulumi.BoolPtrOutput)
}

// Column Name.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// current ColumnSize.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.ColumnSize }).(pulumi.StringPtrOutput)
}

// current Column DecimalDigits.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string {
		return v.DecimalDigits
	}).(pulumi.StringPtrOutput)
}

// Database table default parameters.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Database table extra fields.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.ExtraInfo }).(pulumi.StringPtrOutput)
}

// The key name of the message.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.JsonKey }).(pulumi.StringPtrOutput)
}

// message type.
func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping {
		return vs[0].([]DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

type DatahubTaskTargetResourceScfParam struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize *int `pulumi:"batchSize"`
	// SCF function name.
	FunctionName string `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries *int `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace *string `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier *string `pulumi:"qualifier"`
}

// DatahubTaskTargetResourceScfParamInput is an input type that accepts DatahubTaskTargetResourceScfParamArgs and DatahubTaskTargetResourceScfParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceScfParamInput` via:
//
//	DatahubTaskTargetResourceScfParamArgs{...}
type DatahubTaskTargetResourceScfParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceScfParamOutput() DatahubTaskTargetResourceScfParamOutput
	ToDatahubTaskTargetResourceScfParamOutputWithContext(context.Context) DatahubTaskTargetResourceScfParamOutput
}

type DatahubTaskTargetResourceScfParamArgs struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// SCF function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
}

func (DatahubTaskTargetResourceScfParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceScfParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceScfParamArgs) ToDatahubTaskTargetResourceScfParamOutput() DatahubTaskTargetResourceScfParamOutput {
	return i.ToDatahubTaskTargetResourceScfParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceScfParamArgs) ToDatahubTaskTargetResourceScfParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceScfParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceScfParamOutput)
}

func (i DatahubTaskTargetResourceScfParamArgs) ToDatahubTaskTargetResourceScfParamPtrOutput() DatahubTaskTargetResourceScfParamPtrOutput {
	return i.ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceScfParamArgs) ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceScfParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceScfParamOutput).ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceScfParamPtrInput is an input type that accepts DatahubTaskTargetResourceScfParamArgs, DatahubTaskTargetResourceScfParamPtr and DatahubTaskTargetResourceScfParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceScfParamPtrInput` via:
//
//	        DatahubTaskTargetResourceScfParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceScfParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceScfParamPtrOutput() DatahubTaskTargetResourceScfParamPtrOutput
	ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceScfParamPtrOutput
}

type datahubTaskTargetResourceScfParamPtrType DatahubTaskTargetResourceScfParamArgs

func DatahubTaskTargetResourceScfParamPtr(v *DatahubTaskTargetResourceScfParamArgs) DatahubTaskTargetResourceScfParamPtrInput {
	return (*datahubTaskTargetResourceScfParamPtrType)(v)
}

func (*datahubTaskTargetResourceScfParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceScfParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceScfParamPtrType) ToDatahubTaskTargetResourceScfParamPtrOutput() DatahubTaskTargetResourceScfParamPtrOutput {
	return i.ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceScfParamPtrType) ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceScfParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceScfParamPtrOutput)
}

type DatahubTaskTargetResourceScfParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceScfParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceScfParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceScfParamOutput) ToDatahubTaskTargetResourceScfParamOutput() DatahubTaskTargetResourceScfParamOutput {
	return o
}

func (o DatahubTaskTargetResourceScfParamOutput) ToDatahubTaskTargetResourceScfParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceScfParamOutput {
	return o
}

func (o DatahubTaskTargetResourceScfParamOutput) ToDatahubTaskTargetResourceScfParamPtrOutput() DatahubTaskTargetResourceScfParamPtrOutput {
	return o.ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceScfParamOutput) ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceScfParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceScfParam) *DatahubTaskTargetResourceScfParam {
		return &v
	}).(DatahubTaskTargetResourceScfParamPtrOutput)
}

// The maximum number of messages sent in each batch, the default is 1000.
func (o DatahubTaskTargetResourceScfParamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceScfParam) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// SCF function name.
func (o DatahubTaskTargetResourceScfParamOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceScfParam) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The number of retries after the SCF call fails, the default is 5.
func (o DatahubTaskTargetResourceScfParamOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceScfParam) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// SCF cloud function namespace, the default is default.
func (o DatahubTaskTargetResourceScfParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceScfParam) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o DatahubTaskTargetResourceScfParamOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceScfParam) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceScfParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceScfParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceScfParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceScfParamPtrOutput) ToDatahubTaskTargetResourceScfParamPtrOutput() DatahubTaskTargetResourceScfParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceScfParamPtrOutput) ToDatahubTaskTargetResourceScfParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceScfParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceScfParamPtrOutput) Elem() DatahubTaskTargetResourceScfParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceScfParam) DatahubTaskTargetResourceScfParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceScfParam
		return ret
	}).(DatahubTaskTargetResourceScfParamOutput)
}

// The maximum number of messages sent in each batch, the default is 1000.
func (o DatahubTaskTargetResourceScfParamPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceScfParam) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// SCF function name.
func (o DatahubTaskTargetResourceScfParamPtrOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceScfParam) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionName
	}).(pulumi.StringPtrOutput)
}

// The number of retries after the SCF call fails, the default is 5.
func (o DatahubTaskTargetResourceScfParamPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceScfParam) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// SCF cloud function namespace, the default is default.
func (o DatahubTaskTargetResourceScfParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceScfParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o DatahubTaskTargetResourceScfParamPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceScfParam) *string {
		if v == nil {
			return nil
		}
		return v.Qualifier
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceSqlServerParam struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// SQLServer connection Id.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode *string `pulumi:"snapshotMode"`
	// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// DatahubTaskTargetResourceSqlServerParamInput is an input type that accepts DatahubTaskTargetResourceSqlServerParamArgs and DatahubTaskTargetResourceSqlServerParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceSqlServerParamInput` via:
//
//	DatahubTaskTargetResourceSqlServerParamArgs{...}
type DatahubTaskTargetResourceSqlServerParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceSqlServerParamOutput() DatahubTaskTargetResourceSqlServerParamOutput
	ToDatahubTaskTargetResourceSqlServerParamOutputWithContext(context.Context) DatahubTaskTargetResourceSqlServerParamOutput
}

type DatahubTaskTargetResourceSqlServerParamArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// SQLServer connection Id.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringPtrInput `pulumi:"snapshotMode"`
	// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (DatahubTaskTargetResourceSqlServerParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceSqlServerParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceSqlServerParamArgs) ToDatahubTaskTargetResourceSqlServerParamOutput() DatahubTaskTargetResourceSqlServerParamOutput {
	return i.ToDatahubTaskTargetResourceSqlServerParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceSqlServerParamArgs) ToDatahubTaskTargetResourceSqlServerParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceSqlServerParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceSqlServerParamOutput)
}

func (i DatahubTaskTargetResourceSqlServerParamArgs) ToDatahubTaskTargetResourceSqlServerParamPtrOutput() DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return i.ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceSqlServerParamArgs) ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceSqlServerParamOutput).ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceSqlServerParamPtrInput is an input type that accepts DatahubTaskTargetResourceSqlServerParamArgs, DatahubTaskTargetResourceSqlServerParamPtr and DatahubTaskTargetResourceSqlServerParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceSqlServerParamPtrInput` via:
//
//	        DatahubTaskTargetResourceSqlServerParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceSqlServerParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceSqlServerParamPtrOutput() DatahubTaskTargetResourceSqlServerParamPtrOutput
	ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceSqlServerParamPtrOutput
}

type datahubTaskTargetResourceSqlServerParamPtrType DatahubTaskTargetResourceSqlServerParamArgs

func DatahubTaskTargetResourceSqlServerParamPtr(v *DatahubTaskTargetResourceSqlServerParamArgs) DatahubTaskTargetResourceSqlServerParamPtrInput {
	return (*datahubTaskTargetResourceSqlServerParamPtrType)(v)
}

func (*datahubTaskTargetResourceSqlServerParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceSqlServerParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceSqlServerParamPtrType) ToDatahubTaskTargetResourceSqlServerParamPtrOutput() DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return i.ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceSqlServerParamPtrType) ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceSqlServerParamPtrOutput)
}

type DatahubTaskTargetResourceSqlServerParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceSqlServerParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceSqlServerParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceSqlServerParamOutput) ToDatahubTaskTargetResourceSqlServerParamOutput() DatahubTaskTargetResourceSqlServerParamOutput {
	return o
}

func (o DatahubTaskTargetResourceSqlServerParamOutput) ToDatahubTaskTargetResourceSqlServerParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceSqlServerParamOutput {
	return o
}

func (o DatahubTaskTargetResourceSqlServerParamOutput) ToDatahubTaskTargetResourceSqlServerParamPtrOutput() DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return o.ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceSqlServerParamOutput) ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceSqlServerParam) *DatahubTaskTargetResourceSqlServerParam {
		return &v
	}).(DatahubTaskTargetResourceSqlServerParamPtrOutput)
}

// SQLServer database name.
func (o DatahubTaskTargetResourceSqlServerParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceSqlServerParam) string { return v.Database }).(pulumi.StringOutput)
}

// SQLServer connection Id.
func (o DatahubTaskTargetResourceSqlServerParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceSqlServerParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o DatahubTaskTargetResourceSqlServerParamOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceSqlServerParam) *string { return v.SnapshotMode }).(pulumi.StringPtrOutput)
}

// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskTargetResourceSqlServerParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceSqlServerParam) string { return v.Table }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceSqlServerParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceSqlServerParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceSqlServerParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) ToDatahubTaskTargetResourceSqlServerParamPtrOutput() DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) ToDatahubTaskTargetResourceSqlServerParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceSqlServerParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) Elem() DatahubTaskTargetResourceSqlServerParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceSqlServerParam) DatahubTaskTargetResourceSqlServerParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceSqlServerParam
		return ret
	}).(DatahubTaskTargetResourceSqlServerParamOutput)
}

// SQLServer database name.
func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// SQLServer connection Id.
func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// schema_only|initial default initial.
func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) SnapshotMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotMode
	}).(pulumi.StringPtrOutput)
}

// SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o DatahubTaskTargetResourceSqlServerParamPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceSqlServerParam) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceTdwParam struct {
	// Tdw bid.
	Bid string `pulumi:"bid"`
	// default true.
	IsDomestic *bool `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost *string `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort *int `pulumi:"tdwPort"`
	// Tdw tid.
	Tid string `pulumi:"tid"`
}

// DatahubTaskTargetResourceTdwParamInput is an input type that accepts DatahubTaskTargetResourceTdwParamArgs and DatahubTaskTargetResourceTdwParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceTdwParamInput` via:
//
//	DatahubTaskTargetResourceTdwParamArgs{...}
type DatahubTaskTargetResourceTdwParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceTdwParamOutput() DatahubTaskTargetResourceTdwParamOutput
	ToDatahubTaskTargetResourceTdwParamOutputWithContext(context.Context) DatahubTaskTargetResourceTdwParamOutput
}

type DatahubTaskTargetResourceTdwParamArgs struct {
	// Tdw bid.
	Bid pulumi.StringInput `pulumi:"bid"`
	// default true.
	IsDomestic pulumi.BoolPtrInput `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost pulumi.StringPtrInput `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort pulumi.IntPtrInput `pulumi:"tdwPort"`
	// Tdw tid.
	Tid pulumi.StringInput `pulumi:"tid"`
}

func (DatahubTaskTargetResourceTdwParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceTdwParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceTdwParamArgs) ToDatahubTaskTargetResourceTdwParamOutput() DatahubTaskTargetResourceTdwParamOutput {
	return i.ToDatahubTaskTargetResourceTdwParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceTdwParamArgs) ToDatahubTaskTargetResourceTdwParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTdwParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceTdwParamOutput)
}

func (i DatahubTaskTargetResourceTdwParamArgs) ToDatahubTaskTargetResourceTdwParamPtrOutput() DatahubTaskTargetResourceTdwParamPtrOutput {
	return i.ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceTdwParamArgs) ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTdwParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceTdwParamOutput).ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceTdwParamPtrInput is an input type that accepts DatahubTaskTargetResourceTdwParamArgs, DatahubTaskTargetResourceTdwParamPtr and DatahubTaskTargetResourceTdwParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceTdwParamPtrInput` via:
//
//	        DatahubTaskTargetResourceTdwParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceTdwParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceTdwParamPtrOutput() DatahubTaskTargetResourceTdwParamPtrOutput
	ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceTdwParamPtrOutput
}

type datahubTaskTargetResourceTdwParamPtrType DatahubTaskTargetResourceTdwParamArgs

func DatahubTaskTargetResourceTdwParamPtr(v *DatahubTaskTargetResourceTdwParamArgs) DatahubTaskTargetResourceTdwParamPtrInput {
	return (*datahubTaskTargetResourceTdwParamPtrType)(v)
}

func (*datahubTaskTargetResourceTdwParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceTdwParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceTdwParamPtrType) ToDatahubTaskTargetResourceTdwParamPtrOutput() DatahubTaskTargetResourceTdwParamPtrOutput {
	return i.ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceTdwParamPtrType) ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTdwParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceTdwParamPtrOutput)
}

type DatahubTaskTargetResourceTdwParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceTdwParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceTdwParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceTdwParamOutput) ToDatahubTaskTargetResourceTdwParamOutput() DatahubTaskTargetResourceTdwParamOutput {
	return o
}

func (o DatahubTaskTargetResourceTdwParamOutput) ToDatahubTaskTargetResourceTdwParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTdwParamOutput {
	return o
}

func (o DatahubTaskTargetResourceTdwParamOutput) ToDatahubTaskTargetResourceTdwParamPtrOutput() DatahubTaskTargetResourceTdwParamPtrOutput {
	return o.ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceTdwParamOutput) ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTdwParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceTdwParam) *DatahubTaskTargetResourceTdwParam {
		return &v
	}).(DatahubTaskTargetResourceTdwParamPtrOutput)
}

// Tdw bid.
func (o DatahubTaskTargetResourceTdwParamOutput) Bid() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTdwParam) string { return v.Bid }).(pulumi.StringOutput)
}

// default true.
func (o DatahubTaskTargetResourceTdwParamOutput) IsDomestic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTdwParam) *bool { return v.IsDomestic }).(pulumi.BoolPtrOutput)
}

// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
func (o DatahubTaskTargetResourceTdwParamOutput) TdwHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTdwParam) *string { return v.TdwHost }).(pulumi.StringPtrOutput)
}

// TDW port, default 8099.
func (o DatahubTaskTargetResourceTdwParamOutput) TdwPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTdwParam) *int { return v.TdwPort }).(pulumi.IntPtrOutput)
}

// Tdw tid.
func (o DatahubTaskTargetResourceTdwParamOutput) Tid() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTdwParam) string { return v.Tid }).(pulumi.StringOutput)
}

type DatahubTaskTargetResourceTdwParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceTdwParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceTdwParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceTdwParamPtrOutput) ToDatahubTaskTargetResourceTdwParamPtrOutput() DatahubTaskTargetResourceTdwParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceTdwParamPtrOutput) ToDatahubTaskTargetResourceTdwParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTdwParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceTdwParamPtrOutput) Elem() DatahubTaskTargetResourceTdwParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTdwParam) DatahubTaskTargetResourceTdwParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceTdwParam
		return ret
	}).(DatahubTaskTargetResourceTdwParamOutput)
}

// Tdw bid.
func (o DatahubTaskTargetResourceTdwParamPtrOutput) Bid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTdwParam) *string {
		if v == nil {
			return nil
		}
		return &v.Bid
	}).(pulumi.StringPtrOutput)
}

// default true.
func (o DatahubTaskTargetResourceTdwParamPtrOutput) IsDomestic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTdwParam) *bool {
		if v == nil {
			return nil
		}
		return v.IsDomestic
	}).(pulumi.BoolPtrOutput)
}

// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
func (o DatahubTaskTargetResourceTdwParamPtrOutput) TdwHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTdwParam) *string {
		if v == nil {
			return nil
		}
		return v.TdwHost
	}).(pulumi.StringPtrOutput)
}

// TDW port, default 8099.
func (o DatahubTaskTargetResourceTdwParamPtrOutput) TdwPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTdwParam) *int {
		if v == nil {
			return nil
		}
		return v.TdwPort
	}).(pulumi.IntPtrOutput)
}

// Tdw tid.
func (o DatahubTaskTargetResourceTdwParamPtrOutput) Tid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTdwParam) *string {
		if v == nil {
			return nil
		}
		return &v.Tid
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTargetResourceTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType *string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime *int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId *string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
}

// DatahubTaskTargetResourceTopicParamInput is an input type that accepts DatahubTaskTargetResourceTopicParamArgs and DatahubTaskTargetResourceTopicParamOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceTopicParamInput` via:
//
//	DatahubTaskTargetResourceTopicParamArgs{...}
type DatahubTaskTargetResourceTopicParamInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceTopicParamOutput() DatahubTaskTargetResourceTopicParamOutput
	ToDatahubTaskTargetResourceTopicParamOutputWithContext(context.Context) DatahubTaskTargetResourceTopicParamOutput
}

type DatahubTaskTargetResourceTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
}

func (DatahubTaskTargetResourceTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceTopicParam)(nil)).Elem()
}

func (i DatahubTaskTargetResourceTopicParamArgs) ToDatahubTaskTargetResourceTopicParamOutput() DatahubTaskTargetResourceTopicParamOutput {
	return i.ToDatahubTaskTargetResourceTopicParamOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceTopicParamArgs) ToDatahubTaskTargetResourceTopicParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceTopicParamOutput)
}

func (i DatahubTaskTargetResourceTopicParamArgs) ToDatahubTaskTargetResourceTopicParamPtrOutput() DatahubTaskTargetResourceTopicParamPtrOutput {
	return i.ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTargetResourceTopicParamArgs) ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceTopicParamOutput).ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(ctx)
}

// DatahubTaskTargetResourceTopicParamPtrInput is an input type that accepts DatahubTaskTargetResourceTopicParamArgs, DatahubTaskTargetResourceTopicParamPtr and DatahubTaskTargetResourceTopicParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTargetResourceTopicParamPtrInput` via:
//
//	        DatahubTaskTargetResourceTopicParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTargetResourceTopicParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTargetResourceTopicParamPtrOutput() DatahubTaskTargetResourceTopicParamPtrOutput
	ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(context.Context) DatahubTaskTargetResourceTopicParamPtrOutput
}

type datahubTaskTargetResourceTopicParamPtrType DatahubTaskTargetResourceTopicParamArgs

func DatahubTaskTargetResourceTopicParamPtr(v *DatahubTaskTargetResourceTopicParamArgs) DatahubTaskTargetResourceTopicParamPtrInput {
	return (*datahubTaskTargetResourceTopicParamPtrType)(v)
}

func (*datahubTaskTargetResourceTopicParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceTopicParam)(nil)).Elem()
}

func (i *datahubTaskTargetResourceTopicParamPtrType) ToDatahubTaskTargetResourceTopicParamPtrOutput() DatahubTaskTargetResourceTopicParamPtrOutput {
	return i.ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTargetResourceTopicParamPtrType) ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTargetResourceTopicParamPtrOutput)
}

type DatahubTaskTargetResourceTopicParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTargetResourceTopicParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceTopicParamOutput) ToDatahubTaskTargetResourceTopicParamOutput() DatahubTaskTargetResourceTopicParamOutput {
	return o
}

func (o DatahubTaskTargetResourceTopicParamOutput) ToDatahubTaskTargetResourceTopicParamOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTopicParamOutput {
	return o
}

func (o DatahubTaskTargetResourceTopicParamOutput) ToDatahubTaskTargetResourceTopicParamPtrOutput() DatahubTaskTargetResourceTopicParamPtrOutput {
	return o.ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTargetResourceTopicParamOutput) ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTopicParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTargetResourceTopicParam) *DatahubTaskTargetResourceTopicParam {
		return &v
	}).(DatahubTaskTargetResourceTopicParamPtrOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTargetResourceTopicParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceTopicParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTargetResourceTopicParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTargetResourceTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTargetResourceTopicParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTargetResourceTopicParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTargetResourceTopicParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTargetResourceTopicParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTargetResourceTopicParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTargetResourceTopicParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTargetResourceTopicParam)(nil)).Elem()
}

func (o DatahubTaskTargetResourceTopicParamPtrOutput) ToDatahubTaskTargetResourceTopicParamPtrOutput() DatahubTaskTargetResourceTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceTopicParamPtrOutput) ToDatahubTaskTargetResourceTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTargetResourceTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTargetResourceTopicParamPtrOutput) Elem() DatahubTaskTargetResourceTopicParamOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) DatahubTaskTargetResourceTopicParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTargetResourceTopicParam
		return ret
	}).(DatahubTaskTargetResourceTopicParamOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTargetResourceTopicParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTargetResourceTopicParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTargetResourceTopicParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTargetResourceTopicParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTargetResourceTopicParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTargetResourceTopicParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTargetResourceTopicParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTargetResourceTopicParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformParam struct {
	// Analysis result.
	AnalyseResults []DatahubTaskTransformParamAnalyseResult `pulumi:"analyseResults"`
	// parsing format, JSON | DELIMITER| REGULAR.
	AnalysisFormat string `pulumi:"analysisFormat"`
	// Raw data.
	Content string `pulumi:"content"`
	// Whether to keep parsing failure data.
	FailureParam DatahubTaskTransformParamFailureParam `pulumi:"failureParam"`
	// filter.
	FilterParams []DatahubTaskTransformParamFilterParam `pulumi:"filterParams"`
	// Map.
	MapParams []DatahubTaskTransformParamMapParam `pulumi:"mapParams"`
	// output format.
	OutputFormat string `pulumi:"outputFormat"`
	// delimiter, regular expression.
	Regex *string `pulumi:"regex"`
	// Test Results.
	Result *string `pulumi:"result"`
	// Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
	SourceType string `pulumi:"sourceType"`
	// Whether the underlying engine uses eb.
	UseEventBus *bool `pulumi:"useEventBus"`
}

// DatahubTaskTransformParamInput is an input type that accepts DatahubTaskTransformParamArgs and DatahubTaskTransformParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamInput` via:
//
//	DatahubTaskTransformParamArgs{...}
type DatahubTaskTransformParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamOutput() DatahubTaskTransformParamOutput
	ToDatahubTaskTransformParamOutputWithContext(context.Context) DatahubTaskTransformParamOutput
}

type DatahubTaskTransformParamArgs struct {
	// Analysis result.
	AnalyseResults DatahubTaskTransformParamAnalyseResultArrayInput `pulumi:"analyseResults"`
	// parsing format, JSON | DELIMITER| REGULAR.
	AnalysisFormat pulumi.StringInput `pulumi:"analysisFormat"`
	// Raw data.
	Content pulumi.StringInput `pulumi:"content"`
	// Whether to keep parsing failure data.
	FailureParam DatahubTaskTransformParamFailureParamInput `pulumi:"failureParam"`
	// filter.
	FilterParams DatahubTaskTransformParamFilterParamArrayInput `pulumi:"filterParams"`
	// Map.
	MapParams DatahubTaskTransformParamMapParamArrayInput `pulumi:"mapParams"`
	// output format.
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// delimiter, regular expression.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Test Results.
	Result pulumi.StringPtrInput `pulumi:"result"`
	// Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// Whether the underlying engine uses eb.
	UseEventBus pulumi.BoolPtrInput `pulumi:"useEventBus"`
}

func (DatahubTaskTransformParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamArgs) ToDatahubTaskTransformParamOutput() DatahubTaskTransformParamOutput {
	return i.ToDatahubTaskTransformParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamArgs) ToDatahubTaskTransformParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamOutput)
}

func (i DatahubTaskTransformParamArgs) ToDatahubTaskTransformParamPtrOutput() DatahubTaskTransformParamPtrOutput {
	return i.ToDatahubTaskTransformParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamArgs) ToDatahubTaskTransformParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamOutput).ToDatahubTaskTransformParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformParamPtrInput is an input type that accepts DatahubTaskTransformParamArgs, DatahubTaskTransformParamPtr and DatahubTaskTransformParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamPtrInput` via:
//
//	        DatahubTaskTransformParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamPtrOutput() DatahubTaskTransformParamPtrOutput
	ToDatahubTaskTransformParamPtrOutputWithContext(context.Context) DatahubTaskTransformParamPtrOutput
}

type datahubTaskTransformParamPtrType DatahubTaskTransformParamArgs

func DatahubTaskTransformParamPtr(v *DatahubTaskTransformParamArgs) DatahubTaskTransformParamPtrInput {
	return (*datahubTaskTransformParamPtrType)(v)
}

func (*datahubTaskTransformParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParam)(nil)).Elem()
}

func (i *datahubTaskTransformParamPtrType) ToDatahubTaskTransformParamPtrOutput() DatahubTaskTransformParamPtrOutput {
	return i.ToDatahubTaskTransformParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformParamPtrType) ToDatahubTaskTransformParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamPtrOutput)
}

type DatahubTaskTransformParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamOutput) ToDatahubTaskTransformParamOutput() DatahubTaskTransformParamOutput {
	return o
}

func (o DatahubTaskTransformParamOutput) ToDatahubTaskTransformParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamOutput {
	return o
}

func (o DatahubTaskTransformParamOutput) ToDatahubTaskTransformParamPtrOutput() DatahubTaskTransformParamPtrOutput {
	return o.ToDatahubTaskTransformParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformParamOutput) ToDatahubTaskTransformParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformParam) *DatahubTaskTransformParam {
		return &v
	}).(DatahubTaskTransformParamPtrOutput)
}

// Analysis result.
func (o DatahubTaskTransformParamOutput) AnalyseResults() DatahubTaskTransformParamAnalyseResultArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) []DatahubTaskTransformParamAnalyseResult { return v.AnalyseResults }).(DatahubTaskTransformParamAnalyseResultArrayOutput)
}

// parsing format, JSON | DELIMITER| REGULAR.
func (o DatahubTaskTransformParamOutput) AnalysisFormat() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) string { return v.AnalysisFormat }).(pulumi.StringOutput)
}

// Raw data.
func (o DatahubTaskTransformParamOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) string { return v.Content }).(pulumi.StringOutput)
}

// Whether to keep parsing failure data.
func (o DatahubTaskTransformParamOutput) FailureParam() DatahubTaskTransformParamFailureParamOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) DatahubTaskTransformParamFailureParam { return v.FailureParam }).(DatahubTaskTransformParamFailureParamOutput)
}

// filter.
func (o DatahubTaskTransformParamOutput) FilterParams() DatahubTaskTransformParamFilterParamArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) []DatahubTaskTransformParamFilterParam { return v.FilterParams }).(DatahubTaskTransformParamFilterParamArrayOutput)
}

// Map.
func (o DatahubTaskTransformParamOutput) MapParams() DatahubTaskTransformParamMapParamArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) []DatahubTaskTransformParamMapParam { return v.MapParams }).(DatahubTaskTransformParamMapParamArrayOutput)
}

// output format.
func (o DatahubTaskTransformParamOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// delimiter, regular expression.
func (o DatahubTaskTransformParamOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Test Results.
func (o DatahubTaskTransformParamOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) *string { return v.Result }).(pulumi.StringPtrOutput)
}

// Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
func (o DatahubTaskTransformParamOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) string { return v.SourceType }).(pulumi.StringOutput)
}

// Whether the underlying engine uses eb.
func (o DatahubTaskTransformParamOutput) UseEventBus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParam) *bool { return v.UseEventBus }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamPtrOutput) ToDatahubTaskTransformParamPtrOutput() DatahubTaskTransformParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamPtrOutput) ToDatahubTaskTransformParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamPtrOutput) Elem() DatahubTaskTransformParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) DatahubTaskTransformParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformParam
		return ret
	}).(DatahubTaskTransformParamOutput)
}

// Analysis result.
func (o DatahubTaskTransformParamPtrOutput) AnalyseResults() DatahubTaskTransformParamAnalyseResultArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) []DatahubTaskTransformParamAnalyseResult {
		if v == nil {
			return nil
		}
		return v.AnalyseResults
	}).(DatahubTaskTransformParamAnalyseResultArrayOutput)
}

// parsing format, JSON | DELIMITER| REGULAR.
func (o DatahubTaskTransformParamPtrOutput) AnalysisFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *string {
		if v == nil {
			return nil
		}
		return &v.AnalysisFormat
	}).(pulumi.StringPtrOutput)
}

// Raw data.
func (o DatahubTaskTransformParamPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// Whether to keep parsing failure data.
func (o DatahubTaskTransformParamPtrOutput) FailureParam() DatahubTaskTransformParamFailureParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *DatahubTaskTransformParamFailureParam {
		if v == nil {
			return nil
		}
		return &v.FailureParam
	}).(DatahubTaskTransformParamFailureParamPtrOutput)
}

// filter.
func (o DatahubTaskTransformParamPtrOutput) FilterParams() DatahubTaskTransformParamFilterParamArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) []DatahubTaskTransformParamFilterParam {
		if v == nil {
			return nil
		}
		return v.FilterParams
	}).(DatahubTaskTransformParamFilterParamArrayOutput)
}

// Map.
func (o DatahubTaskTransformParamPtrOutput) MapParams() DatahubTaskTransformParamMapParamArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) []DatahubTaskTransformParamMapParam {
		if v == nil {
			return nil
		}
		return v.MapParams
	}).(DatahubTaskTransformParamMapParamArrayOutput)
}

// output format.
func (o DatahubTaskTransformParamPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *string {
		if v == nil {
			return nil
		}
		return &v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// delimiter, regular expression.
func (o DatahubTaskTransformParamPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Test Results.
func (o DatahubTaskTransformParamPtrOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *string {
		if v == nil {
			return nil
		}
		return v.Result
	}).(pulumi.StringPtrOutput)
}

// Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
func (o DatahubTaskTransformParamPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

// Whether the underlying engine uses eb.
func (o DatahubTaskTransformParamPtrOutput) UseEventBus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseEventBus
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformParamAnalyseResult struct {
	// key.
	Key string `pulumi:"key"`
	// Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
	Type *string `pulumi:"type"`
	// value.
	Value *string `pulumi:"value"`
}

// DatahubTaskTransformParamAnalyseResultInput is an input type that accepts DatahubTaskTransformParamAnalyseResultArgs and DatahubTaskTransformParamAnalyseResultOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamAnalyseResultInput` via:
//
//	DatahubTaskTransformParamAnalyseResultArgs{...}
type DatahubTaskTransformParamAnalyseResultInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamAnalyseResultOutput() DatahubTaskTransformParamAnalyseResultOutput
	ToDatahubTaskTransformParamAnalyseResultOutputWithContext(context.Context) DatahubTaskTransformParamAnalyseResultOutput
}

type DatahubTaskTransformParamAnalyseResultArgs struct {
	// key.
	Key pulumi.StringInput `pulumi:"key"`
	// Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DatahubTaskTransformParamAnalyseResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamAnalyseResult)(nil)).Elem()
}

func (i DatahubTaskTransformParamAnalyseResultArgs) ToDatahubTaskTransformParamAnalyseResultOutput() DatahubTaskTransformParamAnalyseResultOutput {
	return i.ToDatahubTaskTransformParamAnalyseResultOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamAnalyseResultArgs) ToDatahubTaskTransformParamAnalyseResultOutputWithContext(ctx context.Context) DatahubTaskTransformParamAnalyseResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamAnalyseResultOutput)
}

// DatahubTaskTransformParamAnalyseResultArrayInput is an input type that accepts DatahubTaskTransformParamAnalyseResultArray and DatahubTaskTransformParamAnalyseResultArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamAnalyseResultArrayInput` via:
//
//	DatahubTaskTransformParamAnalyseResultArray{ DatahubTaskTransformParamAnalyseResultArgs{...} }
type DatahubTaskTransformParamAnalyseResultArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamAnalyseResultArrayOutput() DatahubTaskTransformParamAnalyseResultArrayOutput
	ToDatahubTaskTransformParamAnalyseResultArrayOutputWithContext(context.Context) DatahubTaskTransformParamAnalyseResultArrayOutput
}

type DatahubTaskTransformParamAnalyseResultArray []DatahubTaskTransformParamAnalyseResultInput

func (DatahubTaskTransformParamAnalyseResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamAnalyseResult)(nil)).Elem()
}

func (i DatahubTaskTransformParamAnalyseResultArray) ToDatahubTaskTransformParamAnalyseResultArrayOutput() DatahubTaskTransformParamAnalyseResultArrayOutput {
	return i.ToDatahubTaskTransformParamAnalyseResultArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamAnalyseResultArray) ToDatahubTaskTransformParamAnalyseResultArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamAnalyseResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamAnalyseResultArrayOutput)
}

type DatahubTaskTransformParamAnalyseResultOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamAnalyseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamAnalyseResult)(nil)).Elem()
}

func (o DatahubTaskTransformParamAnalyseResultOutput) ToDatahubTaskTransformParamAnalyseResultOutput() DatahubTaskTransformParamAnalyseResultOutput {
	return o
}

func (o DatahubTaskTransformParamAnalyseResultOutput) ToDatahubTaskTransformParamAnalyseResultOutputWithContext(ctx context.Context) DatahubTaskTransformParamAnalyseResultOutput {
	return o
}

// key.
func (o DatahubTaskTransformParamAnalyseResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamAnalyseResult) string { return v.Key }).(pulumi.StringOutput)
}

// Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
func (o DatahubTaskTransformParamAnalyseResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamAnalyseResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// value.
func (o DatahubTaskTransformParamAnalyseResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamAnalyseResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformParamAnalyseResultArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamAnalyseResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamAnalyseResult)(nil)).Elem()
}

func (o DatahubTaskTransformParamAnalyseResultArrayOutput) ToDatahubTaskTransformParamAnalyseResultArrayOutput() DatahubTaskTransformParamAnalyseResultArrayOutput {
	return o
}

func (o DatahubTaskTransformParamAnalyseResultArrayOutput) ToDatahubTaskTransformParamAnalyseResultArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamAnalyseResultArrayOutput {
	return o
}

func (o DatahubTaskTransformParamAnalyseResultArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformParamAnalyseResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformParamAnalyseResult {
		return vs[0].([]DatahubTaskTransformParamAnalyseResult)[vs[1].(int)]
	}).(DatahubTaskTransformParamAnalyseResultOutput)
}

type DatahubTaskTransformParamFailureParam struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType *string `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam *DatahubTaskTransformParamFailureParamKafkaParam `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts *int `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval *int `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam *DatahubTaskTransformParamFailureParamTopicParam `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type string `pulumi:"type"`
}

// DatahubTaskTransformParamFailureParamInput is an input type that accepts DatahubTaskTransformParamFailureParamArgs and DatahubTaskTransformParamFailureParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamInput` via:
//
//	DatahubTaskTransformParamFailureParamArgs{...}
type DatahubTaskTransformParamFailureParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamOutput() DatahubTaskTransformParamFailureParamOutput
	ToDatahubTaskTransformParamFailureParamOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamOutput
}

type DatahubTaskTransformParamFailureParamArgs struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType pulumi.StringPtrInput `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam DatahubTaskTransformParamFailureParamKafkaParamPtrInput `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts pulumi.IntPtrInput `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval pulumi.IntPtrInput `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam DatahubTaskTransformParamFailureParamTopicParamPtrInput `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskTransformParamFailureParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamFailureParamArgs) ToDatahubTaskTransformParamFailureParamOutput() DatahubTaskTransformParamFailureParamOutput {
	return i.ToDatahubTaskTransformParamFailureParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamArgs) ToDatahubTaskTransformParamFailureParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamOutput)
}

func (i DatahubTaskTransformParamFailureParamArgs) ToDatahubTaskTransformParamFailureParamPtrOutput() DatahubTaskTransformParamFailureParamPtrOutput {
	return i.ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamArgs) ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamOutput).ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformParamFailureParamPtrInput is an input type that accepts DatahubTaskTransformParamFailureParamArgs, DatahubTaskTransformParamFailureParamPtr and DatahubTaskTransformParamFailureParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamPtrInput` via:
//
//	        DatahubTaskTransformParamFailureParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformParamFailureParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamPtrOutput() DatahubTaskTransformParamFailureParamPtrOutput
	ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamPtrOutput
}

type datahubTaskTransformParamFailureParamPtrType DatahubTaskTransformParamFailureParamArgs

func DatahubTaskTransformParamFailureParamPtr(v *DatahubTaskTransformParamFailureParamArgs) DatahubTaskTransformParamFailureParamPtrInput {
	return (*datahubTaskTransformParamFailureParamPtrType)(v)
}

func (*datahubTaskTransformParamFailureParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParamFailureParam)(nil)).Elem()
}

func (i *datahubTaskTransformParamFailureParamPtrType) ToDatahubTaskTransformParamFailureParamPtrOutput() DatahubTaskTransformParamFailureParamPtrOutput {
	return i.ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformParamFailureParamPtrType) ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamPtrOutput)
}

type DatahubTaskTransformParamFailureParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamOutput) ToDatahubTaskTransformParamFailureParamOutput() DatahubTaskTransformParamFailureParamOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamOutput) ToDatahubTaskTransformParamFailureParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamOutput) ToDatahubTaskTransformParamFailureParamPtrOutput() DatahubTaskTransformParamFailureParamPtrOutput {
	return o.ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformParamFailureParamOutput) ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformParamFailureParam) *DatahubTaskTransformParamFailureParam {
		return &v
	}).(DatahubTaskTransformParamFailureParamPtrOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskTransformParamFailureParamOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParam) *string { return v.DlqType }).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskTransformParamFailureParamOutput) KafkaParam() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParam) *DatahubTaskTransformParamFailureParamKafkaParam {
		return v.KafkaParam
	}).(DatahubTaskTransformParamFailureParamKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskTransformParamFailureParamOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParam) *int { return v.MaxRetryAttempts }).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskTransformParamFailureParamOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParam) *int { return v.RetryInterval }).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskTransformParamFailureParamOutput) TopicParam() DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParam) *DatahubTaskTransformParamFailureParamTopicParam {
		return v.TopicParam
	}).(DatahubTaskTransformParamFailureParamTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskTransformParamFailureParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParam) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskTransformParamFailureParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParamFailureParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamPtrOutput) ToDatahubTaskTransformParamFailureParamPtrOutput() DatahubTaskTransformParamFailureParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamPtrOutput) ToDatahubTaskTransformParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamPtrOutput) Elem() DatahubTaskTransformParamFailureParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) DatahubTaskTransformParamFailureParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformParamFailureParam
		return ret
	}).(DatahubTaskTransformParamFailureParamOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskTransformParamFailureParamPtrOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) *string {
		if v == nil {
			return nil
		}
		return v.DlqType
	}).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskTransformParamFailureParamPtrOutput) KafkaParam() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) *DatahubTaskTransformParamFailureParamKafkaParam {
		if v == nil {
			return nil
		}
		return v.KafkaParam
	}).(DatahubTaskTransformParamFailureParamKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskTransformParamFailureParamPtrOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetryAttempts
	}).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskTransformParamFailureParamPtrOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) *int {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskTransformParamFailureParamPtrOutput) TopicParam() DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) *DatahubTaskTransformParamFailureParamTopicParam {
		if v == nil {
			return nil
		}
		return v.TopicParam
	}).(DatahubTaskTransformParamFailureParamTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskTransformParamFailureParamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParam) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformParamFailureParamKafkaParam struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType *string `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration *bool `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum *int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit *int `pulumi:"qpsLimit"`
	// instance resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName *string `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime *int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []DatahubTaskTransformParamFailureParamKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic *string `pulumi:"topic"`
	// Topic id.
	TopicId *string `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping *bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId *int `pulumi:"zoneId"`
}

// DatahubTaskTransformParamFailureParamKafkaParamInput is an input type that accepts DatahubTaskTransformParamFailureParamKafkaParamArgs and DatahubTaskTransformParamFailureParamKafkaParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamKafkaParamInput` via:
//
//	DatahubTaskTransformParamFailureParamKafkaParamArgs{...}
type DatahubTaskTransformParamFailureParamKafkaParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamKafkaParamOutput() DatahubTaskTransformParamFailureParamKafkaParamOutput
	ToDatahubTaskTransformParamFailureParamKafkaParamOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamKafkaParamOutput
}

type DatahubTaskTransformParamFailureParamKafkaParamArgs struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolPtrInput `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntPtrInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntPtrInput `pulumi:"qpsLimit"`
	// instance resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Topic id.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolPtrInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntPtrInput `pulumi:"zoneId"`
}

func (DatahubTaskTransformParamFailureParamKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamFailureParamKafkaParamArgs) ToDatahubTaskTransformParamFailureParamKafkaParamOutput() DatahubTaskTransformParamFailureParamKafkaParamOutput {
	return i.ToDatahubTaskTransformParamFailureParamKafkaParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamKafkaParamArgs) ToDatahubTaskTransformParamFailureParamKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamKafkaParamOutput)
}

func (i DatahubTaskTransformParamFailureParamKafkaParamArgs) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return i.ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamKafkaParamArgs) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamKafkaParamOutput).ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformParamFailureParamKafkaParamPtrInput is an input type that accepts DatahubTaskTransformParamFailureParamKafkaParamArgs, DatahubTaskTransformParamFailureParamKafkaParamPtr and DatahubTaskTransformParamFailureParamKafkaParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamKafkaParamPtrInput` via:
//
//	        DatahubTaskTransformParamFailureParamKafkaParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformParamFailureParamKafkaParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput
	ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamKafkaParamPtrOutput
}

type datahubTaskTransformParamFailureParamKafkaParamPtrType DatahubTaskTransformParamFailureParamKafkaParamArgs

func DatahubTaskTransformParamFailureParamKafkaParamPtr(v *DatahubTaskTransformParamFailureParamKafkaParamArgs) DatahubTaskTransformParamFailureParamKafkaParamPtrInput {
	return (*datahubTaskTransformParamFailureParamKafkaParamPtrType)(v)
}

func (*datahubTaskTransformParamFailureParamKafkaParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParamFailureParamKafkaParam)(nil)).Elem()
}

func (i *datahubTaskTransformParamFailureParamKafkaParamPtrType) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return i.ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformParamFailureParamKafkaParamPtrType) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamKafkaParamPtrOutput)
}

type DatahubTaskTransformParamFailureParamKafkaParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) ToDatahubTaskTransformParamFailureParamKafkaParamOutput() DatahubTaskTransformParamFailureParamKafkaParamOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) ToDatahubTaskTransformParamFailureParamKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return o.ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformParamFailureParamKafkaParam) *DatahubTaskTransformParamFailureParamKafkaParam {
		return &v
	}).(DatahubTaskTransformParamFailureParamKafkaParamPtrOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *bool { return v.EnableToleration }).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *int { return v.PartitionNum }).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *int { return v.QpsLimit }).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) TableMappings() DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) []DatahubTaskTransformParamFailureParamKafkaParamTableMapping {
		return v.TableMappings
	}).(DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *bool { return v.UseTableMapping }).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTransformParamFailureParamKafkaParamOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParam) *int { return v.ZoneId }).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformParamFailureParamKafkaParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParamFailureParamKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) ToDatahubTaskTransformParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) Elem() DatahubTaskTransformParamFailureParamKafkaParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) DatahubTaskTransformParamFailureParamKafkaParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformParamFailureParamKafkaParam
		return ret
	}).(DatahubTaskTransformParamFailureParamKafkaParamOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.EnableToleration
	}).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNum
	}).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.QpsLimit
	}).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// instance name.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) TableMappings() DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) []DatahubTaskTransformParamFailureParamKafkaParamTableMapping {
		if v == nil {
			return nil
		}
		return v.TableMappings
	}).(DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseTableMapping
	}).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTransformParamFailureParamKafkaParamPtrOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformParamFailureParamKafkaParamTableMapping struct {
	// database name.
	Database string `pulumi:"database"`
	// table name,use, to separate.
	Table string `pulumi:"table"`
	// Topic name.
	Topic string `pulumi:"topic"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
}

// DatahubTaskTransformParamFailureParamKafkaParamTableMappingInput is an input type that accepts DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs and DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamKafkaParamTableMappingInput` via:
//
//	DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs{...}
type DatahubTaskTransformParamFailureParamKafkaParamTableMappingInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput() DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput
	ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput
}

type DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs struct {
	// database name.
	Database pulumi.StringInput `pulumi:"database"`
	// table name,use, to separate.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput() DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput {
	return i.ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput)
}

// DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayInput is an input type that accepts DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray and DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayInput` via:
//
//	DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray{ DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs{...} }
type DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput() DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput
	ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput
}

type DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray []DatahubTaskTransformParamFailureParamKafkaParamTableMappingInput

func (DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput() DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput {
	return i.ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput)
}

type DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput() DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput {
	return o
}

// database name.
func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// table name,use, to separate.
func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name.
func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic ID.
func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput() DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput) ToDatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformParamFailureParamKafkaParamTableMapping {
		return vs[0].([]DatahubTaskTransformParamFailureParamKafkaParamTableMapping)[vs[1].(int)]
	}).(DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput)
}

type DatahubTaskTransformParamFailureParamTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType *string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime *int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId *string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
}

// DatahubTaskTransformParamFailureParamTopicParamInput is an input type that accepts DatahubTaskTransformParamFailureParamTopicParamArgs and DatahubTaskTransformParamFailureParamTopicParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamTopicParamInput` via:
//
//	DatahubTaskTransformParamFailureParamTopicParamArgs{...}
type DatahubTaskTransformParamFailureParamTopicParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamTopicParamOutput() DatahubTaskTransformParamFailureParamTopicParamOutput
	ToDatahubTaskTransformParamFailureParamTopicParamOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamTopicParamOutput
}

type DatahubTaskTransformParamFailureParamTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
}

func (DatahubTaskTransformParamFailureParamTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParamTopicParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamFailureParamTopicParamArgs) ToDatahubTaskTransformParamFailureParamTopicParamOutput() DatahubTaskTransformParamFailureParamTopicParamOutput {
	return i.ToDatahubTaskTransformParamFailureParamTopicParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamTopicParamArgs) ToDatahubTaskTransformParamFailureParamTopicParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamTopicParamOutput)
}

func (i DatahubTaskTransformParamFailureParamTopicParamArgs) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutput() DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return i.ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFailureParamTopicParamArgs) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamTopicParamOutput).ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformParamFailureParamTopicParamPtrInput is an input type that accepts DatahubTaskTransformParamFailureParamTopicParamArgs, DatahubTaskTransformParamFailureParamTopicParamPtr and DatahubTaskTransformParamFailureParamTopicParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFailureParamTopicParamPtrInput` via:
//
//	        DatahubTaskTransformParamFailureParamTopicParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformParamFailureParamTopicParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFailureParamTopicParamPtrOutput() DatahubTaskTransformParamFailureParamTopicParamPtrOutput
	ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(context.Context) DatahubTaskTransformParamFailureParamTopicParamPtrOutput
}

type datahubTaskTransformParamFailureParamTopicParamPtrType DatahubTaskTransformParamFailureParamTopicParamArgs

func DatahubTaskTransformParamFailureParamTopicParamPtr(v *DatahubTaskTransformParamFailureParamTopicParamArgs) DatahubTaskTransformParamFailureParamTopicParamPtrInput {
	return (*datahubTaskTransformParamFailureParamTopicParamPtrType)(v)
}

func (*datahubTaskTransformParamFailureParamTopicParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParamFailureParamTopicParam)(nil)).Elem()
}

func (i *datahubTaskTransformParamFailureParamTopicParamPtrType) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutput() DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return i.ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformParamFailureParamTopicParamPtrType) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFailureParamTopicParamPtrOutput)
}

type DatahubTaskTransformParamFailureParamTopicParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFailureParamTopicParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamTopicParamOutput) ToDatahubTaskTransformParamFailureParamTopicParamOutput() DatahubTaskTransformParamFailureParamTopicParamOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamTopicParamOutput) ToDatahubTaskTransformParamFailureParamTopicParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamTopicParamOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamTopicParamOutput) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutput() DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return o.ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformParamFailureParamTopicParamOutput) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformParamFailureParamTopicParam) *DatahubTaskTransformParamFailureParamTopicParam {
		return &v
	}).(DatahubTaskTransformParamFailureParamTopicParamPtrOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTransformParamFailureParamTopicParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFailureParamTopicParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformParamFailureParamTopicParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFailureParamTopicParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformParamFailureParamTopicParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutput() DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) ToDatahubTaskTransformParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformParamFailureParamTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) Elem() DatahubTaskTransformParamFailureParamTopicParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) DatahubTaskTransformParamFailureParamTopicParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformParamFailureParamTopicParam
		return ret
	}).(DatahubTaskTransformParamFailureParamTopicParamOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTransformParamFailureParamTopicParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformParamFailureParamTopicParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformParamFilterParam struct {
	// Key.
	Key string `pulumi:"key"`
	// Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
	MatchMode string `pulumi:"matchMode"`
	// REGULAR.
	Type *string `pulumi:"type"`
	// Value.
	Value string `pulumi:"value"`
}

// DatahubTaskTransformParamFilterParamInput is an input type that accepts DatahubTaskTransformParamFilterParamArgs and DatahubTaskTransformParamFilterParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFilterParamInput` via:
//
//	DatahubTaskTransformParamFilterParamArgs{...}
type DatahubTaskTransformParamFilterParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFilterParamOutput() DatahubTaskTransformParamFilterParamOutput
	ToDatahubTaskTransformParamFilterParamOutputWithContext(context.Context) DatahubTaskTransformParamFilterParamOutput
}

type DatahubTaskTransformParamFilterParamArgs struct {
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
	MatchMode pulumi.StringInput `pulumi:"matchMode"`
	// REGULAR.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatahubTaskTransformParamFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFilterParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamFilterParamArgs) ToDatahubTaskTransformParamFilterParamOutput() DatahubTaskTransformParamFilterParamOutput {
	return i.ToDatahubTaskTransformParamFilterParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFilterParamArgs) ToDatahubTaskTransformParamFilterParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFilterParamOutput)
}

// DatahubTaskTransformParamFilterParamArrayInput is an input type that accepts DatahubTaskTransformParamFilterParamArray and DatahubTaskTransformParamFilterParamArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamFilterParamArrayInput` via:
//
//	DatahubTaskTransformParamFilterParamArray{ DatahubTaskTransformParamFilterParamArgs{...} }
type DatahubTaskTransformParamFilterParamArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamFilterParamArrayOutput() DatahubTaskTransformParamFilterParamArrayOutput
	ToDatahubTaskTransformParamFilterParamArrayOutputWithContext(context.Context) DatahubTaskTransformParamFilterParamArrayOutput
}

type DatahubTaskTransformParamFilterParamArray []DatahubTaskTransformParamFilterParamInput

func (DatahubTaskTransformParamFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamFilterParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamFilterParamArray) ToDatahubTaskTransformParamFilterParamArrayOutput() DatahubTaskTransformParamFilterParamArrayOutput {
	return i.ToDatahubTaskTransformParamFilterParamArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamFilterParamArray) ToDatahubTaskTransformParamFilterParamArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamFilterParamArrayOutput)
}

type DatahubTaskTransformParamFilterParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamFilterParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFilterParamOutput) ToDatahubTaskTransformParamFilterParamOutput() DatahubTaskTransformParamFilterParamOutput {
	return o
}

func (o DatahubTaskTransformParamFilterParamOutput) ToDatahubTaskTransformParamFilterParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamFilterParamOutput {
	return o
}

// Key.
func (o DatahubTaskTransformParamFilterParamOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFilterParam) string { return v.Key }).(pulumi.StringOutput)
}

// Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
func (o DatahubTaskTransformParamFilterParamOutput) MatchMode() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFilterParam) string { return v.MatchMode }).(pulumi.StringOutput)
}

// REGULAR.
func (o DatahubTaskTransformParamFilterParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFilterParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Value.
func (o DatahubTaskTransformParamFilterParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamFilterParam) string { return v.Value }).(pulumi.StringOutput)
}

type DatahubTaskTransformParamFilterParamArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamFilterParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamFilterParamArrayOutput) ToDatahubTaskTransformParamFilterParamArrayOutput() DatahubTaskTransformParamFilterParamArrayOutput {
	return o
}

func (o DatahubTaskTransformParamFilterParamArrayOutput) ToDatahubTaskTransformParamFilterParamArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamFilterParamArrayOutput {
	return o
}

func (o DatahubTaskTransformParamFilterParamArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformParamFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformParamFilterParam {
		return vs[0].([]DatahubTaskTransformParamFilterParam)[vs[1].(int)]
	}).(DatahubTaskTransformParamFilterParamOutput)
}

type DatahubTaskTransformParamMapParam struct {
	// key.
	Key string `pulumi:"key"`
	// Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
	Type *string `pulumi:"type"`
	// value.
	Value *string `pulumi:"value"`
}

// DatahubTaskTransformParamMapParamInput is an input type that accepts DatahubTaskTransformParamMapParamArgs and DatahubTaskTransformParamMapParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamMapParamInput` via:
//
//	DatahubTaskTransformParamMapParamArgs{...}
type DatahubTaskTransformParamMapParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamMapParamOutput() DatahubTaskTransformParamMapParamOutput
	ToDatahubTaskTransformParamMapParamOutputWithContext(context.Context) DatahubTaskTransformParamMapParamOutput
}

type DatahubTaskTransformParamMapParamArgs struct {
	// key.
	Key pulumi.StringInput `pulumi:"key"`
	// Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DatahubTaskTransformParamMapParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamMapParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamMapParamArgs) ToDatahubTaskTransformParamMapParamOutput() DatahubTaskTransformParamMapParamOutput {
	return i.ToDatahubTaskTransformParamMapParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamMapParamArgs) ToDatahubTaskTransformParamMapParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamMapParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamMapParamOutput)
}

// DatahubTaskTransformParamMapParamArrayInput is an input type that accepts DatahubTaskTransformParamMapParamArray and DatahubTaskTransformParamMapParamArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformParamMapParamArrayInput` via:
//
//	DatahubTaskTransformParamMapParamArray{ DatahubTaskTransformParamMapParamArgs{...} }
type DatahubTaskTransformParamMapParamArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformParamMapParamArrayOutput() DatahubTaskTransformParamMapParamArrayOutput
	ToDatahubTaskTransformParamMapParamArrayOutputWithContext(context.Context) DatahubTaskTransformParamMapParamArrayOutput
}

type DatahubTaskTransformParamMapParamArray []DatahubTaskTransformParamMapParamInput

func (DatahubTaskTransformParamMapParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamMapParam)(nil)).Elem()
}

func (i DatahubTaskTransformParamMapParamArray) ToDatahubTaskTransformParamMapParamArrayOutput() DatahubTaskTransformParamMapParamArrayOutput {
	return i.ToDatahubTaskTransformParamMapParamArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformParamMapParamArray) ToDatahubTaskTransformParamMapParamArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamMapParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformParamMapParamArrayOutput)
}

type DatahubTaskTransformParamMapParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamMapParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformParamMapParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamMapParamOutput) ToDatahubTaskTransformParamMapParamOutput() DatahubTaskTransformParamMapParamOutput {
	return o
}

func (o DatahubTaskTransformParamMapParamOutput) ToDatahubTaskTransformParamMapParamOutputWithContext(ctx context.Context) DatahubTaskTransformParamMapParamOutput {
	return o
}

// key.
func (o DatahubTaskTransformParamMapParamOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamMapParam) string { return v.Key }).(pulumi.StringOutput)
}

// Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
func (o DatahubTaskTransformParamMapParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamMapParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// value.
func (o DatahubTaskTransformParamMapParamOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformParamMapParam) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformParamMapParamArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformParamMapParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformParamMapParam)(nil)).Elem()
}

func (o DatahubTaskTransformParamMapParamArrayOutput) ToDatahubTaskTransformParamMapParamArrayOutput() DatahubTaskTransformParamMapParamArrayOutput {
	return o
}

func (o DatahubTaskTransformParamMapParamArrayOutput) ToDatahubTaskTransformParamMapParamArrayOutputWithContext(ctx context.Context) DatahubTaskTransformParamMapParamArrayOutput {
	return o
}

func (o DatahubTaskTransformParamMapParamArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformParamMapParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformParamMapParam {
		return vs[0].([]DatahubTaskTransformParamMapParam)[vs[1].(int)]
	}).(DatahubTaskTransformParamMapParamOutput)
}

type DatahubTaskTransformsParam struct {
	// data process.
	BatchAnalyse *DatahubTaskTransformsParamBatchAnalyse `pulumi:"batchAnalyse"`
	// Raw data.
	Content string `pulumi:"content"`
	// fail process.
	FailureParam *DatahubTaskTransformsParamFailureParam `pulumi:"failureParam"`
	// processing chain.
	FieldChains []DatahubTaskTransformsParamFieldChain `pulumi:"fieldChains"`
	// filter.
	FilterParams []DatahubTaskTransformsParamFilterParam `pulumi:"filterParams"`
	// Whether to keep the data source Topic metadata information (source Topic, Partition, Offset), the default is false.
	KeepMetadata *bool `pulumi:"keepMetadata"`
	// output format, JSON, ROW, default JSON.
	OutputFormat *string `pulumi:"outputFormat"`
	// result.
	Result *string `pulumi:"result"`
	// The output format is ROW Required.
	RowParam *DatahubTaskTransformsParamRowParam `pulumi:"rowParam"`
	// data source.
	SourceType *string `pulumi:"sourceType"`
}

// DatahubTaskTransformsParamInput is an input type that accepts DatahubTaskTransformsParamArgs and DatahubTaskTransformsParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamInput` via:
//
//	DatahubTaskTransformsParamArgs{...}
type DatahubTaskTransformsParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamOutput() DatahubTaskTransformsParamOutput
	ToDatahubTaskTransformsParamOutputWithContext(context.Context) DatahubTaskTransformsParamOutput
}

type DatahubTaskTransformsParamArgs struct {
	// data process.
	BatchAnalyse DatahubTaskTransformsParamBatchAnalysePtrInput `pulumi:"batchAnalyse"`
	// Raw data.
	Content pulumi.StringInput `pulumi:"content"`
	// fail process.
	FailureParam DatahubTaskTransformsParamFailureParamPtrInput `pulumi:"failureParam"`
	// processing chain.
	FieldChains DatahubTaskTransformsParamFieldChainArrayInput `pulumi:"fieldChains"`
	// filter.
	FilterParams DatahubTaskTransformsParamFilterParamArrayInput `pulumi:"filterParams"`
	// Whether to keep the data source Topic metadata information (source Topic, Partition, Offset), the default is false.
	KeepMetadata pulumi.BoolPtrInput `pulumi:"keepMetadata"`
	// output format, JSON, ROW, default JSON.
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// result.
	Result pulumi.StringPtrInput `pulumi:"result"`
	// The output format is ROW Required.
	RowParam DatahubTaskTransformsParamRowParamPtrInput `pulumi:"rowParam"`
	// data source.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (DatahubTaskTransformsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamArgs) ToDatahubTaskTransformsParamOutput() DatahubTaskTransformsParamOutput {
	return i.ToDatahubTaskTransformsParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamArgs) ToDatahubTaskTransformsParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamOutput)
}

func (i DatahubTaskTransformsParamArgs) ToDatahubTaskTransformsParamPtrOutput() DatahubTaskTransformsParamPtrOutput {
	return i.ToDatahubTaskTransformsParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamArgs) ToDatahubTaskTransformsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamOutput).ToDatahubTaskTransformsParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamPtrInput is an input type that accepts DatahubTaskTransformsParamArgs, DatahubTaskTransformsParamPtr and DatahubTaskTransformsParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamPtrInput` via:
//
//	        DatahubTaskTransformsParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamPtrOutput() DatahubTaskTransformsParamPtrOutput
	ToDatahubTaskTransformsParamPtrOutputWithContext(context.Context) DatahubTaskTransformsParamPtrOutput
}

type datahubTaskTransformsParamPtrType DatahubTaskTransformsParamArgs

func DatahubTaskTransformsParamPtr(v *DatahubTaskTransformsParamArgs) DatahubTaskTransformsParamPtrInput {
	return (*datahubTaskTransformsParamPtrType)(v)
}

func (*datahubTaskTransformsParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParam)(nil)).Elem()
}

func (i *datahubTaskTransformsParamPtrType) ToDatahubTaskTransformsParamPtrOutput() DatahubTaskTransformsParamPtrOutput {
	return i.ToDatahubTaskTransformsParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamPtrType) ToDatahubTaskTransformsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamPtrOutput)
}

type DatahubTaskTransformsParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamOutput) ToDatahubTaskTransformsParamOutput() DatahubTaskTransformsParamOutput {
	return o
}

func (o DatahubTaskTransformsParamOutput) ToDatahubTaskTransformsParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamOutput {
	return o
}

func (o DatahubTaskTransformsParamOutput) ToDatahubTaskTransformsParamPtrOutput() DatahubTaskTransformsParamPtrOutput {
	return o.ToDatahubTaskTransformsParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamOutput) ToDatahubTaskTransformsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParam) *DatahubTaskTransformsParam {
		return &v
	}).(DatahubTaskTransformsParamPtrOutput)
}

// data process.
func (o DatahubTaskTransformsParamOutput) BatchAnalyse() DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *DatahubTaskTransformsParamBatchAnalyse { return v.BatchAnalyse }).(DatahubTaskTransformsParamBatchAnalysePtrOutput)
}

// Raw data.
func (o DatahubTaskTransformsParamOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) string { return v.Content }).(pulumi.StringOutput)
}

// fail process.
func (o DatahubTaskTransformsParamOutput) FailureParam() DatahubTaskTransformsParamFailureParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *DatahubTaskTransformsParamFailureParam { return v.FailureParam }).(DatahubTaskTransformsParamFailureParamPtrOutput)
}

// processing chain.
func (o DatahubTaskTransformsParamOutput) FieldChains() DatahubTaskTransformsParamFieldChainArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) []DatahubTaskTransformsParamFieldChain { return v.FieldChains }).(DatahubTaskTransformsParamFieldChainArrayOutput)
}

// filter.
func (o DatahubTaskTransformsParamOutput) FilterParams() DatahubTaskTransformsParamFilterParamArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) []DatahubTaskTransformsParamFilterParam { return v.FilterParams }).(DatahubTaskTransformsParamFilterParamArrayOutput)
}

// Whether to keep the data source Topic metadata information (source Topic, Partition, Offset), the default is false.
func (o DatahubTaskTransformsParamOutput) KeepMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *bool { return v.KeepMetadata }).(pulumi.BoolPtrOutput)
}

// output format, JSON, ROW, default JSON.
func (o DatahubTaskTransformsParamOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// result.
func (o DatahubTaskTransformsParamOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *string { return v.Result }).(pulumi.StringPtrOutput)
}

// The output format is ROW Required.
func (o DatahubTaskTransformsParamOutput) RowParam() DatahubTaskTransformsParamRowParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *DatahubTaskTransformsParamRowParam { return v.RowParam }).(DatahubTaskTransformsParamRowParamPtrOutput)
}

// data source.
func (o DatahubTaskTransformsParamOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParam) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamPtrOutput) ToDatahubTaskTransformsParamPtrOutput() DatahubTaskTransformsParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamPtrOutput) ToDatahubTaskTransformsParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamPtrOutput) Elem() DatahubTaskTransformsParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) DatahubTaskTransformsParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParam
		return ret
	}).(DatahubTaskTransformsParamOutput)
}

// data process.
func (o DatahubTaskTransformsParamPtrOutput) BatchAnalyse() DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *DatahubTaskTransformsParamBatchAnalyse {
		if v == nil {
			return nil
		}
		return v.BatchAnalyse
	}).(DatahubTaskTransformsParamBatchAnalysePtrOutput)
}

// Raw data.
func (o DatahubTaskTransformsParamPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// fail process.
func (o DatahubTaskTransformsParamPtrOutput) FailureParam() DatahubTaskTransformsParamFailureParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *DatahubTaskTransformsParamFailureParam {
		if v == nil {
			return nil
		}
		return v.FailureParam
	}).(DatahubTaskTransformsParamFailureParamPtrOutput)
}

// processing chain.
func (o DatahubTaskTransformsParamPtrOutput) FieldChains() DatahubTaskTransformsParamFieldChainArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) []DatahubTaskTransformsParamFieldChain {
		if v == nil {
			return nil
		}
		return v.FieldChains
	}).(DatahubTaskTransformsParamFieldChainArrayOutput)
}

// filter.
func (o DatahubTaskTransformsParamPtrOutput) FilterParams() DatahubTaskTransformsParamFilterParamArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) []DatahubTaskTransformsParamFilterParam {
		if v == nil {
			return nil
		}
		return v.FilterParams
	}).(DatahubTaskTransformsParamFilterParamArrayOutput)
}

// Whether to keep the data source Topic metadata information (source Topic, Partition, Offset), the default is false.
func (o DatahubTaskTransformsParamPtrOutput) KeepMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *bool {
		if v == nil {
			return nil
		}
		return v.KeepMetadata
	}).(pulumi.BoolPtrOutput)
}

// output format, JSON, ROW, default JSON.
func (o DatahubTaskTransformsParamPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// result.
func (o DatahubTaskTransformsParamPtrOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *string {
		if v == nil {
			return nil
		}
		return v.Result
	}).(pulumi.StringPtrOutput)
}

// The output format is ROW Required.
func (o DatahubTaskTransformsParamPtrOutput) RowParam() DatahubTaskTransformsParamRowParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *DatahubTaskTransformsParamRowParam {
		if v == nil {
			return nil
		}
		return v.RowParam
	}).(DatahubTaskTransformsParamRowParamPtrOutput)
}

// data source.
func (o DatahubTaskTransformsParamPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParam) *string {
		if v == nil {
			return nil
		}
		return v.SourceType
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamBatchAnalyse struct {
	// ONE BY ONE single output, MERGE combined output.
	Format string `pulumi:"format"`
}

// DatahubTaskTransformsParamBatchAnalyseInput is an input type that accepts DatahubTaskTransformsParamBatchAnalyseArgs and DatahubTaskTransformsParamBatchAnalyseOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamBatchAnalyseInput` via:
//
//	DatahubTaskTransformsParamBatchAnalyseArgs{...}
type DatahubTaskTransformsParamBatchAnalyseInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamBatchAnalyseOutput() DatahubTaskTransformsParamBatchAnalyseOutput
	ToDatahubTaskTransformsParamBatchAnalyseOutputWithContext(context.Context) DatahubTaskTransformsParamBatchAnalyseOutput
}

type DatahubTaskTransformsParamBatchAnalyseArgs struct {
	// ONE BY ONE single output, MERGE combined output.
	Format pulumi.StringInput `pulumi:"format"`
}

func (DatahubTaskTransformsParamBatchAnalyseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamBatchAnalyse)(nil)).Elem()
}

func (i DatahubTaskTransformsParamBatchAnalyseArgs) ToDatahubTaskTransformsParamBatchAnalyseOutput() DatahubTaskTransformsParamBatchAnalyseOutput {
	return i.ToDatahubTaskTransformsParamBatchAnalyseOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamBatchAnalyseArgs) ToDatahubTaskTransformsParamBatchAnalyseOutputWithContext(ctx context.Context) DatahubTaskTransformsParamBatchAnalyseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamBatchAnalyseOutput)
}

func (i DatahubTaskTransformsParamBatchAnalyseArgs) ToDatahubTaskTransformsParamBatchAnalysePtrOutput() DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return i.ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamBatchAnalyseArgs) ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamBatchAnalyseOutput).ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamBatchAnalysePtrInput is an input type that accepts DatahubTaskTransformsParamBatchAnalyseArgs, DatahubTaskTransformsParamBatchAnalysePtr and DatahubTaskTransformsParamBatchAnalysePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamBatchAnalysePtrInput` via:
//
//	        DatahubTaskTransformsParamBatchAnalyseArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamBatchAnalysePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamBatchAnalysePtrOutput() DatahubTaskTransformsParamBatchAnalysePtrOutput
	ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(context.Context) DatahubTaskTransformsParamBatchAnalysePtrOutput
}

type datahubTaskTransformsParamBatchAnalysePtrType DatahubTaskTransformsParamBatchAnalyseArgs

func DatahubTaskTransformsParamBatchAnalysePtr(v *DatahubTaskTransformsParamBatchAnalyseArgs) DatahubTaskTransformsParamBatchAnalysePtrInput {
	return (*datahubTaskTransformsParamBatchAnalysePtrType)(v)
}

func (*datahubTaskTransformsParamBatchAnalysePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamBatchAnalyse)(nil)).Elem()
}

func (i *datahubTaskTransformsParamBatchAnalysePtrType) ToDatahubTaskTransformsParamBatchAnalysePtrOutput() DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return i.ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamBatchAnalysePtrType) ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamBatchAnalysePtrOutput)
}

type DatahubTaskTransformsParamBatchAnalyseOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamBatchAnalyseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamBatchAnalyse)(nil)).Elem()
}

func (o DatahubTaskTransformsParamBatchAnalyseOutput) ToDatahubTaskTransformsParamBatchAnalyseOutput() DatahubTaskTransformsParamBatchAnalyseOutput {
	return o
}

func (o DatahubTaskTransformsParamBatchAnalyseOutput) ToDatahubTaskTransformsParamBatchAnalyseOutputWithContext(ctx context.Context) DatahubTaskTransformsParamBatchAnalyseOutput {
	return o
}

func (o DatahubTaskTransformsParamBatchAnalyseOutput) ToDatahubTaskTransformsParamBatchAnalysePtrOutput() DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return o.ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamBatchAnalyseOutput) ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamBatchAnalyse) *DatahubTaskTransformsParamBatchAnalyse {
		return &v
	}).(DatahubTaskTransformsParamBatchAnalysePtrOutput)
}

// ONE BY ONE single output, MERGE combined output.
func (o DatahubTaskTransformsParamBatchAnalyseOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamBatchAnalyse) string { return v.Format }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamBatchAnalysePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamBatchAnalysePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamBatchAnalyse)(nil)).Elem()
}

func (o DatahubTaskTransformsParamBatchAnalysePtrOutput) ToDatahubTaskTransformsParamBatchAnalysePtrOutput() DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamBatchAnalysePtrOutput) ToDatahubTaskTransformsParamBatchAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamBatchAnalysePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamBatchAnalysePtrOutput) Elem() DatahubTaskTransformsParamBatchAnalyseOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamBatchAnalyse) DatahubTaskTransformsParamBatchAnalyse {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamBatchAnalyse
		return ret
	}).(DatahubTaskTransformsParamBatchAnalyseOutput)
}

// ONE BY ONE single output, MERGE combined output.
func (o DatahubTaskTransformsParamBatchAnalysePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamBatchAnalyse) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFailureParam struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType *string `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam *DatahubTaskTransformsParamFailureParamKafkaParam `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts *int `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval *int `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam *DatahubTaskTransformsParamFailureParamTopicParam `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type string `pulumi:"type"`
}

// DatahubTaskTransformsParamFailureParamInput is an input type that accepts DatahubTaskTransformsParamFailureParamArgs and DatahubTaskTransformsParamFailureParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamInput` via:
//
//	DatahubTaskTransformsParamFailureParamArgs{...}
type DatahubTaskTransformsParamFailureParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamOutput() DatahubTaskTransformsParamFailureParamOutput
	ToDatahubTaskTransformsParamFailureParamOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamOutput
}

type DatahubTaskTransformsParamFailureParamArgs struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType pulumi.StringPtrInput `pulumi:"dlqType"`
	// Ckafka type dlq.
	KafkaParam DatahubTaskTransformsParamFailureParamKafkaParamPtrInput `pulumi:"kafkaParam"`
	// retry times.
	MaxRetryAttempts pulumi.IntPtrInput `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval pulumi.IntPtrInput `pulumi:"retryInterval"`
	// DIP Topic type dead letter queue.
	TopicParam DatahubTaskTransformsParamFailureParamTopicParamPtrInput `pulumi:"topicParam"`
	// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatahubTaskTransformsParamFailureParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFailureParamArgs) ToDatahubTaskTransformsParamFailureParamOutput() DatahubTaskTransformsParamFailureParamOutput {
	return i.ToDatahubTaskTransformsParamFailureParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamArgs) ToDatahubTaskTransformsParamFailureParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamOutput)
}

func (i DatahubTaskTransformsParamFailureParamArgs) ToDatahubTaskTransformsParamFailureParamPtrOutput() DatahubTaskTransformsParamFailureParamPtrOutput {
	return i.ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamArgs) ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamOutput).ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFailureParamPtrInput is an input type that accepts DatahubTaskTransformsParamFailureParamArgs, DatahubTaskTransformsParamFailureParamPtr and DatahubTaskTransformsParamFailureParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamPtrInput` via:
//
//	        DatahubTaskTransformsParamFailureParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFailureParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamPtrOutput() DatahubTaskTransformsParamFailureParamPtrOutput
	ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamPtrOutput
}

type datahubTaskTransformsParamFailureParamPtrType DatahubTaskTransformsParamFailureParamArgs

func DatahubTaskTransformsParamFailureParamPtr(v *DatahubTaskTransformsParamFailureParamArgs) DatahubTaskTransformsParamFailureParamPtrInput {
	return (*datahubTaskTransformsParamFailureParamPtrType)(v)
}

func (*datahubTaskTransformsParamFailureParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFailureParam)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFailureParamPtrType) ToDatahubTaskTransformsParamFailureParamPtrOutput() DatahubTaskTransformsParamFailureParamPtrOutput {
	return i.ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFailureParamPtrType) ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamPtrOutput)
}

type DatahubTaskTransformsParamFailureParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamOutput) ToDatahubTaskTransformsParamFailureParamOutput() DatahubTaskTransformsParamFailureParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamOutput) ToDatahubTaskTransformsParamFailureParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamOutput) ToDatahubTaskTransformsParamFailureParamPtrOutput() DatahubTaskTransformsParamFailureParamPtrOutput {
	return o.ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFailureParamOutput) ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFailureParam) *DatahubTaskTransformsParamFailureParam {
		return &v
	}).(DatahubTaskTransformsParamFailureParamPtrOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskTransformsParamFailureParamOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParam) *string { return v.DlqType }).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskTransformsParamFailureParamOutput) KafkaParam() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParam) *DatahubTaskTransformsParamFailureParamKafkaParam {
		return v.KafkaParam
	}).(DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskTransformsParamFailureParamOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParam) *int { return v.MaxRetryAttempts }).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskTransformsParamFailureParamOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParam) *int { return v.RetryInterval }).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskTransformsParamFailureParamOutput) TopicParam() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParam) *DatahubTaskTransformsParamFailureParamTopicParam {
		return v.TopicParam
	}).(DatahubTaskTransformsParamFailureParamTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskTransformsParamFailureParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParam) string { return v.Type }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFailureParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFailureParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamPtrOutput) ToDatahubTaskTransformsParamFailureParamPtrOutput() DatahubTaskTransformsParamFailureParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamPtrOutput) ToDatahubTaskTransformsParamFailureParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamPtrOutput) Elem() DatahubTaskTransformsParamFailureParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) DatahubTaskTransformsParamFailureParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFailureParam
		return ret
	}).(DatahubTaskTransformsParamFailureParamOutput)
}

// dlq type, CKAFKA|TOPIC.
func (o DatahubTaskTransformsParamFailureParamPtrOutput) DlqType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) *string {
		if v == nil {
			return nil
		}
		return v.DlqType
	}).(pulumi.StringPtrOutput)
}

// Ckafka type dlq.
func (o DatahubTaskTransformsParamFailureParamPtrOutput) KafkaParam() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) *DatahubTaskTransformsParamFailureParamKafkaParam {
		if v == nil {
			return nil
		}
		return v.KafkaParam
	}).(DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput)
}

// retry times.
func (o DatahubTaskTransformsParamFailureParamPtrOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetryAttempts
	}).(pulumi.IntPtrOutput)
}

// retry interval.
func (o DatahubTaskTransformsParamFailureParamPtrOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) *int {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.IntPtrOutput)
}

// DIP Topic type dead letter queue.
func (o DatahubTaskTransformsParamFailureParamPtrOutput) TopicParam() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) *DatahubTaskTransformsParamFailureParamTopicParam {
		if v == nil {
			return nil
		}
		return v.TopicParam
	}).(DatahubTaskTransformsParamFailureParamTopicParamPtrOutput)
}

// type, DLQ dead letter queue, IGNORE_ERROR|DROP.
func (o DatahubTaskTransformsParamFailureParamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParam) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFailureParamKafkaParam struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType *string `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration *bool `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum *int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit *int `pulumi:"qpsLimit"`
	// instance resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName *string `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime *int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []DatahubTaskTransformsParamFailureParamKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic *string `pulumi:"topic"`
	// Topic id.
	TopicId *string `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping *bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId *int `pulumi:"zoneId"`
}

// DatahubTaskTransformsParamFailureParamKafkaParamInput is an input type that accepts DatahubTaskTransformsParamFailureParamKafkaParamArgs and DatahubTaskTransformsParamFailureParamKafkaParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamKafkaParamInput` via:
//
//	DatahubTaskTransformsParamFailureParamKafkaParamArgs{...}
type DatahubTaskTransformsParamFailureParamKafkaParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamKafkaParamOutput() DatahubTaskTransformsParamFailureParamKafkaParamOutput
	ToDatahubTaskTransformsParamFailureParamKafkaParamOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamKafkaParamOutput
}

type DatahubTaskTransformsParamFailureParamKafkaParamArgs struct {
	// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolPtrInput `pulumi:"enableToleration"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntPtrInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntPtrInput `pulumi:"qpsLimit"`
	// instance resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// whether the cluster is built by yourself instead of cloud product.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// when Offset type timestamp is required.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Topic id.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolPtrInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntPtrInput `pulumi:"zoneId"`
}

func (DatahubTaskTransformsParamFailureParamKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamArgs) ToDatahubTaskTransformsParamFailureParamKafkaParamOutput() DatahubTaskTransformsParamFailureParamKafkaParamOutput {
	return i.ToDatahubTaskTransformsParamFailureParamKafkaParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamArgs) ToDatahubTaskTransformsParamFailureParamKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamKafkaParamOutput)
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamArgs) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return i.ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamArgs) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamKafkaParamOutput).ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFailureParamKafkaParamPtrInput is an input type that accepts DatahubTaskTransformsParamFailureParamKafkaParamArgs, DatahubTaskTransformsParamFailureParamKafkaParamPtr and DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamKafkaParamPtrInput` via:
//
//	        DatahubTaskTransformsParamFailureParamKafkaParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFailureParamKafkaParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput
	ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput
}

type datahubTaskTransformsParamFailureParamKafkaParamPtrType DatahubTaskTransformsParamFailureParamKafkaParamArgs

func DatahubTaskTransformsParamFailureParamKafkaParamPtr(v *DatahubTaskTransformsParamFailureParamKafkaParamArgs) DatahubTaskTransformsParamFailureParamKafkaParamPtrInput {
	return (*datahubTaskTransformsParamFailureParamKafkaParamPtrType)(v)
}

func (*datahubTaskTransformsParamFailureParamKafkaParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFailureParamKafkaParam)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFailureParamKafkaParamPtrType) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return i.ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFailureParamKafkaParamPtrType) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput)
}

type DatahubTaskTransformsParamFailureParamKafkaParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamOutput() DatahubTaskTransformsParamFailureParamKafkaParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return o.ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFailureParamKafkaParam) *DatahubTaskTransformsParamFailureParamKafkaParam {
		return &v
	}).(DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *bool { return v.EnableToleration }).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *int { return v.PartitionNum }).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *int { return v.QpsLimit }).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) TableMappings() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) []DatahubTaskTransformsParamFailureParamKafkaParamTableMapping {
		return v.TableMappings
	}).(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *bool { return v.UseTableMapping }).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTransformsParamFailureParamKafkaParamOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParam) *int { return v.ZoneId }).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFailureParamKafkaParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutput() DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) Elem() DatahubTaskTransformsParamFailureParamKafkaParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) DatahubTaskTransformsParamFailureParamKafkaParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFailureParamKafkaParam
		return ret
	}).(DatahubTaskTransformsParamFailureParamKafkaParamOutput)
}

// Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// enable dead letter queue.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) EnableToleration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.EnableToleration
	}).(pulumi.BoolPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// the partition num of the topic.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) PartitionNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNum
	}).(pulumi.IntPtrOutput)
}

// Qps(query per seconds) limit.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) QpsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.QpsLimit
	}).(pulumi.IntPtrOutput)
}

// instance resource.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// instance name.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// whether the cluster is built by yourself instead of cloud product.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) SelfBuilt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return &v.SelfBuilt
	}).(pulumi.BoolPtrOutput)
}

// when Offset type timestamp is required.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) TableMappings() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) []DatahubTaskTransformsParamFailureParamKafkaParamTableMapping {
		if v == nil {
			return nil
		}
		return v.TableMappings
	}).(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Topic id.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

// whether to use multi table.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) UseTableMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseTableMapping
	}).(pulumi.BoolPtrOutput)
}

// Zone ID.
func (o DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput) ZoneId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamKafkaParam) *int {
		if v == nil {
			return nil
		}
		return v.ZoneId
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformsParamFailureParamKafkaParamTableMapping struct {
	// database name.
	Database string `pulumi:"database"`
	// table name,use, to separate.
	Table string `pulumi:"table"`
	// Topic name.
	Topic string `pulumi:"topic"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
}

// DatahubTaskTransformsParamFailureParamKafkaParamTableMappingInput is an input type that accepts DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs and DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamKafkaParamTableMappingInput` via:
//
//	DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs{...}
type DatahubTaskTransformsParamFailureParamKafkaParamTableMappingInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput
	ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput
}

type DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs struct {
	// database name.
	Database pulumi.StringInput `pulumi:"database"`
	// table name,use, to separate.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput {
	return i.ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput)
}

// DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayInput is an input type that accepts DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray and DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayInput` via:
//
//	DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray{ DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs{...} }
type DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput
	ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput
}

type DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray []DatahubTaskTransformsParamFailureParamKafkaParamTableMappingInput

func (DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput {
	return i.ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput)
}

type DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput {
	return o
}

// database name.
func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// table name,use, to separate.
func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name.
func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic ID.
func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFailureParamKafkaParamTableMapping)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput() DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput) ToDatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFailureParamKafkaParamTableMapping {
		return vs[0].([]DatahubTaskTransformsParamFailureParamKafkaParamTableMapping)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput)
}

type DatahubTaskTransformsParamFailureParamTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType *string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple *int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType *string `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime *int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId *string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic *bool `pulumi:"useAutoCreateTopic"`
}

// DatahubTaskTransformsParamFailureParamTopicParamInput is an input type that accepts DatahubTaskTransformsParamFailureParamTopicParamArgs and DatahubTaskTransformsParamFailureParamTopicParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamTopicParamInput` via:
//
//	DatahubTaskTransformsParamFailureParamTopicParamArgs{...}
type DatahubTaskTransformsParamFailureParamTopicParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamTopicParamOutput() DatahubTaskTransformsParamFailureParamTopicParamOutput
	ToDatahubTaskTransformsParamFailureParamTopicParamOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamTopicParamOutput
}

type DatahubTaskTransformsParamFailureParamTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntPtrInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringPtrInput `pulumi:"offsetType"`
	// The topic name of the topic sold separately.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolPtrInput `pulumi:"useAutoCreateTopic"`
}

func (DatahubTaskTransformsParamFailureParamTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParamTopicParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFailureParamTopicParamArgs) ToDatahubTaskTransformsParamFailureParamTopicParamOutput() DatahubTaskTransformsParamFailureParamTopicParamOutput {
	return i.ToDatahubTaskTransformsParamFailureParamTopicParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamTopicParamArgs) ToDatahubTaskTransformsParamFailureParamTopicParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamTopicParamOutput)
}

func (i DatahubTaskTransformsParamFailureParamTopicParamArgs) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutput() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return i.ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFailureParamTopicParamArgs) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamTopicParamOutput).ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFailureParamTopicParamPtrInput is an input type that accepts DatahubTaskTransformsParamFailureParamTopicParamArgs, DatahubTaskTransformsParamFailureParamTopicParamPtr and DatahubTaskTransformsParamFailureParamTopicParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFailureParamTopicParamPtrInput` via:
//
//	        DatahubTaskTransformsParamFailureParamTopicParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFailureParamTopicParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutput() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput
	ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFailureParamTopicParamPtrOutput
}

type datahubTaskTransformsParamFailureParamTopicParamPtrType DatahubTaskTransformsParamFailureParamTopicParamArgs

func DatahubTaskTransformsParamFailureParamTopicParamPtr(v *DatahubTaskTransformsParamFailureParamTopicParamArgs) DatahubTaskTransformsParamFailureParamTopicParamPtrInput {
	return (*datahubTaskTransformsParamFailureParamTopicParamPtrType)(v)
}

func (*datahubTaskTransformsParamFailureParamTopicParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFailureParamTopicParam)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFailureParamTopicParamPtrType) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutput() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return i.ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFailureParamTopicParamPtrType) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFailureParamTopicParamPtrOutput)
}

type DatahubTaskTransformsParamFailureParamTopicParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFailureParamTopicParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) ToDatahubTaskTransformsParamFailureParamTopicParamOutput() DatahubTaskTransformsParamFailureParamTopicParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) ToDatahubTaskTransformsParamFailureParamTopicParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamTopicParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutput() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return o.ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFailureParamTopicParam) *DatahubTaskTransformsParamFailureParamTopicParam {
		return &v
	}).(DatahubTaskTransformsParamFailureParamTopicParamPtrOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) *int { return v.MsgMultiple }).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) *string { return v.OffsetType }).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTransformsParamFailureParamTopicParamOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFailureParamTopicParam) *bool { return v.UseAutoCreateTopic }).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformsParamFailureParamTopicParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFailureParamTopicParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutput() DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) ToDatahubTaskTransformsParamFailureParamTopicParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFailureParamTopicParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) Elem() DatahubTaskTransformsParamFailureParamTopicParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) DatahubTaskTransformsParamFailureParamTopicParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFailureParamTopicParam
		return ret
	}).(DatahubTaskTransformsParamFailureParamTopicParamOutput)
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) MsgMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.MsgMultiple
	}).(pulumi.IntPtrOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) OffsetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.OffsetType
	}).(pulumi.StringPtrOutput)
}

// The topic name of the topic sold separately.
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *int {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.IntPtrOutput)
}

// Topic TopicId.
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o DatahubTaskTransformsParamFailureParamTopicParamPtrOutput) UseAutoCreateTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFailureParamTopicParam) *bool {
		if v == nil {
			return nil
		}
		return v.UseAutoCreateTopic
	}).(pulumi.BoolPtrOutput)
}

type DatahubTaskTransformsParamFieldChain struct {
	// analyze.
	Analyse DatahubTaskTransformsParamFieldChainAnalyse `pulumi:"analyse"`
	// Parsing results in JSON format.
	AnalyseJsonResult *string `pulumi:"analyseJsonResult"`
	// Analysis result.
	AnalyseResults []DatahubTaskTransformsParamFieldChainAnalyseResult `pulumi:"analyseResults"`
	// Test Results.
	Result *string `pulumi:"result"`
	// data processing.
	SMTs []DatahubTaskTransformsParamFieldChainSMT `pulumi:"sMTs"`
	// secondary analysis.
	SecondaryAnalyse *DatahubTaskTransformsParamFieldChainSecondaryAnalyse `pulumi:"secondaryAnalyse"`
	// Secondary parsing results in JSON format.
	SecondaryAnalyseJsonResult *string `pulumi:"secondaryAnalyseJsonResult"`
	// Secondary Analysis Results.
	SecondaryAnalyseResults []DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult `pulumi:"secondaryAnalyseResults"`
}

// DatahubTaskTransformsParamFieldChainInput is an input type that accepts DatahubTaskTransformsParamFieldChainArgs and DatahubTaskTransformsParamFieldChainOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainInput` via:
//
//	DatahubTaskTransformsParamFieldChainArgs{...}
type DatahubTaskTransformsParamFieldChainInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainOutput() DatahubTaskTransformsParamFieldChainOutput
	ToDatahubTaskTransformsParamFieldChainOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainOutput
}

type DatahubTaskTransformsParamFieldChainArgs struct {
	// analyze.
	Analyse DatahubTaskTransformsParamFieldChainAnalyseInput `pulumi:"analyse"`
	// Parsing results in JSON format.
	AnalyseJsonResult pulumi.StringPtrInput `pulumi:"analyseJsonResult"`
	// Analysis result.
	AnalyseResults DatahubTaskTransformsParamFieldChainAnalyseResultArrayInput `pulumi:"analyseResults"`
	// Test Results.
	Result pulumi.StringPtrInput `pulumi:"result"`
	// data processing.
	SMTs DatahubTaskTransformsParamFieldChainSMTArrayInput `pulumi:"sMTs"`
	// secondary analysis.
	SecondaryAnalyse DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrInput `pulumi:"secondaryAnalyse"`
	// Secondary parsing results in JSON format.
	SecondaryAnalyseJsonResult pulumi.StringPtrInput `pulumi:"secondaryAnalyseJsonResult"`
	// Secondary Analysis Results.
	SecondaryAnalyseResults DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayInput `pulumi:"secondaryAnalyseResults"`
}

func (DatahubTaskTransformsParamFieldChainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChain)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainArgs) ToDatahubTaskTransformsParamFieldChainOutput() DatahubTaskTransformsParamFieldChainOutput {
	return i.ToDatahubTaskTransformsParamFieldChainOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainArgs) ToDatahubTaskTransformsParamFieldChainOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainOutput)
}

// DatahubTaskTransformsParamFieldChainArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainArray and DatahubTaskTransformsParamFieldChainArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainArray{ DatahubTaskTransformsParamFieldChainArgs{...} }
type DatahubTaskTransformsParamFieldChainArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainArrayOutput() DatahubTaskTransformsParamFieldChainArrayOutput
	ToDatahubTaskTransformsParamFieldChainArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainArrayOutput
}

type DatahubTaskTransformsParamFieldChainArray []DatahubTaskTransformsParamFieldChainInput

func (DatahubTaskTransformsParamFieldChainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChain)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainArray) ToDatahubTaskTransformsParamFieldChainArrayOutput() DatahubTaskTransformsParamFieldChainArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainArray) ToDatahubTaskTransformsParamFieldChainArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainArrayOutput)
}

type DatahubTaskTransformsParamFieldChainOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChain)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainOutput) ToDatahubTaskTransformsParamFieldChainOutput() DatahubTaskTransformsParamFieldChainOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainOutput) ToDatahubTaskTransformsParamFieldChainOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainOutput {
	return o
}

// analyze.
func (o DatahubTaskTransformsParamFieldChainOutput) Analyse() DatahubTaskTransformsParamFieldChainAnalyseOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) DatahubTaskTransformsParamFieldChainAnalyse {
		return v.Analyse
	}).(DatahubTaskTransformsParamFieldChainAnalyseOutput)
}

// Parsing results in JSON format.
func (o DatahubTaskTransformsParamFieldChainOutput) AnalyseJsonResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) *string { return v.AnalyseJsonResult }).(pulumi.StringPtrOutput)
}

// Analysis result.
func (o DatahubTaskTransformsParamFieldChainOutput) AnalyseResults() DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) []DatahubTaskTransformsParamFieldChainAnalyseResult {
		return v.AnalyseResults
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput)
}

// Test Results.
func (o DatahubTaskTransformsParamFieldChainOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) *string { return v.Result }).(pulumi.StringPtrOutput)
}

// data processing.
func (o DatahubTaskTransformsParamFieldChainOutput) SMTs() DatahubTaskTransformsParamFieldChainSMTArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) []DatahubTaskTransformsParamFieldChainSMT { return v.SMTs }).(DatahubTaskTransformsParamFieldChainSMTArrayOutput)
}

// secondary analysis.
func (o DatahubTaskTransformsParamFieldChainOutput) SecondaryAnalyse() DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) *DatahubTaskTransformsParamFieldChainSecondaryAnalyse {
		return v.SecondaryAnalyse
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput)
}

// Secondary parsing results in JSON format.
func (o DatahubTaskTransformsParamFieldChainOutput) SecondaryAnalyseJsonResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) *string { return v.SecondaryAnalyseJsonResult }).(pulumi.StringPtrOutput)
}

// Secondary Analysis Results.
func (o DatahubTaskTransformsParamFieldChainOutput) SecondaryAnalyseResults() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChain) []DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult {
		return v.SecondaryAnalyseResults
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput)
}

type DatahubTaskTransformsParamFieldChainArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChain)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainArrayOutput) ToDatahubTaskTransformsParamFieldChainArrayOutput() DatahubTaskTransformsParamFieldChainArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainArrayOutput) ToDatahubTaskTransformsParamFieldChainArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChain {
		return vs[0].([]DatahubTaskTransformsParamFieldChain)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyse struct {
	// Parsing format, JSON, DELIMITER delimiter, REGULAR regular extraction, SOURCE processing all results of the upper layer.
	Format string `pulumi:"format"`
	// KEY to be processed again - KEY expression.
	InputValue *string `pulumi:"inputValue"`
	// KEY to be processed again - mode.
	InputValueType *string `pulumi:"inputValueType"`
	// delimiter, regular expression.
	Regex *string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainAnalyseInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseArgs and DatahubTaskTransformsParamFieldChainAnalyseOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseOutput() DatahubTaskTransformsParamFieldChainAnalyseOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseArgs struct {
	// Parsing format, JSON, DELIMITER delimiter, REGULAR regular extraction, SOURCE processing all results of the upper layer.
	Format pulumi.StringInput `pulumi:"format"`
	// KEY to be processed again - KEY expression.
	InputValue pulumi.StringPtrInput `pulumi:"inputValue"`
	// KEY to be processed again - mode.
	InputValueType pulumi.StringPtrInput `pulumi:"inputValueType"`
	// delimiter, regular expression.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyse)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseArgs) ToDatahubTaskTransformsParamFieldChainAnalyseOutput() DatahubTaskTransformsParamFieldChainAnalyseOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseArgs) ToDatahubTaskTransformsParamFieldChainAnalyseOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyse)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseOutput) ToDatahubTaskTransformsParamFieldChainAnalyseOutput() DatahubTaskTransformsParamFieldChainAnalyseOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseOutput) ToDatahubTaskTransformsParamFieldChainAnalyseOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseOutput {
	return o
}

// Parsing format, JSON, DELIMITER delimiter, REGULAR regular extraction, SOURCE processing all results of the upper layer.
func (o DatahubTaskTransformsParamFieldChainAnalyseOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyse) string { return v.Format }).(pulumi.StringOutput)
}

// KEY to be processed again - KEY expression.
func (o DatahubTaskTransformsParamFieldChainAnalyseOutput) InputValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyse) *string { return v.InputValue }).(pulumi.StringPtrOutput)
}

// KEY to be processed again - mode.
func (o DatahubTaskTransformsParamFieldChainAnalyseOutput) InputValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyse) *string { return v.InputValueType }).(pulumi.StringPtrOutput)
}

// delimiter, regular expression.
func (o DatahubTaskTransformsParamFieldChainAnalyseOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyse) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResult struct {
	// key.
	Key string `pulumi:"key"`
	// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
	Operate string `pulumi:"operate"`
	// OriginalValue.
	OriginalValue *string `pulumi:"originalValue"`
	// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
	SchemeType string `pulumi:"schemeType"`
	// value.
	Value *string `pulumi:"value"`
	// VALUE process.
	ValueOperate *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate `pulumi:"valueOperate"`
	// VALUE process chain.
	ValueOperates []DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate `pulumi:"valueOperates"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultArgs and DatahubTaskTransformsParamFieldChainAnalyseResultOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultOutput() DatahubTaskTransformsParamFieldChainAnalyseResultOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultArgs struct {
	// key.
	Key pulumi.StringInput `pulumi:"key"`
	// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
	Operate pulumi.StringInput `pulumi:"operate"`
	// OriginalValue.
	OriginalValue pulumi.StringPtrInput `pulumi:"originalValue"`
	// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
	SchemeType pulumi.StringInput `pulumi:"schemeType"`
	// value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// VALUE process.
	ValueOperate DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrInput `pulumi:"valueOperate"`
	// VALUE process chain.
	ValueOperates DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayInput `pulumi:"valueOperates"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResult)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultOutput() DatahubTaskTransformsParamFieldChainAnalyseResultOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultOutput)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultArray and DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultArray{ DatahubTaskTransformsParamFieldChainAnalyseResultArgs{...} }
type DatahubTaskTransformsParamFieldChainAnalyseResultArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput() DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultArray []DatahubTaskTransformsParamFieldChainAnalyseResultInput

func (DatahubTaskTransformsParamFieldChainAnalyseResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainAnalyseResult)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultArray) ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput() DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultArray) ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResult)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultOutput() DatahubTaskTransformsParamFieldChainAnalyseResultOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultOutput {
	return o
}

// key.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) string { return v.Key }).(pulumi.StringOutput)
}

// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) Operate() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) string { return v.Operate }).(pulumi.StringOutput)
}

// OriginalValue.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) OriginalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) *string { return v.OriginalValue }).(pulumi.StringPtrOutput)
}

// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) SchemeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) string { return v.SchemeType }).(pulumi.StringOutput)
}

// value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// VALUE process.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) ValueOperate() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
		return v.ValueOperate
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput)
}

// VALUE process chain.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultOutput) ValueOperates() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResult) []DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
		return v.ValueOperates
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainAnalyseResult)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput() DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainAnalyseResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChainAnalyseResult {
		return vs[0].([]DatahubTaskTransformsParamFieldChainAnalyseResult)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate struct {
	// Time conversion, required when TYPE=DATE.
	Date *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate `pulumi:"date"`
	// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
	JsonPathReplace *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace `pulumi:"jsonPathReplace"`
	// Key-value secondary analysis, must be passed when TYPE=KV.
	KV *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV `pulumi:"kV"`
	// Regular replacement, required when TYPE=REGEX REPLACE.
	RegexReplace *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace `pulumi:"regexReplace"`
	// replace, TYPE=REPLACE is required.
	Replace *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace `pulumi:"replace"`
	// result.
	Result *string `pulumi:"result"`
	// The value supports one split and multiple values, required when TYPE=SPLIT.
	Split *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit `pulumi:"split"`
	// Substr, TYPE=SUBSTR is required.
	Substr *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr `pulumi:"substr"`
	// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
	Type string `pulumi:"type"`
	// Url parsing.
	UrlDecode *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode `pulumi:"urlDecode"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs struct {
	// Time conversion, required when TYPE=DATE.
	Date DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrInput `pulumi:"date"`
	// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
	JsonPathReplace DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrInput `pulumi:"jsonPathReplace"`
	// Key-value secondary analysis, must be passed when TYPE=KV.
	KV DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrInput `pulumi:"kV"`
	// Regular replacement, required when TYPE=REGEX REPLACE.
	RegexReplace DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrInput `pulumi:"regexReplace"`
	// replace, TYPE=REPLACE is required.
	Replace DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrInput `pulumi:"replace"`
	// result.
	Result pulumi.StringPtrInput `pulumi:"result"`
	// The value supports one split and multiple values, required when TYPE=SPLIT.
	Split DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrInput `pulumi:"split"`
	// Substr, TYPE=SUBSTR is required.
	Substr DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrInput `pulumi:"substr"`
	// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
	Type pulumi.StringInput `pulumi:"type"`
	// Url parsing.
	UrlDecode DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrInput `pulumi:"urlDecode"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray{ DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs{...} }
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray []DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateInput

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput)
}

// Time conversion, required when TYPE=DATE.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) Date() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
		return v.Date
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput)
}

// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) JsonPathReplace() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
		return v.JsonPathReplace
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

// Key-value secondary analysis, must be passed when TYPE=KV.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) KV() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
		return v.KV
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput)
}

// Regular replacement, required when TYPE=REGEX REPLACE.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) RegexReplace() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
		return v.RegexReplace
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput)
}

// replace, TYPE=REPLACE is required.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) Replace() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
		return v.Replace
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput)
}

// result.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *string { return v.Result }).(pulumi.StringPtrOutput)
}

// The value supports one split and multiple values, required when TYPE=SPLIT.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) Split() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
		return v.Split
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput)
}

// Substr, TYPE=SUBSTR is required.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) Substr() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
		return v.Substr
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput)
}

// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) string { return v.Type }).(pulumi.StringOutput)
}

// Url parsing.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput) UrlDecode() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
		return v.UrlDecode
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput)
}

// Time conversion, required when TYPE=DATE.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Date() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
		if v == nil {
			return nil
		}
		return v.Date
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput)
}

// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) JsonPathReplace() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
		if v == nil {
			return nil
		}
		return v.JsonPathReplace
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

// Key-value secondary analysis, must be passed when TYPE=KV.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) KV() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
		if v == nil {
			return nil
		}
		return v.KV
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput)
}

// Regular replacement, required when TYPE=REGEX REPLACE.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) RegexReplace() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
		if v == nil {
			return nil
		}
		return v.RegexReplace
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput)
}

// replace, TYPE=REPLACE is required.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Replace() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
		if v == nil {
			return nil
		}
		return v.Replace
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput)
}

// result.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *string {
		if v == nil {
			return nil
		}
		return v.Result
	}).(pulumi.StringPtrOutput)
}

// The value supports one split and multiple values, required when TYPE=SPLIT.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Split() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
		if v == nil {
			return nil
		}
		return v.Split
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput)
}

// Substr, TYPE=SUBSTR is required.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Substr() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
		if v == nil {
			return nil
		}
		return v.Substr
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput)
}

// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Url parsing.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput) UrlDecode() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
		if v == nil {
			return nil
		}
		return v.UrlDecode
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
		return vs[0].([]DatahubTaskTransformsParamFieldChainAnalyseResultValueOperate)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate struct {
	// Time format.
	Format *string `pulumi:"format"`
	// input type, string|unix.
	TargetType *string `pulumi:"targetType"`
	// default GMT+8.
	TimeZone *string `pulumi:"timeZone"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs struct {
	// Time format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// input type, string|unix.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
	// default GMT+8.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput)
}

// Time format.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// input type, string|unix.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

// default GMT+8.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput)
}

// Time format.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// input type, string|unix.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

// default GMT+8.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace struct {
	// Replacement value, Jsonpath expression or string.
	NewValue string `pulumi:"newValue"`
	// Replaced value, Jsonpath expression.
	OldValue string `pulumi:"oldValue"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs struct {
	// Replacement value, Jsonpath expression or string.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Replaced value, Jsonpath expression.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

// Replacement value, Jsonpath expression or string.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) string {
		return v.NewValue
	}).(pulumi.StringOutput)
}

// Replaced value, Jsonpath expression.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) string {
		return v.OldValue
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput)
}

// Replacement value, Jsonpath expression or string.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// Replaced value, Jsonpath expression.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) *string {
		if v == nil {
			return nil
		}
		return &v.OldValue
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV struct {
	// delimiter.
	Delimiter string `pulumi:"delimiter"`
	// Keep the source Key, the default is false not to keep.
	KeepOriginalKey *string `pulumi:"keepOriginalKey"`
	// Key-value secondary analysis delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs struct {
	// delimiter.
	Delimiter pulumi.StringInput `pulumi:"delimiter"`
	// Keep the source Key, the default is false not to keep.
	KeepOriginalKey pulumi.StringPtrInput `pulumi:"keepOriginalKey"`
	// Key-value secondary analysis delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) string { return v.Delimiter }).(pulumi.StringOutput)
}

// Keep the source Key, the default is false not to keep.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) KeepOriginalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) *string {
		return v.KeepOriginalKey
	}).(pulumi.StringPtrOutput)
}

// Key-value secondary analysis delimiter.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) string { return v.Regex }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return &v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Keep the source Key, the default is false not to keep.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) KeepOriginalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return v.KeepOriginalKey
	}).(pulumi.StringPtrOutput)
}

// Key-value secondary analysis delimiter.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace struct {
	// new value.
	NewValue string `pulumi:"newValue"`
	// Regular.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs struct {
	// new value.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Regular.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) string {
		return v.NewValue
	}).(pulumi.StringOutput)
}

// Regular.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) string {
		return v.Regex
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// Regular.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace struct {
	// new value.
	NewValue string `pulumi:"newValue"`
	// been replaced value.
	OldValue string `pulumi:"oldValue"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs struct {
	// new value.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// been replaced value.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) string { return v.NewValue }).(pulumi.StringOutput)
}

// been replaced value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) string { return v.OldValue }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// been replaced value.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) *string {
		if v == nil {
			return nil
		}
		return &v.OldValue
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit struct {
	// delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs struct {
	// delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit) string { return v.Regex }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr struct {
	// cut-off position.
	End int `pulumi:"end"`
	// interception starting position.
	Start int `pulumi:"start"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs struct {
	// cut-off position.
	End pulumi.IntInput `pulumi:"end"`
	// interception starting position.
	Start pulumi.IntInput `pulumi:"start"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput)
}

// cut-off position.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) int { return v.End }).(pulumi.IntOutput)
}

// interception starting position.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) int { return v.Start }).(pulumi.IntOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput)
}

// cut-off position.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// interception starting position.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode struct {
	// code.
	CharsetName *string `pulumi:"charsetName"`
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeInput` via:
//
//	DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs{...}
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs struct {
	// code.
	CharsetName pulumi.StringPtrInput `pulumi:"charsetName"`
}

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput)
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput).ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs, DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtr and DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput
	ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput
}

type datahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrType DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs

func DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtr(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrInput {
	return (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrType) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode) *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
		return &v
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput)
}

// code.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput) CharsetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode) *string {
		return v.CharsetName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput) ToDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput) Elem() DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode) DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode
		return ret
	}).(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput)
}

// code.
func (o DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput) CharsetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode) *string {
		if v == nil {
			return nil
		}
		return v.CharsetName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMT struct {
	// KEY.
	Key string `pulumi:"key"`
	// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
	Operate string `pulumi:"operate"`
	// OriginalValue.
	OriginalValue *string `pulumi:"originalValue"`
	// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
	SchemeType string `pulumi:"schemeType"`
	// VALUE.
	Value *string `pulumi:"value"`
	// VALUE process.
	ValueOperate *DatahubTaskTransformsParamFieldChainSMTValueOperate `pulumi:"valueOperate"`
	// VALUE process chain.
	ValueOperates []DatahubTaskTransformsParamFieldChainSMTValueOperate `pulumi:"valueOperates"`
}

// DatahubTaskTransformsParamFieldChainSMTInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTArgs and DatahubTaskTransformsParamFieldChainSMTOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTArgs{...}
type DatahubTaskTransformsParamFieldChainSMTInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTOutput() DatahubTaskTransformsParamFieldChainSMTOutput
	ToDatahubTaskTransformsParamFieldChainSMTOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTOutput
}

type DatahubTaskTransformsParamFieldChainSMTArgs struct {
	// KEY.
	Key pulumi.StringInput `pulumi:"key"`
	// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
	Operate pulumi.StringInput `pulumi:"operate"`
	// OriginalValue.
	OriginalValue pulumi.StringPtrInput `pulumi:"originalValue"`
	// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
	SchemeType pulumi.StringInput `pulumi:"schemeType"`
	// VALUE.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// VALUE process.
	ValueOperate DatahubTaskTransformsParamFieldChainSMTValueOperatePtrInput `pulumi:"valueOperate"`
	// VALUE process chain.
	ValueOperates DatahubTaskTransformsParamFieldChainSMTValueOperateArrayInput `pulumi:"valueOperates"`
}

func (DatahubTaskTransformsParamFieldChainSMTArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMT)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTArgs) ToDatahubTaskTransformsParamFieldChainSMTOutput() DatahubTaskTransformsParamFieldChainSMTOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTArgs) ToDatahubTaskTransformsParamFieldChainSMTOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTOutput)
}

// DatahubTaskTransformsParamFieldChainSMTArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTArray and DatahubTaskTransformsParamFieldChainSMTArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTArray{ DatahubTaskTransformsParamFieldChainSMTArgs{...} }
type DatahubTaskTransformsParamFieldChainSMTArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTArrayOutput() DatahubTaskTransformsParamFieldChainSMTArrayOutput
	ToDatahubTaskTransformsParamFieldChainSMTArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTArrayOutput
}

type DatahubTaskTransformsParamFieldChainSMTArray []DatahubTaskTransformsParamFieldChainSMTInput

func (DatahubTaskTransformsParamFieldChainSMTArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSMT)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTArray) ToDatahubTaskTransformsParamFieldChainSMTArrayOutput() DatahubTaskTransformsParamFieldChainSMTArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTArray) ToDatahubTaskTransformsParamFieldChainSMTArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTArrayOutput)
}

type DatahubTaskTransformsParamFieldChainSMTOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMT)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTOutput) ToDatahubTaskTransformsParamFieldChainSMTOutput() DatahubTaskTransformsParamFieldChainSMTOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTOutput) ToDatahubTaskTransformsParamFieldChainSMTOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTOutput {
	return o
}

// KEY.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) string { return v.Key }).(pulumi.StringOutput)
}

// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) Operate() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) string { return v.Operate }).(pulumi.StringOutput)
}

// OriginalValue.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) OriginalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) *string { return v.OriginalValue }).(pulumi.StringPtrOutput)
}

// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) SchemeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) string { return v.SchemeType }).(pulumi.StringOutput)
}

// VALUE.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// VALUE process.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) ValueOperate() DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) *DatahubTaskTransformsParamFieldChainSMTValueOperate {
		return v.ValueOperate
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput)
}

// VALUE process chain.
func (o DatahubTaskTransformsParamFieldChainSMTOutput) ValueOperates() DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMT) []DatahubTaskTransformsParamFieldChainSMTValueOperate {
		return v.ValueOperates
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput)
}

type DatahubTaskTransformsParamFieldChainSMTArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSMT)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTArrayOutput) ToDatahubTaskTransformsParamFieldChainSMTArrayOutput() DatahubTaskTransformsParamFieldChainSMTArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTArrayOutput) ToDatahubTaskTransformsParamFieldChainSMTArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainSMTOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChainSMT {
		return vs[0].([]DatahubTaskTransformsParamFieldChainSMT)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainSMTOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperate struct {
	// Time conversion, required when TYPE=DATE.
	Date *DatahubTaskTransformsParamFieldChainSMTValueOperateDate `pulumi:"date"`
	// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
	JsonPathReplace *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace `pulumi:"jsonPathReplace"`
	// Key-value secondary analysis, must be passed when TYPE=KV.
	KV *DatahubTaskTransformsParamFieldChainSMTValueOperateKV `pulumi:"kV"`
	// Regular replacement, required when TYPE=REGEX REPLACE.
	RegexReplace *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace `pulumi:"regexReplace"`
	// replace, TYPE=REPLACE is required.
	Replace *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace `pulumi:"replace"`
	// result.
	Result *string `pulumi:"result"`
	// The value supports one split and multiple values, required when TYPE=SPLIT.
	Split *DatahubTaskTransformsParamFieldChainSMTValueOperateSplit `pulumi:"split"`
	// Substr, TYPE=SUBSTR is required.
	Substr *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr `pulumi:"substr"`
	// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
	Type string `pulumi:"type"`
	// Url parsing.
	UrlDecode *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode `pulumi:"urlDecode"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateArgs struct {
	// Time conversion, required when TYPE=DATE.
	Date DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrInput `pulumi:"date"`
	// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
	JsonPathReplace DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrInput `pulumi:"jsonPathReplace"`
	// Key-value secondary analysis, must be passed when TYPE=KV.
	KV DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrInput `pulumi:"kV"`
	// Regular replacement, required when TYPE=REGEX REPLACE.
	RegexReplace DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrInput `pulumi:"regexReplace"`
	// replace, TYPE=REPLACE is required.
	Replace DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrInput `pulumi:"replace"`
	// result.
	Result pulumi.StringPtrInput `pulumi:"result"`
	// The value supports one split and multiple values, required when TYPE=SPLIT.
	Split DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrInput `pulumi:"split"`
	// Substr, TYPE=SUBSTR is required.
	Substr DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrInput `pulumi:"substr"`
	// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
	Type pulumi.StringInput `pulumi:"type"`
	// Url parsing.
	UrlDecode DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrInput `pulumi:"urlDecode"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperatePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateArgs, DatahubTaskTransformsParamFieldChainSMTValueOperatePtr and DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperatePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperatePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperatePtrType DatahubTaskTransformsParamFieldChainSMTValueOperateArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperatePtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateArgs) DatahubTaskTransformsParamFieldChainSMTValueOperatePtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperatePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperate)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperatePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperatePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateArray and DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateArray{ DatahubTaskTransformsParamFieldChainSMTValueOperateArgs{...} }
type DatahubTaskTransformsParamFieldChainSMTValueOperateArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateArray []DatahubTaskTransformsParamFieldChainSMTValueOperateInput

func (DatahubTaskTransformsParamFieldChainSMTValueOperateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSMTValueOperate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateArray) ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateArray) ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperate {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput)
}

// Time conversion, required when TYPE=DATE.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) Date() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateDate {
		return v.Date
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput)
}

// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) JsonPathReplace() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
		return v.JsonPathReplace
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput)
}

// Key-value secondary analysis, must be passed when TYPE=KV.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) KV() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateKV {
		return v.KV
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput)
}

// Regular replacement, required when TYPE=REGEX REPLACE.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) RegexReplace() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
		return v.RegexReplace
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput)
}

// replace, TYPE=REPLACE is required.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) Replace() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
		return v.Replace
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput)
}

// result.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *string { return v.Result }).(pulumi.StringPtrOutput)
}

// The value supports one split and multiple values, required when TYPE=SPLIT.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) Split() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
		return v.Split
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput)
}

// Substr, TYPE=SUBSTR is required.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) Substr() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
		return v.Substr
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput)
}

// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) string { return v.Type }).(pulumi.StringOutput)
}

// Url parsing.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateOutput) UrlDecode() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
		return v.UrlDecode
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) DatahubTaskTransformsParamFieldChainSMTValueOperate {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperate
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateOutput)
}

// Time conversion, required when TYPE=DATE.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Date() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateDate {
		if v == nil {
			return nil
		}
		return v.Date
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput)
}

// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) JsonPathReplace() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
		if v == nil {
			return nil
		}
		return v.JsonPathReplace
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput)
}

// Key-value secondary analysis, must be passed when TYPE=KV.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) KV() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateKV {
		if v == nil {
			return nil
		}
		return v.KV
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput)
}

// Regular replacement, required when TYPE=REGEX REPLACE.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) RegexReplace() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
		if v == nil {
			return nil
		}
		return v.RegexReplace
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput)
}

// replace, TYPE=REPLACE is required.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Replace() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
		if v == nil {
			return nil
		}
		return v.Replace
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput)
}

// result.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *string {
		if v == nil {
			return nil
		}
		return v.Result
	}).(pulumi.StringPtrOutput)
}

// The value supports one split and multiple values, required when TYPE=SPLIT.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Split() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
		if v == nil {
			return nil
		}
		return v.Split
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput)
}

// Substr, TYPE=SUBSTR is required.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Substr() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
		if v == nil {
			return nil
		}
		return v.Substr
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput)
}

// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Url parsing.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput) UrlDecode() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperate) *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
		if v == nil {
			return nil
		}
		return v.UrlDecode
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSMTValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainSMTValueOperateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChainSMTValueOperate {
		return vs[0].([]DatahubTaskTransformsParamFieldChainSMTValueOperate)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateDate struct {
	// Time format.
	Format *string `pulumi:"format"`
	// input type, string|unix.
	TargetType *string `pulumi:"targetType"`
	// default GMT+8.
	TimeZone *string `pulumi:"timeZone"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateDateInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateDateInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateDateInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs struct {
	// Time format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// input type, string|unix.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
	// default GMT+8.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateDate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtr and DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateDatePtrType DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateDatePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateDate)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateDatePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateDatePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateDate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *DatahubTaskTransformsParamFieldChainSMTValueOperateDate {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput)
}

// Time format.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// input type, string|unix.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

// default GMT+8.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateDate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateDate) DatahubTaskTransformsParamFieldChainSMTValueOperateDate {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateDate
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput)
}

// Time format.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// input type, string|unix.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

// default GMT+8.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace struct {
	// Replacement value, Jsonpath expression or string.
	NewValue string `pulumi:"newValue"`
	// Replaced value, Jsonpath expression.
	OldValue string `pulumi:"oldValue"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs struct {
	// Replacement value, Jsonpath expression or string.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Replaced value, Jsonpath expression.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtr and DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrType DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput)
}

// Replacement value, Jsonpath expression or string.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) string { return v.NewValue }).(pulumi.StringOutput)
}

// Replaced value, Jsonpath expression.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) string { return v.OldValue }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput)
}

// Replacement value, Jsonpath expression or string.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// Replaced value, Jsonpath expression.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) *string {
		if v == nil {
			return nil
		}
		return &v.OldValue
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateKV struct {
	// delimiter.
	Delimiter string `pulumi:"delimiter"`
	// Keep the source Key, the default is false not to keep.
	KeepOriginalKey *string `pulumi:"keepOriginalKey"`
	// Key-value secondary analysis delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateKVInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateKVInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateKVInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs struct {
	// delimiter.
	Delimiter pulumi.StringInput `pulumi:"delimiter"`
	// Keep the source Key, the default is false not to keep.
	KeepOriginalKey pulumi.StringPtrInput `pulumi:"keepOriginalKey"`
	// Key-value secondary analysis delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateKV)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtr and DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateKVPtrType DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateKVPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateKVPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateKV)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateKVPtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateKVPtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateKV)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateKV) *DatahubTaskTransformsParamFieldChainSMTValueOperateKV {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateKV) string { return v.Delimiter }).(pulumi.StringOutput)
}

// Keep the source Key, the default is false not to keep.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) KeepOriginalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateKV) *string { return v.KeepOriginalKey }).(pulumi.StringPtrOutput)
}

// Key-value secondary analysis delimiter.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateKV) string { return v.Regex }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateKV)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateKV) DatahubTaskTransformsParamFieldChainSMTValueOperateKV {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateKV
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return &v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Keep the source Key, the default is false not to keep.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) KeepOriginalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return v.KeepOriginalKey
	}).(pulumi.StringPtrOutput)
}

// Key-value secondary analysis delimiter.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace struct {
	// new value.
	NewValue string `pulumi:"newValue"`
	// Regular.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs struct {
	// new value.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Regular.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtr and DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrType DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) string { return v.NewValue }).(pulumi.StringOutput)
}

// Regular.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) string { return v.Regex }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// Regular.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateReplace struct {
	// new value.
	NewValue string `pulumi:"newValue"`
	// been replaced value.
	OldValue string `pulumi:"oldValue"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs struct {
	// new value.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// been replaced value.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtr and DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrType DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateReplace) *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateReplace) string { return v.NewValue }).(pulumi.StringOutput)
}

// been replaced value.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateReplace) string { return v.OldValue }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace) DatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// been replaced value.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateReplace) *string {
		if v == nil {
			return nil
		}
		return &v.OldValue
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSplit struct {
	// delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateSplitInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateSplitInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateSplitInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs struct {
	// delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSplit)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtr and DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrType DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateSplit)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSplit)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateSplit) *DatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateSplit) string { return v.Regex }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateSplit)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSplit) DatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateSplit
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSplit) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr struct {
	// cut-off position.
	End int `pulumi:"end"`
	// interception starting position.
	Start int `pulumi:"start"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs struct {
	// cut-off position.
	End pulumi.IntInput `pulumi:"end"`
	// interception starting position.
	Start pulumi.IntInput `pulumi:"start"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtr and DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrType DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput)
}

// cut-off position.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) int { return v.End }).(pulumi.IntOutput)
}

// interception starting position.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) int { return v.Start }).(pulumi.IntOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput)
}

// cut-off position.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// interception starting position.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode struct {
	// code.
	CharsetName *string `pulumi:"charsetName"`
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs and DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeInput` via:
//
//	DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs{...}
type DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs struct {
	// code.
	CharsetName pulumi.StringPtrInput `pulumi:"charsetName"`
}

func (DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput)
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput).ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs, DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtr and DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput
	ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput
}

type datahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrType DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs

func DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtr(v *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrInput {
	return (*datahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrType) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode) *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput)
}

// code.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput) CharsetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode) *string { return v.CharsetName }).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput) ToDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode) DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode
		return ret
	}).(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput)
}

// code.
func (o DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput) CharsetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode) *string {
		if v == nil {
			return nil
		}
		return v.CharsetName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyse struct {
	// delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs struct {
	// delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyse)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalysePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalysePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalysePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalysePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalysePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyse)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalysePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalysePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyse)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyse) *DatahubTaskTransformsParamFieldChainSecondaryAnalyse {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyse) string { return v.Regex }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyse)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyse) DatahubTaskTransformsParamFieldChainSecondaryAnalyse {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyse
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyse) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult struct {
	// KEY.
	Key string `pulumi:"key"`
	// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
	Operate string `pulumi:"operate"`
	// OriginalValue.
	OriginalValue *string `pulumi:"originalValue"`
	// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
	SchemeType string `pulumi:"schemeType"`
	// VALUE.
	Value *string `pulumi:"value"`
	// VALUE process.
	ValueOperate *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate `pulumi:"valueOperate"`
	// VALUE process chain.
	ValueOperates []DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate `pulumi:"valueOperates"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs struct {
	// KEY.
	Key pulumi.StringInput `pulumi:"key"`
	// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
	Operate pulumi.StringInput `pulumi:"operate"`
	// OriginalValue.
	OriginalValue pulumi.StringPtrInput `pulumi:"originalValue"`
	// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
	SchemeType pulumi.StringInput `pulumi:"schemeType"`
	// VALUE.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// VALUE process.
	ValueOperate DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrInput `pulumi:"valueOperate"`
	// VALUE process chain.
	ValueOperates DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayInput `pulumi:"valueOperates"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray{ DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs{...} }
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray []DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultInput

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput {
	return o
}

// KEY.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) string { return v.Key }).(pulumi.StringOutput)
}

// Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) Operate() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) string { return v.Operate }).(pulumi.StringOutput)
}

// OriginalValue.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) OriginalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) *string { return v.OriginalValue }).(pulumi.StringPtrOutput)
}

// data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) SchemeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) string { return v.SchemeType }).(pulumi.StringOutput)
}

// VALUE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// VALUE process.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) ValueOperate() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
		return v.ValueOperate
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput)
}

// VALUE process chain.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput) ValueOperates() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult) []DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
		return v.ValueOperates
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult {
		return vs[0].([]DatahubTaskTransformsParamFieldChainSecondaryAnalyseResult)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate struct {
	// Time conversion, required when TYPE=DATE.
	Date *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate `pulumi:"date"`
	// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
	JsonPathReplace *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace `pulumi:"jsonPathReplace"`
	// Key-value secondary analysis, must be passed when TYPE=KV.
	KV *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV `pulumi:"kV"`
	// Regular replacement, required when TYPE=REGEX REPLACE.
	RegexReplace *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace `pulumi:"regexReplace"`
	// replace, TYPE=REPLACE is required.
	Replace *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace `pulumi:"replace"`
	// result.
	Result *string `pulumi:"result"`
	// The value supports one split and multiple values, required when TYPE=SPLIT.
	Split *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit `pulumi:"split"`
	// Substr, TYPE=SUBSTR is required.
	Substr *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr `pulumi:"substr"`
	// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
	Type string `pulumi:"type"`
	// Url parsing.
	UrlDecode *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode `pulumi:"urlDecode"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs struct {
	// Time conversion, required when TYPE=DATE.
	Date DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrInput `pulumi:"date"`
	// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
	JsonPathReplace DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrInput `pulumi:"jsonPathReplace"`
	// Key-value secondary analysis, must be passed when TYPE=KV.
	KV DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrInput `pulumi:"kV"`
	// Regular replacement, required when TYPE=REGEX REPLACE.
	RegexReplace DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrInput `pulumi:"regexReplace"`
	// replace, TYPE=REPLACE is required.
	Replace DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrInput `pulumi:"replace"`
	// result.
	Result pulumi.StringPtrInput `pulumi:"result"`
	// The value supports one split and multiple values, required when TYPE=SPLIT.
	Split DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrInput `pulumi:"split"`
	// Substr, TYPE=SUBSTR is required.
	Substr DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrInput `pulumi:"substr"`
	// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
	Type pulumi.StringInput `pulumi:"type"`
	// Url parsing.
	UrlDecode DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrInput `pulumi:"urlDecode"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray{ DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs{...} }
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray []DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateInput

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput)
}

// Time conversion, required when TYPE=DATE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) Date() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
		return v.Date
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput)
}

// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) JsonPathReplace() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
		return v.JsonPathReplace
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

// Key-value secondary analysis, must be passed when TYPE=KV.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) KV() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
		return v.KV
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput)
}

// Regular replacement, required when TYPE=REGEX REPLACE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) RegexReplace() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
		return v.RegexReplace
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput)
}

// replace, TYPE=REPLACE is required.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) Replace() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
		return v.Replace
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput)
}

// result.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *string {
		return v.Result
	}).(pulumi.StringPtrOutput)
}

// The value supports one split and multiple values, required when TYPE=SPLIT.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) Split() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
		return v.Split
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput)
}

// Substr, TYPE=SUBSTR is required.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) Substr() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
		return v.Substr
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput)
}

// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) string { return v.Type }).(pulumi.StringOutput)
}

// Url parsing.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput) UrlDecode() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
		return v.UrlDecode
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput)
}

// Time conversion, required when TYPE=DATE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Date() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
		if v == nil {
			return nil
		}
		return v.Date
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput)
}

// Json Path replacement, must pass when TYPE=JSON PATH REPLACE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) JsonPathReplace() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
		if v == nil {
			return nil
		}
		return v.JsonPathReplace
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

// Key-value secondary analysis, must be passed when TYPE=KV.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) KV() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
		if v == nil {
			return nil
		}
		return v.KV
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput)
}

// Regular replacement, required when TYPE=REGEX REPLACE.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) RegexReplace() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
		if v == nil {
			return nil
		}
		return v.RegexReplace
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput)
}

// replace, TYPE=REPLACE is required.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Replace() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
		if v == nil {
			return nil
		}
		return v.Replace
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput)
}

// result.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *string {
		if v == nil {
			return nil
		}
		return v.Result
	}).(pulumi.StringPtrOutput)
}

// The value supports one split and multiple values, required when TYPE=SPLIT.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Split() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
		if v == nil {
			return nil
		}
		return v.Split
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput)
}

// Substr, TYPE=SUBSTR is required.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Substr() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
		if v == nil {
			return nil
		}
		return v.Substr
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput)
}

// Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Url parsing.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput) UrlDecode() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
		if v == nil {
			return nil
		}
		return v.UrlDecode
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
		return vs[0].([]DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate struct {
	// Time format.
	Format *string `pulumi:"format"`
	// input type, string|unix.
	TargetType *string `pulumi:"targetType"`
	// default GMT+8.
	TimeZone *string `pulumi:"timeZone"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs struct {
	// Time format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// input type, string|unix.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
	// default GMT+8.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput)
}

// Time format.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *string {
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// input type, string|unix.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *string {
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

// default GMT+8.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *string {
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput)
}

// Time format.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// input type, string|unix.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

// default GMT+8.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace struct {
	// Replacement value, Jsonpath expression or string.
	NewValue string `pulumi:"newValue"`
	// Replaced value, Jsonpath expression.
	OldValue string `pulumi:"oldValue"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs struct {
	// Replacement value, Jsonpath expression or string.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Replaced value, Jsonpath expression.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput)
}

// Replacement value, Jsonpath expression or string.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) string {
		return v.NewValue
	}).(pulumi.StringOutput)
}

// Replaced value, Jsonpath expression.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) string {
		return v.OldValue
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput)
}

// Replacement value, Jsonpath expression or string.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// Replaced value, Jsonpath expression.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) *string {
		if v == nil {
			return nil
		}
		return &v.OldValue
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV struct {
	// delimiter.
	Delimiter string `pulumi:"delimiter"`
	// Keep the source Key, the default is false not to keep.
	KeepOriginalKey *string `pulumi:"keepOriginalKey"`
	// Key-value secondary analysis delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs struct {
	// delimiter.
	Delimiter pulumi.StringInput `pulumi:"delimiter"`
	// Keep the source Key, the default is false not to keep.
	KeepOriginalKey pulumi.StringPtrInput `pulumi:"keepOriginalKey"`
	// Key-value secondary analysis delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) string {
		return v.Delimiter
	}).(pulumi.StringOutput)
}

// Keep the source Key, the default is false not to keep.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) KeepOriginalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) *string {
		return v.KeepOriginalKey
	}).(pulumi.StringPtrOutput)
}

// Key-value secondary analysis delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) string {
		return v.Regex
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return &v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Keep the source Key, the default is false not to keep.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) KeepOriginalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return v.KeepOriginalKey
	}).(pulumi.StringPtrOutput)
}

// Key-value secondary analysis delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace struct {
	// new value.
	NewValue string `pulumi:"newValue"`
	// Regular.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs struct {
	// new value.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Regular.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) string {
		return v.NewValue
	}).(pulumi.StringOutput)
}

// Regular.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) string {
		return v.Regex
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// Regular.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace struct {
	// new value.
	NewValue string `pulumi:"newValue"`
	// been replaced value.
	OldValue string `pulumi:"oldValue"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs struct {
	// new value.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// been replaced value.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) string {
		return v.NewValue
	}).(pulumi.StringOutput)
}

// been replaced value.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) string {
		return v.OldValue
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput)
}

// new value.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) *string {
		if v == nil {
			return nil
		}
		return &v.NewValue
	}).(pulumi.StringPtrOutput)
}

// been replaced value.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) *string {
		if v == nil {
			return nil
		}
		return &v.OldValue
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit struct {
	// delimiter.
	Regex string `pulumi:"regex"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs struct {
	// delimiter.
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit) string {
		return v.Regex
	}).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit) *string {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr struct {
	// cut-off position.
	End int `pulumi:"end"`
	// interception starting position.
	Start int `pulumi:"start"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs struct {
	// cut-off position.
	End pulumi.IntInput `pulumi:"end"`
	// interception starting position.
	Start pulumi.IntInput `pulumi:"start"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput)
}

// cut-off position.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) int { return v.End }).(pulumi.IntOutput)
}

// interception starting position.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) int {
		return v.Start
	}).(pulumi.IntOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput)
}

// cut-off position.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// interception starting position.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode struct {
	// code.
	CharsetName *string `pulumi:"charsetName"`
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeInput` via:
//
//	DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs{...}
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs struct {
	// code.
	CharsetName pulumi.StringPtrInput `pulumi:"charsetName"`
}

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput)
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput).ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrInput is an input type that accepts DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs, DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtr and DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrInput` via:
//
//	        DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput
	ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput
}

type datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrType DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs

func DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtr(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrInput {
	return (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrType)(v)
}

func (*datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return i.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrType) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode) *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
		return &v
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput)
}

// code.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput) CharsetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode) *string {
		return v.CharsetName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput) ToDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput {
	return o
}

func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput) Elem() DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode) DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode
		return ret
	}).(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput)
}

// code.
func (o DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput) CharsetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode) *string {
		if v == nil {
			return nil
		}
		return v.CharsetName
	}).(pulumi.StringPtrOutput)
}

type DatahubTaskTransformsParamFilterParam struct {
	// Key.
	Key string `pulumi:"key"`
	// Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
	MatchMode string `pulumi:"matchMode"`
	// REGULAR.
	Type *string `pulumi:"type"`
	// Value.
	Value string `pulumi:"value"`
}

// DatahubTaskTransformsParamFilterParamInput is an input type that accepts DatahubTaskTransformsParamFilterParamArgs and DatahubTaskTransformsParamFilterParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFilterParamInput` via:
//
//	DatahubTaskTransformsParamFilterParamArgs{...}
type DatahubTaskTransformsParamFilterParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFilterParamOutput() DatahubTaskTransformsParamFilterParamOutput
	ToDatahubTaskTransformsParamFilterParamOutputWithContext(context.Context) DatahubTaskTransformsParamFilterParamOutput
}

type DatahubTaskTransformsParamFilterParamArgs struct {
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
	MatchMode pulumi.StringInput `pulumi:"matchMode"`
	// REGULAR.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatahubTaskTransformsParamFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFilterParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFilterParamArgs) ToDatahubTaskTransformsParamFilterParamOutput() DatahubTaskTransformsParamFilterParamOutput {
	return i.ToDatahubTaskTransformsParamFilterParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFilterParamArgs) ToDatahubTaskTransformsParamFilterParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFilterParamOutput)
}

// DatahubTaskTransformsParamFilterParamArrayInput is an input type that accepts DatahubTaskTransformsParamFilterParamArray and DatahubTaskTransformsParamFilterParamArrayOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamFilterParamArrayInput` via:
//
//	DatahubTaskTransformsParamFilterParamArray{ DatahubTaskTransformsParamFilterParamArgs{...} }
type DatahubTaskTransformsParamFilterParamArrayInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamFilterParamArrayOutput() DatahubTaskTransformsParamFilterParamArrayOutput
	ToDatahubTaskTransformsParamFilterParamArrayOutputWithContext(context.Context) DatahubTaskTransformsParamFilterParamArrayOutput
}

type DatahubTaskTransformsParamFilterParamArray []DatahubTaskTransformsParamFilterParamInput

func (DatahubTaskTransformsParamFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFilterParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamFilterParamArray) ToDatahubTaskTransformsParamFilterParamArrayOutput() DatahubTaskTransformsParamFilterParamArrayOutput {
	return i.ToDatahubTaskTransformsParamFilterParamArrayOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamFilterParamArray) ToDatahubTaskTransformsParamFilterParamArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamFilterParamArrayOutput)
}

type DatahubTaskTransformsParamFilterParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamFilterParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFilterParamOutput) ToDatahubTaskTransformsParamFilterParamOutput() DatahubTaskTransformsParamFilterParamOutput {
	return o
}

func (o DatahubTaskTransformsParamFilterParamOutput) ToDatahubTaskTransformsParamFilterParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFilterParamOutput {
	return o
}

// Key.
func (o DatahubTaskTransformsParamFilterParamOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFilterParam) string { return v.Key }).(pulumi.StringOutput)
}

// Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
func (o DatahubTaskTransformsParamFilterParamOutput) MatchMode() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFilterParam) string { return v.MatchMode }).(pulumi.StringOutput)
}

// REGULAR.
func (o DatahubTaskTransformsParamFilterParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFilterParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Value.
func (o DatahubTaskTransformsParamFilterParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamFilterParam) string { return v.Value }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamFilterParamArrayOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatahubTaskTransformsParamFilterParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamFilterParamArrayOutput) ToDatahubTaskTransformsParamFilterParamArrayOutput() DatahubTaskTransformsParamFilterParamArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFilterParamArrayOutput) ToDatahubTaskTransformsParamFilterParamArrayOutputWithContext(ctx context.Context) DatahubTaskTransformsParamFilterParamArrayOutput {
	return o
}

func (o DatahubTaskTransformsParamFilterParamArrayOutput) Index(i pulumi.IntInput) DatahubTaskTransformsParamFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatahubTaskTransformsParamFilterParam {
		return vs[0].([]DatahubTaskTransformsParamFilterParam)[vs[1].(int)]
	}).(DatahubTaskTransformsParamFilterParamOutput)
}

type DatahubTaskTransformsParamRowParam struct {
	// delimiter.
	EntryDelimiter *string `pulumi:"entryDelimiter"`
	// key, value delimiter.
	KeyValueDelimiter *string `pulumi:"keyValueDelimiter"`
	// row content, KEY_VALUE, VALUE.
	RowContent string `pulumi:"rowContent"`
}

// DatahubTaskTransformsParamRowParamInput is an input type that accepts DatahubTaskTransformsParamRowParamArgs and DatahubTaskTransformsParamRowParamOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamRowParamInput` via:
//
//	DatahubTaskTransformsParamRowParamArgs{...}
type DatahubTaskTransformsParamRowParamInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamRowParamOutput() DatahubTaskTransformsParamRowParamOutput
	ToDatahubTaskTransformsParamRowParamOutputWithContext(context.Context) DatahubTaskTransformsParamRowParamOutput
}

type DatahubTaskTransformsParamRowParamArgs struct {
	// delimiter.
	EntryDelimiter pulumi.StringPtrInput `pulumi:"entryDelimiter"`
	// key, value delimiter.
	KeyValueDelimiter pulumi.StringPtrInput `pulumi:"keyValueDelimiter"`
	// row content, KEY_VALUE, VALUE.
	RowContent pulumi.StringInput `pulumi:"rowContent"`
}

func (DatahubTaskTransformsParamRowParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamRowParam)(nil)).Elem()
}

func (i DatahubTaskTransformsParamRowParamArgs) ToDatahubTaskTransformsParamRowParamOutput() DatahubTaskTransformsParamRowParamOutput {
	return i.ToDatahubTaskTransformsParamRowParamOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamRowParamArgs) ToDatahubTaskTransformsParamRowParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamRowParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamRowParamOutput)
}

func (i DatahubTaskTransformsParamRowParamArgs) ToDatahubTaskTransformsParamRowParamPtrOutput() DatahubTaskTransformsParamRowParamPtrOutput {
	return i.ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(context.Background())
}

func (i DatahubTaskTransformsParamRowParamArgs) ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamRowParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamRowParamOutput).ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(ctx)
}

// DatahubTaskTransformsParamRowParamPtrInput is an input type that accepts DatahubTaskTransformsParamRowParamArgs, DatahubTaskTransformsParamRowParamPtr and DatahubTaskTransformsParamRowParamPtrOutput values.
// You can construct a concrete instance of `DatahubTaskTransformsParamRowParamPtrInput` via:
//
//	        DatahubTaskTransformsParamRowParamArgs{...}
//
//	or:
//
//	        nil
type DatahubTaskTransformsParamRowParamPtrInput interface {
	pulumi.Input

	ToDatahubTaskTransformsParamRowParamPtrOutput() DatahubTaskTransformsParamRowParamPtrOutput
	ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(context.Context) DatahubTaskTransformsParamRowParamPtrOutput
}

type datahubTaskTransformsParamRowParamPtrType DatahubTaskTransformsParamRowParamArgs

func DatahubTaskTransformsParamRowParamPtr(v *DatahubTaskTransformsParamRowParamArgs) DatahubTaskTransformsParamRowParamPtrInput {
	return (*datahubTaskTransformsParamRowParamPtrType)(v)
}

func (*datahubTaskTransformsParamRowParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamRowParam)(nil)).Elem()
}

func (i *datahubTaskTransformsParamRowParamPtrType) ToDatahubTaskTransformsParamRowParamPtrOutput() DatahubTaskTransformsParamRowParamPtrOutput {
	return i.ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(context.Background())
}

func (i *datahubTaskTransformsParamRowParamPtrType) ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamRowParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatahubTaskTransformsParamRowParamPtrOutput)
}

type DatahubTaskTransformsParamRowParamOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamRowParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatahubTaskTransformsParamRowParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamRowParamOutput) ToDatahubTaskTransformsParamRowParamOutput() DatahubTaskTransformsParamRowParamOutput {
	return o
}

func (o DatahubTaskTransformsParamRowParamOutput) ToDatahubTaskTransformsParamRowParamOutputWithContext(ctx context.Context) DatahubTaskTransformsParamRowParamOutput {
	return o
}

func (o DatahubTaskTransformsParamRowParamOutput) ToDatahubTaskTransformsParamRowParamPtrOutput() DatahubTaskTransformsParamRowParamPtrOutput {
	return o.ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(context.Background())
}

func (o DatahubTaskTransformsParamRowParamOutput) ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamRowParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatahubTaskTransformsParamRowParam) *DatahubTaskTransformsParamRowParam {
		return &v
	}).(DatahubTaskTransformsParamRowParamPtrOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamRowParamOutput) EntryDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamRowParam) *string { return v.EntryDelimiter }).(pulumi.StringPtrOutput)
}

// key, value delimiter.
func (o DatahubTaskTransformsParamRowParamOutput) KeyValueDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamRowParam) *string { return v.KeyValueDelimiter }).(pulumi.StringPtrOutput)
}

// row content, KEY_VALUE, VALUE.
func (o DatahubTaskTransformsParamRowParamOutput) RowContent() pulumi.StringOutput {
	return o.ApplyT(func(v DatahubTaskTransformsParamRowParam) string { return v.RowContent }).(pulumi.StringOutput)
}

type DatahubTaskTransformsParamRowParamPtrOutput struct{ *pulumi.OutputState }

func (DatahubTaskTransformsParamRowParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatahubTaskTransformsParamRowParam)(nil)).Elem()
}

func (o DatahubTaskTransformsParamRowParamPtrOutput) ToDatahubTaskTransformsParamRowParamPtrOutput() DatahubTaskTransformsParamRowParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamRowParamPtrOutput) ToDatahubTaskTransformsParamRowParamPtrOutputWithContext(ctx context.Context) DatahubTaskTransformsParamRowParamPtrOutput {
	return o
}

func (o DatahubTaskTransformsParamRowParamPtrOutput) Elem() DatahubTaskTransformsParamRowParamOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamRowParam) DatahubTaskTransformsParamRowParam {
		if v != nil {
			return *v
		}
		var ret DatahubTaskTransformsParamRowParam
		return ret
	}).(DatahubTaskTransformsParamRowParamOutput)
}

// delimiter.
func (o DatahubTaskTransformsParamRowParamPtrOutput) EntryDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamRowParam) *string {
		if v == nil {
			return nil
		}
		return v.EntryDelimiter
	}).(pulumi.StringPtrOutput)
}

// key, value delimiter.
func (o DatahubTaskTransformsParamRowParamPtrOutput) KeyValueDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamRowParam) *string {
		if v == nil {
			return nil
		}
		return v.KeyValueDelimiter
	}).(pulumi.StringPtrOutput)
}

// row content, KEY_VALUE, VALUE.
func (o DatahubTaskTransformsParamRowParamPtrOutput) RowContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatahubTaskTransformsParamRowParam) *string {
		if v == nil {
			return nil
		}
		return &v.RowContent
	}).(pulumi.StringPtrOutput)
}

type InstanceConfig struct {
	// Automatic creation. true: enabled, false: not enabled.
	AutoCreateTopicEnable bool `pulumi:"autoCreateTopicEnable"`
	// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
	DefaultNumPartitions int `pulumi:"defaultNumPartitions"`
	// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
	DefaultReplicationFactor int `pulumi:"defaultReplicationFactor"`
}

// InstanceConfigInput is an input type that accepts InstanceConfigArgs and InstanceConfigOutput values.
// You can construct a concrete instance of `InstanceConfigInput` via:
//
//	InstanceConfigArgs{...}
type InstanceConfigInput interface {
	pulumi.Input

	ToInstanceConfigOutput() InstanceConfigOutput
	ToInstanceConfigOutputWithContext(context.Context) InstanceConfigOutput
}

type InstanceConfigArgs struct {
	// Automatic creation. true: enabled, false: not enabled.
	AutoCreateTopicEnable pulumi.BoolInput `pulumi:"autoCreateTopicEnable"`
	// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
	DefaultNumPartitions pulumi.IntInput `pulumi:"defaultNumPartitions"`
	// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
	DefaultReplicationFactor pulumi.IntInput `pulumi:"defaultReplicationFactor"`
}

func (InstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArgs) ToInstanceConfigOutput() InstanceConfigOutput {
	return i.ToInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput)
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput).ToInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceConfigPtrInput is an input type that accepts InstanceConfigArgs, InstanceConfigPtr and InstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceConfigPtrInput` via:
//
//	        InstanceConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceConfigPtrOutput() InstanceConfigPtrOutput
	ToInstanceConfigPtrOutputWithContext(context.Context) InstanceConfigPtrOutput
}

type instanceConfigPtrType InstanceConfigArgs

func InstanceConfigPtr(v *InstanceConfigArgs) InstanceConfigPtrInput {
	return (*instanceConfigPtrType)(v)
}

func (*instanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigPtrOutput)
}

type InstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigOutput) ToInstanceConfigOutput() InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfig) *InstanceConfig {
		return &v
	}).(InstanceConfigPtrOutput)
}

// Automatic creation. true: enabled, false: not enabled.
func (o InstanceConfigOutput) AutoCreateTopicEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceConfig) bool { return v.AutoCreateTopicEnable }).(pulumi.BoolOutput)
}

// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
func (o InstanceConfigOutput) DefaultNumPartitions() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceConfig) int { return v.DefaultNumPartitions }).(pulumi.IntOutput)
}

// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
func (o InstanceConfigOutput) DefaultReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceConfig) int { return v.DefaultReplicationFactor }).(pulumi.IntOutput)
}

type InstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) Elem() InstanceConfigOutput {
	return o.ApplyT(func(v *InstanceConfig) InstanceConfig {
		if v != nil {
			return *v
		}
		var ret InstanceConfig
		return ret
	}).(InstanceConfigOutput)
}

// Automatic creation. true: enabled, false: not enabled.
func (o InstanceConfigPtrOutput) AutoCreateTopicEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.AutoCreateTopicEnable
	}).(pulumi.BoolPtrOutput)
}

// If auto.create.topic.enable is set to true and this value is not set, 3 will be used by default.
func (o InstanceConfigPtrOutput) DefaultNumPartitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultNumPartitions
	}).(pulumi.IntPtrOutput)
}

// If auto.create.topic.enable is set to true but this value is not set, 2 will be used by default.
func (o InstanceConfigPtrOutput) DefaultReplicationFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultReplicationFactor
	}).(pulumi.IntPtrOutput)
}

type InstanceDynamicRetentionConfig struct {
	// Minimum retention time, in minutes.
	BottomRetention *int `pulumi:"bottomRetention"`
	// Disk quota threshold (in percentage) for triggering the message retention time change event.
	DiskQuotaPercentage *int `pulumi:"diskQuotaPercentage"`
	// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
	Enable *int `pulumi:"enable"`
	// Percentage by which the message retention time is shortened each time.
	StepForwardPercentage *int `pulumi:"stepForwardPercentage"`
}

// InstanceDynamicRetentionConfigInput is an input type that accepts InstanceDynamicRetentionConfigArgs and InstanceDynamicRetentionConfigOutput values.
// You can construct a concrete instance of `InstanceDynamicRetentionConfigInput` via:
//
//	InstanceDynamicRetentionConfigArgs{...}
type InstanceDynamicRetentionConfigInput interface {
	pulumi.Input

	ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput
	ToInstanceDynamicRetentionConfigOutputWithContext(context.Context) InstanceDynamicRetentionConfigOutput
}

type InstanceDynamicRetentionConfigArgs struct {
	// Minimum retention time, in minutes.
	BottomRetention pulumi.IntPtrInput `pulumi:"bottomRetention"`
	// Disk quota threshold (in percentage) for triggering the message retention time change event.
	DiskQuotaPercentage pulumi.IntPtrInput `pulumi:"diskQuotaPercentage"`
	// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
	Enable pulumi.IntPtrInput `pulumi:"enable"`
	// Percentage by which the message retention time is shortened each time.
	StepForwardPercentage pulumi.IntPtrInput `pulumi:"stepForwardPercentage"`
}

func (InstanceDynamicRetentionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput {
	return i.ToInstanceDynamicRetentionConfigOutputWithContext(context.Background())
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigOutput)
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return i.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceDynamicRetentionConfigArgs) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigOutput).ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx)
}

// InstanceDynamicRetentionConfigPtrInput is an input type that accepts InstanceDynamicRetentionConfigArgs, InstanceDynamicRetentionConfigPtr and InstanceDynamicRetentionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceDynamicRetentionConfigPtrInput` via:
//
//	        InstanceDynamicRetentionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceDynamicRetentionConfigPtrInput interface {
	pulumi.Input

	ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput
	ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Context) InstanceDynamicRetentionConfigPtrOutput
}

type instanceDynamicRetentionConfigPtrType InstanceDynamicRetentionConfigArgs

func InstanceDynamicRetentionConfigPtr(v *InstanceDynamicRetentionConfigArgs) InstanceDynamicRetentionConfigPtrInput {
	return (*instanceDynamicRetentionConfigPtrType)(v)
}

func (*instanceDynamicRetentionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (i *instanceDynamicRetentionConfigPtrType) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return i.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceDynamicRetentionConfigPtrType) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDynamicRetentionConfigPtrOutput)
}

type InstanceDynamicRetentionConfigOutput struct{ *pulumi.OutputState }

func (InstanceDynamicRetentionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigOutput() InstanceDynamicRetentionConfigOutput {
	return o
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigOutput {
	return o
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return o.ToInstanceDynamicRetentionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceDynamicRetentionConfigOutput) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDynamicRetentionConfig) *InstanceDynamicRetentionConfig {
		return &v
	}).(InstanceDynamicRetentionConfigPtrOutput)
}

// Minimum retention time, in minutes.
func (o InstanceDynamicRetentionConfigOutput) BottomRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.BottomRetention }).(pulumi.IntPtrOutput)
}

// Disk quota threshold (in percentage) for triggering the message retention time change event.
func (o InstanceDynamicRetentionConfigOutput) DiskQuotaPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.DiskQuotaPercentage }).(pulumi.IntPtrOutput)
}

// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
func (o InstanceDynamicRetentionConfigOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.Enable }).(pulumi.IntPtrOutput)
}

// Percentage by which the message retention time is shortened each time.
func (o InstanceDynamicRetentionConfigOutput) StepForwardPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDynamicRetentionConfig) *int { return v.StepForwardPercentage }).(pulumi.IntPtrOutput)
}

type InstanceDynamicRetentionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceDynamicRetentionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDynamicRetentionConfig)(nil)).Elem()
}

func (o InstanceDynamicRetentionConfigPtrOutput) ToInstanceDynamicRetentionConfigPtrOutput() InstanceDynamicRetentionConfigPtrOutput {
	return o
}

func (o InstanceDynamicRetentionConfigPtrOutput) ToInstanceDynamicRetentionConfigPtrOutputWithContext(ctx context.Context) InstanceDynamicRetentionConfigPtrOutput {
	return o
}

func (o InstanceDynamicRetentionConfigPtrOutput) Elem() InstanceDynamicRetentionConfigOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) InstanceDynamicRetentionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceDynamicRetentionConfig
		return ret
	}).(InstanceDynamicRetentionConfigOutput)
}

// Minimum retention time, in minutes.
func (o InstanceDynamicRetentionConfigPtrOutput) BottomRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.BottomRetention
	}).(pulumi.IntPtrOutput)
}

// Disk quota threshold (in percentage) for triggering the message retention time change event.
func (o InstanceDynamicRetentionConfigPtrOutput) DiskQuotaPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskQuotaPercentage
	}).(pulumi.IntPtrOutput)
}

// Whether the dynamic message retention time configuration is enabled. 0: disabled; 1: enabled.
func (o InstanceDynamicRetentionConfigPtrOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.IntPtrOutput)
}

// Percentage by which the message retention time is shortened each time.
func (o InstanceDynamicRetentionConfigPtrOutput) StepForwardPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDynamicRetentionConfig) *int {
		if v == nil {
			return nil
		}
		return v.StepForwardPercentage
	}).(pulumi.IntPtrOutput)
}

type InstanceTag struct {
	// Tag key.
	Key string `pulumi:"key"`
	// Tag value.
	Value string `pulumi:"value"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//	InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	// Tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//	InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

// Tag key.
func (o InstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag value.
func (o InstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type RouteBrokerVipList struct {
	// Virtual IP.
	Vip *string `pulumi:"vip"`
	// Virtual port.
	Vport *string `pulumi:"vport"`
}

// RouteBrokerVipListInput is an input type that accepts RouteBrokerVipListArgs and RouteBrokerVipListOutput values.
// You can construct a concrete instance of `RouteBrokerVipListInput` via:
//
//	RouteBrokerVipListArgs{...}
type RouteBrokerVipListInput interface {
	pulumi.Input

	ToRouteBrokerVipListOutput() RouteBrokerVipListOutput
	ToRouteBrokerVipListOutputWithContext(context.Context) RouteBrokerVipListOutput
}

type RouteBrokerVipListArgs struct {
	// Virtual IP.
	Vip pulumi.StringPtrInput `pulumi:"vip"`
	// Virtual port.
	Vport pulumi.StringPtrInput `pulumi:"vport"`
}

func (RouteBrokerVipListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteBrokerVipList)(nil)).Elem()
}

func (i RouteBrokerVipListArgs) ToRouteBrokerVipListOutput() RouteBrokerVipListOutput {
	return i.ToRouteBrokerVipListOutputWithContext(context.Background())
}

func (i RouteBrokerVipListArgs) ToRouteBrokerVipListOutputWithContext(ctx context.Context) RouteBrokerVipListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteBrokerVipListOutput)
}

// RouteBrokerVipListArrayInput is an input type that accepts RouteBrokerVipListArray and RouteBrokerVipListArrayOutput values.
// You can construct a concrete instance of `RouteBrokerVipListArrayInput` via:
//
//	RouteBrokerVipListArray{ RouteBrokerVipListArgs{...} }
type RouteBrokerVipListArrayInput interface {
	pulumi.Input

	ToRouteBrokerVipListArrayOutput() RouteBrokerVipListArrayOutput
	ToRouteBrokerVipListArrayOutputWithContext(context.Context) RouteBrokerVipListArrayOutput
}

type RouteBrokerVipListArray []RouteBrokerVipListInput

func (RouteBrokerVipListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteBrokerVipList)(nil)).Elem()
}

func (i RouteBrokerVipListArray) ToRouteBrokerVipListArrayOutput() RouteBrokerVipListArrayOutput {
	return i.ToRouteBrokerVipListArrayOutputWithContext(context.Background())
}

func (i RouteBrokerVipListArray) ToRouteBrokerVipListArrayOutputWithContext(ctx context.Context) RouteBrokerVipListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteBrokerVipListArrayOutput)
}

type RouteBrokerVipListOutput struct{ *pulumi.OutputState }

func (RouteBrokerVipListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteBrokerVipList)(nil)).Elem()
}

func (o RouteBrokerVipListOutput) ToRouteBrokerVipListOutput() RouteBrokerVipListOutput {
	return o
}

func (o RouteBrokerVipListOutput) ToRouteBrokerVipListOutputWithContext(ctx context.Context) RouteBrokerVipListOutput {
	return o
}

// Virtual IP.
func (o RouteBrokerVipListOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteBrokerVipList) *string { return v.Vip }).(pulumi.StringPtrOutput)
}

// Virtual port.
func (o RouteBrokerVipListOutput) Vport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteBrokerVipList) *string { return v.Vport }).(pulumi.StringPtrOutput)
}

type RouteBrokerVipListArrayOutput struct{ *pulumi.OutputState }

func (RouteBrokerVipListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteBrokerVipList)(nil)).Elem()
}

func (o RouteBrokerVipListArrayOutput) ToRouteBrokerVipListArrayOutput() RouteBrokerVipListArrayOutput {
	return o
}

func (o RouteBrokerVipListArrayOutput) ToRouteBrokerVipListArrayOutputWithContext(ctx context.Context) RouteBrokerVipListArrayOutput {
	return o
}

func (o RouteBrokerVipListArrayOutput) Index(i pulumi.IntInput) RouteBrokerVipListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteBrokerVipList {
		return vs[0].([]RouteBrokerVipList)[vs[1].(int)]
	}).(RouteBrokerVipListOutput)
}

type RouteVipList struct {
	// Virtual IP.
	Vip *string `pulumi:"vip"`
	// Virtual port.
	Vport *string `pulumi:"vport"`
}

// RouteVipListInput is an input type that accepts RouteVipListArgs and RouteVipListOutput values.
// You can construct a concrete instance of `RouteVipListInput` via:
//
//	RouteVipListArgs{...}
type RouteVipListInput interface {
	pulumi.Input

	ToRouteVipListOutput() RouteVipListOutput
	ToRouteVipListOutputWithContext(context.Context) RouteVipListOutput
}

type RouteVipListArgs struct {
	// Virtual IP.
	Vip pulumi.StringPtrInput `pulumi:"vip"`
	// Virtual port.
	Vport pulumi.StringPtrInput `pulumi:"vport"`
}

func (RouteVipListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteVipList)(nil)).Elem()
}

func (i RouteVipListArgs) ToRouteVipListOutput() RouteVipListOutput {
	return i.ToRouteVipListOutputWithContext(context.Background())
}

func (i RouteVipListArgs) ToRouteVipListOutputWithContext(ctx context.Context) RouteVipListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteVipListOutput)
}

// RouteVipListArrayInput is an input type that accepts RouteVipListArray and RouteVipListArrayOutput values.
// You can construct a concrete instance of `RouteVipListArrayInput` via:
//
//	RouteVipListArray{ RouteVipListArgs{...} }
type RouteVipListArrayInput interface {
	pulumi.Input

	ToRouteVipListArrayOutput() RouteVipListArrayOutput
	ToRouteVipListArrayOutputWithContext(context.Context) RouteVipListArrayOutput
}

type RouteVipListArray []RouteVipListInput

func (RouteVipListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteVipList)(nil)).Elem()
}

func (i RouteVipListArray) ToRouteVipListArrayOutput() RouteVipListArrayOutput {
	return i.ToRouteVipListArrayOutputWithContext(context.Background())
}

func (i RouteVipListArray) ToRouteVipListArrayOutputWithContext(ctx context.Context) RouteVipListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteVipListArrayOutput)
}

type RouteVipListOutput struct{ *pulumi.OutputState }

func (RouteVipListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteVipList)(nil)).Elem()
}

func (o RouteVipListOutput) ToRouteVipListOutput() RouteVipListOutput {
	return o
}

func (o RouteVipListOutput) ToRouteVipListOutputWithContext(ctx context.Context) RouteVipListOutput {
	return o
}

// Virtual IP.
func (o RouteVipListOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteVipList) *string { return v.Vip }).(pulumi.StringPtrOutput)
}

// Virtual port.
func (o RouteVipListOutput) Vport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteVipList) *string { return v.Vport }).(pulumi.StringPtrOutput)
}

type RouteVipListArrayOutput struct{ *pulumi.OutputState }

func (RouteVipListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteVipList)(nil)).Elem()
}

func (o RouteVipListArrayOutput) ToRouteVipListArrayOutput() RouteVipListArrayOutput {
	return o
}

func (o RouteVipListArrayOutput) ToRouteVipListArrayOutputWithContext(ctx context.Context) RouteVipListArrayOutput {
	return o
}

func (o RouteVipListArrayOutput) Index(i pulumi.IntInput) RouteVipListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteVipList {
		return vs[0].([]RouteVipList)[vs[1].(int)]
	}).(RouteVipListOutput)
}

type GetAclsAclList struct {
	// Host substr used for querying.
	Host string `pulumi:"host"`
	// ACL operation mode.
	OperationType string `pulumi:"operationType"`
	// ACL permission type, valid values are `UNKNOWN`, `ANY`, `DENY`, `ALLOW`, and `ALLOW` by default. Currently, CKafka supports `ALLOW` (equivalent to allow list), and other fields will be used for future ACLs compatible with open-source Kafka.
	PermissionType string `pulumi:"permissionType"`
	// User which can access. `*` means that any user can access.
	Principal string `pulumi:"principal"`
	// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
	ResourceName string `pulumi:"resourceName"`
	// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
	ResourceType string `pulumi:"resourceType"`
}

// GetAclsAclListInput is an input type that accepts GetAclsAclListArgs and GetAclsAclListOutput values.
// You can construct a concrete instance of `GetAclsAclListInput` via:
//
//	GetAclsAclListArgs{...}
type GetAclsAclListInput interface {
	pulumi.Input

	ToGetAclsAclListOutput() GetAclsAclListOutput
	ToGetAclsAclListOutputWithContext(context.Context) GetAclsAclListOutput
}

type GetAclsAclListArgs struct {
	// Host substr used for querying.
	Host pulumi.StringInput `pulumi:"host"`
	// ACL operation mode.
	OperationType pulumi.StringInput `pulumi:"operationType"`
	// ACL permission type, valid values are `UNKNOWN`, `ANY`, `DENY`, `ALLOW`, and `ALLOW` by default. Currently, CKafka supports `ALLOW` (equivalent to allow list), and other fields will be used for future ACLs compatible with open-source Kafka.
	PermissionType pulumi.StringInput `pulumi:"permissionType"`
	// User which can access. `*` means that any user can access.
	Principal pulumi.StringInput `pulumi:"principal"`
	// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetAclsAclListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclList)(nil)).Elem()
}

func (i GetAclsAclListArgs) ToGetAclsAclListOutput() GetAclsAclListOutput {
	return i.ToGetAclsAclListOutputWithContext(context.Background())
}

func (i GetAclsAclListArgs) ToGetAclsAclListOutputWithContext(ctx context.Context) GetAclsAclListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListOutput)
}

// GetAclsAclListArrayInput is an input type that accepts GetAclsAclListArray and GetAclsAclListArrayOutput values.
// You can construct a concrete instance of `GetAclsAclListArrayInput` via:
//
//	GetAclsAclListArray{ GetAclsAclListArgs{...} }
type GetAclsAclListArrayInput interface {
	pulumi.Input

	ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput
	ToGetAclsAclListArrayOutputWithContext(context.Context) GetAclsAclListArrayOutput
}

type GetAclsAclListArray []GetAclsAclListInput

func (GetAclsAclListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclList)(nil)).Elem()
}

func (i GetAclsAclListArray) ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput {
	return i.ToGetAclsAclListArrayOutputWithContext(context.Background())
}

func (i GetAclsAclListArray) ToGetAclsAclListArrayOutputWithContext(ctx context.Context) GetAclsAclListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclListArrayOutput)
}

type GetAclsAclListOutput struct{ *pulumi.OutputState }

func (GetAclsAclListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclList)(nil)).Elem()
}

func (o GetAclsAclListOutput) ToGetAclsAclListOutput() GetAclsAclListOutput {
	return o
}

func (o GetAclsAclListOutput) ToGetAclsAclListOutputWithContext(ctx context.Context) GetAclsAclListOutput {
	return o
}

// Host substr used for querying.
func (o GetAclsAclListOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.Host }).(pulumi.StringOutput)
}

// ACL operation mode.
func (o GetAclsAclListOutput) OperationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.OperationType }).(pulumi.StringOutput)
}

// ACL permission type, valid values are `UNKNOWN`, `ANY`, `DENY`, `ALLOW`, and `ALLOW` by default. Currently, CKafka supports `ALLOW` (equivalent to allow list), and other fields will be used for future ACLs compatible with open-source Kafka.
func (o GetAclsAclListOutput) PermissionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.PermissionType }).(pulumi.StringOutput)
}

// User which can access. `*` means that any user can access.
func (o GetAclsAclListOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.Principal }).(pulumi.StringOutput)
}

// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
func (o GetAclsAclListOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.ResourceName }).(pulumi.StringOutput)
}

// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
func (o GetAclsAclListOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclList) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetAclsAclListArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclList)(nil)).Elem()
}

func (o GetAclsAclListArrayOutput) ToGetAclsAclListArrayOutput() GetAclsAclListArrayOutput {
	return o
}

func (o GetAclsAclListArrayOutput) ToGetAclsAclListArrayOutputWithContext(ctx context.Context) GetAclsAclListArrayOutput {
	return o
}

func (o GetAclsAclListArrayOutput) Index(i pulumi.IntInput) GetAclsAclListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclList {
		return vs[0].([]GetAclsAclList)[vs[1].(int)]
	}).(GetAclsAclListOutput)
}

type GetConnectResourceResult struct {
	// Resource List.
	ConnectResourceLists []GetConnectResourceResultConnectResourceList `pulumi:"connectResourceLists"`
	// Number of connection sources.
	TotalCount int `pulumi:"totalCount"`
}

// GetConnectResourceResultInput is an input type that accepts GetConnectResourceResultArgs and GetConnectResourceResultOutput values.
// You can construct a concrete instance of `GetConnectResourceResultInput` via:
//
//	GetConnectResourceResultArgs{...}
type GetConnectResourceResultInput interface {
	pulumi.Input

	ToGetConnectResourceResultOutput() GetConnectResourceResultOutput
	ToGetConnectResourceResultOutputWithContext(context.Context) GetConnectResourceResultOutput
}

type GetConnectResourceResultArgs struct {
	// Resource List.
	ConnectResourceLists GetConnectResourceResultConnectResourceListArrayInput `pulumi:"connectResourceLists"`
	// Number of connection sources.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetConnectResourceResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResult)(nil)).Elem()
}

func (i GetConnectResourceResultArgs) ToGetConnectResourceResultOutput() GetConnectResourceResultOutput {
	return i.ToGetConnectResourceResultOutputWithContext(context.Background())
}

func (i GetConnectResourceResultArgs) ToGetConnectResourceResultOutputWithContext(ctx context.Context) GetConnectResourceResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultOutput)
}

// GetConnectResourceResultArrayInput is an input type that accepts GetConnectResourceResultArray and GetConnectResourceResultArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultArrayInput` via:
//
//	GetConnectResourceResultArray{ GetConnectResourceResultArgs{...} }
type GetConnectResourceResultArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultArrayOutput() GetConnectResourceResultArrayOutput
	ToGetConnectResourceResultArrayOutputWithContext(context.Context) GetConnectResourceResultArrayOutput
}

type GetConnectResourceResultArray []GetConnectResourceResultInput

func (GetConnectResourceResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResult)(nil)).Elem()
}

func (i GetConnectResourceResultArray) ToGetConnectResourceResultArrayOutput() GetConnectResourceResultArrayOutput {
	return i.ToGetConnectResourceResultArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultArray) ToGetConnectResourceResultArrayOutputWithContext(ctx context.Context) GetConnectResourceResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultArrayOutput)
}

type GetConnectResourceResultOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResult)(nil)).Elem()
}

func (o GetConnectResourceResultOutput) ToGetConnectResourceResultOutput() GetConnectResourceResultOutput {
	return o
}

func (o GetConnectResourceResultOutput) ToGetConnectResourceResultOutputWithContext(ctx context.Context) GetConnectResourceResultOutput {
	return o
}

// Resource List.
func (o GetConnectResourceResultOutput) ConnectResourceLists() GetConnectResourceResultConnectResourceListArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResult) []GetConnectResourceResultConnectResourceList {
		return v.ConnectResourceLists
	}).(GetConnectResourceResultConnectResourceListArrayOutput)
}

// Number of connection sources.
func (o GetConnectResourceResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetConnectResourceResultArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResult)(nil)).Elem()
}

func (o GetConnectResourceResultArrayOutput) ToGetConnectResourceResultArrayOutput() GetConnectResourceResultArrayOutput {
	return o
}

func (o GetConnectResourceResultArrayOutput) ToGetConnectResourceResultArrayOutputWithContext(ctx context.Context) GetConnectResourceResultArrayOutput {
	return o
}

func (o GetConnectResourceResultArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResult {
		return vs[0].([]GetConnectResourceResult)[vs[1].(int)]
	}).(GetConnectResourceResultOutput)
}

type GetConnectResourceResultConnectResourceList struct {
	// ClickHouse configuration, returned when Type is CLICKHOUSE.
	ClickhouseConnectParams []GetConnectResourceResultConnectResourceListClickhouseConnectParam `pulumi:"clickhouseConnectParams"`
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// Ctsdb configuration, returned when Type is CTSDB.
	CtsdbConnectParams []GetConnectResourceResultConnectResourceListCtsdbConnectParam `pulumi:"ctsdbConnectParams"`
	// The current step of the connection source.
	CurrentStep string `pulumi:"currentStep"`
	// The number of Datahub tasks associated with this connection source.
	DatahubTaskCount int `pulumi:"datahubTaskCount"`
	// Description.
	Description string `pulumi:"description"`
	// Doris Configuration, returned when Type is DORIS.
	DorisConnectParams []GetConnectResourceResultConnectResourceListDorisConnectParam `pulumi:"dorisConnectParams"`
	// Dts configuration, returned when Type is DTS.
	DtsConnectParams []GetConnectResourceResultConnectResourceListDtsConnectParam `pulumi:"dtsConnectParams"`
	// Error Messages.
	ErrorMessage string `pulumi:"errorMessage"`
	// Es configuration, return when Type is ES.
	EsConnectParams []GetConnectResourceResultConnectResourceListEsConnectParam `pulumi:"esConnectParams"`
	// Kafka configuration, returned when Type is KAFKA.
	KafkaConnectParams []GetConnectResourceResultConnectResourceListKafkaConnectParam `pulumi:"kafkaConnectParams"`
	// Mariadb configuration, returned when Type is MARIADB.
	MariaDbConnectParams []GetConnectResourceResultConnectResourceListMariaDbConnectParam `pulumi:"mariaDbConnectParams"`
	// Mongo DB configuration, returned when Type is MONGODB.
	MongoDbConnectParams []GetConnectResourceResultConnectResourceListMongoDbConnectParam `pulumi:"mongoDbConnectParams"`
	// Mysql configuration, returned when Type is MYSQL or TDSQL C MYSQL.
	MysqlConnectParams []GetConnectResourceResultConnectResourceListMysqlConnectParam `pulumi:"mysqlConnectParams"`
	// Postgresql configuration, returned when Type is POSTGRESQL or TDSQL C POSTGRESQL.
	PostgreSqlConnectParams []GetConnectResourceResultConnectResourceListPostgreSqlConnectParam `pulumi:"postgreSqlConnectParams"`
	// Resource id.
	ResourceId string `pulumi:"resourceId"`
	// Resource name.
	ResourceName string `pulumi:"resourceName"`
	// SQL Server configuration, returned when Type is SQLSERVER.
	SqlServerConnectParams []GetConnectResourceResultConnectResourceListSqlServerConnectParam `pulumi:"sqlServerConnectParams"`
	// Resource status.
	Status int `pulumi:"status"`
	// Step List.
	StepLists []string `pulumi:"stepLists"`
	// Creation progress percentage.
	TaskProgress float64 `pulumi:"taskProgress"`
	// connection source type.
	Type string `pulumi:"type"`
}

// GetConnectResourceResultConnectResourceListInput is an input type that accepts GetConnectResourceResultConnectResourceListArgs and GetConnectResourceResultConnectResourceListOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListInput` via:
//
//	GetConnectResourceResultConnectResourceListArgs{...}
type GetConnectResourceResultConnectResourceListInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListOutput() GetConnectResourceResultConnectResourceListOutput
	ToGetConnectResourceResultConnectResourceListOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListOutput
}

type GetConnectResourceResultConnectResourceListArgs struct {
	// ClickHouse configuration, returned when Type is CLICKHOUSE.
	ClickhouseConnectParams GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayInput `pulumi:"clickhouseConnectParams"`
	// Creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Ctsdb configuration, returned when Type is CTSDB.
	CtsdbConnectParams GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayInput `pulumi:"ctsdbConnectParams"`
	// The current step of the connection source.
	CurrentStep pulumi.StringInput `pulumi:"currentStep"`
	// The number of Datahub tasks associated with this connection source.
	DatahubTaskCount pulumi.IntInput `pulumi:"datahubTaskCount"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Doris Configuration, returned when Type is DORIS.
	DorisConnectParams GetConnectResourceResultConnectResourceListDorisConnectParamArrayInput `pulumi:"dorisConnectParams"`
	// Dts configuration, returned when Type is DTS.
	DtsConnectParams GetConnectResourceResultConnectResourceListDtsConnectParamArrayInput `pulumi:"dtsConnectParams"`
	// Error Messages.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// Es configuration, return when Type is ES.
	EsConnectParams GetConnectResourceResultConnectResourceListEsConnectParamArrayInput `pulumi:"esConnectParams"`
	// Kafka configuration, returned when Type is KAFKA.
	KafkaConnectParams GetConnectResourceResultConnectResourceListKafkaConnectParamArrayInput `pulumi:"kafkaConnectParams"`
	// Mariadb configuration, returned when Type is MARIADB.
	MariaDbConnectParams GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayInput `pulumi:"mariaDbConnectParams"`
	// Mongo DB configuration, returned when Type is MONGODB.
	MongoDbConnectParams GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayInput `pulumi:"mongoDbConnectParams"`
	// Mysql configuration, returned when Type is MYSQL or TDSQL C MYSQL.
	MysqlConnectParams GetConnectResourceResultConnectResourceListMysqlConnectParamArrayInput `pulumi:"mysqlConnectParams"`
	// Postgresql configuration, returned when Type is POSTGRESQL or TDSQL C POSTGRESQL.
	PostgreSqlConnectParams GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayInput `pulumi:"postgreSqlConnectParams"`
	// Resource id.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Resource name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// SQL Server configuration, returned when Type is SQLSERVER.
	SqlServerConnectParams GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayInput `pulumi:"sqlServerConnectParams"`
	// Resource status.
	Status pulumi.IntInput `pulumi:"status"`
	// Step List.
	StepLists pulumi.StringArrayInput `pulumi:"stepLists"`
	// Creation progress percentage.
	TaskProgress pulumi.Float64Input `pulumi:"taskProgress"`
	// connection source type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetConnectResourceResultConnectResourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceList)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListArgs) ToGetConnectResourceResultConnectResourceListOutput() GetConnectResourceResultConnectResourceListOutput {
	return i.ToGetConnectResourceResultConnectResourceListOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListArgs) ToGetConnectResourceResultConnectResourceListOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListOutput)
}

// GetConnectResourceResultConnectResourceListArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListArray and GetConnectResourceResultConnectResourceListArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListArray{ GetConnectResourceResultConnectResourceListArgs{...} }
type GetConnectResourceResultConnectResourceListArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListArrayOutput() GetConnectResourceResultConnectResourceListArrayOutput
	ToGetConnectResourceResultConnectResourceListArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListArrayOutput
}

type GetConnectResourceResultConnectResourceListArray []GetConnectResourceResultConnectResourceListInput

func (GetConnectResourceResultConnectResourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceList)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListArray) ToGetConnectResourceResultConnectResourceListArrayOutput() GetConnectResourceResultConnectResourceListArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListArray) ToGetConnectResourceResultConnectResourceListArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListArrayOutput)
}

type GetConnectResourceResultConnectResourceListOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceList)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListOutput) ToGetConnectResourceResultConnectResourceListOutput() GetConnectResourceResultConnectResourceListOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListOutput) ToGetConnectResourceResultConnectResourceListOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListOutput {
	return o
}

// ClickHouse configuration, returned when Type is CLICKHOUSE.
func (o GetConnectResourceResultConnectResourceListOutput) ClickhouseConnectParams() GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListClickhouseConnectParam {
		return v.ClickhouseConnectParams
	}).(GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput)
}

// Creation time.
func (o GetConnectResourceResultConnectResourceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Ctsdb configuration, returned when Type is CTSDB.
func (o GetConnectResourceResultConnectResourceListOutput) CtsdbConnectParams() GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListCtsdbConnectParam {
		return v.CtsdbConnectParams
	}).(GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput)
}

// The current step of the connection source.
func (o GetConnectResourceResultConnectResourceListOutput) CurrentStep() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.CurrentStep }).(pulumi.StringOutput)
}

// The number of Datahub tasks associated with this connection source.
func (o GetConnectResourceResultConnectResourceListOutput) DatahubTaskCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) int { return v.DatahubTaskCount }).(pulumi.IntOutput)
}

// Description.
func (o GetConnectResourceResultConnectResourceListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.Description }).(pulumi.StringOutput)
}

// Doris Configuration, returned when Type is DORIS.
func (o GetConnectResourceResultConnectResourceListOutput) DorisConnectParams() GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListDorisConnectParam {
		return v.DorisConnectParams
	}).(GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput)
}

// Dts configuration, returned when Type is DTS.
func (o GetConnectResourceResultConnectResourceListOutput) DtsConnectParams() GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListDtsConnectParam {
		return v.DtsConnectParams
	}).(GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput)
}

// Error Messages.
func (o GetConnectResourceResultConnectResourceListOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Es configuration, return when Type is ES.
func (o GetConnectResourceResultConnectResourceListOutput) EsConnectParams() GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListEsConnectParam {
		return v.EsConnectParams
	}).(GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput)
}

// Kafka configuration, returned when Type is KAFKA.
func (o GetConnectResourceResultConnectResourceListOutput) KafkaConnectParams() GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListKafkaConnectParam {
		return v.KafkaConnectParams
	}).(GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput)
}

// Mariadb configuration, returned when Type is MARIADB.
func (o GetConnectResourceResultConnectResourceListOutput) MariaDbConnectParams() GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListMariaDbConnectParam {
		return v.MariaDbConnectParams
	}).(GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput)
}

// Mongo DB configuration, returned when Type is MONGODB.
func (o GetConnectResourceResultConnectResourceListOutput) MongoDbConnectParams() GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListMongoDbConnectParam {
		return v.MongoDbConnectParams
	}).(GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput)
}

// Mysql configuration, returned when Type is MYSQL or TDSQL C MYSQL.
func (o GetConnectResourceResultConnectResourceListOutput) MysqlConnectParams() GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListMysqlConnectParam {
		return v.MysqlConnectParams
	}).(GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput)
}

// Postgresql configuration, returned when Type is POSTGRESQL or TDSQL C POSTGRESQL.
func (o GetConnectResourceResultConnectResourceListOutput) PostgreSqlConnectParams() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListPostgreSqlConnectParam {
		return v.PostgreSqlConnectParams
	}).(GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput)
}

// Resource id.
func (o GetConnectResourceResultConnectResourceListOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Resource name.
func (o GetConnectResourceResultConnectResourceListOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.ResourceName }).(pulumi.StringOutput)
}

// SQL Server configuration, returned when Type is SQLSERVER.
func (o GetConnectResourceResultConnectResourceListOutput) SqlServerConnectParams() GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []GetConnectResourceResultConnectResourceListSqlServerConnectParam {
		return v.SqlServerConnectParams
	}).(GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput)
}

// Resource status.
func (o GetConnectResourceResultConnectResourceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) int { return v.Status }).(pulumi.IntOutput)
}

// Step List.
func (o GetConnectResourceResultConnectResourceListOutput) StepLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) []string { return v.StepLists }).(pulumi.StringArrayOutput)
}

// Creation progress percentage.
func (o GetConnectResourceResultConnectResourceListOutput) TaskProgress() pulumi.Float64Output {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) float64 { return v.TaskProgress }).(pulumi.Float64Output)
}

// connection source type.
func (o GetConnectResourceResultConnectResourceListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceList) string { return v.Type }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceList)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListArrayOutput) ToGetConnectResourceResultConnectResourceListArrayOutput() GetConnectResourceResultConnectResourceListArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListArrayOutput) ToGetConnectResourceResultConnectResourceListArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceList {
		return vs[0].([]GetConnectResourceResultConnectResourceList)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListOutput)
}

type GetConnectResourceResultConnectResourceListClickhouseConnectParam struct {
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListClickhouseConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs and GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListClickhouseConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListClickhouseConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutput() GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput
	ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput
}

type GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs struct {
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListClickhouseConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutput() GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListClickhouseConnectParamArray and GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListClickhouseConnectParamArray{ GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput() GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListClickhouseConnectParamArray []GetConnectResourceResultConnectResourceListClickhouseConnectParamInput

func (GetConnectResourceResultConnectResourceListClickhouseConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListClickhouseConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListClickhouseConnectParamArray) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput() GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListClickhouseConnectParamArray) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListClickhouseConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutput() GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput {
	return o
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListClickhouseConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListClickhouseConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput() GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListClickhouseConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListClickhouseConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListCtsdbConnectParam struct {
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListCtsdbConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs and GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListCtsdbConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListCtsdbConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutput() GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput
	ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput
}

type GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs struct {
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListCtsdbConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutput() GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListCtsdbConnectParamArray and GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListCtsdbConnectParamArray{ GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListCtsdbConnectParamArray []GetConnectResourceResultConnectResourceListCtsdbConnectParamInput

func (GetConnectResourceResultConnectResourceListCtsdbConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListCtsdbConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListCtsdbConnectParamArray) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListCtsdbConnectParamArray) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListCtsdbConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutput() GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput {
	return o
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListCtsdbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListCtsdbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListCtsdbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListCtsdbConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListCtsdbConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListCtsdbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListCtsdbConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListCtsdbConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListCtsdbConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListDorisConnectParam struct {
	// Doris's http load balancing connection port, usually mapped to be's 8040 port.
	BePort int `pulumi:"bePort"`
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListDorisConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListDorisConnectParamArgs and GetConnectResourceResultConnectResourceListDorisConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListDorisConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListDorisConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListDorisConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListDorisConnectParamOutput() GetConnectResourceResultConnectResourceListDorisConnectParamOutput
	ToGetConnectResourceResultConnectResourceListDorisConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListDorisConnectParamOutput
}

type GetConnectResourceResultConnectResourceListDorisConnectParamArgs struct {
	// Doris's http load balancing connection port, usually mapped to be's 8040 port.
	BePort pulumi.IntInput `pulumi:"bePort"`
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListDorisConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListDorisConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListDorisConnectParamArgs) ToGetConnectResourceResultConnectResourceListDorisConnectParamOutput() GetConnectResourceResultConnectResourceListDorisConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListDorisConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListDorisConnectParamArgs) ToGetConnectResourceResultConnectResourceListDorisConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDorisConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListDorisConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListDorisConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListDorisConnectParamArray and GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListDorisConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListDorisConnectParamArray{ GetConnectResourceResultConnectResourceListDorisConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListDorisConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput() GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListDorisConnectParamArray []GetConnectResourceResultConnectResourceListDorisConnectParamInput

func (GetConnectResourceResultConnectResourceListDorisConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListDorisConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListDorisConnectParamArray) ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput() GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListDorisConnectParamArray) ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListDorisConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListDorisConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListDorisConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) ToGetConnectResourceResultConnectResourceListDorisConnectParamOutput() GetConnectResourceResultConnectResourceListDorisConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) ToGetConnectResourceResultConnectResourceListDorisConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDorisConnectParamOutput {
	return o
}

// Doris's http load balancing connection port, usually mapped to be's 8040 port.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) BePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) int { return v.BePort }).(pulumi.IntOutput)
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListDorisConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDorisConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListDorisConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput() GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListDorisConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListDorisConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListDorisConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListDorisConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListDorisConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListDtsConnectParam struct {
	// The id of the Dts consumer group.
	GroupId string `pulumi:"groupId"`
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Topic subscribed by Dts.
	Topic string `pulumi:"topic"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListDtsConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListDtsConnectParamArgs and GetConnectResourceResultConnectResourceListDtsConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListDtsConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListDtsConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListDtsConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListDtsConnectParamOutput() GetConnectResourceResultConnectResourceListDtsConnectParamOutput
	ToGetConnectResourceResultConnectResourceListDtsConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListDtsConnectParamOutput
}

type GetConnectResourceResultConnectResourceListDtsConnectParamArgs struct {
	// The id of the Dts consumer group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Topic subscribed by Dts.
	Topic pulumi.StringInput `pulumi:"topic"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListDtsConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListDtsConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListDtsConnectParamArgs) ToGetConnectResourceResultConnectResourceListDtsConnectParamOutput() GetConnectResourceResultConnectResourceListDtsConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListDtsConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListDtsConnectParamArgs) ToGetConnectResourceResultConnectResourceListDtsConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDtsConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListDtsConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListDtsConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListDtsConnectParamArray and GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListDtsConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListDtsConnectParamArray{ GetConnectResourceResultConnectResourceListDtsConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListDtsConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput() GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListDtsConnectParamArray []GetConnectResourceResultConnectResourceListDtsConnectParamInput

func (GetConnectResourceResultConnectResourceListDtsConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListDtsConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListDtsConnectParamArray) ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput() GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListDtsConnectParamArray) ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListDtsConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListDtsConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListDtsConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) ToGetConnectResourceResultConnectResourceListDtsConnectParamOutput() GetConnectResourceResultConnectResourceListDtsConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) ToGetConnectResourceResultConnectResourceListDtsConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDtsConnectParamOutput {
	return o
}

// The id of the Dts consumer group.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) string { return v.GroupId }).(pulumi.StringOutput)
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Topic subscribed by Dts.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) string { return v.Topic }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListDtsConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListDtsConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListDtsConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput() GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListDtsConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListDtsConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListDtsConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListDtsConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListDtsConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListEsConnectParam struct {
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListEsConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListEsConnectParamArgs and GetConnectResourceResultConnectResourceListEsConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListEsConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListEsConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListEsConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListEsConnectParamOutput() GetConnectResourceResultConnectResourceListEsConnectParamOutput
	ToGetConnectResourceResultConnectResourceListEsConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListEsConnectParamOutput
}

type GetConnectResourceResultConnectResourceListEsConnectParamArgs struct {
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListEsConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListEsConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListEsConnectParamArgs) ToGetConnectResourceResultConnectResourceListEsConnectParamOutput() GetConnectResourceResultConnectResourceListEsConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListEsConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListEsConnectParamArgs) ToGetConnectResourceResultConnectResourceListEsConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListEsConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListEsConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListEsConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListEsConnectParamArray and GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListEsConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListEsConnectParamArray{ GetConnectResourceResultConnectResourceListEsConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListEsConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutput() GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListEsConnectParamArray []GetConnectResourceResultConnectResourceListEsConnectParamInput

func (GetConnectResourceResultConnectResourceListEsConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListEsConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListEsConnectParamArray) ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutput() GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListEsConnectParamArray) ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListEsConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListEsConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListEsConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) ToGetConnectResourceResultConnectResourceListEsConnectParamOutput() GetConnectResourceResultConnectResourceListEsConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) ToGetConnectResourceResultConnectResourceListEsConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListEsConnectParamOutput {
	return o
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListEsConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListEsConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListEsConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutput() GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListEsConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListEsConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListEsConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListEsConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListEsConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListKafkaConnectParam struct {
	// Broker address for Kafka connection, required for self-build.
	BrokerAddress string `pulumi:"brokerAddress"`
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// Instance resource region of CKafka connection source, required when crossing regions.
	Region string `pulumi:"region"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
}

// GetConnectResourceResultConnectResourceListKafkaConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListKafkaConnectParamArgs and GetConnectResourceResultConnectResourceListKafkaConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListKafkaConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListKafkaConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListKafkaConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutput() GetConnectResourceResultConnectResourceListKafkaConnectParamOutput
	ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListKafkaConnectParamOutput
}

type GetConnectResourceResultConnectResourceListKafkaConnectParamArgs struct {
	// Broker address for Kafka connection, required for self-build.
	BrokerAddress pulumi.StringInput `pulumi:"brokerAddress"`
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// Instance resource region of CKafka connection source, required when crossing regions.
	Region pulumi.StringInput `pulumi:"region"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
}

func (GetConnectResourceResultConnectResourceListKafkaConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListKafkaConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListKafkaConnectParamArgs) ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutput() GetConnectResourceResultConnectResourceListKafkaConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListKafkaConnectParamArgs) ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListKafkaConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListKafkaConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListKafkaConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListKafkaConnectParamArray and GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListKafkaConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListKafkaConnectParamArray{ GetConnectResourceResultConnectResourceListKafkaConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListKafkaConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput() GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListKafkaConnectParamArray []GetConnectResourceResultConnectResourceListKafkaConnectParamInput

func (GetConnectResourceResultConnectResourceListKafkaConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListKafkaConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListKafkaConnectParamArray) ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput() GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListKafkaConnectParamArray) ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListKafkaConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListKafkaConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutput() GetConnectResourceResultConnectResourceListKafkaConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) ToGetConnectResourceResultConnectResourceListKafkaConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListKafkaConnectParamOutput {
	return o
}

// Broker address for Kafka connection, required for self-build.
func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) BrokerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListKafkaConnectParam) string { return v.BrokerAddress }).(pulumi.StringOutput)
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListKafkaConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// Instance resource region of CKafka connection source, required when crossing regions.
func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListKafkaConnectParam) string { return v.Region }).(pulumi.StringOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListKafkaConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListKafkaConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListKafkaConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

type GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListKafkaConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput() GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListKafkaConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListKafkaConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListKafkaConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListKafkaConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListMariaDbConnectParam struct {
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListMariaDbConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs and GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListMariaDbConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListMariaDbConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutput() GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput
	ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput
}

type GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs struct {
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListMariaDbConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutput() GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListMariaDbConnectParamArray and GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListMariaDbConnectParamArray{ GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListMariaDbConnectParamArray []GetConnectResourceResultConnectResourceListMariaDbConnectParamInput

func (GetConnectResourceResultConnectResourceListMariaDbConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListMariaDbConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListMariaDbConnectParamArray) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListMariaDbConnectParamArray) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListMariaDbConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutput() GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput {
	return o
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMariaDbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListMariaDbConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListMariaDbConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListMariaDbConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListMongoDbConnectParam struct {
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListMongoDbConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs and GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListMongoDbConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListMongoDbConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutput() GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput
	ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput
}

type GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs struct {
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListMongoDbConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutput() GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListMongoDbConnectParamArray and GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListMongoDbConnectParamArray{ GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListMongoDbConnectParamArray []GetConnectResourceResultConnectResourceListMongoDbConnectParamInput

func (GetConnectResourceResultConnectResourceListMongoDbConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListMongoDbConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListMongoDbConnectParamArray) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListMongoDbConnectParamArray) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListMongoDbConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutput() GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput {
	return o
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMongoDbConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListMongoDbConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListMongoDbConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListMongoDbConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListMysqlConnectParam struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId string `pulumi:"clusterId"`
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListMysqlConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListMysqlConnectParamArgs and GetConnectResourceResultConnectResourceListMysqlConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListMysqlConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListMysqlConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListMysqlConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutput() GetConnectResourceResultConnectResourceListMysqlConnectParamOutput
	ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListMysqlConnectParamOutput
}

type GetConnectResourceResultConnectResourceListMysqlConnectParamArgs struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListMysqlConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListMysqlConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListMysqlConnectParamArgs) ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutput() GetConnectResourceResultConnectResourceListMysqlConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListMysqlConnectParamArgs) ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMysqlConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListMysqlConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListMysqlConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListMysqlConnectParamArray and GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListMysqlConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListMysqlConnectParamArray{ GetConnectResourceResultConnectResourceListMysqlConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListMysqlConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListMysqlConnectParamArray []GetConnectResourceResultConnectResourceListMysqlConnectParamInput

func (GetConnectResourceResultConnectResourceListMysqlConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListMysqlConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListMysqlConnectParamArray) ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListMysqlConnectParamArray) ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListMysqlConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListMysqlConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutput() GetConnectResourceResultConnectResourceListMysqlConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) ToGetConnectResourceResultConnectResourceListMysqlConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMysqlConnectParamOutput {
	return o
}

// Required when type is TDSQL C_POSTGRESQL.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListMysqlConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListMysqlConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListMysqlConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput() GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListMysqlConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListMysqlConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListMysqlConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListMysqlConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListPostgreSqlConnectParam struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId string `pulumi:"clusterId"`
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListPostgreSqlConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs and GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListPostgreSqlConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListPostgreSqlConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput
	ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput
}

type GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs struct {
	// Required when type is TDSQL C_POSTGRESQL.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether the connection source is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListPostgreSqlConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray and GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray{ GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray []GetConnectResourceResultConnectResourceListPostgreSqlConnectParamInput

func (GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListPostgreSqlConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListPostgreSqlConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput {
	return o
}

// Required when type is TDSQL C_POSTGRESQL.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether the connection source is a self-built cluster.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListPostgreSqlConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListPostgreSqlConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput() GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListPostgreSqlConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListPostgreSqlConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput)
}

type GetConnectResourceResultConnectResourceListSqlServerConnectParam struct {
	// Whether to update to the associated Dip task.
	IsUpdate bool `pulumi:"isUpdate"`
	// The password of the connection source.
	Password string `pulumi:"password"`
	// SQLServer port.
	Port int `pulumi:"port"`
	// Instance resource of connection source.
	Resource string `pulumi:"resource"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip string `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName string `pulumi:"userName"`
}

// GetConnectResourceResultConnectResourceListSqlServerConnectParamInput is an input type that accepts GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs and GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListSqlServerConnectParamInput` via:
//
//	GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs{...}
type GetConnectResourceResultConnectResourceListSqlServerConnectParamInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutput() GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput
	ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput
}

type GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs struct {
	// Whether to update to the associated Dip task.
	IsUpdate pulumi.BoolInput `pulumi:"isUpdate"`
	// The password of the connection source.
	Password pulumi.StringInput `pulumi:"password"`
	// SQLServer port.
	Port pulumi.IntInput `pulumi:"port"`
	// Instance resource of connection source.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// The username of the connection source.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListSqlServerConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutput() GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput {
	return i.ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput)
}

// GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayInput is an input type that accepts GetConnectResourceResultConnectResourceListSqlServerConnectParamArray and GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput values.
// You can construct a concrete instance of `GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayInput` via:
//
//	GetConnectResourceResultConnectResourceListSqlServerConnectParamArray{ GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs{...} }
type GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayInput interface {
	pulumi.Input

	ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput() GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput
	ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutputWithContext(context.Context) GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput
}

type GetConnectResourceResultConnectResourceListSqlServerConnectParamArray []GetConnectResourceResultConnectResourceListSqlServerConnectParamInput

func (GetConnectResourceResultConnectResourceListSqlServerConnectParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListSqlServerConnectParam)(nil)).Elem()
}

func (i GetConnectResourceResultConnectResourceListSqlServerConnectParamArray) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput() GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput {
	return i.ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutputWithContext(context.Background())
}

func (i GetConnectResourceResultConnectResourceListSqlServerConnectParamArray) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput)
}

type GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectResourceResultConnectResourceListSqlServerConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutput() GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput {
	return o
}

// Whether to update to the associated Dip task.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) IsUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) bool { return v.IsUpdate }).(pulumi.BoolOutput)
}

// The password of the connection source.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) string { return v.Password }).(pulumi.StringOutput)
}

// SQLServer port.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) int { return v.Port }).(pulumi.IntOutput)
}

// Instance resource of connection source.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Instance VIP of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// The vpc Id of the connection source, when it is a Tencent Cloud instance, it is required.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// The username of the connection source.
func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectResourceResultConnectResourceListSqlServerConnectParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectResourceResultConnectResourceListSqlServerConnectParam)(nil)).Elem()
}

func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput() GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput) ToGetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutputWithContext(ctx context.Context) GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput {
	return o
}

func (o GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput) Index(i pulumi.IntInput) GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectResourceResultConnectResourceListSqlServerConnectParam {
		return vs[0].([]GetConnectResourceResultConnectResourceListSqlServerConnectParam)[vs[1].(int)]
	}).(GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput)
}

type GetDatahubGroupOffsetsTopicList struct {
	// The topic partition array, where each element is a json object.
	Partitions []GetDatahubGroupOffsetsTopicListPartition `pulumi:"partitions"`
	// topic name.
	Topic string `pulumi:"topic"`
}

// GetDatahubGroupOffsetsTopicListInput is an input type that accepts GetDatahubGroupOffsetsTopicListArgs and GetDatahubGroupOffsetsTopicListOutput values.
// You can construct a concrete instance of `GetDatahubGroupOffsetsTopicListInput` via:
//
//	GetDatahubGroupOffsetsTopicListArgs{...}
type GetDatahubGroupOffsetsTopicListInput interface {
	pulumi.Input

	ToGetDatahubGroupOffsetsTopicListOutput() GetDatahubGroupOffsetsTopicListOutput
	ToGetDatahubGroupOffsetsTopicListOutputWithContext(context.Context) GetDatahubGroupOffsetsTopicListOutput
}

type GetDatahubGroupOffsetsTopicListArgs struct {
	// The topic partition array, where each element is a json object.
	Partitions GetDatahubGroupOffsetsTopicListPartitionArrayInput `pulumi:"partitions"`
	// topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetDatahubGroupOffsetsTopicListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubGroupOffsetsTopicList)(nil)).Elem()
}

func (i GetDatahubGroupOffsetsTopicListArgs) ToGetDatahubGroupOffsetsTopicListOutput() GetDatahubGroupOffsetsTopicListOutput {
	return i.ToGetDatahubGroupOffsetsTopicListOutputWithContext(context.Background())
}

func (i GetDatahubGroupOffsetsTopicListArgs) ToGetDatahubGroupOffsetsTopicListOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubGroupOffsetsTopicListOutput)
}

// GetDatahubGroupOffsetsTopicListArrayInput is an input type that accepts GetDatahubGroupOffsetsTopicListArray and GetDatahubGroupOffsetsTopicListArrayOutput values.
// You can construct a concrete instance of `GetDatahubGroupOffsetsTopicListArrayInput` via:
//
//	GetDatahubGroupOffsetsTopicListArray{ GetDatahubGroupOffsetsTopicListArgs{...} }
type GetDatahubGroupOffsetsTopicListArrayInput interface {
	pulumi.Input

	ToGetDatahubGroupOffsetsTopicListArrayOutput() GetDatahubGroupOffsetsTopicListArrayOutput
	ToGetDatahubGroupOffsetsTopicListArrayOutputWithContext(context.Context) GetDatahubGroupOffsetsTopicListArrayOutput
}

type GetDatahubGroupOffsetsTopicListArray []GetDatahubGroupOffsetsTopicListInput

func (GetDatahubGroupOffsetsTopicListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubGroupOffsetsTopicList)(nil)).Elem()
}

func (i GetDatahubGroupOffsetsTopicListArray) ToGetDatahubGroupOffsetsTopicListArrayOutput() GetDatahubGroupOffsetsTopicListArrayOutput {
	return i.ToGetDatahubGroupOffsetsTopicListArrayOutputWithContext(context.Background())
}

func (i GetDatahubGroupOffsetsTopicListArray) ToGetDatahubGroupOffsetsTopicListArrayOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubGroupOffsetsTopicListArrayOutput)
}

type GetDatahubGroupOffsetsTopicListOutput struct{ *pulumi.OutputState }

func (GetDatahubGroupOffsetsTopicListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubGroupOffsetsTopicList)(nil)).Elem()
}

func (o GetDatahubGroupOffsetsTopicListOutput) ToGetDatahubGroupOffsetsTopicListOutput() GetDatahubGroupOffsetsTopicListOutput {
	return o
}

func (o GetDatahubGroupOffsetsTopicListOutput) ToGetDatahubGroupOffsetsTopicListOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListOutput {
	return o
}

// The topic partition array, where each element is a json object.
func (o GetDatahubGroupOffsetsTopicListOutput) Partitions() GetDatahubGroupOffsetsTopicListPartitionArrayOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicList) []GetDatahubGroupOffsetsTopicListPartition {
		return v.Partitions
	}).(GetDatahubGroupOffsetsTopicListPartitionArrayOutput)
}

// topic name.
func (o GetDatahubGroupOffsetsTopicListOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicList) string { return v.Topic }).(pulumi.StringOutput)
}

type GetDatahubGroupOffsetsTopicListArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubGroupOffsetsTopicListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubGroupOffsetsTopicList)(nil)).Elem()
}

func (o GetDatahubGroupOffsetsTopicListArrayOutput) ToGetDatahubGroupOffsetsTopicListArrayOutput() GetDatahubGroupOffsetsTopicListArrayOutput {
	return o
}

func (o GetDatahubGroupOffsetsTopicListArrayOutput) ToGetDatahubGroupOffsetsTopicListArrayOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListArrayOutput {
	return o
}

func (o GetDatahubGroupOffsetsTopicListArrayOutput) Index(i pulumi.IntInput) GetDatahubGroupOffsetsTopicListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubGroupOffsetsTopicList {
		return vs[0].([]GetDatahubGroupOffsetsTopicList)[vs[1].(int)]
	}).(GetDatahubGroupOffsetsTopicListOutput)
}

type GetDatahubGroupOffsetsTopicListPartition struct {
	// Error Code.
	ErrorCode int `pulumi:"errorCode"`
	// The number of unconsumed messages.
	Lag int `pulumi:"lag"`
	// partition Log End Offset.
	LogEndOffset int `pulumi:"logEndOffset"`
	// Usually an empty string.
	Metadata string `pulumi:"metadata"`
	// consumer offset.
	Offset int `pulumi:"offset"`
	// topic partitionId.
	Partition int `pulumi:"partition"`
}

// GetDatahubGroupOffsetsTopicListPartitionInput is an input type that accepts GetDatahubGroupOffsetsTopicListPartitionArgs and GetDatahubGroupOffsetsTopicListPartitionOutput values.
// You can construct a concrete instance of `GetDatahubGroupOffsetsTopicListPartitionInput` via:
//
//	GetDatahubGroupOffsetsTopicListPartitionArgs{...}
type GetDatahubGroupOffsetsTopicListPartitionInput interface {
	pulumi.Input

	ToGetDatahubGroupOffsetsTopicListPartitionOutput() GetDatahubGroupOffsetsTopicListPartitionOutput
	ToGetDatahubGroupOffsetsTopicListPartitionOutputWithContext(context.Context) GetDatahubGroupOffsetsTopicListPartitionOutput
}

type GetDatahubGroupOffsetsTopicListPartitionArgs struct {
	// Error Code.
	ErrorCode pulumi.IntInput `pulumi:"errorCode"`
	// The number of unconsumed messages.
	Lag pulumi.IntInput `pulumi:"lag"`
	// partition Log End Offset.
	LogEndOffset pulumi.IntInput `pulumi:"logEndOffset"`
	// Usually an empty string.
	Metadata pulumi.StringInput `pulumi:"metadata"`
	// consumer offset.
	Offset pulumi.IntInput `pulumi:"offset"`
	// topic partitionId.
	Partition pulumi.IntInput `pulumi:"partition"`
}

func (GetDatahubGroupOffsetsTopicListPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (i GetDatahubGroupOffsetsTopicListPartitionArgs) ToGetDatahubGroupOffsetsTopicListPartitionOutput() GetDatahubGroupOffsetsTopicListPartitionOutput {
	return i.ToGetDatahubGroupOffsetsTopicListPartitionOutputWithContext(context.Background())
}

func (i GetDatahubGroupOffsetsTopicListPartitionArgs) ToGetDatahubGroupOffsetsTopicListPartitionOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubGroupOffsetsTopicListPartitionOutput)
}

// GetDatahubGroupOffsetsTopicListPartitionArrayInput is an input type that accepts GetDatahubGroupOffsetsTopicListPartitionArray and GetDatahubGroupOffsetsTopicListPartitionArrayOutput values.
// You can construct a concrete instance of `GetDatahubGroupOffsetsTopicListPartitionArrayInput` via:
//
//	GetDatahubGroupOffsetsTopicListPartitionArray{ GetDatahubGroupOffsetsTopicListPartitionArgs{...} }
type GetDatahubGroupOffsetsTopicListPartitionArrayInput interface {
	pulumi.Input

	ToGetDatahubGroupOffsetsTopicListPartitionArrayOutput() GetDatahubGroupOffsetsTopicListPartitionArrayOutput
	ToGetDatahubGroupOffsetsTopicListPartitionArrayOutputWithContext(context.Context) GetDatahubGroupOffsetsTopicListPartitionArrayOutput
}

type GetDatahubGroupOffsetsTopicListPartitionArray []GetDatahubGroupOffsetsTopicListPartitionInput

func (GetDatahubGroupOffsetsTopicListPartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (i GetDatahubGroupOffsetsTopicListPartitionArray) ToGetDatahubGroupOffsetsTopicListPartitionArrayOutput() GetDatahubGroupOffsetsTopicListPartitionArrayOutput {
	return i.ToGetDatahubGroupOffsetsTopicListPartitionArrayOutputWithContext(context.Background())
}

func (i GetDatahubGroupOffsetsTopicListPartitionArray) ToGetDatahubGroupOffsetsTopicListPartitionArrayOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListPartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubGroupOffsetsTopicListPartitionArrayOutput)
}

type GetDatahubGroupOffsetsTopicListPartitionOutput struct{ *pulumi.OutputState }

func (GetDatahubGroupOffsetsTopicListPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (o GetDatahubGroupOffsetsTopicListPartitionOutput) ToGetDatahubGroupOffsetsTopicListPartitionOutput() GetDatahubGroupOffsetsTopicListPartitionOutput {
	return o
}

func (o GetDatahubGroupOffsetsTopicListPartitionOutput) ToGetDatahubGroupOffsetsTopicListPartitionOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListPartitionOutput {
	return o
}

// Error Code.
func (o GetDatahubGroupOffsetsTopicListPartitionOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicListPartition) int { return v.ErrorCode }).(pulumi.IntOutput)
}

// The number of unconsumed messages.
func (o GetDatahubGroupOffsetsTopicListPartitionOutput) Lag() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicListPartition) int { return v.Lag }).(pulumi.IntOutput)
}

// partition Log End Offset.
func (o GetDatahubGroupOffsetsTopicListPartitionOutput) LogEndOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicListPartition) int { return v.LogEndOffset }).(pulumi.IntOutput)
}

// Usually an empty string.
func (o GetDatahubGroupOffsetsTopicListPartitionOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicListPartition) string { return v.Metadata }).(pulumi.StringOutput)
}

// consumer offset.
func (o GetDatahubGroupOffsetsTopicListPartitionOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicListPartition) int { return v.Offset }).(pulumi.IntOutput)
}

// topic partitionId.
func (o GetDatahubGroupOffsetsTopicListPartitionOutput) Partition() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubGroupOffsetsTopicListPartition) int { return v.Partition }).(pulumi.IntOutput)
}

type GetDatahubGroupOffsetsTopicListPartitionArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubGroupOffsetsTopicListPartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (o GetDatahubGroupOffsetsTopicListPartitionArrayOutput) ToGetDatahubGroupOffsetsTopicListPartitionArrayOutput() GetDatahubGroupOffsetsTopicListPartitionArrayOutput {
	return o
}

func (o GetDatahubGroupOffsetsTopicListPartitionArrayOutput) ToGetDatahubGroupOffsetsTopicListPartitionArrayOutputWithContext(ctx context.Context) GetDatahubGroupOffsetsTopicListPartitionArrayOutput {
	return o
}

func (o GetDatahubGroupOffsetsTopicListPartitionArrayOutput) Index(i pulumi.IntInput) GetDatahubGroupOffsetsTopicListPartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubGroupOffsetsTopicListPartition {
		return vs[0].([]GetDatahubGroupOffsetsTopicListPartition)[vs[1].(int)]
	}).(GetDatahubGroupOffsetsTopicListPartitionOutput)
}

type GetDatahubTaskTaskList struct {
	// CreateTime.
	CreateTime string `pulumi:"createTime"`
	// Datahub Id.
	DatahubId string `pulumi:"datahubId"`
	// ErrorMessage.
	ErrorMessage string `pulumi:"errorMessage"`
	// data resource.
	SourceResources []GetDatahubTaskTaskListSourceResource `pulumi:"sourceResources"`
	// Status, -1 failed to create, 0 to create, 1 to run, 2 to delete, 3 to deleted, 4 to delete failed, 5 to pause, 6 to pause, 7 to pause, 8 to resume, 9 to resume failed.
	Status int `pulumi:"status"`
	// StepList.
	StepLists []string `pulumi:"stepLists"`
	// Target Resource.
	TargetResources []GetDatahubTaskTaskListTargetResource `pulumi:"targetResources"`
	// Task Current Step.
	TaskCurrentStep string `pulumi:"taskCurrentStep"`
	// task ID.
	TaskId string `pulumi:"taskId"`
	// TaskName.
	TaskName string `pulumi:"taskName"`
	// Creation progress percentage.
	TaskProgress float64 `pulumi:"taskProgress"`
	// Task type, SOURCE|SINK.
	TaskType string `pulumi:"taskType"`
}

// GetDatahubTaskTaskListInput is an input type that accepts GetDatahubTaskTaskListArgs and GetDatahubTaskTaskListOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListInput` via:
//
//	GetDatahubTaskTaskListArgs{...}
type GetDatahubTaskTaskListInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListOutput() GetDatahubTaskTaskListOutput
	ToGetDatahubTaskTaskListOutputWithContext(context.Context) GetDatahubTaskTaskListOutput
}

type GetDatahubTaskTaskListArgs struct {
	// CreateTime.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Datahub Id.
	DatahubId pulumi.StringInput `pulumi:"datahubId"`
	// ErrorMessage.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// data resource.
	SourceResources GetDatahubTaskTaskListSourceResourceArrayInput `pulumi:"sourceResources"`
	// Status, -1 failed to create, 0 to create, 1 to run, 2 to delete, 3 to deleted, 4 to delete failed, 5 to pause, 6 to pause, 7 to pause, 8 to resume, 9 to resume failed.
	Status pulumi.IntInput `pulumi:"status"`
	// StepList.
	StepLists pulumi.StringArrayInput `pulumi:"stepLists"`
	// Target Resource.
	TargetResources GetDatahubTaskTaskListTargetResourceArrayInput `pulumi:"targetResources"`
	// Task Current Step.
	TaskCurrentStep pulumi.StringInput `pulumi:"taskCurrentStep"`
	// task ID.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// TaskName.
	TaskName pulumi.StringInput `pulumi:"taskName"`
	// Creation progress percentage.
	TaskProgress pulumi.Float64Input `pulumi:"taskProgress"`
	// Task type, SOURCE|SINK.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetDatahubTaskTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskList)(nil)).Elem()
}

func (i GetDatahubTaskTaskListArgs) ToGetDatahubTaskTaskListOutput() GetDatahubTaskTaskListOutput {
	return i.ToGetDatahubTaskTaskListOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListArgs) ToGetDatahubTaskTaskListOutputWithContext(ctx context.Context) GetDatahubTaskTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListOutput)
}

// GetDatahubTaskTaskListArrayInput is an input type that accepts GetDatahubTaskTaskListArray and GetDatahubTaskTaskListArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListArrayInput` via:
//
//	GetDatahubTaskTaskListArray{ GetDatahubTaskTaskListArgs{...} }
type GetDatahubTaskTaskListArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListArrayOutput() GetDatahubTaskTaskListArrayOutput
	ToGetDatahubTaskTaskListArrayOutputWithContext(context.Context) GetDatahubTaskTaskListArrayOutput
}

type GetDatahubTaskTaskListArray []GetDatahubTaskTaskListInput

func (GetDatahubTaskTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskList)(nil)).Elem()
}

func (i GetDatahubTaskTaskListArray) ToGetDatahubTaskTaskListArrayOutput() GetDatahubTaskTaskListArrayOutput {
	return i.ToGetDatahubTaskTaskListArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListArray) ToGetDatahubTaskTaskListArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListArrayOutput)
}

type GetDatahubTaskTaskListOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskList)(nil)).Elem()
}

func (o GetDatahubTaskTaskListOutput) ToGetDatahubTaskTaskListOutput() GetDatahubTaskTaskListOutput {
	return o
}

func (o GetDatahubTaskTaskListOutput) ToGetDatahubTaskTaskListOutputWithContext(ctx context.Context) GetDatahubTaskTaskListOutput {
	return o
}

// CreateTime.
func (o GetDatahubTaskTaskListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Datahub Id.
func (o GetDatahubTaskTaskListOutput) DatahubId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.DatahubId }).(pulumi.StringOutput)
}

// ErrorMessage.
func (o GetDatahubTaskTaskListOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// data resource.
func (o GetDatahubTaskTaskListOutput) SourceResources() GetDatahubTaskTaskListSourceResourceArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) []GetDatahubTaskTaskListSourceResource { return v.SourceResources }).(GetDatahubTaskTaskListSourceResourceArrayOutput)
}

// Status, -1 failed to create, 0 to create, 1 to run, 2 to delete, 3 to deleted, 4 to delete failed, 5 to pause, 6 to pause, 7 to pause, 8 to resume, 9 to resume failed.
func (o GetDatahubTaskTaskListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) int { return v.Status }).(pulumi.IntOutput)
}

// StepList.
func (o GetDatahubTaskTaskListOutput) StepLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) []string { return v.StepLists }).(pulumi.StringArrayOutput)
}

// Target Resource.
func (o GetDatahubTaskTaskListOutput) TargetResources() GetDatahubTaskTaskListTargetResourceArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) []GetDatahubTaskTaskListTargetResource { return v.TargetResources }).(GetDatahubTaskTaskListTargetResourceArrayOutput)
}

// Task Current Step.
func (o GetDatahubTaskTaskListOutput) TaskCurrentStep() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.TaskCurrentStep }).(pulumi.StringOutput)
}

// task ID.
func (o GetDatahubTaskTaskListOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.TaskId }).(pulumi.StringOutput)
}

// TaskName.
func (o GetDatahubTaskTaskListOutput) TaskName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.TaskName }).(pulumi.StringOutput)
}

// Creation progress percentage.
func (o GetDatahubTaskTaskListOutput) TaskProgress() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatahubTaskTaskList) float64 { return v.TaskProgress }).(pulumi.Float64Output)
}

// Task type, SOURCE|SINK.
func (o GetDatahubTaskTaskListOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskList) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskList)(nil)).Elem()
}

func (o GetDatahubTaskTaskListArrayOutput) ToGetDatahubTaskTaskListArrayOutput() GetDatahubTaskTaskListArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListArrayOutput) ToGetDatahubTaskTaskListArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskList {
		return vs[0].([]GetDatahubTaskTaskList)[vs[1].(int)]
	}).(GetDatahubTaskTaskListOutput)
}

type GetDatahubTaskTaskListSourceResource struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParams []GetDatahubTaskTaskListSourceResourceClickHouseParam `pulumi:"clickHouseParams"`
	// Cls configuration, Required when Type is CLS.
	ClsParams []GetDatahubTaskTaskListSourceResourceClsParam `pulumi:"clsParams"`
	// Cos configuration, required when Type is COS.
	CosParams []GetDatahubTaskTaskListSourceResourceCosParam `pulumi:"cosParams"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParams []GetDatahubTaskTaskListSourceResourceCtsdbParam `pulumi:"ctsdbParams"`
	// Dts configuration, required when Type is DTS.
	DtsParams []GetDatahubTaskTaskListSourceResourceDtsParam `pulumi:"dtsParams"`
	// Es configuration, required when Type is ES.
	EsParams []GetDatahubTaskTaskListSourceResourceEsParam `pulumi:"esParams"`
	// EB configuration, required when type is EB.
	EventBusParams []GetDatahubTaskTaskListSourceResourceEventBusParam `pulumi:"eventBusParams"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams []GetDatahubTaskTaskListSourceResourceKafkaParam `pulumi:"kafkaParams"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParams []GetDatahubTaskTaskListSourceResourceMariaDbParam `pulumi:"mariaDbParams"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParams []GetDatahubTaskTaskListSourceResourceMongoDbParam `pulumi:"mongoDbParams"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParams []GetDatahubTaskTaskListSourceResourceMySqlParam `pulumi:"mySqlParams"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParams []GetDatahubTaskTaskListSourceResourcePostgreSqlParam `pulumi:"postgreSqlParams"`
	// Scf configuration, Required when Type is SCF.
	ScfParams []GetDatahubTaskTaskListSourceResourceScfParam `pulumi:"scfParams"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParams []GetDatahubTaskTaskListSourceResourceSqlServerParam `pulumi:"sqlServerParams"`
	// Tdw configuration, required when Type is TDW.
	TdwParams []GetDatahubTaskTaskListSourceResourceTdwParam `pulumi:"tdwParams"`
	// Topic configuration, Required when Type is Topic.
	TopicParams []GetDatahubTaskTaskListSourceResourceTopicParam `pulumi:"topicParams"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListSourceResourceInput is an input type that accepts GetDatahubTaskTaskListSourceResourceArgs and GetDatahubTaskTaskListSourceResourceOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceInput` via:
//
//	GetDatahubTaskTaskListSourceResourceArgs{...}
type GetDatahubTaskTaskListSourceResourceInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceOutput() GetDatahubTaskTaskListSourceResourceOutput
	ToGetDatahubTaskTaskListSourceResourceOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceOutput
}

type GetDatahubTaskTaskListSourceResourceArgs struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParams GetDatahubTaskTaskListSourceResourceClickHouseParamArrayInput `pulumi:"clickHouseParams"`
	// Cls configuration, Required when Type is CLS.
	ClsParams GetDatahubTaskTaskListSourceResourceClsParamArrayInput `pulumi:"clsParams"`
	// Cos configuration, required when Type is COS.
	CosParams GetDatahubTaskTaskListSourceResourceCosParamArrayInput `pulumi:"cosParams"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParams GetDatahubTaskTaskListSourceResourceCtsdbParamArrayInput `pulumi:"ctsdbParams"`
	// Dts configuration, required when Type is DTS.
	DtsParams GetDatahubTaskTaskListSourceResourceDtsParamArrayInput `pulumi:"dtsParams"`
	// Es configuration, required when Type is ES.
	EsParams GetDatahubTaskTaskListSourceResourceEsParamArrayInput `pulumi:"esParams"`
	// EB configuration, required when type is EB.
	EventBusParams GetDatahubTaskTaskListSourceResourceEventBusParamArrayInput `pulumi:"eventBusParams"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams GetDatahubTaskTaskListSourceResourceKafkaParamArrayInput `pulumi:"kafkaParams"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParams GetDatahubTaskTaskListSourceResourceMariaDbParamArrayInput `pulumi:"mariaDbParams"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParams GetDatahubTaskTaskListSourceResourceMongoDbParamArrayInput `pulumi:"mongoDbParams"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParams GetDatahubTaskTaskListSourceResourceMySqlParamArrayInput `pulumi:"mySqlParams"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParams GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayInput `pulumi:"postgreSqlParams"`
	// Scf configuration, Required when Type is SCF.
	ScfParams GetDatahubTaskTaskListSourceResourceScfParamArrayInput `pulumi:"scfParams"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParams GetDatahubTaskTaskListSourceResourceSqlServerParamArrayInput `pulumi:"sqlServerParams"`
	// Tdw configuration, required when Type is TDW.
	TdwParams GetDatahubTaskTaskListSourceResourceTdwParamArrayInput `pulumi:"tdwParams"`
	// Topic configuration, Required when Type is Topic.
	TopicParams GetDatahubTaskTaskListSourceResourceTopicParamArrayInput `pulumi:"topicParams"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListSourceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResource)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceArgs) ToGetDatahubTaskTaskListSourceResourceOutput() GetDatahubTaskTaskListSourceResourceOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceArgs) ToGetDatahubTaskTaskListSourceResourceOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceOutput)
}

// GetDatahubTaskTaskListSourceResourceArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceArray and GetDatahubTaskTaskListSourceResourceArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceArray{ GetDatahubTaskTaskListSourceResourceArgs{...} }
type GetDatahubTaskTaskListSourceResourceArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceArrayOutput() GetDatahubTaskTaskListSourceResourceArrayOutput
	ToGetDatahubTaskTaskListSourceResourceArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceArrayOutput
}

type GetDatahubTaskTaskListSourceResourceArray []GetDatahubTaskTaskListSourceResourceInput

func (GetDatahubTaskTaskListSourceResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResource)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceArray) ToGetDatahubTaskTaskListSourceResourceArrayOutput() GetDatahubTaskTaskListSourceResourceArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceArray) ToGetDatahubTaskTaskListSourceResourceArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResource)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceOutput) ToGetDatahubTaskTaskListSourceResourceOutput() GetDatahubTaskTaskListSourceResourceOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceOutput) ToGetDatahubTaskTaskListSourceResourceOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceOutput {
	return o
}

// ClickHouse config, Type CLICKHOUSE requierd.
func (o GetDatahubTaskTaskListSourceResourceOutput) ClickHouseParams() GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceClickHouseParam {
		return v.ClickHouseParams
	}).(GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput)
}

// Cls configuration, Required when Type is CLS.
func (o GetDatahubTaskTaskListSourceResourceOutput) ClsParams() GetDatahubTaskTaskListSourceResourceClsParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceClsParam {
		return v.ClsParams
	}).(GetDatahubTaskTaskListSourceResourceClsParamArrayOutput)
}

// Cos configuration, required when Type is COS.
func (o GetDatahubTaskTaskListSourceResourceOutput) CosParams() GetDatahubTaskTaskListSourceResourceCosParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceCosParam {
		return v.CosParams
	}).(GetDatahubTaskTaskListSourceResourceCosParamArrayOutput)
}

// Ctsdb configuration, Required when Type is CTSDB.
func (o GetDatahubTaskTaskListSourceResourceOutput) CtsdbParams() GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceCtsdbParam {
		return v.CtsdbParams
	}).(GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput)
}

// Dts configuration, required when Type is DTS.
func (o GetDatahubTaskTaskListSourceResourceOutput) DtsParams() GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceDtsParam {
		return v.DtsParams
	}).(GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput)
}

// Es configuration, required when Type is ES.
func (o GetDatahubTaskTaskListSourceResourceOutput) EsParams() GetDatahubTaskTaskListSourceResourceEsParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceEsParam {
		return v.EsParams
	}).(GetDatahubTaskTaskListSourceResourceEsParamArrayOutput)
}

// EB configuration, required when type is EB.
func (o GetDatahubTaskTaskListSourceResourceOutput) EventBusParams() GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceEventBusParam {
		return v.EventBusParams
	}).(GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o GetDatahubTaskTaskListSourceResourceOutput) KafkaParams() GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceKafkaParam {
		return v.KafkaParams
	}).(GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput)
}

// MariaDB configuration, Required when Type is MARIADB.
func (o GetDatahubTaskTaskListSourceResourceOutput) MariaDbParams() GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceMariaDbParam {
		return v.MariaDbParams
	}).(GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput)
}

// MongoDB config, Required when Type is MONGODB.
func (o GetDatahubTaskTaskListSourceResourceOutput) MongoDbParams() GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceMongoDbParam {
		return v.MongoDbParams
	}).(GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput)
}

// MySQL configuration, Required when Type is MYSQL.
func (o GetDatahubTaskTaskListSourceResourceOutput) MySqlParams() GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceMySqlParam {
		return v.MySqlParams
	}).(GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput)
}

// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
func (o GetDatahubTaskTaskListSourceResourceOutput) PostgreSqlParams() GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourcePostgreSqlParam {
		return v.PostgreSqlParams
	}).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput)
}

// Scf configuration, Required when Type is SCF.
func (o GetDatahubTaskTaskListSourceResourceOutput) ScfParams() GetDatahubTaskTaskListSourceResourceScfParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceScfParam {
		return v.ScfParams
	}).(GetDatahubTaskTaskListSourceResourceScfParamArrayOutput)
}

// SQLServer configuration, Required when Type is SQLSERVER.
func (o GetDatahubTaskTaskListSourceResourceOutput) SqlServerParams() GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceSqlServerParam {
		return v.SqlServerParams
	}).(GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput)
}

// Tdw configuration, required when Type is TDW.
func (o GetDatahubTaskTaskListSourceResourceOutput) TdwParams() GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceTdwParam {
		return v.TdwParams
	}).(GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput)
}

// Topic configuration, Required when Type is Topic.
func (o GetDatahubTaskTaskListSourceResourceOutput) TopicParams() GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) []GetDatahubTaskTaskListSourceResourceTopicParam {
		return v.TopicParams
	}).(GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResource)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceArrayOutput) ToGetDatahubTaskTaskListSourceResourceArrayOutput() GetDatahubTaskTaskListSourceResourceArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceArrayOutput) ToGetDatahubTaskTaskListSourceResourceArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResource {
		return vs[0].([]GetDatahubTaskTaskListSourceResource)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParam struct {
	// ClickHouse cluster.
	Cluster string `pulumi:"cluster"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls []GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// Mongo DB connection ip.
	Ip string `pulumi:"ip"`
	// MongoDB database password.
	Password string `pulumi:"password"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// ClickHouse schema.
	Schemas []GetDatahubTaskTaskListSourceResourceClickHouseParamSchema `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip string `pulumi:"serviceVip"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Resource Type.
	Type string `pulumi:"type"`
	// instance vpc id.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName string `pulumi:"userName"`
}

// GetDatahubTaskTaskListSourceResourceClickHouseParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClickHouseParamArgs and GetDatahubTaskTaskListSourceResourceClickHouseParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClickHouseParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClickHouseParamArgs{...}
type GetDatahubTaskTaskListSourceResourceClickHouseParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamOutput
	ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamOutput
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamArgs struct {
	// ClickHouse cluster.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayInput `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// Mongo DB connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
	// MongoDB database password.
	Password pulumi.StringInput `pulumi:"password"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// ClickHouse schema.
	Schemas GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayInput `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
	// instance vpc id.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDatahubTaskTaskListSourceResourceClickHouseParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamArgs) ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamArgs) ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClickHouseParamOutput)
}

// GetDatahubTaskTaskListSourceResourceClickHouseParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClickHouseParamArray and GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClickHouseParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClickHouseParamArray{ GetDatahubTaskTaskListSourceResourceClickHouseParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceClickHouseParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamArray []GetDatahubTaskTaskListSourceResourceClickHouseParamInput

func (GetDatahubTaskTaskListSourceResourceClickHouseParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClickHouseParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamArray) ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamArray) ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamOutput {
	return o
}

// ClickHouse cluster.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Cluster }).(pulumi.StringOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Database }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) DropCls() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) []GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl {
		return v.DropCls
	}).(GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// Mongo DB connection ip.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Ip }).(pulumi.StringOutput)
}

// MongoDB database password.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Password }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) int { return v.Port }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Resource }).(pulumi.StringOutput)
}

// ClickHouse schema.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Schemas() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) []GetDatahubTaskTaskListSourceResourceClickHouseParamSchema {
		return v.Schemas
	}).(GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// instance vip.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Table }).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.Type }).(pulumi.StringOutput)
}

// instance vpc id.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// MongoDB database user name.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClickHouseParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceClickHouseParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceClickHouseParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceClickHouseParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceClickHouseParamOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl struct {
	// cls LogSet id.
	DropClsLogSet string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls bool `pulumi:"dropInvalidMessageToCls"`
}

// GetDatahubTaskTaskListSourceResourceClickHouseParamDropClInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs and GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClickHouseParamDropClInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs{...}
type GetDatahubTaskTaskListSourceResourceClickHouseParamDropClInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput
	ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolInput `pulumi:"dropInvalidMessageToCls"`
}

func (GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput)
}

// GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray and GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray{ GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs{...} }
type GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput
	ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray []GetDatahubTaskTaskListSourceResourceClickHouseParamDropClInput

func (GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput {
	return o
}

// cls LogSet id.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) DropClsLogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl) string { return v.DropClsLogSet }).(pulumi.StringOutput)
}

// account.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) DropClsOwneruin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl) string { return v.DropClsOwneruin }).(pulumi.StringOutput)
}

// The region where the cls is delivered.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) DropClsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl) string { return v.DropClsRegion }).(pulumi.StringOutput)
}

// cls topic.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) DropClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl) string { return v.DropClsTopicId }).(pulumi.StringOutput)
}

// Whether to deliver to cls.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput) DropInvalidMessageToCls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl) bool {
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceClickHouseParamDropCl)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamSchema struct {
	// Whether the message is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// Column Name.
	ColumnName string `pulumi:"columnName"`
	// The key name of the message.
	JsonKey string `pulumi:"jsonKey"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs and GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs{...}
type GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput
	ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// Column Name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The key name of the message.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput)
}

// GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray and GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray{ GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs{...} }
type GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput
	ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray []GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaInput

func (GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamSchema) bool { return v.AllowNull }).(pulumi.BoolOutput)
}

// Column Name.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamSchema) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The key name of the message.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamSchema) string { return v.JsonKey }).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClickHouseParamSchema) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClickHouseParamSchema)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput() GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput) ToGetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceClickHouseParamSchema {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceClickHouseParamSchema)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput)
}

type GetDatahubTaskTaskListSourceResourceClsParam struct {
	// key for data in non-json format.
	ContentKey string `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson bool `pulumi:"decodeJson"`
	// LogSet id.
	LogSet string `pulumi:"logSet"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField string `pulumi:"timeField"`
}

// GetDatahubTaskTaskListSourceResourceClsParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClsParamArgs and GetDatahubTaskTaskListSourceResourceClsParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClsParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClsParamArgs{...}
type GetDatahubTaskTaskListSourceResourceClsParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClsParamOutput() GetDatahubTaskTaskListSourceResourceClsParamOutput
	ToGetDatahubTaskTaskListSourceResourceClsParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClsParamOutput
}

type GetDatahubTaskTaskListSourceResourceClsParamArgs struct {
	// key for data in non-json format.
	ContentKey pulumi.StringInput `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson pulumi.BoolInput `pulumi:"decodeJson"`
	// LogSet id.
	LogSet pulumi.StringInput `pulumi:"logSet"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField pulumi.StringInput `pulumi:"timeField"`
}

func (GetDatahubTaskTaskListSourceResourceClsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClsParamArgs) ToGetDatahubTaskTaskListSourceResourceClsParamOutput() GetDatahubTaskTaskListSourceResourceClsParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClsParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClsParamArgs) ToGetDatahubTaskTaskListSourceResourceClsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClsParamOutput)
}

// GetDatahubTaskTaskListSourceResourceClsParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceClsParamArray and GetDatahubTaskTaskListSourceResourceClsParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceClsParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceClsParamArray{ GetDatahubTaskTaskListSourceResourceClsParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceClsParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutput() GetDatahubTaskTaskListSourceResourceClsParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceClsParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceClsParamArray []GetDatahubTaskTaskListSourceResourceClsParamInput

func (GetDatahubTaskTaskListSourceResourceClsParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceClsParamArray) ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutput() GetDatahubTaskTaskListSourceResourceClsParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceClsParamArray) ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClsParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceClsParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceClsParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) ToGetDatahubTaskTaskListSourceResourceClsParamOutput() GetDatahubTaskTaskListSourceResourceClsParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) ToGetDatahubTaskTaskListSourceResourceClsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClsParamOutput {
	return o
}

// key for data in non-json format.
func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) ContentKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClsParam) string { return v.ContentKey }).(pulumi.StringOutput)
}

// Whether the produced information is in json format.
func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) DecodeJson() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClsParam) bool { return v.DecodeJson }).(pulumi.BoolOutput)
}

// LogSet id.
func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) LogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClsParam) string { return v.LogSet }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
func (o GetDatahubTaskTaskListSourceResourceClsParamOutput) TimeField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceClsParam) string { return v.TimeField }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceClsParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceClsParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceClsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceClsParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutput() GetDatahubTaskTaskListSourceResourceClsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClsParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceClsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceClsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceClsParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceClsParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceClsParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceClsParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceClsParamOutput)
}

type GetDatahubTaskTaskListSourceResourceCosParam struct {
	// The size of aggregated messages MB.
	AggregateBatchSize int `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval int `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName string `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat string `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType string `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey string `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix string `pulumi:"objectKeyPrefix"`
	// region code.
	Region string `pulumi:"region"`
}

// GetDatahubTaskTaskListSourceResourceCosParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceCosParamArgs and GetDatahubTaskTaskListSourceResourceCosParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceCosParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceCosParamArgs{...}
type GetDatahubTaskTaskListSourceResourceCosParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceCosParamOutput() GetDatahubTaskTaskListSourceResourceCosParamOutput
	ToGetDatahubTaskTaskListSourceResourceCosParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceCosParamOutput
}

type GetDatahubTaskTaskListSourceResourceCosParamArgs struct {
	// The size of aggregated messages MB.
	AggregateBatchSize pulumi.IntInput `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval pulumi.IntInput `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat pulumi.StringInput `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType pulumi.StringInput `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey pulumi.StringInput `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix pulumi.StringInput `pulumi:"objectKeyPrefix"`
	// region code.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetDatahubTaskTaskListSourceResourceCosParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCosParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceCosParamArgs) ToGetDatahubTaskTaskListSourceResourceCosParamOutput() GetDatahubTaskTaskListSourceResourceCosParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceCosParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceCosParamArgs) ToGetDatahubTaskTaskListSourceResourceCosParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCosParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceCosParamOutput)
}

// GetDatahubTaskTaskListSourceResourceCosParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceCosParamArray and GetDatahubTaskTaskListSourceResourceCosParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceCosParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceCosParamArray{ GetDatahubTaskTaskListSourceResourceCosParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceCosParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutput() GetDatahubTaskTaskListSourceResourceCosParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceCosParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceCosParamArray []GetDatahubTaskTaskListSourceResourceCosParamInput

func (GetDatahubTaskTaskListSourceResourceCosParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceCosParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceCosParamArray) ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutput() GetDatahubTaskTaskListSourceResourceCosParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceCosParamArray) ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCosParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceCosParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceCosParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceCosParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCosParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) ToGetDatahubTaskTaskListSourceResourceCosParamOutput() GetDatahubTaskTaskListSourceResourceCosParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) ToGetDatahubTaskTaskListSourceResourceCosParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCosParamOutput {
	return o
}

// The size of aggregated messages MB.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) AggregateBatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) int { return v.AggregateBatchSize }).(pulumi.IntOutput)
}

// time interval.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) AggregateInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) int { return v.AggregateInterval }).(pulumi.IntOutput)
}

// cos bucket name.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) string { return v.BucketName }).(pulumi.StringOutput)
}

// Partition format formatted according to strptime time.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) DirectoryTimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) string { return v.DirectoryTimeFormat }).(pulumi.StringOutput)
}

// The file format after message aggregation csv|json.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) FormatOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) string { return v.FormatOutputType }).(pulumi.StringOutput)
}

// ObjectKey.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) ObjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) string { return v.ObjectKey }).(pulumi.StringOutput)
}

// Dumped object directory prefix.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) ObjectKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) string { return v.ObjectKeyPrefix }).(pulumi.StringOutput)
}

// region code.
func (o GetDatahubTaskTaskListSourceResourceCosParamOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCosParam) string { return v.Region }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceCosParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceCosParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceCosParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceCosParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutput() GetDatahubTaskTaskListSourceResourceCosParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceCosParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceCosParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCosParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceCosParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceCosParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceCosParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceCosParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceCosParamOutput)
}

type GetDatahubTaskTaskListSourceResourceCtsdbParam struct {
	// Ctsdb metric.
	CtsdbMetric string `pulumi:"ctsdbMetric"`
	// Resource.
	Resource string `pulumi:"resource"`
}

// GetDatahubTaskTaskListSourceResourceCtsdbParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceCtsdbParamArgs and GetDatahubTaskTaskListSourceResourceCtsdbParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceCtsdbParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceCtsdbParamArgs{...}
type GetDatahubTaskTaskListSourceResourceCtsdbParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutput() GetDatahubTaskTaskListSourceResourceCtsdbParamOutput
	ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceCtsdbParamOutput
}

type GetDatahubTaskTaskListSourceResourceCtsdbParamArgs struct {
	// Ctsdb metric.
	CtsdbMetric pulumi.StringInput `pulumi:"ctsdbMetric"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetDatahubTaskTaskListSourceResourceCtsdbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCtsdbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceCtsdbParamArgs) ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutput() GetDatahubTaskTaskListSourceResourceCtsdbParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceCtsdbParamArgs) ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCtsdbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceCtsdbParamOutput)
}

// GetDatahubTaskTaskListSourceResourceCtsdbParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceCtsdbParamArray and GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceCtsdbParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceCtsdbParamArray{ GetDatahubTaskTaskListSourceResourceCtsdbParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceCtsdbParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput() GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceCtsdbParamArray []GetDatahubTaskTaskListSourceResourceCtsdbParamInput

func (GetDatahubTaskTaskListSourceResourceCtsdbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceCtsdbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceCtsdbParamArray) ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput() GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceCtsdbParamArray) ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceCtsdbParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceCtsdbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCtsdbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceCtsdbParamOutput) ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutput() GetDatahubTaskTaskListSourceResourceCtsdbParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceCtsdbParamOutput) ToGetDatahubTaskTaskListSourceResourceCtsdbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCtsdbParamOutput {
	return o
}

// Ctsdb metric.
func (o GetDatahubTaskTaskListSourceResourceCtsdbParamOutput) CtsdbMetric() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCtsdbParam) string { return v.CtsdbMetric }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceCtsdbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceCtsdbParam) string { return v.Resource }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceCtsdbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput() GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceCtsdbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceCtsdbParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceCtsdbParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceCtsdbParamOutput)
}

type GetDatahubTaskTaskListSourceResourceDtsParam struct {
	// Dts consumer group Id.
	GroupId string `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword string `pulumi:"groupPassword"`
	// Dts account.
	GroupUser string `pulumi:"groupUser"`
	// Mongo DB connection ip.
	Ip string `pulumi:"ip"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql bool `pulumi:"tranSql"`
}

// GetDatahubTaskTaskListSourceResourceDtsParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceDtsParamArgs and GetDatahubTaskTaskListSourceResourceDtsParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceDtsParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceDtsParamArgs{...}
type GetDatahubTaskTaskListSourceResourceDtsParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceDtsParamOutput() GetDatahubTaskTaskListSourceResourceDtsParamOutput
	ToGetDatahubTaskTaskListSourceResourceDtsParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceDtsParamOutput
}

type GetDatahubTaskTaskListSourceResourceDtsParamArgs struct {
	// Dts consumer group Id.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword pulumi.StringInput `pulumi:"groupPassword"`
	// Dts account.
	GroupUser pulumi.StringInput `pulumi:"groupUser"`
	// Mongo DB connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql pulumi.BoolInput `pulumi:"tranSql"`
}

func (GetDatahubTaskTaskListSourceResourceDtsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceDtsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceDtsParamArgs) ToGetDatahubTaskTaskListSourceResourceDtsParamOutput() GetDatahubTaskTaskListSourceResourceDtsParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceDtsParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceDtsParamArgs) ToGetDatahubTaskTaskListSourceResourceDtsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceDtsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceDtsParamOutput)
}

// GetDatahubTaskTaskListSourceResourceDtsParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceDtsParamArray and GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceDtsParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceDtsParamArray{ GetDatahubTaskTaskListSourceResourceDtsParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceDtsParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutput() GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceDtsParamArray []GetDatahubTaskTaskListSourceResourceDtsParamInput

func (GetDatahubTaskTaskListSourceResourceDtsParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceDtsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceDtsParamArray) ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutput() GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceDtsParamArray) ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceDtsParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceDtsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceDtsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) ToGetDatahubTaskTaskListSourceResourceDtsParamOutput() GetDatahubTaskTaskListSourceResourceDtsParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) ToGetDatahubTaskTaskListSourceResourceDtsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceDtsParamOutput {
	return o
}

// Dts consumer group Id.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) string { return v.GroupId }).(pulumi.StringOutput)
}

// Dts consumer group passwd.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) GroupPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) string { return v.GroupPassword }).(pulumi.StringOutput)
}

// Dts account.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) GroupUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) string { return v.GroupUser }).(pulumi.StringOutput)
}

// Mongo DB connection ip.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) string { return v.Ip }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) int { return v.Port }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) string { return v.Topic }).(pulumi.StringOutput)
}

// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
func (o GetDatahubTaskTaskListSourceResourceDtsParamOutput) TranSql() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceDtsParam) bool { return v.TranSql }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceDtsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutput() GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceDtsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceDtsParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceDtsParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceDtsParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceDtsParamOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParam struct {
	// key for data in non-json format.
	ContentKey string `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey string `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat string `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField string `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls []GetDatahubTaskTaskListSourceResourceEsParamDropCl `pulumi:"dropCls"`
	// dead letter queue.
	DropDlqs []GetDatahubTaskTaskListSourceResourceEsParamDropDlq `pulumi:"dropDlqs"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage bool `pulumi:"dropInvalidJsonMessage"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index string `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType string `pulumi:"indexType"`
	// MongoDB database password.
	Password string `pulumi:"password"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip string `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName string `pulumi:"userName"`
}

// GetDatahubTaskTaskListSourceResourceEsParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamArgs and GetDatahubTaskTaskListSourceResourceEsParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamArgs{...}
type GetDatahubTaskTaskListSourceResourceEsParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamOutput() GetDatahubTaskTaskListSourceResourceEsParamOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamArgs struct {
	// key for data in non-json format.
	ContentKey pulumi.StringInput `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey pulumi.StringInput `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat pulumi.StringInput `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField pulumi.StringInput `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls GetDatahubTaskTaskListSourceResourceEsParamDropClArrayInput `pulumi:"dropCls"`
	// dead letter queue.
	DropDlqs GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayInput `pulumi:"dropDlqs"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage pulumi.BoolInput `pulumi:"dropInvalidJsonMessage"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index pulumi.StringInput `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType pulumi.StringInput `pulumi:"indexType"`
	// MongoDB database password.
	Password pulumi.StringInput `pulumi:"password"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDatahubTaskTaskListSourceResourceEsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamArgs) ToGetDatahubTaskTaskListSourceResourceEsParamOutput() GetDatahubTaskTaskListSourceResourceEsParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamArgs) ToGetDatahubTaskTaskListSourceResourceEsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamOutput)
}

// GetDatahubTaskTaskListSourceResourceEsParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamArray and GetDatahubTaskTaskListSourceResourceEsParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamArray{ GetDatahubTaskTaskListSourceResourceEsParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceEsParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamArray []GetDatahubTaskTaskListSourceResourceEsParamInput

func (GetDatahubTaskTaskListSourceResourceEsParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamArray) ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamArray) ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) ToGetDatahubTaskTaskListSourceResourceEsParamOutput() GetDatahubTaskTaskListSourceResourceEsParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) ToGetDatahubTaskTaskListSourceResourceEsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamOutput {
	return o
}

// key for data in non-json format.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) ContentKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.ContentKey }).(pulumi.StringOutput)
}

// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DatabasePrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.DatabasePrimaryKey }).(pulumi.StringOutput)
}

// Es date suffix.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.DateFormat }).(pulumi.StringOutput)
}

// The field name of the document ID value dumped into Es.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DocumentIdField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.DocumentIdField }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DropCls() GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) []GetDatahubTaskTaskListSourceResourceEsParamDropCl {
		return v.DropCls
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput)
}

// dead letter queue.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DropDlqs() GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) []GetDatahubTaskTaskListSourceResourceEsParamDropDlq {
		return v.DropDlqs
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput)
}

// Whether Es discards messages in non-json format.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DropInvalidJsonMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) bool { return v.DropInvalidJsonMessage }).(pulumi.BoolOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// Es index name.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.Index }).(pulumi.StringOutput)
}

// Es custom index name type, STRING, JSONPATH, the default is STRING.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) IndexType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.IndexType }).(pulumi.StringOutput)
}

// MongoDB database password.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.Password }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) int { return v.Port }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// instance vip.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// instance vpc id.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// MongoDB database user name.
func (o GetDatahubTaskTaskListSourceResourceEsParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEsParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEsParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEsParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEsParamOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropCl struct {
	// cls LogSet id.
	DropClsLogSet string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls bool `pulumi:"dropInvalidMessageToCls"`
}

// GetDatahubTaskTaskListSourceResourceEsParamDropClInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropClArgs and GetDatahubTaskTaskListSourceResourceEsParamDropClOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropClInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropClArgs{...}
type GetDatahubTaskTaskListSourceResourceEsParamDropClInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutput() GetDatahubTaskTaskListSourceResourceEsParamDropClOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropClOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropClArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolInput `pulumi:"dropInvalidMessageToCls"`
}

func (GetDatahubTaskTaskListSourceResourceEsParamDropClArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropClArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutput() GetDatahubTaskTaskListSourceResourceEsParamDropClOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropClArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropClOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropClOutput)
}

// GetDatahubTaskTaskListSourceResourceEsParamDropClArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropClArray and GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropClArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropClArray{ GetDatahubTaskTaskListSourceResourceEsParamDropClArgs{...} }
type GetDatahubTaskTaskListSourceResourceEsParamDropClArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropClArray []GetDatahubTaskTaskListSourceResourceEsParamDropClInput

func (GetDatahubTaskTaskListSourceResourceEsParamDropClArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropClArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropClArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropClOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutput() GetDatahubTaskTaskListSourceResourceEsParamDropClOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropClOutput {
	return o
}

// cls LogSet id.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) DropClsLogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropCl) string { return v.DropClsLogSet }).(pulumi.StringOutput)
}

// account.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) DropClsOwneruin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropCl) string { return v.DropClsOwneruin }).(pulumi.StringOutput)
}

// The region where the cls is delivered.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) DropClsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropCl) string { return v.DropClsRegion }).(pulumi.StringOutput)
}

// cls topic.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) DropClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropCl) string { return v.DropClsTopicId }).(pulumi.StringOutput)
}

// Whether to deliver to cls.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropClOutput) DropInvalidMessageToCls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropCl) bool { return v.DropInvalidMessageToCls }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEsParamDropClOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEsParamDropCl {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEsParamDropCl)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropClOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlq struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType string `pulumi:"dlqType"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams []GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam `pulumi:"kafkaParams"`
	// retry times.
	MaxRetryAttempts int `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval int `pulumi:"retryInterval"`
	// Topic configuration, Required when Type is Topic.
	TopicParams []GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam `pulumi:"topicParams"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs and GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs{...}
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType pulumi.StringInput `pulumi:"dlqType"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayInput `pulumi:"kafkaParams"`
	// retry times.
	MaxRetryAttempts pulumi.IntInput `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval pulumi.IntInput `pulumi:"retryInterval"`
	// Topic configuration, Required when Type is Topic.
	TopicParams GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayInput `pulumi:"topicParams"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput)
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray and GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray{ GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs{...} }
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray []GetDatahubTaskTaskListSourceResourceEsParamDropDlqInput

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput {
	return o
}

// dlq type, CKAFKA|TOPIC.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) DlqType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlq) string { return v.DlqType }).(pulumi.StringOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) KafkaParams() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlq) []GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam {
		return v.KafkaParams
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput)
}

// retry times.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) MaxRetryAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlq) int { return v.MaxRetryAttempts }).(pulumi.IntOutput)
}

// retry interval.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) RetryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlq) int { return v.RetryInterval }).(pulumi.IntOutput)
}

// Topic configuration, Required when Type is Topic.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) TopicParams() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlq) []GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam {
		return v.TopicParams
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlq) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlq)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEsParamDropDlq {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEsParamDropDlq)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType string `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration bool `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition bool `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit int `pulumi:"qpsLimit"`
	// Resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName string `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId int `pulumi:"zoneId"`
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs and GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs{...}
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType pulumi.StringInput `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolInput `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition pulumi.BoolInput `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntInput `pulumi:"qpsLimit"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput)
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray and GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray{ GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray []GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamInput

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// ConnectorSyncType.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) ConnectorSyncType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string {
		return v.ConnectorSyncType
	}).(pulumi.StringOutput)
}

// enable dead letter queue.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) EnableToleration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) bool { return v.EnableToleration }).(pulumi.BoolOutput)
}

// KeepPartition.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) KeepPartition() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) bool { return v.KeepPartition }).(pulumi.BoolOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// the partition num of the topic.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Qps(query per seconds) limit.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) QpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) int { return v.QpsLimit }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string { return v.ResourceName }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) TableMappings() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) []GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping {
		return v.TableMappings
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

// whether to use multi table.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) UseTableMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) bool { return v.UseTableMapping }).(pulumi.BoolOutput)
}

// Zone ID.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs and GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs{...}
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray and GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray{ GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs{...} }
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray []GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingInput

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.Database
	}).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.Table
	}).(pulumi.StringOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.Topic
	}).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.TopicId
	}).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// Resource.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs and GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs{...}
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
}

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput)
}

// GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray and GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray{ GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray []GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamInput

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput() GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput)
}

type GetDatahubTaskTaskListSourceResourceEventBusParam struct {
	// SCF function name.
	FunctionName string `pulumi:"functionName"`
	// SCF cloud function namespace, the default is default.
	Namespace string `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier string `pulumi:"qualifier"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListSourceResourceEventBusParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEventBusParamArgs and GetDatahubTaskTaskListSourceResourceEventBusParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEventBusParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEventBusParamArgs{...}
type GetDatahubTaskTaskListSourceResourceEventBusParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEventBusParamOutput() GetDatahubTaskTaskListSourceResourceEventBusParamOutput
	ToGetDatahubTaskTaskListSourceResourceEventBusParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEventBusParamOutput
}

type GetDatahubTaskTaskListSourceResourceEventBusParamArgs struct {
	// SCF function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// SCF cloud function namespace, the default is default.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListSourceResourceEventBusParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEventBusParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEventBusParamArgs) ToGetDatahubTaskTaskListSourceResourceEventBusParamOutput() GetDatahubTaskTaskListSourceResourceEventBusParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEventBusParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEventBusParamArgs) ToGetDatahubTaskTaskListSourceResourceEventBusParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEventBusParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEventBusParamOutput)
}

// GetDatahubTaskTaskListSourceResourceEventBusParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceEventBusParamArray and GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceEventBusParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceEventBusParamArray{ GetDatahubTaskTaskListSourceResourceEventBusParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceEventBusParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput() GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceEventBusParamArray []GetDatahubTaskTaskListSourceResourceEventBusParamInput

func (GetDatahubTaskTaskListSourceResourceEventBusParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEventBusParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceEventBusParamArray) ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput() GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceEventBusParamArray) ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceEventBusParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEventBusParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEventBusParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) ToGetDatahubTaskTaskListSourceResourceEventBusParamOutput() GetDatahubTaskTaskListSourceResourceEventBusParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) ToGetDatahubTaskTaskListSourceResourceEventBusParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEventBusParamOutput {
	return o
}

// SCF function name.
func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEventBusParam) string { return v.FunctionName }).(pulumi.StringOutput)
}

// SCF cloud function namespace, the default is default.
func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEventBusParam) string { return v.Namespace }).(pulumi.StringOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEventBusParam) string { return v.Qualifier }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEventBusParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEventBusParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourceEventBusParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceEventBusParam) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceEventBusParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput() GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceEventBusParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceEventBusParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceEventBusParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceEventBusParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceEventBusParamOutput)
}

type GetDatahubTaskTaskListSourceResourceKafkaParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType string `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration bool `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition bool `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit int `pulumi:"qpsLimit"`
	// Resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName string `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId int `pulumi:"zoneId"`
}

// GetDatahubTaskTaskListSourceResourceKafkaParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceKafkaParamArgs and GetDatahubTaskTaskListSourceResourceKafkaParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceKafkaParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceKafkaParamArgs{...}
type GetDatahubTaskTaskListSourceResourceKafkaParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceKafkaParamOutput() GetDatahubTaskTaskListSourceResourceKafkaParamOutput
	ToGetDatahubTaskTaskListSourceResourceKafkaParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamOutput
}

type GetDatahubTaskTaskListSourceResourceKafkaParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType pulumi.StringInput `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolInput `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition pulumi.BoolInput `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntInput `pulumi:"qpsLimit"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetDatahubTaskTaskListSourceResourceKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamArgs) ToGetDatahubTaskTaskListSourceResourceKafkaParamOutput() GetDatahubTaskTaskListSourceResourceKafkaParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceKafkaParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamArgs) ToGetDatahubTaskTaskListSourceResourceKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceKafkaParamOutput)
}

// GetDatahubTaskTaskListSourceResourceKafkaParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceKafkaParamArray and GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceKafkaParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceKafkaParamArray{ GetDatahubTaskTaskListSourceResourceKafkaParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceKafkaParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput() GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceKafkaParamArray []GetDatahubTaskTaskListSourceResourceKafkaParamInput

func (GetDatahubTaskTaskListSourceResourceKafkaParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamArray) ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput() GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamArray) ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceKafkaParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamOutput() GetDatahubTaskTaskListSourceResourceKafkaParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// ConnectorSyncType.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) ConnectorSyncType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.ConnectorSyncType }).(pulumi.StringOutput)
}

// enable dead letter queue.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) EnableToleration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) bool { return v.EnableToleration }).(pulumi.BoolOutput)
}

// KeepPartition.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) KeepPartition() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) bool { return v.KeepPartition }).(pulumi.BoolOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// the partition num of the topic.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Qps(query per seconds) limit.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) QpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) int { return v.QpsLimit }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.ResourceName }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) TableMappings() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) []GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping {
		return v.TableMappings
	}).(GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

// whether to use multi table.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) UseTableMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) bool { return v.UseTableMapping }).(pulumi.BoolOutput)
}

// Zone ID.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParam) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput() GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceKafkaParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceKafkaParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceKafkaParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceKafkaParamOutput)
}

type GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
}

// GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingInput is an input type that accepts GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs and GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingInput` via:
//
//	GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs{...}
type GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput
	ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput
}

type GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput)
}

// GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray and GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray{ GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs{...} }
type GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput
	ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput
}

type GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray []GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingInput

func (GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceKafkaParamTableMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput)
}

type GetDatahubTaskTaskListSourceResourceMariaDbParam struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix bool `pulumi:"isTablePrefix"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema bool `pulumi:"recordWithSchema"`
	// Resource.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// GetDatahubTaskTaskListSourceResourceMariaDbParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMariaDbParamArgs and GetDatahubTaskTaskListSourceResourceMariaDbParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMariaDbParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMariaDbParamArgs{...}
type GetDatahubTaskTaskListSourceResourceMariaDbParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutput() GetDatahubTaskTaskListSourceResourceMariaDbParamOutput
	ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMariaDbParamOutput
}

type GetDatahubTaskTaskListSourceResourceMariaDbParamArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolInput `pulumi:"isTablePrefix"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolInput `pulumi:"recordWithSchema"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatahubTaskTaskListSourceResourceMariaDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMariaDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMariaDbParamArgs) ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutput() GetDatahubTaskTaskListSourceResourceMariaDbParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMariaDbParamArgs) ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMariaDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMariaDbParamOutput)
}

// GetDatahubTaskTaskListSourceResourceMariaDbParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMariaDbParamArray and GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMariaDbParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMariaDbParamArray{ GetDatahubTaskTaskListSourceResourceMariaDbParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceMariaDbParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput() GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceMariaDbParamArray []GetDatahubTaskTaskListSourceResourceMariaDbParamInput

func (GetDatahubTaskTaskListSourceResourceMariaDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMariaDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMariaDbParamArray) ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput() GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMariaDbParamArray) ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceMariaDbParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMariaDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutput() GetDatahubTaskTaskListSourceResourceMariaDbParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) ToGetDatahubTaskTaskListSourceResourceMariaDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMariaDbParamOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) IncludeContentChanges() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.IncludeContentChanges }).(pulumi.StringOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) IncludeQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) bool { return v.IncludeQuery }).(pulumi.BoolOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) IsTablePrefix() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) bool { return v.IsTablePrefix }).(pulumi.BoolOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) KeyColumns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.KeyColumns }).(pulumi.StringOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) RecordWithSchema() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) bool { return v.RecordWithSchema }).(pulumi.BoolOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourceMariaDbParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMariaDbParam) string { return v.Table }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMariaDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput() GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceMariaDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceMariaDbParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceMariaDbParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceMariaDbParamOutput)
}

type GetDatahubTaskTaskListSourceResourceMongoDbParam struct {
	// MongoDB collection.
	Collection string `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting bool `pulumi:"copyExisting"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// Mongo DB connection ip.
	Ip string `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent string `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password string `pulumi:"password"`
	// aggregation pipeline.
	Pipeline string `pulumi:"pipeline"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference string `pulumi:"readPreference"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName string `pulumi:"userName"`
}

// GetDatahubTaskTaskListSourceResourceMongoDbParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMongoDbParamArgs and GetDatahubTaskTaskListSourceResourceMongoDbParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMongoDbParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMongoDbParamArgs{...}
type GetDatahubTaskTaskListSourceResourceMongoDbParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutput() GetDatahubTaskTaskListSourceResourceMongoDbParamOutput
	ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMongoDbParamOutput
}

type GetDatahubTaskTaskListSourceResourceMongoDbParamArgs struct {
	// MongoDB collection.
	Collection pulumi.StringInput `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting pulumi.BoolInput `pulumi:"copyExisting"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Mongo DB connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent pulumi.StringInput `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password pulumi.StringInput `pulumi:"password"`
	// aggregation pipeline.
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDatahubTaskTaskListSourceResourceMongoDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMongoDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMongoDbParamArgs) ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutput() GetDatahubTaskTaskListSourceResourceMongoDbParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMongoDbParamArgs) ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMongoDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMongoDbParamOutput)
}

// GetDatahubTaskTaskListSourceResourceMongoDbParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMongoDbParamArray and GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMongoDbParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMongoDbParamArray{ GetDatahubTaskTaskListSourceResourceMongoDbParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceMongoDbParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput() GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceMongoDbParamArray []GetDatahubTaskTaskListSourceResourceMongoDbParamInput

func (GetDatahubTaskTaskListSourceResourceMongoDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMongoDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMongoDbParamArray) ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput() GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMongoDbParamArray) ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceMongoDbParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMongoDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutput() GetDatahubTaskTaskListSourceResourceMongoDbParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) ToGetDatahubTaskTaskListSourceResourceMongoDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMongoDbParamOutput {
	return o
}

// MongoDB collection.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.Collection }).(pulumi.StringOutput)
}

// Whether to copy the stock data, the default parameter is true.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) CopyExisting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) bool { return v.CopyExisting }).(pulumi.BoolOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// Mongo DB connection ip.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.Ip }).(pulumi.StringOutput)
}

// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) ListeningEvent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.ListeningEvent }).(pulumi.StringOutput)
}

// MongoDB database password.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.Password }).(pulumi.StringOutput)
}

// aggregation pipeline.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.Pipeline }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) int { return v.Port }).(pulumi.IntOutput)
}

// Master-slave priority, default master node.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.ReadPreference }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// MongoDB database user name.
func (o GetDatahubTaskTaskListSourceResourceMongoDbParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMongoDbParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMongoDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput() GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceMongoDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceMongoDbParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceMongoDbParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceMongoDbParamOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParam struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn string `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode string `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode string `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource string `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom string `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic string `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls []GetDatahubTaskTaskListSourceResourceMySqlParamDropCl `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix bool `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression.
	IsTableRegular bool `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema bool `pulumi:"recordWithSchema"`
	// Resource.
	Resource string `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase string `pulumi:"signalDatabase"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex string `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement string `pulumi:"topicReplacement"`
}

// GetDatahubTaskTaskListSourceResourceMySqlParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMySqlParamArgs and GetDatahubTaskTaskListSourceResourceMySqlParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMySqlParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMySqlParamArgs{...}
type GetDatahubTaskTaskListSourceResourceMySqlParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMySqlParamOutput() GetDatahubTaskTaskListSourceResourceMySqlParamOutput
	ToGetDatahubTaskTaskListSourceResourceMySqlParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamOutput
}

type GetDatahubTaskTaskListSourceResourceMySqlParamArgs struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn pulumi.StringInput `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode pulumi.StringInput `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode pulumi.StringInput `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource pulumi.StringInput `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom pulumi.StringInput `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic pulumi.StringInput `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayInput `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolInput `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression.
	IsTableRegular pulumi.BoolInput `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolInput `pulumi:"recordWithSchema"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase pulumi.StringInput `pulumi:"signalDatabase"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex pulumi.StringInput `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement pulumi.StringInput `pulumi:"topicReplacement"`
}

func (GetDatahubTaskTaskListSourceResourceMySqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamArgs) ToGetDatahubTaskTaskListSourceResourceMySqlParamOutput() GetDatahubTaskTaskListSourceResourceMySqlParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMySqlParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamArgs) ToGetDatahubTaskTaskListSourceResourceMySqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMySqlParamOutput)
}

// GetDatahubTaskTaskListSourceResourceMySqlParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMySqlParamArray and GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMySqlParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMySqlParamArray{ GetDatahubTaskTaskListSourceResourceMySqlParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceMySqlParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceMySqlParamArray []GetDatahubTaskTaskListSourceResourceMySqlParamInput

func (GetDatahubTaskTaskListSourceResourceMySqlParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMySqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamArray) ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamArray) ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMySqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamOutput() GetDatahubTaskTaskListSourceResourceMySqlParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamOutput {
	return o
}

// the name of the column to be monitored.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataSourceIncrementColumn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataSourceIncrementColumn }).(pulumi.StringOutput)
}

// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataSourceIncrementMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataSourceIncrementMode }).(pulumi.StringOutput)
}

// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataSourceMonitorMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataSourceMonitorMode }).(pulumi.StringOutput)
}

// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataSourceMonitorResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataSourceMonitorResource }).(pulumi.StringOutput)
}

// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataSourceStartFrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataSourceStartFrom }).(pulumi.StringOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataTargetInsertMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataTargetInsertMode }).(pulumi.StringOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DataTargetPrimaryKeyField }).(pulumi.StringOutput)
}

// Mapping relationship between tables and messages.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DataTargetRecordMappings() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) []GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DdlTopic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.DdlTopic }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DropCls() GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) []GetDatahubTaskTaskListSourceResourceMySqlParamDropCl {
		return v.DropCls
	}).(GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) IncludeContentChanges() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.IncludeContentChanges }).(pulumi.StringOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) IncludeQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) bool { return v.IncludeQuery }).(pulumi.BoolOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) IsTablePrefix() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) bool { return v.IsTablePrefix }).(pulumi.BoolOutput)
}

// Whether the input table is a regular expression.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) IsTableRegular() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) bool { return v.IsTableRegular }).(pulumi.BoolOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) KeyColumns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.KeyColumns }).(pulumi.StringOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) RecordWithSchema() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) bool { return v.RecordWithSchema }).(pulumi.BoolOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// database name of signal table.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) SignalDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.SignalDatabase }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.Table }).(pulumi.StringOutput)
}

// Regular expression for routing events to specific topics, defaults to (.*).
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) TopicRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.TopicRegex }).(pulumi.StringOutput)
}

// TopicRegex, $1, $2.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamOutput) TopicReplacement() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParam) string { return v.TopicReplacement }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMySqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceMySqlParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceMySqlParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceMySqlParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceMySqlParamOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey string `pulumi:"jsonKey"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs and GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs{...}
type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput
	ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput)
}

// GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray and GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray{ GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs{...} }
type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput
	ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray []GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingInput

func (GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) bool { return v.AllowNull }).(pulumi.BoolOutput)
}

// Whether it is an auto-increment column.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) bool {
		return v.AutoIncrement
	}).(pulumi.BoolOutput)
}

// Column Name.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string {
		return v.ColumnName
	}).(pulumi.StringOutput)
}

// current ColumnSize.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string {
		return v.ColumnSize
	}).(pulumi.StringOutput)
}

// current Column DecimalDigits.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string {
		return v.DecimalDigits
	}).(pulumi.StringOutput)
}

// Database table default parameters.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string {
		return v.DefaultValue
	}).(pulumi.StringOutput)
}

// Database table extra fields.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string {
		return v.ExtraInfo
	}).(pulumi.StringOutput)
}

// The key name of the message.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string { return v.JsonKey }).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDropCl struct {
	// cls LogSet id.
	DropClsLogSet string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls bool `pulumi:"dropInvalidMessageToCls"`
}

// GetDatahubTaskTaskListSourceResourceMySqlParamDropClInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs and GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMySqlParamDropClInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs{...}
type GetDatahubTaskTaskListSourceResourceMySqlParamDropClInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput
	ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolInput `pulumi:"dropInvalidMessageToCls"`
}

func (GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput)
}

// GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray and GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray{ GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs{...} }
type GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput
	ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray []GetDatahubTaskTaskListSourceResourceMySqlParamDropClInput

func (GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMySqlParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput {
	return o
}

// cls LogSet id.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) DropClsLogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDropCl) string { return v.DropClsLogSet }).(pulumi.StringOutput)
}

// account.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) DropClsOwneruin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDropCl) string { return v.DropClsOwneruin }).(pulumi.StringOutput)
}

// The region where the cls is delivered.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) DropClsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDropCl) string { return v.DropClsRegion }).(pulumi.StringOutput)
}

// cls topic.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) DropClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDropCl) string { return v.DropClsTopicId }).(pulumi.StringOutput)
}

// Whether to deliver to cls.
func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput) DropInvalidMessageToCls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceMySqlParamDropCl) bool { return v.DropInvalidMessageToCls }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceMySqlParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput() GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput) ToGetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceMySqlParamDropCl {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceMySqlParamDropCl)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput)
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParam struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat string `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular bool `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns string `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName string `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema bool `pulumi:"recordWithSchema"`
	// Resource.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// GetDatahubTaskTaskListSourceResourcePostgreSqlParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs and GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourcePostgreSqlParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs{...}
type GetDatahubTaskTaskListSourceResourcePostgreSqlParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput
	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular pulumi.BoolInput `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringInput `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName pulumi.StringInput `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolInput `pulumi:"recordWithSchema"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput)
}

// GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray and GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray{ GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs{...} }
type GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray []GetDatahubTaskTaskListSourceResourcePostgreSqlParamInput

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput {
	return o
}

// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.DataFormat }).(pulumi.StringOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) DataTargetInsertMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.DataTargetInsertMode }).(pulumi.StringOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.DataTargetPrimaryKeyField }).(pulumi.StringOutput)
}

// Mapping relationship between tables and messages.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) DataTargetRecordMappings() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) []GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// Whether the input table is a regular expression.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) IsTableRegular() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) bool { return v.IsTableRegular }).(pulumi.BoolOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) KeyColumns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.KeyColumns }).(pulumi.StringOutput)
}

// (decoderbufs/pgoutput), default decoderbufs.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.PluginName }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) RecordWithSchema() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) bool { return v.RecordWithSchema }).(pulumi.BoolOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParam) string { return v.Table }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourcePostgreSqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourcePostgreSqlParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourcePostgreSqlParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput)
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey string `pulumi:"jsonKey"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingInput is an input type that accepts GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs and GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingInput` via:
//
//	GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs{...}
type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput
	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return i.ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

// GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray and GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray{ GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs{...} }
type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
	ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray []GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingInput

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) bool {
		return v.AllowNull
	}).(pulumi.BoolOutput)
}

// Whether it is an auto-increment column.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) bool {
		return v.AutoIncrement
	}).(pulumi.BoolOutput)
}

// Column Name.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.ColumnName
	}).(pulumi.StringOutput)
}

// current ColumnSize.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.ColumnSize
	}).(pulumi.StringOutput)
}

// current Column DecimalDigits.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.DecimalDigits
	}).(pulumi.StringOutput)
}

// Database table default parameters.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.DefaultValue
	}).(pulumi.StringOutput)
}

// Database table extra fields.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.ExtraInfo
	}).(pulumi.StringOutput)
}

// The key name of the message.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.JsonKey
	}).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping {
		return vs[0].([]GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

type GetDatahubTaskTaskListSourceResourceScfParam struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize int `pulumi:"batchSize"`
	// SCF function name.
	FunctionName string `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries int `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace string `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier string `pulumi:"qualifier"`
}

// GetDatahubTaskTaskListSourceResourceScfParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceScfParamArgs and GetDatahubTaskTaskListSourceResourceScfParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceScfParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceScfParamArgs{...}
type GetDatahubTaskTaskListSourceResourceScfParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceScfParamOutput() GetDatahubTaskTaskListSourceResourceScfParamOutput
	ToGetDatahubTaskTaskListSourceResourceScfParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceScfParamOutput
}

type GetDatahubTaskTaskListSourceResourceScfParamArgs struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize pulumi.IntInput `pulumi:"batchSize"`
	// SCF function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
}

func (GetDatahubTaskTaskListSourceResourceScfParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceScfParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceScfParamArgs) ToGetDatahubTaskTaskListSourceResourceScfParamOutput() GetDatahubTaskTaskListSourceResourceScfParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceScfParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceScfParamArgs) ToGetDatahubTaskTaskListSourceResourceScfParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceScfParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceScfParamOutput)
}

// GetDatahubTaskTaskListSourceResourceScfParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceScfParamArray and GetDatahubTaskTaskListSourceResourceScfParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceScfParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceScfParamArray{ GetDatahubTaskTaskListSourceResourceScfParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceScfParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutput() GetDatahubTaskTaskListSourceResourceScfParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceScfParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceScfParamArray []GetDatahubTaskTaskListSourceResourceScfParamInput

func (GetDatahubTaskTaskListSourceResourceScfParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceScfParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceScfParamArray) ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutput() GetDatahubTaskTaskListSourceResourceScfParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceScfParamArray) ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceScfParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceScfParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceScfParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceScfParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceScfParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) ToGetDatahubTaskTaskListSourceResourceScfParamOutput() GetDatahubTaskTaskListSourceResourceScfParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) ToGetDatahubTaskTaskListSourceResourceScfParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceScfParamOutput {
	return o
}

// The maximum number of messages sent in each batch, the default is 1000.
func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceScfParam) int { return v.BatchSize }).(pulumi.IntOutput)
}

// SCF function name.
func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceScfParam) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The number of retries after the SCF call fails, the default is 5.
func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceScfParam) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// SCF cloud function namespace, the default is default.
func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceScfParam) string { return v.Namespace }).(pulumi.StringOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o GetDatahubTaskTaskListSourceResourceScfParamOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceScfParam) string { return v.Qualifier }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceScfParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceScfParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceScfParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceScfParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutput() GetDatahubTaskTaskListSourceResourceScfParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceScfParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceScfParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceScfParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceScfParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceScfParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceScfParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceScfParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceScfParamOutput)
}

type GetDatahubTaskTaskListSourceResourceSqlServerParam struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// Resource.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// GetDatahubTaskTaskListSourceResourceSqlServerParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceSqlServerParamArgs and GetDatahubTaskTaskListSourceResourceSqlServerParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceSqlServerParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceSqlServerParamArgs{...}
type GetDatahubTaskTaskListSourceResourceSqlServerParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutput() GetDatahubTaskTaskListSourceResourceSqlServerParamOutput
	ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceSqlServerParamOutput
}

type GetDatahubTaskTaskListSourceResourceSqlServerParamArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatahubTaskTaskListSourceResourceSqlServerParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceSqlServerParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceSqlServerParamArgs) ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutput() GetDatahubTaskTaskListSourceResourceSqlServerParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceSqlServerParamArgs) ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceSqlServerParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceSqlServerParamOutput)
}

// GetDatahubTaskTaskListSourceResourceSqlServerParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceSqlServerParamArray and GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceSqlServerParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceSqlServerParamArray{ GetDatahubTaskTaskListSourceResourceSqlServerParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceSqlServerParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput() GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceSqlServerParamArray []GetDatahubTaskTaskListSourceResourceSqlServerParamInput

func (GetDatahubTaskTaskListSourceResourceSqlServerParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceSqlServerParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceSqlServerParamArray) ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput() GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceSqlServerParamArray) ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceSqlServerParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceSqlServerParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutput() GetDatahubTaskTaskListSourceResourceSqlServerParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) ToGetDatahubTaskTaskListSourceResourceSqlServerParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceSqlServerParamOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceSqlServerParam) string { return v.Database }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceSqlServerParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceSqlServerParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListSourceResourceSqlServerParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceSqlServerParam) string { return v.Table }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceSqlServerParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput() GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceSqlServerParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceSqlServerParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceSqlServerParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceSqlServerParamOutput)
}

type GetDatahubTaskTaskListSourceResourceTdwParam struct {
	// Tdw bid.
	Bid string `pulumi:"bid"`
	// default true.
	IsDomestic bool `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost string `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort int `pulumi:"tdwPort"`
	// Tdw tid.
	Tid string `pulumi:"tid"`
}

// GetDatahubTaskTaskListSourceResourceTdwParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceTdwParamArgs and GetDatahubTaskTaskListSourceResourceTdwParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceTdwParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceTdwParamArgs{...}
type GetDatahubTaskTaskListSourceResourceTdwParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceTdwParamOutput() GetDatahubTaskTaskListSourceResourceTdwParamOutput
	ToGetDatahubTaskTaskListSourceResourceTdwParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceTdwParamOutput
}

type GetDatahubTaskTaskListSourceResourceTdwParamArgs struct {
	// Tdw bid.
	Bid pulumi.StringInput `pulumi:"bid"`
	// default true.
	IsDomestic pulumi.BoolInput `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost pulumi.StringInput `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort pulumi.IntInput `pulumi:"tdwPort"`
	// Tdw tid.
	Tid pulumi.StringInput `pulumi:"tid"`
}

func (GetDatahubTaskTaskListSourceResourceTdwParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTdwParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceTdwParamArgs) ToGetDatahubTaskTaskListSourceResourceTdwParamOutput() GetDatahubTaskTaskListSourceResourceTdwParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceTdwParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceTdwParamArgs) ToGetDatahubTaskTaskListSourceResourceTdwParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTdwParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceTdwParamOutput)
}

// GetDatahubTaskTaskListSourceResourceTdwParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceTdwParamArray and GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceTdwParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceTdwParamArray{ GetDatahubTaskTaskListSourceResourceTdwParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceTdwParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutput() GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceTdwParamArray []GetDatahubTaskTaskListSourceResourceTdwParamInput

func (GetDatahubTaskTaskListSourceResourceTdwParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceTdwParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceTdwParamArray) ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutput() GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceTdwParamArray) ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceTdwParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceTdwParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTdwParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) ToGetDatahubTaskTaskListSourceResourceTdwParamOutput() GetDatahubTaskTaskListSourceResourceTdwParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) ToGetDatahubTaskTaskListSourceResourceTdwParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTdwParamOutput {
	return o
}

// Tdw bid.
func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) Bid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTdwParam) string { return v.Bid }).(pulumi.StringOutput)
}

// default true.
func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) IsDomestic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTdwParam) bool { return v.IsDomestic }).(pulumi.BoolOutput)
}

// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) TdwHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTdwParam) string { return v.TdwHost }).(pulumi.StringOutput)
}

// TDW port, default 8099.
func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) TdwPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTdwParam) int { return v.TdwPort }).(pulumi.IntOutput)
}

// Tdw tid.
func (o GetDatahubTaskTaskListSourceResourceTdwParamOutput) Tid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTdwParam) string { return v.Tid }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceTdwParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutput() GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceTdwParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceTdwParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceTdwParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceTdwParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceTdwParamOutput)
}

type GetDatahubTaskTaskListSourceResourceTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// Resource.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
}

// GetDatahubTaskTaskListSourceResourceTopicParamInput is an input type that accepts GetDatahubTaskTaskListSourceResourceTopicParamArgs and GetDatahubTaskTaskListSourceResourceTopicParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceTopicParamInput` via:
//
//	GetDatahubTaskTaskListSourceResourceTopicParamArgs{...}
type GetDatahubTaskTaskListSourceResourceTopicParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceTopicParamOutput() GetDatahubTaskTaskListSourceResourceTopicParamOutput
	ToGetDatahubTaskTaskListSourceResourceTopicParamOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceTopicParamOutput
}

type GetDatahubTaskTaskListSourceResourceTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
}

func (GetDatahubTaskTaskListSourceResourceTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceTopicParamArgs) ToGetDatahubTaskTaskListSourceResourceTopicParamOutput() GetDatahubTaskTaskListSourceResourceTopicParamOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceTopicParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceTopicParamArgs) ToGetDatahubTaskTaskListSourceResourceTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceTopicParamOutput)
}

// GetDatahubTaskTaskListSourceResourceTopicParamArrayInput is an input type that accepts GetDatahubTaskTaskListSourceResourceTopicParamArray and GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListSourceResourceTopicParamArrayInput` via:
//
//	GetDatahubTaskTaskListSourceResourceTopicParamArray{ GetDatahubTaskTaskListSourceResourceTopicParamArgs{...} }
type GetDatahubTaskTaskListSourceResourceTopicParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutput() GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput
	ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput
}

type GetDatahubTaskTaskListSourceResourceTopicParamArray []GetDatahubTaskTaskListSourceResourceTopicParamInput

func (GetDatahubTaskTaskListSourceResourceTopicParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListSourceResourceTopicParamArray) ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutput() GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput {
	return i.ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListSourceResourceTopicParamArray) ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput)
}

type GetDatahubTaskTaskListSourceResourceTopicParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) ToGetDatahubTaskTaskListSourceResourceTopicParamOutput() GetDatahubTaskTaskListSourceResourceTopicParamOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) ToGetDatahubTaskTaskListSourceResourceTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTopicParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListSourceResourceTopicParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListSourceResourceTopicParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListSourceResourceTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutput() GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput) ToGetDatahubTaskTaskListSourceResourceTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListSourceResourceTopicParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListSourceResourceTopicParam {
		return vs[0].([]GetDatahubTaskTaskListSourceResourceTopicParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListSourceResourceTopicParamOutput)
}

type GetDatahubTaskTaskListTargetResource struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParams []GetDatahubTaskTaskListTargetResourceClickHouseParam `pulumi:"clickHouseParams"`
	// Cls configuration, Required when Type is CLS.
	ClsParams []GetDatahubTaskTaskListTargetResourceClsParam `pulumi:"clsParams"`
	// Cos configuration, required when Type is COS.
	CosParams []GetDatahubTaskTaskListTargetResourceCosParam `pulumi:"cosParams"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParams []GetDatahubTaskTaskListTargetResourceCtsdbParam `pulumi:"ctsdbParams"`
	// Dts configuration, required when Type is DTS.
	DtsParams []GetDatahubTaskTaskListTargetResourceDtsParam `pulumi:"dtsParams"`
	// Es configuration, required when Type is ES.
	EsParams []GetDatahubTaskTaskListTargetResourceEsParam `pulumi:"esParams"`
	// EB configuration, required when type is EB.
	EventBusParams []GetDatahubTaskTaskListTargetResourceEventBusParam `pulumi:"eventBusParams"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams []GetDatahubTaskTaskListTargetResourceKafkaParam `pulumi:"kafkaParams"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParams []GetDatahubTaskTaskListTargetResourceMariaDbParam `pulumi:"mariaDbParams"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParams []GetDatahubTaskTaskListTargetResourceMongoDbParam `pulumi:"mongoDbParams"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParams []GetDatahubTaskTaskListTargetResourceMySqlParam `pulumi:"mySqlParams"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParams []GetDatahubTaskTaskListTargetResourcePostgreSqlParam `pulumi:"postgreSqlParams"`
	// Scf configuration, Required when Type is SCF.
	ScfParams []GetDatahubTaskTaskListTargetResourceScfParam `pulumi:"scfParams"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParams []GetDatahubTaskTaskListTargetResourceSqlServerParam `pulumi:"sqlServerParams"`
	// Tdw configuration, required when Type is TDW.
	TdwParams []GetDatahubTaskTaskListTargetResourceTdwParam `pulumi:"tdwParams"`
	// Topic configuration, Required when Type is Topic.
	TopicParams []GetDatahubTaskTaskListTargetResourceTopicParam `pulumi:"topicParams"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListTargetResourceInput is an input type that accepts GetDatahubTaskTaskListTargetResourceArgs and GetDatahubTaskTaskListTargetResourceOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceInput` via:
//
//	GetDatahubTaskTaskListTargetResourceArgs{...}
type GetDatahubTaskTaskListTargetResourceInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceOutput() GetDatahubTaskTaskListTargetResourceOutput
	ToGetDatahubTaskTaskListTargetResourceOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceOutput
}

type GetDatahubTaskTaskListTargetResourceArgs struct {
	// ClickHouse config, Type CLICKHOUSE requierd.
	ClickHouseParams GetDatahubTaskTaskListTargetResourceClickHouseParamArrayInput `pulumi:"clickHouseParams"`
	// Cls configuration, Required when Type is CLS.
	ClsParams GetDatahubTaskTaskListTargetResourceClsParamArrayInput `pulumi:"clsParams"`
	// Cos configuration, required when Type is COS.
	CosParams GetDatahubTaskTaskListTargetResourceCosParamArrayInput `pulumi:"cosParams"`
	// Ctsdb configuration, Required when Type is CTSDB.
	CtsdbParams GetDatahubTaskTaskListTargetResourceCtsdbParamArrayInput `pulumi:"ctsdbParams"`
	// Dts configuration, required when Type is DTS.
	DtsParams GetDatahubTaskTaskListTargetResourceDtsParamArrayInput `pulumi:"dtsParams"`
	// Es configuration, required when Type is ES.
	EsParams GetDatahubTaskTaskListTargetResourceEsParamArrayInput `pulumi:"esParams"`
	// EB configuration, required when type is EB.
	EventBusParams GetDatahubTaskTaskListTargetResourceEventBusParamArrayInput `pulumi:"eventBusParams"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams GetDatahubTaskTaskListTargetResourceKafkaParamArrayInput `pulumi:"kafkaParams"`
	// MariaDB configuration, Required when Type is MARIADB.
	MariaDbParams GetDatahubTaskTaskListTargetResourceMariaDbParamArrayInput `pulumi:"mariaDbParams"`
	// MongoDB config, Required when Type is MONGODB.
	MongoDbParams GetDatahubTaskTaskListTargetResourceMongoDbParamArrayInput `pulumi:"mongoDbParams"`
	// MySQL configuration, Required when Type is MYSQL.
	MySqlParams GetDatahubTaskTaskListTargetResourceMySqlParamArrayInput `pulumi:"mySqlParams"`
	// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
	PostgreSqlParams GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayInput `pulumi:"postgreSqlParams"`
	// Scf configuration, Required when Type is SCF.
	ScfParams GetDatahubTaskTaskListTargetResourceScfParamArrayInput `pulumi:"scfParams"`
	// SQLServer configuration, Required when Type is SQLSERVER.
	SqlServerParams GetDatahubTaskTaskListTargetResourceSqlServerParamArrayInput `pulumi:"sqlServerParams"`
	// Tdw configuration, required when Type is TDW.
	TdwParams GetDatahubTaskTaskListTargetResourceTdwParamArrayInput `pulumi:"tdwParams"`
	// Topic configuration, Required when Type is Topic.
	TopicParams GetDatahubTaskTaskListTargetResourceTopicParamArrayInput `pulumi:"topicParams"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListTargetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResource)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceArgs) ToGetDatahubTaskTaskListTargetResourceOutput() GetDatahubTaskTaskListTargetResourceOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceArgs) ToGetDatahubTaskTaskListTargetResourceOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceOutput)
}

// GetDatahubTaskTaskListTargetResourceArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceArray and GetDatahubTaskTaskListTargetResourceArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceArray{ GetDatahubTaskTaskListTargetResourceArgs{...} }
type GetDatahubTaskTaskListTargetResourceArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceArrayOutput() GetDatahubTaskTaskListTargetResourceArrayOutput
	ToGetDatahubTaskTaskListTargetResourceArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceArrayOutput
}

type GetDatahubTaskTaskListTargetResourceArray []GetDatahubTaskTaskListTargetResourceInput

func (GetDatahubTaskTaskListTargetResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResource)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceArray) ToGetDatahubTaskTaskListTargetResourceArrayOutput() GetDatahubTaskTaskListTargetResourceArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceArray) ToGetDatahubTaskTaskListTargetResourceArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResource)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceOutput) ToGetDatahubTaskTaskListTargetResourceOutput() GetDatahubTaskTaskListTargetResourceOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceOutput) ToGetDatahubTaskTaskListTargetResourceOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceOutput {
	return o
}

// ClickHouse config, Type CLICKHOUSE requierd.
func (o GetDatahubTaskTaskListTargetResourceOutput) ClickHouseParams() GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceClickHouseParam {
		return v.ClickHouseParams
	}).(GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput)
}

// Cls configuration, Required when Type is CLS.
func (o GetDatahubTaskTaskListTargetResourceOutput) ClsParams() GetDatahubTaskTaskListTargetResourceClsParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceClsParam {
		return v.ClsParams
	}).(GetDatahubTaskTaskListTargetResourceClsParamArrayOutput)
}

// Cos configuration, required when Type is COS.
func (o GetDatahubTaskTaskListTargetResourceOutput) CosParams() GetDatahubTaskTaskListTargetResourceCosParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceCosParam {
		return v.CosParams
	}).(GetDatahubTaskTaskListTargetResourceCosParamArrayOutput)
}

// Ctsdb configuration, Required when Type is CTSDB.
func (o GetDatahubTaskTaskListTargetResourceOutput) CtsdbParams() GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceCtsdbParam {
		return v.CtsdbParams
	}).(GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput)
}

// Dts configuration, required when Type is DTS.
func (o GetDatahubTaskTaskListTargetResourceOutput) DtsParams() GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceDtsParam {
		return v.DtsParams
	}).(GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput)
}

// Es configuration, required when Type is ES.
func (o GetDatahubTaskTaskListTargetResourceOutput) EsParams() GetDatahubTaskTaskListTargetResourceEsParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceEsParam {
		return v.EsParams
	}).(GetDatahubTaskTaskListTargetResourceEsParamArrayOutput)
}

// EB configuration, required when type is EB.
func (o GetDatahubTaskTaskListTargetResourceOutput) EventBusParams() GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceEventBusParam {
		return v.EventBusParams
	}).(GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o GetDatahubTaskTaskListTargetResourceOutput) KafkaParams() GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceKafkaParam {
		return v.KafkaParams
	}).(GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput)
}

// MariaDB configuration, Required when Type is MARIADB.
func (o GetDatahubTaskTaskListTargetResourceOutput) MariaDbParams() GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceMariaDbParam {
		return v.MariaDbParams
	}).(GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput)
}

// MongoDB config, Required when Type is MONGODB.
func (o GetDatahubTaskTaskListTargetResourceOutput) MongoDbParams() GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceMongoDbParam {
		return v.MongoDbParams
	}).(GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput)
}

// MySQL configuration, Required when Type is MYSQL.
func (o GetDatahubTaskTaskListTargetResourceOutput) MySqlParams() GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceMySqlParam {
		return v.MySqlParams
	}).(GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput)
}

// PostgreSQL configuration, Required when Type is POSTGRESQL or TDSQL C_POSTGRESQL.
func (o GetDatahubTaskTaskListTargetResourceOutput) PostgreSqlParams() GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourcePostgreSqlParam {
		return v.PostgreSqlParams
	}).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput)
}

// Scf configuration, Required when Type is SCF.
func (o GetDatahubTaskTaskListTargetResourceOutput) ScfParams() GetDatahubTaskTaskListTargetResourceScfParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceScfParam {
		return v.ScfParams
	}).(GetDatahubTaskTaskListTargetResourceScfParamArrayOutput)
}

// SQLServer configuration, Required when Type is SQLSERVER.
func (o GetDatahubTaskTaskListTargetResourceOutput) SqlServerParams() GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceSqlServerParam {
		return v.SqlServerParams
	}).(GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput)
}

// Tdw configuration, required when Type is TDW.
func (o GetDatahubTaskTaskListTargetResourceOutput) TdwParams() GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceTdwParam {
		return v.TdwParams
	}).(GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput)
}

// Topic configuration, Required when Type is Topic.
func (o GetDatahubTaskTaskListTargetResourceOutput) TopicParams() GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) []GetDatahubTaskTaskListTargetResourceTopicParam {
		return v.TopicParams
	}).(GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResource)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceArrayOutput) ToGetDatahubTaskTaskListTargetResourceArrayOutput() GetDatahubTaskTaskListTargetResourceArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceArrayOutput) ToGetDatahubTaskTaskListTargetResourceArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResource {
		return vs[0].([]GetDatahubTaskTaskListTargetResource)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParam struct {
	// ClickHouse cluster.
	Cluster string `pulumi:"cluster"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls []GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// Mongo DB connection ip.
	Ip string `pulumi:"ip"`
	// MongoDB database password.
	Password string `pulumi:"password"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// ClickHouse schema.
	Schemas []GetDatahubTaskTaskListTargetResourceClickHouseParamSchema `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip string `pulumi:"serviceVip"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Resource Type.
	Type string `pulumi:"type"`
	// instance vpc id.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName string `pulumi:"userName"`
}

// GetDatahubTaskTaskListTargetResourceClickHouseParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClickHouseParamArgs and GetDatahubTaskTaskListTargetResourceClickHouseParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClickHouseParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClickHouseParamArgs{...}
type GetDatahubTaskTaskListTargetResourceClickHouseParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamOutput
	ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamOutput
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamArgs struct {
	// ClickHouse cluster.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayInput `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// Mongo DB connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
	// MongoDB database password.
	Password pulumi.StringInput `pulumi:"password"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// ClickHouse schema.
	Schemas GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayInput `pulumi:"schemas"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
	// instance vpc id.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDatahubTaskTaskListTargetResourceClickHouseParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamArgs) ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamArgs) ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClickHouseParamOutput)
}

// GetDatahubTaskTaskListTargetResourceClickHouseParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClickHouseParamArray and GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClickHouseParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClickHouseParamArray{ GetDatahubTaskTaskListTargetResourceClickHouseParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceClickHouseParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamArray []GetDatahubTaskTaskListTargetResourceClickHouseParamInput

func (GetDatahubTaskTaskListTargetResourceClickHouseParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClickHouseParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamArray) ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamArray) ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamOutput {
	return o
}

// ClickHouse cluster.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Cluster }).(pulumi.StringOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Database }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) DropCls() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) []GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl {
		return v.DropCls
	}).(GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// Mongo DB connection ip.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Ip }).(pulumi.StringOutput)
}

// MongoDB database password.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Password }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) int { return v.Port }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Resource }).(pulumi.StringOutput)
}

// ClickHouse schema.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Schemas() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) []GetDatahubTaskTaskListTargetResourceClickHouseParamSchema {
		return v.Schemas
	}).(GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// instance vip.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Table }).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.Type }).(pulumi.StringOutput)
}

// instance vpc id.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// MongoDB database user name.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClickHouseParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceClickHouseParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceClickHouseParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceClickHouseParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceClickHouseParamOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl struct {
	// cls LogSet id.
	DropClsLogSet string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls bool `pulumi:"dropInvalidMessageToCls"`
}

// GetDatahubTaskTaskListTargetResourceClickHouseParamDropClInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs and GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClickHouseParamDropClInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs{...}
type GetDatahubTaskTaskListTargetResourceClickHouseParamDropClInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput
	ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolInput `pulumi:"dropInvalidMessageToCls"`
}

func (GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput)
}

// GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray and GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray{ GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs{...} }
type GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput
	ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray []GetDatahubTaskTaskListTargetResourceClickHouseParamDropClInput

func (GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput {
	return o
}

// cls LogSet id.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) DropClsLogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl) string { return v.DropClsLogSet }).(pulumi.StringOutput)
}

// account.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) DropClsOwneruin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl) string { return v.DropClsOwneruin }).(pulumi.StringOutput)
}

// The region where the cls is delivered.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) DropClsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl) string { return v.DropClsRegion }).(pulumi.StringOutput)
}

// cls topic.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) DropClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl) string { return v.DropClsTopicId }).(pulumi.StringOutput)
}

// Whether to deliver to cls.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput) DropInvalidMessageToCls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl) bool {
		return v.DropInvalidMessageToCls
	}).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceClickHouseParamDropCl)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamSchema struct {
	// Whether the message is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// Column Name.
	ColumnName string `pulumi:"columnName"`
	// The key name of the message.
	JsonKey string `pulumi:"jsonKey"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs and GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs{...}
type GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput
	ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// Column Name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The key name of the message.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput)
}

// GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray and GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray{ GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs{...} }
type GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput
	ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray []GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaInput

func (GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamSchema) bool { return v.AllowNull }).(pulumi.BoolOutput)
}

// Column Name.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamSchema) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The key name of the message.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamSchema) string { return v.JsonKey }).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClickHouseParamSchema) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClickHouseParamSchema)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput() GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput) ToGetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceClickHouseParamSchema {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceClickHouseParamSchema)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput)
}

type GetDatahubTaskTaskListTargetResourceClsParam struct {
	// key for data in non-json format.
	ContentKey string `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson bool `pulumi:"decodeJson"`
	// LogSet id.
	LogSet string `pulumi:"logSet"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField string `pulumi:"timeField"`
}

// GetDatahubTaskTaskListTargetResourceClsParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClsParamArgs and GetDatahubTaskTaskListTargetResourceClsParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClsParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClsParamArgs{...}
type GetDatahubTaskTaskListTargetResourceClsParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClsParamOutput() GetDatahubTaskTaskListTargetResourceClsParamOutput
	ToGetDatahubTaskTaskListTargetResourceClsParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClsParamOutput
}

type GetDatahubTaskTaskListTargetResourceClsParamArgs struct {
	// key for data in non-json format.
	ContentKey pulumi.StringInput `pulumi:"contentKey"`
	// Whether the produced information is in json format.
	DecodeJson pulumi.BoolInput `pulumi:"decodeJson"`
	// LogSet id.
	LogSet pulumi.StringInput `pulumi:"logSet"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
	TimeField pulumi.StringInput `pulumi:"timeField"`
}

func (GetDatahubTaskTaskListTargetResourceClsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClsParamArgs) ToGetDatahubTaskTaskListTargetResourceClsParamOutput() GetDatahubTaskTaskListTargetResourceClsParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClsParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClsParamArgs) ToGetDatahubTaskTaskListTargetResourceClsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClsParamOutput)
}

// GetDatahubTaskTaskListTargetResourceClsParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceClsParamArray and GetDatahubTaskTaskListTargetResourceClsParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceClsParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceClsParamArray{ GetDatahubTaskTaskListTargetResourceClsParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceClsParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutput() GetDatahubTaskTaskListTargetResourceClsParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceClsParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceClsParamArray []GetDatahubTaskTaskListTargetResourceClsParamInput

func (GetDatahubTaskTaskListTargetResourceClsParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceClsParamArray) ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutput() GetDatahubTaskTaskListTargetResourceClsParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceClsParamArray) ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClsParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceClsParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceClsParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) ToGetDatahubTaskTaskListTargetResourceClsParamOutput() GetDatahubTaskTaskListTargetResourceClsParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) ToGetDatahubTaskTaskListTargetResourceClsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClsParamOutput {
	return o
}

// key for data in non-json format.
func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) ContentKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClsParam) string { return v.ContentKey }).(pulumi.StringOutput)
}

// Whether the produced information is in json format.
func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) DecodeJson() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClsParam) bool { return v.DecodeJson }).(pulumi.BoolOutput)
}

// LogSet id.
func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) LogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClsParam) string { return v.LogSet }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
func (o GetDatahubTaskTaskListTargetResourceClsParamOutput) TimeField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceClsParam) string { return v.TimeField }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceClsParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceClsParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceClsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceClsParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutput() GetDatahubTaskTaskListTargetResourceClsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClsParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceClsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceClsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceClsParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceClsParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceClsParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceClsParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceClsParamOutput)
}

type GetDatahubTaskTaskListTargetResourceCosParam struct {
	// The size of aggregated messages MB.
	AggregateBatchSize int `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval int `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName string `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat string `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType string `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey string `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix string `pulumi:"objectKeyPrefix"`
	// region code.
	Region string `pulumi:"region"`
}

// GetDatahubTaskTaskListTargetResourceCosParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceCosParamArgs and GetDatahubTaskTaskListTargetResourceCosParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceCosParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceCosParamArgs{...}
type GetDatahubTaskTaskListTargetResourceCosParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceCosParamOutput() GetDatahubTaskTaskListTargetResourceCosParamOutput
	ToGetDatahubTaskTaskListTargetResourceCosParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceCosParamOutput
}

type GetDatahubTaskTaskListTargetResourceCosParamArgs struct {
	// The size of aggregated messages MB.
	AggregateBatchSize pulumi.IntInput `pulumi:"aggregateBatchSize"`
	// time interval.
	AggregateInterval pulumi.IntInput `pulumi:"aggregateInterval"`
	// cos bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Partition format formatted according to strptime time.
	DirectoryTimeFormat pulumi.StringInput `pulumi:"directoryTimeFormat"`
	// The file format after message aggregation csv|json.
	FormatOutputType pulumi.StringInput `pulumi:"formatOutputType"`
	// ObjectKey.
	ObjectKey pulumi.StringInput `pulumi:"objectKey"`
	// Dumped object directory prefix.
	ObjectKeyPrefix pulumi.StringInput `pulumi:"objectKeyPrefix"`
	// region code.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetDatahubTaskTaskListTargetResourceCosParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCosParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceCosParamArgs) ToGetDatahubTaskTaskListTargetResourceCosParamOutput() GetDatahubTaskTaskListTargetResourceCosParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceCosParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceCosParamArgs) ToGetDatahubTaskTaskListTargetResourceCosParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCosParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceCosParamOutput)
}

// GetDatahubTaskTaskListTargetResourceCosParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceCosParamArray and GetDatahubTaskTaskListTargetResourceCosParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceCosParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceCosParamArray{ GetDatahubTaskTaskListTargetResourceCosParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceCosParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutput() GetDatahubTaskTaskListTargetResourceCosParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceCosParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceCosParamArray []GetDatahubTaskTaskListTargetResourceCosParamInput

func (GetDatahubTaskTaskListTargetResourceCosParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceCosParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceCosParamArray) ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutput() GetDatahubTaskTaskListTargetResourceCosParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceCosParamArray) ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCosParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceCosParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceCosParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceCosParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCosParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) ToGetDatahubTaskTaskListTargetResourceCosParamOutput() GetDatahubTaskTaskListTargetResourceCosParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) ToGetDatahubTaskTaskListTargetResourceCosParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCosParamOutput {
	return o
}

// The size of aggregated messages MB.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) AggregateBatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) int { return v.AggregateBatchSize }).(pulumi.IntOutput)
}

// time interval.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) AggregateInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) int { return v.AggregateInterval }).(pulumi.IntOutput)
}

// cos bucket name.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) string { return v.BucketName }).(pulumi.StringOutput)
}

// Partition format formatted according to strptime time.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) DirectoryTimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) string { return v.DirectoryTimeFormat }).(pulumi.StringOutput)
}

// The file format after message aggregation csv|json.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) FormatOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) string { return v.FormatOutputType }).(pulumi.StringOutput)
}

// ObjectKey.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) ObjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) string { return v.ObjectKey }).(pulumi.StringOutput)
}

// Dumped object directory prefix.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) ObjectKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) string { return v.ObjectKeyPrefix }).(pulumi.StringOutput)
}

// region code.
func (o GetDatahubTaskTaskListTargetResourceCosParamOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCosParam) string { return v.Region }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceCosParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceCosParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceCosParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceCosParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutput() GetDatahubTaskTaskListTargetResourceCosParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceCosParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceCosParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCosParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceCosParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceCosParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceCosParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceCosParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceCosParamOutput)
}

type GetDatahubTaskTaskListTargetResourceCtsdbParam struct {
	// Ctsdb metric.
	CtsdbMetric string `pulumi:"ctsdbMetric"`
	// Resource.
	Resource string `pulumi:"resource"`
}

// GetDatahubTaskTaskListTargetResourceCtsdbParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceCtsdbParamArgs and GetDatahubTaskTaskListTargetResourceCtsdbParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceCtsdbParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceCtsdbParamArgs{...}
type GetDatahubTaskTaskListTargetResourceCtsdbParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutput() GetDatahubTaskTaskListTargetResourceCtsdbParamOutput
	ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceCtsdbParamOutput
}

type GetDatahubTaskTaskListTargetResourceCtsdbParamArgs struct {
	// Ctsdb metric.
	CtsdbMetric pulumi.StringInput `pulumi:"ctsdbMetric"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetDatahubTaskTaskListTargetResourceCtsdbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCtsdbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceCtsdbParamArgs) ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutput() GetDatahubTaskTaskListTargetResourceCtsdbParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceCtsdbParamArgs) ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCtsdbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceCtsdbParamOutput)
}

// GetDatahubTaskTaskListTargetResourceCtsdbParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceCtsdbParamArray and GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceCtsdbParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceCtsdbParamArray{ GetDatahubTaskTaskListTargetResourceCtsdbParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceCtsdbParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput() GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceCtsdbParamArray []GetDatahubTaskTaskListTargetResourceCtsdbParamInput

func (GetDatahubTaskTaskListTargetResourceCtsdbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceCtsdbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceCtsdbParamArray) ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput() GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceCtsdbParamArray) ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceCtsdbParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceCtsdbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCtsdbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceCtsdbParamOutput) ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutput() GetDatahubTaskTaskListTargetResourceCtsdbParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceCtsdbParamOutput) ToGetDatahubTaskTaskListTargetResourceCtsdbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCtsdbParamOutput {
	return o
}

// Ctsdb metric.
func (o GetDatahubTaskTaskListTargetResourceCtsdbParamOutput) CtsdbMetric() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCtsdbParam) string { return v.CtsdbMetric }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceCtsdbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceCtsdbParam) string { return v.Resource }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceCtsdbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput() GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceCtsdbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceCtsdbParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceCtsdbParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceCtsdbParamOutput)
}

type GetDatahubTaskTaskListTargetResourceDtsParam struct {
	// Dts consumer group Id.
	GroupId string `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword string `pulumi:"groupPassword"`
	// Dts account.
	GroupUser string `pulumi:"groupUser"`
	// Mongo DB connection ip.
	Ip string `pulumi:"ip"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql bool `pulumi:"tranSql"`
}

// GetDatahubTaskTaskListTargetResourceDtsParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceDtsParamArgs and GetDatahubTaskTaskListTargetResourceDtsParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceDtsParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceDtsParamArgs{...}
type GetDatahubTaskTaskListTargetResourceDtsParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceDtsParamOutput() GetDatahubTaskTaskListTargetResourceDtsParamOutput
	ToGetDatahubTaskTaskListTargetResourceDtsParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceDtsParamOutput
}

type GetDatahubTaskTaskListTargetResourceDtsParamArgs struct {
	// Dts consumer group Id.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Dts consumer group passwd.
	GroupPassword pulumi.StringInput `pulumi:"groupPassword"`
	// Dts account.
	GroupUser pulumi.StringInput `pulumi:"groupUser"`
	// Mongo DB connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
	TranSql pulumi.BoolInput `pulumi:"tranSql"`
}

func (GetDatahubTaskTaskListTargetResourceDtsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceDtsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceDtsParamArgs) ToGetDatahubTaskTaskListTargetResourceDtsParamOutput() GetDatahubTaskTaskListTargetResourceDtsParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceDtsParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceDtsParamArgs) ToGetDatahubTaskTaskListTargetResourceDtsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceDtsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceDtsParamOutput)
}

// GetDatahubTaskTaskListTargetResourceDtsParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceDtsParamArray and GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceDtsParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceDtsParamArray{ GetDatahubTaskTaskListTargetResourceDtsParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceDtsParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutput() GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceDtsParamArray []GetDatahubTaskTaskListTargetResourceDtsParamInput

func (GetDatahubTaskTaskListTargetResourceDtsParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceDtsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceDtsParamArray) ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutput() GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceDtsParamArray) ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceDtsParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceDtsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceDtsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) ToGetDatahubTaskTaskListTargetResourceDtsParamOutput() GetDatahubTaskTaskListTargetResourceDtsParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) ToGetDatahubTaskTaskListTargetResourceDtsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceDtsParamOutput {
	return o
}

// Dts consumer group Id.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) string { return v.GroupId }).(pulumi.StringOutput)
}

// Dts consumer group passwd.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) GroupPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) string { return v.GroupPassword }).(pulumi.StringOutput)
}

// Dts account.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) GroupUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) string { return v.GroupUser }).(pulumi.StringOutput)
}

// Mongo DB connection ip.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) string { return v.Ip }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) int { return v.Port }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) string { return v.Topic }).(pulumi.StringOutput)
}

// False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
func (o GetDatahubTaskTaskListTargetResourceDtsParamOutput) TranSql() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceDtsParam) bool { return v.TranSql }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceDtsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutput() GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceDtsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceDtsParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceDtsParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceDtsParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceDtsParamOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParam struct {
	// key for data in non-json format.
	ContentKey string `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey string `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat string `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField string `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls []GetDatahubTaskTaskListTargetResourceEsParamDropCl `pulumi:"dropCls"`
	// dead letter queue.
	DropDlqs []GetDatahubTaskTaskListTargetResourceEsParamDropDlq `pulumi:"dropDlqs"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage bool `pulumi:"dropInvalidJsonMessage"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index string `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType string `pulumi:"indexType"`
	// MongoDB database password.
	Password string `pulumi:"password"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip string `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId string `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName string `pulumi:"userName"`
}

// GetDatahubTaskTaskListTargetResourceEsParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamArgs and GetDatahubTaskTaskListTargetResourceEsParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamArgs{...}
type GetDatahubTaskTaskListTargetResourceEsParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamOutput() GetDatahubTaskTaskListTargetResourceEsParamOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamArgs struct {
	// key for data in non-json format.
	ContentKey pulumi.StringInput `pulumi:"contentKey"`
	// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
	DatabasePrimaryKey pulumi.StringInput `pulumi:"databasePrimaryKey"`
	// Es date suffix.
	DateFormat pulumi.StringInput `pulumi:"dateFormat"`
	// The field name of the document ID value dumped into Es.
	DocumentIdField pulumi.StringInput `pulumi:"documentIdField"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls GetDatahubTaskTaskListTargetResourceEsParamDropClArrayInput `pulumi:"dropCls"`
	// dead letter queue.
	DropDlqs GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayInput `pulumi:"dropDlqs"`
	// Whether Es discards messages in non-json format.
	DropInvalidJsonMessage pulumi.BoolInput `pulumi:"dropInvalidJsonMessage"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// Es index name.
	Index pulumi.StringInput `pulumi:"index"`
	// Es custom index name type, STRING, JSONPATH, the default is STRING.
	IndexType pulumi.StringInput `pulumi:"indexType"`
	// MongoDB database password.
	Password pulumi.StringInput `pulumi:"password"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// instance vip.
	ServiceVip pulumi.StringInput `pulumi:"serviceVip"`
	// instance vpc id.
	UniqVpcId pulumi.StringInput `pulumi:"uniqVpcId"`
	// MongoDB database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDatahubTaskTaskListTargetResourceEsParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamArgs) ToGetDatahubTaskTaskListTargetResourceEsParamOutput() GetDatahubTaskTaskListTargetResourceEsParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamArgs) ToGetDatahubTaskTaskListTargetResourceEsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamOutput)
}

// GetDatahubTaskTaskListTargetResourceEsParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamArray and GetDatahubTaskTaskListTargetResourceEsParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamArray{ GetDatahubTaskTaskListTargetResourceEsParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceEsParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamArray []GetDatahubTaskTaskListTargetResourceEsParamInput

func (GetDatahubTaskTaskListTargetResourceEsParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamArray) ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamArray) ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) ToGetDatahubTaskTaskListTargetResourceEsParamOutput() GetDatahubTaskTaskListTargetResourceEsParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) ToGetDatahubTaskTaskListTargetResourceEsParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamOutput {
	return o
}

// key for data in non-json format.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) ContentKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.ContentKey }).(pulumi.StringOutput)
}

// When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DatabasePrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.DatabasePrimaryKey }).(pulumi.StringOutput)
}

// Es date suffix.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.DateFormat }).(pulumi.StringOutput)
}

// The field name of the document ID value dumped into Es.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DocumentIdField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.DocumentIdField }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DropCls() GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) []GetDatahubTaskTaskListTargetResourceEsParamDropCl {
		return v.DropCls
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput)
}

// dead letter queue.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DropDlqs() GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) []GetDatahubTaskTaskListTargetResourceEsParamDropDlq {
		return v.DropDlqs
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput)
}

// Whether Es discards messages in non-json format.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DropInvalidJsonMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) bool { return v.DropInvalidJsonMessage }).(pulumi.BoolOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// Es index name.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.Index }).(pulumi.StringOutput)
}

// Es custom index name type, STRING, JSONPATH, the default is STRING.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) IndexType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.IndexType }).(pulumi.StringOutput)
}

// MongoDB database password.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.Password }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) int { return v.Port }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// instance vip.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) ServiceVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.ServiceVip }).(pulumi.StringOutput)
}

// instance vpc id.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) UniqVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.UniqVpcId }).(pulumi.StringOutput)
}

// MongoDB database user name.
func (o GetDatahubTaskTaskListTargetResourceEsParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEsParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEsParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEsParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEsParamOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropCl struct {
	// cls LogSet id.
	DropClsLogSet string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls bool `pulumi:"dropInvalidMessageToCls"`
}

// GetDatahubTaskTaskListTargetResourceEsParamDropClInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropClArgs and GetDatahubTaskTaskListTargetResourceEsParamDropClOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropClInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropClArgs{...}
type GetDatahubTaskTaskListTargetResourceEsParamDropClInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutput() GetDatahubTaskTaskListTargetResourceEsParamDropClOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropClOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropClArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolInput `pulumi:"dropInvalidMessageToCls"`
}

func (GetDatahubTaskTaskListTargetResourceEsParamDropClArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropClArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutput() GetDatahubTaskTaskListTargetResourceEsParamDropClOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropClArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropClOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropClOutput)
}

// GetDatahubTaskTaskListTargetResourceEsParamDropClArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropClArray and GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropClArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropClArray{ GetDatahubTaskTaskListTargetResourceEsParamDropClArgs{...} }
type GetDatahubTaskTaskListTargetResourceEsParamDropClArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropClArray []GetDatahubTaskTaskListTargetResourceEsParamDropClInput

func (GetDatahubTaskTaskListTargetResourceEsParamDropClArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropClArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropClArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropClOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutput() GetDatahubTaskTaskListTargetResourceEsParamDropClOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropClOutput {
	return o
}

// cls LogSet id.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) DropClsLogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropCl) string { return v.DropClsLogSet }).(pulumi.StringOutput)
}

// account.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) DropClsOwneruin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropCl) string { return v.DropClsOwneruin }).(pulumi.StringOutput)
}

// The region where the cls is delivered.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) DropClsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropCl) string { return v.DropClsRegion }).(pulumi.StringOutput)
}

// cls topic.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) DropClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropCl) string { return v.DropClsTopicId }).(pulumi.StringOutput)
}

// Whether to deliver to cls.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropClOutput) DropInvalidMessageToCls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropCl) bool { return v.DropInvalidMessageToCls }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEsParamDropClOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEsParamDropCl {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEsParamDropCl)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropClOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlq struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType string `pulumi:"dlqType"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams []GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam `pulumi:"kafkaParams"`
	// retry times.
	MaxRetryAttempts int `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval int `pulumi:"retryInterval"`
	// Topic configuration, Required when Type is Topic.
	TopicParams []GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam `pulumi:"topicParams"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs and GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs{...}
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs struct {
	// dlq type, CKAFKA|TOPIC.
	DlqType pulumi.StringInput `pulumi:"dlqType"`
	// ckafka configuration, required when Type is KAFKA.
	KafkaParams GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayInput `pulumi:"kafkaParams"`
	// retry times.
	MaxRetryAttempts pulumi.IntInput `pulumi:"maxRetryAttempts"`
	// retry interval.
	RetryInterval pulumi.IntInput `pulumi:"retryInterval"`
	// Topic configuration, Required when Type is Topic.
	TopicParams GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayInput `pulumi:"topicParams"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput)
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray and GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray{ GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs{...} }
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray []GetDatahubTaskTaskListTargetResourceEsParamDropDlqInput

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput {
	return o
}

// dlq type, CKAFKA|TOPIC.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) DlqType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlq) string { return v.DlqType }).(pulumi.StringOutput)
}

// ckafka configuration, required when Type is KAFKA.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) KafkaParams() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlq) []GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam {
		return v.KafkaParams
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput)
}

// retry times.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) MaxRetryAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlq) int { return v.MaxRetryAttempts }).(pulumi.IntOutput)
}

// retry interval.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) RetryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlq) int { return v.RetryInterval }).(pulumi.IntOutput)
}

// Topic configuration, Required when Type is Topic.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) TopicParams() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlq) []GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam {
		return v.TopicParams
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlq) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlq)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEsParamDropDlq {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEsParamDropDlq)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType string `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration bool `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition bool `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit int `pulumi:"qpsLimit"`
	// Resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName string `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId int `pulumi:"zoneId"`
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs and GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs{...}
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType pulumi.StringInput `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolInput `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition pulumi.BoolInput `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntInput `pulumi:"qpsLimit"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput)
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray and GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray{ GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray []GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamInput

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// ConnectorSyncType.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) ConnectorSyncType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string {
		return v.ConnectorSyncType
	}).(pulumi.StringOutput)
}

// enable dead letter queue.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) EnableToleration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) bool { return v.EnableToleration }).(pulumi.BoolOutput)
}

// KeepPartition.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) KeepPartition() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) bool { return v.KeepPartition }).(pulumi.BoolOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// the partition num of the topic.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Qps(query per seconds) limit.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) QpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) int { return v.QpsLimit }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string { return v.ResourceName }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) TableMappings() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) []GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping {
		return v.TableMappings
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

// whether to use multi table.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) UseTableMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) bool { return v.UseTableMapping }).(pulumi.BoolOutput)
}

// Zone ID.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs and GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs{...}
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray and GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray{ GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs{...} }
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray []GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingInput

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.Database
	}).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.Table
	}).(pulumi.StringOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.Topic
	}).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping) string {
		return v.TopicId
	}).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// Resource.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs and GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs{...}
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
}

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput)
}

// GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray and GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray{ GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray []GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamInput

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput() GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput)
}

type GetDatahubTaskTaskListTargetResourceEventBusParam struct {
	// SCF function name.
	FunctionName string `pulumi:"functionName"`
	// SCF cloud function namespace, the default is default.
	Namespace string `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier string `pulumi:"qualifier"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListTargetResourceEventBusParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEventBusParamArgs and GetDatahubTaskTaskListTargetResourceEventBusParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEventBusParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEventBusParamArgs{...}
type GetDatahubTaskTaskListTargetResourceEventBusParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEventBusParamOutput() GetDatahubTaskTaskListTargetResourceEventBusParamOutput
	ToGetDatahubTaskTaskListTargetResourceEventBusParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEventBusParamOutput
}

type GetDatahubTaskTaskListTargetResourceEventBusParamArgs struct {
	// SCF function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// SCF cloud function namespace, the default is default.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListTargetResourceEventBusParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEventBusParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEventBusParamArgs) ToGetDatahubTaskTaskListTargetResourceEventBusParamOutput() GetDatahubTaskTaskListTargetResourceEventBusParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEventBusParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEventBusParamArgs) ToGetDatahubTaskTaskListTargetResourceEventBusParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEventBusParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEventBusParamOutput)
}

// GetDatahubTaskTaskListTargetResourceEventBusParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceEventBusParamArray and GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceEventBusParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceEventBusParamArray{ GetDatahubTaskTaskListTargetResourceEventBusParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceEventBusParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput() GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceEventBusParamArray []GetDatahubTaskTaskListTargetResourceEventBusParamInput

func (GetDatahubTaskTaskListTargetResourceEventBusParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEventBusParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceEventBusParamArray) ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput() GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceEventBusParamArray) ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceEventBusParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEventBusParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEventBusParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) ToGetDatahubTaskTaskListTargetResourceEventBusParamOutput() GetDatahubTaskTaskListTargetResourceEventBusParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) ToGetDatahubTaskTaskListTargetResourceEventBusParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEventBusParamOutput {
	return o
}

// SCF function name.
func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEventBusParam) string { return v.FunctionName }).(pulumi.StringOutput)
}

// SCF cloud function namespace, the default is default.
func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEventBusParam) string { return v.Namespace }).(pulumi.StringOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEventBusParam) string { return v.Qualifier }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEventBusParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEventBusParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourceEventBusParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceEventBusParam) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceEventBusParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput() GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceEventBusParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceEventBusParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceEventBusParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceEventBusParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceEventBusParamOutput)
}

type GetDatahubTaskTaskListTargetResourceKafkaParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType string `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration bool `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition bool `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum int `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit int `pulumi:"qpsLimit"`
	// Resource.
	Resource string `pulumi:"resource"`
	// instance name.
	ResourceName string `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings []GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping bool `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId int `pulumi:"zoneId"`
}

// GetDatahubTaskTaskListTargetResourceKafkaParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceKafkaParamArgs and GetDatahubTaskTaskListTargetResourceKafkaParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceKafkaParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceKafkaParamArgs{...}
type GetDatahubTaskTaskListTargetResourceKafkaParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceKafkaParamOutput() GetDatahubTaskTaskListTargetResourceKafkaParamOutput
	ToGetDatahubTaskTaskListTargetResourceKafkaParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamOutput
}

type GetDatahubTaskTaskListTargetResourceKafkaParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// ConnectorSyncType.
	ConnectorSyncType pulumi.StringInput `pulumi:"connectorSyncType"`
	// enable dead letter queue.
	EnableToleration pulumi.BoolInput `pulumi:"enableToleration"`
	// KeepPartition.
	KeepPartition pulumi.BoolInput `pulumi:"keepPartition"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// the partition num of the topic.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Qps(query per seconds) limit.
	QpsLimit pulumi.IntInput `pulumi:"qpsLimit"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// instance name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// maps of table to topic, required when multi topic is selected.
	TableMappings GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayInput `pulumi:"tableMappings"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
	// whether to use multi table.
	UseTableMapping pulumi.BoolInput `pulumi:"useTableMapping"`
	// Zone ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetDatahubTaskTaskListTargetResourceKafkaParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamArgs) ToGetDatahubTaskTaskListTargetResourceKafkaParamOutput() GetDatahubTaskTaskListTargetResourceKafkaParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceKafkaParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamArgs) ToGetDatahubTaskTaskListTargetResourceKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceKafkaParamOutput)
}

// GetDatahubTaskTaskListTargetResourceKafkaParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceKafkaParamArray and GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceKafkaParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceKafkaParamArray{ GetDatahubTaskTaskListTargetResourceKafkaParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceKafkaParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput() GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceKafkaParamArray []GetDatahubTaskTaskListTargetResourceKafkaParamInput

func (GetDatahubTaskTaskListTargetResourceKafkaParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceKafkaParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamArray) ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput() GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamArray) ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceKafkaParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceKafkaParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamOutput() GetDatahubTaskTaskListTargetResourceKafkaParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// ConnectorSyncType.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) ConnectorSyncType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.ConnectorSyncType }).(pulumi.StringOutput)
}

// enable dead letter queue.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) EnableToleration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) bool { return v.EnableToleration }).(pulumi.BoolOutput)
}

// KeepPartition.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) KeepPartition() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) bool { return v.KeepPartition }).(pulumi.BoolOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// the partition num of the topic.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Qps(query per seconds) limit.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) QpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) int { return v.QpsLimit }).(pulumi.IntOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.Resource }).(pulumi.StringOutput)
}

// instance name.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.ResourceName }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// maps of table to topic, required when multi topic is selected.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) TableMappings() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) []GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping {
		return v.TableMappings
	}).(GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

// whether to use multi table.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) UseTableMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) bool { return v.UseTableMapping }).(pulumi.BoolOutput)
}

// Zone ID.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParam) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceKafkaParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput() GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceKafkaParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceKafkaParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceKafkaParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceKafkaParamOutput)
}

type GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic string `pulumi:"topic"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
}

// GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingInput is an input type that accepts GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs and GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingInput` via:
//
//	GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs{...}
type GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput
	ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput
}

type GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Topic name, use `,` when more than 1 topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput)
}

// GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray and GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray{ GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs{...} }
type GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput
	ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput
}

type GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray []GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingInput

func (GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping) string { return v.Database }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping) string { return v.Table }).(pulumi.StringOutput)
}

// Topic name, use `,` when more than 1 topic.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping) string { return v.Topic }).(pulumi.StringOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput() GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceKafkaParamTableMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput)
}

type GetDatahubTaskTaskListTargetResourceMariaDbParam struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix bool `pulumi:"isTablePrefix"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema bool `pulumi:"recordWithSchema"`
	// Resource.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// GetDatahubTaskTaskListTargetResourceMariaDbParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMariaDbParamArgs and GetDatahubTaskTaskListTargetResourceMariaDbParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMariaDbParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMariaDbParamArgs{...}
type GetDatahubTaskTaskListTargetResourceMariaDbParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutput() GetDatahubTaskTaskListTargetResourceMariaDbParamOutput
	ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMariaDbParamOutput
}

type GetDatahubTaskTaskListTargetResourceMariaDbParamArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolInput `pulumi:"isTablePrefix"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolInput `pulumi:"recordWithSchema"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatahubTaskTaskListTargetResourceMariaDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMariaDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMariaDbParamArgs) ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutput() GetDatahubTaskTaskListTargetResourceMariaDbParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMariaDbParamArgs) ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMariaDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMariaDbParamOutput)
}

// GetDatahubTaskTaskListTargetResourceMariaDbParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMariaDbParamArray and GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMariaDbParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMariaDbParamArray{ GetDatahubTaskTaskListTargetResourceMariaDbParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceMariaDbParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput() GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceMariaDbParamArray []GetDatahubTaskTaskListTargetResourceMariaDbParamInput

func (GetDatahubTaskTaskListTargetResourceMariaDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMariaDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMariaDbParamArray) ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput() GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMariaDbParamArray) ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceMariaDbParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMariaDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutput() GetDatahubTaskTaskListTargetResourceMariaDbParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) ToGetDatahubTaskTaskListTargetResourceMariaDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMariaDbParamOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) IncludeContentChanges() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.IncludeContentChanges }).(pulumi.StringOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) IncludeQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) bool { return v.IncludeQuery }).(pulumi.BoolOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) IsTablePrefix() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) bool { return v.IsTablePrefix }).(pulumi.BoolOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) KeyColumns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.KeyColumns }).(pulumi.StringOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) RecordWithSchema() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) bool { return v.RecordWithSchema }).(pulumi.BoolOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourceMariaDbParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMariaDbParam) string { return v.Table }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMariaDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput() GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceMariaDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceMariaDbParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceMariaDbParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceMariaDbParamOutput)
}

type GetDatahubTaskTaskListTargetResourceMongoDbParam struct {
	// MongoDB collection.
	Collection string `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting bool `pulumi:"copyExisting"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// Mongo DB connection ip.
	Ip string `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent string `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password string `pulumi:"password"`
	// aggregation pipeline.
	Pipeline string `pulumi:"pipeline"`
	// MongoDB connection port.
	Port int `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference string `pulumi:"readPreference"`
	// Resource.
	Resource string `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt bool `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName string `pulumi:"userName"`
}

// GetDatahubTaskTaskListTargetResourceMongoDbParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMongoDbParamArgs and GetDatahubTaskTaskListTargetResourceMongoDbParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMongoDbParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMongoDbParamArgs{...}
type GetDatahubTaskTaskListTargetResourceMongoDbParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutput() GetDatahubTaskTaskListTargetResourceMongoDbParamOutput
	ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMongoDbParamOutput
}

type GetDatahubTaskTaskListTargetResourceMongoDbParamArgs struct {
	// MongoDB collection.
	Collection pulumi.StringInput `pulumi:"collection"`
	// Whether to copy the stock data, the default parameter is true.
	CopyExisting pulumi.BoolInput `pulumi:"copyExisting"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Mongo DB connection ip.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
	ListeningEvent pulumi.StringInput `pulumi:"listeningEvent"`
	// MongoDB database password.
	Password pulumi.StringInput `pulumi:"password"`
	// aggregation pipeline.
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	// MongoDB connection port.
	Port pulumi.IntInput `pulumi:"port"`
	// Master-slave priority, default master node.
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// Whether it is a self-built cluster.
	SelfBuilt pulumi.BoolInput `pulumi:"selfBuilt"`
	// MongoDB database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDatahubTaskTaskListTargetResourceMongoDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMongoDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMongoDbParamArgs) ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutput() GetDatahubTaskTaskListTargetResourceMongoDbParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMongoDbParamArgs) ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMongoDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMongoDbParamOutput)
}

// GetDatahubTaskTaskListTargetResourceMongoDbParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMongoDbParamArray and GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMongoDbParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMongoDbParamArray{ GetDatahubTaskTaskListTargetResourceMongoDbParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceMongoDbParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput() GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceMongoDbParamArray []GetDatahubTaskTaskListTargetResourceMongoDbParamInput

func (GetDatahubTaskTaskListTargetResourceMongoDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMongoDbParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMongoDbParamArray) ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput() GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMongoDbParamArray) ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceMongoDbParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMongoDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutput() GetDatahubTaskTaskListTargetResourceMongoDbParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) ToGetDatahubTaskTaskListTargetResourceMongoDbParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMongoDbParamOutput {
	return o
}

// MongoDB collection.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.Collection }).(pulumi.StringOutput)
}

// Whether to copy the stock data, the default parameter is true.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) CopyExisting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) bool { return v.CopyExisting }).(pulumi.BoolOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.Database }).(pulumi.StringOutput)
}

// Mongo DB connection ip.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.Ip }).(pulumi.StringOutput)
}

// Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) ListeningEvent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.ListeningEvent }).(pulumi.StringOutput)
}

// MongoDB database password.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.Password }).(pulumi.StringOutput)
}

// aggregation pipeline.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.Pipeline }).(pulumi.StringOutput)
}

// MongoDB connection port.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) int { return v.Port }).(pulumi.IntOutput)
}

// Master-slave priority, default master node.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.ReadPreference }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.Resource }).(pulumi.StringOutput)
}

// Whether it is a self-built cluster.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) SelfBuilt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) bool { return v.SelfBuilt }).(pulumi.BoolOutput)
}

// MongoDB database user name.
func (o GetDatahubTaskTaskListTargetResourceMongoDbParamOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMongoDbParam) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMongoDbParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput() GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceMongoDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceMongoDbParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceMongoDbParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceMongoDbParamOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParam struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn string `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode string `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode string `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource string `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom string `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic string `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls []GetDatahubTaskTaskListTargetResourceMySqlParamDropCl `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges string `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery bool `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix bool `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression.
	IsTableRegular bool `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns string `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat string `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema bool `pulumi:"recordWithSchema"`
	// Resource.
	Resource string `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase string `pulumi:"signalDatabase"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex string `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement string `pulumi:"topicReplacement"`
}

// GetDatahubTaskTaskListTargetResourceMySqlParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMySqlParamArgs and GetDatahubTaskTaskListTargetResourceMySqlParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMySqlParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMySqlParamArgs{...}
type GetDatahubTaskTaskListTargetResourceMySqlParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMySqlParamOutput() GetDatahubTaskTaskListTargetResourceMySqlParamOutput
	ToGetDatahubTaskTaskListTargetResourceMySqlParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamOutput
}

type GetDatahubTaskTaskListTargetResourceMySqlParamArgs struct {
	// the name of the column to be monitored.
	DataSourceIncrementColumn pulumi.StringInput `pulumi:"dataSourceIncrementColumn"`
	// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
	DataSourceIncrementMode pulumi.StringInput `pulumi:"dataSourceIncrementMode"`
	// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
	DataSourceMonitorMode pulumi.StringInput `pulumi:"dataSourceMonitorMode"`
	// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
	DataSourceMonitorResource pulumi.StringInput `pulumi:"dataSourceMonitorResource"`
	// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
	DataSourceStartFrom pulumi.StringInput `pulumi:"dataSourceStartFrom"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
	DdlTopic pulumi.StringInput `pulumi:"ddlTopic"`
	// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
	DropCls GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayInput `pulumi:"dropCls"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
	IncludeContentChanges pulumi.StringInput `pulumi:"includeContentChanges"`
	// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
	IncludeQuery pulumi.BoolInput `pulumi:"includeQuery"`
	// When the Table input is a prefix, the value of this item is true, otherwise it is false.
	IsTablePrefix pulumi.BoolInput `pulumi:"isTablePrefix"`
	// Whether the input table is a regular expression.
	IsTableRegular pulumi.BoolInput `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringInput `pulumi:"keyColumns"`
	// output format, DEFAULT, CANAL_1, CANAL_2.
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolInput `pulumi:"recordWithSchema"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// database name of signal table.
	SignalDatabase pulumi.StringInput `pulumi:"signalDatabase"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
	// Regular expression for routing events to specific topics, defaults to (.*).
	TopicRegex pulumi.StringInput `pulumi:"topicRegex"`
	// TopicRegex, $1, $2.
	TopicReplacement pulumi.StringInput `pulumi:"topicReplacement"`
}

func (GetDatahubTaskTaskListTargetResourceMySqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamArgs) ToGetDatahubTaskTaskListTargetResourceMySqlParamOutput() GetDatahubTaskTaskListTargetResourceMySqlParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMySqlParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamArgs) ToGetDatahubTaskTaskListTargetResourceMySqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMySqlParamOutput)
}

// GetDatahubTaskTaskListTargetResourceMySqlParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMySqlParamArray and GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMySqlParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMySqlParamArray{ GetDatahubTaskTaskListTargetResourceMySqlParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceMySqlParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceMySqlParamArray []GetDatahubTaskTaskListTargetResourceMySqlParamInput

func (GetDatahubTaskTaskListTargetResourceMySqlParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMySqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamArray) ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamArray) ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMySqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamOutput() GetDatahubTaskTaskListTargetResourceMySqlParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamOutput {
	return o
}

// the name of the column to be monitored.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataSourceIncrementColumn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataSourceIncrementColumn }).(pulumi.StringOutput)
}

// TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataSourceIncrementMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataSourceIncrementMode }).(pulumi.StringOutput)
}

// TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataSourceMonitorMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataSourceMonitorMode }).(pulumi.StringOutput)
}

// When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataSourceMonitorResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataSourceMonitorResource }).(pulumi.StringOutput)
}

// HEAD means copy stock + incremental data, TAIL means copy only incremental data.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataSourceStartFrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataSourceStartFrom }).(pulumi.StringOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataTargetInsertMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataTargetInsertMode }).(pulumi.StringOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DataTargetPrimaryKeyField }).(pulumi.StringOutput)
}

// Mapping relationship between tables and messages.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DataTargetRecordMappings() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) []GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DdlTopic() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.DdlTopic }).(pulumi.StringOutput)
}

// When the member parameter Drop Invalid Message To Cls is set to true, the Drop Invalid Message parameter is invalid.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DropCls() GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) []GetDatahubTaskTaskListTargetResourceMySqlParamDropCl {
		return v.DropCls
	}).(GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) IncludeContentChanges() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.IncludeContentChanges }).(pulumi.StringOutput)
}

// If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) IncludeQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) bool { return v.IncludeQuery }).(pulumi.BoolOutput)
}

// When the Table input is a prefix, the value of this item is true, otherwise it is false.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) IsTablePrefix() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) bool { return v.IsTablePrefix }).(pulumi.BoolOutput)
}

// Whether the input table is a regular expression.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) IsTableRegular() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) bool { return v.IsTableRegular }).(pulumi.BoolOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) KeyColumns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.KeyColumns }).(pulumi.StringOutput)
}

// output format, DEFAULT, CANAL_1, CANAL_2.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) RecordWithSchema() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) bool { return v.RecordWithSchema }).(pulumi.BoolOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// database name of signal table.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) SignalDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.SignalDatabase }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.Table }).(pulumi.StringOutput)
}

// Regular expression for routing events to specific topics, defaults to (.*).
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) TopicRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.TopicRegex }).(pulumi.StringOutput)
}

// TopicRegex, $1, $2.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamOutput) TopicReplacement() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParam) string { return v.TopicReplacement }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMySqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceMySqlParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceMySqlParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceMySqlParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceMySqlParamOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey string `pulumi:"jsonKey"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs and GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs{...}
type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput
	ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput)
}

// GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray and GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray{ GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs{...} }
type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput
	ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray []GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingInput

func (GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) bool { return v.AllowNull }).(pulumi.BoolOutput)
}

// Whether it is an auto-increment column.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) bool {
		return v.AutoIncrement
	}).(pulumi.BoolOutput)
}

// Column Name.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string {
		return v.ColumnName
	}).(pulumi.StringOutput)
}

// current ColumnSize.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string {
		return v.ColumnSize
	}).(pulumi.StringOutput)
}

// current Column DecimalDigits.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string {
		return v.DecimalDigits
	}).(pulumi.StringOutput)
}

// Database table default parameters.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string {
		return v.DefaultValue
	}).(pulumi.StringOutput)
}

// Database table extra fields.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string {
		return v.ExtraInfo
	}).(pulumi.StringOutput)
}

// The key name of the message.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string { return v.JsonKey }).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDropCl struct {
	// cls LogSet id.
	DropClsLogSet string `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin string `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion string `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId string `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls bool `pulumi:"dropInvalidMessageToCls"`
}

// GetDatahubTaskTaskListTargetResourceMySqlParamDropClInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs and GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMySqlParamDropClInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs{...}
type GetDatahubTaskTaskListTargetResourceMySqlParamDropClInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput
	ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs struct {
	// cls LogSet id.
	DropClsLogSet pulumi.StringInput `pulumi:"dropClsLogSet"`
	// account.
	DropClsOwneruin pulumi.StringInput `pulumi:"dropClsOwneruin"`
	// The region where the cls is delivered.
	DropClsRegion pulumi.StringInput `pulumi:"dropClsRegion"`
	// cls topic.
	DropClsTopicId pulumi.StringInput `pulumi:"dropClsTopicId"`
	// Whether to deliver to cls.
	DropInvalidMessageToCls pulumi.BoolInput `pulumi:"dropInvalidMessageToCls"`
}

func (GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput)
}

// GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray and GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray{ GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs{...} }
type GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput
	ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray []GetDatahubTaskTaskListTargetResourceMySqlParamDropClInput

func (GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMySqlParamDropCl)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput {
	return o
}

// cls LogSet id.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) DropClsLogSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDropCl) string { return v.DropClsLogSet }).(pulumi.StringOutput)
}

// account.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) DropClsOwneruin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDropCl) string { return v.DropClsOwneruin }).(pulumi.StringOutput)
}

// The region where the cls is delivered.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) DropClsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDropCl) string { return v.DropClsRegion }).(pulumi.StringOutput)
}

// cls topic.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) DropClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDropCl) string { return v.DropClsTopicId }).(pulumi.StringOutput)
}

// Whether to deliver to cls.
func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput) DropInvalidMessageToCls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceMySqlParamDropCl) bool { return v.DropInvalidMessageToCls }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceMySqlParamDropCl)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput() GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput) ToGetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceMySqlParamDropCl {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceMySqlParamDropCl)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput)
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParam struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat string `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode string `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField string `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings []GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database string `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage bool `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular bool `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns string `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName string `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema bool `pulumi:"recordWithSchema"`
	// Resource.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// GetDatahubTaskTaskListTargetResourcePostgreSqlParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs and GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourcePostgreSqlParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs{...}
type GetDatahubTaskTaskListTargetResourcePostgreSqlParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput
	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs struct {
	// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
	DataTargetInsertMode pulumi.StringInput `pulumi:"dataTargetInsertMode"`
	// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
	DataTargetPrimaryKeyField pulumi.StringInput `pulumi:"dataTargetPrimaryKeyField"`
	// Mapping relationship between tables and messages.
	DataTargetRecordMappings GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput `pulumi:"dataTargetRecordMappings"`
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Whether to discard messages that fail to parse, the default is true.
	DropInvalidMessage pulumi.BoolInput `pulumi:"dropInvalidMessage"`
	// Whether the input table is a regular expression.
	IsTableRegular pulumi.BoolInput `pulumi:"isTableRegular"`
	// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
	KeyColumns pulumi.StringInput `pulumi:"keyColumns"`
	// (decoderbufs/pgoutput), default decoderbufs.
	PluginName pulumi.StringInput `pulumi:"pluginName"`
	// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
	RecordWithSchema pulumi.BoolInput `pulumi:"recordWithSchema"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput)
}

// GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray and GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray{ GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs{...} }
type GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray []GetDatahubTaskTaskListTargetResourcePostgreSqlParamInput

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput {
	return o
}

// Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.DataFormat }).(pulumi.StringOutput)
}

// INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) DataTargetInsertMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.DataTargetInsertMode }).(pulumi.StringOutput)
}

// When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) DataTargetPrimaryKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.DataTargetPrimaryKeyField }).(pulumi.StringOutput)
}

// Mapping relationship between tables and messages.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) DataTargetRecordMappings() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) []GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping {
		return v.DataTargetRecordMappings
	}).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.Database }).(pulumi.StringOutput)
}

// Whether to discard messages that fail to parse, the default is true.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) DropInvalidMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) bool { return v.DropInvalidMessage }).(pulumi.BoolOutput)
}

// Whether the input table is a regular expression.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) IsTableRegular() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) bool { return v.IsTableRegular }).(pulumi.BoolOutput)
}

// Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) KeyColumns() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.KeyColumns }).(pulumi.StringOutput)
}

// (decoderbufs/pgoutput), default decoderbufs.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.PluginName }).(pulumi.StringOutput)
}

// If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) RecordWithSchema() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) bool { return v.RecordWithSchema }).(pulumi.BoolOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParam) string { return v.Table }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourcePostgreSqlParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourcePostgreSqlParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourcePostgreSqlParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput)
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping struct {
	// Whether the message is allowed to be empty.
	AllowNull bool `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement bool `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName string `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize string `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits string `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue string `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo string `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey string `pulumi:"jsonKey"`
	// Resource Type.
	Type string `pulumi:"type"`
}

// GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingInput is an input type that accepts GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs and GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingInput` via:
//
//	GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs{...}
type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput
	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs struct {
	// Whether the message is allowed to be empty.
	AllowNull pulumi.BoolInput `pulumi:"allowNull"`
	// Whether it is an auto-increment column.
	AutoIncrement pulumi.BoolInput `pulumi:"autoIncrement"`
	// Column Name.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// current ColumnSize.
	ColumnSize pulumi.StringInput `pulumi:"columnSize"`
	// current Column DecimalDigits.
	DecimalDigits pulumi.StringInput `pulumi:"decimalDigits"`
	// Database table default parameters.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Database table extra fields.
	ExtraInfo pulumi.StringInput `pulumi:"extraInfo"`
	// The key name of the message.
	JsonKey pulumi.StringInput `pulumi:"jsonKey"`
	// Resource Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return i.ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

// GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray and GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray{ GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs{...} }
type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
	ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray []GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingInput

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput)
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return o
}

// Whether the message is allowed to be empty.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) AllowNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) bool {
		return v.AllowNull
	}).(pulumi.BoolOutput)
}

// Whether it is an auto-increment column.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) AutoIncrement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) bool {
		return v.AutoIncrement
	}).(pulumi.BoolOutput)
}

// Column Name.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.ColumnName
	}).(pulumi.StringOutput)
}

// current ColumnSize.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ColumnSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.ColumnSize
	}).(pulumi.StringOutput)
}

// current Column DecimalDigits.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) DecimalDigits() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.DecimalDigits
	}).(pulumi.StringOutput)
}

// Database table default parameters.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.DefaultValue
	}).(pulumi.StringOutput)
}

// Database table extra fields.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) ExtraInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.ExtraInfo
	}).(pulumi.StringOutput)
}

// The key name of the message.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.JsonKey
	}).(pulumi.StringOutput)
}

// Resource Type.
func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput() GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) ToGetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping {
		return vs[0].([]GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMapping)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput)
}

type GetDatahubTaskTaskListTargetResourceScfParam struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize int `pulumi:"batchSize"`
	// SCF function name.
	FunctionName string `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries int `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace string `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier string `pulumi:"qualifier"`
}

// GetDatahubTaskTaskListTargetResourceScfParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceScfParamArgs and GetDatahubTaskTaskListTargetResourceScfParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceScfParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceScfParamArgs{...}
type GetDatahubTaskTaskListTargetResourceScfParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceScfParamOutput() GetDatahubTaskTaskListTargetResourceScfParamOutput
	ToGetDatahubTaskTaskListTargetResourceScfParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceScfParamOutput
}

type GetDatahubTaskTaskListTargetResourceScfParamArgs struct {
	// The maximum number of messages sent in each batch, the default is 1000.
	BatchSize pulumi.IntInput `pulumi:"batchSize"`
	// SCF function name.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The number of retries after the SCF call fails, the default is 5.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// SCF cloud function namespace, the default is default.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// SCF cloud function version and alias, the default is DEFAULT.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
}

func (GetDatahubTaskTaskListTargetResourceScfParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceScfParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceScfParamArgs) ToGetDatahubTaskTaskListTargetResourceScfParamOutput() GetDatahubTaskTaskListTargetResourceScfParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceScfParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceScfParamArgs) ToGetDatahubTaskTaskListTargetResourceScfParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceScfParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceScfParamOutput)
}

// GetDatahubTaskTaskListTargetResourceScfParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceScfParamArray and GetDatahubTaskTaskListTargetResourceScfParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceScfParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceScfParamArray{ GetDatahubTaskTaskListTargetResourceScfParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceScfParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutput() GetDatahubTaskTaskListTargetResourceScfParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceScfParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceScfParamArray []GetDatahubTaskTaskListTargetResourceScfParamInput

func (GetDatahubTaskTaskListTargetResourceScfParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceScfParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceScfParamArray) ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutput() GetDatahubTaskTaskListTargetResourceScfParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceScfParamArray) ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceScfParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceScfParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceScfParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceScfParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceScfParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) ToGetDatahubTaskTaskListTargetResourceScfParamOutput() GetDatahubTaskTaskListTargetResourceScfParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) ToGetDatahubTaskTaskListTargetResourceScfParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceScfParamOutput {
	return o
}

// The maximum number of messages sent in each batch, the default is 1000.
func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceScfParam) int { return v.BatchSize }).(pulumi.IntOutput)
}

// SCF function name.
func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceScfParam) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The number of retries after the SCF call fails, the default is 5.
func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceScfParam) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// SCF cloud function namespace, the default is default.
func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceScfParam) string { return v.Namespace }).(pulumi.StringOutput)
}

// SCF cloud function version and alias, the default is DEFAULT.
func (o GetDatahubTaskTaskListTargetResourceScfParamOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceScfParam) string { return v.Qualifier }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceScfParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceScfParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceScfParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceScfParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutput() GetDatahubTaskTaskListTargetResourceScfParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceScfParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceScfParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceScfParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceScfParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceScfParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceScfParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceScfParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceScfParamOutput)
}

type GetDatahubTaskTaskListTargetResourceSqlServerParam struct {
	// SQLServer database name.
	Database string `pulumi:"database"`
	// Resource.
	Resource string `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode string `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table string `pulumi:"table"`
}

// GetDatahubTaskTaskListTargetResourceSqlServerParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceSqlServerParamArgs and GetDatahubTaskTaskListTargetResourceSqlServerParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceSqlServerParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceSqlServerParamArgs{...}
type GetDatahubTaskTaskListTargetResourceSqlServerParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutput() GetDatahubTaskTaskListTargetResourceSqlServerParamOutput
	ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceSqlServerParamOutput
}

type GetDatahubTaskTaskListTargetResourceSqlServerParamArgs struct {
	// SQLServer database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// schema_only|initial default initial.
	SnapshotMode pulumi.StringInput `pulumi:"snapshotMode"`
	// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatahubTaskTaskListTargetResourceSqlServerParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceSqlServerParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceSqlServerParamArgs) ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutput() GetDatahubTaskTaskListTargetResourceSqlServerParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceSqlServerParamArgs) ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceSqlServerParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceSqlServerParamOutput)
}

// GetDatahubTaskTaskListTargetResourceSqlServerParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceSqlServerParamArray and GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceSqlServerParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceSqlServerParamArray{ GetDatahubTaskTaskListTargetResourceSqlServerParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceSqlServerParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput() GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceSqlServerParamArray []GetDatahubTaskTaskListTargetResourceSqlServerParamInput

func (GetDatahubTaskTaskListTargetResourceSqlServerParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceSqlServerParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceSqlServerParamArray) ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput() GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceSqlServerParamArray) ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceSqlServerParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceSqlServerParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutput() GetDatahubTaskTaskListTargetResourceSqlServerParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) ToGetDatahubTaskTaskListTargetResourceSqlServerParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceSqlServerParamOutput {
	return o
}

// SQLServer database name.
func (o GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceSqlServerParam) string { return v.Database }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceSqlServerParam) string { return v.Resource }).(pulumi.StringOutput)
}

// schema_only|initial default initial.
func (o GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) SnapshotMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceSqlServerParam) string { return v.SnapshotMode }).(pulumi.StringOutput)
}

// SQLServer table, is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
func (o GetDatahubTaskTaskListTargetResourceSqlServerParamOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceSqlServerParam) string { return v.Table }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceSqlServerParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput() GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceSqlServerParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceSqlServerParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceSqlServerParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceSqlServerParamOutput)
}

type GetDatahubTaskTaskListTargetResourceTdwParam struct {
	// Tdw bid.
	Bid string `pulumi:"bid"`
	// default true.
	IsDomestic bool `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost string `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort int `pulumi:"tdwPort"`
	// Tdw tid.
	Tid string `pulumi:"tid"`
}

// GetDatahubTaskTaskListTargetResourceTdwParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceTdwParamArgs and GetDatahubTaskTaskListTargetResourceTdwParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceTdwParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceTdwParamArgs{...}
type GetDatahubTaskTaskListTargetResourceTdwParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceTdwParamOutput() GetDatahubTaskTaskListTargetResourceTdwParamOutput
	ToGetDatahubTaskTaskListTargetResourceTdwParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceTdwParamOutput
}

type GetDatahubTaskTaskListTargetResourceTdwParamArgs struct {
	// Tdw bid.
	Bid pulumi.StringInput `pulumi:"bid"`
	// default true.
	IsDomestic pulumi.BoolInput `pulumi:"isDomestic"`
	// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
	TdwHost pulumi.StringInput `pulumi:"tdwHost"`
	// TDW port, default 8099.
	TdwPort pulumi.IntInput `pulumi:"tdwPort"`
	// Tdw tid.
	Tid pulumi.StringInput `pulumi:"tid"`
}

func (GetDatahubTaskTaskListTargetResourceTdwParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTdwParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceTdwParamArgs) ToGetDatahubTaskTaskListTargetResourceTdwParamOutput() GetDatahubTaskTaskListTargetResourceTdwParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceTdwParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceTdwParamArgs) ToGetDatahubTaskTaskListTargetResourceTdwParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTdwParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceTdwParamOutput)
}

// GetDatahubTaskTaskListTargetResourceTdwParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceTdwParamArray and GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceTdwParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceTdwParamArray{ GetDatahubTaskTaskListTargetResourceTdwParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceTdwParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutput() GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceTdwParamArray []GetDatahubTaskTaskListTargetResourceTdwParamInput

func (GetDatahubTaskTaskListTargetResourceTdwParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceTdwParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceTdwParamArray) ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutput() GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceTdwParamArray) ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceTdwParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceTdwParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTdwParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) ToGetDatahubTaskTaskListTargetResourceTdwParamOutput() GetDatahubTaskTaskListTargetResourceTdwParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) ToGetDatahubTaskTaskListTargetResourceTdwParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTdwParamOutput {
	return o
}

// Tdw bid.
func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) Bid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTdwParam) string { return v.Bid }).(pulumi.StringOutput)
}

// default true.
func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) IsDomestic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTdwParam) bool { return v.IsDomestic }).(pulumi.BoolOutput)
}

// TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) TdwHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTdwParam) string { return v.TdwHost }).(pulumi.StringOutput)
}

// TDW port, default 8099.
func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) TdwPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTdwParam) int { return v.TdwPort }).(pulumi.IntOutput)
}

// Tdw tid.
func (o GetDatahubTaskTaskListTargetResourceTdwParamOutput) Tid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTdwParam) string { return v.Tid }).(pulumi.StringOutput)
}

type GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceTdwParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutput() GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceTdwParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceTdwParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceTdwParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceTdwParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceTdwParamOutput)
}

type GetDatahubTaskTaskListTargetResourceTopicParam struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType string `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple int `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType string `pulumi:"offsetType"`
	// Resource.
	Resource string `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime int `pulumi:"startTime"`
	// Topic TopicId.
	TopicId string `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic bool `pulumi:"useAutoCreateTopic"`
}

// GetDatahubTaskTaskListTargetResourceTopicParamInput is an input type that accepts GetDatahubTaskTaskListTargetResourceTopicParamArgs and GetDatahubTaskTaskListTargetResourceTopicParamOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceTopicParamInput` via:
//
//	GetDatahubTaskTaskListTargetResourceTopicParamArgs{...}
type GetDatahubTaskTaskListTargetResourceTopicParamInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceTopicParamOutput() GetDatahubTaskTaskListTargetResourceTopicParamOutput
	ToGetDatahubTaskTaskListTargetResourceTopicParamOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceTopicParamOutput
}

type GetDatahubTaskTaskListTargetResourceTopicParamArgs struct {
	// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
	MsgMultiple pulumi.IntInput `pulumi:"msgMultiple"`
	// Offset type, initial position earliest, latest position latest, time point position timestamp.
	OffsetType pulumi.StringInput `pulumi:"offsetType"`
	// Resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Topic TopicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
	UseAutoCreateTopic pulumi.BoolInput `pulumi:"useAutoCreateTopic"`
}

func (GetDatahubTaskTaskListTargetResourceTopicParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceTopicParamArgs) ToGetDatahubTaskTaskListTargetResourceTopicParamOutput() GetDatahubTaskTaskListTargetResourceTopicParamOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceTopicParamOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceTopicParamArgs) ToGetDatahubTaskTaskListTargetResourceTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTopicParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceTopicParamOutput)
}

// GetDatahubTaskTaskListTargetResourceTopicParamArrayInput is an input type that accepts GetDatahubTaskTaskListTargetResourceTopicParamArray and GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput values.
// You can construct a concrete instance of `GetDatahubTaskTaskListTargetResourceTopicParamArrayInput` via:
//
//	GetDatahubTaskTaskListTargetResourceTopicParamArray{ GetDatahubTaskTaskListTargetResourceTopicParamArgs{...} }
type GetDatahubTaskTaskListTargetResourceTopicParamArrayInput interface {
	pulumi.Input

	ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutput() GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput
	ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutputWithContext(context.Context) GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput
}

type GetDatahubTaskTaskListTargetResourceTopicParamArray []GetDatahubTaskTaskListTargetResourceTopicParamInput

func (GetDatahubTaskTaskListTargetResourceTopicParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceTopicParam)(nil)).Elem()
}

func (i GetDatahubTaskTaskListTargetResourceTopicParamArray) ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutput() GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput {
	return i.ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutputWithContext(context.Background())
}

func (i GetDatahubTaskTaskListTargetResourceTopicParamArray) ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput)
}

type GetDatahubTaskTaskListTargetResourceTopicParamOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceTopicParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) ToGetDatahubTaskTaskListTargetResourceTopicParamOutput() GetDatahubTaskTaskListTargetResourceTopicParamOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) ToGetDatahubTaskTaskListTargetResourceTopicParamOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTopicParamOutput {
	return o
}

// Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) string { return v.CompressionType }).(pulumi.StringOutput)
}

// 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) MsgMultiple() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) int { return v.MsgMultiple }).(pulumi.IntOutput)
}

// Offset type, initial position earliest, latest position latest, time point position timestamp.
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) OffsetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) string { return v.OffsetType }).(pulumi.StringOutput)
}

// Resource.
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) string { return v.Resource }).(pulumi.StringOutput)
}

// It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) int { return v.StartTime }).(pulumi.IntOutput)
}

// Topic TopicId.
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) string { return v.TopicId }).(pulumi.StringOutput)
}

// whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
func (o GetDatahubTaskTaskListTargetResourceTopicParamOutput) UseAutoCreateTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatahubTaskTaskListTargetResourceTopicParam) bool { return v.UseAutoCreateTopic }).(pulumi.BoolOutput)
}

type GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTaskTaskListTargetResourceTopicParam)(nil)).Elem()
}

func (o GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutput() GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput) ToGetDatahubTaskTaskListTargetResourceTopicParamArrayOutputWithContext(ctx context.Context) GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput {
	return o
}

func (o GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput) Index(i pulumi.IntInput) GetDatahubTaskTaskListTargetResourceTopicParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTaskTaskListTargetResourceTopicParam {
		return vs[0].([]GetDatahubTaskTaskListTargetResourceTopicParam)[vs[1].(int)]
	}).(GetDatahubTaskTaskListTargetResourceTopicParamOutput)
}

type GetDatahubTopicTopicList struct {
	// name.
	Name string `pulumi:"name"`
	// Remark.
	Note string `pulumi:"note"`
	// number of partitions.
	PartitionNum int `pulumi:"partitionNum"`
	// Expiration.
	RetentionMs int `pulumi:"retentionMs"`
	// Status, 1 in use, 2 in deletion.
	Status int `pulumi:"status"`
	// Topic Id.
	TopicId string `pulumi:"topicId"`
	// Topic name.
	TopicName string `pulumi:"topicName"`
}

// GetDatahubTopicTopicListInput is an input type that accepts GetDatahubTopicTopicListArgs and GetDatahubTopicTopicListOutput values.
// You can construct a concrete instance of `GetDatahubTopicTopicListInput` via:
//
//	GetDatahubTopicTopicListArgs{...}
type GetDatahubTopicTopicListInput interface {
	pulumi.Input

	ToGetDatahubTopicTopicListOutput() GetDatahubTopicTopicListOutput
	ToGetDatahubTopicTopicListOutputWithContext(context.Context) GetDatahubTopicTopicListOutput
}

type GetDatahubTopicTopicListArgs struct {
	// name.
	Name pulumi.StringInput `pulumi:"name"`
	// Remark.
	Note pulumi.StringInput `pulumi:"note"`
	// number of partitions.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Expiration.
	RetentionMs pulumi.IntInput `pulumi:"retentionMs"`
	// Status, 1 in use, 2 in deletion.
	Status pulumi.IntInput `pulumi:"status"`
	// Topic Id.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// Topic name.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (GetDatahubTopicTopicListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTopicTopicList)(nil)).Elem()
}

func (i GetDatahubTopicTopicListArgs) ToGetDatahubTopicTopicListOutput() GetDatahubTopicTopicListOutput {
	return i.ToGetDatahubTopicTopicListOutputWithContext(context.Background())
}

func (i GetDatahubTopicTopicListArgs) ToGetDatahubTopicTopicListOutputWithContext(ctx context.Context) GetDatahubTopicTopicListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTopicTopicListOutput)
}

// GetDatahubTopicTopicListArrayInput is an input type that accepts GetDatahubTopicTopicListArray and GetDatahubTopicTopicListArrayOutput values.
// You can construct a concrete instance of `GetDatahubTopicTopicListArrayInput` via:
//
//	GetDatahubTopicTopicListArray{ GetDatahubTopicTopicListArgs{...} }
type GetDatahubTopicTopicListArrayInput interface {
	pulumi.Input

	ToGetDatahubTopicTopicListArrayOutput() GetDatahubTopicTopicListArrayOutput
	ToGetDatahubTopicTopicListArrayOutputWithContext(context.Context) GetDatahubTopicTopicListArrayOutput
}

type GetDatahubTopicTopicListArray []GetDatahubTopicTopicListInput

func (GetDatahubTopicTopicListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTopicTopicList)(nil)).Elem()
}

func (i GetDatahubTopicTopicListArray) ToGetDatahubTopicTopicListArrayOutput() GetDatahubTopicTopicListArrayOutput {
	return i.ToGetDatahubTopicTopicListArrayOutputWithContext(context.Background())
}

func (i GetDatahubTopicTopicListArray) ToGetDatahubTopicTopicListArrayOutputWithContext(ctx context.Context) GetDatahubTopicTopicListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatahubTopicTopicListArrayOutput)
}

type GetDatahubTopicTopicListOutput struct{ *pulumi.OutputState }

func (GetDatahubTopicTopicListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatahubTopicTopicList)(nil)).Elem()
}

func (o GetDatahubTopicTopicListOutput) ToGetDatahubTopicTopicListOutput() GetDatahubTopicTopicListOutput {
	return o
}

func (o GetDatahubTopicTopicListOutput) ToGetDatahubTopicTopicListOutputWithContext(ctx context.Context) GetDatahubTopicTopicListOutput {
	return o
}

// name.
func (o GetDatahubTopicTopicListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) string { return v.Name }).(pulumi.StringOutput)
}

// Remark.
func (o GetDatahubTopicTopicListOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) string { return v.Note }).(pulumi.StringOutput)
}

// number of partitions.
func (o GetDatahubTopicTopicListOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Expiration.
func (o GetDatahubTopicTopicListOutput) RetentionMs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) int { return v.RetentionMs }).(pulumi.IntOutput)
}

// Status, 1 in use, 2 in deletion.
func (o GetDatahubTopicTopicListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) int { return v.Status }).(pulumi.IntOutput)
}

// Topic Id.
func (o GetDatahubTopicTopicListOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) string { return v.TopicId }).(pulumi.StringOutput)
}

// Topic name.
func (o GetDatahubTopicTopicListOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatahubTopicTopicList) string { return v.TopicName }).(pulumi.StringOutput)
}

type GetDatahubTopicTopicListArrayOutput struct{ *pulumi.OutputState }

func (GetDatahubTopicTopicListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatahubTopicTopicList)(nil)).Elem()
}

func (o GetDatahubTopicTopicListArrayOutput) ToGetDatahubTopicTopicListArrayOutput() GetDatahubTopicTopicListArrayOutput {
	return o
}

func (o GetDatahubTopicTopicListArrayOutput) ToGetDatahubTopicTopicListArrayOutputWithContext(ctx context.Context) GetDatahubTopicTopicListArrayOutput {
	return o
}

func (o GetDatahubTopicTopicListArrayOutput) Index(i pulumi.IntInput) GetDatahubTopicTopicListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatahubTopicTopicList {
		return vs[0].([]GetDatahubTopicTopicList)[vs[1].(int)]
	}).(GetDatahubTopicTopicListOutput)
}

type GetGroupGroupList struct {
	// groupId.
	Group string `pulumi:"group"`
	// The protocol used by this group.
	Protocol string `pulumi:"protocol"`
}

// GetGroupGroupListInput is an input type that accepts GetGroupGroupListArgs and GetGroupGroupListOutput values.
// You can construct a concrete instance of `GetGroupGroupListInput` via:
//
//	GetGroupGroupListArgs{...}
type GetGroupGroupListInput interface {
	pulumi.Input

	ToGetGroupGroupListOutput() GetGroupGroupListOutput
	ToGetGroupGroupListOutputWithContext(context.Context) GetGroupGroupListOutput
}

type GetGroupGroupListArgs struct {
	// groupId.
	Group pulumi.StringInput `pulumi:"group"`
	// The protocol used by this group.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetGroupGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupGroupList)(nil)).Elem()
}

func (i GetGroupGroupListArgs) ToGetGroupGroupListOutput() GetGroupGroupListOutput {
	return i.ToGetGroupGroupListOutputWithContext(context.Background())
}

func (i GetGroupGroupListArgs) ToGetGroupGroupListOutputWithContext(ctx context.Context) GetGroupGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupGroupListOutput)
}

// GetGroupGroupListArrayInput is an input type that accepts GetGroupGroupListArray and GetGroupGroupListArrayOutput values.
// You can construct a concrete instance of `GetGroupGroupListArrayInput` via:
//
//	GetGroupGroupListArray{ GetGroupGroupListArgs{...} }
type GetGroupGroupListArrayInput interface {
	pulumi.Input

	ToGetGroupGroupListArrayOutput() GetGroupGroupListArrayOutput
	ToGetGroupGroupListArrayOutputWithContext(context.Context) GetGroupGroupListArrayOutput
}

type GetGroupGroupListArray []GetGroupGroupListInput

func (GetGroupGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupGroupList)(nil)).Elem()
}

func (i GetGroupGroupListArray) ToGetGroupGroupListArrayOutput() GetGroupGroupListArrayOutput {
	return i.ToGetGroupGroupListArrayOutputWithContext(context.Background())
}

func (i GetGroupGroupListArray) ToGetGroupGroupListArrayOutputWithContext(ctx context.Context) GetGroupGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupGroupListArrayOutput)
}

type GetGroupGroupListOutput struct{ *pulumi.OutputState }

func (GetGroupGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupGroupList)(nil)).Elem()
}

func (o GetGroupGroupListOutput) ToGetGroupGroupListOutput() GetGroupGroupListOutput {
	return o
}

func (o GetGroupGroupListOutput) ToGetGroupGroupListOutputWithContext(ctx context.Context) GetGroupGroupListOutput {
	return o
}

// groupId.
func (o GetGroupGroupListOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupGroupList) string { return v.Group }).(pulumi.StringOutput)
}

// The protocol used by this group.
func (o GetGroupGroupListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupGroupList) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetGroupGroupListArrayOutput struct{ *pulumi.OutputState }

func (GetGroupGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupGroupList)(nil)).Elem()
}

func (o GetGroupGroupListArrayOutput) ToGetGroupGroupListArrayOutput() GetGroupGroupListArrayOutput {
	return o
}

func (o GetGroupGroupListArrayOutput) ToGetGroupGroupListArrayOutputWithContext(ctx context.Context) GetGroupGroupListArrayOutput {
	return o
}

func (o GetGroupGroupListArrayOutput) Index(i pulumi.IntInput) GetGroupGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupGroupList {
		return vs[0].([]GetGroupGroupList)[vs[1].(int)]
	}).(GetGroupGroupListOutput)
}

type GetGroupInfoResult struct {
	// Error code, normally 0.
	ErrorCode string `pulumi:"errorCode"`
	// Kafka consumer group.
	Group string `pulumi:"group"`
	// This array contains information only if state is Stable and protocolType is consumer.
	Members []GetGroupInfoResultMember `pulumi:"members"`
	// Common consumer partition allocation algorithms are as follows (the default option for Kafka consumer SDK is range)  range|roundrobin|sticky.
	Protocol string `pulumi:"protocol"`
	// The protocol type selected by the consumption group is normally the consumer, but some systems use their own protocol, such as kafka-connect, which uses connect. Only the standard consumer protocol, this interface knows the format of the specific allocation method, and can analyze the specific partition allocation.
	ProtocolType string `pulumi:"protocolType"`
	// Group state description (commonly Empty, Stable, and Dead states): Dead: The consumption group does not exist Empty: The consumption group does not currently have any consumer subscriptions PreparingRebalance: The consumption group is in the rebalance state CompletingRebalance: The consumption group is in the rebalance state Stable: Each consumer in the consumption group has joined and is in a stable state.
	State string `pulumi:"state"`
}

// GetGroupInfoResultInput is an input type that accepts GetGroupInfoResultArgs and GetGroupInfoResultOutput values.
// You can construct a concrete instance of `GetGroupInfoResultInput` via:
//
//	GetGroupInfoResultArgs{...}
type GetGroupInfoResultInput interface {
	pulumi.Input

	ToGetGroupInfoResultOutput() GetGroupInfoResultOutput
	ToGetGroupInfoResultOutputWithContext(context.Context) GetGroupInfoResultOutput
}

type GetGroupInfoResultArgs struct {
	// Error code, normally 0.
	ErrorCode pulumi.StringInput `pulumi:"errorCode"`
	// Kafka consumer group.
	Group pulumi.StringInput `pulumi:"group"`
	// This array contains information only if state is Stable and protocolType is consumer.
	Members GetGroupInfoResultMemberArrayInput `pulumi:"members"`
	// Common consumer partition allocation algorithms are as follows (the default option for Kafka consumer SDK is range)  range|roundrobin|sticky.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The protocol type selected by the consumption group is normally the consumer, but some systems use their own protocol, such as kafka-connect, which uses connect. Only the standard consumer protocol, this interface knows the format of the specific allocation method, and can analyze the specific partition allocation.
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// Group state description (commonly Empty, Stable, and Dead states): Dead: The consumption group does not exist Empty: The consumption group does not currently have any consumer subscriptions PreparingRebalance: The consumption group is in the rebalance state CompletingRebalance: The consumption group is in the rebalance state Stable: Each consumer in the consumption group has joined and is in a stable state.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetGroupInfoResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResult)(nil)).Elem()
}

func (i GetGroupInfoResultArgs) ToGetGroupInfoResultOutput() GetGroupInfoResultOutput {
	return i.ToGetGroupInfoResultOutputWithContext(context.Background())
}

func (i GetGroupInfoResultArgs) ToGetGroupInfoResultOutputWithContext(ctx context.Context) GetGroupInfoResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultOutput)
}

// GetGroupInfoResultArrayInput is an input type that accepts GetGroupInfoResultArray and GetGroupInfoResultArrayOutput values.
// You can construct a concrete instance of `GetGroupInfoResultArrayInput` via:
//
//	GetGroupInfoResultArray{ GetGroupInfoResultArgs{...} }
type GetGroupInfoResultArrayInput interface {
	pulumi.Input

	ToGetGroupInfoResultArrayOutput() GetGroupInfoResultArrayOutput
	ToGetGroupInfoResultArrayOutputWithContext(context.Context) GetGroupInfoResultArrayOutput
}

type GetGroupInfoResultArray []GetGroupInfoResultInput

func (GetGroupInfoResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResult)(nil)).Elem()
}

func (i GetGroupInfoResultArray) ToGetGroupInfoResultArrayOutput() GetGroupInfoResultArrayOutput {
	return i.ToGetGroupInfoResultArrayOutputWithContext(context.Background())
}

func (i GetGroupInfoResultArray) ToGetGroupInfoResultArrayOutputWithContext(ctx context.Context) GetGroupInfoResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultArrayOutput)
}

type GetGroupInfoResultOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResult)(nil)).Elem()
}

func (o GetGroupInfoResultOutput) ToGetGroupInfoResultOutput() GetGroupInfoResultOutput {
	return o
}

func (o GetGroupInfoResultOutput) ToGetGroupInfoResultOutputWithContext(ctx context.Context) GetGroupInfoResultOutput {
	return o
}

// Error code, normally 0.
func (o GetGroupInfoResultOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResult) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// Kafka consumer group.
func (o GetGroupInfoResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResult) string { return v.Group }).(pulumi.StringOutput)
}

// This array contains information only if state is Stable and protocolType is consumer.
func (o GetGroupInfoResultOutput) Members() GetGroupInfoResultMemberArrayOutput {
	return o.ApplyT(func(v GetGroupInfoResult) []GetGroupInfoResultMember { return v.Members }).(GetGroupInfoResultMemberArrayOutput)
}

// Common consumer partition allocation algorithms are as follows (the default option for Kafka consumer SDK is range)  range|roundrobin|sticky.
func (o GetGroupInfoResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The protocol type selected by the consumption group is normally the consumer, but some systems use their own protocol, such as kafka-connect, which uses connect. Only the standard consumer protocol, this interface knows the format of the specific allocation method, and can analyze the specific partition allocation.
func (o GetGroupInfoResultOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResult) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// Group state description (commonly Empty, Stable, and Dead states): Dead: The consumption group does not exist Empty: The consumption group does not currently have any consumer subscriptions PreparingRebalance: The consumption group is in the rebalance state CompletingRebalance: The consumption group is in the rebalance state Stable: Each consumer in the consumption group has joined and is in a stable state.
func (o GetGroupInfoResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResult) string { return v.State }).(pulumi.StringOutput)
}

type GetGroupInfoResultArrayOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResult)(nil)).Elem()
}

func (o GetGroupInfoResultArrayOutput) ToGetGroupInfoResultArrayOutput() GetGroupInfoResultArrayOutput {
	return o
}

func (o GetGroupInfoResultArrayOutput) ToGetGroupInfoResultArrayOutputWithContext(ctx context.Context) GetGroupInfoResultArrayOutput {
	return o
}

func (o GetGroupInfoResultArrayOutput) Index(i pulumi.IntInput) GetGroupInfoResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupInfoResult {
		return vs[0].([]GetGroupInfoResult)[vs[1].(int)]
	}).(GetGroupInfoResultOutput)
}

type GetGroupInfoResultMember struct {
	// Stores the partition information assigned to the consumer.
	Assignments []GetGroupInfoResultMemberAssignment `pulumi:"assignments"`
	// Generally store the customer&#39;s IP address.
	ClientHost string `pulumi:"clientHost"`
	// The client.id information set by the client consumer SDK itself.
	ClientId string `pulumi:"clientId"`
	// ID that the coordinator generated for consumer.
	MemberId string `pulumi:"memberId"`
}

// GetGroupInfoResultMemberInput is an input type that accepts GetGroupInfoResultMemberArgs and GetGroupInfoResultMemberOutput values.
// You can construct a concrete instance of `GetGroupInfoResultMemberInput` via:
//
//	GetGroupInfoResultMemberArgs{...}
type GetGroupInfoResultMemberInput interface {
	pulumi.Input

	ToGetGroupInfoResultMemberOutput() GetGroupInfoResultMemberOutput
	ToGetGroupInfoResultMemberOutputWithContext(context.Context) GetGroupInfoResultMemberOutput
}

type GetGroupInfoResultMemberArgs struct {
	// Stores the partition information assigned to the consumer.
	Assignments GetGroupInfoResultMemberAssignmentArrayInput `pulumi:"assignments"`
	// Generally store the customer&#39;s IP address.
	ClientHost pulumi.StringInput `pulumi:"clientHost"`
	// The client.id information set by the client consumer SDK itself.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// ID that the coordinator generated for consumer.
	MemberId pulumi.StringInput `pulumi:"memberId"`
}

func (GetGroupInfoResultMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResultMember)(nil)).Elem()
}

func (i GetGroupInfoResultMemberArgs) ToGetGroupInfoResultMemberOutput() GetGroupInfoResultMemberOutput {
	return i.ToGetGroupInfoResultMemberOutputWithContext(context.Background())
}

func (i GetGroupInfoResultMemberArgs) ToGetGroupInfoResultMemberOutputWithContext(ctx context.Context) GetGroupInfoResultMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultMemberOutput)
}

// GetGroupInfoResultMemberArrayInput is an input type that accepts GetGroupInfoResultMemberArray and GetGroupInfoResultMemberArrayOutput values.
// You can construct a concrete instance of `GetGroupInfoResultMemberArrayInput` via:
//
//	GetGroupInfoResultMemberArray{ GetGroupInfoResultMemberArgs{...} }
type GetGroupInfoResultMemberArrayInput interface {
	pulumi.Input

	ToGetGroupInfoResultMemberArrayOutput() GetGroupInfoResultMemberArrayOutput
	ToGetGroupInfoResultMemberArrayOutputWithContext(context.Context) GetGroupInfoResultMemberArrayOutput
}

type GetGroupInfoResultMemberArray []GetGroupInfoResultMemberInput

func (GetGroupInfoResultMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResultMember)(nil)).Elem()
}

func (i GetGroupInfoResultMemberArray) ToGetGroupInfoResultMemberArrayOutput() GetGroupInfoResultMemberArrayOutput {
	return i.ToGetGroupInfoResultMemberArrayOutputWithContext(context.Background())
}

func (i GetGroupInfoResultMemberArray) ToGetGroupInfoResultMemberArrayOutputWithContext(ctx context.Context) GetGroupInfoResultMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultMemberArrayOutput)
}

type GetGroupInfoResultMemberOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResultMember)(nil)).Elem()
}

func (o GetGroupInfoResultMemberOutput) ToGetGroupInfoResultMemberOutput() GetGroupInfoResultMemberOutput {
	return o
}

func (o GetGroupInfoResultMemberOutput) ToGetGroupInfoResultMemberOutputWithContext(ctx context.Context) GetGroupInfoResultMemberOutput {
	return o
}

// Stores the partition information assigned to the consumer.
func (o GetGroupInfoResultMemberOutput) Assignments() GetGroupInfoResultMemberAssignmentArrayOutput {
	return o.ApplyT(func(v GetGroupInfoResultMember) []GetGroupInfoResultMemberAssignment { return v.Assignments }).(GetGroupInfoResultMemberAssignmentArrayOutput)
}

// Generally store the customer&#39;s IP address.
func (o GetGroupInfoResultMemberOutput) ClientHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResultMember) string { return v.ClientHost }).(pulumi.StringOutput)
}

// The client.id information set by the client consumer SDK itself.
func (o GetGroupInfoResultMemberOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResultMember) string { return v.ClientId }).(pulumi.StringOutput)
}

// ID that the coordinator generated for consumer.
func (o GetGroupInfoResultMemberOutput) MemberId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResultMember) string { return v.MemberId }).(pulumi.StringOutput)
}

type GetGroupInfoResultMemberArrayOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResultMember)(nil)).Elem()
}

func (o GetGroupInfoResultMemberArrayOutput) ToGetGroupInfoResultMemberArrayOutput() GetGroupInfoResultMemberArrayOutput {
	return o
}

func (o GetGroupInfoResultMemberArrayOutput) ToGetGroupInfoResultMemberArrayOutputWithContext(ctx context.Context) GetGroupInfoResultMemberArrayOutput {
	return o
}

func (o GetGroupInfoResultMemberArrayOutput) Index(i pulumi.IntInput) GetGroupInfoResultMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupInfoResultMember {
		return vs[0].([]GetGroupInfoResultMember)[vs[1].(int)]
	}).(GetGroupInfoResultMemberOutput)
}

type GetGroupInfoResultMemberAssignment struct {
	// topic list.
	Topics []GetGroupInfoResultMemberAssignmentTopic `pulumi:"topics"`
	// assignment version information.
	Version int `pulumi:"version"`
}

// GetGroupInfoResultMemberAssignmentInput is an input type that accepts GetGroupInfoResultMemberAssignmentArgs and GetGroupInfoResultMemberAssignmentOutput values.
// You can construct a concrete instance of `GetGroupInfoResultMemberAssignmentInput` via:
//
//	GetGroupInfoResultMemberAssignmentArgs{...}
type GetGroupInfoResultMemberAssignmentInput interface {
	pulumi.Input

	ToGetGroupInfoResultMemberAssignmentOutput() GetGroupInfoResultMemberAssignmentOutput
	ToGetGroupInfoResultMemberAssignmentOutputWithContext(context.Context) GetGroupInfoResultMemberAssignmentOutput
}

type GetGroupInfoResultMemberAssignmentArgs struct {
	// topic list.
	Topics GetGroupInfoResultMemberAssignmentTopicArrayInput `pulumi:"topics"`
	// assignment version information.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetGroupInfoResultMemberAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResultMemberAssignment)(nil)).Elem()
}

func (i GetGroupInfoResultMemberAssignmentArgs) ToGetGroupInfoResultMemberAssignmentOutput() GetGroupInfoResultMemberAssignmentOutput {
	return i.ToGetGroupInfoResultMemberAssignmentOutputWithContext(context.Background())
}

func (i GetGroupInfoResultMemberAssignmentArgs) ToGetGroupInfoResultMemberAssignmentOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultMemberAssignmentOutput)
}

// GetGroupInfoResultMemberAssignmentArrayInput is an input type that accepts GetGroupInfoResultMemberAssignmentArray and GetGroupInfoResultMemberAssignmentArrayOutput values.
// You can construct a concrete instance of `GetGroupInfoResultMemberAssignmentArrayInput` via:
//
//	GetGroupInfoResultMemberAssignmentArray{ GetGroupInfoResultMemberAssignmentArgs{...} }
type GetGroupInfoResultMemberAssignmentArrayInput interface {
	pulumi.Input

	ToGetGroupInfoResultMemberAssignmentArrayOutput() GetGroupInfoResultMemberAssignmentArrayOutput
	ToGetGroupInfoResultMemberAssignmentArrayOutputWithContext(context.Context) GetGroupInfoResultMemberAssignmentArrayOutput
}

type GetGroupInfoResultMemberAssignmentArray []GetGroupInfoResultMemberAssignmentInput

func (GetGroupInfoResultMemberAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResultMemberAssignment)(nil)).Elem()
}

func (i GetGroupInfoResultMemberAssignmentArray) ToGetGroupInfoResultMemberAssignmentArrayOutput() GetGroupInfoResultMemberAssignmentArrayOutput {
	return i.ToGetGroupInfoResultMemberAssignmentArrayOutputWithContext(context.Background())
}

func (i GetGroupInfoResultMemberAssignmentArray) ToGetGroupInfoResultMemberAssignmentArrayOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultMemberAssignmentArrayOutput)
}

type GetGroupInfoResultMemberAssignmentOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultMemberAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResultMemberAssignment)(nil)).Elem()
}

func (o GetGroupInfoResultMemberAssignmentOutput) ToGetGroupInfoResultMemberAssignmentOutput() GetGroupInfoResultMemberAssignmentOutput {
	return o
}

func (o GetGroupInfoResultMemberAssignmentOutput) ToGetGroupInfoResultMemberAssignmentOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentOutput {
	return o
}

// topic list.
func (o GetGroupInfoResultMemberAssignmentOutput) Topics() GetGroupInfoResultMemberAssignmentTopicArrayOutput {
	return o.ApplyT(func(v GetGroupInfoResultMemberAssignment) []GetGroupInfoResultMemberAssignmentTopic { return v.Topics }).(GetGroupInfoResultMemberAssignmentTopicArrayOutput)
}

// assignment version information.
func (o GetGroupInfoResultMemberAssignmentOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupInfoResultMemberAssignment) int { return v.Version }).(pulumi.IntOutput)
}

type GetGroupInfoResultMemberAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultMemberAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResultMemberAssignment)(nil)).Elem()
}

func (o GetGroupInfoResultMemberAssignmentArrayOutput) ToGetGroupInfoResultMemberAssignmentArrayOutput() GetGroupInfoResultMemberAssignmentArrayOutput {
	return o
}

func (o GetGroupInfoResultMemberAssignmentArrayOutput) ToGetGroupInfoResultMemberAssignmentArrayOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentArrayOutput {
	return o
}

func (o GetGroupInfoResultMemberAssignmentArrayOutput) Index(i pulumi.IntInput) GetGroupInfoResultMemberAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupInfoResultMemberAssignment {
		return vs[0].([]GetGroupInfoResultMemberAssignment)[vs[1].(int)]
	}).(GetGroupInfoResultMemberAssignmentOutput)
}

type GetGroupInfoResultMemberAssignmentTopic struct {
	// Allocated partition information.
	Partitions []int `pulumi:"partitions"`
	// Assigned topic name.
	Topic string `pulumi:"topic"`
}

// GetGroupInfoResultMemberAssignmentTopicInput is an input type that accepts GetGroupInfoResultMemberAssignmentTopicArgs and GetGroupInfoResultMemberAssignmentTopicOutput values.
// You can construct a concrete instance of `GetGroupInfoResultMemberAssignmentTopicInput` via:
//
//	GetGroupInfoResultMemberAssignmentTopicArgs{...}
type GetGroupInfoResultMemberAssignmentTopicInput interface {
	pulumi.Input

	ToGetGroupInfoResultMemberAssignmentTopicOutput() GetGroupInfoResultMemberAssignmentTopicOutput
	ToGetGroupInfoResultMemberAssignmentTopicOutputWithContext(context.Context) GetGroupInfoResultMemberAssignmentTopicOutput
}

type GetGroupInfoResultMemberAssignmentTopicArgs struct {
	// Allocated partition information.
	Partitions pulumi.IntArrayInput `pulumi:"partitions"`
	// Assigned topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetGroupInfoResultMemberAssignmentTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResultMemberAssignmentTopic)(nil)).Elem()
}

func (i GetGroupInfoResultMemberAssignmentTopicArgs) ToGetGroupInfoResultMemberAssignmentTopicOutput() GetGroupInfoResultMemberAssignmentTopicOutput {
	return i.ToGetGroupInfoResultMemberAssignmentTopicOutputWithContext(context.Background())
}

func (i GetGroupInfoResultMemberAssignmentTopicArgs) ToGetGroupInfoResultMemberAssignmentTopicOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultMemberAssignmentTopicOutput)
}

// GetGroupInfoResultMemberAssignmentTopicArrayInput is an input type that accepts GetGroupInfoResultMemberAssignmentTopicArray and GetGroupInfoResultMemberAssignmentTopicArrayOutput values.
// You can construct a concrete instance of `GetGroupInfoResultMemberAssignmentTopicArrayInput` via:
//
//	GetGroupInfoResultMemberAssignmentTopicArray{ GetGroupInfoResultMemberAssignmentTopicArgs{...} }
type GetGroupInfoResultMemberAssignmentTopicArrayInput interface {
	pulumi.Input

	ToGetGroupInfoResultMemberAssignmentTopicArrayOutput() GetGroupInfoResultMemberAssignmentTopicArrayOutput
	ToGetGroupInfoResultMemberAssignmentTopicArrayOutputWithContext(context.Context) GetGroupInfoResultMemberAssignmentTopicArrayOutput
}

type GetGroupInfoResultMemberAssignmentTopicArray []GetGroupInfoResultMemberAssignmentTopicInput

func (GetGroupInfoResultMemberAssignmentTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResultMemberAssignmentTopic)(nil)).Elem()
}

func (i GetGroupInfoResultMemberAssignmentTopicArray) ToGetGroupInfoResultMemberAssignmentTopicArrayOutput() GetGroupInfoResultMemberAssignmentTopicArrayOutput {
	return i.ToGetGroupInfoResultMemberAssignmentTopicArrayOutputWithContext(context.Background())
}

func (i GetGroupInfoResultMemberAssignmentTopicArray) ToGetGroupInfoResultMemberAssignmentTopicArrayOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupInfoResultMemberAssignmentTopicArrayOutput)
}

type GetGroupInfoResultMemberAssignmentTopicOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultMemberAssignmentTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupInfoResultMemberAssignmentTopic)(nil)).Elem()
}

func (o GetGroupInfoResultMemberAssignmentTopicOutput) ToGetGroupInfoResultMemberAssignmentTopicOutput() GetGroupInfoResultMemberAssignmentTopicOutput {
	return o
}

func (o GetGroupInfoResultMemberAssignmentTopicOutput) ToGetGroupInfoResultMemberAssignmentTopicOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentTopicOutput {
	return o
}

// Allocated partition information.
func (o GetGroupInfoResultMemberAssignmentTopicOutput) Partitions() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetGroupInfoResultMemberAssignmentTopic) []int { return v.Partitions }).(pulumi.IntArrayOutput)
}

// Assigned topic name.
func (o GetGroupInfoResultMemberAssignmentTopicOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupInfoResultMemberAssignmentTopic) string { return v.Topic }).(pulumi.StringOutput)
}

type GetGroupInfoResultMemberAssignmentTopicArrayOutput struct{ *pulumi.OutputState }

func (GetGroupInfoResultMemberAssignmentTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupInfoResultMemberAssignmentTopic)(nil)).Elem()
}

func (o GetGroupInfoResultMemberAssignmentTopicArrayOutput) ToGetGroupInfoResultMemberAssignmentTopicArrayOutput() GetGroupInfoResultMemberAssignmentTopicArrayOutput {
	return o
}

func (o GetGroupInfoResultMemberAssignmentTopicArrayOutput) ToGetGroupInfoResultMemberAssignmentTopicArrayOutputWithContext(ctx context.Context) GetGroupInfoResultMemberAssignmentTopicArrayOutput {
	return o
}

func (o GetGroupInfoResultMemberAssignmentTopicArrayOutput) Index(i pulumi.IntInput) GetGroupInfoResultMemberAssignmentTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupInfoResultMemberAssignmentTopic {
		return vs[0].([]GetGroupInfoResultMemberAssignmentTopic)[vs[1].(int)]
	}).(GetGroupInfoResultMemberAssignmentTopicOutput)
}

type GetGroupOffsetsTopicList struct {
	// he topic partition array, where each element is a json object.
	Partitions []GetGroupOffsetsTopicListPartition `pulumi:"partitions"`
	// topicName.
	Topic string `pulumi:"topic"`
}

// GetGroupOffsetsTopicListInput is an input type that accepts GetGroupOffsetsTopicListArgs and GetGroupOffsetsTopicListOutput values.
// You can construct a concrete instance of `GetGroupOffsetsTopicListInput` via:
//
//	GetGroupOffsetsTopicListArgs{...}
type GetGroupOffsetsTopicListInput interface {
	pulumi.Input

	ToGetGroupOffsetsTopicListOutput() GetGroupOffsetsTopicListOutput
	ToGetGroupOffsetsTopicListOutputWithContext(context.Context) GetGroupOffsetsTopicListOutput
}

type GetGroupOffsetsTopicListArgs struct {
	// he topic partition array, where each element is a json object.
	Partitions GetGroupOffsetsTopicListPartitionArrayInput `pulumi:"partitions"`
	// topicName.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetGroupOffsetsTopicListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupOffsetsTopicList)(nil)).Elem()
}

func (i GetGroupOffsetsTopicListArgs) ToGetGroupOffsetsTopicListOutput() GetGroupOffsetsTopicListOutput {
	return i.ToGetGroupOffsetsTopicListOutputWithContext(context.Background())
}

func (i GetGroupOffsetsTopicListArgs) ToGetGroupOffsetsTopicListOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupOffsetsTopicListOutput)
}

// GetGroupOffsetsTopicListArrayInput is an input type that accepts GetGroupOffsetsTopicListArray and GetGroupOffsetsTopicListArrayOutput values.
// You can construct a concrete instance of `GetGroupOffsetsTopicListArrayInput` via:
//
//	GetGroupOffsetsTopicListArray{ GetGroupOffsetsTopicListArgs{...} }
type GetGroupOffsetsTopicListArrayInput interface {
	pulumi.Input

	ToGetGroupOffsetsTopicListArrayOutput() GetGroupOffsetsTopicListArrayOutput
	ToGetGroupOffsetsTopicListArrayOutputWithContext(context.Context) GetGroupOffsetsTopicListArrayOutput
}

type GetGroupOffsetsTopicListArray []GetGroupOffsetsTopicListInput

func (GetGroupOffsetsTopicListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupOffsetsTopicList)(nil)).Elem()
}

func (i GetGroupOffsetsTopicListArray) ToGetGroupOffsetsTopicListArrayOutput() GetGroupOffsetsTopicListArrayOutput {
	return i.ToGetGroupOffsetsTopicListArrayOutputWithContext(context.Background())
}

func (i GetGroupOffsetsTopicListArray) ToGetGroupOffsetsTopicListArrayOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupOffsetsTopicListArrayOutput)
}

type GetGroupOffsetsTopicListOutput struct{ *pulumi.OutputState }

func (GetGroupOffsetsTopicListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupOffsetsTopicList)(nil)).Elem()
}

func (o GetGroupOffsetsTopicListOutput) ToGetGroupOffsetsTopicListOutput() GetGroupOffsetsTopicListOutput {
	return o
}

func (o GetGroupOffsetsTopicListOutput) ToGetGroupOffsetsTopicListOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListOutput {
	return o
}

// he topic partition array, where each element is a json object.
func (o GetGroupOffsetsTopicListOutput) Partitions() GetGroupOffsetsTopicListPartitionArrayOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicList) []GetGroupOffsetsTopicListPartition { return v.Partitions }).(GetGroupOffsetsTopicListPartitionArrayOutput)
}

// topicName.
func (o GetGroupOffsetsTopicListOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicList) string { return v.Topic }).(pulumi.StringOutput)
}

type GetGroupOffsetsTopicListArrayOutput struct{ *pulumi.OutputState }

func (GetGroupOffsetsTopicListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupOffsetsTopicList)(nil)).Elem()
}

func (o GetGroupOffsetsTopicListArrayOutput) ToGetGroupOffsetsTopicListArrayOutput() GetGroupOffsetsTopicListArrayOutput {
	return o
}

func (o GetGroupOffsetsTopicListArrayOutput) ToGetGroupOffsetsTopicListArrayOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListArrayOutput {
	return o
}

func (o GetGroupOffsetsTopicListArrayOutput) Index(i pulumi.IntInput) GetGroupOffsetsTopicListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupOffsetsTopicList {
		return vs[0].([]GetGroupOffsetsTopicList)[vs[1].(int)]
	}).(GetGroupOffsetsTopicListOutput)
}

type GetGroupOffsetsTopicListPartition struct {
	// ErrorCode.
	ErrorCode int `pulumi:"errorCode"`
	// The number of unconsumed messages.
	Lag int `pulumi:"lag"`
	// The latest offset of the current partition.
	LogEndOffset int `pulumi:"logEndOffset"`
	// When consumers submit messages, they can pass in metadata for other purposes. Currently, it is usually an empty string.
	Metadata string `pulumi:"metadata"`
	// The offset of the position.
	Offset int `pulumi:"offset"`
	// topic partitionId.
	Partition int `pulumi:"partition"`
}

// GetGroupOffsetsTopicListPartitionInput is an input type that accepts GetGroupOffsetsTopicListPartitionArgs and GetGroupOffsetsTopicListPartitionOutput values.
// You can construct a concrete instance of `GetGroupOffsetsTopicListPartitionInput` via:
//
//	GetGroupOffsetsTopicListPartitionArgs{...}
type GetGroupOffsetsTopicListPartitionInput interface {
	pulumi.Input

	ToGetGroupOffsetsTopicListPartitionOutput() GetGroupOffsetsTopicListPartitionOutput
	ToGetGroupOffsetsTopicListPartitionOutputWithContext(context.Context) GetGroupOffsetsTopicListPartitionOutput
}

type GetGroupOffsetsTopicListPartitionArgs struct {
	// ErrorCode.
	ErrorCode pulumi.IntInput `pulumi:"errorCode"`
	// The number of unconsumed messages.
	Lag pulumi.IntInput `pulumi:"lag"`
	// The latest offset of the current partition.
	LogEndOffset pulumi.IntInput `pulumi:"logEndOffset"`
	// When consumers submit messages, they can pass in metadata for other purposes. Currently, it is usually an empty string.
	Metadata pulumi.StringInput `pulumi:"metadata"`
	// The offset of the position.
	Offset pulumi.IntInput `pulumi:"offset"`
	// topic partitionId.
	Partition pulumi.IntInput `pulumi:"partition"`
}

func (GetGroupOffsetsTopicListPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (i GetGroupOffsetsTopicListPartitionArgs) ToGetGroupOffsetsTopicListPartitionOutput() GetGroupOffsetsTopicListPartitionOutput {
	return i.ToGetGroupOffsetsTopicListPartitionOutputWithContext(context.Background())
}

func (i GetGroupOffsetsTopicListPartitionArgs) ToGetGroupOffsetsTopicListPartitionOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupOffsetsTopicListPartitionOutput)
}

// GetGroupOffsetsTopicListPartitionArrayInput is an input type that accepts GetGroupOffsetsTopicListPartitionArray and GetGroupOffsetsTopicListPartitionArrayOutput values.
// You can construct a concrete instance of `GetGroupOffsetsTopicListPartitionArrayInput` via:
//
//	GetGroupOffsetsTopicListPartitionArray{ GetGroupOffsetsTopicListPartitionArgs{...} }
type GetGroupOffsetsTopicListPartitionArrayInput interface {
	pulumi.Input

	ToGetGroupOffsetsTopicListPartitionArrayOutput() GetGroupOffsetsTopicListPartitionArrayOutput
	ToGetGroupOffsetsTopicListPartitionArrayOutputWithContext(context.Context) GetGroupOffsetsTopicListPartitionArrayOutput
}

type GetGroupOffsetsTopicListPartitionArray []GetGroupOffsetsTopicListPartitionInput

func (GetGroupOffsetsTopicListPartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (i GetGroupOffsetsTopicListPartitionArray) ToGetGroupOffsetsTopicListPartitionArrayOutput() GetGroupOffsetsTopicListPartitionArrayOutput {
	return i.ToGetGroupOffsetsTopicListPartitionArrayOutputWithContext(context.Background())
}

func (i GetGroupOffsetsTopicListPartitionArray) ToGetGroupOffsetsTopicListPartitionArrayOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListPartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupOffsetsTopicListPartitionArrayOutput)
}

type GetGroupOffsetsTopicListPartitionOutput struct{ *pulumi.OutputState }

func (GetGroupOffsetsTopicListPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (o GetGroupOffsetsTopicListPartitionOutput) ToGetGroupOffsetsTopicListPartitionOutput() GetGroupOffsetsTopicListPartitionOutput {
	return o
}

func (o GetGroupOffsetsTopicListPartitionOutput) ToGetGroupOffsetsTopicListPartitionOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListPartitionOutput {
	return o
}

// ErrorCode.
func (o GetGroupOffsetsTopicListPartitionOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicListPartition) int { return v.ErrorCode }).(pulumi.IntOutput)
}

// The number of unconsumed messages.
func (o GetGroupOffsetsTopicListPartitionOutput) Lag() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicListPartition) int { return v.Lag }).(pulumi.IntOutput)
}

// The latest offset of the current partition.
func (o GetGroupOffsetsTopicListPartitionOutput) LogEndOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicListPartition) int { return v.LogEndOffset }).(pulumi.IntOutput)
}

// When consumers submit messages, they can pass in metadata for other purposes. Currently, it is usually an empty string.
func (o GetGroupOffsetsTopicListPartitionOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicListPartition) string { return v.Metadata }).(pulumi.StringOutput)
}

// The offset of the position.
func (o GetGroupOffsetsTopicListPartitionOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicListPartition) int { return v.Offset }).(pulumi.IntOutput)
}

// topic partitionId.
func (o GetGroupOffsetsTopicListPartitionOutput) Partition() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupOffsetsTopicListPartition) int { return v.Partition }).(pulumi.IntOutput)
}

type GetGroupOffsetsTopicListPartitionArrayOutput struct{ *pulumi.OutputState }

func (GetGroupOffsetsTopicListPartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupOffsetsTopicListPartition)(nil)).Elem()
}

func (o GetGroupOffsetsTopicListPartitionArrayOutput) ToGetGroupOffsetsTopicListPartitionArrayOutput() GetGroupOffsetsTopicListPartitionArrayOutput {
	return o
}

func (o GetGroupOffsetsTopicListPartitionArrayOutput) ToGetGroupOffsetsTopicListPartitionArrayOutputWithContext(ctx context.Context) GetGroupOffsetsTopicListPartitionArrayOutput {
	return o
}

func (o GetGroupOffsetsTopicListPartitionArrayOutput) Index(i pulumi.IntInput) GetGroupOffsetsTopicListPartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupOffsetsTopicListPartition {
		return vs[0].([]GetGroupOffsetsTopicListPartition)[vs[1].(int)]
	}).(GetGroupOffsetsTopicListPartitionOutput)
}

type GetInstancesFilter struct {
	// The field that needs to be filtered.
	Name string `pulumi:"name"`
	// The filtered value of the field.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//	GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// The field that needs to be filtered.
	Name pulumi.StringInput `pulumi:"name"`
	// The filtered value of the field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//	GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// The field that needs to be filtered.
func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The filtered value of the field.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesInstanceList struct {
	// Instance bandwidth, in Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The time when the instance was created.
	CreateTime int `pulumi:"createTime"`
	// ckafka sale type. Note: This field may return null, indicating that a valid value could not be retrieved.
	Cvm int `pulumi:"cvm"`
	// The storage size of the instance, in GB.
	DiskSize int `pulumi:"diskSize"`
	// Disk Type. Note: This field may return null, indicating that a valid value could not be retrieved.
	DiskType string `pulumi:"diskType"`
	// The instance expiration time.
	ExpireTime int `pulumi:"expireTime"`
	// Instance status int: 1 indicates health, 2 indicates alarm, and 3 indicates abnormal instance status.
	Healthy int `pulumi:"healthy"`
	// Instance status information.
	HealthyMessage string `pulumi:"healthyMessage"`
	// The instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The instance name.
	InstanceName string `pulumi:"instanceName"`
	// ckafka instance type. Note: This field may return null, indicating that a valid value could not be retrieved.
	InstanceType string `pulumi:"instanceType"`
	// Whether it is an internal customer. A value of 1 indicates an internal customer.
	IsInternal int `pulumi:"isInternal"`
	// The maximum number of Partitions for the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved.
	MaxPartitionNumber int `pulumi:"maxPartitionNumber"`
	// The maximum number of topics in the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved..
	MaxTopicNumber int `pulumi:"maxTopicNumber"`
	// The current number of instances. Note: This field may return null, indicating that a valid value could not be retrieved..
	PartitionNumber int `pulumi:"partitionNumber"`
	// The Internet bandwidth value. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetwork int `pulumi:"publicNetwork"`
	// The type of Internet bandwidth. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetworkChargeType string `pulumi:"publicNetworkChargeType"`
	// Schedule the upgrade configuration time. Note: This field may return null, indicating that a valid value could not be retrieved..
	RebalanceTime string `pulumi:"rebalanceTime"`
	// Whether the instance is renewed, the int enumeration value: 1 indicates auto-renewal, and 2 indicates that it is not automatically renewed.
	RenewFlag int `pulumi:"renewFlag"`
	// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
	Status int `pulumi:"status"`
	// Subnet id.
	SubnetId string `pulumi:"subnetId"`
	// Tag information.
	Tags []GetInstancesInstanceListTag `pulumi:"tags"`
	// The number of topics.
	TopicNum int `pulumi:"topicNum"`
	// Kafka version information. Note: This field may return null, indicating that a valid value could not be retrieved.
	Version string `pulumi:"version"`
	// Virtual IP.
	Vip string `pulumi:"vip"`
	// Virtual IP entities.
	VipList GetInstancesInstanceListVipList `pulumi:"vipList"`
	// VpcId, if empty, indicates that it is the underlying network.
	VpcId string `pulumi:"vpcId"`
	// Virtual PORT.
	Vport string `pulumi:"vport"`
	// Availability Zone ID.
	ZoneId int `pulumi:"zoneId"`
	// Across Availability Zones. Note: This field may return null, indicating that a valid value could not be retrieved.
	ZoneIds []int `pulumi:"zoneIds"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//	GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Instance bandwidth, in Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The time when the instance was created.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// ckafka sale type. Note: This field may return null, indicating that a valid value could not be retrieved.
	Cvm pulumi.IntInput `pulumi:"cvm"`
	// The storage size of the instance, in GB.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Disk Type. Note: This field may return null, indicating that a valid value could not be retrieved.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The instance expiration time.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// Instance status int: 1 indicates health, 2 indicates alarm, and 3 indicates abnormal instance status.
	Healthy pulumi.IntInput `pulumi:"healthy"`
	// Instance status information.
	HealthyMessage pulumi.StringInput `pulumi:"healthyMessage"`
	// The instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The instance name.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// ckafka instance type. Note: This field may return null, indicating that a valid value could not be retrieved.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Whether it is an internal customer. A value of 1 indicates an internal customer.
	IsInternal pulumi.IntInput `pulumi:"isInternal"`
	// The maximum number of Partitions for the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved.
	MaxPartitionNumber pulumi.IntInput `pulumi:"maxPartitionNumber"`
	// The maximum number of topics in the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved..
	MaxTopicNumber pulumi.IntInput `pulumi:"maxTopicNumber"`
	// The current number of instances. Note: This field may return null, indicating that a valid value could not be retrieved..
	PartitionNumber pulumi.IntInput `pulumi:"partitionNumber"`
	// The Internet bandwidth value. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetwork pulumi.IntInput `pulumi:"publicNetwork"`
	// The type of Internet bandwidth. Note: This field may return null, indicating that a valid value could not be retrieved..
	PublicNetworkChargeType pulumi.StringInput `pulumi:"publicNetworkChargeType"`
	// Schedule the upgrade configuration time. Note: This field may return null, indicating that a valid value could not be retrieved..
	RebalanceTime pulumi.StringInput `pulumi:"rebalanceTime"`
	// Whether the instance is renewed, the int enumeration value: 1 indicates auto-renewal, and 2 indicates that it is not automatically renewed.
	RenewFlag pulumi.IntInput `pulumi:"renewFlag"`
	// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
	Status pulumi.IntInput `pulumi:"status"`
	// Subnet id.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tag information.
	Tags GetInstancesInstanceListTagArrayInput `pulumi:"tags"`
	// The number of topics.
	TopicNum pulumi.IntInput `pulumi:"topicNum"`
	// Kafka version information. Note: This field may return null, indicating that a valid value could not be retrieved.
	Version pulumi.StringInput `pulumi:"version"`
	// Virtual IP.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Virtual IP entities.
	VipList GetInstancesInstanceListVipListInput `pulumi:"vipList"`
	// VpcId, if empty, indicates that it is the underlying network.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Virtual PORT.
	Vport pulumi.StringInput `pulumi:"vport"`
	// Availability Zone ID.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
	// Across Availability Zones. Note: This field may return null, indicating that a valid value could not be retrieved.
	ZoneIds pulumi.IntArrayInput `pulumi:"zoneIds"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//	GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Instance bandwidth, in Mbps.
func (o GetInstancesInstanceListOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The time when the instance was created.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.CreateTime }).(pulumi.IntOutput)
}

// ckafka sale type. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) Cvm() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Cvm }).(pulumi.IntOutput)
}

// The storage size of the instance, in GB.
func (o GetInstancesInstanceListOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Disk Type. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.DiskType }).(pulumi.StringOutput)
}

// The instance expiration time.
func (o GetInstancesInstanceListOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// Instance status int: 1 indicates health, 2 indicates alarm, and 3 indicates abnormal instance status.
func (o GetInstancesInstanceListOutput) Healthy() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Healthy }).(pulumi.IntOutput)
}

// Instance status information.
func (o GetInstancesInstanceListOutput) HealthyMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.HealthyMessage }).(pulumi.StringOutput)
}

// The instance ID.
func (o GetInstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The instance name.
func (o GetInstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// ckafka instance type. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Whether it is an internal customer. A value of 1 indicates an internal customer.
func (o GetInstancesInstanceListOutput) IsInternal() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.IsInternal }).(pulumi.IntOutput)
}

// The maximum number of Partitions for the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) MaxPartitionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.MaxPartitionNumber }).(pulumi.IntOutput)
}

// The maximum number of topics in the current specifications. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) MaxTopicNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.MaxTopicNumber }).(pulumi.IntOutput)
}

// The current number of instances. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) PartitionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.PartitionNumber }).(pulumi.IntOutput)
}

// The Internet bandwidth value. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) PublicNetwork() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.PublicNetwork }).(pulumi.IntOutput)
}

// The type of Internet bandwidth. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) PublicNetworkChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.PublicNetworkChargeType }).(pulumi.StringOutput)
}

// Schedule the upgrade configuration time. Note: This field may return null, indicating that a valid value could not be retrieved..
func (o GetInstancesInstanceListOutput) RebalanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.RebalanceTime }).(pulumi.StringOutput)
}

// Whether the instance is renewed, the int enumeration value: 1 indicates auto-renewal, and 2 indicates that it is not automatically renewed.
func (o GetInstancesInstanceListOutput) RenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.RenewFlag }).(pulumi.IntOutput)
}

// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
func (o GetInstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// Subnet id.
func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tag information.
func (o GetInstancesInstanceListOutput) Tags() GetInstancesInstanceListTagArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []GetInstancesInstanceListTag { return v.Tags }).(GetInstancesInstanceListTagArrayOutput)
}

// The number of topics.
func (o GetInstancesInstanceListOutput) TopicNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.TopicNum }).(pulumi.IntOutput)
}

// Kafka version information. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Version }).(pulumi.StringOutput)
}

// Virtual IP.
func (o GetInstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

// Virtual IP entities.
func (o GetInstancesInstanceListOutput) VipList() GetInstancesInstanceListVipListOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) GetInstancesInstanceListVipList { return v.VipList }).(GetInstancesInstanceListVipListOutput)
}

// VpcId, if empty, indicates that it is the underlying network.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// Virtual PORT.
func (o GetInstancesInstanceListOutput) Vport() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vport }).(pulumi.StringOutput)
}

// Availability Zone ID.
func (o GetInstancesInstanceListOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ZoneId }).(pulumi.IntOutput)
}

// Across Availability Zones. Note: This field may return null, indicating that a valid value could not be retrieved.
func (o GetInstancesInstanceListOutput) ZoneIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []int { return v.ZoneIds }).(pulumi.IntArrayOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetInstancesInstanceListTag struct {
	// Matches the tag key value.
	TagKey string `pulumi:"tagKey"`
	// Tag Value.
	TagValue string `pulumi:"tagValue"`
}

// GetInstancesInstanceListTagInput is an input type that accepts GetInstancesInstanceListTagArgs and GetInstancesInstanceListTagOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListTagInput` via:
//
//	GetInstancesInstanceListTagArgs{...}
type GetInstancesInstanceListTagInput interface {
	pulumi.Input

	ToGetInstancesInstanceListTagOutput() GetInstancesInstanceListTagOutput
	ToGetInstancesInstanceListTagOutputWithContext(context.Context) GetInstancesInstanceListTagOutput
}

type GetInstancesInstanceListTagArgs struct {
	// Matches the tag key value.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// Tag Value.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetInstancesInstanceListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListTag)(nil)).Elem()
}

func (i GetInstancesInstanceListTagArgs) ToGetInstancesInstanceListTagOutput() GetInstancesInstanceListTagOutput {
	return i.ToGetInstancesInstanceListTagOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListTagArgs) ToGetInstancesInstanceListTagOutputWithContext(ctx context.Context) GetInstancesInstanceListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListTagOutput)
}

// GetInstancesInstanceListTagArrayInput is an input type that accepts GetInstancesInstanceListTagArray and GetInstancesInstanceListTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListTagArrayInput` via:
//
//	GetInstancesInstanceListTagArray{ GetInstancesInstanceListTagArgs{...} }
type GetInstancesInstanceListTagArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListTagArrayOutput() GetInstancesInstanceListTagArrayOutput
	ToGetInstancesInstanceListTagArrayOutputWithContext(context.Context) GetInstancesInstanceListTagArrayOutput
}

type GetInstancesInstanceListTagArray []GetInstancesInstanceListTagInput

func (GetInstancesInstanceListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListTag)(nil)).Elem()
}

func (i GetInstancesInstanceListTagArray) ToGetInstancesInstanceListTagArrayOutput() GetInstancesInstanceListTagArrayOutput {
	return i.ToGetInstancesInstanceListTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListTagArray) ToGetInstancesInstanceListTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListTagArrayOutput)
}

type GetInstancesInstanceListTagOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListTag)(nil)).Elem()
}

func (o GetInstancesInstanceListTagOutput) ToGetInstancesInstanceListTagOutput() GetInstancesInstanceListTagOutput {
	return o
}

func (o GetInstancesInstanceListTagOutput) ToGetInstancesInstanceListTagOutputWithContext(ctx context.Context) GetInstancesInstanceListTagOutput {
	return o
}

// Matches the tag key value.
func (o GetInstancesInstanceListTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListTag) string { return v.TagKey }).(pulumi.StringOutput)
}

// Tag Value.
func (o GetInstancesInstanceListTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetInstancesInstanceListTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListTag)(nil)).Elem()
}

func (o GetInstancesInstanceListTagArrayOutput) ToGetInstancesInstanceListTagArrayOutput() GetInstancesInstanceListTagArrayOutput {
	return o
}

func (o GetInstancesInstanceListTagArrayOutput) ToGetInstancesInstanceListTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListTagArrayOutput {
	return o
}

func (o GetInstancesInstanceListTagArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceListTag {
		return vs[0].([]GetInstancesInstanceListTag)[vs[1].(int)]
	}).(GetInstancesInstanceListTagOutput)
}

type GetInstancesInstanceListVipList struct {
	// Virtual IP.
	Vip string `pulumi:"vip"`
	// Virtual PORT.
	Vport string `pulumi:"vport"`
}

// GetInstancesInstanceListVipListInput is an input type that accepts GetInstancesInstanceListVipListArgs and GetInstancesInstanceListVipListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListVipListInput` via:
//
//	GetInstancesInstanceListVipListArgs{...}
type GetInstancesInstanceListVipListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListVipListOutput() GetInstancesInstanceListVipListOutput
	ToGetInstancesInstanceListVipListOutputWithContext(context.Context) GetInstancesInstanceListVipListOutput
}

type GetInstancesInstanceListVipListArgs struct {
	// Virtual IP.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Virtual PORT.
	Vport pulumi.StringInput `pulumi:"vport"`
}

func (GetInstancesInstanceListVipListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListVipList)(nil)).Elem()
}

func (i GetInstancesInstanceListVipListArgs) ToGetInstancesInstanceListVipListOutput() GetInstancesInstanceListVipListOutput {
	return i.ToGetInstancesInstanceListVipListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListVipListArgs) ToGetInstancesInstanceListVipListOutputWithContext(ctx context.Context) GetInstancesInstanceListVipListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListVipListOutput)
}

type GetInstancesInstanceListVipListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListVipListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListVipList)(nil)).Elem()
}

func (o GetInstancesInstanceListVipListOutput) ToGetInstancesInstanceListVipListOutput() GetInstancesInstanceListVipListOutput {
	return o
}

func (o GetInstancesInstanceListVipListOutput) ToGetInstancesInstanceListVipListOutputWithContext(ctx context.Context) GetInstancesInstanceListVipListOutput {
	return o
}

// Virtual IP.
func (o GetInstancesInstanceListVipListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListVipList) string { return v.Vip }).(pulumi.StringOutput)
}

// Virtual PORT.
func (o GetInstancesInstanceListVipListOutput) Vport() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListVipList) string { return v.Vport }).(pulumi.StringOutput)
}

type GetRegionResult struct {
	// area name.
	AreaName string `pulumi:"areaName"`
	// Whether to support ipv6, 0: means not supported, 1: means supported.
	Ipv6 int `pulumi:"ipv6"`
	// Whether to support cross-availability zones, 0: means not supported, 1: means supported.
	MultiZone int `pulumi:"multiZone"`
	// Region Code.
	RegionCode string `pulumi:"regionCode"`
	// Region Code(V3 version).
	RegionCodeV3 string `pulumi:"regionCodeV3"`
	// region ID.
	RegionId int `pulumi:"regionId"`
	// geographical name.
	RegionName string `pulumi:"regionName"`
	// NONE: The default value does not support any special models CVM: Supports CVM types.
	Support string `pulumi:"support"`
}

// GetRegionResultInput is an input type that accepts GetRegionResultArgs and GetRegionResultOutput values.
// You can construct a concrete instance of `GetRegionResultInput` via:
//
//	GetRegionResultArgs{...}
type GetRegionResultInput interface {
	pulumi.Input

	ToGetRegionResultOutput() GetRegionResultOutput
	ToGetRegionResultOutputWithContext(context.Context) GetRegionResultOutput
}

type GetRegionResultArgs struct {
	// area name.
	AreaName pulumi.StringInput `pulumi:"areaName"`
	// Whether to support ipv6, 0: means not supported, 1: means supported.
	Ipv6 pulumi.IntInput `pulumi:"ipv6"`
	// Whether to support cross-availability zones, 0: means not supported, 1: means supported.
	MultiZone pulumi.IntInput `pulumi:"multiZone"`
	// Region Code.
	RegionCode pulumi.StringInput `pulumi:"regionCode"`
	// Region Code(V3 version).
	RegionCodeV3 pulumi.StringInput `pulumi:"regionCodeV3"`
	// region ID.
	RegionId pulumi.IntInput `pulumi:"regionId"`
	// geographical name.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// NONE: The default value does not support any special models CVM: Supports CVM types.
	Support pulumi.StringInput `pulumi:"support"`
}

func (GetRegionResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (i GetRegionResultArgs) ToGetRegionResultOutput() GetRegionResultOutput {
	return i.ToGetRegionResultOutputWithContext(context.Background())
}

func (i GetRegionResultArgs) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionResultOutput)
}

// GetRegionResultArrayInput is an input type that accepts GetRegionResultArray and GetRegionResultArrayOutput values.
// You can construct a concrete instance of `GetRegionResultArrayInput` via:
//
//	GetRegionResultArray{ GetRegionResultArgs{...} }
type GetRegionResultArrayInput interface {
	pulumi.Input

	ToGetRegionResultArrayOutput() GetRegionResultArrayOutput
	ToGetRegionResultArrayOutputWithContext(context.Context) GetRegionResultArrayOutput
}

type GetRegionResultArray []GetRegionResultInput

func (GetRegionResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionResult)(nil)).Elem()
}

func (i GetRegionResultArray) ToGetRegionResultArrayOutput() GetRegionResultArrayOutput {
	return i.ToGetRegionResultArrayOutputWithContext(context.Background())
}

func (i GetRegionResultArray) ToGetRegionResultArrayOutputWithContext(ctx context.Context) GetRegionResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionResultArrayOutput)
}

type GetRegionResultOutput struct{ *pulumi.OutputState }

func (GetRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultOutput) ToGetRegionResultOutput() GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return o
}

// area name.
func (o GetRegionResultOutput) AreaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.AreaName }).(pulumi.StringOutput)
}

// Whether to support ipv6, 0: means not supported, 1: means supported.
func (o GetRegionResultOutput) Ipv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetRegionResult) int { return v.Ipv6 }).(pulumi.IntOutput)
}

// Whether to support cross-availability zones, 0: means not supported, 1: means supported.
func (o GetRegionResultOutput) MultiZone() pulumi.IntOutput {
	return o.ApplyT(func(v GetRegionResult) int { return v.MultiZone }).(pulumi.IntOutput)
}

// Region Code.
func (o GetRegionResultOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.RegionCode }).(pulumi.StringOutput)
}

// Region Code(V3 version).
func (o GetRegionResultOutput) RegionCodeV3() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.RegionCodeV3 }).(pulumi.StringOutput)
}

// region ID.
func (o GetRegionResultOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRegionResult) int { return v.RegionId }).(pulumi.IntOutput)
}

// geographical name.
func (o GetRegionResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.RegionName }).(pulumi.StringOutput)
}

// NONE: The default value does not support any special models CVM: Supports CVM types.
func (o GetRegionResultOutput) Support() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Support }).(pulumi.StringOutput)
}

type GetRegionResultArrayOutput struct{ *pulumi.OutputState }

func (GetRegionResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultArrayOutput) ToGetRegionResultArrayOutput() GetRegionResultArrayOutput {
	return o
}

func (o GetRegionResultArrayOutput) ToGetRegionResultArrayOutputWithContext(ctx context.Context) GetRegionResultArrayOutput {
	return o
}

func (o GetRegionResultArrayOutput) Index(i pulumi.IntInput) GetRegionResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionResult {
		return vs[0].([]GetRegionResult)[vs[1].(int)]
	}).(GetRegionResultOutput)
}

type GetTaskStatusResult struct {
	// OutPut Info.
	Output string `pulumi:"output"`
	// Status.
	Status int `pulumi:"status"`
}

// GetTaskStatusResultInput is an input type that accepts GetTaskStatusResultArgs and GetTaskStatusResultOutput values.
// You can construct a concrete instance of `GetTaskStatusResultInput` via:
//
//	GetTaskStatusResultArgs{...}
type GetTaskStatusResultInput interface {
	pulumi.Input

	ToGetTaskStatusResultOutput() GetTaskStatusResultOutput
	ToGetTaskStatusResultOutputWithContext(context.Context) GetTaskStatusResultOutput
}

type GetTaskStatusResultArgs struct {
	// OutPut Info.
	Output pulumi.StringInput `pulumi:"output"`
	// Status.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetTaskStatusResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskStatusResult)(nil)).Elem()
}

func (i GetTaskStatusResultArgs) ToGetTaskStatusResultOutput() GetTaskStatusResultOutput {
	return i.ToGetTaskStatusResultOutputWithContext(context.Background())
}

func (i GetTaskStatusResultArgs) ToGetTaskStatusResultOutputWithContext(ctx context.Context) GetTaskStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTaskStatusResultOutput)
}

// GetTaskStatusResultArrayInput is an input type that accepts GetTaskStatusResultArray and GetTaskStatusResultArrayOutput values.
// You can construct a concrete instance of `GetTaskStatusResultArrayInput` via:
//
//	GetTaskStatusResultArray{ GetTaskStatusResultArgs{...} }
type GetTaskStatusResultArrayInput interface {
	pulumi.Input

	ToGetTaskStatusResultArrayOutput() GetTaskStatusResultArrayOutput
	ToGetTaskStatusResultArrayOutputWithContext(context.Context) GetTaskStatusResultArrayOutput
}

type GetTaskStatusResultArray []GetTaskStatusResultInput

func (GetTaskStatusResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTaskStatusResult)(nil)).Elem()
}

func (i GetTaskStatusResultArray) ToGetTaskStatusResultArrayOutput() GetTaskStatusResultArrayOutput {
	return i.ToGetTaskStatusResultArrayOutputWithContext(context.Background())
}

func (i GetTaskStatusResultArray) ToGetTaskStatusResultArrayOutputWithContext(ctx context.Context) GetTaskStatusResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTaskStatusResultArrayOutput)
}

type GetTaskStatusResultOutput struct{ *pulumi.OutputState }

func (GetTaskStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskStatusResult)(nil)).Elem()
}

func (o GetTaskStatusResultOutput) ToGetTaskStatusResultOutput() GetTaskStatusResultOutput {
	return o
}

func (o GetTaskStatusResultOutput) ToGetTaskStatusResultOutputWithContext(ctx context.Context) GetTaskStatusResultOutput {
	return o
}

// OutPut Info.
func (o GetTaskStatusResultOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskStatusResult) string { return v.Output }).(pulumi.StringOutput)
}

// Status.
func (o GetTaskStatusResultOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetTaskStatusResult) int { return v.Status }).(pulumi.IntOutput)
}

type GetTaskStatusResultArrayOutput struct{ *pulumi.OutputState }

func (GetTaskStatusResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTaskStatusResult)(nil)).Elem()
}

func (o GetTaskStatusResultArrayOutput) ToGetTaskStatusResultArrayOutput() GetTaskStatusResultArrayOutput {
	return o
}

func (o GetTaskStatusResultArrayOutput) ToGetTaskStatusResultArrayOutputWithContext(ctx context.Context) GetTaskStatusResultArrayOutput {
	return o
}

func (o GetTaskStatusResultArrayOutput) Index(i pulumi.IntInput) GetTaskStatusResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTaskStatusResult {
		return vs[0].([]GetTaskStatusResult)[vs[1].(int)]
	}).(GetTaskStatusResultOutput)
}

type GetTopicFlowRankingResult struct {
	// ConsumeSpeed.
	ConsumeSpeeds []GetTopicFlowRankingResultConsumeSpeed `pulumi:"consumeSpeeds"`
	// TopicFlow.
	TopicFlows []GetTopicFlowRankingResultTopicFlow `pulumi:"topicFlows"`
	// TopicMessageHeapRanking.
	TopicMessageHeaps []GetTopicFlowRankingResultTopicMessageHeap `pulumi:"topicMessageHeaps"`
}

// GetTopicFlowRankingResultInput is an input type that accepts GetTopicFlowRankingResultArgs and GetTopicFlowRankingResultOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultInput` via:
//
//	GetTopicFlowRankingResultArgs{...}
type GetTopicFlowRankingResultInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultOutput() GetTopicFlowRankingResultOutput
	ToGetTopicFlowRankingResultOutputWithContext(context.Context) GetTopicFlowRankingResultOutput
}

type GetTopicFlowRankingResultArgs struct {
	// ConsumeSpeed.
	ConsumeSpeeds GetTopicFlowRankingResultConsumeSpeedArrayInput `pulumi:"consumeSpeeds"`
	// TopicFlow.
	TopicFlows GetTopicFlowRankingResultTopicFlowArrayInput `pulumi:"topicFlows"`
	// TopicMessageHeapRanking.
	TopicMessageHeaps GetTopicFlowRankingResultTopicMessageHeapArrayInput `pulumi:"topicMessageHeaps"`
}

func (GetTopicFlowRankingResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResult)(nil)).Elem()
}

func (i GetTopicFlowRankingResultArgs) ToGetTopicFlowRankingResultOutput() GetTopicFlowRankingResultOutput {
	return i.ToGetTopicFlowRankingResultOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultArgs) ToGetTopicFlowRankingResultOutputWithContext(ctx context.Context) GetTopicFlowRankingResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultOutput)
}

// GetTopicFlowRankingResultArrayInput is an input type that accepts GetTopicFlowRankingResultArray and GetTopicFlowRankingResultArrayOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultArrayInput` via:
//
//	GetTopicFlowRankingResultArray{ GetTopicFlowRankingResultArgs{...} }
type GetTopicFlowRankingResultArrayInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultArrayOutput() GetTopicFlowRankingResultArrayOutput
	ToGetTopicFlowRankingResultArrayOutputWithContext(context.Context) GetTopicFlowRankingResultArrayOutput
}

type GetTopicFlowRankingResultArray []GetTopicFlowRankingResultInput

func (GetTopicFlowRankingResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResult)(nil)).Elem()
}

func (i GetTopicFlowRankingResultArray) ToGetTopicFlowRankingResultArrayOutput() GetTopicFlowRankingResultArrayOutput {
	return i.ToGetTopicFlowRankingResultArrayOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultArray) ToGetTopicFlowRankingResultArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultArrayOutput)
}

type GetTopicFlowRankingResultOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResult)(nil)).Elem()
}

func (o GetTopicFlowRankingResultOutput) ToGetTopicFlowRankingResultOutput() GetTopicFlowRankingResultOutput {
	return o
}

func (o GetTopicFlowRankingResultOutput) ToGetTopicFlowRankingResultOutputWithContext(ctx context.Context) GetTopicFlowRankingResultOutput {
	return o
}

// ConsumeSpeed.
func (o GetTopicFlowRankingResultOutput) ConsumeSpeeds() GetTopicFlowRankingResultConsumeSpeedArrayOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResult) []GetTopicFlowRankingResultConsumeSpeed { return v.ConsumeSpeeds }).(GetTopicFlowRankingResultConsumeSpeedArrayOutput)
}

// TopicFlow.
func (o GetTopicFlowRankingResultOutput) TopicFlows() GetTopicFlowRankingResultTopicFlowArrayOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResult) []GetTopicFlowRankingResultTopicFlow { return v.TopicFlows }).(GetTopicFlowRankingResultTopicFlowArrayOutput)
}

// TopicMessageHeapRanking.
func (o GetTopicFlowRankingResultOutput) TopicMessageHeaps() GetTopicFlowRankingResultTopicMessageHeapArrayOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResult) []GetTopicFlowRankingResultTopicMessageHeap {
		return v.TopicMessageHeaps
	}).(GetTopicFlowRankingResultTopicMessageHeapArrayOutput)
}

type GetTopicFlowRankingResultArrayOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResult)(nil)).Elem()
}

func (o GetTopicFlowRankingResultArrayOutput) ToGetTopicFlowRankingResultArrayOutput() GetTopicFlowRankingResultArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultArrayOutput) ToGetTopicFlowRankingResultArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultArrayOutput) Index(i pulumi.IntInput) GetTopicFlowRankingResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicFlowRankingResult {
		return vs[0].([]GetTopicFlowRankingResult)[vs[1].(int)]
	}).(GetTopicFlowRankingResultOutput)
}

type GetTopicFlowRankingResultConsumeSpeed struct {
	// ConsumerGroupName.
	ConsumerGroupName string `pulumi:"consumerGroupName"`
	// Speed.
	Speed int `pulumi:"speed"`
}

// GetTopicFlowRankingResultConsumeSpeedInput is an input type that accepts GetTopicFlowRankingResultConsumeSpeedArgs and GetTopicFlowRankingResultConsumeSpeedOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultConsumeSpeedInput` via:
//
//	GetTopicFlowRankingResultConsumeSpeedArgs{...}
type GetTopicFlowRankingResultConsumeSpeedInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultConsumeSpeedOutput() GetTopicFlowRankingResultConsumeSpeedOutput
	ToGetTopicFlowRankingResultConsumeSpeedOutputWithContext(context.Context) GetTopicFlowRankingResultConsumeSpeedOutput
}

type GetTopicFlowRankingResultConsumeSpeedArgs struct {
	// ConsumerGroupName.
	ConsumerGroupName pulumi.StringInput `pulumi:"consumerGroupName"`
	// Speed.
	Speed pulumi.IntInput `pulumi:"speed"`
}

func (GetTopicFlowRankingResultConsumeSpeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResultConsumeSpeed)(nil)).Elem()
}

func (i GetTopicFlowRankingResultConsumeSpeedArgs) ToGetTopicFlowRankingResultConsumeSpeedOutput() GetTopicFlowRankingResultConsumeSpeedOutput {
	return i.ToGetTopicFlowRankingResultConsumeSpeedOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultConsumeSpeedArgs) ToGetTopicFlowRankingResultConsumeSpeedOutputWithContext(ctx context.Context) GetTopicFlowRankingResultConsumeSpeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultConsumeSpeedOutput)
}

// GetTopicFlowRankingResultConsumeSpeedArrayInput is an input type that accepts GetTopicFlowRankingResultConsumeSpeedArray and GetTopicFlowRankingResultConsumeSpeedArrayOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultConsumeSpeedArrayInput` via:
//
//	GetTopicFlowRankingResultConsumeSpeedArray{ GetTopicFlowRankingResultConsumeSpeedArgs{...} }
type GetTopicFlowRankingResultConsumeSpeedArrayInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultConsumeSpeedArrayOutput() GetTopicFlowRankingResultConsumeSpeedArrayOutput
	ToGetTopicFlowRankingResultConsumeSpeedArrayOutputWithContext(context.Context) GetTopicFlowRankingResultConsumeSpeedArrayOutput
}

type GetTopicFlowRankingResultConsumeSpeedArray []GetTopicFlowRankingResultConsumeSpeedInput

func (GetTopicFlowRankingResultConsumeSpeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResultConsumeSpeed)(nil)).Elem()
}

func (i GetTopicFlowRankingResultConsumeSpeedArray) ToGetTopicFlowRankingResultConsumeSpeedArrayOutput() GetTopicFlowRankingResultConsumeSpeedArrayOutput {
	return i.ToGetTopicFlowRankingResultConsumeSpeedArrayOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultConsumeSpeedArray) ToGetTopicFlowRankingResultConsumeSpeedArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultConsumeSpeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultConsumeSpeedArrayOutput)
}

type GetTopicFlowRankingResultConsumeSpeedOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultConsumeSpeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResultConsumeSpeed)(nil)).Elem()
}

func (o GetTopicFlowRankingResultConsumeSpeedOutput) ToGetTopicFlowRankingResultConsumeSpeedOutput() GetTopicFlowRankingResultConsumeSpeedOutput {
	return o
}

func (o GetTopicFlowRankingResultConsumeSpeedOutput) ToGetTopicFlowRankingResultConsumeSpeedOutputWithContext(ctx context.Context) GetTopicFlowRankingResultConsumeSpeedOutput {
	return o
}

// ConsumerGroupName.
func (o GetTopicFlowRankingResultConsumeSpeedOutput) ConsumerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultConsumeSpeed) string { return v.ConsumerGroupName }).(pulumi.StringOutput)
}

// Speed.
func (o GetTopicFlowRankingResultConsumeSpeedOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultConsumeSpeed) int { return v.Speed }).(pulumi.IntOutput)
}

type GetTopicFlowRankingResultConsumeSpeedArrayOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultConsumeSpeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResultConsumeSpeed)(nil)).Elem()
}

func (o GetTopicFlowRankingResultConsumeSpeedArrayOutput) ToGetTopicFlowRankingResultConsumeSpeedArrayOutput() GetTopicFlowRankingResultConsumeSpeedArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultConsumeSpeedArrayOutput) ToGetTopicFlowRankingResultConsumeSpeedArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultConsumeSpeedArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultConsumeSpeedArrayOutput) Index(i pulumi.IntInput) GetTopicFlowRankingResultConsumeSpeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicFlowRankingResultConsumeSpeed {
		return vs[0].([]GetTopicFlowRankingResultConsumeSpeed)[vs[1].(int)]
	}).(GetTopicFlowRankingResultConsumeSpeedOutput)
}

type GetTopicFlowRankingResultTopicFlow struct {
	// Topic MessageHeap.
	MessageHeap int `pulumi:"messageHeap"`
	// PartitionNum.
	PartitionNum int `pulumi:"partitionNum"`
	// ReplicaNum.
	ReplicaNum int `pulumi:"replicaNum"`
	// topicId.
	TopicId string `pulumi:"topicId"`
	// topicName.
	TopicName string `pulumi:"topicName"`
	// TopicTraffic.
	TopicTraffic string `pulumi:"topicTraffic"`
}

// GetTopicFlowRankingResultTopicFlowInput is an input type that accepts GetTopicFlowRankingResultTopicFlowArgs and GetTopicFlowRankingResultTopicFlowOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultTopicFlowInput` via:
//
//	GetTopicFlowRankingResultTopicFlowArgs{...}
type GetTopicFlowRankingResultTopicFlowInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultTopicFlowOutput() GetTopicFlowRankingResultTopicFlowOutput
	ToGetTopicFlowRankingResultTopicFlowOutputWithContext(context.Context) GetTopicFlowRankingResultTopicFlowOutput
}

type GetTopicFlowRankingResultTopicFlowArgs struct {
	// Topic MessageHeap.
	MessageHeap pulumi.IntInput `pulumi:"messageHeap"`
	// PartitionNum.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// ReplicaNum.
	ReplicaNum pulumi.IntInput `pulumi:"replicaNum"`
	// topicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// topicName.
	TopicName pulumi.StringInput `pulumi:"topicName"`
	// TopicTraffic.
	TopicTraffic pulumi.StringInput `pulumi:"topicTraffic"`
}

func (GetTopicFlowRankingResultTopicFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResultTopicFlow)(nil)).Elem()
}

func (i GetTopicFlowRankingResultTopicFlowArgs) ToGetTopicFlowRankingResultTopicFlowOutput() GetTopicFlowRankingResultTopicFlowOutput {
	return i.ToGetTopicFlowRankingResultTopicFlowOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultTopicFlowArgs) ToGetTopicFlowRankingResultTopicFlowOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultTopicFlowOutput)
}

// GetTopicFlowRankingResultTopicFlowArrayInput is an input type that accepts GetTopicFlowRankingResultTopicFlowArray and GetTopicFlowRankingResultTopicFlowArrayOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultTopicFlowArrayInput` via:
//
//	GetTopicFlowRankingResultTopicFlowArray{ GetTopicFlowRankingResultTopicFlowArgs{...} }
type GetTopicFlowRankingResultTopicFlowArrayInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultTopicFlowArrayOutput() GetTopicFlowRankingResultTopicFlowArrayOutput
	ToGetTopicFlowRankingResultTopicFlowArrayOutputWithContext(context.Context) GetTopicFlowRankingResultTopicFlowArrayOutput
}

type GetTopicFlowRankingResultTopicFlowArray []GetTopicFlowRankingResultTopicFlowInput

func (GetTopicFlowRankingResultTopicFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResultTopicFlow)(nil)).Elem()
}

func (i GetTopicFlowRankingResultTopicFlowArray) ToGetTopicFlowRankingResultTopicFlowArrayOutput() GetTopicFlowRankingResultTopicFlowArrayOutput {
	return i.ToGetTopicFlowRankingResultTopicFlowArrayOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultTopicFlowArray) ToGetTopicFlowRankingResultTopicFlowArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultTopicFlowArrayOutput)
}

type GetTopicFlowRankingResultTopicFlowOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultTopicFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResultTopicFlow)(nil)).Elem()
}

func (o GetTopicFlowRankingResultTopicFlowOutput) ToGetTopicFlowRankingResultTopicFlowOutput() GetTopicFlowRankingResultTopicFlowOutput {
	return o
}

func (o GetTopicFlowRankingResultTopicFlowOutput) ToGetTopicFlowRankingResultTopicFlowOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicFlowOutput {
	return o
}

// Topic MessageHeap.
func (o GetTopicFlowRankingResultTopicFlowOutput) MessageHeap() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicFlow) int { return v.MessageHeap }).(pulumi.IntOutput)
}

// PartitionNum.
func (o GetTopicFlowRankingResultTopicFlowOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicFlow) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// ReplicaNum.
func (o GetTopicFlowRankingResultTopicFlowOutput) ReplicaNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicFlow) int { return v.ReplicaNum }).(pulumi.IntOutput)
}

// topicId.
func (o GetTopicFlowRankingResultTopicFlowOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicFlow) string { return v.TopicId }).(pulumi.StringOutput)
}

// topicName.
func (o GetTopicFlowRankingResultTopicFlowOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicFlow) string { return v.TopicName }).(pulumi.StringOutput)
}

// TopicTraffic.
func (o GetTopicFlowRankingResultTopicFlowOutput) TopicTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicFlow) string { return v.TopicTraffic }).(pulumi.StringOutput)
}

type GetTopicFlowRankingResultTopicFlowArrayOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultTopicFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResultTopicFlow)(nil)).Elem()
}

func (o GetTopicFlowRankingResultTopicFlowArrayOutput) ToGetTopicFlowRankingResultTopicFlowArrayOutput() GetTopicFlowRankingResultTopicFlowArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultTopicFlowArrayOutput) ToGetTopicFlowRankingResultTopicFlowArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicFlowArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultTopicFlowArrayOutput) Index(i pulumi.IntInput) GetTopicFlowRankingResultTopicFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicFlowRankingResultTopicFlow {
		return vs[0].([]GetTopicFlowRankingResultTopicFlow)[vs[1].(int)]
	}).(GetTopicFlowRankingResultTopicFlowOutput)
}

type GetTopicFlowRankingResultTopicMessageHeap struct {
	// Topic MessageHeap.
	MessageHeap int `pulumi:"messageHeap"`
	// PartitionNum.
	PartitionNum int `pulumi:"partitionNum"`
	// ReplicaNum.
	ReplicaNum int `pulumi:"replicaNum"`
	// topicId.
	TopicId string `pulumi:"topicId"`
	// topicName.
	TopicName string `pulumi:"topicName"`
	// TopicTraffic.
	TopicTraffic string `pulumi:"topicTraffic"`
}

// GetTopicFlowRankingResultTopicMessageHeapInput is an input type that accepts GetTopicFlowRankingResultTopicMessageHeapArgs and GetTopicFlowRankingResultTopicMessageHeapOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultTopicMessageHeapInput` via:
//
//	GetTopicFlowRankingResultTopicMessageHeapArgs{...}
type GetTopicFlowRankingResultTopicMessageHeapInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultTopicMessageHeapOutput() GetTopicFlowRankingResultTopicMessageHeapOutput
	ToGetTopicFlowRankingResultTopicMessageHeapOutputWithContext(context.Context) GetTopicFlowRankingResultTopicMessageHeapOutput
}

type GetTopicFlowRankingResultTopicMessageHeapArgs struct {
	// Topic MessageHeap.
	MessageHeap pulumi.IntInput `pulumi:"messageHeap"`
	// PartitionNum.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// ReplicaNum.
	ReplicaNum pulumi.IntInput `pulumi:"replicaNum"`
	// topicId.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// topicName.
	TopicName pulumi.StringInput `pulumi:"topicName"`
	// TopicTraffic.
	TopicTraffic pulumi.StringInput `pulumi:"topicTraffic"`
}

func (GetTopicFlowRankingResultTopicMessageHeapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResultTopicMessageHeap)(nil)).Elem()
}

func (i GetTopicFlowRankingResultTopicMessageHeapArgs) ToGetTopicFlowRankingResultTopicMessageHeapOutput() GetTopicFlowRankingResultTopicMessageHeapOutput {
	return i.ToGetTopicFlowRankingResultTopicMessageHeapOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultTopicMessageHeapArgs) ToGetTopicFlowRankingResultTopicMessageHeapOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicMessageHeapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultTopicMessageHeapOutput)
}

// GetTopicFlowRankingResultTopicMessageHeapArrayInput is an input type that accepts GetTopicFlowRankingResultTopicMessageHeapArray and GetTopicFlowRankingResultTopicMessageHeapArrayOutput values.
// You can construct a concrete instance of `GetTopicFlowRankingResultTopicMessageHeapArrayInput` via:
//
//	GetTopicFlowRankingResultTopicMessageHeapArray{ GetTopicFlowRankingResultTopicMessageHeapArgs{...} }
type GetTopicFlowRankingResultTopicMessageHeapArrayInput interface {
	pulumi.Input

	ToGetTopicFlowRankingResultTopicMessageHeapArrayOutput() GetTopicFlowRankingResultTopicMessageHeapArrayOutput
	ToGetTopicFlowRankingResultTopicMessageHeapArrayOutputWithContext(context.Context) GetTopicFlowRankingResultTopicMessageHeapArrayOutput
}

type GetTopicFlowRankingResultTopicMessageHeapArray []GetTopicFlowRankingResultTopicMessageHeapInput

func (GetTopicFlowRankingResultTopicMessageHeapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResultTopicMessageHeap)(nil)).Elem()
}

func (i GetTopicFlowRankingResultTopicMessageHeapArray) ToGetTopicFlowRankingResultTopicMessageHeapArrayOutput() GetTopicFlowRankingResultTopicMessageHeapArrayOutput {
	return i.ToGetTopicFlowRankingResultTopicMessageHeapArrayOutputWithContext(context.Background())
}

func (i GetTopicFlowRankingResultTopicMessageHeapArray) ToGetTopicFlowRankingResultTopicMessageHeapArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicMessageHeapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFlowRankingResultTopicMessageHeapArrayOutput)
}

type GetTopicFlowRankingResultTopicMessageHeapOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultTopicMessageHeapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFlowRankingResultTopicMessageHeap)(nil)).Elem()
}

func (o GetTopicFlowRankingResultTopicMessageHeapOutput) ToGetTopicFlowRankingResultTopicMessageHeapOutput() GetTopicFlowRankingResultTopicMessageHeapOutput {
	return o
}

func (o GetTopicFlowRankingResultTopicMessageHeapOutput) ToGetTopicFlowRankingResultTopicMessageHeapOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicMessageHeapOutput {
	return o
}

// Topic MessageHeap.
func (o GetTopicFlowRankingResultTopicMessageHeapOutput) MessageHeap() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicMessageHeap) int { return v.MessageHeap }).(pulumi.IntOutput)
}

// PartitionNum.
func (o GetTopicFlowRankingResultTopicMessageHeapOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicMessageHeap) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// ReplicaNum.
func (o GetTopicFlowRankingResultTopicMessageHeapOutput) ReplicaNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicMessageHeap) int { return v.ReplicaNum }).(pulumi.IntOutput)
}

// topicId.
func (o GetTopicFlowRankingResultTopicMessageHeapOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicMessageHeap) string { return v.TopicId }).(pulumi.StringOutput)
}

// topicName.
func (o GetTopicFlowRankingResultTopicMessageHeapOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicMessageHeap) string { return v.TopicName }).(pulumi.StringOutput)
}

// TopicTraffic.
func (o GetTopicFlowRankingResultTopicMessageHeapOutput) TopicTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicFlowRankingResultTopicMessageHeap) string { return v.TopicTraffic }).(pulumi.StringOutput)
}

type GetTopicFlowRankingResultTopicMessageHeapArrayOutput struct{ *pulumi.OutputState }

func (GetTopicFlowRankingResultTopicMessageHeapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFlowRankingResultTopicMessageHeap)(nil)).Elem()
}

func (o GetTopicFlowRankingResultTopicMessageHeapArrayOutput) ToGetTopicFlowRankingResultTopicMessageHeapArrayOutput() GetTopicFlowRankingResultTopicMessageHeapArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultTopicMessageHeapArrayOutput) ToGetTopicFlowRankingResultTopicMessageHeapArrayOutputWithContext(ctx context.Context) GetTopicFlowRankingResultTopicMessageHeapArrayOutput {
	return o
}

func (o GetTopicFlowRankingResultTopicMessageHeapArrayOutput) Index(i pulumi.IntInput) GetTopicFlowRankingResultTopicMessageHeapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicFlowRankingResultTopicMessageHeap {
		return vs[0].([]GetTopicFlowRankingResultTopicMessageHeap)[vs[1].(int)]
	}).(GetTopicFlowRankingResultTopicMessageHeapOutput)
}

type GetTopicProduceConnectionResult struct {
	// ip address.
	IpAddr string `pulumi:"ipAddr"`
	// Is the supported version.
	IsUnSupportVersion bool `pulumi:"isUnSupportVersion"`
	// connect time.
	Time string `pulumi:"time"`
}

// GetTopicProduceConnectionResultInput is an input type that accepts GetTopicProduceConnectionResultArgs and GetTopicProduceConnectionResultOutput values.
// You can construct a concrete instance of `GetTopicProduceConnectionResultInput` via:
//
//	GetTopicProduceConnectionResultArgs{...}
type GetTopicProduceConnectionResultInput interface {
	pulumi.Input

	ToGetTopicProduceConnectionResultOutput() GetTopicProduceConnectionResultOutput
	ToGetTopicProduceConnectionResultOutputWithContext(context.Context) GetTopicProduceConnectionResultOutput
}

type GetTopicProduceConnectionResultArgs struct {
	// ip address.
	IpAddr pulumi.StringInput `pulumi:"ipAddr"`
	// Is the supported version.
	IsUnSupportVersion pulumi.BoolInput `pulumi:"isUnSupportVersion"`
	// connect time.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetTopicProduceConnectionResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicProduceConnectionResult)(nil)).Elem()
}

func (i GetTopicProduceConnectionResultArgs) ToGetTopicProduceConnectionResultOutput() GetTopicProduceConnectionResultOutput {
	return i.ToGetTopicProduceConnectionResultOutputWithContext(context.Background())
}

func (i GetTopicProduceConnectionResultArgs) ToGetTopicProduceConnectionResultOutputWithContext(ctx context.Context) GetTopicProduceConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicProduceConnectionResultOutput)
}

// GetTopicProduceConnectionResultArrayInput is an input type that accepts GetTopicProduceConnectionResultArray and GetTopicProduceConnectionResultArrayOutput values.
// You can construct a concrete instance of `GetTopicProduceConnectionResultArrayInput` via:
//
//	GetTopicProduceConnectionResultArray{ GetTopicProduceConnectionResultArgs{...} }
type GetTopicProduceConnectionResultArrayInput interface {
	pulumi.Input

	ToGetTopicProduceConnectionResultArrayOutput() GetTopicProduceConnectionResultArrayOutput
	ToGetTopicProduceConnectionResultArrayOutputWithContext(context.Context) GetTopicProduceConnectionResultArrayOutput
}

type GetTopicProduceConnectionResultArray []GetTopicProduceConnectionResultInput

func (GetTopicProduceConnectionResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicProduceConnectionResult)(nil)).Elem()
}

func (i GetTopicProduceConnectionResultArray) ToGetTopicProduceConnectionResultArrayOutput() GetTopicProduceConnectionResultArrayOutput {
	return i.ToGetTopicProduceConnectionResultArrayOutputWithContext(context.Background())
}

func (i GetTopicProduceConnectionResultArray) ToGetTopicProduceConnectionResultArrayOutputWithContext(ctx context.Context) GetTopicProduceConnectionResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicProduceConnectionResultArrayOutput)
}

type GetTopicProduceConnectionResultOutput struct{ *pulumi.OutputState }

func (GetTopicProduceConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicProduceConnectionResult)(nil)).Elem()
}

func (o GetTopicProduceConnectionResultOutput) ToGetTopicProduceConnectionResultOutput() GetTopicProduceConnectionResultOutput {
	return o
}

func (o GetTopicProduceConnectionResultOutput) ToGetTopicProduceConnectionResultOutputWithContext(ctx context.Context) GetTopicProduceConnectionResultOutput {
	return o
}

// ip address.
func (o GetTopicProduceConnectionResultOutput) IpAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicProduceConnectionResult) string { return v.IpAddr }).(pulumi.StringOutput)
}

// Is the supported version.
func (o GetTopicProduceConnectionResultOutput) IsUnSupportVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicProduceConnectionResult) bool { return v.IsUnSupportVersion }).(pulumi.BoolOutput)
}

// connect time.
func (o GetTopicProduceConnectionResultOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicProduceConnectionResult) string { return v.Time }).(pulumi.StringOutput)
}

type GetTopicProduceConnectionResultArrayOutput struct{ *pulumi.OutputState }

func (GetTopicProduceConnectionResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicProduceConnectionResult)(nil)).Elem()
}

func (o GetTopicProduceConnectionResultArrayOutput) ToGetTopicProduceConnectionResultArrayOutput() GetTopicProduceConnectionResultArrayOutput {
	return o
}

func (o GetTopicProduceConnectionResultArrayOutput) ToGetTopicProduceConnectionResultArrayOutputWithContext(ctx context.Context) GetTopicProduceConnectionResultArrayOutput {
	return o
}

func (o GetTopicProduceConnectionResultArrayOutput) Index(i pulumi.IntInput) GetTopicProduceConnectionResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicProduceConnectionResult {
		return vs[0].([]GetTopicProduceConnectionResult)[vs[1].(int)]
	}).(GetTopicProduceConnectionResultOutput)
}

type GetTopicSubscribeGroupGroupsInfo struct {
	// Error code, normally 0.
	ErrorCode string `pulumi:"errorCode"`
	// Kafka consumer group.
	Group string `pulumi:"group"`
	// This array contains information only if state is Stable and protocolType is consumer.
	Members []GetTopicSubscribeGroupGroupsInfoMember `pulumi:"members"`
	// Common consumer partition allocation algorithms are as follows (the default option for Kafka consumer SDK is range) range|roundrobin| sticky.
	Protocol string `pulumi:"protocol"`
	// The protocol type selected by the consumption group is normally the consumer, but some systems use their own protocol, such as kafka-connect, which uses connect. Only the standard consumer protocol, this interface knows the format of the specific allocation method, and can analyze the specific partition allocation.
	ProtocolType string `pulumi:"protocolType"`
	// Group state description (commonly Empty, Stable, and Dead states): Dead: The consumption group does not exist Empty: The consumption group does not currently have any consumer subscriptions PreparingRebalance: The consumption group is in the rebalance state CompletingRebalance: The consumption group is in the rebalance state Stable: Each consumer in the consumption group has joined and is in a stable state.
	State string `pulumi:"state"`
}

// GetTopicSubscribeGroupGroupsInfoInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoArgs and GetTopicSubscribeGroupGroupsInfoOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoArgs{...}
type GetTopicSubscribeGroupGroupsInfoInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoOutput() GetTopicSubscribeGroupGroupsInfoOutput
	ToGetTopicSubscribeGroupGroupsInfoOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoOutput
}

type GetTopicSubscribeGroupGroupsInfoArgs struct {
	// Error code, normally 0.
	ErrorCode pulumi.StringInput `pulumi:"errorCode"`
	// Kafka consumer group.
	Group pulumi.StringInput `pulumi:"group"`
	// This array contains information only if state is Stable and protocolType is consumer.
	Members GetTopicSubscribeGroupGroupsInfoMemberArrayInput `pulumi:"members"`
	// Common consumer partition allocation algorithms are as follows (the default option for Kafka consumer SDK is range) range|roundrobin| sticky.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The protocol type selected by the consumption group is normally the consumer, but some systems use their own protocol, such as kafka-connect, which uses connect. Only the standard consumer protocol, this interface knows the format of the specific allocation method, and can analyze the specific partition allocation.
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// Group state description (commonly Empty, Stable, and Dead states): Dead: The consumption group does not exist Empty: The consumption group does not currently have any consumer subscriptions PreparingRebalance: The consumption group is in the rebalance state CompletingRebalance: The consumption group is in the rebalance state Stable: Each consumer in the consumption group has joined and is in a stable state.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetTopicSubscribeGroupGroupsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfo)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoArgs) ToGetTopicSubscribeGroupGroupsInfoOutput() GetTopicSubscribeGroupGroupsInfoOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoArgs) ToGetTopicSubscribeGroupGroupsInfoOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoOutput)
}

// GetTopicSubscribeGroupGroupsInfoArrayInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoArray and GetTopicSubscribeGroupGroupsInfoArrayOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoArrayInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoArray{ GetTopicSubscribeGroupGroupsInfoArgs{...} }
type GetTopicSubscribeGroupGroupsInfoArrayInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoArrayOutput() GetTopicSubscribeGroupGroupsInfoArrayOutput
	ToGetTopicSubscribeGroupGroupsInfoArrayOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoArrayOutput
}

type GetTopicSubscribeGroupGroupsInfoArray []GetTopicSubscribeGroupGroupsInfoInput

func (GetTopicSubscribeGroupGroupsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfo)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoArray) ToGetTopicSubscribeGroupGroupsInfoArrayOutput() GetTopicSubscribeGroupGroupsInfoArrayOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoArrayOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoArray) ToGetTopicSubscribeGroupGroupsInfoArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoArrayOutput)
}

type GetTopicSubscribeGroupGroupsInfoOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfo)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoOutput) ToGetTopicSubscribeGroupGroupsInfoOutput() GetTopicSubscribeGroupGroupsInfoOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoOutput) ToGetTopicSubscribeGroupGroupsInfoOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoOutput {
	return o
}

// Error code, normally 0.
func (o GetTopicSubscribeGroupGroupsInfoOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfo) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// Kafka consumer group.
func (o GetTopicSubscribeGroupGroupsInfoOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfo) string { return v.Group }).(pulumi.StringOutput)
}

// This array contains information only if state is Stable and protocolType is consumer.
func (o GetTopicSubscribeGroupGroupsInfoOutput) Members() GetTopicSubscribeGroupGroupsInfoMemberArrayOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfo) []GetTopicSubscribeGroupGroupsInfoMember { return v.Members }).(GetTopicSubscribeGroupGroupsInfoMemberArrayOutput)
}

// Common consumer partition allocation algorithms are as follows (the default option for Kafka consumer SDK is range) range|roundrobin| sticky.
func (o GetTopicSubscribeGroupGroupsInfoOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfo) string { return v.Protocol }).(pulumi.StringOutput)
}

// The protocol type selected by the consumption group is normally the consumer, but some systems use their own protocol, such as kafka-connect, which uses connect. Only the standard consumer protocol, this interface knows the format of the specific allocation method, and can analyze the specific partition allocation.
func (o GetTopicSubscribeGroupGroupsInfoOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfo) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// Group state description (commonly Empty, Stable, and Dead states): Dead: The consumption group does not exist Empty: The consumption group does not currently have any consumer subscriptions PreparingRebalance: The consumption group is in the rebalance state CompletingRebalance: The consumption group is in the rebalance state Stable: Each consumer in the consumption group has joined and is in a stable state.
func (o GetTopicSubscribeGroupGroupsInfoOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfo) string { return v.State }).(pulumi.StringOutput)
}

type GetTopicSubscribeGroupGroupsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfo)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoArrayOutput) ToGetTopicSubscribeGroupGroupsInfoArrayOutput() GetTopicSubscribeGroupGroupsInfoArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoArrayOutput) ToGetTopicSubscribeGroupGroupsInfoArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoArrayOutput) Index(i pulumi.IntInput) GetTopicSubscribeGroupGroupsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicSubscribeGroupGroupsInfo {
		return vs[0].([]GetTopicSubscribeGroupGroupsInfo)[vs[1].(int)]
	}).(GetTopicSubscribeGroupGroupsInfoOutput)
}

type GetTopicSubscribeGroupGroupsInfoMember struct {
	// Stores the partition information assigned to the consumer.
	Assignments []GetTopicSubscribeGroupGroupsInfoMemberAssignment `pulumi:"assignments"`
	// Generally store the customer&#39;s IP address.
	ClientHost string `pulumi:"clientHost"`
	// The client.id information set by the client consumer SDK itself.
	ClientId string `pulumi:"clientId"`
	// ID that the coordinator generated for consumer.
	MemberId string `pulumi:"memberId"`
}

// GetTopicSubscribeGroupGroupsInfoMemberInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoMemberArgs and GetTopicSubscribeGroupGroupsInfoMemberOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoMemberInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoMemberArgs{...}
type GetTopicSubscribeGroupGroupsInfoMemberInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoMemberOutput() GetTopicSubscribeGroupGroupsInfoMemberOutput
	ToGetTopicSubscribeGroupGroupsInfoMemberOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoMemberOutput
}

type GetTopicSubscribeGroupGroupsInfoMemberArgs struct {
	// Stores the partition information assigned to the consumer.
	Assignments GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayInput `pulumi:"assignments"`
	// Generally store the customer&#39;s IP address.
	ClientHost pulumi.StringInput `pulumi:"clientHost"`
	// The client.id information set by the client consumer SDK itself.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// ID that the coordinator generated for consumer.
	MemberId pulumi.StringInput `pulumi:"memberId"`
}

func (GetTopicSubscribeGroupGroupsInfoMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMember)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoMemberArgs) ToGetTopicSubscribeGroupGroupsInfoMemberOutput() GetTopicSubscribeGroupGroupsInfoMemberOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoMemberOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoMemberArgs) ToGetTopicSubscribeGroupGroupsInfoMemberOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoMemberOutput)
}

// GetTopicSubscribeGroupGroupsInfoMemberArrayInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoMemberArray and GetTopicSubscribeGroupGroupsInfoMemberArrayOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoMemberArrayInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoMemberArray{ GetTopicSubscribeGroupGroupsInfoMemberArgs{...} }
type GetTopicSubscribeGroupGroupsInfoMemberArrayInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberArrayOutput
	ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoMemberArrayOutput
}

type GetTopicSubscribeGroupGroupsInfoMemberArray []GetTopicSubscribeGroupGroupsInfoMemberInput

func (GetTopicSubscribeGroupGroupsInfoMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfoMember)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoMemberArray) ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberArrayOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoMemberArray) ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoMemberArrayOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMember)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoMemberOutput) ToGetTopicSubscribeGroupGroupsInfoMemberOutput() GetTopicSubscribeGroupGroupsInfoMemberOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberOutput) ToGetTopicSubscribeGroupGroupsInfoMemberOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberOutput {
	return o
}

// Stores the partition information assigned to the consumer.
func (o GetTopicSubscribeGroupGroupsInfoMemberOutput) Assignments() GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMember) []GetTopicSubscribeGroupGroupsInfoMemberAssignment {
		return v.Assignments
	}).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput)
}

// Generally store the customer&#39;s IP address.
func (o GetTopicSubscribeGroupGroupsInfoMemberOutput) ClientHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMember) string { return v.ClientHost }).(pulumi.StringOutput)
}

// The client.id information set by the client consumer SDK itself.
func (o GetTopicSubscribeGroupGroupsInfoMemberOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMember) string { return v.ClientId }).(pulumi.StringOutput)
}

// ID that the coordinator generated for consumer.
func (o GetTopicSubscribeGroupGroupsInfoMemberOutput) MemberId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMember) string { return v.MemberId }).(pulumi.StringOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberArrayOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfoMember)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoMemberArrayOutput) ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberArrayOutput) ToGetTopicSubscribeGroupGroupsInfoMemberArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberArrayOutput) Index(i pulumi.IntInput) GetTopicSubscribeGroupGroupsInfoMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicSubscribeGroupGroupsInfoMember {
		return vs[0].([]GetTopicSubscribeGroupGroupsInfoMember)[vs[1].(int)]
	}).(GetTopicSubscribeGroupGroupsInfoMemberOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignment struct {
	// topic list.
	Topics []GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic `pulumi:"topics"`
	// assignment version information.
	Version int `pulumi:"version"`
}

// GetTopicSubscribeGroupGroupsInfoMemberAssignmentInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs and GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoMemberAssignmentInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs{...}
type GetTopicSubscribeGroupGroupsInfoMemberAssignmentInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput
	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs struct {
	// topic list.
	Topics GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayInput `pulumi:"topics"`
	// assignment version information.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignment)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput)
}

// GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray and GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray{ GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs{...} }
type GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput
	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray []GetTopicSubscribeGroupGroupsInfoMemberAssignmentInput

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfoMemberAssignment)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignment)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput {
	return o
}

// topic list.
func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput) Topics() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMemberAssignment) []GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic {
		return v.Topics
	}).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput)
}

// assignment version information.
func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMemberAssignment) int { return v.Version }).(pulumi.IntOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfoMemberAssignment)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput) Index(i pulumi.IntInput) GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicSubscribeGroupGroupsInfoMemberAssignment {
		return vs[0].([]GetTopicSubscribeGroupGroupsInfoMemberAssignment)[vs[1].(int)]
	}).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic struct {
	// partition list.
	Partitions []int `pulumi:"partitions"`
	// topic name.
	Topic string `pulumi:"topic"`
}

// GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs and GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs{...}
type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput
	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs struct {
	// partition list.
	Partitions pulumi.IntArrayInput `pulumi:"partitions"`
	// topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput)
}

// GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayInput is an input type that accepts GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray and GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput values.
// You can construct a concrete instance of `GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayInput` via:
//
//	GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray{ GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs{...} }
type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayInput interface {
	pulumi.Input

	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput
	ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutputWithContext(context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray []GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicInput

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic)(nil)).Elem()
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput {
	return i.ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutputWithContext(context.Background())
}

func (i GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput {
	return o
}

// partition list.
func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput) Partitions() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic) []int { return v.Partitions }).(pulumi.IntArrayOutput)
}

// topic name.
func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic) string { return v.Topic }).(pulumi.StringOutput)
}

type GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput struct{ *pulumi.OutputState }

func (GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic)(nil)).Elem()
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput() GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput) ToGetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutputWithContext(ctx context.Context) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput {
	return o
}

func (o GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput) Index(i pulumi.IntInput) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic {
		return vs[0].([]GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopic)[vs[1].(int)]
	}).(GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput)
}

type GetTopicSyncReplicaTopicInSyncReplicaList struct {
	// BeginOffset.
	BeginOffset int `pulumi:"beginOffset"`
	// EndOffset.
	EndOffset int `pulumi:"endOffset"`
	// ISR.
	InSyncReplica string `pulumi:"inSyncReplica"`
	// Leader Id.
	Leader int `pulumi:"leader"`
	// Message Count.
	MessageCount int `pulumi:"messageCount"`
	// Out Of Sync Replica.
	OutOfSyncReplica string `pulumi:"outOfSyncReplica"`
	// partition name.
	Partition string `pulumi:"partition"`
	// replica set.
	Replica string `pulumi:"replica"`
}

// GetTopicSyncReplicaTopicInSyncReplicaListInput is an input type that accepts GetTopicSyncReplicaTopicInSyncReplicaListArgs and GetTopicSyncReplicaTopicInSyncReplicaListOutput values.
// You can construct a concrete instance of `GetTopicSyncReplicaTopicInSyncReplicaListInput` via:
//
//	GetTopicSyncReplicaTopicInSyncReplicaListArgs{...}
type GetTopicSyncReplicaTopicInSyncReplicaListInput interface {
	pulumi.Input

	ToGetTopicSyncReplicaTopicInSyncReplicaListOutput() GetTopicSyncReplicaTopicInSyncReplicaListOutput
	ToGetTopicSyncReplicaTopicInSyncReplicaListOutputWithContext(context.Context) GetTopicSyncReplicaTopicInSyncReplicaListOutput
}

type GetTopicSyncReplicaTopicInSyncReplicaListArgs struct {
	// BeginOffset.
	BeginOffset pulumi.IntInput `pulumi:"beginOffset"`
	// EndOffset.
	EndOffset pulumi.IntInput `pulumi:"endOffset"`
	// ISR.
	InSyncReplica pulumi.StringInput `pulumi:"inSyncReplica"`
	// Leader Id.
	Leader pulumi.IntInput `pulumi:"leader"`
	// Message Count.
	MessageCount pulumi.IntInput `pulumi:"messageCount"`
	// Out Of Sync Replica.
	OutOfSyncReplica pulumi.StringInput `pulumi:"outOfSyncReplica"`
	// partition name.
	Partition pulumi.StringInput `pulumi:"partition"`
	// replica set.
	Replica pulumi.StringInput `pulumi:"replica"`
}

func (GetTopicSyncReplicaTopicInSyncReplicaListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSyncReplicaTopicInSyncReplicaList)(nil)).Elem()
}

func (i GetTopicSyncReplicaTopicInSyncReplicaListArgs) ToGetTopicSyncReplicaTopicInSyncReplicaListOutput() GetTopicSyncReplicaTopicInSyncReplicaListOutput {
	return i.ToGetTopicSyncReplicaTopicInSyncReplicaListOutputWithContext(context.Background())
}

func (i GetTopicSyncReplicaTopicInSyncReplicaListArgs) ToGetTopicSyncReplicaTopicInSyncReplicaListOutputWithContext(ctx context.Context) GetTopicSyncReplicaTopicInSyncReplicaListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSyncReplicaTopicInSyncReplicaListOutput)
}

// GetTopicSyncReplicaTopicInSyncReplicaListArrayInput is an input type that accepts GetTopicSyncReplicaTopicInSyncReplicaListArray and GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput values.
// You can construct a concrete instance of `GetTopicSyncReplicaTopicInSyncReplicaListArrayInput` via:
//
//	GetTopicSyncReplicaTopicInSyncReplicaListArray{ GetTopicSyncReplicaTopicInSyncReplicaListArgs{...} }
type GetTopicSyncReplicaTopicInSyncReplicaListArrayInput interface {
	pulumi.Input

	ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutput() GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput
	ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutputWithContext(context.Context) GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput
}

type GetTopicSyncReplicaTopicInSyncReplicaListArray []GetTopicSyncReplicaTopicInSyncReplicaListInput

func (GetTopicSyncReplicaTopicInSyncReplicaListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSyncReplicaTopicInSyncReplicaList)(nil)).Elem()
}

func (i GetTopicSyncReplicaTopicInSyncReplicaListArray) ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutput() GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput {
	return i.ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutputWithContext(context.Background())
}

func (i GetTopicSyncReplicaTopicInSyncReplicaListArray) ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutputWithContext(ctx context.Context) GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput)
}

type GetTopicSyncReplicaTopicInSyncReplicaListOutput struct{ *pulumi.OutputState }

func (GetTopicSyncReplicaTopicInSyncReplicaListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSyncReplicaTopicInSyncReplicaList)(nil)).Elem()
}

func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) ToGetTopicSyncReplicaTopicInSyncReplicaListOutput() GetTopicSyncReplicaTopicInSyncReplicaListOutput {
	return o
}

func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) ToGetTopicSyncReplicaTopicInSyncReplicaListOutputWithContext(ctx context.Context) GetTopicSyncReplicaTopicInSyncReplicaListOutput {
	return o
}

// BeginOffset.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) BeginOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) int { return v.BeginOffset }).(pulumi.IntOutput)
}

// EndOffset.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) EndOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) int { return v.EndOffset }).(pulumi.IntOutput)
}

// ISR.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) InSyncReplica() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) string { return v.InSyncReplica }).(pulumi.StringOutput)
}

// Leader Id.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) Leader() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) int { return v.Leader }).(pulumi.IntOutput)
}

// Message Count.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) MessageCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) int { return v.MessageCount }).(pulumi.IntOutput)
}

// Out Of Sync Replica.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) OutOfSyncReplica() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) string { return v.OutOfSyncReplica }).(pulumi.StringOutput)
}

// partition name.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) Partition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) string { return v.Partition }).(pulumi.StringOutput)
}

// replica set.
func (o GetTopicSyncReplicaTopicInSyncReplicaListOutput) Replica() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaTopicInSyncReplicaList) string { return v.Replica }).(pulumi.StringOutput)
}

type GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput struct{ *pulumi.OutputState }

func (GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicSyncReplicaTopicInSyncReplicaList)(nil)).Elem()
}

func (o GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput) ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutput() GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput {
	return o
}

func (o GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput) ToGetTopicSyncReplicaTopicInSyncReplicaListArrayOutputWithContext(ctx context.Context) GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput {
	return o
}

func (o GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput) Index(i pulumi.IntInput) GetTopicSyncReplicaTopicInSyncReplicaListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicSyncReplicaTopicInSyncReplicaList {
		return vs[0].([]GetTopicSyncReplicaTopicInSyncReplicaList)[vs[1].(int)]
	}).(GetTopicSyncReplicaTopicInSyncReplicaListOutput)
}

type GetTopicsInstanceList struct {
	// Clear log policy, log clear mode. `delete`: logs are deleted according to the storage time, `compact`: logs are compressed according to the key, `compact, delete`: logs are compressed according to the key and will be deleted according to the storage time.
	CleanUpPolicy string `pulumi:"cleanUpPolicy"`
	// Create time of the CKafka topic.
	CreateTime string `pulumi:"createTime"`
	// Whether to open the IP Whitelist. `true`: open, `false`: close.
	EnableWhiteList bool `pulumi:"enableWhiteList"`
	// Data backup cos bucket: the bucket address that is dumped to cos.
	ForwardCosBucket string `pulumi:"forwardCosBucket"`
	// Periodic frequency of data backup to cos.
	ForwardInterval int `pulumi:"forwardInterval"`
	// Data backup cos status. `1`: do not open data backup, `0`: open data backup.
	ForwardStatus int `pulumi:"forwardStatus"`
	// IP Whitelist count.
	IpWhiteListCount int `pulumi:"ipWhiteListCount"`
	// Max message bytes.
	MaxMessageBytes int `pulumi:"maxMessageBytes"`
	// CKafka topic note description.
	Note string `pulumi:"note"`
	// The number of partition.
	PartitionNum int `pulumi:"partitionNum"`
	// The number of replica.
	ReplicaNum int `pulumi:"replicaNum"`
	// Message can be selected. Retention time(unit ms).
	Retention int `pulumi:"retention"`
	// Segment scrolling time, in ms.
	Segment int `pulumi:"segment"`
	// Number of bytes rolled by shard.
	SegmentBytes int `pulumi:"segmentBytes"`
	// Min number of sync replicas.
	SyncReplicaMinNum int `pulumi:"syncReplicaMinNum"`
	// ID of the CKafka topic.
	TopicId string `pulumi:"topicId"`
	// Name of the CKafka topic. It must start with a letter, the rest can contain letters, numbers and dashes(-). The length range is from 1 to 64.
	TopicName string `pulumi:"topicName"`
	// Whether to allow unsynchronized replicas to be selected as leader, default is `false`, ` true:  `allowed, `false`: not allowed.
	UncleanLeaderElectionEnable bool `pulumi:"uncleanLeaderElectionEnable"`
}

// GetTopicsInstanceListInput is an input type that accepts GetTopicsInstanceListArgs and GetTopicsInstanceListOutput values.
// You can construct a concrete instance of `GetTopicsInstanceListInput` via:
//
//	GetTopicsInstanceListArgs{...}
type GetTopicsInstanceListInput interface {
	pulumi.Input

	ToGetTopicsInstanceListOutput() GetTopicsInstanceListOutput
	ToGetTopicsInstanceListOutputWithContext(context.Context) GetTopicsInstanceListOutput
}

type GetTopicsInstanceListArgs struct {
	// Clear log policy, log clear mode. `delete`: logs are deleted according to the storage time, `compact`: logs are compressed according to the key, `compact, delete`: logs are compressed according to the key and will be deleted according to the storage time.
	CleanUpPolicy pulumi.StringInput `pulumi:"cleanUpPolicy"`
	// Create time of the CKafka topic.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether to open the IP Whitelist. `true`: open, `false`: close.
	EnableWhiteList pulumi.BoolInput `pulumi:"enableWhiteList"`
	// Data backup cos bucket: the bucket address that is dumped to cos.
	ForwardCosBucket pulumi.StringInput `pulumi:"forwardCosBucket"`
	// Periodic frequency of data backup to cos.
	ForwardInterval pulumi.IntInput `pulumi:"forwardInterval"`
	// Data backup cos status. `1`: do not open data backup, `0`: open data backup.
	ForwardStatus pulumi.IntInput `pulumi:"forwardStatus"`
	// IP Whitelist count.
	IpWhiteListCount pulumi.IntInput `pulumi:"ipWhiteListCount"`
	// Max message bytes.
	MaxMessageBytes pulumi.IntInput `pulumi:"maxMessageBytes"`
	// CKafka topic note description.
	Note pulumi.StringInput `pulumi:"note"`
	// The number of partition.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// The number of replica.
	ReplicaNum pulumi.IntInput `pulumi:"replicaNum"`
	// Message can be selected. Retention time(unit ms).
	Retention pulumi.IntInput `pulumi:"retention"`
	// Segment scrolling time, in ms.
	Segment pulumi.IntInput `pulumi:"segment"`
	// Number of bytes rolled by shard.
	SegmentBytes pulumi.IntInput `pulumi:"segmentBytes"`
	// Min number of sync replicas.
	SyncReplicaMinNum pulumi.IntInput `pulumi:"syncReplicaMinNum"`
	// ID of the CKafka topic.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// Name of the CKafka topic. It must start with a letter, the rest can contain letters, numbers and dashes(-). The length range is from 1 to 64.
	TopicName pulumi.StringInput `pulumi:"topicName"`
	// Whether to allow unsynchronized replicas to be selected as leader, default is `false`, ` true:  `allowed, `false`: not allowed.
	UncleanLeaderElectionEnable pulumi.BoolInput `pulumi:"uncleanLeaderElectionEnable"`
}

func (GetTopicsInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsInstanceList)(nil)).Elem()
}

func (i GetTopicsInstanceListArgs) ToGetTopicsInstanceListOutput() GetTopicsInstanceListOutput {
	return i.ToGetTopicsInstanceListOutputWithContext(context.Background())
}

func (i GetTopicsInstanceListArgs) ToGetTopicsInstanceListOutputWithContext(ctx context.Context) GetTopicsInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsInstanceListOutput)
}

// GetTopicsInstanceListArrayInput is an input type that accepts GetTopicsInstanceListArray and GetTopicsInstanceListArrayOutput values.
// You can construct a concrete instance of `GetTopicsInstanceListArrayInput` via:
//
//	GetTopicsInstanceListArray{ GetTopicsInstanceListArgs{...} }
type GetTopicsInstanceListArrayInput interface {
	pulumi.Input

	ToGetTopicsInstanceListArrayOutput() GetTopicsInstanceListArrayOutput
	ToGetTopicsInstanceListArrayOutputWithContext(context.Context) GetTopicsInstanceListArrayOutput
}

type GetTopicsInstanceListArray []GetTopicsInstanceListInput

func (GetTopicsInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsInstanceList)(nil)).Elem()
}

func (i GetTopicsInstanceListArray) ToGetTopicsInstanceListArrayOutput() GetTopicsInstanceListArrayOutput {
	return i.ToGetTopicsInstanceListArrayOutputWithContext(context.Background())
}

func (i GetTopicsInstanceListArray) ToGetTopicsInstanceListArrayOutputWithContext(ctx context.Context) GetTopicsInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsInstanceListArrayOutput)
}

type GetTopicsInstanceListOutput struct{ *pulumi.OutputState }

func (GetTopicsInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsInstanceList)(nil)).Elem()
}

func (o GetTopicsInstanceListOutput) ToGetTopicsInstanceListOutput() GetTopicsInstanceListOutput {
	return o
}

func (o GetTopicsInstanceListOutput) ToGetTopicsInstanceListOutputWithContext(ctx context.Context) GetTopicsInstanceListOutput {
	return o
}

// Clear log policy, log clear mode. `delete`: logs are deleted according to the storage time, `compact`: logs are compressed according to the key, `compact, delete`: logs are compressed according to the key and will be deleted according to the storage time.
func (o GetTopicsInstanceListOutput) CleanUpPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.CleanUpPolicy }).(pulumi.StringOutput)
}

// Create time of the CKafka topic.
func (o GetTopicsInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether to open the IP Whitelist. `true`: open, `false`: close.
func (o GetTopicsInstanceListOutput) EnableWhiteList() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) bool { return v.EnableWhiteList }).(pulumi.BoolOutput)
}

// Data backup cos bucket: the bucket address that is dumped to cos.
func (o GetTopicsInstanceListOutput) ForwardCosBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.ForwardCosBucket }).(pulumi.StringOutput)
}

// Periodic frequency of data backup to cos.
func (o GetTopicsInstanceListOutput) ForwardInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.ForwardInterval }).(pulumi.IntOutput)
}

// Data backup cos status. `1`: do not open data backup, `0`: open data backup.
func (o GetTopicsInstanceListOutput) ForwardStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.ForwardStatus }).(pulumi.IntOutput)
}

// IP Whitelist count.
func (o GetTopicsInstanceListOutput) IpWhiteListCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.IpWhiteListCount }).(pulumi.IntOutput)
}

// Max message bytes.
func (o GetTopicsInstanceListOutput) MaxMessageBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.MaxMessageBytes }).(pulumi.IntOutput)
}

// CKafka topic note description.
func (o GetTopicsInstanceListOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.Note }).(pulumi.StringOutput)
}

// The number of partition.
func (o GetTopicsInstanceListOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// The number of replica.
func (o GetTopicsInstanceListOutput) ReplicaNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.ReplicaNum }).(pulumi.IntOutput)
}

// Message can be selected. Retention time(unit ms).
func (o GetTopicsInstanceListOutput) Retention() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.Retention }).(pulumi.IntOutput)
}

// Segment scrolling time, in ms.
func (o GetTopicsInstanceListOutput) Segment() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.Segment }).(pulumi.IntOutput)
}

// Number of bytes rolled by shard.
func (o GetTopicsInstanceListOutput) SegmentBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.SegmentBytes }).(pulumi.IntOutput)
}

// Min number of sync replicas.
func (o GetTopicsInstanceListOutput) SyncReplicaMinNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) int { return v.SyncReplicaMinNum }).(pulumi.IntOutput)
}

// ID of the CKafka topic.
func (o GetTopicsInstanceListOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.TopicId }).(pulumi.StringOutput)
}

// Name of the CKafka topic. It must start with a letter, the rest can contain letters, numbers and dashes(-). The length range is from 1 to 64.
func (o GetTopicsInstanceListOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) string { return v.TopicName }).(pulumi.StringOutput)
}

// Whether to allow unsynchronized replicas to be selected as leader, default is `false`, ` true:  `allowed, `false`: not allowed.
func (o GetTopicsInstanceListOutput) UncleanLeaderElectionEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsInstanceList) bool { return v.UncleanLeaderElectionEnable }).(pulumi.BoolOutput)
}

type GetTopicsInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetTopicsInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsInstanceList)(nil)).Elem()
}

func (o GetTopicsInstanceListArrayOutput) ToGetTopicsInstanceListArrayOutput() GetTopicsInstanceListArrayOutput {
	return o
}

func (o GetTopicsInstanceListArrayOutput) ToGetTopicsInstanceListArrayOutputWithContext(ctx context.Context) GetTopicsInstanceListArrayOutput {
	return o
}

func (o GetTopicsInstanceListArrayOutput) Index(i pulumi.IntInput) GetTopicsInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicsInstanceList {
		return vs[0].([]GetTopicsInstanceList)[vs[1].(int)]
	}).(GetTopicsInstanceListOutput)
}

type GetUsersUserList struct {
	// Account name used when query ckafka users' infos. Could be a substr of user name.
	AccountName string `pulumi:"accountName"`
	// Creation time of the account.
	CreateTime string `pulumi:"createTime"`
	// The last update time of the account.
	UpdateTime string `pulumi:"updateTime"`
}

// GetUsersUserListInput is an input type that accepts GetUsersUserListArgs and GetUsersUserListOutput values.
// You can construct a concrete instance of `GetUsersUserListInput` via:
//
//	GetUsersUserListArgs{...}
type GetUsersUserListInput interface {
	pulumi.Input

	ToGetUsersUserListOutput() GetUsersUserListOutput
	ToGetUsersUserListOutputWithContext(context.Context) GetUsersUserListOutput
}

type GetUsersUserListArgs struct {
	// Account name used when query ckafka users' infos. Could be a substr of user name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Creation time of the account.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The last update time of the account.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetUsersUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserList)(nil)).Elem()
}

func (i GetUsersUserListArgs) ToGetUsersUserListOutput() GetUsersUserListOutput {
	return i.ToGetUsersUserListOutputWithContext(context.Background())
}

func (i GetUsersUserListArgs) ToGetUsersUserListOutputWithContext(ctx context.Context) GetUsersUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserListOutput)
}

// GetUsersUserListArrayInput is an input type that accepts GetUsersUserListArray and GetUsersUserListArrayOutput values.
// You can construct a concrete instance of `GetUsersUserListArrayInput` via:
//
//	GetUsersUserListArray{ GetUsersUserListArgs{...} }
type GetUsersUserListArrayInput interface {
	pulumi.Input

	ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput
	ToGetUsersUserListArrayOutputWithContext(context.Context) GetUsersUserListArrayOutput
}

type GetUsersUserListArray []GetUsersUserListInput

func (GetUsersUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserList)(nil)).Elem()
}

func (i GetUsersUserListArray) ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput {
	return i.ToGetUsersUserListArrayOutputWithContext(context.Background())
}

func (i GetUsersUserListArray) ToGetUsersUserListArrayOutputWithContext(ctx context.Context) GetUsersUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserListArrayOutput)
}

type GetUsersUserListOutput struct{ *pulumi.OutputState }

func (GetUsersUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserList)(nil)).Elem()
}

func (o GetUsersUserListOutput) ToGetUsersUserListOutput() GetUsersUserListOutput {
	return o
}

func (o GetUsersUserListOutput) ToGetUsersUserListOutputWithContext(ctx context.Context) GetUsersUserListOutput {
	return o
}

// Account name used when query ckafka users' infos. Could be a substr of user name.
func (o GetUsersUserListOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.AccountName }).(pulumi.StringOutput)
}

// Creation time of the account.
func (o GetUsersUserListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The last update time of the account.
func (o GetUsersUserListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetUsersUserListArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserList)(nil)).Elem()
}

func (o GetUsersUserListArrayOutput) ToGetUsersUserListArrayOutput() GetUsersUserListArrayOutput {
	return o
}

func (o GetUsersUserListArrayOutput) ToGetUsersUserListArrayOutputWithContext(ctx context.Context) GetUsersUserListArrayOutput {
	return o
}

func (o GetUsersUserListArrayOutput) Index(i pulumi.IntInput) GetUsersUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserList {
		return vs[0].([]GetUsersUserList)[vs[1].(int)]
	}).(GetUsersUserListOutput)
}

type GetZoneResult struct {
	// User exclusive cluster information.
	ClusterInfos []GetZoneResultClusterInfo `pulumi:"clusterInfos"`
	// Maximum purchased bandwidth in Mbs.
	MaxBandwidth int `pulumi:"maxBandwidth"`
	// The maximum number of purchased instances.
	MaxBuyInstanceNum int `pulumi:"maxBuyInstanceNum"`
	// Postpaid message unit price.
	MessagePrices []GetZoneResultMessagePrice `pulumi:"messagePrices"`
	// Physical Exclusive Edition Configuration.
	Physical string `pulumi:"physical"`
	// Professional Edition configuration.
	Profession string `pulumi:"profession"`
	// Public network bandwidth.
	PublicNetwork string `pulumi:"publicNetwork"`
	// Public network bandwidth configuration.
	PublicNetworkLimit string `pulumi:"publicNetworkLimit"`
	// Purchase Standard Edition Configuration.
	Standard string `pulumi:"standard"`
	// Standard Edition S2 configuration.
	StandardS2 string `pulumi:"standardS2"`
	// Postpaid unit price.
	UnitPrices []GetZoneResultUnitPrice `pulumi:"unitPrices"`
	// zone list.
	ZoneLists []GetZoneResultZoneList `pulumi:"zoneLists"`
}

// GetZoneResultInput is an input type that accepts GetZoneResultArgs and GetZoneResultOutput values.
// You can construct a concrete instance of `GetZoneResultInput` via:
//
//	GetZoneResultArgs{...}
type GetZoneResultInput interface {
	pulumi.Input

	ToGetZoneResultOutput() GetZoneResultOutput
	ToGetZoneResultOutputWithContext(context.Context) GetZoneResultOutput
}

type GetZoneResultArgs struct {
	// User exclusive cluster information.
	ClusterInfos GetZoneResultClusterInfoArrayInput `pulumi:"clusterInfos"`
	// Maximum purchased bandwidth in Mbs.
	MaxBandwidth pulumi.IntInput `pulumi:"maxBandwidth"`
	// The maximum number of purchased instances.
	MaxBuyInstanceNum pulumi.IntInput `pulumi:"maxBuyInstanceNum"`
	// Postpaid message unit price.
	MessagePrices GetZoneResultMessagePriceArrayInput `pulumi:"messagePrices"`
	// Physical Exclusive Edition Configuration.
	Physical pulumi.StringInput `pulumi:"physical"`
	// Professional Edition configuration.
	Profession pulumi.StringInput `pulumi:"profession"`
	// Public network bandwidth.
	PublicNetwork pulumi.StringInput `pulumi:"publicNetwork"`
	// Public network bandwidth configuration.
	PublicNetworkLimit pulumi.StringInput `pulumi:"publicNetworkLimit"`
	// Purchase Standard Edition Configuration.
	Standard pulumi.StringInput `pulumi:"standard"`
	// Standard Edition S2 configuration.
	StandardS2 pulumi.StringInput `pulumi:"standardS2"`
	// Postpaid unit price.
	UnitPrices GetZoneResultUnitPriceArrayInput `pulumi:"unitPrices"`
	// zone list.
	ZoneLists GetZoneResultZoneListArrayInput `pulumi:"zoneLists"`
}

func (GetZoneResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResult)(nil)).Elem()
}

func (i GetZoneResultArgs) ToGetZoneResultOutput() GetZoneResultOutput {
	return i.ToGetZoneResultOutputWithContext(context.Background())
}

func (i GetZoneResultArgs) ToGetZoneResultOutputWithContext(ctx context.Context) GetZoneResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultOutput)
}

// GetZoneResultArrayInput is an input type that accepts GetZoneResultArray and GetZoneResultArrayOutput values.
// You can construct a concrete instance of `GetZoneResultArrayInput` via:
//
//	GetZoneResultArray{ GetZoneResultArgs{...} }
type GetZoneResultArrayInput interface {
	pulumi.Input

	ToGetZoneResultArrayOutput() GetZoneResultArrayOutput
	ToGetZoneResultArrayOutputWithContext(context.Context) GetZoneResultArrayOutput
}

type GetZoneResultArray []GetZoneResultInput

func (GetZoneResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResult)(nil)).Elem()
}

func (i GetZoneResultArray) ToGetZoneResultArrayOutput() GetZoneResultArrayOutput {
	return i.ToGetZoneResultArrayOutputWithContext(context.Background())
}

func (i GetZoneResultArray) ToGetZoneResultArrayOutputWithContext(ctx context.Context) GetZoneResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultArrayOutput)
}

type GetZoneResultOutput struct{ *pulumi.OutputState }

func (GetZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResult)(nil)).Elem()
}

func (o GetZoneResultOutput) ToGetZoneResultOutput() GetZoneResultOutput {
	return o
}

func (o GetZoneResultOutput) ToGetZoneResultOutputWithContext(ctx context.Context) GetZoneResultOutput {
	return o
}

// User exclusive cluster information.
func (o GetZoneResultOutput) ClusterInfos() GetZoneResultClusterInfoArrayOutput {
	return o.ApplyT(func(v GetZoneResult) []GetZoneResultClusterInfo { return v.ClusterInfos }).(GetZoneResultClusterInfoArrayOutput)
}

// Maximum purchased bandwidth in Mbs.
func (o GetZoneResultOutput) MaxBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResult) int { return v.MaxBandwidth }).(pulumi.IntOutput)
}

// The maximum number of purchased instances.
func (o GetZoneResultOutput) MaxBuyInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResult) int { return v.MaxBuyInstanceNum }).(pulumi.IntOutput)
}

// Postpaid message unit price.
func (o GetZoneResultOutput) MessagePrices() GetZoneResultMessagePriceArrayOutput {
	return o.ApplyT(func(v GetZoneResult) []GetZoneResultMessagePrice { return v.MessagePrices }).(GetZoneResultMessagePriceArrayOutput)
}

// Physical Exclusive Edition Configuration.
func (o GetZoneResultOutput) Physical() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResult) string { return v.Physical }).(pulumi.StringOutput)
}

// Professional Edition configuration.
func (o GetZoneResultOutput) Profession() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResult) string { return v.Profession }).(pulumi.StringOutput)
}

// Public network bandwidth.
func (o GetZoneResultOutput) PublicNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResult) string { return v.PublicNetwork }).(pulumi.StringOutput)
}

// Public network bandwidth configuration.
func (o GetZoneResultOutput) PublicNetworkLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResult) string { return v.PublicNetworkLimit }).(pulumi.StringOutput)
}

// Purchase Standard Edition Configuration.
func (o GetZoneResultOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResult) string { return v.Standard }).(pulumi.StringOutput)
}

// Standard Edition S2 configuration.
func (o GetZoneResultOutput) StandardS2() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResult) string { return v.StandardS2 }).(pulumi.StringOutput)
}

// Postpaid unit price.
func (o GetZoneResultOutput) UnitPrices() GetZoneResultUnitPriceArrayOutput {
	return o.ApplyT(func(v GetZoneResult) []GetZoneResultUnitPrice { return v.UnitPrices }).(GetZoneResultUnitPriceArrayOutput)
}

// zone list.
func (o GetZoneResultOutput) ZoneLists() GetZoneResultZoneListArrayOutput {
	return o.ApplyT(func(v GetZoneResult) []GetZoneResultZoneList { return v.ZoneLists }).(GetZoneResultZoneListArrayOutput)
}

type GetZoneResultArrayOutput struct{ *pulumi.OutputState }

func (GetZoneResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResult)(nil)).Elem()
}

func (o GetZoneResultArrayOutput) ToGetZoneResultArrayOutput() GetZoneResultArrayOutput {
	return o
}

func (o GetZoneResultArrayOutput) ToGetZoneResultArrayOutputWithContext(ctx context.Context) GetZoneResultArrayOutput {
	return o
}

func (o GetZoneResultArrayOutput) Index(i pulumi.IntInput) GetZoneResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneResult {
		return vs[0].([]GetZoneResult)[vs[1].(int)]
	}).(GetZoneResultOutput)
}

type GetZoneResultClusterInfo struct {
	// The current available bandwidth of the cluster in MBs.
	AvailableBandWidth int `pulumi:"availableBandWidth"`
	// The current available disk of the cluster, in GB.
	AvailableDiskSize int `pulumi:"availableDiskSize"`
	// ClusterId.
	ClusterId int `pulumi:"clusterId"`
	// ClusterName.
	ClusterName string `pulumi:"clusterName"`
	// Maximum cluster bandwidth in MBs.
	MaxBandWidth int `pulumi:"maxBandWidth"`
	// The largest disk in the cluster, in GB.
	MaxDiskSize int `pulumi:"maxDiskSize"`
	// zone id.
	ZoneId int `pulumi:"zoneId"`
	// The availability zone where the cluster node is located. If the cluster is a cross-availability zone cluster, it includes multiple availability zones where the cluster node is located.
	ZoneIds []int `pulumi:"zoneIds"`
}

// GetZoneResultClusterInfoInput is an input type that accepts GetZoneResultClusterInfoArgs and GetZoneResultClusterInfoOutput values.
// You can construct a concrete instance of `GetZoneResultClusterInfoInput` via:
//
//	GetZoneResultClusterInfoArgs{...}
type GetZoneResultClusterInfoInput interface {
	pulumi.Input

	ToGetZoneResultClusterInfoOutput() GetZoneResultClusterInfoOutput
	ToGetZoneResultClusterInfoOutputWithContext(context.Context) GetZoneResultClusterInfoOutput
}

type GetZoneResultClusterInfoArgs struct {
	// The current available bandwidth of the cluster in MBs.
	AvailableBandWidth pulumi.IntInput `pulumi:"availableBandWidth"`
	// The current available disk of the cluster, in GB.
	AvailableDiskSize pulumi.IntInput `pulumi:"availableDiskSize"`
	// ClusterId.
	ClusterId pulumi.IntInput `pulumi:"clusterId"`
	// ClusterName.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Maximum cluster bandwidth in MBs.
	MaxBandWidth pulumi.IntInput `pulumi:"maxBandWidth"`
	// The largest disk in the cluster, in GB.
	MaxDiskSize pulumi.IntInput `pulumi:"maxDiskSize"`
	// zone id.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
	// The availability zone where the cluster node is located. If the cluster is a cross-availability zone cluster, it includes multiple availability zones where the cluster node is located.
	ZoneIds pulumi.IntArrayInput `pulumi:"zoneIds"`
}

func (GetZoneResultClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultClusterInfo)(nil)).Elem()
}

func (i GetZoneResultClusterInfoArgs) ToGetZoneResultClusterInfoOutput() GetZoneResultClusterInfoOutput {
	return i.ToGetZoneResultClusterInfoOutputWithContext(context.Background())
}

func (i GetZoneResultClusterInfoArgs) ToGetZoneResultClusterInfoOutputWithContext(ctx context.Context) GetZoneResultClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultClusterInfoOutput)
}

// GetZoneResultClusterInfoArrayInput is an input type that accepts GetZoneResultClusterInfoArray and GetZoneResultClusterInfoArrayOutput values.
// You can construct a concrete instance of `GetZoneResultClusterInfoArrayInput` via:
//
//	GetZoneResultClusterInfoArray{ GetZoneResultClusterInfoArgs{...} }
type GetZoneResultClusterInfoArrayInput interface {
	pulumi.Input

	ToGetZoneResultClusterInfoArrayOutput() GetZoneResultClusterInfoArrayOutput
	ToGetZoneResultClusterInfoArrayOutputWithContext(context.Context) GetZoneResultClusterInfoArrayOutput
}

type GetZoneResultClusterInfoArray []GetZoneResultClusterInfoInput

func (GetZoneResultClusterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultClusterInfo)(nil)).Elem()
}

func (i GetZoneResultClusterInfoArray) ToGetZoneResultClusterInfoArrayOutput() GetZoneResultClusterInfoArrayOutput {
	return i.ToGetZoneResultClusterInfoArrayOutputWithContext(context.Background())
}

func (i GetZoneResultClusterInfoArray) ToGetZoneResultClusterInfoArrayOutputWithContext(ctx context.Context) GetZoneResultClusterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultClusterInfoArrayOutput)
}

type GetZoneResultClusterInfoOutput struct{ *pulumi.OutputState }

func (GetZoneResultClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultClusterInfo)(nil)).Elem()
}

func (o GetZoneResultClusterInfoOutput) ToGetZoneResultClusterInfoOutput() GetZoneResultClusterInfoOutput {
	return o
}

func (o GetZoneResultClusterInfoOutput) ToGetZoneResultClusterInfoOutputWithContext(ctx context.Context) GetZoneResultClusterInfoOutput {
	return o
}

// The current available bandwidth of the cluster in MBs.
func (o GetZoneResultClusterInfoOutput) AvailableBandWidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) int { return v.AvailableBandWidth }).(pulumi.IntOutput)
}

// The current available disk of the cluster, in GB.
func (o GetZoneResultClusterInfoOutput) AvailableDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) int { return v.AvailableDiskSize }).(pulumi.IntOutput)
}

// ClusterId.
func (o GetZoneResultClusterInfoOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) int { return v.ClusterId }).(pulumi.IntOutput)
}

// ClusterName.
func (o GetZoneResultClusterInfoOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Maximum cluster bandwidth in MBs.
func (o GetZoneResultClusterInfoOutput) MaxBandWidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) int { return v.MaxBandWidth }).(pulumi.IntOutput)
}

// The largest disk in the cluster, in GB.
func (o GetZoneResultClusterInfoOutput) MaxDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) int { return v.MaxDiskSize }).(pulumi.IntOutput)
}

// zone id.
func (o GetZoneResultClusterInfoOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) int { return v.ZoneId }).(pulumi.IntOutput)
}

// The availability zone where the cluster node is located. If the cluster is a cross-availability zone cluster, it includes multiple availability zones where the cluster node is located.
func (o GetZoneResultClusterInfoOutput) ZoneIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZoneResultClusterInfo) []int { return v.ZoneIds }).(pulumi.IntArrayOutput)
}

type GetZoneResultClusterInfoArrayOutput struct{ *pulumi.OutputState }

func (GetZoneResultClusterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultClusterInfo)(nil)).Elem()
}

func (o GetZoneResultClusterInfoArrayOutput) ToGetZoneResultClusterInfoArrayOutput() GetZoneResultClusterInfoArrayOutput {
	return o
}

func (o GetZoneResultClusterInfoArrayOutput) ToGetZoneResultClusterInfoArrayOutputWithContext(ctx context.Context) GetZoneResultClusterInfoArrayOutput {
	return o
}

func (o GetZoneResultClusterInfoArrayOutput) Index(i pulumi.IntInput) GetZoneResultClusterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneResultClusterInfo {
		return vs[0].([]GetZoneResultClusterInfo)[vs[1].(int)]
	}).(GetZoneResultClusterInfoOutput)
}

type GetZoneResultMessagePrice struct {
	// discount price.
	RealTotalCost float64 `pulumi:"realTotalCost"`
	// original price.
	TotalCost float64 `pulumi:"totalCost"`
}

// GetZoneResultMessagePriceInput is an input type that accepts GetZoneResultMessagePriceArgs and GetZoneResultMessagePriceOutput values.
// You can construct a concrete instance of `GetZoneResultMessagePriceInput` via:
//
//	GetZoneResultMessagePriceArgs{...}
type GetZoneResultMessagePriceInput interface {
	pulumi.Input

	ToGetZoneResultMessagePriceOutput() GetZoneResultMessagePriceOutput
	ToGetZoneResultMessagePriceOutputWithContext(context.Context) GetZoneResultMessagePriceOutput
}

type GetZoneResultMessagePriceArgs struct {
	// discount price.
	RealTotalCost pulumi.Float64Input `pulumi:"realTotalCost"`
	// original price.
	TotalCost pulumi.Float64Input `pulumi:"totalCost"`
}

func (GetZoneResultMessagePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultMessagePrice)(nil)).Elem()
}

func (i GetZoneResultMessagePriceArgs) ToGetZoneResultMessagePriceOutput() GetZoneResultMessagePriceOutput {
	return i.ToGetZoneResultMessagePriceOutputWithContext(context.Background())
}

func (i GetZoneResultMessagePriceArgs) ToGetZoneResultMessagePriceOutputWithContext(ctx context.Context) GetZoneResultMessagePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultMessagePriceOutput)
}

// GetZoneResultMessagePriceArrayInput is an input type that accepts GetZoneResultMessagePriceArray and GetZoneResultMessagePriceArrayOutput values.
// You can construct a concrete instance of `GetZoneResultMessagePriceArrayInput` via:
//
//	GetZoneResultMessagePriceArray{ GetZoneResultMessagePriceArgs{...} }
type GetZoneResultMessagePriceArrayInput interface {
	pulumi.Input

	ToGetZoneResultMessagePriceArrayOutput() GetZoneResultMessagePriceArrayOutput
	ToGetZoneResultMessagePriceArrayOutputWithContext(context.Context) GetZoneResultMessagePriceArrayOutput
}

type GetZoneResultMessagePriceArray []GetZoneResultMessagePriceInput

func (GetZoneResultMessagePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultMessagePrice)(nil)).Elem()
}

func (i GetZoneResultMessagePriceArray) ToGetZoneResultMessagePriceArrayOutput() GetZoneResultMessagePriceArrayOutput {
	return i.ToGetZoneResultMessagePriceArrayOutputWithContext(context.Background())
}

func (i GetZoneResultMessagePriceArray) ToGetZoneResultMessagePriceArrayOutputWithContext(ctx context.Context) GetZoneResultMessagePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultMessagePriceArrayOutput)
}

type GetZoneResultMessagePriceOutput struct{ *pulumi.OutputState }

func (GetZoneResultMessagePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultMessagePrice)(nil)).Elem()
}

func (o GetZoneResultMessagePriceOutput) ToGetZoneResultMessagePriceOutput() GetZoneResultMessagePriceOutput {
	return o
}

func (o GetZoneResultMessagePriceOutput) ToGetZoneResultMessagePriceOutputWithContext(ctx context.Context) GetZoneResultMessagePriceOutput {
	return o
}

// discount price.
func (o GetZoneResultMessagePriceOutput) RealTotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetZoneResultMessagePrice) float64 { return v.RealTotalCost }).(pulumi.Float64Output)
}

// original price.
func (o GetZoneResultMessagePriceOutput) TotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetZoneResultMessagePrice) float64 { return v.TotalCost }).(pulumi.Float64Output)
}

type GetZoneResultMessagePriceArrayOutput struct{ *pulumi.OutputState }

func (GetZoneResultMessagePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultMessagePrice)(nil)).Elem()
}

func (o GetZoneResultMessagePriceArrayOutput) ToGetZoneResultMessagePriceArrayOutput() GetZoneResultMessagePriceArrayOutput {
	return o
}

func (o GetZoneResultMessagePriceArrayOutput) ToGetZoneResultMessagePriceArrayOutputWithContext(ctx context.Context) GetZoneResultMessagePriceArrayOutput {
	return o
}

func (o GetZoneResultMessagePriceArrayOutput) Index(i pulumi.IntInput) GetZoneResultMessagePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneResultMessagePrice {
		return vs[0].([]GetZoneResultMessagePrice)[vs[1].(int)]
	}).(GetZoneResultMessagePriceOutput)
}

type GetZoneResultUnitPrice struct {
	// discount price.
	RealTotalCost float64 `pulumi:"realTotalCost"`
	// original price.
	TotalCost float64 `pulumi:"totalCost"`
}

// GetZoneResultUnitPriceInput is an input type that accepts GetZoneResultUnitPriceArgs and GetZoneResultUnitPriceOutput values.
// You can construct a concrete instance of `GetZoneResultUnitPriceInput` via:
//
//	GetZoneResultUnitPriceArgs{...}
type GetZoneResultUnitPriceInput interface {
	pulumi.Input

	ToGetZoneResultUnitPriceOutput() GetZoneResultUnitPriceOutput
	ToGetZoneResultUnitPriceOutputWithContext(context.Context) GetZoneResultUnitPriceOutput
}

type GetZoneResultUnitPriceArgs struct {
	// discount price.
	RealTotalCost pulumi.Float64Input `pulumi:"realTotalCost"`
	// original price.
	TotalCost pulumi.Float64Input `pulumi:"totalCost"`
}

func (GetZoneResultUnitPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultUnitPrice)(nil)).Elem()
}

func (i GetZoneResultUnitPriceArgs) ToGetZoneResultUnitPriceOutput() GetZoneResultUnitPriceOutput {
	return i.ToGetZoneResultUnitPriceOutputWithContext(context.Background())
}

func (i GetZoneResultUnitPriceArgs) ToGetZoneResultUnitPriceOutputWithContext(ctx context.Context) GetZoneResultUnitPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultUnitPriceOutput)
}

// GetZoneResultUnitPriceArrayInput is an input type that accepts GetZoneResultUnitPriceArray and GetZoneResultUnitPriceArrayOutput values.
// You can construct a concrete instance of `GetZoneResultUnitPriceArrayInput` via:
//
//	GetZoneResultUnitPriceArray{ GetZoneResultUnitPriceArgs{...} }
type GetZoneResultUnitPriceArrayInput interface {
	pulumi.Input

	ToGetZoneResultUnitPriceArrayOutput() GetZoneResultUnitPriceArrayOutput
	ToGetZoneResultUnitPriceArrayOutputWithContext(context.Context) GetZoneResultUnitPriceArrayOutput
}

type GetZoneResultUnitPriceArray []GetZoneResultUnitPriceInput

func (GetZoneResultUnitPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultUnitPrice)(nil)).Elem()
}

func (i GetZoneResultUnitPriceArray) ToGetZoneResultUnitPriceArrayOutput() GetZoneResultUnitPriceArrayOutput {
	return i.ToGetZoneResultUnitPriceArrayOutputWithContext(context.Background())
}

func (i GetZoneResultUnitPriceArray) ToGetZoneResultUnitPriceArrayOutputWithContext(ctx context.Context) GetZoneResultUnitPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultUnitPriceArrayOutput)
}

type GetZoneResultUnitPriceOutput struct{ *pulumi.OutputState }

func (GetZoneResultUnitPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultUnitPrice)(nil)).Elem()
}

func (o GetZoneResultUnitPriceOutput) ToGetZoneResultUnitPriceOutput() GetZoneResultUnitPriceOutput {
	return o
}

func (o GetZoneResultUnitPriceOutput) ToGetZoneResultUnitPriceOutputWithContext(ctx context.Context) GetZoneResultUnitPriceOutput {
	return o
}

// discount price.
func (o GetZoneResultUnitPriceOutput) RealTotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetZoneResultUnitPrice) float64 { return v.RealTotalCost }).(pulumi.Float64Output)
}

// original price.
func (o GetZoneResultUnitPriceOutput) TotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetZoneResultUnitPrice) float64 { return v.TotalCost }).(pulumi.Float64Output)
}

type GetZoneResultUnitPriceArrayOutput struct{ *pulumi.OutputState }

func (GetZoneResultUnitPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultUnitPrice)(nil)).Elem()
}

func (o GetZoneResultUnitPriceArrayOutput) ToGetZoneResultUnitPriceArrayOutput() GetZoneResultUnitPriceArrayOutput {
	return o
}

func (o GetZoneResultUnitPriceArrayOutput) ToGetZoneResultUnitPriceArrayOutputWithContext(ctx context.Context) GetZoneResultUnitPriceArrayOutput {
	return o
}

func (o GetZoneResultUnitPriceArrayOutput) Index(i pulumi.IntInput) GetZoneResultUnitPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneResultUnitPrice {
		return vs[0].([]GetZoneResultUnitPrice)[vs[1].(int)]
	}).(GetZoneResultUnitPriceOutput)
}

type GetZoneResultZoneList struct {
	// app id.
	AppId int `pulumi:"appId"`
	// extra flag.
	Exflag string `pulumi:"exflag"`
	// Manually set flags.
	Flag bool `pulumi:"flag"`
	// internal APP.
	IsInternalApp int `pulumi:"isInternalApp"`
	// Standard Edition Sold Out Information.
	SalesInfos []GetZoneResultZoneListSalesInfo `pulumi:"salesInfos"`
	// json object, key is model, value true is sold out, false is not sold out.
	SoldOut string `pulumi:"soldOut"`
	// zone id.
	ZoneId string `pulumi:"zoneId"`
	// zone name.
	ZoneName string `pulumi:"zoneName"`
	// zone status.
	ZoneStatus int `pulumi:"zoneStatus"`
}

// GetZoneResultZoneListInput is an input type that accepts GetZoneResultZoneListArgs and GetZoneResultZoneListOutput values.
// You can construct a concrete instance of `GetZoneResultZoneListInput` via:
//
//	GetZoneResultZoneListArgs{...}
type GetZoneResultZoneListInput interface {
	pulumi.Input

	ToGetZoneResultZoneListOutput() GetZoneResultZoneListOutput
	ToGetZoneResultZoneListOutputWithContext(context.Context) GetZoneResultZoneListOutput
}

type GetZoneResultZoneListArgs struct {
	// app id.
	AppId pulumi.IntInput `pulumi:"appId"`
	// extra flag.
	Exflag pulumi.StringInput `pulumi:"exflag"`
	// Manually set flags.
	Flag pulumi.BoolInput `pulumi:"flag"`
	// internal APP.
	IsInternalApp pulumi.IntInput `pulumi:"isInternalApp"`
	// Standard Edition Sold Out Information.
	SalesInfos GetZoneResultZoneListSalesInfoArrayInput `pulumi:"salesInfos"`
	// json object, key is model, value true is sold out, false is not sold out.
	SoldOut pulumi.StringInput `pulumi:"soldOut"`
	// zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// zone name.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
	// zone status.
	ZoneStatus pulumi.IntInput `pulumi:"zoneStatus"`
}

func (GetZoneResultZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultZoneList)(nil)).Elem()
}

func (i GetZoneResultZoneListArgs) ToGetZoneResultZoneListOutput() GetZoneResultZoneListOutput {
	return i.ToGetZoneResultZoneListOutputWithContext(context.Background())
}

func (i GetZoneResultZoneListArgs) ToGetZoneResultZoneListOutputWithContext(ctx context.Context) GetZoneResultZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultZoneListOutput)
}

// GetZoneResultZoneListArrayInput is an input type that accepts GetZoneResultZoneListArray and GetZoneResultZoneListArrayOutput values.
// You can construct a concrete instance of `GetZoneResultZoneListArrayInput` via:
//
//	GetZoneResultZoneListArray{ GetZoneResultZoneListArgs{...} }
type GetZoneResultZoneListArrayInput interface {
	pulumi.Input

	ToGetZoneResultZoneListArrayOutput() GetZoneResultZoneListArrayOutput
	ToGetZoneResultZoneListArrayOutputWithContext(context.Context) GetZoneResultZoneListArrayOutput
}

type GetZoneResultZoneListArray []GetZoneResultZoneListInput

func (GetZoneResultZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultZoneList)(nil)).Elem()
}

func (i GetZoneResultZoneListArray) ToGetZoneResultZoneListArrayOutput() GetZoneResultZoneListArrayOutput {
	return i.ToGetZoneResultZoneListArrayOutputWithContext(context.Background())
}

func (i GetZoneResultZoneListArray) ToGetZoneResultZoneListArrayOutputWithContext(ctx context.Context) GetZoneResultZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultZoneListArrayOutput)
}

type GetZoneResultZoneListOutput struct{ *pulumi.OutputState }

func (GetZoneResultZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultZoneList)(nil)).Elem()
}

func (o GetZoneResultZoneListOutput) ToGetZoneResultZoneListOutput() GetZoneResultZoneListOutput {
	return o
}

func (o GetZoneResultZoneListOutput) ToGetZoneResultZoneListOutputWithContext(ctx context.Context) GetZoneResultZoneListOutput {
	return o
}

// app id.
func (o GetZoneResultZoneListOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) int { return v.AppId }).(pulumi.IntOutput)
}

// extra flag.
func (o GetZoneResultZoneListOutput) Exflag() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) string { return v.Exflag }).(pulumi.StringOutput)
}

// Manually set flags.
func (o GetZoneResultZoneListOutput) Flag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) bool { return v.Flag }).(pulumi.BoolOutput)
}

// internal APP.
func (o GetZoneResultZoneListOutput) IsInternalApp() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) int { return v.IsInternalApp }).(pulumi.IntOutput)
}

// Standard Edition Sold Out Information.
func (o GetZoneResultZoneListOutput) SalesInfos() GetZoneResultZoneListSalesInfoArrayOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) []GetZoneResultZoneListSalesInfo { return v.SalesInfos }).(GetZoneResultZoneListSalesInfoArrayOutput)
}

// json object, key is model, value true is sold out, false is not sold out.
func (o GetZoneResultZoneListOutput) SoldOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) string { return v.SoldOut }).(pulumi.StringOutput)
}

// zone id.
func (o GetZoneResultZoneListOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) string { return v.ZoneId }).(pulumi.StringOutput)
}

// zone name.
func (o GetZoneResultZoneListOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) string { return v.ZoneName }).(pulumi.StringOutput)
}

// zone status.
func (o GetZoneResultZoneListOutput) ZoneStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneResultZoneList) int { return v.ZoneStatus }).(pulumi.IntOutput)
}

type GetZoneResultZoneListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneResultZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultZoneList)(nil)).Elem()
}

func (o GetZoneResultZoneListArrayOutput) ToGetZoneResultZoneListArrayOutput() GetZoneResultZoneListArrayOutput {
	return o
}

func (o GetZoneResultZoneListArrayOutput) ToGetZoneResultZoneListArrayOutputWithContext(ctx context.Context) GetZoneResultZoneListArrayOutput {
	return o
}

func (o GetZoneResultZoneListArrayOutput) Index(i pulumi.IntInput) GetZoneResultZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneResultZoneList {
		return vs[0].([]GetZoneResultZoneList)[vs[1].(int)]
	}).(GetZoneResultZoneListOutput)
}

type GetZoneResultZoneListSalesInfo struct {
	// Manually set flags.
	Flag bool `pulumi:"flag"`
	// Professional Edition, Standard Edition flag.
	Platform string `pulumi:"platform"`
	// json object, key is model, value true is sold out, false is not sold out.
	SoldOut bool `pulumi:"soldOut"`
	// ckakfa version(1.1.1/2.4.2/0.10.2).
	Version string `pulumi:"version"`
}

// GetZoneResultZoneListSalesInfoInput is an input type that accepts GetZoneResultZoneListSalesInfoArgs and GetZoneResultZoneListSalesInfoOutput values.
// You can construct a concrete instance of `GetZoneResultZoneListSalesInfoInput` via:
//
//	GetZoneResultZoneListSalesInfoArgs{...}
type GetZoneResultZoneListSalesInfoInput interface {
	pulumi.Input

	ToGetZoneResultZoneListSalesInfoOutput() GetZoneResultZoneListSalesInfoOutput
	ToGetZoneResultZoneListSalesInfoOutputWithContext(context.Context) GetZoneResultZoneListSalesInfoOutput
}

type GetZoneResultZoneListSalesInfoArgs struct {
	// Manually set flags.
	Flag pulumi.BoolInput `pulumi:"flag"`
	// Professional Edition, Standard Edition flag.
	Platform pulumi.StringInput `pulumi:"platform"`
	// json object, key is model, value true is sold out, false is not sold out.
	SoldOut pulumi.BoolInput `pulumi:"soldOut"`
	// ckakfa version(1.1.1/2.4.2/0.10.2).
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetZoneResultZoneListSalesInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultZoneListSalesInfo)(nil)).Elem()
}

func (i GetZoneResultZoneListSalesInfoArgs) ToGetZoneResultZoneListSalesInfoOutput() GetZoneResultZoneListSalesInfoOutput {
	return i.ToGetZoneResultZoneListSalesInfoOutputWithContext(context.Background())
}

func (i GetZoneResultZoneListSalesInfoArgs) ToGetZoneResultZoneListSalesInfoOutputWithContext(ctx context.Context) GetZoneResultZoneListSalesInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultZoneListSalesInfoOutput)
}

// GetZoneResultZoneListSalesInfoArrayInput is an input type that accepts GetZoneResultZoneListSalesInfoArray and GetZoneResultZoneListSalesInfoArrayOutput values.
// You can construct a concrete instance of `GetZoneResultZoneListSalesInfoArrayInput` via:
//
//	GetZoneResultZoneListSalesInfoArray{ GetZoneResultZoneListSalesInfoArgs{...} }
type GetZoneResultZoneListSalesInfoArrayInput interface {
	pulumi.Input

	ToGetZoneResultZoneListSalesInfoArrayOutput() GetZoneResultZoneListSalesInfoArrayOutput
	ToGetZoneResultZoneListSalesInfoArrayOutputWithContext(context.Context) GetZoneResultZoneListSalesInfoArrayOutput
}

type GetZoneResultZoneListSalesInfoArray []GetZoneResultZoneListSalesInfoInput

func (GetZoneResultZoneListSalesInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultZoneListSalesInfo)(nil)).Elem()
}

func (i GetZoneResultZoneListSalesInfoArray) ToGetZoneResultZoneListSalesInfoArrayOutput() GetZoneResultZoneListSalesInfoArrayOutput {
	return i.ToGetZoneResultZoneListSalesInfoArrayOutputWithContext(context.Background())
}

func (i GetZoneResultZoneListSalesInfoArray) ToGetZoneResultZoneListSalesInfoArrayOutputWithContext(ctx context.Context) GetZoneResultZoneListSalesInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneResultZoneListSalesInfoArrayOutput)
}

type GetZoneResultZoneListSalesInfoOutput struct{ *pulumi.OutputState }

func (GetZoneResultZoneListSalesInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneResultZoneListSalesInfo)(nil)).Elem()
}

func (o GetZoneResultZoneListSalesInfoOutput) ToGetZoneResultZoneListSalesInfoOutput() GetZoneResultZoneListSalesInfoOutput {
	return o
}

func (o GetZoneResultZoneListSalesInfoOutput) ToGetZoneResultZoneListSalesInfoOutputWithContext(ctx context.Context) GetZoneResultZoneListSalesInfoOutput {
	return o
}

// Manually set flags.
func (o GetZoneResultZoneListSalesInfoOutput) Flag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZoneResultZoneListSalesInfo) bool { return v.Flag }).(pulumi.BoolOutput)
}

// Professional Edition, Standard Edition flag.
func (o GetZoneResultZoneListSalesInfoOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultZoneListSalesInfo) string { return v.Platform }).(pulumi.StringOutput)
}

// json object, key is model, value true is sold out, false is not sold out.
func (o GetZoneResultZoneListSalesInfoOutput) SoldOut() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZoneResultZoneListSalesInfo) bool { return v.SoldOut }).(pulumi.BoolOutput)
}

// ckakfa version(1.1.1/2.4.2/0.10.2).
func (o GetZoneResultZoneListSalesInfoOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneResultZoneListSalesInfo) string { return v.Version }).(pulumi.StringOutput)
}

type GetZoneResultZoneListSalesInfoArrayOutput struct{ *pulumi.OutputState }

func (GetZoneResultZoneListSalesInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneResultZoneListSalesInfo)(nil)).Elem()
}

func (o GetZoneResultZoneListSalesInfoArrayOutput) ToGetZoneResultZoneListSalesInfoArrayOutput() GetZoneResultZoneListSalesInfoArrayOutput {
	return o
}

func (o GetZoneResultZoneListSalesInfoArrayOutput) ToGetZoneResultZoneListSalesInfoArrayOutputWithContext(ctx context.Context) GetZoneResultZoneListSalesInfoArrayOutput {
	return o
}

func (o GetZoneResultZoneListSalesInfoArrayOutput) Index(i pulumi.IntInput) GetZoneResultZoneListSalesInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneResultZoneListSalesInfo {
		return vs[0].([]GetZoneResultZoneListSalesInfo)[vs[1].(int)]
	}).(GetZoneResultZoneListSalesInfoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleRuleListInput)(nil)).Elem(), AclRuleRuleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleRuleListArrayInput)(nil)).Elem(), AclRuleRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceClickhouseConnectParamInput)(nil)).Elem(), ConnectResourceClickhouseConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceClickhouseConnectParamPtrInput)(nil)).Elem(), ConnectResourceClickhouseConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDorisConnectParamInput)(nil)).Elem(), ConnectResourceDorisConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDorisConnectParamPtrInput)(nil)).Elem(), ConnectResourceDorisConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDtsConnectParamInput)(nil)).Elem(), ConnectResourceDtsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceDtsConnectParamPtrInput)(nil)).Elem(), ConnectResourceDtsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceEsConnectParamInput)(nil)).Elem(), ConnectResourceEsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceEsConnectParamPtrInput)(nil)).Elem(), ConnectResourceEsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceKafkaConnectParamInput)(nil)).Elem(), ConnectResourceKafkaConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceKafkaConnectParamPtrInput)(nil)).Elem(), ConnectResourceKafkaConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMariadbConnectParamInput)(nil)).Elem(), ConnectResourceMariadbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMariadbConnectParamPtrInput)(nil)).Elem(), ConnectResourceMariadbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMongodbConnectParamInput)(nil)).Elem(), ConnectResourceMongodbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMongodbConnectParamPtrInput)(nil)).Elem(), ConnectResourceMongodbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMysqlConnectParamInput)(nil)).Elem(), ConnectResourceMysqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceMysqlConnectParamPtrInput)(nil)).Elem(), ConnectResourceMysqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourcePostgresqlConnectParamInput)(nil)).Elem(), ConnectResourcePostgresqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourcePostgresqlConnectParamPtrInput)(nil)).Elem(), ConnectResourcePostgresqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceSqlserverConnectParamInput)(nil)).Elem(), ConnectResourceSqlserverConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectResourceSqlserverConnectParamPtrInput)(nil)).Elem(), ConnectResourceSqlserverConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceInput)(nil)).Elem(), DatahubTaskSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourcePtrInput)(nil)).Elem(), DatahubTaskSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamInput)(nil)).Elem(), DatahubTaskSourceResourceClickHouseParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceClickHouseParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamDropClsInput)(nil)).Elem(), DatahubTaskSourceResourceClickHouseParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamDropClsPtrInput)(nil)).Elem(), DatahubTaskSourceResourceClickHouseParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamSchemaInput)(nil)).Elem(), DatahubTaskSourceResourceClickHouseParamSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClickHouseParamSchemaArrayInput)(nil)).Elem(), DatahubTaskSourceResourceClickHouseParamSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClsParamInput)(nil)).Elem(), DatahubTaskSourceResourceClsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceClsParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceClsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceCosParamInput)(nil)).Elem(), DatahubTaskSourceResourceCosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceCosParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceCosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceCtsdbParamInput)(nil)).Elem(), DatahubTaskSourceResourceCtsdbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceCtsdbParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceCtsdbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceDtsParamInput)(nil)).Elem(), DatahubTaskSourceResourceDtsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceDtsParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceDtsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropClsInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropClsPtrInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqPtrInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParamInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqTopicParamInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceEsParamDropDlqTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEventBusParamInput)(nil)).Elem(), DatahubTaskSourceResourceEventBusParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceEventBusParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceEventBusParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceKafkaParamInput)(nil)).Elem(), DatahubTaskSourceResourceKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceKafkaParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceKafkaParamTableMappingInput)(nil)).Elem(), DatahubTaskSourceResourceKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceKafkaParamTableMappingArrayInput)(nil)).Elem(), DatahubTaskSourceResourceKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMariaDbParamInput)(nil)).Elem(), DatahubTaskSourceResourceMariaDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMariaDbParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceMariaDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMongoDbParamInput)(nil)).Elem(), DatahubTaskSourceResourceMongoDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMongoDbParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceMongoDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamInput)(nil)).Elem(), DatahubTaskSourceResourceMySqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceMySqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingInput)(nil)).Elem(), DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDropClsInput)(nil)).Elem(), DatahubTaskSourceResourceMySqlParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceMySqlParamDropClsPtrInput)(nil)).Elem(), DatahubTaskSourceResourceMySqlParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParamInput)(nil)).Elem(), DatahubTaskSourceResourcePostgreSqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourcePostgreSqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingInput)(nil)).Elem(), DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceScfParamInput)(nil)).Elem(), DatahubTaskSourceResourceScfParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceScfParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceScfParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceSqlServerParamInput)(nil)).Elem(), DatahubTaskSourceResourceSqlServerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceSqlServerParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceSqlServerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceTdwParamInput)(nil)).Elem(), DatahubTaskSourceResourceTdwParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceTdwParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceTdwParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceTopicParamInput)(nil)).Elem(), DatahubTaskSourceResourceTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskSourceResourceTopicParamPtrInput)(nil)).Elem(), DatahubTaskSourceResourceTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceInput)(nil)).Elem(), DatahubTaskTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourcePtrInput)(nil)).Elem(), DatahubTaskTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamInput)(nil)).Elem(), DatahubTaskTargetResourceClickHouseParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceClickHouseParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamDropClsInput)(nil)).Elem(), DatahubTaskTargetResourceClickHouseParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamDropClsPtrInput)(nil)).Elem(), DatahubTaskTargetResourceClickHouseParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamSchemaInput)(nil)).Elem(), DatahubTaskTargetResourceClickHouseParamSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClickHouseParamSchemaArrayInput)(nil)).Elem(), DatahubTaskTargetResourceClickHouseParamSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClsParamInput)(nil)).Elem(), DatahubTaskTargetResourceClsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceClsParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceClsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceCosParamInput)(nil)).Elem(), DatahubTaskTargetResourceCosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceCosParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceCosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceCtsdbParamInput)(nil)).Elem(), DatahubTaskTargetResourceCtsdbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceCtsdbParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceCtsdbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceDtsParamInput)(nil)).Elem(), DatahubTaskTargetResourceDtsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceDtsParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceDtsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropClsInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropClsPtrInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqPtrInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParamInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqTopicParamInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceEsParamDropDlqTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEventBusParamInput)(nil)).Elem(), DatahubTaskTargetResourceEventBusParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceEventBusParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceEventBusParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceKafkaParamInput)(nil)).Elem(), DatahubTaskTargetResourceKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceKafkaParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceKafkaParamTableMappingInput)(nil)).Elem(), DatahubTaskTargetResourceKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceKafkaParamTableMappingArrayInput)(nil)).Elem(), DatahubTaskTargetResourceKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMariaDbParamInput)(nil)).Elem(), DatahubTaskTargetResourceMariaDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMariaDbParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceMariaDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMongoDbParamInput)(nil)).Elem(), DatahubTaskTargetResourceMongoDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMongoDbParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceMongoDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamInput)(nil)).Elem(), DatahubTaskTargetResourceMySqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceMySqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingInput)(nil)).Elem(), DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDropClsInput)(nil)).Elem(), DatahubTaskTargetResourceMySqlParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceMySqlParamDropClsPtrInput)(nil)).Elem(), DatahubTaskTargetResourceMySqlParamDropClsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParamInput)(nil)).Elem(), DatahubTaskTargetResourcePostgreSqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourcePostgreSqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingInput)(nil)).Elem(), DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceScfParamInput)(nil)).Elem(), DatahubTaskTargetResourceScfParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceScfParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceScfParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceSqlServerParamInput)(nil)).Elem(), DatahubTaskTargetResourceSqlServerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceSqlServerParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceSqlServerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceTdwParamInput)(nil)).Elem(), DatahubTaskTargetResourceTdwParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceTdwParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceTdwParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceTopicParamInput)(nil)).Elem(), DatahubTaskTargetResourceTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTargetResourceTopicParamPtrInput)(nil)).Elem(), DatahubTaskTargetResourceTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamInput)(nil)).Elem(), DatahubTaskTransformParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamPtrInput)(nil)).Elem(), DatahubTaskTransformParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamAnalyseResultInput)(nil)).Elem(), DatahubTaskTransformParamAnalyseResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamAnalyseResultArrayInput)(nil)).Elem(), DatahubTaskTransformParamAnalyseResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamPtrInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParamInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParamPtrInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParamTableMappingInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamTopicParamInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFailureParamTopicParamPtrInput)(nil)).Elem(), DatahubTaskTransformParamFailureParamTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFilterParamInput)(nil)).Elem(), DatahubTaskTransformParamFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamFilterParamArrayInput)(nil)).Elem(), DatahubTaskTransformParamFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamMapParamInput)(nil)).Elem(), DatahubTaskTransformParamMapParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformParamMapParamArrayInput)(nil)).Elem(), DatahubTaskTransformParamMapParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamInput)(nil)).Elem(), DatahubTaskTransformsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamPtrInput)(nil)).Elem(), DatahubTaskTransformsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamBatchAnalyseInput)(nil)).Elem(), DatahubTaskTransformsParamBatchAnalyseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamBatchAnalysePtrInput)(nil)).Elem(), DatahubTaskTransformsParamBatchAnalyseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParamInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParamPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParamTableMappingInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamTopicParamInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFailureParamTopicParamPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFailureParamTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperatePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateDateInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateKVInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateKVArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSplitInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrInput)(nil)).Elem(), DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFilterParamInput)(nil)).Elem(), DatahubTaskTransformsParamFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamFilterParamArrayInput)(nil)).Elem(), DatahubTaskTransformsParamFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamRowParamInput)(nil)).Elem(), DatahubTaskTransformsParamRowParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatahubTaskTransformsParamRowParamPtrInput)(nil)).Elem(), DatahubTaskTransformsParamRowParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigPtrInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDynamicRetentionConfigInput)(nil)).Elem(), InstanceDynamicRetentionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDynamicRetentionConfigPtrInput)(nil)).Elem(), InstanceDynamicRetentionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteBrokerVipListInput)(nil)).Elem(), RouteBrokerVipListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteBrokerVipListArrayInput)(nil)).Elem(), RouteBrokerVipListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteVipListInput)(nil)).Elem(), RouteVipListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteVipListArrayInput)(nil)).Elem(), RouteVipListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListInput)(nil)).Elem(), GetAclsAclListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclListArrayInput)(nil)).Elem(), GetAclsAclListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultInput)(nil)).Elem(), GetConnectResourceResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultArrayInput)(nil)).Elem(), GetConnectResourceResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListClickhouseConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListClickhouseConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListClickhouseConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListCtsdbConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListCtsdbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListCtsdbConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListDorisConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListDorisConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListDorisConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListDorisConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListDtsConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListDtsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListDtsConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListDtsConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListEsConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListEsConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListEsConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListEsConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListKafkaConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListKafkaConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListKafkaConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListKafkaConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListMariaDbConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListMariaDbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListMariaDbConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListMongoDbConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListMongoDbConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListMongoDbConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListMysqlConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListMysqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListMysqlConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListMysqlConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListPostgreSqlConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListSqlServerConnectParamInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListSqlServerConnectParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayInput)(nil)).Elem(), GetConnectResourceResultConnectResourceListSqlServerConnectParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubGroupOffsetsTopicListInput)(nil)).Elem(), GetDatahubGroupOffsetsTopicListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubGroupOffsetsTopicListArrayInput)(nil)).Elem(), GetDatahubGroupOffsetsTopicListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubGroupOffsetsTopicListPartitionInput)(nil)).Elem(), GetDatahubGroupOffsetsTopicListPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubGroupOffsetsTopicListPartitionArrayInput)(nil)).Elem(), GetDatahubGroupOffsetsTopicListPartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListInput)(nil)).Elem(), GetDatahubTaskTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListArrayInput)(nil)).Elem(), GetDatahubTaskTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClickHouseParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClickHouseParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamDropClInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClsParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceClsParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceClsParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCosParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceCosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCosParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceCosParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCtsdbParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceCtsdbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceCtsdbParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceCtsdbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceDtsParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceDtsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceDtsParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceDtsParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropClInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropClArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropClArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropClArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEventBusParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEventBusParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceEventBusParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceEventBusParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceKafkaParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMariaDbParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMariaDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMariaDbParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMariaDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMongoDbParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMongoDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMongoDbParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMongoDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMySqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMySqlParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDropClInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMySqlParamDropClArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceMySqlParamDropClArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourcePostgreSqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourcePostgreSqlParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceScfParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceScfParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceScfParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceScfParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceSqlServerParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceSqlServerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceSqlServerParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceSqlServerParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTdwParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceTdwParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTdwParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceTdwParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTopicParamInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListSourceResourceTopicParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListSourceResourceTopicParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClickHouseParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClickHouseParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamDropClInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClsParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceClsParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceClsParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCosParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceCosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCosParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceCosParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCtsdbParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceCtsdbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceCtsdbParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceCtsdbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceDtsParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceDtsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceDtsParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceDtsParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropClInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropClArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropClArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropClArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEventBusParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEventBusParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceEventBusParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceEventBusParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceKafkaParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceKafkaParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMariaDbParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMariaDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMariaDbParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMariaDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMongoDbParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMongoDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMongoDbParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMongoDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMySqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMySqlParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDropClInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMySqlParamDropClArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceMySqlParamDropClArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourcePostgreSqlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourcePostgreSqlParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceScfParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceScfParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceScfParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceScfParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceSqlServerParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceSqlServerParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceSqlServerParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceSqlServerParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTdwParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceTdwParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTdwParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceTdwParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTopicParamInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceTopicParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTaskTaskListTargetResourceTopicParamArrayInput)(nil)).Elem(), GetDatahubTaskTaskListTargetResourceTopicParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTopicTopicListInput)(nil)).Elem(), GetDatahubTopicTopicListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatahubTopicTopicListArrayInput)(nil)).Elem(), GetDatahubTopicTopicListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupGroupListInput)(nil)).Elem(), GetGroupGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupGroupListArrayInput)(nil)).Elem(), GetGroupGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultInput)(nil)).Elem(), GetGroupInfoResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultArrayInput)(nil)).Elem(), GetGroupInfoResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultMemberInput)(nil)).Elem(), GetGroupInfoResultMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultMemberArrayInput)(nil)).Elem(), GetGroupInfoResultMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultMemberAssignmentInput)(nil)).Elem(), GetGroupInfoResultMemberAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultMemberAssignmentArrayInput)(nil)).Elem(), GetGroupInfoResultMemberAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultMemberAssignmentTopicInput)(nil)).Elem(), GetGroupInfoResultMemberAssignmentTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupInfoResultMemberAssignmentTopicArrayInput)(nil)).Elem(), GetGroupInfoResultMemberAssignmentTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupOffsetsTopicListInput)(nil)).Elem(), GetGroupOffsetsTopicListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupOffsetsTopicListArrayInput)(nil)).Elem(), GetGroupOffsetsTopicListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupOffsetsTopicListPartitionInput)(nil)).Elem(), GetGroupOffsetsTopicListPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupOffsetsTopicListPartitionArrayInput)(nil)).Elem(), GetGroupOffsetsTopicListPartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListTagInput)(nil)).Elem(), GetInstancesInstanceListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListTagArrayInput)(nil)).Elem(), GetInstancesInstanceListTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListVipListInput)(nil)).Elem(), GetInstancesInstanceListVipListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionResultInput)(nil)).Elem(), GetRegionResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionResultArrayInput)(nil)).Elem(), GetRegionResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTaskStatusResultInput)(nil)).Elem(), GetTaskStatusResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTaskStatusResultArrayInput)(nil)).Elem(), GetTaskStatusResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultInput)(nil)).Elem(), GetTopicFlowRankingResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultArrayInput)(nil)).Elem(), GetTopicFlowRankingResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultConsumeSpeedInput)(nil)).Elem(), GetTopicFlowRankingResultConsumeSpeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultConsumeSpeedArrayInput)(nil)).Elem(), GetTopicFlowRankingResultConsumeSpeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultTopicFlowInput)(nil)).Elem(), GetTopicFlowRankingResultTopicFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultTopicFlowArrayInput)(nil)).Elem(), GetTopicFlowRankingResultTopicFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultTopicMessageHeapInput)(nil)).Elem(), GetTopicFlowRankingResultTopicMessageHeapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFlowRankingResultTopicMessageHeapArrayInput)(nil)).Elem(), GetTopicFlowRankingResultTopicMessageHeapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicProduceConnectionResultInput)(nil)).Elem(), GetTopicProduceConnectionResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicProduceConnectionResultArrayInput)(nil)).Elem(), GetTopicProduceConnectionResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoArrayInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberArrayInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignmentInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoMemberAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoMemberAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayInput)(nil)).Elem(), GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSyncReplicaTopicInSyncReplicaListInput)(nil)).Elem(), GetTopicSyncReplicaTopicInSyncReplicaListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicSyncReplicaTopicInSyncReplicaListArrayInput)(nil)).Elem(), GetTopicSyncReplicaTopicInSyncReplicaListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsInstanceListInput)(nil)).Elem(), GetTopicsInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsInstanceListArrayInput)(nil)).Elem(), GetTopicsInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserListInput)(nil)).Elem(), GetUsersUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserListArrayInput)(nil)).Elem(), GetUsersUserListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultInput)(nil)).Elem(), GetZoneResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultArrayInput)(nil)).Elem(), GetZoneResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultClusterInfoInput)(nil)).Elem(), GetZoneResultClusterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultClusterInfoArrayInput)(nil)).Elem(), GetZoneResultClusterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultMessagePriceInput)(nil)).Elem(), GetZoneResultMessagePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultMessagePriceArrayInput)(nil)).Elem(), GetZoneResultMessagePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultUnitPriceInput)(nil)).Elem(), GetZoneResultUnitPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultUnitPriceArrayInput)(nil)).Elem(), GetZoneResultUnitPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultZoneListInput)(nil)).Elem(), GetZoneResultZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultZoneListArrayInput)(nil)).Elem(), GetZoneResultZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultZoneListSalesInfoInput)(nil)).Elem(), GetZoneResultZoneListSalesInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneResultZoneListSalesInfoArrayInput)(nil)).Elem(), GetZoneResultZoneListSalesInfoArray{})
	pulumi.RegisterOutputType(AclRuleRuleListOutput{})
	pulumi.RegisterOutputType(AclRuleRuleListArrayOutput{})
	pulumi.RegisterOutputType(ConnectResourceClickhouseConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceClickhouseConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceDorisConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceDorisConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceDtsConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceDtsConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceEsConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceEsConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceKafkaConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceKafkaConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceMariadbConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceMariadbConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceMongodbConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceMongodbConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceMysqlConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceMysqlConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourcePostgresqlConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourcePostgresqlConnectParamPtrOutput{})
	pulumi.RegisterOutputType(ConnectResourceSqlserverConnectParamOutput{})
	pulumi.RegisterOutputType(ConnectResourceSqlserverConnectParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourcePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClickHouseParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClickHouseParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClickHouseParamDropClsOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClickHouseParamDropClsPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClickHouseParamSchemaOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClickHouseParamSchemaArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceClsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceCosParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceCosParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceCtsdbParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceCtsdbParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceDtsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceDtsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropClsOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropClsPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqKafkaParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqKafkaParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqTopicParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEsParamDropDlqTopicParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEventBusParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceEventBusParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceKafkaParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceKafkaParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMariaDbParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMariaDbParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMongoDbParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMongoDbParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMySqlParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMySqlParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMySqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMySqlParamDropClsOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceMySqlParamDropClsPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourcePostgreSqlParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourcePostgreSqlParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceScfParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceScfParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceSqlServerParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceSqlServerParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceTdwParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceTdwParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceTopicParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskSourceResourceTopicParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourcePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClickHouseParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClickHouseParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClickHouseParamDropClsOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClickHouseParamDropClsPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClickHouseParamSchemaOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClickHouseParamSchemaArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceClsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceCosParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceCosParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceCtsdbParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceCtsdbParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceDtsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceDtsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropClsOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropClsPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqKafkaParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqKafkaParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqTopicParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEsParamDropDlqTopicParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEventBusParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceEventBusParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceKafkaParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceKafkaParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMariaDbParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMariaDbParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMongoDbParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMongoDbParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMySqlParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMySqlParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMySqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMySqlParamDropClsOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceMySqlParamDropClsPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourcePostgreSqlParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourcePostgreSqlParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceScfParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceScfParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceSqlServerParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceSqlServerParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceTdwParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceTdwParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceTopicParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTargetResourceTopicParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamAnalyseResultOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamAnalyseResultArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamKafkaParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamKafkaParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamTopicParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFailureParamTopicParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFilterParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamFilterParamArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamMapParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformParamMapParamArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamBatchAnalyseOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamBatchAnalysePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamKafkaParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamKafkaParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamTopicParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFailureParamTopicParamPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperatePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDatePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperatePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateDateOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateDatePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateKVOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateKVPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateSplitPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateSubstrPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalysePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDatePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplacePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrPtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodePtrOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFilterParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamFilterParamArrayOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamRowParamOutput{})
	pulumi.RegisterOutputType(DatahubTaskTransformsParamRowParamPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceDynamicRetentionConfigOutput{})
	pulumi.RegisterOutputType(InstanceDynamicRetentionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(RouteBrokerVipListOutput{})
	pulumi.RegisterOutputType(RouteBrokerVipListArrayOutput{})
	pulumi.RegisterOutputType(RouteVipListOutput{})
	pulumi.RegisterOutputType(RouteVipListArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclListOutput{})
	pulumi.RegisterOutputType(GetAclsAclListArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListClickhouseConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListClickhouseConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListCtsdbConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListCtsdbConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListDorisConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListDorisConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListDtsConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListDtsConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListEsConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListEsConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListKafkaConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListKafkaConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListMariaDbConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListMariaDbConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListMongoDbConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListMongoDbConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListMysqlConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListMysqlConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListPostgreSqlConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListPostgreSqlConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListSqlServerConnectParamOutput{})
	pulumi.RegisterOutputType(GetConnectResourceResultConnectResourceListSqlServerConnectParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubGroupOffsetsTopicListOutput{})
	pulumi.RegisterOutputType(GetDatahubGroupOffsetsTopicListArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubGroupOffsetsTopicListPartitionOutput{})
	pulumi.RegisterOutputType(GetDatahubGroupOffsetsTopicListPartitionArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClickHouseParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClickHouseParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClickHouseParamDropClOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClickHouseParamDropClArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClickHouseParamSchemaArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClsParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceClsParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceCosParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceCosParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceCtsdbParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceCtsdbParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceDtsParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceDtsParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropClOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropClArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEsParamDropDlqTopicParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEventBusParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceEventBusParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceKafkaParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceKafkaParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMariaDbParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMariaDbParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMongoDbParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMongoDbParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMySqlParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMySqlParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMySqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMySqlParamDropClOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceMySqlParamDropClArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourcePostgreSqlParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourcePostgreSqlParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourcePostgreSqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceScfParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceScfParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceSqlServerParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceSqlServerParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceTdwParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceTdwParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceTopicParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListSourceResourceTopicParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClickHouseParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClickHouseParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClickHouseParamDropClOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClickHouseParamDropClArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClickHouseParamSchemaArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClsParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceClsParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceCosParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceCosParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceCtsdbParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceCtsdbParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceDtsParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceDtsParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropClOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropClArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEsParamDropDlqTopicParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEventBusParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceEventBusParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceKafkaParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceKafkaParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceKafkaParamTableMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMariaDbParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMariaDbParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMongoDbParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMongoDbParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMySqlParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMySqlParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMySqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMySqlParamDropClOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceMySqlParamDropClArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourcePostgreSqlParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourcePostgreSqlParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourcePostgreSqlParamDataTargetRecordMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceScfParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceScfParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceSqlServerParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceSqlServerParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceTdwParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceTdwParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceTopicParamOutput{})
	pulumi.RegisterOutputType(GetDatahubTaskTaskListTargetResourceTopicParamArrayOutput{})
	pulumi.RegisterOutputType(GetDatahubTopicTopicListOutput{})
	pulumi.RegisterOutputType(GetDatahubTopicTopicListArrayOutput{})
	pulumi.RegisterOutputType(GetGroupGroupListOutput{})
	pulumi.RegisterOutputType(GetGroupGroupListArrayOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultArrayOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultMemberOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultMemberArrayOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultMemberAssignmentOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultMemberAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultMemberAssignmentTopicOutput{})
	pulumi.RegisterOutputType(GetGroupInfoResultMemberAssignmentTopicArrayOutput{})
	pulumi.RegisterOutputType(GetGroupOffsetsTopicListOutput{})
	pulumi.RegisterOutputType(GetGroupOffsetsTopicListArrayOutput{})
	pulumi.RegisterOutputType(GetGroupOffsetsTopicListPartitionOutput{})
	pulumi.RegisterOutputType(GetGroupOffsetsTopicListPartitionArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListTagOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListTagArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListVipListOutput{})
	pulumi.RegisterOutputType(GetRegionResultOutput{})
	pulumi.RegisterOutputType(GetRegionResultArrayOutput{})
	pulumi.RegisterOutputType(GetTaskStatusResultOutput{})
	pulumi.RegisterOutputType(GetTaskStatusResultArrayOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultArrayOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultConsumeSpeedOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultConsumeSpeedArrayOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultTopicFlowOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultTopicFlowArrayOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultTopicMessageHeapOutput{})
	pulumi.RegisterOutputType(GetTopicFlowRankingResultTopicMessageHeapArrayOutput{})
	pulumi.RegisterOutputType(GetTopicProduceConnectionResultOutput{})
	pulumi.RegisterOutputType(GetTopicProduceConnectionResultArrayOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoMemberOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoMemberArrayOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoMemberAssignmentOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoMemberAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicOutput{})
	pulumi.RegisterOutputType(GetTopicSubscribeGroupGroupsInfoMemberAssignmentTopicArrayOutput{})
	pulumi.RegisterOutputType(GetTopicSyncReplicaTopicInSyncReplicaListOutput{})
	pulumi.RegisterOutputType(GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput{})
	pulumi.RegisterOutputType(GetTopicsInstanceListOutput{})
	pulumi.RegisterOutputType(GetTopicsInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserListOutput{})
	pulumi.RegisterOutputType(GetUsersUserListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneResultOutput{})
	pulumi.RegisterOutputType(GetZoneResultArrayOutput{})
	pulumi.RegisterOutputType(GetZoneResultClusterInfoOutput{})
	pulumi.RegisterOutputType(GetZoneResultClusterInfoArrayOutput{})
	pulumi.RegisterOutputType(GetZoneResultMessagePriceOutput{})
	pulumi.RegisterOutputType(GetZoneResultMessagePriceArrayOutput{})
	pulumi.RegisterOutputType(GetZoneResultUnitPriceOutput{})
	pulumi.RegisterOutputType(GetZoneResultUnitPriceArrayOutput{})
	pulumi.RegisterOutputType(GetZoneResultZoneListOutput{})
	pulumi.RegisterOutputType(GetZoneResultZoneListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneResultZoneListSalesInfoOutput{})
	pulumi.RegisterOutputType(GetZoneResultZoneListSalesInfoArrayOutput{})
}
