// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed acl information of Ckafka
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ckafka"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ckafka"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ckafka.GetAcls(ctx, &ckafka.GetAclsArgs{
//				Host:         pulumi.StringRef("2"),
//				InstanceId:   "ckafka-f9ife4zz",
//				ResourceName: "topic-tf-test",
//				ResourceType: "TOPIC",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAcls(ctx *pulumi.Context, args *GetAclsArgs, opts ...pulumi.InvokeOption) (*GetAclsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAclsResult
	err := ctx.Invoke("tencentcloud:Ckafka/getAcls:getAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcls.
type GetAclsArgs struct {
	// Host substr used for querying.
	Host *string `pulumi:"host"`
	// Id of the ckafka instance.
	InstanceId string `pulumi:"instanceId"`
	// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
	ResourceName string `pulumi:"resourceName"`
	// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
	ResourceType string `pulumi:"resourceType"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getAcls.
type GetAclsResult struct {
	// A list of ckafka acls. Each element contains the following attributes:
	AclLists []GetAclsAclList `pulumi:"aclLists"`
	// IP address allowed to access.
	Host *string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// ACL resource name, which is related to `resourceType`.
	ResourceName string `pulumi:"resourceName"`
	// ACL resource type.
	ResourceType     string  `pulumi:"resourceType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetAclsOutput(ctx *pulumi.Context, args GetAclsOutputArgs, opts ...pulumi.InvokeOption) GetAclsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAclsResult, error) {
			args := v.(GetAclsArgs)
			r, err := GetAcls(ctx, &args, opts...)
			var s GetAclsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAclsResultOutput)
}

// A collection of arguments for invoking getAcls.
type GetAclsOutputArgs struct {
	// Host substr used for querying.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Id of the ckafka instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// ACL resource name, which is related to `resourceType`. For example, if `resourceType` is `TOPIC`, this field indicates the topic name; if `resourceType` is `GROUP`, this field indicates the group name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// ACL resource type. Valid values are `UNKNOWN`, `ANY`, `TOPIC`, `GROUP`, `CLUSTER`, `TRANSACTIONAL_ID`. Currently, only `TOPIC` is available, and other fields will be used for future ACLs compatible with open-source Kafka.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsArgs)(nil)).Elem()
}

// A collection of values returned by getAcls.
type GetAclsResultOutput struct{ *pulumi.OutputState }

func (GetAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsResult)(nil)).Elem()
}

func (o GetAclsResultOutput) ToGetAclsResultOutput() GetAclsResultOutput {
	return o
}

func (o GetAclsResultOutput) ToGetAclsResultOutputWithContext(ctx context.Context) GetAclsResultOutput {
	return o
}

// A list of ckafka acls. Each element contains the following attributes:
func (o GetAclsResultOutput) AclLists() GetAclsAclListArrayOutput {
	return o.ApplyT(func(v GetAclsResult) []GetAclsAclList { return v.AclLists }).(GetAclsAclListArrayOutput)
}

// IP address allowed to access.
func (o GetAclsResultOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclsResult) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// ACL resource name, which is related to `resourceType`.
func (o GetAclsResultOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.ResourceName }).(pulumi.StringOutput)
}

// ACL resource type.
func (o GetAclsResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o GetAclsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAclsResultOutput{})
}
