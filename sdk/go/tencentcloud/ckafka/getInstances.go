// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed instance information of Ckafka
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ckafka"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ckafka"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ckafka.GetInstances(ctx, &ckafka.GetInstancesArgs{
//				InstanceIds: []string{
//					"ckafka-vv7wpvae",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstances(ctx *pulumi.Context, args *GetInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstancesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetInstancesResult
	err := ctx.Invoke("tencentcloud:Ckafka/getInstances:getInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	// Filter. filter.name supports ('Ip', 'VpcId', 'SubNetId', 'InstanceType','InstanceId'), filter.values can pass up to 10 values.
	Filters []GetInstancesFilter `pulumi:"filters"`
	// Filter by instance ID.
	InstanceIds []string `pulumi:"instanceIds"`
	// The number of pages, default is `10`.
	Limit *int `pulumi:"limit"`
	// The page start offset, default is `0`.
	Offset *int `pulumi:"offset"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Filter by instance name, support fuzzy query.
	SearchWord *string `pulumi:"searchWord"`
	// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
	Statuses []int `pulumi:"statuses"`
	// Matches the tag key value.
	TagKey *string `pulumi:"tagKey"`
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	Filters []GetInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	InstanceIds []string `pulumi:"instanceIds"`
	// A list of ckafka users. Each element contains the following attributes:
	InstanceLists    []GetInstancesInstanceList `pulumi:"instanceLists"`
	Limit            *int                       `pulumi:"limit"`
	Offset           *int                       `pulumi:"offset"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	SearchWord       *string                    `pulumi:"searchWord"`
	// The status of the instance. 0: Created, 1: Running, 2: Delete: 5 Quarantined, -1 Creation failed.
	Statuses []int `pulumi:"statuses"`
	// Tag Key.
	TagKey *string `pulumi:"tagKey"`
}

func GetInstancesOutput(ctx *pulumi.Context, args GetInstancesOutputArgs, opts ...pulumi.InvokeOption) GetInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstancesResult, error) {
			args := v.(GetInstancesArgs)
			r, err := GetInstances(ctx, &args, opts...)
			var s GetInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstancesResultOutput)
}

// A collection of arguments for invoking getInstances.
type GetInstancesOutputArgs struct {
	// Filter. filter.name supports ('Ip', 'VpcId', 'SubNetId', 'InstanceType','InstanceId'), filter.values can pass up to 10 values.
	Filters GetInstancesFilterArrayInput `pulumi:"filters"`
	// Filter by instance ID.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// The number of pages, default is `10`.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The page start offset, default is `0`.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Filter by instance name, support fuzzy query.
	SearchWord pulumi.StringPtrInput `pulumi:"searchWord"`
	// (Filter Criteria) The status of the instance. 0: Create, 1: Run, 2: Delete, do not fill the default return all.
	Statuses pulumi.IntArrayInput `pulumi:"statuses"`
	// Matches the tag key value.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
}

func (GetInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getInstances.
type GetInstancesResultOutput struct{ *pulumi.OutputState }

func (GetInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesResult)(nil)).Elem()
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutput() GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutputWithContext(ctx context.Context) GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) Filters() GetInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesFilter { return v.Filters }).(GetInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstancesResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// A list of ckafka users. Each element contains the following attributes:
func (o GetInstancesResultOutput) InstanceLists() GetInstancesInstanceListArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesInstanceList { return v.InstanceLists }).(GetInstancesInstanceListArrayOutput)
}

func (o GetInstancesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetInstancesResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o GetInstancesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) SearchWord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.SearchWord }).(pulumi.StringPtrOutput)
}

// The status of the instance. 0: Created, 1: Running, 2: Delete: 5 Quarantined, -1 Creation failed.
func (o GetInstancesResultOutput) Statuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []int { return v.Statuses }).(pulumi.IntArrayOutput)
}

// Tag Key.
func (o GetInstancesResultOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstancesResultOutput{})
}
