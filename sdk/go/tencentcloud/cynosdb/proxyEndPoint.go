// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cynosdb proxyEndPoint
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				ClusterId: pulumi.String("cynosdbmysql-bws8h88b"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-afqx1hy0"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				UniqueSubnetId: pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:    pulumi.String("vpc-4owdpnwr"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				ClusterId: pulumi.String("cynosdbmysql-bws8h88b"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-afqx1hy0"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				UniqueSubnetId: pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:    pulumi.String("vpc-4owdpnwr"),
//				Vip:            pulumi.String("172.16.112.108"),
//				Vport:          pulumi.Int(3306),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Open connection pool
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				ClusterId:             pulumi.String("cynosdbmysql-bws8h88b"),
//				ConnectionPoolTimeOut: pulumi.Int(30),
//				ConnectionPoolType:    pulumi.String("SessionConnectionPool"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-afqx1hy0"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				OpenConnectionPool: pulumi.String("yes"),
//				UniqueSubnetId:     pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:        pulumi.String("vpc-4owdpnwr"),
//				Vip:                pulumi.String("172.16.112.108"),
//				Vport:              pulumi.Int(3306),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Close connection pool
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				ClusterId: pulumi.String("cynosdbmysql-bws8h88b"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-afqx1hy0"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				OpenConnectionPool: pulumi.String("no"),
//				UniqueSubnetId:     pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:        pulumi.String("vpc-4owdpnwr"),
//				Vip:                pulumi.String("172.16.112.108"),
//				Vport:              pulumi.Int(3306),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				ClusterId:          pulumi.String("cynosdbmysql-bws8h88b"),
//				ConsistencyTimeOut: pulumi.Int(30),
//				ConsistencyType:    pulumi.String("global"),
//				FailOver:           pulumi.String("yes"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-afqx1hy0"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				OpenConnectionPool: pulumi.String("no"),
//				RwType:             pulumi.String("READWRITE"),
//				UniqueSubnetId:     pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:        pulumi.String("vpc-4owdpnwr"),
//				Vip:                pulumi.String("172.16.112.108"),
//				Vport:              pulumi.Int(3306),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				ClusterId: pulumi.String("cynosdbmysql-bws8h88b"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-rikr6z4o"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				OpenConnectionPool: pulumi.String("no"),
//				RwType:             pulumi.String("READONLY"),
//				UniqueSubnetId:     pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:        pulumi.String("vpc-4owdpnwr"),
//				Vip:                pulumi.String("172.16.112.108"),
//				Vport:              pulumi.Int(3306),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Comprehensive parameter examples
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewProxyEndPoint(ctx, "proxyEndPoint", &Cynosdb.ProxyEndPointArgs{
//				AccessMode:            pulumi.String("nearby"),
//				AutoAddRo:             pulumi.String("yes"),
//				ClusterId:             pulumi.String("cynosdbmysql-bws8h88b"),
//				ConnectionPoolTimeOut: pulumi.Int(30),
//				ConnectionPoolType:    pulumi.String("SessionConnectionPool"),
//				ConsistencyTimeOut:    pulumi.Int(30),
//				ConsistencyType:       pulumi.String("global"),
//				Description:           pulumi.String("desc value"),
//				FailOver:              pulumi.String("yes"),
//				InstanceWeights: cynosdb.ProxyEndPointInstanceWeightArray{
//					&cynosdb.ProxyEndPointInstanceWeightArgs{
//						InstanceId: pulumi.String("cynosdbmysql-ins-afqx1hy0"),
//						Weight:     pulumi.Int(1),
//					},
//				},
//				OpenConnectionPool: pulumi.String("yes"),
//				RwType:             pulumi.String("READWRITE"),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.String("sg-7kpsbxdb"),
//				},
//				TransSplit:     pulumi.Bool(true),
//				UniqueSubnetId: pulumi.String("subnet-dwj7ipnc"),
//				UniqueVpcId:    pulumi.String("vpc-4owdpnwr"),
//				Vip:            pulumi.String("172.16.112.118"),
//				Vport:          pulumi.Int(3306),
//				WeightMode:     pulumi.String("system"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ProxyEndPoint struct {
	pulumi.CustomResourceState

	// Connection mode: nearby, balance.
	AccessMode pulumi.StringOutput `pulumi:"accessMode"`
	// Do you want to automatically add read-only instances? Yes - Yes, no - Do not automatically add.
	AutoAddRo pulumi.StringOutput `pulumi:"autoAddRo"`
	// Cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Connection pool threshold: unit (second).
	ConnectionPoolTimeOut pulumi.IntOutput `pulumi:"connectionPoolTimeOut"`
	// Connection pool type: SessionConnectionPool (session level Connection pool).
	ConnectionPoolType pulumi.StringOutput `pulumi:"connectionPoolType"`
	// Consistency timeout.
	ConsistencyTimeOut pulumi.IntOutput `pulumi:"consistencyTimeOut"`
	// Consistency type: event, global, session.
	ConsistencyType pulumi.StringOutput `pulumi:"consistencyType"`
	// Description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Enable Failover. yes or no.
	FailOver pulumi.StringOutput `pulumi:"failOver"`
	// Instance Group ID.
	InstanceGroupId pulumi.StringOutput `pulumi:"instanceGroupId"`
	// Instance Weight.
	InstanceWeights ProxyEndPointInstanceWeightArrayOutput `pulumi:"instanceWeights"`
	// Whether to enable Connection pool, yes - enable, no - do not enable.
	OpenConnectionPool pulumi.StringOutput `pulumi:"openConnectionPool"`
	// Proxy Group ID.
	ProxyGroupId pulumi.StringOutput `pulumi:"proxyGroupId"`
	// Read and write attributes: READWRITE, READONLY.
	RwType pulumi.StringOutput `pulumi:"rwType"`
	// Security Group ID Array.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// Transaction splitting.
	TransSplit pulumi.BoolOutput `pulumi:"transSplit"`
	// The private network subnet ID is consistent with the cluster subnet ID by default.
	UniqueSubnetId pulumi.StringOutput `pulumi:"uniqueSubnetId"`
	// Private network ID, which is consistent with the cluster private network ID by default.
	UniqueVpcId pulumi.StringOutput `pulumi:"uniqueVpcId"`
	// VIP Information.
	Vip pulumi.StringOutput `pulumi:"vip"`
	// Port Information.
	Vport pulumi.IntOutput `pulumi:"vport"`
	// Weight mode: system system allocation, custom customization.
	WeightMode pulumi.StringOutput `pulumi:"weightMode"`
}

// NewProxyEndPoint registers a new resource with the given unique name, arguments, and options.
func NewProxyEndPoint(ctx *pulumi.Context,
	name string, args *ProxyEndPointArgs, opts ...pulumi.ResourceOption) (*ProxyEndPoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.UniqueSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'UniqueSubnetId'")
	}
	if args.UniqueVpcId == nil {
		return nil, errors.New("invalid value for required argument 'UniqueVpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ProxyEndPoint
	err := ctx.RegisterResource("tencentcloud:Cynosdb/proxyEndPoint:ProxyEndPoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyEndPoint gets an existing ProxyEndPoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyEndPoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyEndPointState, opts ...pulumi.ResourceOption) (*ProxyEndPoint, error) {
	var resource ProxyEndPoint
	err := ctx.ReadResource("tencentcloud:Cynosdb/proxyEndPoint:ProxyEndPoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyEndPoint resources.
type proxyEndPointState struct {
	// Connection mode: nearby, balance.
	AccessMode *string `pulumi:"accessMode"`
	// Do you want to automatically add read-only instances? Yes - Yes, no - Do not automatically add.
	AutoAddRo *string `pulumi:"autoAddRo"`
	// Cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Connection pool threshold: unit (second).
	ConnectionPoolTimeOut *int `pulumi:"connectionPoolTimeOut"`
	// Connection pool type: SessionConnectionPool (session level Connection pool).
	ConnectionPoolType *string `pulumi:"connectionPoolType"`
	// Consistency timeout.
	ConsistencyTimeOut *int `pulumi:"consistencyTimeOut"`
	// Consistency type: event, global, session.
	ConsistencyType *string `pulumi:"consistencyType"`
	// Description.
	Description *string `pulumi:"description"`
	// Enable Failover. yes or no.
	FailOver *string `pulumi:"failOver"`
	// Instance Group ID.
	InstanceGroupId *string `pulumi:"instanceGroupId"`
	// Instance Weight.
	InstanceWeights []ProxyEndPointInstanceWeight `pulumi:"instanceWeights"`
	// Whether to enable Connection pool, yes - enable, no - do not enable.
	OpenConnectionPool *string `pulumi:"openConnectionPool"`
	// Proxy Group ID.
	ProxyGroupId *string `pulumi:"proxyGroupId"`
	// Read and write attributes: READWRITE, READONLY.
	RwType *string `pulumi:"rwType"`
	// Security Group ID Array.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Transaction splitting.
	TransSplit *bool `pulumi:"transSplit"`
	// The private network subnet ID is consistent with the cluster subnet ID by default.
	UniqueSubnetId *string `pulumi:"uniqueSubnetId"`
	// Private network ID, which is consistent with the cluster private network ID by default.
	UniqueVpcId *string `pulumi:"uniqueVpcId"`
	// VIP Information.
	Vip *string `pulumi:"vip"`
	// Port Information.
	Vport *int `pulumi:"vport"`
	// Weight mode: system system allocation, custom customization.
	WeightMode *string `pulumi:"weightMode"`
}

type ProxyEndPointState struct {
	// Connection mode: nearby, balance.
	AccessMode pulumi.StringPtrInput
	// Do you want to automatically add read-only instances? Yes - Yes, no - Do not automatically add.
	AutoAddRo pulumi.StringPtrInput
	// Cluster ID.
	ClusterId pulumi.StringPtrInput
	// Connection pool threshold: unit (second).
	ConnectionPoolTimeOut pulumi.IntPtrInput
	// Connection pool type: SessionConnectionPool (session level Connection pool).
	ConnectionPoolType pulumi.StringPtrInput
	// Consistency timeout.
	ConsistencyTimeOut pulumi.IntPtrInput
	// Consistency type: event, global, session.
	ConsistencyType pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Enable Failover. yes or no.
	FailOver pulumi.StringPtrInput
	// Instance Group ID.
	InstanceGroupId pulumi.StringPtrInput
	// Instance Weight.
	InstanceWeights ProxyEndPointInstanceWeightArrayInput
	// Whether to enable Connection pool, yes - enable, no - do not enable.
	OpenConnectionPool pulumi.StringPtrInput
	// Proxy Group ID.
	ProxyGroupId pulumi.StringPtrInput
	// Read and write attributes: READWRITE, READONLY.
	RwType pulumi.StringPtrInput
	// Security Group ID Array.
	SecurityGroupIds pulumi.StringArrayInput
	// Transaction splitting.
	TransSplit pulumi.BoolPtrInput
	// The private network subnet ID is consistent with the cluster subnet ID by default.
	UniqueSubnetId pulumi.StringPtrInput
	// Private network ID, which is consistent with the cluster private network ID by default.
	UniqueVpcId pulumi.StringPtrInput
	// VIP Information.
	Vip pulumi.StringPtrInput
	// Port Information.
	Vport pulumi.IntPtrInput
	// Weight mode: system system allocation, custom customization.
	WeightMode pulumi.StringPtrInput
}

func (ProxyEndPointState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyEndPointState)(nil)).Elem()
}

type proxyEndPointArgs struct {
	// Connection mode: nearby, balance.
	AccessMode *string `pulumi:"accessMode"`
	// Do you want to automatically add read-only instances? Yes - Yes, no - Do not automatically add.
	AutoAddRo *string `pulumi:"autoAddRo"`
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Connection pool threshold: unit (second).
	ConnectionPoolTimeOut *int `pulumi:"connectionPoolTimeOut"`
	// Connection pool type: SessionConnectionPool (session level Connection pool).
	ConnectionPoolType *string `pulumi:"connectionPoolType"`
	// Consistency timeout.
	ConsistencyTimeOut *int `pulumi:"consistencyTimeOut"`
	// Consistency type: event, global, session.
	ConsistencyType *string `pulumi:"consistencyType"`
	// Description.
	Description *string `pulumi:"description"`
	// Enable Failover. yes or no.
	FailOver *string `pulumi:"failOver"`
	// Instance Weight.
	InstanceWeights []ProxyEndPointInstanceWeight `pulumi:"instanceWeights"`
	// Whether to enable Connection pool, yes - enable, no - do not enable.
	OpenConnectionPool *string `pulumi:"openConnectionPool"`
	// Read and write attributes: READWRITE, READONLY.
	RwType *string `pulumi:"rwType"`
	// Security Group ID Array.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Transaction splitting.
	TransSplit *bool `pulumi:"transSplit"`
	// The private network subnet ID is consistent with the cluster subnet ID by default.
	UniqueSubnetId string `pulumi:"uniqueSubnetId"`
	// Private network ID, which is consistent with the cluster private network ID by default.
	UniqueVpcId string `pulumi:"uniqueVpcId"`
	// VIP Information.
	Vip *string `pulumi:"vip"`
	// Port Information.
	Vport *int `pulumi:"vport"`
	// Weight mode: system system allocation, custom customization.
	WeightMode *string `pulumi:"weightMode"`
}

// The set of arguments for constructing a ProxyEndPoint resource.
type ProxyEndPointArgs struct {
	// Connection mode: nearby, balance.
	AccessMode pulumi.StringPtrInput
	// Do you want to automatically add read-only instances? Yes - Yes, no - Do not automatically add.
	AutoAddRo pulumi.StringPtrInput
	// Cluster ID.
	ClusterId pulumi.StringInput
	// Connection pool threshold: unit (second).
	ConnectionPoolTimeOut pulumi.IntPtrInput
	// Connection pool type: SessionConnectionPool (session level Connection pool).
	ConnectionPoolType pulumi.StringPtrInput
	// Consistency timeout.
	ConsistencyTimeOut pulumi.IntPtrInput
	// Consistency type: event, global, session.
	ConsistencyType pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Enable Failover. yes or no.
	FailOver pulumi.StringPtrInput
	// Instance Weight.
	InstanceWeights ProxyEndPointInstanceWeightArrayInput
	// Whether to enable Connection pool, yes - enable, no - do not enable.
	OpenConnectionPool pulumi.StringPtrInput
	// Read and write attributes: READWRITE, READONLY.
	RwType pulumi.StringPtrInput
	// Security Group ID Array.
	SecurityGroupIds pulumi.StringArrayInput
	// Transaction splitting.
	TransSplit pulumi.BoolPtrInput
	// The private network subnet ID is consistent with the cluster subnet ID by default.
	UniqueSubnetId pulumi.StringInput
	// Private network ID, which is consistent with the cluster private network ID by default.
	UniqueVpcId pulumi.StringInput
	// VIP Information.
	Vip pulumi.StringPtrInput
	// Port Information.
	Vport pulumi.IntPtrInput
	// Weight mode: system system allocation, custom customization.
	WeightMode pulumi.StringPtrInput
}

func (ProxyEndPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyEndPointArgs)(nil)).Elem()
}

type ProxyEndPointInput interface {
	pulumi.Input

	ToProxyEndPointOutput() ProxyEndPointOutput
	ToProxyEndPointOutputWithContext(ctx context.Context) ProxyEndPointOutput
}

func (*ProxyEndPoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyEndPoint)(nil)).Elem()
}

func (i *ProxyEndPoint) ToProxyEndPointOutput() ProxyEndPointOutput {
	return i.ToProxyEndPointOutputWithContext(context.Background())
}

func (i *ProxyEndPoint) ToProxyEndPointOutputWithContext(ctx context.Context) ProxyEndPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyEndPointOutput)
}

// ProxyEndPointArrayInput is an input type that accepts ProxyEndPointArray and ProxyEndPointArrayOutput values.
// You can construct a concrete instance of `ProxyEndPointArrayInput` via:
//
//	ProxyEndPointArray{ ProxyEndPointArgs{...} }
type ProxyEndPointArrayInput interface {
	pulumi.Input

	ToProxyEndPointArrayOutput() ProxyEndPointArrayOutput
	ToProxyEndPointArrayOutputWithContext(context.Context) ProxyEndPointArrayOutput
}

type ProxyEndPointArray []ProxyEndPointInput

func (ProxyEndPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyEndPoint)(nil)).Elem()
}

func (i ProxyEndPointArray) ToProxyEndPointArrayOutput() ProxyEndPointArrayOutput {
	return i.ToProxyEndPointArrayOutputWithContext(context.Background())
}

func (i ProxyEndPointArray) ToProxyEndPointArrayOutputWithContext(ctx context.Context) ProxyEndPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyEndPointArrayOutput)
}

// ProxyEndPointMapInput is an input type that accepts ProxyEndPointMap and ProxyEndPointMapOutput values.
// You can construct a concrete instance of `ProxyEndPointMapInput` via:
//
//	ProxyEndPointMap{ "key": ProxyEndPointArgs{...} }
type ProxyEndPointMapInput interface {
	pulumi.Input

	ToProxyEndPointMapOutput() ProxyEndPointMapOutput
	ToProxyEndPointMapOutputWithContext(context.Context) ProxyEndPointMapOutput
}

type ProxyEndPointMap map[string]ProxyEndPointInput

func (ProxyEndPointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyEndPoint)(nil)).Elem()
}

func (i ProxyEndPointMap) ToProxyEndPointMapOutput() ProxyEndPointMapOutput {
	return i.ToProxyEndPointMapOutputWithContext(context.Background())
}

func (i ProxyEndPointMap) ToProxyEndPointMapOutputWithContext(ctx context.Context) ProxyEndPointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyEndPointMapOutput)
}

type ProxyEndPointOutput struct{ *pulumi.OutputState }

func (ProxyEndPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyEndPoint)(nil)).Elem()
}

func (o ProxyEndPointOutput) ToProxyEndPointOutput() ProxyEndPointOutput {
	return o
}

func (o ProxyEndPointOutput) ToProxyEndPointOutputWithContext(ctx context.Context) ProxyEndPointOutput {
	return o
}

// Connection mode: nearby, balance.
func (o ProxyEndPointOutput) AccessMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.AccessMode }).(pulumi.StringOutput)
}

// Do you want to automatically add read-only instances? Yes - Yes, no - Do not automatically add.
func (o ProxyEndPointOutput) AutoAddRo() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.AutoAddRo }).(pulumi.StringOutput)
}

// Cluster ID.
func (o ProxyEndPointOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Connection pool threshold: unit (second).
func (o ProxyEndPointOutput) ConnectionPoolTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.IntOutput { return v.ConnectionPoolTimeOut }).(pulumi.IntOutput)
}

// Connection pool type: SessionConnectionPool (session level Connection pool).
func (o ProxyEndPointOutput) ConnectionPoolType() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.ConnectionPoolType }).(pulumi.StringOutput)
}

// Consistency timeout.
func (o ProxyEndPointOutput) ConsistencyTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.IntOutput { return v.ConsistencyTimeOut }).(pulumi.IntOutput)
}

// Consistency type: event, global, session.
func (o ProxyEndPointOutput) ConsistencyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.ConsistencyType }).(pulumi.StringOutput)
}

// Description.
func (o ProxyEndPointOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Enable Failover. yes or no.
func (o ProxyEndPointOutput) FailOver() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.FailOver }).(pulumi.StringOutput)
}

// Instance Group ID.
func (o ProxyEndPointOutput) InstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.InstanceGroupId }).(pulumi.StringOutput)
}

// Instance Weight.
func (o ProxyEndPointOutput) InstanceWeights() ProxyEndPointInstanceWeightArrayOutput {
	return o.ApplyT(func(v *ProxyEndPoint) ProxyEndPointInstanceWeightArrayOutput { return v.InstanceWeights }).(ProxyEndPointInstanceWeightArrayOutput)
}

// Whether to enable Connection pool, yes - enable, no - do not enable.
func (o ProxyEndPointOutput) OpenConnectionPool() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.OpenConnectionPool }).(pulumi.StringOutput)
}

// Proxy Group ID.
func (o ProxyEndPointOutput) ProxyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.ProxyGroupId }).(pulumi.StringOutput)
}

// Read and write attributes: READWRITE, READONLY.
func (o ProxyEndPointOutput) RwType() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.RwType }).(pulumi.StringOutput)
}

// Security Group ID Array.
func (o ProxyEndPointOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Transaction splitting.
func (o ProxyEndPointOutput) TransSplit() pulumi.BoolOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.BoolOutput { return v.TransSplit }).(pulumi.BoolOutput)
}

// The private network subnet ID is consistent with the cluster subnet ID by default.
func (o ProxyEndPointOutput) UniqueSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.UniqueSubnetId }).(pulumi.StringOutput)
}

// Private network ID, which is consistent with the cluster private network ID by default.
func (o ProxyEndPointOutput) UniqueVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.UniqueVpcId }).(pulumi.StringOutput)
}

// VIP Information.
func (o ProxyEndPointOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.Vip }).(pulumi.StringOutput)
}

// Port Information.
func (o ProxyEndPointOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.IntOutput { return v.Vport }).(pulumi.IntOutput)
}

// Weight mode: system system allocation, custom customization.
func (o ProxyEndPointOutput) WeightMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndPoint) pulumi.StringOutput { return v.WeightMode }).(pulumi.StringOutput)
}

type ProxyEndPointArrayOutput struct{ *pulumi.OutputState }

func (ProxyEndPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyEndPoint)(nil)).Elem()
}

func (o ProxyEndPointArrayOutput) ToProxyEndPointArrayOutput() ProxyEndPointArrayOutput {
	return o
}

func (o ProxyEndPointArrayOutput) ToProxyEndPointArrayOutputWithContext(ctx context.Context) ProxyEndPointArrayOutput {
	return o
}

func (o ProxyEndPointArrayOutput) Index(i pulumi.IntInput) ProxyEndPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProxyEndPoint {
		return vs[0].([]*ProxyEndPoint)[vs[1].(int)]
	}).(ProxyEndPointOutput)
}

type ProxyEndPointMapOutput struct{ *pulumi.OutputState }

func (ProxyEndPointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyEndPoint)(nil)).Elem()
}

func (o ProxyEndPointMapOutput) ToProxyEndPointMapOutput() ProxyEndPointMapOutput {
	return o
}

func (o ProxyEndPointMapOutput) ToProxyEndPointMapOutputWithContext(ctx context.Context) ProxyEndPointMapOutput {
	return o
}

func (o ProxyEndPointMapOutput) MapIndex(k pulumi.StringInput) ProxyEndPointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProxyEndPoint {
		return vs[0].(map[string]*ProxyEndPoint)[vs[1].(string)]
	}).(ProxyEndPointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyEndPointInput)(nil)).Elem(), &ProxyEndPoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyEndPointArrayInput)(nil)).Elem(), ProxyEndPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyEndPointMapInput)(nil)).Elem(), ProxyEndPointMap{})
	pulumi.RegisterOutputType(ProxyEndPointOutput{})
	pulumi.RegisterOutputType(ProxyEndPointArrayOutput{})
	pulumi.RegisterOutputType(ProxyEndPointMapOutput{})
}
