// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cynosdb binlogSaveDays
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewBinlogSaveDays(ctx, "binlogSaveDays", &Cynosdb.BinlogSaveDaysArgs{
//				BinlogSaveDays: pulumi.Int(7),
//				ClusterId:      pulumi.String("cynosdbmysql-123"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cynosdb binlog_save_days can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cynosdb/binlogSaveDays:BinlogSaveDays binlog_save_days binlog_save_days_id
//
// ```
type BinlogSaveDays struct {
	pulumi.CustomResourceState

	// Binlog retention days.
	BinlogSaveDays pulumi.IntOutput `pulumi:"binlogSaveDays"`
	// Cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
}

// NewBinlogSaveDays registers a new resource with the given unique name, arguments, and options.
func NewBinlogSaveDays(ctx *pulumi.Context,
	name string, args *BinlogSaveDaysArgs, opts ...pulumi.ResourceOption) (*BinlogSaveDays, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BinlogSaveDays == nil {
		return nil, errors.New("invalid value for required argument 'BinlogSaveDays'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BinlogSaveDays
	err := ctx.RegisterResource("tencentcloud:Cynosdb/binlogSaveDays:BinlogSaveDays", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBinlogSaveDays gets an existing BinlogSaveDays resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBinlogSaveDays(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BinlogSaveDaysState, opts ...pulumi.ResourceOption) (*BinlogSaveDays, error) {
	var resource BinlogSaveDays
	err := ctx.ReadResource("tencentcloud:Cynosdb/binlogSaveDays:BinlogSaveDays", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BinlogSaveDays resources.
type binlogSaveDaysState struct {
	// Binlog retention days.
	BinlogSaveDays *int `pulumi:"binlogSaveDays"`
	// Cluster ID.
	ClusterId *string `pulumi:"clusterId"`
}

type BinlogSaveDaysState struct {
	// Binlog retention days.
	BinlogSaveDays pulumi.IntPtrInput
	// Cluster ID.
	ClusterId pulumi.StringPtrInput
}

func (BinlogSaveDaysState) ElementType() reflect.Type {
	return reflect.TypeOf((*binlogSaveDaysState)(nil)).Elem()
}

type binlogSaveDaysArgs struct {
	// Binlog retention days.
	BinlogSaveDays int `pulumi:"binlogSaveDays"`
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
}

// The set of arguments for constructing a BinlogSaveDays resource.
type BinlogSaveDaysArgs struct {
	// Binlog retention days.
	BinlogSaveDays pulumi.IntInput
	// Cluster ID.
	ClusterId pulumi.StringInput
}

func (BinlogSaveDaysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*binlogSaveDaysArgs)(nil)).Elem()
}

type BinlogSaveDaysInput interface {
	pulumi.Input

	ToBinlogSaveDaysOutput() BinlogSaveDaysOutput
	ToBinlogSaveDaysOutputWithContext(ctx context.Context) BinlogSaveDaysOutput
}

func (*BinlogSaveDays) ElementType() reflect.Type {
	return reflect.TypeOf((**BinlogSaveDays)(nil)).Elem()
}

func (i *BinlogSaveDays) ToBinlogSaveDaysOutput() BinlogSaveDaysOutput {
	return i.ToBinlogSaveDaysOutputWithContext(context.Background())
}

func (i *BinlogSaveDays) ToBinlogSaveDaysOutputWithContext(ctx context.Context) BinlogSaveDaysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BinlogSaveDaysOutput)
}

// BinlogSaveDaysArrayInput is an input type that accepts BinlogSaveDaysArray and BinlogSaveDaysArrayOutput values.
// You can construct a concrete instance of `BinlogSaveDaysArrayInput` via:
//
//	BinlogSaveDaysArray{ BinlogSaveDaysArgs{...} }
type BinlogSaveDaysArrayInput interface {
	pulumi.Input

	ToBinlogSaveDaysArrayOutput() BinlogSaveDaysArrayOutput
	ToBinlogSaveDaysArrayOutputWithContext(context.Context) BinlogSaveDaysArrayOutput
}

type BinlogSaveDaysArray []BinlogSaveDaysInput

func (BinlogSaveDaysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BinlogSaveDays)(nil)).Elem()
}

func (i BinlogSaveDaysArray) ToBinlogSaveDaysArrayOutput() BinlogSaveDaysArrayOutput {
	return i.ToBinlogSaveDaysArrayOutputWithContext(context.Background())
}

func (i BinlogSaveDaysArray) ToBinlogSaveDaysArrayOutputWithContext(ctx context.Context) BinlogSaveDaysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BinlogSaveDaysArrayOutput)
}

// BinlogSaveDaysMapInput is an input type that accepts BinlogSaveDaysMap and BinlogSaveDaysMapOutput values.
// You can construct a concrete instance of `BinlogSaveDaysMapInput` via:
//
//	BinlogSaveDaysMap{ "key": BinlogSaveDaysArgs{...} }
type BinlogSaveDaysMapInput interface {
	pulumi.Input

	ToBinlogSaveDaysMapOutput() BinlogSaveDaysMapOutput
	ToBinlogSaveDaysMapOutputWithContext(context.Context) BinlogSaveDaysMapOutput
}

type BinlogSaveDaysMap map[string]BinlogSaveDaysInput

func (BinlogSaveDaysMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BinlogSaveDays)(nil)).Elem()
}

func (i BinlogSaveDaysMap) ToBinlogSaveDaysMapOutput() BinlogSaveDaysMapOutput {
	return i.ToBinlogSaveDaysMapOutputWithContext(context.Background())
}

func (i BinlogSaveDaysMap) ToBinlogSaveDaysMapOutputWithContext(ctx context.Context) BinlogSaveDaysMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BinlogSaveDaysMapOutput)
}

type BinlogSaveDaysOutput struct{ *pulumi.OutputState }

func (BinlogSaveDaysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BinlogSaveDays)(nil)).Elem()
}

func (o BinlogSaveDaysOutput) ToBinlogSaveDaysOutput() BinlogSaveDaysOutput {
	return o
}

func (o BinlogSaveDaysOutput) ToBinlogSaveDaysOutputWithContext(ctx context.Context) BinlogSaveDaysOutput {
	return o
}

// Binlog retention days.
func (o BinlogSaveDaysOutput) BinlogSaveDays() pulumi.IntOutput {
	return o.ApplyT(func(v *BinlogSaveDays) pulumi.IntOutput { return v.BinlogSaveDays }).(pulumi.IntOutput)
}

// Cluster ID.
func (o BinlogSaveDaysOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *BinlogSaveDays) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

type BinlogSaveDaysArrayOutput struct{ *pulumi.OutputState }

func (BinlogSaveDaysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BinlogSaveDays)(nil)).Elem()
}

func (o BinlogSaveDaysArrayOutput) ToBinlogSaveDaysArrayOutput() BinlogSaveDaysArrayOutput {
	return o
}

func (o BinlogSaveDaysArrayOutput) ToBinlogSaveDaysArrayOutputWithContext(ctx context.Context) BinlogSaveDaysArrayOutput {
	return o
}

func (o BinlogSaveDaysArrayOutput) Index(i pulumi.IntInput) BinlogSaveDaysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BinlogSaveDays {
		return vs[0].([]*BinlogSaveDays)[vs[1].(int)]
	}).(BinlogSaveDaysOutput)
}

type BinlogSaveDaysMapOutput struct{ *pulumi.OutputState }

func (BinlogSaveDaysMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BinlogSaveDays)(nil)).Elem()
}

func (o BinlogSaveDaysMapOutput) ToBinlogSaveDaysMapOutput() BinlogSaveDaysMapOutput {
	return o
}

func (o BinlogSaveDaysMapOutput) ToBinlogSaveDaysMapOutputWithContext(ctx context.Context) BinlogSaveDaysMapOutput {
	return o
}

func (o BinlogSaveDaysMapOutput) MapIndex(k pulumi.StringInput) BinlogSaveDaysOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BinlogSaveDays {
		return vs[0].(map[string]*BinlogSaveDays)[vs[1].(string)]
	}).(BinlogSaveDaysOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BinlogSaveDaysInput)(nil)).Elem(), &BinlogSaveDays{})
	pulumi.RegisterInputType(reflect.TypeOf((*BinlogSaveDaysArrayInput)(nil)).Elem(), BinlogSaveDaysArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BinlogSaveDaysMapInput)(nil)).Elem(), BinlogSaveDaysMap{})
	pulumi.RegisterOutputType(BinlogSaveDaysOutput{})
	pulumi.RegisterOutputType(BinlogSaveDaysArrayOutput{})
	pulumi.RegisterOutputType(BinlogSaveDaysMapOutput{})
}
