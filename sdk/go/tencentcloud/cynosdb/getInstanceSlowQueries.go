// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cynosdb instanceSlowQueries
//
// ## Example Usage
// ### Query slow queries of instance
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			cynosdbClusterId := "default_cynosdb_cluster"
//			if param := cfg.Get("cynosdbClusterId"); param != "" {
//				cynosdbClusterId = param
//			}
//			_, err := Cynosdb.GetInstanceSlowQueries(ctx, &cynosdb.GetInstanceSlowQueriesArgs{
//				InstanceId:  cynosdbClusterId,
//				StartTime:   pulumi.StringRef("2023-06-20 23:19:03"),
//				EndTime:     pulumi.StringRef("2023-06-30 23:19:03"),
//				Username:    pulumi.StringRef("keep_dts"),
//				Host:        pulumi.StringRef(fmt.Sprintf("%v%v", "%", "%")),
//				Database:    pulumi.StringRef("tf_ci_test"),
//				OrderBy:     pulumi.StringRef("QueryTime"),
//				OrderByType: pulumi.StringRef("desc"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Query slow queries by time range
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			cynosdbClusterId := "default_cynosdb_cluster"
//			if param := cfg.Get("cynosdbClusterId"); param != "" {
//				cynosdbClusterId = param
//			}
//			_, err := Cynosdb.GetInstanceSlowQueries(ctx, &cynosdb.GetInstanceSlowQueriesArgs{
//				InstanceId:  cynosdbClusterId,
//				StartTime:   pulumi.StringRef("2023-06-20 23:19:03"),
//				EndTime:     pulumi.StringRef("2023-06-30 23:19:03"),
//				OrderBy:     pulumi.StringRef("QueryTime"),
//				OrderByType: pulumi.StringRef("desc"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Query slow queries by user and db name
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			cynosdbClusterId := "default_cynosdb_cluster"
//			if param := cfg.Get("cynosdbClusterId"); param != "" {
//				cynosdbClusterId = param
//			}
//			_, err := Cynosdb.GetInstanceSlowQueries(ctx, &cynosdb.GetInstanceSlowQueriesArgs{
//				InstanceId:  cynosdbClusterId,
//				Username:    pulumi.StringRef("keep_dts"),
//				Host:        pulumi.StringRef(fmt.Sprintf("%v%v", "%", "%")),
//				Database:    pulumi.StringRef("tf_ci_test"),
//				OrderBy:     pulumi.StringRef("QueryTime"),
//				OrderByType: pulumi.StringRef("desc"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstanceSlowQueries(ctx *pulumi.Context, args *GetInstanceSlowQueriesArgs, opts ...pulumi.InvokeOption) (*GetInstanceSlowQueriesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetInstanceSlowQueriesResult
	err := ctx.Invoke("tencentcloud:Cynosdb/getInstanceSlowQueries:getInstanceSlowQueries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceSlowQueries.
type GetInstanceSlowQueriesArgs struct {
	// Database name.
	Database *string `pulumi:"database"`
	// Latest transaction start time.
	EndTime *string `pulumi:"endTime"`
	// Client host.
	Host *string `pulumi:"host"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Sort field, optional values: QueryTime, LockTime, RowsExamined, RowsSent.
	OrderBy *string `pulumi:"orderBy"`
	// Sort type, optional values: asc, desc.
	OrderByType *string `pulumi:"orderByType"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Earliest transaction start time.
	StartTime *string `pulumi:"startTime"`
	// user name.
	Username *string `pulumi:"username"`
}

// A collection of values returned by getInstanceSlowQueries.
type GetInstanceSlowQueriesResult struct {
	// Database name.
	Database *string `pulumi:"database"`
	EndTime  *string `pulumi:"endTime"`
	Host     *string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	OrderBy          *string `pulumi:"orderBy"`
	OrderByType      *string `pulumi:"orderByType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Slow query records.
	SlowQueries []GetInstanceSlowQueriesSlowQuery `pulumi:"slowQueries"`
	StartTime   *string                           `pulumi:"startTime"`
	Username    *string                           `pulumi:"username"`
}

func GetInstanceSlowQueriesOutput(ctx *pulumi.Context, args GetInstanceSlowQueriesOutputArgs, opts ...pulumi.InvokeOption) GetInstanceSlowQueriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceSlowQueriesResult, error) {
			args := v.(GetInstanceSlowQueriesArgs)
			r, err := GetInstanceSlowQueries(ctx, &args, opts...)
			var s GetInstanceSlowQueriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceSlowQueriesResultOutput)
}

// A collection of arguments for invoking getInstanceSlowQueries.
type GetInstanceSlowQueriesOutputArgs struct {
	// Database name.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// Latest transaction start time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Client host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Sort field, optional values: QueryTime, LockTime, RowsExamined, RowsSent.
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// Sort type, optional values: asc, desc.
	OrderByType pulumi.StringPtrInput `pulumi:"orderByType"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Earliest transaction start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// user name.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetInstanceSlowQueriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSlowQueriesArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceSlowQueries.
type GetInstanceSlowQueriesResultOutput struct{ *pulumi.OutputState }

func (GetInstanceSlowQueriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSlowQueriesResult)(nil)).Elem()
}

func (o GetInstanceSlowQueriesResultOutput) ToGetInstanceSlowQueriesResultOutput() GetInstanceSlowQueriesResultOutput {
	return o
}

func (o GetInstanceSlowQueriesResultOutput) ToGetInstanceSlowQueriesResultOutputWithContext(ctx context.Context) GetInstanceSlowQueriesResultOutput {
	return o
}

// Database name.
func (o GetInstanceSlowQueriesResultOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o GetInstanceSlowQueriesResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o GetInstanceSlowQueriesResultOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceSlowQueriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceSlowQueriesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetInstanceSlowQueriesResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetInstanceSlowQueriesResultOutput) OrderByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.OrderByType }).(pulumi.StringPtrOutput)
}

func (o GetInstanceSlowQueriesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Slow query records.
func (o GetInstanceSlowQueriesResultOutput) SlowQueries() GetInstanceSlowQueriesSlowQueryArrayOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) []GetInstanceSlowQueriesSlowQuery { return v.SlowQueries }).(GetInstanceSlowQueriesSlowQueryArrayOutput)
}

func (o GetInstanceSlowQueriesResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o GetInstanceSlowQueriesResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSlowQueriesResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceSlowQueriesResultOutput{})
}
