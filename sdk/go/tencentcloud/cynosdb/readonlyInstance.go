// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provide a resource to create a CynosDB readonly instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewReadonlyInstance(ctx, "foo", &Cynosdb.ReadonlyInstanceArgs{
//				ClusterId:                 pulumi.Any(cynosdbmysql_dzj5l8gz),
//				InstanceName:              pulumi.String("tf-cynosdb-readonly-instance"),
//				ForceDelete:               pulumi.Bool(true),
//				InstanceCpuCore:           pulumi.Int(2),
//				InstanceMemorySize:        pulumi.Int(4),
//				InstanceMaintainDuration:  pulumi.Int(7200),
//				InstanceMaintainStartTime: pulumi.Int(21600),
//				InstanceMaintainWeekdays: pulumi.StringArray{
//					pulumi.String("Fri"),
//					pulumi.String("Mon"),
//					pulumi.String("Sat"),
//					pulumi.String("Sun"),
//					pulumi.String("Thu"),
//					pulumi.String("Wed"),
//					pulumi.String("Tue"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CynosDB readonly instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cynosdb/readonlyInstance:ReadonlyInstance foo cynosdbmysql-ins-dhwynib6
//
// ```
type ReadonlyInstance struct {
	pulumi.CustomResourceState

	// Cluster ID which the readonly instance belongs to.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Indicate whether to delete readonly instance directly or not. Default is false. If set true, instance will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceCpuCore pulumi.IntPtrOutput `pulumi:"instanceCpuCore"`
	// Duration time for maintenance, unit in second. `3600` by default.
	InstanceMaintainDuration pulumi.IntPtrOutput `pulumi:"instanceMaintainDuration"`
	// Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
	InstanceMaintainStartTime pulumi.IntPtrOutput `pulumi:"instanceMaintainStartTime"`
	// Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
	InstanceMaintainWeekdays pulumi.StringArrayOutput `pulumi:"instanceMaintainWeekdays"`
	// Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceMemorySize pulumi.IntPtrOutput `pulumi:"instanceMemorySize"`
	// Name of instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Status of the instance.
	InstanceStatus pulumi.StringOutput `pulumi:"instanceStatus"`
	// Storage size of the instance, unit in GB.
	InstanceStorageSize pulumi.IntOutput `pulumi:"instanceStorageSize"`
	// ID of the subnet within this VPC.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// ID of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewReadonlyInstance registers a new resource with the given unique name, arguments, and options.
func NewReadonlyInstance(ctx *pulumi.Context,
	name string, args *ReadonlyInstanceArgs, opts ...pulumi.ResourceOption) (*ReadonlyInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ReadonlyInstance
	err := ctx.RegisterResource("tencentcloud:Cynosdb/readonlyInstance:ReadonlyInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReadonlyInstance gets an existing ReadonlyInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReadonlyInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReadonlyInstanceState, opts ...pulumi.ResourceOption) (*ReadonlyInstance, error) {
	var resource ReadonlyInstance
	err := ctx.ReadResource("tencentcloud:Cynosdb/readonlyInstance:ReadonlyInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReadonlyInstance resources.
type readonlyInstanceState struct {
	// Cluster ID which the readonly instance belongs to.
	ClusterId *string `pulumi:"clusterId"`
	// Indicate whether to delete readonly instance directly or not. Default is false. If set true, instance will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
	ForceDelete *bool `pulumi:"forceDelete"`
	// The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceCpuCore *int `pulumi:"instanceCpuCore"`
	// Duration time for maintenance, unit in second. `3600` by default.
	InstanceMaintainDuration *int `pulumi:"instanceMaintainDuration"`
	// Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
	InstanceMaintainStartTime *int `pulumi:"instanceMaintainStartTime"`
	// Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
	InstanceMaintainWeekdays []string `pulumi:"instanceMaintainWeekdays"`
	// Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceMemorySize *int `pulumi:"instanceMemorySize"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
	// Status of the instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// Storage size of the instance, unit in GB.
	InstanceStorageSize *int `pulumi:"instanceStorageSize"`
	// ID of the subnet within this VPC.
	SubnetId *string `pulumi:"subnetId"`
	// ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

type ReadonlyInstanceState struct {
	// Cluster ID which the readonly instance belongs to.
	ClusterId pulumi.StringPtrInput
	// Indicate whether to delete readonly instance directly or not. Default is false. If set true, instance will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
	ForceDelete pulumi.BoolPtrInput
	// The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceCpuCore pulumi.IntPtrInput
	// Duration time for maintenance, unit in second. `3600` by default.
	InstanceMaintainDuration pulumi.IntPtrInput
	// Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
	InstanceMaintainStartTime pulumi.IntPtrInput
	// Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
	InstanceMaintainWeekdays pulumi.StringArrayInput
	// Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceMemorySize pulumi.IntPtrInput
	// Name of instance.
	InstanceName pulumi.StringPtrInput
	// Status of the instance.
	InstanceStatus pulumi.StringPtrInput
	// Storage size of the instance, unit in GB.
	InstanceStorageSize pulumi.IntPtrInput
	// ID of the subnet within this VPC.
	SubnetId pulumi.StringPtrInput
	// ID of the VPC.
	VpcId pulumi.StringPtrInput
}

func (ReadonlyInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*readonlyInstanceState)(nil)).Elem()
}

type readonlyInstanceArgs struct {
	// Cluster ID which the readonly instance belongs to.
	ClusterId string `pulumi:"clusterId"`
	// Indicate whether to delete readonly instance directly or not. Default is false. If set true, instance will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
	ForceDelete *bool `pulumi:"forceDelete"`
	// The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceCpuCore *int `pulumi:"instanceCpuCore"`
	// Duration time for maintenance, unit in second. `3600` by default.
	InstanceMaintainDuration *int `pulumi:"instanceMaintainDuration"`
	// Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
	InstanceMaintainStartTime *int `pulumi:"instanceMaintainStartTime"`
	// Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
	InstanceMaintainWeekdays []string `pulumi:"instanceMaintainWeekdays"`
	// Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceMemorySize *int `pulumi:"instanceMemorySize"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// ID of the subnet within this VPC.
	SubnetId *string `pulumi:"subnetId"`
	// ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a ReadonlyInstance resource.
type ReadonlyInstanceArgs struct {
	// Cluster ID which the readonly instance belongs to.
	ClusterId pulumi.StringInput
	// Indicate whether to delete readonly instance directly or not. Default is false. If set true, instance will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
	ForceDelete pulumi.BoolPtrInput
	// The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceCpuCore pulumi.IntPtrInput
	// Duration time for maintenance, unit in second. `3600` by default.
	InstanceMaintainDuration pulumi.IntPtrInput
	// Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
	InstanceMaintainStartTime pulumi.IntPtrInput
	// Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
	InstanceMaintainWeekdays pulumi.StringArrayInput
	// Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
	InstanceMemorySize pulumi.IntPtrInput
	// Name of instance.
	InstanceName pulumi.StringInput
	// ID of the subnet within this VPC.
	SubnetId pulumi.StringPtrInput
	// ID of the VPC.
	VpcId pulumi.StringPtrInput
}

func (ReadonlyInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*readonlyInstanceArgs)(nil)).Elem()
}

type ReadonlyInstanceInput interface {
	pulumi.Input

	ToReadonlyInstanceOutput() ReadonlyInstanceOutput
	ToReadonlyInstanceOutputWithContext(ctx context.Context) ReadonlyInstanceOutput
}

func (*ReadonlyInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadonlyInstance)(nil)).Elem()
}

func (i *ReadonlyInstance) ToReadonlyInstanceOutput() ReadonlyInstanceOutput {
	return i.ToReadonlyInstanceOutputWithContext(context.Background())
}

func (i *ReadonlyInstance) ToReadonlyInstanceOutputWithContext(ctx context.Context) ReadonlyInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadonlyInstanceOutput)
}

// ReadonlyInstanceArrayInput is an input type that accepts ReadonlyInstanceArray and ReadonlyInstanceArrayOutput values.
// You can construct a concrete instance of `ReadonlyInstanceArrayInput` via:
//
//	ReadonlyInstanceArray{ ReadonlyInstanceArgs{...} }
type ReadonlyInstanceArrayInput interface {
	pulumi.Input

	ToReadonlyInstanceArrayOutput() ReadonlyInstanceArrayOutput
	ToReadonlyInstanceArrayOutputWithContext(context.Context) ReadonlyInstanceArrayOutput
}

type ReadonlyInstanceArray []ReadonlyInstanceInput

func (ReadonlyInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReadonlyInstance)(nil)).Elem()
}

func (i ReadonlyInstanceArray) ToReadonlyInstanceArrayOutput() ReadonlyInstanceArrayOutput {
	return i.ToReadonlyInstanceArrayOutputWithContext(context.Background())
}

func (i ReadonlyInstanceArray) ToReadonlyInstanceArrayOutputWithContext(ctx context.Context) ReadonlyInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadonlyInstanceArrayOutput)
}

// ReadonlyInstanceMapInput is an input type that accepts ReadonlyInstanceMap and ReadonlyInstanceMapOutput values.
// You can construct a concrete instance of `ReadonlyInstanceMapInput` via:
//
//	ReadonlyInstanceMap{ "key": ReadonlyInstanceArgs{...} }
type ReadonlyInstanceMapInput interface {
	pulumi.Input

	ToReadonlyInstanceMapOutput() ReadonlyInstanceMapOutput
	ToReadonlyInstanceMapOutputWithContext(context.Context) ReadonlyInstanceMapOutput
}

type ReadonlyInstanceMap map[string]ReadonlyInstanceInput

func (ReadonlyInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReadonlyInstance)(nil)).Elem()
}

func (i ReadonlyInstanceMap) ToReadonlyInstanceMapOutput() ReadonlyInstanceMapOutput {
	return i.ToReadonlyInstanceMapOutputWithContext(context.Background())
}

func (i ReadonlyInstanceMap) ToReadonlyInstanceMapOutputWithContext(ctx context.Context) ReadonlyInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadonlyInstanceMapOutput)
}

type ReadonlyInstanceOutput struct{ *pulumi.OutputState }

func (ReadonlyInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadonlyInstance)(nil)).Elem()
}

func (o ReadonlyInstanceOutput) ToReadonlyInstanceOutput() ReadonlyInstanceOutput {
	return o
}

func (o ReadonlyInstanceOutput) ToReadonlyInstanceOutputWithContext(ctx context.Context) ReadonlyInstanceOutput {
	return o
}

// Cluster ID which the readonly instance belongs to.
func (o ReadonlyInstanceOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Indicate whether to delete readonly instance directly or not. Default is false. If set true, instance will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
func (o ReadonlyInstanceOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
func (o ReadonlyInstanceOutput) InstanceCpuCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.IntPtrOutput { return v.InstanceCpuCore }).(pulumi.IntPtrOutput)
}

// Duration time for maintenance, unit in second. `3600` by default.
func (o ReadonlyInstanceOutput) InstanceMaintainDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.IntPtrOutput { return v.InstanceMaintainDuration }).(pulumi.IntPtrOutput)
}

// Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
func (o ReadonlyInstanceOutput) InstanceMaintainStartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.IntPtrOutput { return v.InstanceMaintainStartTime }).(pulumi.IntPtrOutput)
}

// Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
func (o ReadonlyInstanceOutput) InstanceMaintainWeekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.StringArrayOutput { return v.InstanceMaintainWeekdays }).(pulumi.StringArrayOutput)
}

// Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
func (o ReadonlyInstanceOutput) InstanceMemorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.IntPtrOutput { return v.InstanceMemorySize }).(pulumi.IntPtrOutput)
}

// Name of instance.
func (o ReadonlyInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// Status of the instance.
func (o ReadonlyInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.StringOutput { return v.InstanceStatus }).(pulumi.StringOutput)
}

// Storage size of the instance, unit in GB.
func (o ReadonlyInstanceOutput) InstanceStorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.IntOutput { return v.InstanceStorageSize }).(pulumi.IntOutput)
}

// ID of the subnet within this VPC.
func (o ReadonlyInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// ID of the VPC.
func (o ReadonlyInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadonlyInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type ReadonlyInstanceArrayOutput struct{ *pulumi.OutputState }

func (ReadonlyInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReadonlyInstance)(nil)).Elem()
}

func (o ReadonlyInstanceArrayOutput) ToReadonlyInstanceArrayOutput() ReadonlyInstanceArrayOutput {
	return o
}

func (o ReadonlyInstanceArrayOutput) ToReadonlyInstanceArrayOutputWithContext(ctx context.Context) ReadonlyInstanceArrayOutput {
	return o
}

func (o ReadonlyInstanceArrayOutput) Index(i pulumi.IntInput) ReadonlyInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReadonlyInstance {
		return vs[0].([]*ReadonlyInstance)[vs[1].(int)]
	}).(ReadonlyInstanceOutput)
}

type ReadonlyInstanceMapOutput struct{ *pulumi.OutputState }

func (ReadonlyInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReadonlyInstance)(nil)).Elem()
}

func (o ReadonlyInstanceMapOutput) ToReadonlyInstanceMapOutput() ReadonlyInstanceMapOutput {
	return o
}

func (o ReadonlyInstanceMapOutput) ToReadonlyInstanceMapOutputWithContext(ctx context.Context) ReadonlyInstanceMapOutput {
	return o
}

func (o ReadonlyInstanceMapOutput) MapIndex(k pulumi.StringInput) ReadonlyInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReadonlyInstance {
		return vs[0].(map[string]*ReadonlyInstance)[vs[1].(string)]
	}).(ReadonlyInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReadonlyInstanceInput)(nil)).Elem(), &ReadonlyInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadonlyInstanceArrayInput)(nil)).Elem(), ReadonlyInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadonlyInstanceMapInput)(nil)).Elem(), ReadonlyInstanceMap{})
	pulumi.RegisterOutputType(ReadonlyInstanceOutput{})
	pulumi.RegisterOutputType(ReadonlyInstanceArrayOutput{})
	pulumi.RegisterOutputType(ReadonlyInstanceMapOutput{})
}
