// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cynosdb accountPrivileges
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewAccountPrivileges(ctx, "accountPrivileges", &Cynosdb.AccountPrivilegesArgs{
//				AccountName: pulumi.String("test"),
//				ClusterId:   pulumi.String("cynosdbmysql-bws8h88b"),
//				DatabasePrivileges: cynosdb.AccountPrivilegesDatabasePrivilegeArray{
//					&cynosdb.AccountPrivilegesDatabasePrivilegeArgs{
//						Db: pulumi.String("users"),
//						Privileges: pulumi.StringArray{
//							pulumi.String("DROP"),
//							pulumi.String("REFERENCES"),
//							pulumi.String("INDEX"),
//							pulumi.String("CREATE VIEW"),
//							pulumi.String("INSERT"),
//							pulumi.String("EVENT"),
//						},
//					},
//				},
//				GlobalPrivileges: pulumi.StringArray{
//					pulumi.String("CREATE"),
//					pulumi.String("DROP"),
//					pulumi.String("ALTER"),
//					pulumi.String("CREATE TEMPORARY TABLES"),
//					pulumi.String("CREATE VIEW"),
//				},
//				Host: pulumi.String("%"),
//				TablePrivileges: cynosdb.AccountPrivilegesTablePrivilegeArray{
//					&cynosdb.AccountPrivilegesTablePrivilegeArgs{
//						Db: pulumi.String("users"),
//						Privileges: pulumi.StringArray{
//							pulumi.String("ALTER"),
//							pulumi.String("REFERENCES"),
//							pulumi.String("SHOW VIEW"),
//						},
//						TableName: pulumi.String("tb_user_name"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cynosdb account_privileges can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cynosdb/accountPrivileges:AccountPrivileges account_privileges account_privileges_id
//
// ```
type AccountPrivileges struct {
	pulumi.CustomResourceState

	// Account.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// Cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Array of database permissions.
	DatabasePrivileges AccountPrivilegesDatabasePrivilegeArrayOutput `pulumi:"databasePrivileges"`
	// Array of global permissions.
	GlobalPrivileges pulumi.StringArrayOutput `pulumi:"globalPrivileges"`
	// Host, default `%`.
	Host pulumi.StringPtrOutput `pulumi:"host"`
	// array of table permissions.
	TablePrivileges AccountPrivilegesTablePrivilegeArrayOutput `pulumi:"tablePrivileges"`
}

// NewAccountPrivileges registers a new resource with the given unique name, arguments, and options.
func NewAccountPrivileges(ctx *pulumi.Context,
	name string, args *AccountPrivilegesArgs, opts ...pulumi.ResourceOption) (*AccountPrivileges, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.GlobalPrivileges == nil {
		return nil, errors.New("invalid value for required argument 'GlobalPrivileges'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AccountPrivileges
	err := ctx.RegisterResource("tencentcloud:Cynosdb/accountPrivileges:AccountPrivileges", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountPrivileges gets an existing AccountPrivileges resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountPrivileges(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountPrivilegesState, opts ...pulumi.ResourceOption) (*AccountPrivileges, error) {
	var resource AccountPrivileges
	err := ctx.ReadResource("tencentcloud:Cynosdb/accountPrivileges:AccountPrivileges", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountPrivileges resources.
type accountPrivilegesState struct {
	// Account.
	AccountName *string `pulumi:"accountName"`
	// Cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Array of database permissions.
	DatabasePrivileges []AccountPrivilegesDatabasePrivilege `pulumi:"databasePrivileges"`
	// Array of global permissions.
	GlobalPrivileges []string `pulumi:"globalPrivileges"`
	// Host, default `%`.
	Host *string `pulumi:"host"`
	// array of table permissions.
	TablePrivileges []AccountPrivilegesTablePrivilege `pulumi:"tablePrivileges"`
}

type AccountPrivilegesState struct {
	// Account.
	AccountName pulumi.StringPtrInput
	// Cluster ID.
	ClusterId pulumi.StringPtrInput
	// Array of database permissions.
	DatabasePrivileges AccountPrivilegesDatabasePrivilegeArrayInput
	// Array of global permissions.
	GlobalPrivileges pulumi.StringArrayInput
	// Host, default `%`.
	Host pulumi.StringPtrInput
	// array of table permissions.
	TablePrivileges AccountPrivilegesTablePrivilegeArrayInput
}

func (AccountPrivilegesState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPrivilegesState)(nil)).Elem()
}

type accountPrivilegesArgs struct {
	// Account.
	AccountName string `pulumi:"accountName"`
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Array of database permissions.
	DatabasePrivileges []AccountPrivilegesDatabasePrivilege `pulumi:"databasePrivileges"`
	// Array of global permissions.
	GlobalPrivileges []string `pulumi:"globalPrivileges"`
	// Host, default `%`.
	Host *string `pulumi:"host"`
	// array of table permissions.
	TablePrivileges []AccountPrivilegesTablePrivilege `pulumi:"tablePrivileges"`
}

// The set of arguments for constructing a AccountPrivileges resource.
type AccountPrivilegesArgs struct {
	// Account.
	AccountName pulumi.StringInput
	// Cluster ID.
	ClusterId pulumi.StringInput
	// Array of database permissions.
	DatabasePrivileges AccountPrivilegesDatabasePrivilegeArrayInput
	// Array of global permissions.
	GlobalPrivileges pulumi.StringArrayInput
	// Host, default `%`.
	Host pulumi.StringPtrInput
	// array of table permissions.
	TablePrivileges AccountPrivilegesTablePrivilegeArrayInput
}

func (AccountPrivilegesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPrivilegesArgs)(nil)).Elem()
}

type AccountPrivilegesInput interface {
	pulumi.Input

	ToAccountPrivilegesOutput() AccountPrivilegesOutput
	ToAccountPrivilegesOutputWithContext(ctx context.Context) AccountPrivilegesOutput
}

func (*AccountPrivileges) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPrivileges)(nil)).Elem()
}

func (i *AccountPrivileges) ToAccountPrivilegesOutput() AccountPrivilegesOutput {
	return i.ToAccountPrivilegesOutputWithContext(context.Background())
}

func (i *AccountPrivileges) ToAccountPrivilegesOutputWithContext(ctx context.Context) AccountPrivilegesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegesOutput)
}

// AccountPrivilegesArrayInput is an input type that accepts AccountPrivilegesArray and AccountPrivilegesArrayOutput values.
// You can construct a concrete instance of `AccountPrivilegesArrayInput` via:
//
//	AccountPrivilegesArray{ AccountPrivilegesArgs{...} }
type AccountPrivilegesArrayInput interface {
	pulumi.Input

	ToAccountPrivilegesArrayOutput() AccountPrivilegesArrayOutput
	ToAccountPrivilegesArrayOutputWithContext(context.Context) AccountPrivilegesArrayOutput
}

type AccountPrivilegesArray []AccountPrivilegesInput

func (AccountPrivilegesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountPrivileges)(nil)).Elem()
}

func (i AccountPrivilegesArray) ToAccountPrivilegesArrayOutput() AccountPrivilegesArrayOutput {
	return i.ToAccountPrivilegesArrayOutputWithContext(context.Background())
}

func (i AccountPrivilegesArray) ToAccountPrivilegesArrayOutputWithContext(ctx context.Context) AccountPrivilegesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegesArrayOutput)
}

// AccountPrivilegesMapInput is an input type that accepts AccountPrivilegesMap and AccountPrivilegesMapOutput values.
// You can construct a concrete instance of `AccountPrivilegesMapInput` via:
//
//	AccountPrivilegesMap{ "key": AccountPrivilegesArgs{...} }
type AccountPrivilegesMapInput interface {
	pulumi.Input

	ToAccountPrivilegesMapOutput() AccountPrivilegesMapOutput
	ToAccountPrivilegesMapOutputWithContext(context.Context) AccountPrivilegesMapOutput
}

type AccountPrivilegesMap map[string]AccountPrivilegesInput

func (AccountPrivilegesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountPrivileges)(nil)).Elem()
}

func (i AccountPrivilegesMap) ToAccountPrivilegesMapOutput() AccountPrivilegesMapOutput {
	return i.ToAccountPrivilegesMapOutputWithContext(context.Background())
}

func (i AccountPrivilegesMap) ToAccountPrivilegesMapOutputWithContext(ctx context.Context) AccountPrivilegesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegesMapOutput)
}

type AccountPrivilegesOutput struct{ *pulumi.OutputState }

func (AccountPrivilegesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPrivileges)(nil)).Elem()
}

func (o AccountPrivilegesOutput) ToAccountPrivilegesOutput() AccountPrivilegesOutput {
	return o
}

func (o AccountPrivilegesOutput) ToAccountPrivilegesOutputWithContext(ctx context.Context) AccountPrivilegesOutput {
	return o
}

// Account.
func (o AccountPrivilegesOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountPrivileges) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// Cluster ID.
func (o AccountPrivilegesOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountPrivileges) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Array of database permissions.
func (o AccountPrivilegesOutput) DatabasePrivileges() AccountPrivilegesDatabasePrivilegeArrayOutput {
	return o.ApplyT(func(v *AccountPrivileges) AccountPrivilegesDatabasePrivilegeArrayOutput { return v.DatabasePrivileges }).(AccountPrivilegesDatabasePrivilegeArrayOutput)
}

// Array of global permissions.
func (o AccountPrivilegesOutput) GlobalPrivileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountPrivileges) pulumi.StringArrayOutput { return v.GlobalPrivileges }).(pulumi.StringArrayOutput)
}

// Host, default `%`.
func (o AccountPrivilegesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountPrivileges) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

// array of table permissions.
func (o AccountPrivilegesOutput) TablePrivileges() AccountPrivilegesTablePrivilegeArrayOutput {
	return o.ApplyT(func(v *AccountPrivileges) AccountPrivilegesTablePrivilegeArrayOutput { return v.TablePrivileges }).(AccountPrivilegesTablePrivilegeArrayOutput)
}

type AccountPrivilegesArrayOutput struct{ *pulumi.OutputState }

func (AccountPrivilegesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountPrivileges)(nil)).Elem()
}

func (o AccountPrivilegesArrayOutput) ToAccountPrivilegesArrayOutput() AccountPrivilegesArrayOutput {
	return o
}

func (o AccountPrivilegesArrayOutput) ToAccountPrivilegesArrayOutputWithContext(ctx context.Context) AccountPrivilegesArrayOutput {
	return o
}

func (o AccountPrivilegesArrayOutput) Index(i pulumi.IntInput) AccountPrivilegesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountPrivileges {
		return vs[0].([]*AccountPrivileges)[vs[1].(int)]
	}).(AccountPrivilegesOutput)
}

type AccountPrivilegesMapOutput struct{ *pulumi.OutputState }

func (AccountPrivilegesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountPrivileges)(nil)).Elem()
}

func (o AccountPrivilegesMapOutput) ToAccountPrivilegesMapOutput() AccountPrivilegesMapOutput {
	return o
}

func (o AccountPrivilegesMapOutput) ToAccountPrivilegesMapOutputWithContext(ctx context.Context) AccountPrivilegesMapOutput {
	return o
}

func (o AccountPrivilegesMapOutput) MapIndex(k pulumi.StringInput) AccountPrivilegesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountPrivileges {
		return vs[0].(map[string]*AccountPrivileges)[vs[1].(string)]
	}).(AccountPrivilegesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegesInput)(nil)).Elem(), &AccountPrivileges{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegesArrayInput)(nil)).Elem(), AccountPrivilegesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegesMapInput)(nil)).Elem(), AccountPrivilegesMap{})
	pulumi.RegisterOutputType(AccountPrivilegesOutput{})
	pulumi.RegisterOutputType(AccountPrivilegesArrayOutput{})
	pulumi.RegisterOutputType(AccountPrivilegesMapOutput{})
}
