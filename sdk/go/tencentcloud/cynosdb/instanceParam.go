// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cynosdb instanceParam
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.NewInstanceParam(ctx, "instanceParam", &Cynosdb.InstanceParamArgs{
//				ClusterId:  pulumi.String("cynosdbmysql-bws8h88b"),
//				InstanceId: pulumi.String("cynosdbmysql-ins-rikr6z4o"),
//				InstanceParamLists: cynosdb.InstanceParamInstanceParamListArray{
//					&cynosdb.InstanceParamInstanceParamListArgs{
//						CurrentValue: pulumi.String("0"),
//						ParamName:    pulumi.String("init_connect"),
//					},
//				},
//				IsInMaintainPeriod: pulumi.String("no"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type InstanceParam struct {
	pulumi.CustomResourceState

	// Cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Instance ID.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// Instance parameter list.
	InstanceParamLists InstanceParamInstanceParamListArrayOutput `pulumi:"instanceParamLists"`
	// Yes: modify within the operation and maintenance time window, no: execute immediately (default value).
	IsInMaintainPeriod pulumi.StringPtrOutput `pulumi:"isInMaintainPeriod"`
}

// NewInstanceParam registers a new resource with the given unique name, arguments, and options.
func NewInstanceParam(ctx *pulumi.Context,
	name string, args *InstanceParamArgs, opts ...pulumi.ResourceOption) (*InstanceParam, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InstanceParam
	err := ctx.RegisterResource("tencentcloud:Cynosdb/instanceParam:InstanceParam", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceParam gets an existing InstanceParam resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceParam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceParamState, opts ...pulumi.ResourceOption) (*InstanceParam, error) {
	var resource InstanceParam
	err := ctx.ReadResource("tencentcloud:Cynosdb/instanceParam:InstanceParam", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceParam resources.
type instanceParamState struct {
	// Cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Instance parameter list.
	InstanceParamLists []InstanceParamInstanceParamList `pulumi:"instanceParamLists"`
	// Yes: modify within the operation and maintenance time window, no: execute immediately (default value).
	IsInMaintainPeriod *string `pulumi:"isInMaintainPeriod"`
}

type InstanceParamState struct {
	// Cluster ID.
	ClusterId pulumi.StringPtrInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Instance parameter list.
	InstanceParamLists InstanceParamInstanceParamListArrayInput
	// Yes: modify within the operation and maintenance time window, no: execute immediately (default value).
	IsInMaintainPeriod pulumi.StringPtrInput
}

func (InstanceParamState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceParamState)(nil)).Elem()
}

type instanceParamArgs struct {
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Instance parameter list.
	InstanceParamLists []InstanceParamInstanceParamList `pulumi:"instanceParamLists"`
	// Yes: modify within the operation and maintenance time window, no: execute immediately (default value).
	IsInMaintainPeriod *string `pulumi:"isInMaintainPeriod"`
}

// The set of arguments for constructing a InstanceParam resource.
type InstanceParamArgs struct {
	// Cluster ID.
	ClusterId pulumi.StringInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Instance parameter list.
	InstanceParamLists InstanceParamInstanceParamListArrayInput
	// Yes: modify within the operation and maintenance time window, no: execute immediately (default value).
	IsInMaintainPeriod pulumi.StringPtrInput
}

func (InstanceParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceParamArgs)(nil)).Elem()
}

type InstanceParamInput interface {
	pulumi.Input

	ToInstanceParamOutput() InstanceParamOutput
	ToInstanceParamOutputWithContext(ctx context.Context) InstanceParamOutput
}

func (*InstanceParam) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceParam)(nil)).Elem()
}

func (i *InstanceParam) ToInstanceParamOutput() InstanceParamOutput {
	return i.ToInstanceParamOutputWithContext(context.Background())
}

func (i *InstanceParam) ToInstanceParamOutputWithContext(ctx context.Context) InstanceParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamOutput)
}

// InstanceParamArrayInput is an input type that accepts InstanceParamArray and InstanceParamArrayOutput values.
// You can construct a concrete instance of `InstanceParamArrayInput` via:
//
//	InstanceParamArray{ InstanceParamArgs{...} }
type InstanceParamArrayInput interface {
	pulumi.Input

	ToInstanceParamArrayOutput() InstanceParamArrayOutput
	ToInstanceParamArrayOutputWithContext(context.Context) InstanceParamArrayOutput
}

type InstanceParamArray []InstanceParamInput

func (InstanceParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceParam)(nil)).Elem()
}

func (i InstanceParamArray) ToInstanceParamArrayOutput() InstanceParamArrayOutput {
	return i.ToInstanceParamArrayOutputWithContext(context.Background())
}

func (i InstanceParamArray) ToInstanceParamArrayOutputWithContext(ctx context.Context) InstanceParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamArrayOutput)
}

// InstanceParamMapInput is an input type that accepts InstanceParamMap and InstanceParamMapOutput values.
// You can construct a concrete instance of `InstanceParamMapInput` via:
//
//	InstanceParamMap{ "key": InstanceParamArgs{...} }
type InstanceParamMapInput interface {
	pulumi.Input

	ToInstanceParamMapOutput() InstanceParamMapOutput
	ToInstanceParamMapOutputWithContext(context.Context) InstanceParamMapOutput
}

type InstanceParamMap map[string]InstanceParamInput

func (InstanceParamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceParam)(nil)).Elem()
}

func (i InstanceParamMap) ToInstanceParamMapOutput() InstanceParamMapOutput {
	return i.ToInstanceParamMapOutputWithContext(context.Background())
}

func (i InstanceParamMap) ToInstanceParamMapOutputWithContext(ctx context.Context) InstanceParamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamMapOutput)
}

type InstanceParamOutput struct{ *pulumi.OutputState }

func (InstanceParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceParam)(nil)).Elem()
}

func (o InstanceParamOutput) ToInstanceParamOutput() InstanceParamOutput {
	return o
}

func (o InstanceParamOutput) ToInstanceParamOutputWithContext(ctx context.Context) InstanceParamOutput {
	return o
}

// Cluster ID.
func (o InstanceParamOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceParam) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Instance ID.
func (o InstanceParamOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceParam) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Instance parameter list.
func (o InstanceParamOutput) InstanceParamLists() InstanceParamInstanceParamListArrayOutput {
	return o.ApplyT(func(v *InstanceParam) InstanceParamInstanceParamListArrayOutput { return v.InstanceParamLists }).(InstanceParamInstanceParamListArrayOutput)
}

// Yes: modify within the operation and maintenance time window, no: execute immediately (default value).
func (o InstanceParamOutput) IsInMaintainPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceParam) pulumi.StringPtrOutput { return v.IsInMaintainPeriod }).(pulumi.StringPtrOutput)
}

type InstanceParamArrayOutput struct{ *pulumi.OutputState }

func (InstanceParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceParam)(nil)).Elem()
}

func (o InstanceParamArrayOutput) ToInstanceParamArrayOutput() InstanceParamArrayOutput {
	return o
}

func (o InstanceParamArrayOutput) ToInstanceParamArrayOutputWithContext(ctx context.Context) InstanceParamArrayOutput {
	return o
}

func (o InstanceParamArrayOutput) Index(i pulumi.IntInput) InstanceParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceParam {
		return vs[0].([]*InstanceParam)[vs[1].(int)]
	}).(InstanceParamOutput)
}

type InstanceParamMapOutput struct{ *pulumi.OutputState }

func (InstanceParamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceParam)(nil)).Elem()
}

func (o InstanceParamMapOutput) ToInstanceParamMapOutput() InstanceParamMapOutput {
	return o
}

func (o InstanceParamMapOutput) ToInstanceParamMapOutputWithContext(ctx context.Context) InstanceParamMapOutput {
	return o
}

func (o InstanceParamMapOutput) MapIndex(k pulumi.StringInput) InstanceParamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceParam {
		return vs[0].(map[string]*InstanceParam)[vs[1].(string)]
	}).(InstanceParamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamInput)(nil)).Elem(), &InstanceParam{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamArrayInput)(nil)).Elem(), InstanceParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamMapInput)(nil)).Elem(), InstanceParamMap{})
	pulumi.RegisterOutputType(InstanceParamOutput{})
	pulumi.RegisterOutputType(InstanceParamArrayOutput{})
	pulumi.RegisterOutputType(InstanceParamMapOutput{})
}
