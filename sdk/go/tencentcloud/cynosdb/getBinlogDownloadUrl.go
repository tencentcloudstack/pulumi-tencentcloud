// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cynosdb binlogDownloadUrl
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cynosdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cynosdb.GetBinlogDownloadUrl(ctx, &cynosdb.GetBinlogDownloadUrlArgs{
//				BinlogId:  6202249,
//				ClusterId: "cynosdbmysql-bws8h88b",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBinlogDownloadUrl(ctx *pulumi.Context, args *GetBinlogDownloadUrlArgs, opts ...pulumi.InvokeOption) (*GetBinlogDownloadUrlResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetBinlogDownloadUrlResult
	err := ctx.Invoke("tencentcloud:Cynosdb/getBinlogDownloadUrl:getBinlogDownloadUrl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBinlogDownloadUrl.
type GetBinlogDownloadUrlArgs struct {
	// Binlog file ID.
	BinlogId int `pulumi:"binlogId"`
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getBinlogDownloadUrl.
type GetBinlogDownloadUrlResult struct {
	BinlogId  int    `pulumi:"binlogId"`
	ClusterId string `pulumi:"clusterId"`
	// Download address.
	DownloadUrl string `pulumi:"downloadUrl"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetBinlogDownloadUrlOutput(ctx *pulumi.Context, args GetBinlogDownloadUrlOutputArgs, opts ...pulumi.InvokeOption) GetBinlogDownloadUrlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBinlogDownloadUrlResult, error) {
			args := v.(GetBinlogDownloadUrlArgs)
			r, err := GetBinlogDownloadUrl(ctx, &args, opts...)
			var s GetBinlogDownloadUrlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBinlogDownloadUrlResultOutput)
}

// A collection of arguments for invoking getBinlogDownloadUrl.
type GetBinlogDownloadUrlOutputArgs struct {
	// Binlog file ID.
	BinlogId pulumi.IntInput `pulumi:"binlogId"`
	// Cluster ID.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetBinlogDownloadUrlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBinlogDownloadUrlArgs)(nil)).Elem()
}

// A collection of values returned by getBinlogDownloadUrl.
type GetBinlogDownloadUrlResultOutput struct{ *pulumi.OutputState }

func (GetBinlogDownloadUrlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBinlogDownloadUrlResult)(nil)).Elem()
}

func (o GetBinlogDownloadUrlResultOutput) ToGetBinlogDownloadUrlResultOutput() GetBinlogDownloadUrlResultOutput {
	return o
}

func (o GetBinlogDownloadUrlResultOutput) ToGetBinlogDownloadUrlResultOutputWithContext(ctx context.Context) GetBinlogDownloadUrlResultOutput {
	return o
}

func (o GetBinlogDownloadUrlResultOutput) BinlogId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBinlogDownloadUrlResult) int { return v.BinlogId }).(pulumi.IntOutput)
}

func (o GetBinlogDownloadUrlResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinlogDownloadUrlResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Download address.
func (o GetBinlogDownloadUrlResultOutput) DownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinlogDownloadUrlResult) string { return v.DownloadUrl }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBinlogDownloadUrlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBinlogDownloadUrlResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBinlogDownloadUrlResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBinlogDownloadUrlResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBinlogDownloadUrlResultOutput{})
}
