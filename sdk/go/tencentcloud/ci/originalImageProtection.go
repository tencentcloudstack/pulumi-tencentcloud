// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage original image protection functionality
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ci"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ci.NewOriginalImageProtection(ctx, "foo", &Ci.OriginalImageProtectionArgs{
//				Bucket: pulumi.String("examplebucket-1250000000"),
//				Status: pulumi.String("on"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Resource original image protection can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ci/originalImageProtection:OriginalImageProtection example examplebucket-1250000000
//
// ```
type OriginalImageProtection struct {
	pulumi.CustomResourceState

	// The name of a bucket, the format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Whether original image protection is set, options: on/off.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewOriginalImageProtection registers a new resource with the given unique name, arguments, and options.
func NewOriginalImageProtection(ctx *pulumi.Context,
	name string, args *OriginalImageProtectionArgs, opts ...pulumi.ResourceOption) (*OriginalImageProtection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource OriginalImageProtection
	err := ctx.RegisterResource("tencentcloud:Ci/originalImageProtection:OriginalImageProtection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginalImageProtection gets an existing OriginalImageProtection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginalImageProtection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginalImageProtectionState, opts ...pulumi.ResourceOption) (*OriginalImageProtection, error) {
	var resource OriginalImageProtection
	err := ctx.ReadResource("tencentcloud:Ci/originalImageProtection:OriginalImageProtection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginalImageProtection resources.
type originalImageProtectionState struct {
	// The name of a bucket, the format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket *string `pulumi:"bucket"`
	// Whether original image protection is set, options: on/off.
	Status *string `pulumi:"status"`
}

type OriginalImageProtectionState struct {
	// The name of a bucket, the format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket pulumi.StringPtrInput
	// Whether original image protection is set, options: on/off.
	Status pulumi.StringPtrInput
}

func (OriginalImageProtectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*originalImageProtectionState)(nil)).Elem()
}

type originalImageProtectionArgs struct {
	// The name of a bucket, the format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket string `pulumi:"bucket"`
	// Whether original image protection is set, options: on/off.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a OriginalImageProtection resource.
type OriginalImageProtectionArgs struct {
	// The name of a bucket, the format should be [custom name]-[appid], for example `mycos-1258798060`.
	Bucket pulumi.StringInput
	// Whether original image protection is set, options: on/off.
	Status pulumi.StringInput
}

func (OriginalImageProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originalImageProtectionArgs)(nil)).Elem()
}

type OriginalImageProtectionInput interface {
	pulumi.Input

	ToOriginalImageProtectionOutput() OriginalImageProtectionOutput
	ToOriginalImageProtectionOutputWithContext(ctx context.Context) OriginalImageProtectionOutput
}

func (*OriginalImageProtection) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginalImageProtection)(nil)).Elem()
}

func (i *OriginalImageProtection) ToOriginalImageProtectionOutput() OriginalImageProtectionOutput {
	return i.ToOriginalImageProtectionOutputWithContext(context.Background())
}

func (i *OriginalImageProtection) ToOriginalImageProtectionOutputWithContext(ctx context.Context) OriginalImageProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginalImageProtectionOutput)
}

// OriginalImageProtectionArrayInput is an input type that accepts OriginalImageProtectionArray and OriginalImageProtectionArrayOutput values.
// You can construct a concrete instance of `OriginalImageProtectionArrayInput` via:
//
//	OriginalImageProtectionArray{ OriginalImageProtectionArgs{...} }
type OriginalImageProtectionArrayInput interface {
	pulumi.Input

	ToOriginalImageProtectionArrayOutput() OriginalImageProtectionArrayOutput
	ToOriginalImageProtectionArrayOutputWithContext(context.Context) OriginalImageProtectionArrayOutput
}

type OriginalImageProtectionArray []OriginalImageProtectionInput

func (OriginalImageProtectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginalImageProtection)(nil)).Elem()
}

func (i OriginalImageProtectionArray) ToOriginalImageProtectionArrayOutput() OriginalImageProtectionArrayOutput {
	return i.ToOriginalImageProtectionArrayOutputWithContext(context.Background())
}

func (i OriginalImageProtectionArray) ToOriginalImageProtectionArrayOutputWithContext(ctx context.Context) OriginalImageProtectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginalImageProtectionArrayOutput)
}

// OriginalImageProtectionMapInput is an input type that accepts OriginalImageProtectionMap and OriginalImageProtectionMapOutput values.
// You can construct a concrete instance of `OriginalImageProtectionMapInput` via:
//
//	OriginalImageProtectionMap{ "key": OriginalImageProtectionArgs{...} }
type OriginalImageProtectionMapInput interface {
	pulumi.Input

	ToOriginalImageProtectionMapOutput() OriginalImageProtectionMapOutput
	ToOriginalImageProtectionMapOutputWithContext(context.Context) OriginalImageProtectionMapOutput
}

type OriginalImageProtectionMap map[string]OriginalImageProtectionInput

func (OriginalImageProtectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginalImageProtection)(nil)).Elem()
}

func (i OriginalImageProtectionMap) ToOriginalImageProtectionMapOutput() OriginalImageProtectionMapOutput {
	return i.ToOriginalImageProtectionMapOutputWithContext(context.Background())
}

func (i OriginalImageProtectionMap) ToOriginalImageProtectionMapOutputWithContext(ctx context.Context) OriginalImageProtectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginalImageProtectionMapOutput)
}

type OriginalImageProtectionOutput struct{ *pulumi.OutputState }

func (OriginalImageProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginalImageProtection)(nil)).Elem()
}

func (o OriginalImageProtectionOutput) ToOriginalImageProtectionOutput() OriginalImageProtectionOutput {
	return o
}

func (o OriginalImageProtectionOutput) ToOriginalImageProtectionOutputWithContext(ctx context.Context) OriginalImageProtectionOutput {
	return o
}

// The name of a bucket, the format should be [custom name]-[appid], for example `mycos-1258798060`.
func (o OriginalImageProtectionOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginalImageProtection) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Whether original image protection is set, options: on/off.
func (o OriginalImageProtectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginalImageProtection) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type OriginalImageProtectionArrayOutput struct{ *pulumi.OutputState }

func (OriginalImageProtectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginalImageProtection)(nil)).Elem()
}

func (o OriginalImageProtectionArrayOutput) ToOriginalImageProtectionArrayOutput() OriginalImageProtectionArrayOutput {
	return o
}

func (o OriginalImageProtectionArrayOutput) ToOriginalImageProtectionArrayOutputWithContext(ctx context.Context) OriginalImageProtectionArrayOutput {
	return o
}

func (o OriginalImageProtectionArrayOutput) Index(i pulumi.IntInput) OriginalImageProtectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OriginalImageProtection {
		return vs[0].([]*OriginalImageProtection)[vs[1].(int)]
	}).(OriginalImageProtectionOutput)
}

type OriginalImageProtectionMapOutput struct{ *pulumi.OutputState }

func (OriginalImageProtectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginalImageProtection)(nil)).Elem()
}

func (o OriginalImageProtectionMapOutput) ToOriginalImageProtectionMapOutput() OriginalImageProtectionMapOutput {
	return o
}

func (o OriginalImageProtectionMapOutput) ToOriginalImageProtectionMapOutputWithContext(ctx context.Context) OriginalImageProtectionMapOutput {
	return o
}

func (o OriginalImageProtectionMapOutput) MapIndex(k pulumi.StringInput) OriginalImageProtectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OriginalImageProtection {
		return vs[0].(map[string]*OriginalImageProtection)[vs[1].(string)]
	}).(OriginalImageProtectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginalImageProtectionInput)(nil)).Elem(), &OriginalImageProtection{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginalImageProtectionArrayInput)(nil)).Elem(), OriginalImageProtectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginalImageProtectionMapInput)(nil)).Elem(), OriginalImageProtectionMap{})
	pulumi.RegisterOutputType(OriginalImageProtectionOutput{})
	pulumi.RegisterOutputType(OriginalImageProtectionArrayOutput{})
	pulumi.RegisterOutputType(OriginalImageProtectionMapOutput{})
}
