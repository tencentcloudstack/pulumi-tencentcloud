// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterPlacementInfo struct {
	// Project id.
	ProjectId *int `pulumi:"projectId"`
	// Zone.
	Zone string `pulumi:"zone"`
}

// ClusterPlacementInfoInput is an input type that accepts ClusterPlacementInfoArgs and ClusterPlacementInfoOutput values.
// You can construct a concrete instance of `ClusterPlacementInfoInput` via:
//
//	ClusterPlacementInfoArgs{...}
type ClusterPlacementInfoInput interface {
	pulumi.Input

	ToClusterPlacementInfoOutput() ClusterPlacementInfoOutput
	ToClusterPlacementInfoOutputWithContext(context.Context) ClusterPlacementInfoOutput
}

type ClusterPlacementInfoArgs struct {
	// Project id.
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
	// Zone.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ClusterPlacementInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPlacementInfo)(nil)).Elem()
}

func (i ClusterPlacementInfoArgs) ToClusterPlacementInfoOutput() ClusterPlacementInfoOutput {
	return i.ToClusterPlacementInfoOutputWithContext(context.Background())
}

func (i ClusterPlacementInfoArgs) ToClusterPlacementInfoOutputWithContext(ctx context.Context) ClusterPlacementInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPlacementInfoOutput)
}

func (i ClusterPlacementInfoArgs) ToClusterPlacementInfoPtrOutput() ClusterPlacementInfoPtrOutput {
	return i.ToClusterPlacementInfoPtrOutputWithContext(context.Background())
}

func (i ClusterPlacementInfoArgs) ToClusterPlacementInfoPtrOutputWithContext(ctx context.Context) ClusterPlacementInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPlacementInfoOutput).ToClusterPlacementInfoPtrOutputWithContext(ctx)
}

// ClusterPlacementInfoPtrInput is an input type that accepts ClusterPlacementInfoArgs, ClusterPlacementInfoPtr and ClusterPlacementInfoPtrOutput values.
// You can construct a concrete instance of `ClusterPlacementInfoPtrInput` via:
//
//	        ClusterPlacementInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterPlacementInfoPtrInput interface {
	pulumi.Input

	ToClusterPlacementInfoPtrOutput() ClusterPlacementInfoPtrOutput
	ToClusterPlacementInfoPtrOutputWithContext(context.Context) ClusterPlacementInfoPtrOutput
}

type clusterPlacementInfoPtrType ClusterPlacementInfoArgs

func ClusterPlacementInfoPtr(v *ClusterPlacementInfoArgs) ClusterPlacementInfoPtrInput {
	return (*clusterPlacementInfoPtrType)(v)
}

func (*clusterPlacementInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPlacementInfo)(nil)).Elem()
}

func (i *clusterPlacementInfoPtrType) ToClusterPlacementInfoPtrOutput() ClusterPlacementInfoPtrOutput {
	return i.ToClusterPlacementInfoPtrOutputWithContext(context.Background())
}

func (i *clusterPlacementInfoPtrType) ToClusterPlacementInfoPtrOutputWithContext(ctx context.Context) ClusterPlacementInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPlacementInfoPtrOutput)
}

type ClusterPlacementInfoOutput struct{ *pulumi.OutputState }

func (ClusterPlacementInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPlacementInfo)(nil)).Elem()
}

func (o ClusterPlacementInfoOutput) ToClusterPlacementInfoOutput() ClusterPlacementInfoOutput {
	return o
}

func (o ClusterPlacementInfoOutput) ToClusterPlacementInfoOutputWithContext(ctx context.Context) ClusterPlacementInfoOutput {
	return o
}

func (o ClusterPlacementInfoOutput) ToClusterPlacementInfoPtrOutput() ClusterPlacementInfoPtrOutput {
	return o.ToClusterPlacementInfoPtrOutputWithContext(context.Background())
}

func (o ClusterPlacementInfoOutput) ToClusterPlacementInfoPtrOutputWithContext(ctx context.Context) ClusterPlacementInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPlacementInfo) *ClusterPlacementInfo {
		return &v
	}).(ClusterPlacementInfoPtrOutput)
}

// Project id.
func (o ClusterPlacementInfoOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterPlacementInfo) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// Zone.
func (o ClusterPlacementInfoOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPlacementInfo) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterPlacementInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterPlacementInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPlacementInfo)(nil)).Elem()
}

func (o ClusterPlacementInfoPtrOutput) ToClusterPlacementInfoPtrOutput() ClusterPlacementInfoPtrOutput {
	return o
}

func (o ClusterPlacementInfoPtrOutput) ToClusterPlacementInfoPtrOutputWithContext(ctx context.Context) ClusterPlacementInfoPtrOutput {
	return o
}

func (o ClusterPlacementInfoPtrOutput) Elem() ClusterPlacementInfoOutput {
	return o.ApplyT(func(v *ClusterPlacementInfo) ClusterPlacementInfo {
		if v != nil {
			return *v
		}
		var ret ClusterPlacementInfo
		return ret
	}).(ClusterPlacementInfoOutput)
}

// Project id.
func (o ClusterPlacementInfoPtrOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPlacementInfo) *int {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.IntPtrOutput)
}

// Zone.
func (o ClusterPlacementInfoPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPlacementInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

type ClusterResourceSpec struct {
	// The number of common node.
	CommonCount        *int                                   `pulumi:"commonCount"`
	CommonResourceSpec *ClusterResourceSpecCommonResourceSpec `pulumi:"commonResourceSpec"`
	// The number of core node.
	CoreCount        *int                                 `pulumi:"coreCount"`
	CoreResourceSpec *ClusterResourceSpecCoreResourceSpec `pulumi:"coreResourceSpec"`
	// The number of master node.
	MasterCount        *int                                   `pulumi:"masterCount"`
	MasterResourceSpec *ClusterResourceSpecMasterResourceSpec `pulumi:"masterResourceSpec"`
	// The number of core node.
	TaskCount        *int                                 `pulumi:"taskCount"`
	TaskResourceSpec *ClusterResourceSpecTaskResourceSpec `pulumi:"taskResourceSpec"`
}

// ClusterResourceSpecInput is an input type that accepts ClusterResourceSpecArgs and ClusterResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecInput` via:
//
//	ClusterResourceSpecArgs{...}
type ClusterResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecOutput() ClusterResourceSpecOutput
	ToClusterResourceSpecOutputWithContext(context.Context) ClusterResourceSpecOutput
}

type ClusterResourceSpecArgs struct {
	// The number of common node.
	CommonCount        pulumi.IntPtrInput                            `pulumi:"commonCount"`
	CommonResourceSpec ClusterResourceSpecCommonResourceSpecPtrInput `pulumi:"commonResourceSpec"`
	// The number of core node.
	CoreCount        pulumi.IntPtrInput                          `pulumi:"coreCount"`
	CoreResourceSpec ClusterResourceSpecCoreResourceSpecPtrInput `pulumi:"coreResourceSpec"`
	// The number of master node.
	MasterCount        pulumi.IntPtrInput                            `pulumi:"masterCount"`
	MasterResourceSpec ClusterResourceSpecMasterResourceSpecPtrInput `pulumi:"masterResourceSpec"`
	// The number of core node.
	TaskCount        pulumi.IntPtrInput                          `pulumi:"taskCount"`
	TaskResourceSpec ClusterResourceSpecTaskResourceSpecPtrInput `pulumi:"taskResourceSpec"`
}

func (ClusterResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecOutput() ClusterResourceSpecOutput {
	return i.ToClusterResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecOutput)
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecOutput).ToClusterResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecPtrInput is an input type that accepts ClusterResourceSpecArgs, ClusterResourceSpecPtr and ClusterResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput
	ToClusterResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecPtrOutput
}

type clusterResourceSpecPtrType ClusterResourceSpecArgs

func ClusterResourceSpecPtr(v *ClusterResourceSpecArgs) ClusterResourceSpecPtrInput {
	return (*clusterResourceSpecPtrType)(v)
}

func (*clusterResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecPtrType) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecPtrType) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecPtrOutput)
}

type ClusterResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecOutput() ClusterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return o.ToClusterResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpec) *ClusterResourceSpec {
		return &v
	}).(ClusterResourceSpecPtrOutput)
}

// The number of common node.
func (o ClusterResourceSpecOutput) CommonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.CommonCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) CommonResourceSpec() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecCommonResourceSpec { return v.CommonResourceSpec }).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

// The number of core node.
func (o ClusterResourceSpecOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) CoreResourceSpec() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecCoreResourceSpec { return v.CoreResourceSpec }).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

// The number of master node.
func (o ClusterResourceSpecOutput) MasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.MasterCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) MasterResourceSpec() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecMasterResourceSpec { return v.MasterResourceSpec }).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

// The number of core node.
func (o ClusterResourceSpecOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.TaskCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) TaskResourceSpec() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecTaskResourceSpec { return v.TaskResourceSpec }).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

type ClusterResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecPtrOutput) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecPtrOutput) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecPtrOutput) Elem() ClusterResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) ClusterResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpec
		return ret
	}).(ClusterResourceSpecOutput)
}

// The number of common node.
func (o ClusterResourceSpecPtrOutput) CommonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.CommonCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) CommonResourceSpec() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecCommonResourceSpec {
		if v == nil {
			return nil
		}
		return v.CommonResourceSpec
	}).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

// The number of core node.
func (o ClusterResourceSpecPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.CoreCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) CoreResourceSpec() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecCoreResourceSpec {
		if v == nil {
			return nil
		}
		return v.CoreResourceSpec
	}).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

// The number of master node.
func (o ClusterResourceSpecPtrOutput) MasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MasterCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) MasterResourceSpec() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecMasterResourceSpec {
		if v == nil {
			return nil
		}
		return v.MasterResourceSpec
	}).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

// The number of core node.
func (o ClusterResourceSpecPtrOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.TaskCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) TaskResourceSpec() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecTaskResourceSpec {
		if v == nil {
			return nil
		}
		return v.TaskResourceSpec
	}).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

type ClusterResourceSpecCommonResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecCommonResourceSpecInput is an input type that accepts ClusterResourceSpecCommonResourceSpecArgs and ClusterResourceSpecCommonResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCommonResourceSpecInput` via:
//
//	ClusterResourceSpecCommonResourceSpecArgs{...}
type ClusterResourceSpecCommonResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecCommonResourceSpecOutput() ClusterResourceSpecCommonResourceSpecOutput
	ToClusterResourceSpecCommonResourceSpecOutputWithContext(context.Context) ClusterResourceSpecCommonResourceSpecOutput
}

type ClusterResourceSpecCommonResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecCommonResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecOutput() ClusterResourceSpecCommonResourceSpecOutput {
	return i.ToClusterResourceSpecCommonResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCommonResourceSpecOutput)
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCommonResourceSpecOutput).ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecCommonResourceSpecPtrInput is an input type that accepts ClusterResourceSpecCommonResourceSpecArgs, ClusterResourceSpecCommonResourceSpecPtr and ClusterResourceSpecCommonResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCommonResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecCommonResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecCommonResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput
	ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput
}

type clusterResourceSpecCommonResourceSpecPtrType ClusterResourceSpecCommonResourceSpecArgs

func ClusterResourceSpecCommonResourceSpecPtr(v *ClusterResourceSpecCommonResourceSpecArgs) ClusterResourceSpecCommonResourceSpecPtrInput {
	return (*clusterResourceSpecCommonResourceSpecPtrType)(v)
}

func (*clusterResourceSpecCommonResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecCommonResourceSpecPtrType) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecCommonResourceSpecPtrType) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

type ClusterResourceSpecCommonResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCommonResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecOutput() ClusterResourceSpecCommonResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecCommonResourceSpec) *ClusterResourceSpecCommonResourceSpec {
		return &v
	}).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecCommonResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCommonResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) Elem() ClusterResourceSpecCommonResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) ClusterResourceSpecCommonResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecCommonResourceSpec
		return ret
	}).(ClusterResourceSpecCommonResourceSpecOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecCoreResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecCoreResourceSpecInput is an input type that accepts ClusterResourceSpecCoreResourceSpecArgs and ClusterResourceSpecCoreResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCoreResourceSpecInput` via:
//
//	ClusterResourceSpecCoreResourceSpecArgs{...}
type ClusterResourceSpecCoreResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecCoreResourceSpecOutput() ClusterResourceSpecCoreResourceSpecOutput
	ToClusterResourceSpecCoreResourceSpecOutputWithContext(context.Context) ClusterResourceSpecCoreResourceSpecOutput
}

type ClusterResourceSpecCoreResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecCoreResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecOutput() ClusterResourceSpecCoreResourceSpecOutput {
	return i.ToClusterResourceSpecCoreResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCoreResourceSpecOutput)
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCoreResourceSpecOutput).ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecCoreResourceSpecPtrInput is an input type that accepts ClusterResourceSpecCoreResourceSpecArgs, ClusterResourceSpecCoreResourceSpecPtr and ClusterResourceSpecCoreResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCoreResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecCoreResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecCoreResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput
	ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput
}

type clusterResourceSpecCoreResourceSpecPtrType ClusterResourceSpecCoreResourceSpecArgs

func ClusterResourceSpecCoreResourceSpecPtr(v *ClusterResourceSpecCoreResourceSpecArgs) ClusterResourceSpecCoreResourceSpecPtrInput {
	return (*clusterResourceSpecCoreResourceSpecPtrType)(v)
}

func (*clusterResourceSpecCoreResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecCoreResourceSpecPtrType) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecCoreResourceSpecPtrType) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

type ClusterResourceSpecCoreResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCoreResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecOutput() ClusterResourceSpecCoreResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecCoreResourceSpec) *ClusterResourceSpecCoreResourceSpec {
		return &v
	}).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecCoreResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCoreResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) Elem() ClusterResourceSpecCoreResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) ClusterResourceSpecCoreResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecCoreResourceSpec
		return ret
	}).(ClusterResourceSpecCoreResourceSpecOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecMasterResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecMasterResourceSpecInput is an input type that accepts ClusterResourceSpecMasterResourceSpecArgs and ClusterResourceSpecMasterResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecMasterResourceSpecInput` via:
//
//	ClusterResourceSpecMasterResourceSpecArgs{...}
type ClusterResourceSpecMasterResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecMasterResourceSpecOutput() ClusterResourceSpecMasterResourceSpecOutput
	ToClusterResourceSpecMasterResourceSpecOutputWithContext(context.Context) ClusterResourceSpecMasterResourceSpecOutput
}

type ClusterResourceSpecMasterResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecMasterResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecOutput() ClusterResourceSpecMasterResourceSpecOutput {
	return i.ToClusterResourceSpecMasterResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecMasterResourceSpecOutput)
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecMasterResourceSpecOutput).ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecMasterResourceSpecPtrInput is an input type that accepts ClusterResourceSpecMasterResourceSpecArgs, ClusterResourceSpecMasterResourceSpecPtr and ClusterResourceSpecMasterResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecMasterResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecMasterResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecMasterResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput
	ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput
}

type clusterResourceSpecMasterResourceSpecPtrType ClusterResourceSpecMasterResourceSpecArgs

func ClusterResourceSpecMasterResourceSpecPtr(v *ClusterResourceSpecMasterResourceSpecArgs) ClusterResourceSpecMasterResourceSpecPtrInput {
	return (*clusterResourceSpecMasterResourceSpecPtrType)(v)
}

func (*clusterResourceSpecMasterResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecMasterResourceSpecPtrType) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecMasterResourceSpecPtrType) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

type ClusterResourceSpecMasterResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecMasterResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecOutput() ClusterResourceSpecMasterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecMasterResourceSpec) *ClusterResourceSpecMasterResourceSpec {
		return &v
	}).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecMasterResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecMasterResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) Elem() ClusterResourceSpecMasterResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) ClusterResourceSpecMasterResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecMasterResourceSpec
		return ret
	}).(ClusterResourceSpecMasterResourceSpecOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecTaskResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecTaskResourceSpecInput is an input type that accepts ClusterResourceSpecTaskResourceSpecArgs and ClusterResourceSpecTaskResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecTaskResourceSpecInput` via:
//
//	ClusterResourceSpecTaskResourceSpecArgs{...}
type ClusterResourceSpecTaskResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecTaskResourceSpecOutput() ClusterResourceSpecTaskResourceSpecOutput
	ToClusterResourceSpecTaskResourceSpecOutputWithContext(context.Context) ClusterResourceSpecTaskResourceSpecOutput
}

type ClusterResourceSpecTaskResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecTaskResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecOutput() ClusterResourceSpecTaskResourceSpecOutput {
	return i.ToClusterResourceSpecTaskResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecTaskResourceSpecOutput)
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return i.ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecTaskResourceSpecOutput).ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecTaskResourceSpecPtrInput is an input type that accepts ClusterResourceSpecTaskResourceSpecArgs, ClusterResourceSpecTaskResourceSpecPtr and ClusterResourceSpecTaskResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecTaskResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecTaskResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecTaskResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput
	ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput
}

type clusterResourceSpecTaskResourceSpecPtrType ClusterResourceSpecTaskResourceSpecArgs

func ClusterResourceSpecTaskResourceSpecPtr(v *ClusterResourceSpecTaskResourceSpecArgs) ClusterResourceSpecTaskResourceSpecPtrInput {
	return (*clusterResourceSpecTaskResourceSpecPtrType)(v)
}

func (*clusterResourceSpecTaskResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecTaskResourceSpecPtrType) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return i.ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecTaskResourceSpecPtrType) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

type ClusterResourceSpecTaskResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecTaskResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecOutput() ClusterResourceSpecTaskResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecTaskResourceSpec) *ClusterResourceSpecTaskResourceSpec {
		return &v
	}).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecTaskResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecTaskResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) Elem() ClusterResourceSpecTaskResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) ClusterResourceSpecTaskResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecTaskResourceSpec
		return ret
	}).(ClusterResourceSpecTaskResourceSpecOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type GetAutoScaleRecordsFilter struct {
	// Key. Note: This field may return null, indicating that no valid value can be obtained.
	Key string `pulumi:"key"`
	// Value. Note: This field may return null, indicating that no valid value can be obtained.
	Value string `pulumi:"value"`
}

// GetAutoScaleRecordsFilterInput is an input type that accepts GetAutoScaleRecordsFilterArgs and GetAutoScaleRecordsFilterOutput values.
// You can construct a concrete instance of `GetAutoScaleRecordsFilterInput` via:
//
//	GetAutoScaleRecordsFilterArgs{...}
type GetAutoScaleRecordsFilterInput interface {
	pulumi.Input

	ToGetAutoScaleRecordsFilterOutput() GetAutoScaleRecordsFilterOutput
	ToGetAutoScaleRecordsFilterOutputWithContext(context.Context) GetAutoScaleRecordsFilterOutput
}

type GetAutoScaleRecordsFilterArgs struct {
	// Key. Note: This field may return null, indicating that no valid value can be obtained.
	Key pulumi.StringInput `pulumi:"key"`
	// Value. Note: This field may return null, indicating that no valid value can be obtained.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAutoScaleRecordsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoScaleRecordsFilter)(nil)).Elem()
}

func (i GetAutoScaleRecordsFilterArgs) ToGetAutoScaleRecordsFilterOutput() GetAutoScaleRecordsFilterOutput {
	return i.ToGetAutoScaleRecordsFilterOutputWithContext(context.Background())
}

func (i GetAutoScaleRecordsFilterArgs) ToGetAutoScaleRecordsFilterOutputWithContext(ctx context.Context) GetAutoScaleRecordsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoScaleRecordsFilterOutput)
}

// GetAutoScaleRecordsFilterArrayInput is an input type that accepts GetAutoScaleRecordsFilterArray and GetAutoScaleRecordsFilterArrayOutput values.
// You can construct a concrete instance of `GetAutoScaleRecordsFilterArrayInput` via:
//
//	GetAutoScaleRecordsFilterArray{ GetAutoScaleRecordsFilterArgs{...} }
type GetAutoScaleRecordsFilterArrayInput interface {
	pulumi.Input

	ToGetAutoScaleRecordsFilterArrayOutput() GetAutoScaleRecordsFilterArrayOutput
	ToGetAutoScaleRecordsFilterArrayOutputWithContext(context.Context) GetAutoScaleRecordsFilterArrayOutput
}

type GetAutoScaleRecordsFilterArray []GetAutoScaleRecordsFilterInput

func (GetAutoScaleRecordsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoScaleRecordsFilter)(nil)).Elem()
}

func (i GetAutoScaleRecordsFilterArray) ToGetAutoScaleRecordsFilterArrayOutput() GetAutoScaleRecordsFilterArrayOutput {
	return i.ToGetAutoScaleRecordsFilterArrayOutputWithContext(context.Background())
}

func (i GetAutoScaleRecordsFilterArray) ToGetAutoScaleRecordsFilterArrayOutputWithContext(ctx context.Context) GetAutoScaleRecordsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoScaleRecordsFilterArrayOutput)
}

type GetAutoScaleRecordsFilterOutput struct{ *pulumi.OutputState }

func (GetAutoScaleRecordsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoScaleRecordsFilter)(nil)).Elem()
}

func (o GetAutoScaleRecordsFilterOutput) ToGetAutoScaleRecordsFilterOutput() GetAutoScaleRecordsFilterOutput {
	return o
}

func (o GetAutoScaleRecordsFilterOutput) ToGetAutoScaleRecordsFilterOutputWithContext(ctx context.Context) GetAutoScaleRecordsFilterOutput {
	return o
}

// Key. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetAutoScaleRecordsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Value. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetAutoScaleRecordsFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetAutoScaleRecordsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAutoScaleRecordsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoScaleRecordsFilter)(nil)).Elem()
}

func (o GetAutoScaleRecordsFilterArrayOutput) ToGetAutoScaleRecordsFilterArrayOutput() GetAutoScaleRecordsFilterArrayOutput {
	return o
}

func (o GetAutoScaleRecordsFilterArrayOutput) ToGetAutoScaleRecordsFilterArrayOutputWithContext(ctx context.Context) GetAutoScaleRecordsFilterArrayOutput {
	return o
}

func (o GetAutoScaleRecordsFilterArrayOutput) Index(i pulumi.IntInput) GetAutoScaleRecordsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoScaleRecordsFilter {
		return vs[0].([]GetAutoScaleRecordsFilter)[vs[1].(int)]
	}).(GetAutoScaleRecordsFilterOutput)
}

type GetAutoScaleRecordsRecordList struct {
	// `SUCCESS`, `FAILED`, `PART_SUCCESS`, `IN_PROCESS`.
	ActionStatus string `pulumi:"actionStatus"`
	// Process Trigger Time.
	ActionTime string `pulumi:"actionTime"`
	// Compensation Times Note: This field may return null, indicating that no valid value can be obtained.
	CompensateCount int `pulumi:"compensateCount"`
	// Compensation and expansion, 0 represents no start, 1 represents start. Note: This field may return null, indicating that no valid value can be obtained.
	CompensateFlag int `pulumi:"compensateFlag"`
	// Process End Time.
	EndTime string `pulumi:"endTime"`
	// Effective only when ScaleAction is SCALE_OUT.
	ExpectScaleNum int `pulumi:"expectScaleNum"`
	// `SCALE_OUT` and `SCALE_IN` respectively represent expanding and shrinking capacity.
	ScaleAction string `pulumi:"scaleAction"`
	// Scalability-related Description.
	ScaleInfo string `pulumi:"scaleInfo"`
	// Specification information used when expanding capacity.
	SpecInfo string `pulumi:"specInfo"`
	// Rule name of expanding and shrinking capacity.
	StrategyName string `pulumi:"strategyName"`
	// Strategy Type, 1 for Load scaling, 2 for Time scaling.
	StrategyType int `pulumi:"strategyType"`
}

// GetAutoScaleRecordsRecordListInput is an input type that accepts GetAutoScaleRecordsRecordListArgs and GetAutoScaleRecordsRecordListOutput values.
// You can construct a concrete instance of `GetAutoScaleRecordsRecordListInput` via:
//
//	GetAutoScaleRecordsRecordListArgs{...}
type GetAutoScaleRecordsRecordListInput interface {
	pulumi.Input

	ToGetAutoScaleRecordsRecordListOutput() GetAutoScaleRecordsRecordListOutput
	ToGetAutoScaleRecordsRecordListOutputWithContext(context.Context) GetAutoScaleRecordsRecordListOutput
}

type GetAutoScaleRecordsRecordListArgs struct {
	// `SUCCESS`, `FAILED`, `PART_SUCCESS`, `IN_PROCESS`.
	ActionStatus pulumi.StringInput `pulumi:"actionStatus"`
	// Process Trigger Time.
	ActionTime pulumi.StringInput `pulumi:"actionTime"`
	// Compensation Times Note: This field may return null, indicating that no valid value can be obtained.
	CompensateCount pulumi.IntInput `pulumi:"compensateCount"`
	// Compensation and expansion, 0 represents no start, 1 represents start. Note: This field may return null, indicating that no valid value can be obtained.
	CompensateFlag pulumi.IntInput `pulumi:"compensateFlag"`
	// Process End Time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Effective only when ScaleAction is SCALE_OUT.
	ExpectScaleNum pulumi.IntInput `pulumi:"expectScaleNum"`
	// `SCALE_OUT` and `SCALE_IN` respectively represent expanding and shrinking capacity.
	ScaleAction pulumi.StringInput `pulumi:"scaleAction"`
	// Scalability-related Description.
	ScaleInfo pulumi.StringInput `pulumi:"scaleInfo"`
	// Specification information used when expanding capacity.
	SpecInfo pulumi.StringInput `pulumi:"specInfo"`
	// Rule name of expanding and shrinking capacity.
	StrategyName pulumi.StringInput `pulumi:"strategyName"`
	// Strategy Type, 1 for Load scaling, 2 for Time scaling.
	StrategyType pulumi.IntInput `pulumi:"strategyType"`
}

func (GetAutoScaleRecordsRecordListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoScaleRecordsRecordList)(nil)).Elem()
}

func (i GetAutoScaleRecordsRecordListArgs) ToGetAutoScaleRecordsRecordListOutput() GetAutoScaleRecordsRecordListOutput {
	return i.ToGetAutoScaleRecordsRecordListOutputWithContext(context.Background())
}

func (i GetAutoScaleRecordsRecordListArgs) ToGetAutoScaleRecordsRecordListOutputWithContext(ctx context.Context) GetAutoScaleRecordsRecordListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoScaleRecordsRecordListOutput)
}

// GetAutoScaleRecordsRecordListArrayInput is an input type that accepts GetAutoScaleRecordsRecordListArray and GetAutoScaleRecordsRecordListArrayOutput values.
// You can construct a concrete instance of `GetAutoScaleRecordsRecordListArrayInput` via:
//
//	GetAutoScaleRecordsRecordListArray{ GetAutoScaleRecordsRecordListArgs{...} }
type GetAutoScaleRecordsRecordListArrayInput interface {
	pulumi.Input

	ToGetAutoScaleRecordsRecordListArrayOutput() GetAutoScaleRecordsRecordListArrayOutput
	ToGetAutoScaleRecordsRecordListArrayOutputWithContext(context.Context) GetAutoScaleRecordsRecordListArrayOutput
}

type GetAutoScaleRecordsRecordListArray []GetAutoScaleRecordsRecordListInput

func (GetAutoScaleRecordsRecordListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoScaleRecordsRecordList)(nil)).Elem()
}

func (i GetAutoScaleRecordsRecordListArray) ToGetAutoScaleRecordsRecordListArrayOutput() GetAutoScaleRecordsRecordListArrayOutput {
	return i.ToGetAutoScaleRecordsRecordListArrayOutputWithContext(context.Background())
}

func (i GetAutoScaleRecordsRecordListArray) ToGetAutoScaleRecordsRecordListArrayOutputWithContext(ctx context.Context) GetAutoScaleRecordsRecordListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoScaleRecordsRecordListArrayOutput)
}

type GetAutoScaleRecordsRecordListOutput struct{ *pulumi.OutputState }

func (GetAutoScaleRecordsRecordListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoScaleRecordsRecordList)(nil)).Elem()
}

func (o GetAutoScaleRecordsRecordListOutput) ToGetAutoScaleRecordsRecordListOutput() GetAutoScaleRecordsRecordListOutput {
	return o
}

func (o GetAutoScaleRecordsRecordListOutput) ToGetAutoScaleRecordsRecordListOutputWithContext(ctx context.Context) GetAutoScaleRecordsRecordListOutput {
	return o
}

// `SUCCESS`, `FAILED`, `PART_SUCCESS`, `IN_PROCESS`.
func (o GetAutoScaleRecordsRecordListOutput) ActionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.ActionStatus }).(pulumi.StringOutput)
}

// Process Trigger Time.
func (o GetAutoScaleRecordsRecordListOutput) ActionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.ActionTime }).(pulumi.StringOutput)
}

// Compensation Times Note: This field may return null, indicating that no valid value can be obtained.
func (o GetAutoScaleRecordsRecordListOutput) CompensateCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) int { return v.CompensateCount }).(pulumi.IntOutput)
}

// Compensation and expansion, 0 represents no start, 1 represents start. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetAutoScaleRecordsRecordListOutput) CompensateFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) int { return v.CompensateFlag }).(pulumi.IntOutput)
}

// Process End Time.
func (o GetAutoScaleRecordsRecordListOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.EndTime }).(pulumi.StringOutput)
}

// Effective only when ScaleAction is SCALE_OUT.
func (o GetAutoScaleRecordsRecordListOutput) ExpectScaleNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) int { return v.ExpectScaleNum }).(pulumi.IntOutput)
}

// `SCALE_OUT` and `SCALE_IN` respectively represent expanding and shrinking capacity.
func (o GetAutoScaleRecordsRecordListOutput) ScaleAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.ScaleAction }).(pulumi.StringOutput)
}

// Scalability-related Description.
func (o GetAutoScaleRecordsRecordListOutput) ScaleInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.ScaleInfo }).(pulumi.StringOutput)
}

// Specification information used when expanding capacity.
func (o GetAutoScaleRecordsRecordListOutput) SpecInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.SpecInfo }).(pulumi.StringOutput)
}

// Rule name of expanding and shrinking capacity.
func (o GetAutoScaleRecordsRecordListOutput) StrategyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) string { return v.StrategyName }).(pulumi.StringOutput)
}

// Strategy Type, 1 for Load scaling, 2 for Time scaling.
func (o GetAutoScaleRecordsRecordListOutput) StrategyType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoScaleRecordsRecordList) int { return v.StrategyType }).(pulumi.IntOutput)
}

type GetAutoScaleRecordsRecordListArrayOutput struct{ *pulumi.OutputState }

func (GetAutoScaleRecordsRecordListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoScaleRecordsRecordList)(nil)).Elem()
}

func (o GetAutoScaleRecordsRecordListArrayOutput) ToGetAutoScaleRecordsRecordListArrayOutput() GetAutoScaleRecordsRecordListArrayOutput {
	return o
}

func (o GetAutoScaleRecordsRecordListArrayOutput) ToGetAutoScaleRecordsRecordListArrayOutputWithContext(ctx context.Context) GetAutoScaleRecordsRecordListArrayOutput {
	return o
}

func (o GetAutoScaleRecordsRecordListArrayOutput) Index(i pulumi.IntInput) GetAutoScaleRecordsRecordListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoScaleRecordsRecordList {
		return vs[0].([]GetAutoScaleRecordsRecordList)[vs[1].(int)]
	}).(GetAutoScaleRecordsRecordListOutput)
}

type GetCvmQuotaEksQuotaSet struct {
	// Cpu cores.
	Cpu int `pulumi:"cpu"`
	// Memory quantity (unit: GB).
	Memory int `pulumi:"memory"`
	// The specifications of the marketable resource are as follows: `TASK`, `CORE`, `MASTER`, `ROUTER`.
	NodeType string `pulumi:"nodeType"`
	// Specifies the maximum number of resources that can be applied for.
	Number int `pulumi:"number"`
}

// GetCvmQuotaEksQuotaSetInput is an input type that accepts GetCvmQuotaEksQuotaSetArgs and GetCvmQuotaEksQuotaSetOutput values.
// You can construct a concrete instance of `GetCvmQuotaEksQuotaSetInput` via:
//
//	GetCvmQuotaEksQuotaSetArgs{...}
type GetCvmQuotaEksQuotaSetInput interface {
	pulumi.Input

	ToGetCvmQuotaEksQuotaSetOutput() GetCvmQuotaEksQuotaSetOutput
	ToGetCvmQuotaEksQuotaSetOutputWithContext(context.Context) GetCvmQuotaEksQuotaSetOutput
}

type GetCvmQuotaEksQuotaSetArgs struct {
	// Cpu cores.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Memory quantity (unit: GB).
	Memory pulumi.IntInput `pulumi:"memory"`
	// The specifications of the marketable resource are as follows: `TASK`, `CORE`, `MASTER`, `ROUTER`.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
	// Specifies the maximum number of resources that can be applied for.
	Number pulumi.IntInput `pulumi:"number"`
}

func (GetCvmQuotaEksQuotaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCvmQuotaEksQuotaSet)(nil)).Elem()
}

func (i GetCvmQuotaEksQuotaSetArgs) ToGetCvmQuotaEksQuotaSetOutput() GetCvmQuotaEksQuotaSetOutput {
	return i.ToGetCvmQuotaEksQuotaSetOutputWithContext(context.Background())
}

func (i GetCvmQuotaEksQuotaSetArgs) ToGetCvmQuotaEksQuotaSetOutputWithContext(ctx context.Context) GetCvmQuotaEksQuotaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCvmQuotaEksQuotaSetOutput)
}

// GetCvmQuotaEksQuotaSetArrayInput is an input type that accepts GetCvmQuotaEksQuotaSetArray and GetCvmQuotaEksQuotaSetArrayOutput values.
// You can construct a concrete instance of `GetCvmQuotaEksQuotaSetArrayInput` via:
//
//	GetCvmQuotaEksQuotaSetArray{ GetCvmQuotaEksQuotaSetArgs{...} }
type GetCvmQuotaEksQuotaSetArrayInput interface {
	pulumi.Input

	ToGetCvmQuotaEksQuotaSetArrayOutput() GetCvmQuotaEksQuotaSetArrayOutput
	ToGetCvmQuotaEksQuotaSetArrayOutputWithContext(context.Context) GetCvmQuotaEksQuotaSetArrayOutput
}

type GetCvmQuotaEksQuotaSetArray []GetCvmQuotaEksQuotaSetInput

func (GetCvmQuotaEksQuotaSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCvmQuotaEksQuotaSet)(nil)).Elem()
}

func (i GetCvmQuotaEksQuotaSetArray) ToGetCvmQuotaEksQuotaSetArrayOutput() GetCvmQuotaEksQuotaSetArrayOutput {
	return i.ToGetCvmQuotaEksQuotaSetArrayOutputWithContext(context.Background())
}

func (i GetCvmQuotaEksQuotaSetArray) ToGetCvmQuotaEksQuotaSetArrayOutputWithContext(ctx context.Context) GetCvmQuotaEksQuotaSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCvmQuotaEksQuotaSetArrayOutput)
}

type GetCvmQuotaEksQuotaSetOutput struct{ *pulumi.OutputState }

func (GetCvmQuotaEksQuotaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCvmQuotaEksQuotaSet)(nil)).Elem()
}

func (o GetCvmQuotaEksQuotaSetOutput) ToGetCvmQuotaEksQuotaSetOutput() GetCvmQuotaEksQuotaSetOutput {
	return o
}

func (o GetCvmQuotaEksQuotaSetOutput) ToGetCvmQuotaEksQuotaSetOutputWithContext(ctx context.Context) GetCvmQuotaEksQuotaSetOutput {
	return o
}

// Cpu cores.
func (o GetCvmQuotaEksQuotaSetOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaEksQuotaSet) int { return v.Cpu }).(pulumi.IntOutput)
}

// Memory quantity (unit: GB).
func (o GetCvmQuotaEksQuotaSetOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaEksQuotaSet) int { return v.Memory }).(pulumi.IntOutput)
}

// The specifications of the marketable resource are as follows: `TASK`, `CORE`, `MASTER`, `ROUTER`.
func (o GetCvmQuotaEksQuotaSetOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCvmQuotaEksQuotaSet) string { return v.NodeType }).(pulumi.StringOutput)
}

// Specifies the maximum number of resources that can be applied for.
func (o GetCvmQuotaEksQuotaSetOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaEksQuotaSet) int { return v.Number }).(pulumi.IntOutput)
}

type GetCvmQuotaEksQuotaSetArrayOutput struct{ *pulumi.OutputState }

func (GetCvmQuotaEksQuotaSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCvmQuotaEksQuotaSet)(nil)).Elem()
}

func (o GetCvmQuotaEksQuotaSetArrayOutput) ToGetCvmQuotaEksQuotaSetArrayOutput() GetCvmQuotaEksQuotaSetArrayOutput {
	return o
}

func (o GetCvmQuotaEksQuotaSetArrayOutput) ToGetCvmQuotaEksQuotaSetArrayOutputWithContext(ctx context.Context) GetCvmQuotaEksQuotaSetArrayOutput {
	return o
}

func (o GetCvmQuotaEksQuotaSetArrayOutput) Index(i pulumi.IntInput) GetCvmQuotaEksQuotaSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCvmQuotaEksQuotaSet {
		return vs[0].([]GetCvmQuotaEksQuotaSet)[vs[1].(int)]
	}).(GetCvmQuotaEksQuotaSetOutput)
}

type GetCvmQuotaPostPaidQuotaSet struct {
	// Residual quota Note: This field may return null, indicating that a valid value cannot be obtained.
	RemainingQuota int `pulumi:"remainingQuota"`
	// Total quota Note: This field may return null, indicating that a valid value cannot be obtained.
	TotalQuota int `pulumi:"totalQuota"`
	// Used quota Note: This field may return null, indicating that a valid value cannot be obtained.
	UsedQuota int `pulumi:"usedQuota"`
	// Available area Note: This field may return null, indicating that a valid value cannot be obtained.
	Zone string `pulumi:"zone"`
}

// GetCvmQuotaPostPaidQuotaSetInput is an input type that accepts GetCvmQuotaPostPaidQuotaSetArgs and GetCvmQuotaPostPaidQuotaSetOutput values.
// You can construct a concrete instance of `GetCvmQuotaPostPaidQuotaSetInput` via:
//
//	GetCvmQuotaPostPaidQuotaSetArgs{...}
type GetCvmQuotaPostPaidQuotaSetInput interface {
	pulumi.Input

	ToGetCvmQuotaPostPaidQuotaSetOutput() GetCvmQuotaPostPaidQuotaSetOutput
	ToGetCvmQuotaPostPaidQuotaSetOutputWithContext(context.Context) GetCvmQuotaPostPaidQuotaSetOutput
}

type GetCvmQuotaPostPaidQuotaSetArgs struct {
	// Residual quota Note: This field may return null, indicating that a valid value cannot be obtained.
	RemainingQuota pulumi.IntInput `pulumi:"remainingQuota"`
	// Total quota Note: This field may return null, indicating that a valid value cannot be obtained.
	TotalQuota pulumi.IntInput `pulumi:"totalQuota"`
	// Used quota Note: This field may return null, indicating that a valid value cannot be obtained.
	UsedQuota pulumi.IntInput `pulumi:"usedQuota"`
	// Available area Note: This field may return null, indicating that a valid value cannot be obtained.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetCvmQuotaPostPaidQuotaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCvmQuotaPostPaidQuotaSet)(nil)).Elem()
}

func (i GetCvmQuotaPostPaidQuotaSetArgs) ToGetCvmQuotaPostPaidQuotaSetOutput() GetCvmQuotaPostPaidQuotaSetOutput {
	return i.ToGetCvmQuotaPostPaidQuotaSetOutputWithContext(context.Background())
}

func (i GetCvmQuotaPostPaidQuotaSetArgs) ToGetCvmQuotaPostPaidQuotaSetOutputWithContext(ctx context.Context) GetCvmQuotaPostPaidQuotaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCvmQuotaPostPaidQuotaSetOutput)
}

// GetCvmQuotaPostPaidQuotaSetArrayInput is an input type that accepts GetCvmQuotaPostPaidQuotaSetArray and GetCvmQuotaPostPaidQuotaSetArrayOutput values.
// You can construct a concrete instance of `GetCvmQuotaPostPaidQuotaSetArrayInput` via:
//
//	GetCvmQuotaPostPaidQuotaSetArray{ GetCvmQuotaPostPaidQuotaSetArgs{...} }
type GetCvmQuotaPostPaidQuotaSetArrayInput interface {
	pulumi.Input

	ToGetCvmQuotaPostPaidQuotaSetArrayOutput() GetCvmQuotaPostPaidQuotaSetArrayOutput
	ToGetCvmQuotaPostPaidQuotaSetArrayOutputWithContext(context.Context) GetCvmQuotaPostPaidQuotaSetArrayOutput
}

type GetCvmQuotaPostPaidQuotaSetArray []GetCvmQuotaPostPaidQuotaSetInput

func (GetCvmQuotaPostPaidQuotaSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCvmQuotaPostPaidQuotaSet)(nil)).Elem()
}

func (i GetCvmQuotaPostPaidQuotaSetArray) ToGetCvmQuotaPostPaidQuotaSetArrayOutput() GetCvmQuotaPostPaidQuotaSetArrayOutput {
	return i.ToGetCvmQuotaPostPaidQuotaSetArrayOutputWithContext(context.Background())
}

func (i GetCvmQuotaPostPaidQuotaSetArray) ToGetCvmQuotaPostPaidQuotaSetArrayOutputWithContext(ctx context.Context) GetCvmQuotaPostPaidQuotaSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCvmQuotaPostPaidQuotaSetArrayOutput)
}

type GetCvmQuotaPostPaidQuotaSetOutput struct{ *pulumi.OutputState }

func (GetCvmQuotaPostPaidQuotaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCvmQuotaPostPaidQuotaSet)(nil)).Elem()
}

func (o GetCvmQuotaPostPaidQuotaSetOutput) ToGetCvmQuotaPostPaidQuotaSetOutput() GetCvmQuotaPostPaidQuotaSetOutput {
	return o
}

func (o GetCvmQuotaPostPaidQuotaSetOutput) ToGetCvmQuotaPostPaidQuotaSetOutputWithContext(ctx context.Context) GetCvmQuotaPostPaidQuotaSetOutput {
	return o
}

// Residual quota Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaPostPaidQuotaSetOutput) RemainingQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaPostPaidQuotaSet) int { return v.RemainingQuota }).(pulumi.IntOutput)
}

// Total quota Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaPostPaidQuotaSetOutput) TotalQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaPostPaidQuotaSet) int { return v.TotalQuota }).(pulumi.IntOutput)
}

// Used quota Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaPostPaidQuotaSetOutput) UsedQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaPostPaidQuotaSet) int { return v.UsedQuota }).(pulumi.IntOutput)
}

// Available area Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaPostPaidQuotaSetOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCvmQuotaPostPaidQuotaSet) string { return v.Zone }).(pulumi.StringOutput)
}

type GetCvmQuotaPostPaidQuotaSetArrayOutput struct{ *pulumi.OutputState }

func (GetCvmQuotaPostPaidQuotaSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCvmQuotaPostPaidQuotaSet)(nil)).Elem()
}

func (o GetCvmQuotaPostPaidQuotaSetArrayOutput) ToGetCvmQuotaPostPaidQuotaSetArrayOutput() GetCvmQuotaPostPaidQuotaSetArrayOutput {
	return o
}

func (o GetCvmQuotaPostPaidQuotaSetArrayOutput) ToGetCvmQuotaPostPaidQuotaSetArrayOutputWithContext(ctx context.Context) GetCvmQuotaPostPaidQuotaSetArrayOutput {
	return o
}

func (o GetCvmQuotaPostPaidQuotaSetArrayOutput) Index(i pulumi.IntInput) GetCvmQuotaPostPaidQuotaSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCvmQuotaPostPaidQuotaSet {
		return vs[0].([]GetCvmQuotaPostPaidQuotaSet)[vs[1].(int)]
	}).(GetCvmQuotaPostPaidQuotaSetOutput)
}

type GetCvmQuotaSpotPaidQuotaSet struct {
	// Residual quota Note: This field may return null, indicating that a valid value cannot be obtained.
	RemainingQuota int `pulumi:"remainingQuota"`
	// Total quota Note: This field may return null, indicating that a valid value cannot be obtained.
	TotalQuota int `pulumi:"totalQuota"`
	// Used quota Note: This field may return null, indicating that a valid value cannot be obtained.
	UsedQuota int `pulumi:"usedQuota"`
	// Available area Note: This field may return null, indicating that a valid value cannot be obtained.
	Zone string `pulumi:"zone"`
}

// GetCvmQuotaSpotPaidQuotaSetInput is an input type that accepts GetCvmQuotaSpotPaidQuotaSetArgs and GetCvmQuotaSpotPaidQuotaSetOutput values.
// You can construct a concrete instance of `GetCvmQuotaSpotPaidQuotaSetInput` via:
//
//	GetCvmQuotaSpotPaidQuotaSetArgs{...}
type GetCvmQuotaSpotPaidQuotaSetInput interface {
	pulumi.Input

	ToGetCvmQuotaSpotPaidQuotaSetOutput() GetCvmQuotaSpotPaidQuotaSetOutput
	ToGetCvmQuotaSpotPaidQuotaSetOutputWithContext(context.Context) GetCvmQuotaSpotPaidQuotaSetOutput
}

type GetCvmQuotaSpotPaidQuotaSetArgs struct {
	// Residual quota Note: This field may return null, indicating that a valid value cannot be obtained.
	RemainingQuota pulumi.IntInput `pulumi:"remainingQuota"`
	// Total quota Note: This field may return null, indicating that a valid value cannot be obtained.
	TotalQuota pulumi.IntInput `pulumi:"totalQuota"`
	// Used quota Note: This field may return null, indicating that a valid value cannot be obtained.
	UsedQuota pulumi.IntInput `pulumi:"usedQuota"`
	// Available area Note: This field may return null, indicating that a valid value cannot be obtained.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetCvmQuotaSpotPaidQuotaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCvmQuotaSpotPaidQuotaSet)(nil)).Elem()
}

func (i GetCvmQuotaSpotPaidQuotaSetArgs) ToGetCvmQuotaSpotPaidQuotaSetOutput() GetCvmQuotaSpotPaidQuotaSetOutput {
	return i.ToGetCvmQuotaSpotPaidQuotaSetOutputWithContext(context.Background())
}

func (i GetCvmQuotaSpotPaidQuotaSetArgs) ToGetCvmQuotaSpotPaidQuotaSetOutputWithContext(ctx context.Context) GetCvmQuotaSpotPaidQuotaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCvmQuotaSpotPaidQuotaSetOutput)
}

// GetCvmQuotaSpotPaidQuotaSetArrayInput is an input type that accepts GetCvmQuotaSpotPaidQuotaSetArray and GetCvmQuotaSpotPaidQuotaSetArrayOutput values.
// You can construct a concrete instance of `GetCvmQuotaSpotPaidQuotaSetArrayInput` via:
//
//	GetCvmQuotaSpotPaidQuotaSetArray{ GetCvmQuotaSpotPaidQuotaSetArgs{...} }
type GetCvmQuotaSpotPaidQuotaSetArrayInput interface {
	pulumi.Input

	ToGetCvmQuotaSpotPaidQuotaSetArrayOutput() GetCvmQuotaSpotPaidQuotaSetArrayOutput
	ToGetCvmQuotaSpotPaidQuotaSetArrayOutputWithContext(context.Context) GetCvmQuotaSpotPaidQuotaSetArrayOutput
}

type GetCvmQuotaSpotPaidQuotaSetArray []GetCvmQuotaSpotPaidQuotaSetInput

func (GetCvmQuotaSpotPaidQuotaSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCvmQuotaSpotPaidQuotaSet)(nil)).Elem()
}

func (i GetCvmQuotaSpotPaidQuotaSetArray) ToGetCvmQuotaSpotPaidQuotaSetArrayOutput() GetCvmQuotaSpotPaidQuotaSetArrayOutput {
	return i.ToGetCvmQuotaSpotPaidQuotaSetArrayOutputWithContext(context.Background())
}

func (i GetCvmQuotaSpotPaidQuotaSetArray) ToGetCvmQuotaSpotPaidQuotaSetArrayOutputWithContext(ctx context.Context) GetCvmQuotaSpotPaidQuotaSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCvmQuotaSpotPaidQuotaSetArrayOutput)
}

type GetCvmQuotaSpotPaidQuotaSetOutput struct{ *pulumi.OutputState }

func (GetCvmQuotaSpotPaidQuotaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCvmQuotaSpotPaidQuotaSet)(nil)).Elem()
}

func (o GetCvmQuotaSpotPaidQuotaSetOutput) ToGetCvmQuotaSpotPaidQuotaSetOutput() GetCvmQuotaSpotPaidQuotaSetOutput {
	return o
}

func (o GetCvmQuotaSpotPaidQuotaSetOutput) ToGetCvmQuotaSpotPaidQuotaSetOutputWithContext(ctx context.Context) GetCvmQuotaSpotPaidQuotaSetOutput {
	return o
}

// Residual quota Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaSpotPaidQuotaSetOutput) RemainingQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaSpotPaidQuotaSet) int { return v.RemainingQuota }).(pulumi.IntOutput)
}

// Total quota Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaSpotPaidQuotaSetOutput) TotalQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaSpotPaidQuotaSet) int { return v.TotalQuota }).(pulumi.IntOutput)
}

// Used quota Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaSpotPaidQuotaSetOutput) UsedQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetCvmQuotaSpotPaidQuotaSet) int { return v.UsedQuota }).(pulumi.IntOutput)
}

// Available area Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetCvmQuotaSpotPaidQuotaSetOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCvmQuotaSpotPaidQuotaSet) string { return v.Zone }).(pulumi.StringOutput)
}

type GetCvmQuotaSpotPaidQuotaSetArrayOutput struct{ *pulumi.OutputState }

func (GetCvmQuotaSpotPaidQuotaSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCvmQuotaSpotPaidQuotaSet)(nil)).Elem()
}

func (o GetCvmQuotaSpotPaidQuotaSetArrayOutput) ToGetCvmQuotaSpotPaidQuotaSetArrayOutput() GetCvmQuotaSpotPaidQuotaSetArrayOutput {
	return o
}

func (o GetCvmQuotaSpotPaidQuotaSetArrayOutput) ToGetCvmQuotaSpotPaidQuotaSetArrayOutputWithContext(ctx context.Context) GetCvmQuotaSpotPaidQuotaSetArrayOutput {
	return o
}

func (o GetCvmQuotaSpotPaidQuotaSetArrayOutput) Index(i pulumi.IntInput) GetCvmQuotaSpotPaidQuotaSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCvmQuotaSpotPaidQuotaSet {
		return vs[0].([]GetCvmQuotaSpotPaidQuotaSet)[vs[1].(int)]
	}).(GetCvmQuotaSpotPaidQuotaSetOutput)
}

type GetInstanceCluster struct {
	// Add time of instance.
	AddTime string `pulumi:"addTime"`
	// Charge type of instance.
	ChargeType int `pulumi:"chargeType"`
	// Cluster id of instance.
	ClusterId string `pulumi:"clusterId"`
	// Cluster name of instance.
	ClusterName string `pulumi:"clusterName"`
	// Title of instance.
	Ftitle string `pulumi:"ftitle"`
	// Id of instance.
	Id int `pulumi:"id"`
	// Master ip of instance.
	MasterIp string `pulumi:"masterIp"`
	// Fetch all instances which owner same project. Default 0 meaning use default project id.
	ProjectId int `pulumi:"projectId"`
	// Region id of instance.
	RegionId int `pulumi:"regionId"`
	// Status of instance.
	Status int `pulumi:"status"`
	// Zone of instance.
	Zone string `pulumi:"zone"`
	// Zone id of instance.
	ZoneId int `pulumi:"zoneId"`
}

// GetInstanceClusterInput is an input type that accepts GetInstanceClusterArgs and GetInstanceClusterOutput values.
// You can construct a concrete instance of `GetInstanceClusterInput` via:
//
//	GetInstanceClusterArgs{...}
type GetInstanceClusterInput interface {
	pulumi.Input

	ToGetInstanceClusterOutput() GetInstanceClusterOutput
	ToGetInstanceClusterOutputWithContext(context.Context) GetInstanceClusterOutput
}

type GetInstanceClusterArgs struct {
	// Add time of instance.
	AddTime pulumi.StringInput `pulumi:"addTime"`
	// Charge type of instance.
	ChargeType pulumi.IntInput `pulumi:"chargeType"`
	// Cluster id of instance.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Cluster name of instance.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Title of instance.
	Ftitle pulumi.StringInput `pulumi:"ftitle"`
	// Id of instance.
	Id pulumi.IntInput `pulumi:"id"`
	// Master ip of instance.
	MasterIp pulumi.StringInput `pulumi:"masterIp"`
	// Fetch all instances which owner same project. Default 0 meaning use default project id.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Region id of instance.
	RegionId pulumi.IntInput `pulumi:"regionId"`
	// Status of instance.
	Status pulumi.IntInput `pulumi:"status"`
	// Zone of instance.
	Zone pulumi.StringInput `pulumi:"zone"`
	// Zone id of instance.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetInstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCluster)(nil)).Elem()
}

func (i GetInstanceClusterArgs) ToGetInstanceClusterOutput() GetInstanceClusterOutput {
	return i.ToGetInstanceClusterOutputWithContext(context.Background())
}

func (i GetInstanceClusterArgs) ToGetInstanceClusterOutputWithContext(ctx context.Context) GetInstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClusterOutput)
}

// GetInstanceClusterArrayInput is an input type that accepts GetInstanceClusterArray and GetInstanceClusterArrayOutput values.
// You can construct a concrete instance of `GetInstanceClusterArrayInput` via:
//
//	GetInstanceClusterArray{ GetInstanceClusterArgs{...} }
type GetInstanceClusterArrayInput interface {
	pulumi.Input

	ToGetInstanceClusterArrayOutput() GetInstanceClusterArrayOutput
	ToGetInstanceClusterArrayOutputWithContext(context.Context) GetInstanceClusterArrayOutput
}

type GetInstanceClusterArray []GetInstanceClusterInput

func (GetInstanceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCluster)(nil)).Elem()
}

func (i GetInstanceClusterArray) ToGetInstanceClusterArrayOutput() GetInstanceClusterArrayOutput {
	return i.ToGetInstanceClusterArrayOutputWithContext(context.Background())
}

func (i GetInstanceClusterArray) ToGetInstanceClusterArrayOutputWithContext(ctx context.Context) GetInstanceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClusterArrayOutput)
}

type GetInstanceClusterOutput struct{ *pulumi.OutputState }

func (GetInstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCluster)(nil)).Elem()
}

func (o GetInstanceClusterOutput) ToGetInstanceClusterOutput() GetInstanceClusterOutput {
	return o
}

func (o GetInstanceClusterOutput) ToGetInstanceClusterOutputWithContext(ctx context.Context) GetInstanceClusterOutput {
	return o
}

// Add time of instance.
func (o GetInstanceClusterOutput) AddTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.AddTime }).(pulumi.StringOutput)
}

// Charge type of instance.
func (o GetInstanceClusterOutput) ChargeType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.ChargeType }).(pulumi.IntOutput)
}

// Cluster id of instance.
func (o GetInstanceClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Cluster name of instance.
func (o GetInstanceClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Title of instance.
func (o GetInstanceClusterOutput) Ftitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.Ftitle }).(pulumi.StringOutput)
}

// Id of instance.
func (o GetInstanceClusterOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.Id }).(pulumi.IntOutput)
}

// Master ip of instance.
func (o GetInstanceClusterOutput) MasterIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.MasterIp }).(pulumi.StringOutput)
}

// Fetch all instances which owner same project. Default 0 meaning use default project id.
func (o GetInstanceClusterOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Region id of instance.
func (o GetInstanceClusterOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.RegionId }).(pulumi.IntOutput)
}

// Status of instance.
func (o GetInstanceClusterOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.Status }).(pulumi.IntOutput)
}

// Zone of instance.
func (o GetInstanceClusterOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.Zone }).(pulumi.StringOutput)
}

// Zone id of instance.
func (o GetInstanceClusterOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetInstanceClusterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCluster)(nil)).Elem()
}

func (o GetInstanceClusterArrayOutput) ToGetInstanceClusterArrayOutput() GetInstanceClusterArrayOutput {
	return o
}

func (o GetInstanceClusterArrayOutput) ToGetInstanceClusterArrayOutputWithContext(ctx context.Context) GetInstanceClusterArrayOutput {
	return o
}

func (o GetInstanceClusterArrayOutput) Index(i pulumi.IntInput) GetInstanceClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceCluster {
		return vs[0].([]GetInstanceCluster)[vs[1].(int)]
	}).(GetInstanceClusterOutput)
}

type GetNodesNode struct {
	// User APPID.
	AppId int `pulumi:"appId"`
	// Application time.
	ApplyTime string `pulumi:"applyTime"`
	// Whether it is an autoscaling node, 0 is a normal node, and 1 is an autoscaling node.
	AutoFlag int `pulumi:"autoFlag"`
	// Database IP.
	CdbIp string `pulumi:"cdbIp"`
	// Database information.
	CdbNodeInfos []GetNodesNodeCdbNodeInfo `pulumi:"cdbNodeInfos"`
	// Database port.
	CdbPort int `pulumi:"cdbPort"`
	// The type of payment.
	ChargeType int `pulumi:"chargeType"`
	// Number of node cores.
	CpuNum int `pulumi:"cpuNum"`
	// Whether this node is destroyable, 1 can be destroyed, 0 is not destroyable.
	Destroyable int `pulumi:"destroyable"`
	// Device identity.
	DeviceClass string `pulumi:"deviceClass"`
	// Hard disk size.
	DiskSize string `pulumi:"diskSize"`
	// Floating specification value json string.
	DynamicPodSpec string `pulumi:"dynamicPodSpec"`
	// Node resource ID.
	EmrResourceId string `pulumi:"emrResourceId"`
	// Expiration time.
	ExpireTime string `pulumi:"expireTime"`
	// Node type. 0: common node; 1: master node; 2: core node; 3: task node.
	Flag int `pulumi:"flag"`
	// Release time.
	FreeTime string `pulumi:"freeTime"`
	// Resource type: Support all/host/pod, default is all.
	HardwareResourceType string `pulumi:"hardwareResourceType"`
	// Hard disk capacity.
	HwDiskSize int `pulumi:"hwDiskSize"`
	// Hard disk capacity description.
	HwDiskSizeDesc string `pulumi:"hwDiskSizeDesc"`
	// Memory capacity.
	HwMemSize int `pulumi:"hwMemSize"`
	// Memory capacity description.
	HwMemSizeDesc string `pulumi:"hwMemSizeDesc"`
	// Intranet IP.
	Ip string `pulumi:"ip"`
	// Renewal logo.
	IsAutoRenew int `pulumi:"isAutoRenew"`
	// Floating specifications, 1 yes, 0 no.
	IsDynamicSpec int `pulumi:"isDynamicSpec"`
	// Multi-cloud disk.
	McMultiDisks []GetNodesNodeMcMultiDisk `pulumi:"mcMultiDisks"`
	// Node memory description.
	MemDesc string `pulumi:"memDesc"`
	// Node memory.
	MemSize int `pulumi:"memSize"`
	// Supports variations.
	Mutable int `pulumi:"mutable"`
	// Node description.
	NameTag string `pulumi:"nameTag"`
	// Machine instance ID.
	OrderNo string `pulumi:"orderNo"`
	// The node is located in the region.
	RegionId int `pulumi:"regionId"`
	// The size of the system disk.
	RootSize int `pulumi:"rootSize"`
	// Serial number.
	SerialNo string `pulumi:"serialNo"`
	// Node deployment service.
	Services string `pulumi:"services"`
	// Node specifications.
	Spec string `pulumi:"spec"`
	// Disk type.
	StorageType int `pulumi:"storageType"`
	// Whether to support change billing type 1 Yes and 0 No.
	SupportModifyPayMode int `pulumi:"supportModifyPayMode"`
	// The label of the node binding.
	Tags []GetNodesNodeTag `pulumi:"tags"`
	// The master node is bound to the Internet IP address.
	WanIp string `pulumi:"wanIp"`
	// Zone where the node is located.
	ZoneId int `pulumi:"zoneId"`
}

// GetNodesNodeInput is an input type that accepts GetNodesNodeArgs and GetNodesNodeOutput values.
// You can construct a concrete instance of `GetNodesNodeInput` via:
//
//	GetNodesNodeArgs{...}
type GetNodesNodeInput interface {
	pulumi.Input

	ToGetNodesNodeOutput() GetNodesNodeOutput
	ToGetNodesNodeOutputWithContext(context.Context) GetNodesNodeOutput
}

type GetNodesNodeArgs struct {
	// User APPID.
	AppId pulumi.IntInput `pulumi:"appId"`
	// Application time.
	ApplyTime pulumi.StringInput `pulumi:"applyTime"`
	// Whether it is an autoscaling node, 0 is a normal node, and 1 is an autoscaling node.
	AutoFlag pulumi.IntInput `pulumi:"autoFlag"`
	// Database IP.
	CdbIp pulumi.StringInput `pulumi:"cdbIp"`
	// Database information.
	CdbNodeInfos GetNodesNodeCdbNodeInfoArrayInput `pulumi:"cdbNodeInfos"`
	// Database port.
	CdbPort pulumi.IntInput `pulumi:"cdbPort"`
	// The type of payment.
	ChargeType pulumi.IntInput `pulumi:"chargeType"`
	// Number of node cores.
	CpuNum pulumi.IntInput `pulumi:"cpuNum"`
	// Whether this node is destroyable, 1 can be destroyed, 0 is not destroyable.
	Destroyable pulumi.IntInput `pulumi:"destroyable"`
	// Device identity.
	DeviceClass pulumi.StringInput `pulumi:"deviceClass"`
	// Hard disk size.
	DiskSize pulumi.StringInput `pulumi:"diskSize"`
	// Floating specification value json string.
	DynamicPodSpec pulumi.StringInput `pulumi:"dynamicPodSpec"`
	// Node resource ID.
	EmrResourceId pulumi.StringInput `pulumi:"emrResourceId"`
	// Expiration time.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// Node type. 0: common node; 1: master node; 2: core node; 3: task node.
	Flag pulumi.IntInput `pulumi:"flag"`
	// Release time.
	FreeTime pulumi.StringInput `pulumi:"freeTime"`
	// Resource type: Support all/host/pod, default is all.
	HardwareResourceType pulumi.StringInput `pulumi:"hardwareResourceType"`
	// Hard disk capacity.
	HwDiskSize pulumi.IntInput `pulumi:"hwDiskSize"`
	// Hard disk capacity description.
	HwDiskSizeDesc pulumi.StringInput `pulumi:"hwDiskSizeDesc"`
	// Memory capacity.
	HwMemSize pulumi.IntInput `pulumi:"hwMemSize"`
	// Memory capacity description.
	HwMemSizeDesc pulumi.StringInput `pulumi:"hwMemSizeDesc"`
	// Intranet IP.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Renewal logo.
	IsAutoRenew pulumi.IntInput `pulumi:"isAutoRenew"`
	// Floating specifications, 1 yes, 0 no.
	IsDynamicSpec pulumi.IntInput `pulumi:"isDynamicSpec"`
	// Multi-cloud disk.
	McMultiDisks GetNodesNodeMcMultiDiskArrayInput `pulumi:"mcMultiDisks"`
	// Node memory description.
	MemDesc pulumi.StringInput `pulumi:"memDesc"`
	// Node memory.
	MemSize pulumi.IntInput `pulumi:"memSize"`
	// Supports variations.
	Mutable pulumi.IntInput `pulumi:"mutable"`
	// Node description.
	NameTag pulumi.StringInput `pulumi:"nameTag"`
	// Machine instance ID.
	OrderNo pulumi.StringInput `pulumi:"orderNo"`
	// The node is located in the region.
	RegionId pulumi.IntInput `pulumi:"regionId"`
	// The size of the system disk.
	RootSize pulumi.IntInput `pulumi:"rootSize"`
	// Serial number.
	SerialNo pulumi.StringInput `pulumi:"serialNo"`
	// Node deployment service.
	Services pulumi.StringInput `pulumi:"services"`
	// Node specifications.
	Spec pulumi.StringInput `pulumi:"spec"`
	// Disk type.
	StorageType pulumi.IntInput `pulumi:"storageType"`
	// Whether to support change billing type 1 Yes and 0 No.
	SupportModifyPayMode pulumi.IntInput `pulumi:"supportModifyPayMode"`
	// The label of the node binding.
	Tags GetNodesNodeTagArrayInput `pulumi:"tags"`
	// The master node is bound to the Internet IP address.
	WanIp pulumi.StringInput `pulumi:"wanIp"`
	// Zone where the node is located.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNode)(nil)).Elem()
}

func (i GetNodesNodeArgs) ToGetNodesNodeOutput() GetNodesNodeOutput {
	return i.ToGetNodesNodeOutputWithContext(context.Background())
}

func (i GetNodesNodeArgs) ToGetNodesNodeOutputWithContext(ctx context.Context) GetNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeOutput)
}

// GetNodesNodeArrayInput is an input type that accepts GetNodesNodeArray and GetNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeArrayInput` via:
//
//	GetNodesNodeArray{ GetNodesNodeArgs{...} }
type GetNodesNodeArrayInput interface {
	pulumi.Input

	ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput
	ToGetNodesNodeArrayOutputWithContext(context.Context) GetNodesNodeArrayOutput
}

type GetNodesNodeArray []GetNodesNodeInput

func (GetNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNode)(nil)).Elem()
}

func (i GetNodesNodeArray) ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput {
	return i.ToGetNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeArray) ToGetNodesNodeArrayOutputWithContext(ctx context.Context) GetNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeArrayOutput)
}

type GetNodesNodeOutput struct{ *pulumi.OutputState }

func (GetNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNode)(nil)).Elem()
}

func (o GetNodesNodeOutput) ToGetNodesNodeOutput() GetNodesNodeOutput {
	return o
}

func (o GetNodesNodeOutput) ToGetNodesNodeOutputWithContext(ctx context.Context) GetNodesNodeOutput {
	return o
}

// User APPID.
func (o GetNodesNodeOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.AppId }).(pulumi.IntOutput)
}

// Application time.
func (o GetNodesNodeOutput) ApplyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.ApplyTime }).(pulumi.StringOutput)
}

// Whether it is an autoscaling node, 0 is a normal node, and 1 is an autoscaling node.
func (o GetNodesNodeOutput) AutoFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.AutoFlag }).(pulumi.IntOutput)
}

// Database IP.
func (o GetNodesNodeOutput) CdbIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.CdbIp }).(pulumi.StringOutput)
}

// Database information.
func (o GetNodesNodeOutput) CdbNodeInfos() GetNodesNodeCdbNodeInfoArrayOutput {
	return o.ApplyT(func(v GetNodesNode) []GetNodesNodeCdbNodeInfo { return v.CdbNodeInfos }).(GetNodesNodeCdbNodeInfoArrayOutput)
}

// Database port.
func (o GetNodesNodeOutput) CdbPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.CdbPort }).(pulumi.IntOutput)
}

// The type of payment.
func (o GetNodesNodeOutput) ChargeType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.ChargeType }).(pulumi.IntOutput)
}

// Number of node cores.
func (o GetNodesNodeOutput) CpuNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.CpuNum }).(pulumi.IntOutput)
}

// Whether this node is destroyable, 1 can be destroyed, 0 is not destroyable.
func (o GetNodesNodeOutput) Destroyable() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.Destroyable }).(pulumi.IntOutput)
}

// Device identity.
func (o GetNodesNodeOutput) DeviceClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.DeviceClass }).(pulumi.StringOutput)
}

// Hard disk size.
func (o GetNodesNodeOutput) DiskSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.DiskSize }).(pulumi.StringOutput)
}

// Floating specification value json string.
func (o GetNodesNodeOutput) DynamicPodSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.DynamicPodSpec }).(pulumi.StringOutput)
}

// Node resource ID.
func (o GetNodesNodeOutput) EmrResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.EmrResourceId }).(pulumi.StringOutput)
}

// Expiration time.
func (o GetNodesNodeOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Node type. 0: common node; 1: master node; 2: core node; 3: task node.
func (o GetNodesNodeOutput) Flag() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.Flag }).(pulumi.IntOutput)
}

// Release time.
func (o GetNodesNodeOutput) FreeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.FreeTime }).(pulumi.StringOutput)
}

// Resource type: Support all/host/pod, default is all.
func (o GetNodesNodeOutput) HardwareResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.HardwareResourceType }).(pulumi.StringOutput)
}

// Hard disk capacity.
func (o GetNodesNodeOutput) HwDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.HwDiskSize }).(pulumi.IntOutput)
}

// Hard disk capacity description.
func (o GetNodesNodeOutput) HwDiskSizeDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.HwDiskSizeDesc }).(pulumi.StringOutput)
}

// Memory capacity.
func (o GetNodesNodeOutput) HwMemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.HwMemSize }).(pulumi.IntOutput)
}

// Memory capacity description.
func (o GetNodesNodeOutput) HwMemSizeDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.HwMemSizeDesc }).(pulumi.StringOutput)
}

// Intranet IP.
func (o GetNodesNodeOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Ip }).(pulumi.StringOutput)
}

// Renewal logo.
func (o GetNodesNodeOutput) IsAutoRenew() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.IsAutoRenew }).(pulumi.IntOutput)
}

// Floating specifications, 1 yes, 0 no.
func (o GetNodesNodeOutput) IsDynamicSpec() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.IsDynamicSpec }).(pulumi.IntOutput)
}

// Multi-cloud disk.
func (o GetNodesNodeOutput) McMultiDisks() GetNodesNodeMcMultiDiskArrayOutput {
	return o.ApplyT(func(v GetNodesNode) []GetNodesNodeMcMultiDisk { return v.McMultiDisks }).(GetNodesNodeMcMultiDiskArrayOutput)
}

// Node memory description.
func (o GetNodesNodeOutput) MemDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.MemDesc }).(pulumi.StringOutput)
}

// Node memory.
func (o GetNodesNodeOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.MemSize }).(pulumi.IntOutput)
}

// Supports variations.
func (o GetNodesNodeOutput) Mutable() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.Mutable }).(pulumi.IntOutput)
}

// Node description.
func (o GetNodesNodeOutput) NameTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.NameTag }).(pulumi.StringOutput)
}

// Machine instance ID.
func (o GetNodesNodeOutput) OrderNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.OrderNo }).(pulumi.StringOutput)
}

// The node is located in the region.
func (o GetNodesNodeOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.RegionId }).(pulumi.IntOutput)
}

// The size of the system disk.
func (o GetNodesNodeOutput) RootSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.RootSize }).(pulumi.IntOutput)
}

// Serial number.
func (o GetNodesNodeOutput) SerialNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.SerialNo }).(pulumi.StringOutput)
}

// Node deployment service.
func (o GetNodesNodeOutput) Services() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Services }).(pulumi.StringOutput)
}

// Node specifications.
func (o GetNodesNodeOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Spec }).(pulumi.StringOutput)
}

// Disk type.
func (o GetNodesNodeOutput) StorageType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.StorageType }).(pulumi.IntOutput)
}

// Whether to support change billing type 1 Yes and 0 No.
func (o GetNodesNodeOutput) SupportModifyPayMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.SupportModifyPayMode }).(pulumi.IntOutput)
}

// The label of the node binding.
func (o GetNodesNodeOutput) Tags() GetNodesNodeTagArrayOutput {
	return o.ApplyT(func(v GetNodesNode) []GetNodesNodeTag { return v.Tags }).(GetNodesNodeTagArrayOutput)
}

// The master node is bound to the Internet IP address.
func (o GetNodesNodeOutput) WanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.WanIp }).(pulumi.StringOutput)
}

// Zone where the node is located.
func (o GetNodesNodeOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNode)(nil)).Elem()
}

func (o GetNodesNodeArrayOutput) ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput {
	return o
}

func (o GetNodesNodeArrayOutput) ToGetNodesNodeArrayOutputWithContext(ctx context.Context) GetNodesNodeArrayOutput {
	return o
}

func (o GetNodesNodeArrayOutput) Index(i pulumi.IntInput) GetNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNode {
		return vs[0].([]GetNodesNode)[vs[1].(int)]
	}).(GetNodesNodeOutput)
}

type GetNodesNodeCdbNodeInfo struct {
	// Application time.
	ApplyTime string `pulumi:"applyTime"`
	// Expired id.
	ExpireFlag bool `pulumi:"expireFlag"`
	// Expiration time.
	ExpireTime string `pulumi:"expireTime"`
	// DB instance.
	InstanceName string `pulumi:"instanceName"`
	// Intranet IP.
	Ip string `pulumi:"ip"`
	// Renewal logo.
	IsAutoRenew int `pulumi:"isAutoRenew"`
	// Node memory.
	MemSize int `pulumi:"memSize"`
	// The type of payment.
	PayType int `pulumi:"payType"`
	// Database port.
	Port int `pulumi:"port"`
	// The node is located in the region.
	RegionId int `pulumi:"regionId"`
	// Serial number.
	SerialNo string `pulumi:"serialNo"`
	// The service identity.
	Service string `pulumi:"service"`
	// Database status.
	Status int `pulumi:"status"`
	// The size of the cloud disk.
	Volume int `pulumi:"volume"`
	// Zone where the node is located.
	ZoneId int `pulumi:"zoneId"`
}

// GetNodesNodeCdbNodeInfoInput is an input type that accepts GetNodesNodeCdbNodeInfoArgs and GetNodesNodeCdbNodeInfoOutput values.
// You can construct a concrete instance of `GetNodesNodeCdbNodeInfoInput` via:
//
//	GetNodesNodeCdbNodeInfoArgs{...}
type GetNodesNodeCdbNodeInfoInput interface {
	pulumi.Input

	ToGetNodesNodeCdbNodeInfoOutput() GetNodesNodeCdbNodeInfoOutput
	ToGetNodesNodeCdbNodeInfoOutputWithContext(context.Context) GetNodesNodeCdbNodeInfoOutput
}

type GetNodesNodeCdbNodeInfoArgs struct {
	// Application time.
	ApplyTime pulumi.StringInput `pulumi:"applyTime"`
	// Expired id.
	ExpireFlag pulumi.BoolInput `pulumi:"expireFlag"`
	// Expiration time.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// DB instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Intranet IP.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Renewal logo.
	IsAutoRenew pulumi.IntInput `pulumi:"isAutoRenew"`
	// Node memory.
	MemSize pulumi.IntInput `pulumi:"memSize"`
	// The type of payment.
	PayType pulumi.IntInput `pulumi:"payType"`
	// Database port.
	Port pulumi.IntInput `pulumi:"port"`
	// The node is located in the region.
	RegionId pulumi.IntInput `pulumi:"regionId"`
	// Serial number.
	SerialNo pulumi.StringInput `pulumi:"serialNo"`
	// The service identity.
	Service pulumi.StringInput `pulumi:"service"`
	// Database status.
	Status pulumi.IntInput `pulumi:"status"`
	// The size of the cloud disk.
	Volume pulumi.IntInput `pulumi:"volume"`
	// Zone where the node is located.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetNodesNodeCdbNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (i GetNodesNodeCdbNodeInfoArgs) ToGetNodesNodeCdbNodeInfoOutput() GetNodesNodeCdbNodeInfoOutput {
	return i.ToGetNodesNodeCdbNodeInfoOutputWithContext(context.Background())
}

func (i GetNodesNodeCdbNodeInfoArgs) ToGetNodesNodeCdbNodeInfoOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeCdbNodeInfoOutput)
}

// GetNodesNodeCdbNodeInfoArrayInput is an input type that accepts GetNodesNodeCdbNodeInfoArray and GetNodesNodeCdbNodeInfoArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeCdbNodeInfoArrayInput` via:
//
//	GetNodesNodeCdbNodeInfoArray{ GetNodesNodeCdbNodeInfoArgs{...} }
type GetNodesNodeCdbNodeInfoArrayInput interface {
	pulumi.Input

	ToGetNodesNodeCdbNodeInfoArrayOutput() GetNodesNodeCdbNodeInfoArrayOutput
	ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(context.Context) GetNodesNodeCdbNodeInfoArrayOutput
}

type GetNodesNodeCdbNodeInfoArray []GetNodesNodeCdbNodeInfoInput

func (GetNodesNodeCdbNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (i GetNodesNodeCdbNodeInfoArray) ToGetNodesNodeCdbNodeInfoArrayOutput() GetNodesNodeCdbNodeInfoArrayOutput {
	return i.ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeCdbNodeInfoArray) ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeCdbNodeInfoArrayOutput)
}

type GetNodesNodeCdbNodeInfoOutput struct{ *pulumi.OutputState }

func (GetNodesNodeCdbNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (o GetNodesNodeCdbNodeInfoOutput) ToGetNodesNodeCdbNodeInfoOutput() GetNodesNodeCdbNodeInfoOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoOutput) ToGetNodesNodeCdbNodeInfoOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoOutput {
	return o
}

// Application time.
func (o GetNodesNodeCdbNodeInfoOutput) ApplyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.ApplyTime }).(pulumi.StringOutput)
}

// Expired id.
func (o GetNodesNodeCdbNodeInfoOutput) ExpireFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) bool { return v.ExpireFlag }).(pulumi.BoolOutput)
}

// Expiration time.
func (o GetNodesNodeCdbNodeInfoOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// DB instance.
func (o GetNodesNodeCdbNodeInfoOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Intranet IP.
func (o GetNodesNodeCdbNodeInfoOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.Ip }).(pulumi.StringOutput)
}

// Renewal logo.
func (o GetNodesNodeCdbNodeInfoOutput) IsAutoRenew() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.IsAutoRenew }).(pulumi.IntOutput)
}

// Node memory.
func (o GetNodesNodeCdbNodeInfoOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.MemSize }).(pulumi.IntOutput)
}

// The type of payment.
func (o GetNodesNodeCdbNodeInfoOutput) PayType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.PayType }).(pulumi.IntOutput)
}

// Database port.
func (o GetNodesNodeCdbNodeInfoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.Port }).(pulumi.IntOutput)
}

// The node is located in the region.
func (o GetNodesNodeCdbNodeInfoOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.RegionId }).(pulumi.IntOutput)
}

// Serial number.
func (o GetNodesNodeCdbNodeInfoOutput) SerialNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.SerialNo }).(pulumi.StringOutput)
}

// The service identity.
func (o GetNodesNodeCdbNodeInfoOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.Service }).(pulumi.StringOutput)
}

// Database status.
func (o GetNodesNodeCdbNodeInfoOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.Status }).(pulumi.IntOutput)
}

// The size of the cloud disk.
func (o GetNodesNodeCdbNodeInfoOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.Volume }).(pulumi.IntOutput)
}

// Zone where the node is located.
func (o GetNodesNodeCdbNodeInfoOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetNodesNodeCdbNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeCdbNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (o GetNodesNodeCdbNodeInfoArrayOutput) ToGetNodesNodeCdbNodeInfoArrayOutput() GetNodesNodeCdbNodeInfoArrayOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoArrayOutput) ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoArrayOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoArrayOutput) Index(i pulumi.IntInput) GetNodesNodeCdbNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNodeCdbNodeInfo {
		return vs[0].([]GetNodesNodeCdbNodeInfo)[vs[1].(int)]
	}).(GetNodesNodeCdbNodeInfoOutput)
}

type GetNodesNodeMcMultiDisk struct {
	// The number of cloud disks of this type.
	Count int `pulumi:"count"`
	// Disk type.
	Type int `pulumi:"type"`
	// The size of the cloud disk.
	Volume int `pulumi:"volume"`
}

// GetNodesNodeMcMultiDiskInput is an input type that accepts GetNodesNodeMcMultiDiskArgs and GetNodesNodeMcMultiDiskOutput values.
// You can construct a concrete instance of `GetNodesNodeMcMultiDiskInput` via:
//
//	GetNodesNodeMcMultiDiskArgs{...}
type GetNodesNodeMcMultiDiskInput interface {
	pulumi.Input

	ToGetNodesNodeMcMultiDiskOutput() GetNodesNodeMcMultiDiskOutput
	ToGetNodesNodeMcMultiDiskOutputWithContext(context.Context) GetNodesNodeMcMultiDiskOutput
}

type GetNodesNodeMcMultiDiskArgs struct {
	// The number of cloud disks of this type.
	Count pulumi.IntInput `pulumi:"count"`
	// Disk type.
	Type pulumi.IntInput `pulumi:"type"`
	// The size of the cloud disk.
	Volume pulumi.IntInput `pulumi:"volume"`
}

func (GetNodesNodeMcMultiDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (i GetNodesNodeMcMultiDiskArgs) ToGetNodesNodeMcMultiDiskOutput() GetNodesNodeMcMultiDiskOutput {
	return i.ToGetNodesNodeMcMultiDiskOutputWithContext(context.Background())
}

func (i GetNodesNodeMcMultiDiskArgs) ToGetNodesNodeMcMultiDiskOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeMcMultiDiskOutput)
}

// GetNodesNodeMcMultiDiskArrayInput is an input type that accepts GetNodesNodeMcMultiDiskArray and GetNodesNodeMcMultiDiskArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeMcMultiDiskArrayInput` via:
//
//	GetNodesNodeMcMultiDiskArray{ GetNodesNodeMcMultiDiskArgs{...} }
type GetNodesNodeMcMultiDiskArrayInput interface {
	pulumi.Input

	ToGetNodesNodeMcMultiDiskArrayOutput() GetNodesNodeMcMultiDiskArrayOutput
	ToGetNodesNodeMcMultiDiskArrayOutputWithContext(context.Context) GetNodesNodeMcMultiDiskArrayOutput
}

type GetNodesNodeMcMultiDiskArray []GetNodesNodeMcMultiDiskInput

func (GetNodesNodeMcMultiDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (i GetNodesNodeMcMultiDiskArray) ToGetNodesNodeMcMultiDiskArrayOutput() GetNodesNodeMcMultiDiskArrayOutput {
	return i.ToGetNodesNodeMcMultiDiskArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeMcMultiDiskArray) ToGetNodesNodeMcMultiDiskArrayOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeMcMultiDiskArrayOutput)
}

type GetNodesNodeMcMultiDiskOutput struct{ *pulumi.OutputState }

func (GetNodesNodeMcMultiDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (o GetNodesNodeMcMultiDiskOutput) ToGetNodesNodeMcMultiDiskOutput() GetNodesNodeMcMultiDiskOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskOutput) ToGetNodesNodeMcMultiDiskOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskOutput {
	return o
}

// The number of cloud disks of this type.
func (o GetNodesNodeMcMultiDiskOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeMcMultiDisk) int { return v.Count }).(pulumi.IntOutput)
}

// Disk type.
func (o GetNodesNodeMcMultiDiskOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeMcMultiDisk) int { return v.Type }).(pulumi.IntOutput)
}

// The size of the cloud disk.
func (o GetNodesNodeMcMultiDiskOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeMcMultiDisk) int { return v.Volume }).(pulumi.IntOutput)
}

type GetNodesNodeMcMultiDiskArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeMcMultiDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (o GetNodesNodeMcMultiDiskArrayOutput) ToGetNodesNodeMcMultiDiskArrayOutput() GetNodesNodeMcMultiDiskArrayOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskArrayOutput) ToGetNodesNodeMcMultiDiskArrayOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskArrayOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskArrayOutput) Index(i pulumi.IntInput) GetNodesNodeMcMultiDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNodeMcMultiDisk {
		return vs[0].([]GetNodesNodeMcMultiDisk)[vs[1].(int)]
	}).(GetNodesNodeMcMultiDiskOutput)
}

type GetNodesNodeTag struct {
	// Tag key.
	TagKey string `pulumi:"tagKey"`
	// Tag value.
	TagValue string `pulumi:"tagValue"`
}

// GetNodesNodeTagInput is an input type that accepts GetNodesNodeTagArgs and GetNodesNodeTagOutput values.
// You can construct a concrete instance of `GetNodesNodeTagInput` via:
//
//	GetNodesNodeTagArgs{...}
type GetNodesNodeTagInput interface {
	pulumi.Input

	ToGetNodesNodeTagOutput() GetNodesNodeTagOutput
	ToGetNodesNodeTagOutputWithContext(context.Context) GetNodesNodeTagOutput
}

type GetNodesNodeTagArgs struct {
	// Tag key.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// Tag value.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetNodesNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeTag)(nil)).Elem()
}

func (i GetNodesNodeTagArgs) ToGetNodesNodeTagOutput() GetNodesNodeTagOutput {
	return i.ToGetNodesNodeTagOutputWithContext(context.Background())
}

func (i GetNodesNodeTagArgs) ToGetNodesNodeTagOutputWithContext(ctx context.Context) GetNodesNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeTagOutput)
}

// GetNodesNodeTagArrayInput is an input type that accepts GetNodesNodeTagArray and GetNodesNodeTagArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeTagArrayInput` via:
//
//	GetNodesNodeTagArray{ GetNodesNodeTagArgs{...} }
type GetNodesNodeTagArrayInput interface {
	pulumi.Input

	ToGetNodesNodeTagArrayOutput() GetNodesNodeTagArrayOutput
	ToGetNodesNodeTagArrayOutputWithContext(context.Context) GetNodesNodeTagArrayOutput
}

type GetNodesNodeTagArray []GetNodesNodeTagInput

func (GetNodesNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeTag)(nil)).Elem()
}

func (i GetNodesNodeTagArray) ToGetNodesNodeTagArrayOutput() GetNodesNodeTagArrayOutput {
	return i.ToGetNodesNodeTagArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeTagArray) ToGetNodesNodeTagArrayOutputWithContext(ctx context.Context) GetNodesNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeTagArrayOutput)
}

type GetNodesNodeTagOutput struct{ *pulumi.OutputState }

func (GetNodesNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeTag)(nil)).Elem()
}

func (o GetNodesNodeTagOutput) ToGetNodesNodeTagOutput() GetNodesNodeTagOutput {
	return o
}

func (o GetNodesNodeTagOutput) ToGetNodesNodeTagOutputWithContext(ctx context.Context) GetNodesNodeTagOutput {
	return o
}

// Tag key.
func (o GetNodesNodeTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeTag) string { return v.TagKey }).(pulumi.StringOutput)
}

// Tag value.
func (o GetNodesNodeTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetNodesNodeTagArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeTag)(nil)).Elem()
}

func (o GetNodesNodeTagArrayOutput) ToGetNodesNodeTagArrayOutput() GetNodesNodeTagArrayOutput {
	return o
}

func (o GetNodesNodeTagArrayOutput) ToGetNodesNodeTagArrayOutputWithContext(ctx context.Context) GetNodesNodeTagArrayOutput {
	return o
}

func (o GetNodesNodeTagArrayOutput) Index(i pulumi.IntInput) GetNodesNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNodeTag {
		return vs[0].([]GetNodesNodeTag)[vs[1].(int)]
	}).(GetNodesNodeTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPlacementInfoInput)(nil)).Elem(), ClusterPlacementInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPlacementInfoPtrInput)(nil)).Elem(), ClusterPlacementInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecInput)(nil)).Elem(), ClusterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCommonResourceSpecInput)(nil)).Elem(), ClusterResourceSpecCommonResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCommonResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecCommonResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCoreResourceSpecInput)(nil)).Elem(), ClusterResourceSpecCoreResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCoreResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecCoreResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecMasterResourceSpecInput)(nil)).Elem(), ClusterResourceSpecMasterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecMasterResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecMasterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecTaskResourceSpecInput)(nil)).Elem(), ClusterResourceSpecTaskResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecTaskResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecTaskResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoScaleRecordsFilterInput)(nil)).Elem(), GetAutoScaleRecordsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoScaleRecordsFilterArrayInput)(nil)).Elem(), GetAutoScaleRecordsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoScaleRecordsRecordListInput)(nil)).Elem(), GetAutoScaleRecordsRecordListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoScaleRecordsRecordListArrayInput)(nil)).Elem(), GetAutoScaleRecordsRecordListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCvmQuotaEksQuotaSetInput)(nil)).Elem(), GetCvmQuotaEksQuotaSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCvmQuotaEksQuotaSetArrayInput)(nil)).Elem(), GetCvmQuotaEksQuotaSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCvmQuotaPostPaidQuotaSetInput)(nil)).Elem(), GetCvmQuotaPostPaidQuotaSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCvmQuotaPostPaidQuotaSetArrayInput)(nil)).Elem(), GetCvmQuotaPostPaidQuotaSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCvmQuotaSpotPaidQuotaSetInput)(nil)).Elem(), GetCvmQuotaSpotPaidQuotaSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCvmQuotaSpotPaidQuotaSetArrayInput)(nil)).Elem(), GetCvmQuotaSpotPaidQuotaSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceClusterInput)(nil)).Elem(), GetInstanceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceClusterArrayInput)(nil)).Elem(), GetInstanceClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeInput)(nil)).Elem(), GetNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeArrayInput)(nil)).Elem(), GetNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeCdbNodeInfoInput)(nil)).Elem(), GetNodesNodeCdbNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeCdbNodeInfoArrayInput)(nil)).Elem(), GetNodesNodeCdbNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeMcMultiDiskInput)(nil)).Elem(), GetNodesNodeMcMultiDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeMcMultiDiskArrayInput)(nil)).Elem(), GetNodesNodeMcMultiDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeTagInput)(nil)).Elem(), GetNodesNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeTagArrayInput)(nil)).Elem(), GetNodesNodeTagArray{})
	pulumi.RegisterOutputType(ClusterPlacementInfoOutput{})
	pulumi.RegisterOutputType(ClusterPlacementInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCommonResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCommonResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCoreResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCoreResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecMasterResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecMasterResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecTaskResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecTaskResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(GetAutoScaleRecordsFilterOutput{})
	pulumi.RegisterOutputType(GetAutoScaleRecordsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAutoScaleRecordsRecordListOutput{})
	pulumi.RegisterOutputType(GetAutoScaleRecordsRecordListArrayOutput{})
	pulumi.RegisterOutputType(GetCvmQuotaEksQuotaSetOutput{})
	pulumi.RegisterOutputType(GetCvmQuotaEksQuotaSetArrayOutput{})
	pulumi.RegisterOutputType(GetCvmQuotaPostPaidQuotaSetOutput{})
	pulumi.RegisterOutputType(GetCvmQuotaPostPaidQuotaSetArrayOutput{})
	pulumi.RegisterOutputType(GetCvmQuotaSpotPaidQuotaSetOutput{})
	pulumi.RegisterOutputType(GetCvmQuotaSpotPaidQuotaSetArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceClusterOutput{})
	pulumi.RegisterOutputType(GetInstanceClusterArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeOutput{})
	pulumi.RegisterOutputType(GetNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeCdbNodeInfoOutput{})
	pulumi.RegisterOutputType(GetNodesNodeCdbNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeMcMultiDiskOutput{})
	pulumi.RegisterOutputType(GetNodesNodeMcMultiDiskArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeTagOutput{})
	pulumi.RegisterOutputType(GetNodesNodeTagArrayOutput{})
}
