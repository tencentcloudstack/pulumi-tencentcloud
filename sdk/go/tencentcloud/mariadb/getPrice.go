// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mariadb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mariadb price
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mariadb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mariadb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mariadb.GetPrice(ctx, &mariadb.GetPriceArgs{
//				BuyCount:  1,
//				Memory:    2,
//				NodeCount: 2,
//				Paymode:   pulumi.StringRef("prepaid"),
//				Period:    pulumi.IntRef(1),
//				Storage:   20,
//				Zone:      "ap-guangzhou-3",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPrice(ctx *pulumi.Context, args *GetPriceArgs, opts ...pulumi.InvokeOption) (*GetPriceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPriceResult
	err := ctx.Invoke("tencentcloud:Mariadb/getPrice:getPrice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrice.
type GetPriceArgs struct {
	// Price unit. Valid values: `* pent` (cent), `* microPent` (microcent).
	AmountUnit *string `pulumi:"amountUnit"`
	// The quantity you want to purchase is queried by default for the price of purchasing 1 instance.
	BuyCount int `pulumi:"buyCount"`
	// Memory size in GB, which can be obtained by querying the instance specification through the `DescribeDBInstanceSpecs` API.
	Memory int `pulumi:"memory"`
	// Number of instance nodes, which can be obtained by querying the instance specification through the `DescribeDBInstanceSpecs` API.
	NodeCount int `pulumi:"nodeCount"`
	// Billing type. Valid values: `postpaid` (pay-as-you-go), `prepaid` (monthly subscription).
	Paymode *string `pulumi:"paymode"`
	// Purchase period in months.
	Period *int `pulumi:"period"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Storage capacity in GB. The maximum and minimum storage space can be obtained by querying instance specification through the `DescribeDBInstanceSpecs` API.
	Storage int `pulumi:"storage"`
	// AZ ID of the purchased instance.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getPrice.
type GetPriceResult struct {
	AmountUnit *string `pulumi:"amountUnit"`
	BuyCount   int     `pulumi:"buyCount"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Memory    int    `pulumi:"memory"`
	NodeCount int    `pulumi:"nodeCount"`
	// Original price * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
	OriginalPrice int     `pulumi:"originalPrice"`
	Paymode       *string `pulumi:"paymode"`
	Period        *int    `pulumi:"period"`
	// The actual price may be different from the original price due to discounts. * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
	Price            int     `pulumi:"price"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Storage          int     `pulumi:"storage"`
	Zone             string  `pulumi:"zone"`
}

func GetPriceOutput(ctx *pulumi.Context, args GetPriceOutputArgs, opts ...pulumi.InvokeOption) GetPriceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPriceResult, error) {
			args := v.(GetPriceArgs)
			r, err := GetPrice(ctx, &args, opts...)
			var s GetPriceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPriceResultOutput)
}

// A collection of arguments for invoking getPrice.
type GetPriceOutputArgs struct {
	// Price unit. Valid values: `* pent` (cent), `* microPent` (microcent).
	AmountUnit pulumi.StringPtrInput `pulumi:"amountUnit"`
	// The quantity you want to purchase is queried by default for the price of purchasing 1 instance.
	BuyCount pulumi.IntInput `pulumi:"buyCount"`
	// Memory size in GB, which can be obtained by querying the instance specification through the `DescribeDBInstanceSpecs` API.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Number of instance nodes, which can be obtained by querying the instance specification through the `DescribeDBInstanceSpecs` API.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// Billing type. Valid values: `postpaid` (pay-as-you-go), `prepaid` (monthly subscription).
	Paymode pulumi.StringPtrInput `pulumi:"paymode"`
	// Purchase period in months.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Storage capacity in GB. The maximum and minimum storage space can be obtained by querying instance specification through the `DescribeDBInstanceSpecs` API.
	Storage pulumi.IntInput `pulumi:"storage"`
	// AZ ID of the purchased instance.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetPriceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPriceArgs)(nil)).Elem()
}

// A collection of values returned by getPrice.
type GetPriceResultOutput struct{ *pulumi.OutputState }

func (GetPriceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPriceResult)(nil)).Elem()
}

func (o GetPriceResultOutput) ToGetPriceResultOutput() GetPriceResultOutput {
	return o
}

func (o GetPriceResultOutput) ToGetPriceResultOutputWithContext(ctx context.Context) GetPriceResultOutput {
	return o
}

func (o GetPriceResultOutput) AmountUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *string { return v.AmountUnit }).(pulumi.StringPtrOutput)
}

func (o GetPriceResultOutput) BuyCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.BuyCount }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPriceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPriceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPriceResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Original price * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
func (o GetPriceResultOutput) OriginalPrice() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.OriginalPrice }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) Paymode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *string { return v.Paymode }).(pulumi.StringPtrOutput)
}

func (o GetPriceResultOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// The actual price may be different from the original price due to discounts. * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
func (o GetPriceResultOutput) Price() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.Price }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetPriceResultOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.Storage }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetPriceResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPriceResultOutput{})
}
