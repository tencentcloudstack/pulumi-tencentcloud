// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mariadb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a mariadb dedicatedclusterDbInstance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mariadb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mariadb.NewDedicatedclusterDbInstance(ctx, "dedicatedclusterDbInstance", &Mariadb.DedicatedclusterDbInstanceArgs{
//				ClusterId:    pulumi.String("dbdc-24odnuhr"),
//				DbVersionId:  pulumi.String("8.0"),
//				GoodsNum:     pulumi.Int(1),
//				InstanceName: pulumi.String("cluster-mariadb-test-1"),
//				Memory:       pulumi.Int(2),
//				Storage:      pulumi.Int(10),
//				SubnetId:     pulumi.String("subnet-3ku415by"),
//				VpcId:        pulumi.String("vpc-ii1jfbhl"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// mariadb dedicatedcluster_db_instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Mariadb/dedicatedclusterDbInstance:DedicatedclusterDbInstance dedicatedcluster_db_instance tdsql-050g3fmv
//
// ```
type DedicatedclusterDbInstance struct {
	pulumi.CustomResourceState

	// dedicated cluster id.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// db engine version, default to 0.
	DbVersionId pulumi.StringOutput `pulumi:"dbVersionId"`
	// number of instance.
	GoodsNum pulumi.IntOutput `pulumi:"goodsNum"`
	// name of this instance.
	InstanceName pulumi.StringPtrOutput `pulumi:"instanceName"`
	// instance memory.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// project id.
	ProjectId pulumi.IntPtrOutput `pulumi:"projectId"`
	// instance disk storage.
	Storage pulumi.IntOutput `pulumi:"storage"`
	// subnet id, it&amp;#39;s required when vpcId is set.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// Tag description list.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// vip.
	Vip pulumi.StringOutput `pulumi:"vip"`
	// vpc id.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewDedicatedclusterDbInstance registers a new resource with the given unique name, arguments, and options.
func NewDedicatedclusterDbInstance(ctx *pulumi.Context,
	name string, args *DedicatedclusterDbInstanceArgs, opts ...pulumi.ResourceOption) (*DedicatedclusterDbInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.GoodsNum == nil {
		return nil, errors.New("invalid value for required argument 'GoodsNum'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DedicatedclusterDbInstance
	err := ctx.RegisterResource("tencentcloud:Mariadb/dedicatedclusterDbInstance:DedicatedclusterDbInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedclusterDbInstance gets an existing DedicatedclusterDbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedclusterDbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedclusterDbInstanceState, opts ...pulumi.ResourceOption) (*DedicatedclusterDbInstance, error) {
	var resource DedicatedclusterDbInstance
	err := ctx.ReadResource("tencentcloud:Mariadb/dedicatedclusterDbInstance:DedicatedclusterDbInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedclusterDbInstance resources.
type dedicatedclusterDbInstanceState struct {
	// dedicated cluster id.
	ClusterId *string `pulumi:"clusterId"`
	// db engine version, default to 0.
	DbVersionId *string `pulumi:"dbVersionId"`
	// number of instance.
	GoodsNum *int `pulumi:"goodsNum"`
	// name of this instance.
	InstanceName *string `pulumi:"instanceName"`
	// instance memory.
	Memory *int `pulumi:"memory"`
	// project id.
	ProjectId *int `pulumi:"projectId"`
	// instance disk storage.
	Storage *int `pulumi:"storage"`
	// subnet id, it&amp;#39;s required when vpcId is set.
	SubnetId *string `pulumi:"subnetId"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// vip.
	Vip *string `pulumi:"vip"`
	// vpc id.
	VpcId *string `pulumi:"vpcId"`
}

type DedicatedclusterDbInstanceState struct {
	// dedicated cluster id.
	ClusterId pulumi.StringPtrInput
	// db engine version, default to 0.
	DbVersionId pulumi.StringPtrInput
	// number of instance.
	GoodsNum pulumi.IntPtrInput
	// name of this instance.
	InstanceName pulumi.StringPtrInput
	// instance memory.
	Memory pulumi.IntPtrInput
	// project id.
	ProjectId pulumi.IntPtrInput
	// instance disk storage.
	Storage pulumi.IntPtrInput
	// subnet id, it&amp;#39;s required when vpcId is set.
	SubnetId pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
	// vip.
	Vip pulumi.StringPtrInput
	// vpc id.
	VpcId pulumi.StringPtrInput
}

func (DedicatedclusterDbInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedclusterDbInstanceState)(nil)).Elem()
}

type dedicatedclusterDbInstanceArgs struct {
	// dedicated cluster id.
	ClusterId string `pulumi:"clusterId"`
	// db engine version, default to 0.
	DbVersionId *string `pulumi:"dbVersionId"`
	// number of instance.
	GoodsNum int `pulumi:"goodsNum"`
	// name of this instance.
	InstanceName *string `pulumi:"instanceName"`
	// instance memory.
	Memory int `pulumi:"memory"`
	// project id.
	ProjectId *int `pulumi:"projectId"`
	// instance disk storage.
	Storage int `pulumi:"storage"`
	// subnet id, it&amp;#39;s required when vpcId is set.
	SubnetId *string `pulumi:"subnetId"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// vip.
	Vip *string `pulumi:"vip"`
	// vpc id.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a DedicatedclusterDbInstance resource.
type DedicatedclusterDbInstanceArgs struct {
	// dedicated cluster id.
	ClusterId pulumi.StringInput
	// db engine version, default to 0.
	DbVersionId pulumi.StringPtrInput
	// number of instance.
	GoodsNum pulumi.IntInput
	// name of this instance.
	InstanceName pulumi.StringPtrInput
	// instance memory.
	Memory pulumi.IntInput
	// project id.
	ProjectId pulumi.IntPtrInput
	// instance disk storage.
	Storage pulumi.IntInput
	// subnet id, it&amp;#39;s required when vpcId is set.
	SubnetId pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
	// vip.
	Vip pulumi.StringPtrInput
	// vpc id.
	VpcId pulumi.StringPtrInput
}

func (DedicatedclusterDbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedclusterDbInstanceArgs)(nil)).Elem()
}

type DedicatedclusterDbInstanceInput interface {
	pulumi.Input

	ToDedicatedclusterDbInstanceOutput() DedicatedclusterDbInstanceOutput
	ToDedicatedclusterDbInstanceOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceOutput
}

func (*DedicatedclusterDbInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedclusterDbInstance)(nil)).Elem()
}

func (i *DedicatedclusterDbInstance) ToDedicatedclusterDbInstanceOutput() DedicatedclusterDbInstanceOutput {
	return i.ToDedicatedclusterDbInstanceOutputWithContext(context.Background())
}

func (i *DedicatedclusterDbInstance) ToDedicatedclusterDbInstanceOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedclusterDbInstanceOutput)
}

// DedicatedclusterDbInstanceArrayInput is an input type that accepts DedicatedclusterDbInstanceArray and DedicatedclusterDbInstanceArrayOutput values.
// You can construct a concrete instance of `DedicatedclusterDbInstanceArrayInput` via:
//
//	DedicatedclusterDbInstanceArray{ DedicatedclusterDbInstanceArgs{...} }
type DedicatedclusterDbInstanceArrayInput interface {
	pulumi.Input

	ToDedicatedclusterDbInstanceArrayOutput() DedicatedclusterDbInstanceArrayOutput
	ToDedicatedclusterDbInstanceArrayOutputWithContext(context.Context) DedicatedclusterDbInstanceArrayOutput
}

type DedicatedclusterDbInstanceArray []DedicatedclusterDbInstanceInput

func (DedicatedclusterDbInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedclusterDbInstance)(nil)).Elem()
}

func (i DedicatedclusterDbInstanceArray) ToDedicatedclusterDbInstanceArrayOutput() DedicatedclusterDbInstanceArrayOutput {
	return i.ToDedicatedclusterDbInstanceArrayOutputWithContext(context.Background())
}

func (i DedicatedclusterDbInstanceArray) ToDedicatedclusterDbInstanceArrayOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedclusterDbInstanceArrayOutput)
}

// DedicatedclusterDbInstanceMapInput is an input type that accepts DedicatedclusterDbInstanceMap and DedicatedclusterDbInstanceMapOutput values.
// You can construct a concrete instance of `DedicatedclusterDbInstanceMapInput` via:
//
//	DedicatedclusterDbInstanceMap{ "key": DedicatedclusterDbInstanceArgs{...} }
type DedicatedclusterDbInstanceMapInput interface {
	pulumi.Input

	ToDedicatedclusterDbInstanceMapOutput() DedicatedclusterDbInstanceMapOutput
	ToDedicatedclusterDbInstanceMapOutputWithContext(context.Context) DedicatedclusterDbInstanceMapOutput
}

type DedicatedclusterDbInstanceMap map[string]DedicatedclusterDbInstanceInput

func (DedicatedclusterDbInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedclusterDbInstance)(nil)).Elem()
}

func (i DedicatedclusterDbInstanceMap) ToDedicatedclusterDbInstanceMapOutput() DedicatedclusterDbInstanceMapOutput {
	return i.ToDedicatedclusterDbInstanceMapOutputWithContext(context.Background())
}

func (i DedicatedclusterDbInstanceMap) ToDedicatedclusterDbInstanceMapOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedclusterDbInstanceMapOutput)
}

type DedicatedclusterDbInstanceOutput struct{ *pulumi.OutputState }

func (DedicatedclusterDbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedclusterDbInstance)(nil)).Elem()
}

func (o DedicatedclusterDbInstanceOutput) ToDedicatedclusterDbInstanceOutput() DedicatedclusterDbInstanceOutput {
	return o
}

func (o DedicatedclusterDbInstanceOutput) ToDedicatedclusterDbInstanceOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceOutput {
	return o
}

// dedicated cluster id.
func (o DedicatedclusterDbInstanceOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// db engine version, default to 0.
func (o DedicatedclusterDbInstanceOutput) DbVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.StringOutput { return v.DbVersionId }).(pulumi.StringOutput)
}

// number of instance.
func (o DedicatedclusterDbInstanceOutput) GoodsNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.IntOutput { return v.GoodsNum }).(pulumi.IntOutput)
}

// name of this instance.
func (o DedicatedclusterDbInstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.StringPtrOutput { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// instance memory.
func (o DedicatedclusterDbInstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// project id.
func (o DedicatedclusterDbInstanceOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.IntPtrOutput { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// instance disk storage.
func (o DedicatedclusterDbInstanceOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.IntOutput { return v.Storage }).(pulumi.IntOutput)
}

// subnet id, it&amp;#39;s required when vpcId is set.
func (o DedicatedclusterDbInstanceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Tag description list.
func (o DedicatedclusterDbInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// vip.
func (o DedicatedclusterDbInstanceOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.StringOutput { return v.Vip }).(pulumi.StringOutput)
}

// vpc id.
func (o DedicatedclusterDbInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedclusterDbInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type DedicatedclusterDbInstanceArrayOutput struct{ *pulumi.OutputState }

func (DedicatedclusterDbInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedclusterDbInstance)(nil)).Elem()
}

func (o DedicatedclusterDbInstanceArrayOutput) ToDedicatedclusterDbInstanceArrayOutput() DedicatedclusterDbInstanceArrayOutput {
	return o
}

func (o DedicatedclusterDbInstanceArrayOutput) ToDedicatedclusterDbInstanceArrayOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceArrayOutput {
	return o
}

func (o DedicatedclusterDbInstanceArrayOutput) Index(i pulumi.IntInput) DedicatedclusterDbInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DedicatedclusterDbInstance {
		return vs[0].([]*DedicatedclusterDbInstance)[vs[1].(int)]
	}).(DedicatedclusterDbInstanceOutput)
}

type DedicatedclusterDbInstanceMapOutput struct{ *pulumi.OutputState }

func (DedicatedclusterDbInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedclusterDbInstance)(nil)).Elem()
}

func (o DedicatedclusterDbInstanceMapOutput) ToDedicatedclusterDbInstanceMapOutput() DedicatedclusterDbInstanceMapOutput {
	return o
}

func (o DedicatedclusterDbInstanceMapOutput) ToDedicatedclusterDbInstanceMapOutputWithContext(ctx context.Context) DedicatedclusterDbInstanceMapOutput {
	return o
}

func (o DedicatedclusterDbInstanceMapOutput) MapIndex(k pulumi.StringInput) DedicatedclusterDbInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DedicatedclusterDbInstance {
		return vs[0].(map[string]*DedicatedclusterDbInstance)[vs[1].(string)]
	}).(DedicatedclusterDbInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedclusterDbInstanceInput)(nil)).Elem(), &DedicatedclusterDbInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedclusterDbInstanceArrayInput)(nil)).Elem(), DedicatedclusterDbInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedclusterDbInstanceMapInput)(nil)).Elem(), DedicatedclusterDbInstanceMap{})
	pulumi.RegisterOutputType(DedicatedclusterDbInstanceOutput{})
	pulumi.RegisterOutputType(DedicatedclusterDbInstanceArrayOutput{})
	pulumi.RegisterOutputType(DedicatedclusterDbInstanceMapOutput{})
}
