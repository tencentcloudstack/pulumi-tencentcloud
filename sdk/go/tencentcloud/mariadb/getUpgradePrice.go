// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mariadb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mariadb upgradePrice
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mariadb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mariadb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mariadb.GetUpgradePrice(ctx, &mariadb.GetUpgradePriceArgs{
//				InstanceId: "tdsql-9vqvls95",
//				Memory:     4,
//				NodeCount:  pulumi.IntRef(2),
//				Storage:    40,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUpgradePrice(ctx *pulumi.Context, args *GetUpgradePriceArgs, opts ...pulumi.InvokeOption) (*GetUpgradePriceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetUpgradePriceResult
	err := ctx.Invoke("tencentcloud:Mariadb/getUpgradePrice:getUpgradePrice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUpgradePrice.
type GetUpgradePriceArgs struct {
	// Price unit. Valid values: `* pent` (cent), `* microPent` (microcent).
	AmountUnit *string `pulumi:"amountUnit"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Memory size in GB, which can be obtained by querying the instance specification through the `DescribeDBInstanceSpecs` API.
	Memory int `pulumi:"memory"`
	// New instance nodes, zero means not change.
	NodeCount *int `pulumi:"nodeCount"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Storage capacity in GB. The maximum and minimum storage space can be obtained by querying instance specification through the `DescribeDBInstanceSpecs` API.
	Storage int `pulumi:"storage"`
}

// A collection of values returned by getUpgradePrice.
type GetUpgradePriceResult struct {
	AmountUnit *string `pulumi:"amountUnit"`
	// Price calculation formula.
	Formula string `pulumi:"formula"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Memory     int    `pulumi:"memory"`
	NodeCount  *int   `pulumi:"nodeCount"`
	// Original price * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
	OriginalPrice int `pulumi:"originalPrice"`
	// The actual price may be different from the original price due to discounts. * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
	Price            int     `pulumi:"price"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Storage          int     `pulumi:"storage"`
}

func GetUpgradePriceOutput(ctx *pulumi.Context, args GetUpgradePriceOutputArgs, opts ...pulumi.InvokeOption) GetUpgradePriceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUpgradePriceResult, error) {
			args := v.(GetUpgradePriceArgs)
			r, err := GetUpgradePrice(ctx, &args, opts...)
			var s GetUpgradePriceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUpgradePriceResultOutput)
}

// A collection of arguments for invoking getUpgradePrice.
type GetUpgradePriceOutputArgs struct {
	// Price unit. Valid values: `* pent` (cent), `* microPent` (microcent).
	AmountUnit pulumi.StringPtrInput `pulumi:"amountUnit"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Memory size in GB, which can be obtained by querying the instance specification through the `DescribeDBInstanceSpecs` API.
	Memory pulumi.IntInput `pulumi:"memory"`
	// New instance nodes, zero means not change.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Storage capacity in GB. The maximum and minimum storage space can be obtained by querying instance specification through the `DescribeDBInstanceSpecs` API.
	Storage pulumi.IntInput `pulumi:"storage"`
}

func (GetUpgradePriceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpgradePriceArgs)(nil)).Elem()
}

// A collection of values returned by getUpgradePrice.
type GetUpgradePriceResultOutput struct{ *pulumi.OutputState }

func (GetUpgradePriceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpgradePriceResult)(nil)).Elem()
}

func (o GetUpgradePriceResultOutput) ToGetUpgradePriceResultOutput() GetUpgradePriceResultOutput {
	return o
}

func (o GetUpgradePriceResultOutput) ToGetUpgradePriceResultOutputWithContext(ctx context.Context) GetUpgradePriceResultOutput {
	return o
}

func (o GetUpgradePriceResultOutput) AmountUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) *string { return v.AmountUnit }).(pulumi.StringPtrOutput)
}

// Price calculation formula.
func (o GetUpgradePriceResultOutput) Formula() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) string { return v.Formula }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUpgradePriceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUpgradePriceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetUpgradePriceResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetUpgradePriceResultOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// Original price * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
func (o GetUpgradePriceResultOutput) OriginalPrice() pulumi.IntOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) int { return v.OriginalPrice }).(pulumi.IntOutput)
}

// The actual price may be different from the original price due to discounts. * Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. * Currency: CNY (Chinese site), USD (international site).
func (o GetUpgradePriceResultOutput) Price() pulumi.IntOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) int { return v.Price }).(pulumi.IntOutput)
}

func (o GetUpgradePriceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetUpgradePriceResultOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v GetUpgradePriceResult) int { return v.Storage }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUpgradePriceResultOutput{})
}
