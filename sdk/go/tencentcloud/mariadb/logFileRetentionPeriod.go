// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mariadb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a mariadb logFileRetentionPeriod
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mariadb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mariadb.NewLogFileRetentionPeriod(ctx, "logFileRetentionPeriod", &Mariadb.LogFileRetentionPeriodArgs{
//				Days:       pulumi.Int(8),
//				InstanceId: pulumi.String("tdsql-4pzs5b67"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// mariadb log_file_retention_period can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Mariadb/logFileRetentionPeriod:LogFileRetentionPeriod log_file_retention_period tdsql-4pzs5b67
//
// ```
type LogFileRetentionPeriod struct {
	pulumi.CustomResourceState

	// The number of days to save, cannot exceed 30.
	Days pulumi.IntOutput `pulumi:"days"`
	// instance id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewLogFileRetentionPeriod registers a new resource with the given unique name, arguments, and options.
func NewLogFileRetentionPeriod(ctx *pulumi.Context,
	name string, args *LogFileRetentionPeriodArgs, opts ...pulumi.ResourceOption) (*LogFileRetentionPeriod, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Days == nil {
		return nil, errors.New("invalid value for required argument 'Days'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource LogFileRetentionPeriod
	err := ctx.RegisterResource("tencentcloud:Mariadb/logFileRetentionPeriod:LogFileRetentionPeriod", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFileRetentionPeriod gets an existing LogFileRetentionPeriod resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFileRetentionPeriod(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFileRetentionPeriodState, opts ...pulumi.ResourceOption) (*LogFileRetentionPeriod, error) {
	var resource LogFileRetentionPeriod
	err := ctx.ReadResource("tencentcloud:Mariadb/logFileRetentionPeriod:LogFileRetentionPeriod", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFileRetentionPeriod resources.
type logFileRetentionPeriodState struct {
	// The number of days to save, cannot exceed 30.
	Days *int `pulumi:"days"`
	// instance id.
	InstanceId *string `pulumi:"instanceId"`
}

type LogFileRetentionPeriodState struct {
	// The number of days to save, cannot exceed 30.
	Days pulumi.IntPtrInput
	// instance id.
	InstanceId pulumi.StringPtrInput
}

func (LogFileRetentionPeriodState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFileRetentionPeriodState)(nil)).Elem()
}

type logFileRetentionPeriodArgs struct {
	// The number of days to save, cannot exceed 30.
	Days int `pulumi:"days"`
	// instance id.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a LogFileRetentionPeriod resource.
type LogFileRetentionPeriodArgs struct {
	// The number of days to save, cannot exceed 30.
	Days pulumi.IntInput
	// instance id.
	InstanceId pulumi.StringInput
}

func (LogFileRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFileRetentionPeriodArgs)(nil)).Elem()
}

type LogFileRetentionPeriodInput interface {
	pulumi.Input

	ToLogFileRetentionPeriodOutput() LogFileRetentionPeriodOutput
	ToLogFileRetentionPeriodOutputWithContext(ctx context.Context) LogFileRetentionPeriodOutput
}

func (*LogFileRetentionPeriod) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFileRetentionPeriod)(nil)).Elem()
}

func (i *LogFileRetentionPeriod) ToLogFileRetentionPeriodOutput() LogFileRetentionPeriodOutput {
	return i.ToLogFileRetentionPeriodOutputWithContext(context.Background())
}

func (i *LogFileRetentionPeriod) ToLogFileRetentionPeriodOutputWithContext(ctx context.Context) LogFileRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFileRetentionPeriodOutput)
}

// LogFileRetentionPeriodArrayInput is an input type that accepts LogFileRetentionPeriodArray and LogFileRetentionPeriodArrayOutput values.
// You can construct a concrete instance of `LogFileRetentionPeriodArrayInput` via:
//
//	LogFileRetentionPeriodArray{ LogFileRetentionPeriodArgs{...} }
type LogFileRetentionPeriodArrayInput interface {
	pulumi.Input

	ToLogFileRetentionPeriodArrayOutput() LogFileRetentionPeriodArrayOutput
	ToLogFileRetentionPeriodArrayOutputWithContext(context.Context) LogFileRetentionPeriodArrayOutput
}

type LogFileRetentionPeriodArray []LogFileRetentionPeriodInput

func (LogFileRetentionPeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFileRetentionPeriod)(nil)).Elem()
}

func (i LogFileRetentionPeriodArray) ToLogFileRetentionPeriodArrayOutput() LogFileRetentionPeriodArrayOutput {
	return i.ToLogFileRetentionPeriodArrayOutputWithContext(context.Background())
}

func (i LogFileRetentionPeriodArray) ToLogFileRetentionPeriodArrayOutputWithContext(ctx context.Context) LogFileRetentionPeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFileRetentionPeriodArrayOutput)
}

// LogFileRetentionPeriodMapInput is an input type that accepts LogFileRetentionPeriodMap and LogFileRetentionPeriodMapOutput values.
// You can construct a concrete instance of `LogFileRetentionPeriodMapInput` via:
//
//	LogFileRetentionPeriodMap{ "key": LogFileRetentionPeriodArgs{...} }
type LogFileRetentionPeriodMapInput interface {
	pulumi.Input

	ToLogFileRetentionPeriodMapOutput() LogFileRetentionPeriodMapOutput
	ToLogFileRetentionPeriodMapOutputWithContext(context.Context) LogFileRetentionPeriodMapOutput
}

type LogFileRetentionPeriodMap map[string]LogFileRetentionPeriodInput

func (LogFileRetentionPeriodMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFileRetentionPeriod)(nil)).Elem()
}

func (i LogFileRetentionPeriodMap) ToLogFileRetentionPeriodMapOutput() LogFileRetentionPeriodMapOutput {
	return i.ToLogFileRetentionPeriodMapOutputWithContext(context.Background())
}

func (i LogFileRetentionPeriodMap) ToLogFileRetentionPeriodMapOutputWithContext(ctx context.Context) LogFileRetentionPeriodMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFileRetentionPeriodMapOutput)
}

type LogFileRetentionPeriodOutput struct{ *pulumi.OutputState }

func (LogFileRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFileRetentionPeriod)(nil)).Elem()
}

func (o LogFileRetentionPeriodOutput) ToLogFileRetentionPeriodOutput() LogFileRetentionPeriodOutput {
	return o
}

func (o LogFileRetentionPeriodOutput) ToLogFileRetentionPeriodOutputWithContext(ctx context.Context) LogFileRetentionPeriodOutput {
	return o
}

// The number of days to save, cannot exceed 30.
func (o LogFileRetentionPeriodOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFileRetentionPeriod) pulumi.IntOutput { return v.Days }).(pulumi.IntOutput)
}

// instance id.
func (o LogFileRetentionPeriodOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFileRetentionPeriod) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type LogFileRetentionPeriodArrayOutput struct{ *pulumi.OutputState }

func (LogFileRetentionPeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFileRetentionPeriod)(nil)).Elem()
}

func (o LogFileRetentionPeriodArrayOutput) ToLogFileRetentionPeriodArrayOutput() LogFileRetentionPeriodArrayOutput {
	return o
}

func (o LogFileRetentionPeriodArrayOutput) ToLogFileRetentionPeriodArrayOutputWithContext(ctx context.Context) LogFileRetentionPeriodArrayOutput {
	return o
}

func (o LogFileRetentionPeriodArrayOutput) Index(i pulumi.IntInput) LogFileRetentionPeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFileRetentionPeriod {
		return vs[0].([]*LogFileRetentionPeriod)[vs[1].(int)]
	}).(LogFileRetentionPeriodOutput)
}

type LogFileRetentionPeriodMapOutput struct{ *pulumi.OutputState }

func (LogFileRetentionPeriodMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFileRetentionPeriod)(nil)).Elem()
}

func (o LogFileRetentionPeriodMapOutput) ToLogFileRetentionPeriodMapOutput() LogFileRetentionPeriodMapOutput {
	return o
}

func (o LogFileRetentionPeriodMapOutput) ToLogFileRetentionPeriodMapOutputWithContext(ctx context.Context) LogFileRetentionPeriodMapOutput {
	return o
}

func (o LogFileRetentionPeriodMapOutput) MapIndex(k pulumi.StringInput) LogFileRetentionPeriodOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFileRetentionPeriod {
		return vs[0].(map[string]*LogFileRetentionPeriod)[vs[1].(string)]
	}).(LogFileRetentionPeriodOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFileRetentionPeriodInput)(nil)).Elem(), &LogFileRetentionPeriod{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFileRetentionPeriodArrayInput)(nil)).Elem(), LogFileRetentionPeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFileRetentionPeriodMapInput)(nil)).Elem(), LogFileRetentionPeriodMap{})
	pulumi.RegisterOutputType(LogFileRetentionPeriodOutput{})
	pulumi.RegisterOutputType(LogFileRetentionPeriodArrayOutput{})
	pulumi.RegisterOutputType(LogFileRetentionPeriodMapOutput{})
}
