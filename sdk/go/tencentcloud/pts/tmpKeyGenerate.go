// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pts

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a pts tmpKey
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Pts"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Pts.NewTmpKeyGenerate(ctx, "tmpKey", &Pts.TmpKeyGenerateArgs{
//				ProjectId:  pulumi.String("project-1b0zqmhg"),
//				ScenarioId: pulumi.String("scenario-abc"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type TmpKeyGenerate struct {
	pulumi.CustomResourceState

	// Temporary access credentials.
	Credentials TmpKeyGenerateCredentialArrayOutput `pulumi:"credentials"`
	// Timestamp of temporary access credential timeout (in seconds).
	ExpiredTime pulumi.IntOutput `pulumi:"expiredTime"`
	// Project ID.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Scenario ID.
	ScenarioId pulumi.StringPtrOutput `pulumi:"scenarioId"`
	// The timestamp of the moment when the temporary access credential was obtained (in seconds).
	StartTime pulumi.IntOutput `pulumi:"startTime"`
}

// NewTmpKeyGenerate registers a new resource with the given unique name, arguments, and options.
func NewTmpKeyGenerate(ctx *pulumi.Context,
	name string, args *TmpKeyGenerateArgs, opts ...pulumi.ResourceOption) (*TmpKeyGenerate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TmpKeyGenerate
	err := ctx.RegisterResource("tencentcloud:Pts/tmpKeyGenerate:TmpKeyGenerate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTmpKeyGenerate gets an existing TmpKeyGenerate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTmpKeyGenerate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TmpKeyGenerateState, opts ...pulumi.ResourceOption) (*TmpKeyGenerate, error) {
	var resource TmpKeyGenerate
	err := ctx.ReadResource("tencentcloud:Pts/tmpKeyGenerate:TmpKeyGenerate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TmpKeyGenerate resources.
type tmpKeyGenerateState struct {
	// Temporary access credentials.
	Credentials []TmpKeyGenerateCredential `pulumi:"credentials"`
	// Timestamp of temporary access credential timeout (in seconds).
	ExpiredTime *int `pulumi:"expiredTime"`
	// Project ID.
	ProjectId *string `pulumi:"projectId"`
	// Scenario ID.
	ScenarioId *string `pulumi:"scenarioId"`
	// The timestamp of the moment when the temporary access credential was obtained (in seconds).
	StartTime *int `pulumi:"startTime"`
}

type TmpKeyGenerateState struct {
	// Temporary access credentials.
	Credentials TmpKeyGenerateCredentialArrayInput
	// Timestamp of temporary access credential timeout (in seconds).
	ExpiredTime pulumi.IntPtrInput
	// Project ID.
	ProjectId pulumi.StringPtrInput
	// Scenario ID.
	ScenarioId pulumi.StringPtrInput
	// The timestamp of the moment when the temporary access credential was obtained (in seconds).
	StartTime pulumi.IntPtrInput
}

func (TmpKeyGenerateState) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpKeyGenerateState)(nil)).Elem()
}

type tmpKeyGenerateArgs struct {
	// Project ID.
	ProjectId string `pulumi:"projectId"`
	// Scenario ID.
	ScenarioId *string `pulumi:"scenarioId"`
}

// The set of arguments for constructing a TmpKeyGenerate resource.
type TmpKeyGenerateArgs struct {
	// Project ID.
	ProjectId pulumi.StringInput
	// Scenario ID.
	ScenarioId pulumi.StringPtrInput
}

func (TmpKeyGenerateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpKeyGenerateArgs)(nil)).Elem()
}

type TmpKeyGenerateInput interface {
	pulumi.Input

	ToTmpKeyGenerateOutput() TmpKeyGenerateOutput
	ToTmpKeyGenerateOutputWithContext(ctx context.Context) TmpKeyGenerateOutput
}

func (*TmpKeyGenerate) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpKeyGenerate)(nil)).Elem()
}

func (i *TmpKeyGenerate) ToTmpKeyGenerateOutput() TmpKeyGenerateOutput {
	return i.ToTmpKeyGenerateOutputWithContext(context.Background())
}

func (i *TmpKeyGenerate) ToTmpKeyGenerateOutputWithContext(ctx context.Context) TmpKeyGenerateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpKeyGenerateOutput)
}

// TmpKeyGenerateArrayInput is an input type that accepts TmpKeyGenerateArray and TmpKeyGenerateArrayOutput values.
// You can construct a concrete instance of `TmpKeyGenerateArrayInput` via:
//
//	TmpKeyGenerateArray{ TmpKeyGenerateArgs{...} }
type TmpKeyGenerateArrayInput interface {
	pulumi.Input

	ToTmpKeyGenerateArrayOutput() TmpKeyGenerateArrayOutput
	ToTmpKeyGenerateArrayOutputWithContext(context.Context) TmpKeyGenerateArrayOutput
}

type TmpKeyGenerateArray []TmpKeyGenerateInput

func (TmpKeyGenerateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpKeyGenerate)(nil)).Elem()
}

func (i TmpKeyGenerateArray) ToTmpKeyGenerateArrayOutput() TmpKeyGenerateArrayOutput {
	return i.ToTmpKeyGenerateArrayOutputWithContext(context.Background())
}

func (i TmpKeyGenerateArray) ToTmpKeyGenerateArrayOutputWithContext(ctx context.Context) TmpKeyGenerateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpKeyGenerateArrayOutput)
}

// TmpKeyGenerateMapInput is an input type that accepts TmpKeyGenerateMap and TmpKeyGenerateMapOutput values.
// You can construct a concrete instance of `TmpKeyGenerateMapInput` via:
//
//	TmpKeyGenerateMap{ "key": TmpKeyGenerateArgs{...} }
type TmpKeyGenerateMapInput interface {
	pulumi.Input

	ToTmpKeyGenerateMapOutput() TmpKeyGenerateMapOutput
	ToTmpKeyGenerateMapOutputWithContext(context.Context) TmpKeyGenerateMapOutput
}

type TmpKeyGenerateMap map[string]TmpKeyGenerateInput

func (TmpKeyGenerateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpKeyGenerate)(nil)).Elem()
}

func (i TmpKeyGenerateMap) ToTmpKeyGenerateMapOutput() TmpKeyGenerateMapOutput {
	return i.ToTmpKeyGenerateMapOutputWithContext(context.Background())
}

func (i TmpKeyGenerateMap) ToTmpKeyGenerateMapOutputWithContext(ctx context.Context) TmpKeyGenerateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpKeyGenerateMapOutput)
}

type TmpKeyGenerateOutput struct{ *pulumi.OutputState }

func (TmpKeyGenerateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpKeyGenerate)(nil)).Elem()
}

func (o TmpKeyGenerateOutput) ToTmpKeyGenerateOutput() TmpKeyGenerateOutput {
	return o
}

func (o TmpKeyGenerateOutput) ToTmpKeyGenerateOutputWithContext(ctx context.Context) TmpKeyGenerateOutput {
	return o
}

// Temporary access credentials.
func (o TmpKeyGenerateOutput) Credentials() TmpKeyGenerateCredentialArrayOutput {
	return o.ApplyT(func(v *TmpKeyGenerate) TmpKeyGenerateCredentialArrayOutput { return v.Credentials }).(TmpKeyGenerateCredentialArrayOutput)
}

// Timestamp of temporary access credential timeout (in seconds).
func (o TmpKeyGenerateOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v *TmpKeyGenerate) pulumi.IntOutput { return v.ExpiredTime }).(pulumi.IntOutput)
}

// Project ID.
func (o TmpKeyGenerateOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *TmpKeyGenerate) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Scenario ID.
func (o TmpKeyGenerateOutput) ScenarioId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TmpKeyGenerate) pulumi.StringPtrOutput { return v.ScenarioId }).(pulumi.StringPtrOutput)
}

// The timestamp of the moment when the temporary access credential was obtained (in seconds).
func (o TmpKeyGenerateOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v *TmpKeyGenerate) pulumi.IntOutput { return v.StartTime }).(pulumi.IntOutput)
}

type TmpKeyGenerateArrayOutput struct{ *pulumi.OutputState }

func (TmpKeyGenerateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpKeyGenerate)(nil)).Elem()
}

func (o TmpKeyGenerateArrayOutput) ToTmpKeyGenerateArrayOutput() TmpKeyGenerateArrayOutput {
	return o
}

func (o TmpKeyGenerateArrayOutput) ToTmpKeyGenerateArrayOutputWithContext(ctx context.Context) TmpKeyGenerateArrayOutput {
	return o
}

func (o TmpKeyGenerateArrayOutput) Index(i pulumi.IntInput) TmpKeyGenerateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TmpKeyGenerate {
		return vs[0].([]*TmpKeyGenerate)[vs[1].(int)]
	}).(TmpKeyGenerateOutput)
}

type TmpKeyGenerateMapOutput struct{ *pulumi.OutputState }

func (TmpKeyGenerateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpKeyGenerate)(nil)).Elem()
}

func (o TmpKeyGenerateMapOutput) ToTmpKeyGenerateMapOutput() TmpKeyGenerateMapOutput {
	return o
}

func (o TmpKeyGenerateMapOutput) ToTmpKeyGenerateMapOutputWithContext(ctx context.Context) TmpKeyGenerateMapOutput {
	return o
}

func (o TmpKeyGenerateMapOutput) MapIndex(k pulumi.StringInput) TmpKeyGenerateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TmpKeyGenerate {
		return vs[0].(map[string]*TmpKeyGenerate)[vs[1].(string)]
	}).(TmpKeyGenerateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TmpKeyGenerateInput)(nil)).Elem(), &TmpKeyGenerate{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpKeyGenerateArrayInput)(nil)).Elem(), TmpKeyGenerateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpKeyGenerateMapInput)(nil)).Elem(), TmpKeyGenerateMap{})
	pulumi.RegisterOutputType(TmpKeyGenerateOutput{})
	pulumi.RegisterOutputType(TmpKeyGenerateArrayOutput{})
	pulumi.RegisterOutputType(TmpKeyGenerateMapOutput{})
}
