// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tse

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tse wafDomains
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tse"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tse.NewWafDomains(ctx, "wafDomains", &Tse.WafDomainsArgs{
//				Domain:    pulumi.String("tse.exmaple.com"),
//				GatewayId: pulumi.String("gateway-ed63e957"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// tse waf_domains can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Tse/wafDomains:WafDomains waf_domains waf_domains_id
//
// ```
type WafDomains struct {
	pulumi.CustomResourceState

	// The waf protected domain name.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Gateway ID.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
}

// NewWafDomains registers a new resource with the given unique name, arguments, and options.
func NewWafDomains(ctx *pulumi.Context,
	name string, args *WafDomainsArgs, opts ...pulumi.ResourceOption) (*WafDomains, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource WafDomains
	err := ctx.RegisterResource("tencentcloud:Tse/wafDomains:WafDomains", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWafDomains gets an existing WafDomains resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWafDomains(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WafDomainsState, opts ...pulumi.ResourceOption) (*WafDomains, error) {
	var resource WafDomains
	err := ctx.ReadResource("tencentcloud:Tse/wafDomains:WafDomains", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WafDomains resources.
type wafDomainsState struct {
	// The waf protected domain name.
	Domain *string `pulumi:"domain"`
	// Gateway ID.
	GatewayId *string `pulumi:"gatewayId"`
}

type WafDomainsState struct {
	// The waf protected domain name.
	Domain pulumi.StringPtrInput
	// Gateway ID.
	GatewayId pulumi.StringPtrInput
}

func (WafDomainsState) ElementType() reflect.Type {
	return reflect.TypeOf((*wafDomainsState)(nil)).Elem()
}

type wafDomainsArgs struct {
	// The waf protected domain name.
	Domain string `pulumi:"domain"`
	// Gateway ID.
	GatewayId string `pulumi:"gatewayId"`
}

// The set of arguments for constructing a WafDomains resource.
type WafDomainsArgs struct {
	// The waf protected domain name.
	Domain pulumi.StringInput
	// Gateway ID.
	GatewayId pulumi.StringInput
}

func (WafDomainsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wafDomainsArgs)(nil)).Elem()
}

type WafDomainsInput interface {
	pulumi.Input

	ToWafDomainsOutput() WafDomainsOutput
	ToWafDomainsOutputWithContext(ctx context.Context) WafDomainsOutput
}

func (*WafDomains) ElementType() reflect.Type {
	return reflect.TypeOf((**WafDomains)(nil)).Elem()
}

func (i *WafDomains) ToWafDomainsOutput() WafDomainsOutput {
	return i.ToWafDomainsOutputWithContext(context.Background())
}

func (i *WafDomains) ToWafDomainsOutputWithContext(ctx context.Context) WafDomainsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafDomainsOutput)
}

// WafDomainsArrayInput is an input type that accepts WafDomainsArray and WafDomainsArrayOutput values.
// You can construct a concrete instance of `WafDomainsArrayInput` via:
//
//	WafDomainsArray{ WafDomainsArgs{...} }
type WafDomainsArrayInput interface {
	pulumi.Input

	ToWafDomainsArrayOutput() WafDomainsArrayOutput
	ToWafDomainsArrayOutputWithContext(context.Context) WafDomainsArrayOutput
}

type WafDomainsArray []WafDomainsInput

func (WafDomainsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafDomains)(nil)).Elem()
}

func (i WafDomainsArray) ToWafDomainsArrayOutput() WafDomainsArrayOutput {
	return i.ToWafDomainsArrayOutputWithContext(context.Background())
}

func (i WafDomainsArray) ToWafDomainsArrayOutputWithContext(ctx context.Context) WafDomainsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafDomainsArrayOutput)
}

// WafDomainsMapInput is an input type that accepts WafDomainsMap and WafDomainsMapOutput values.
// You can construct a concrete instance of `WafDomainsMapInput` via:
//
//	WafDomainsMap{ "key": WafDomainsArgs{...} }
type WafDomainsMapInput interface {
	pulumi.Input

	ToWafDomainsMapOutput() WafDomainsMapOutput
	ToWafDomainsMapOutputWithContext(context.Context) WafDomainsMapOutput
}

type WafDomainsMap map[string]WafDomainsInput

func (WafDomainsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafDomains)(nil)).Elem()
}

func (i WafDomainsMap) ToWafDomainsMapOutput() WafDomainsMapOutput {
	return i.ToWafDomainsMapOutputWithContext(context.Background())
}

func (i WafDomainsMap) ToWafDomainsMapOutputWithContext(ctx context.Context) WafDomainsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafDomainsMapOutput)
}

type WafDomainsOutput struct{ *pulumi.OutputState }

func (WafDomainsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafDomains)(nil)).Elem()
}

func (o WafDomainsOutput) ToWafDomainsOutput() WafDomainsOutput {
	return o
}

func (o WafDomainsOutput) ToWafDomainsOutputWithContext(ctx context.Context) WafDomainsOutput {
	return o
}

// The waf protected domain name.
func (o WafDomainsOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomains) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Gateway ID.
func (o WafDomainsOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomains) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

type WafDomainsArrayOutput struct{ *pulumi.OutputState }

func (WafDomainsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafDomains)(nil)).Elem()
}

func (o WafDomainsArrayOutput) ToWafDomainsArrayOutput() WafDomainsArrayOutput {
	return o
}

func (o WafDomainsArrayOutput) ToWafDomainsArrayOutputWithContext(ctx context.Context) WafDomainsArrayOutput {
	return o
}

func (o WafDomainsArrayOutput) Index(i pulumi.IntInput) WafDomainsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WafDomains {
		return vs[0].([]*WafDomains)[vs[1].(int)]
	}).(WafDomainsOutput)
}

type WafDomainsMapOutput struct{ *pulumi.OutputState }

func (WafDomainsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafDomains)(nil)).Elem()
}

func (o WafDomainsMapOutput) ToWafDomainsMapOutput() WafDomainsMapOutput {
	return o
}

func (o WafDomainsMapOutput) ToWafDomainsMapOutputWithContext(ctx context.Context) WafDomainsMapOutput {
	return o
}

func (o WafDomainsMapOutput) MapIndex(k pulumi.StringInput) WafDomainsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WafDomains {
		return vs[0].(map[string]*WafDomains)[vs[1].(string)]
	}).(WafDomainsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WafDomainsInput)(nil)).Elem(), &WafDomains{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafDomainsArrayInput)(nil)).Elem(), WafDomainsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafDomainsMapInput)(nil)).Elem(), WafDomainsMap{})
	pulumi.RegisterOutputType(WafDomainsOutput{})
	pulumi.RegisterOutputType(WafDomainsArrayOutput{})
	pulumi.RegisterOutputType(WafDomainsMapOutput{})
}
