// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of identity center groups
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetCenterGroups(ctx, &identity.GetCenterGroupsArgs{
//				ZoneId: "z-xxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetCenterGroups(ctx *pulumi.Context, args *GetCenterGroupsArgs, opts ...pulumi.InvokeOption) (*GetCenterGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCenterGroupsResult
	err := ctx.Invoke("tencentcloud:Identity/getCenterGroups:getCenterGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCenterGroups.
type GetCenterGroupsArgs struct {
	// Filter criterion. Format: <Attribute> <Operator> <Value>, case-insensitive. Currently, <Attribute> supports only GroupName, and <Operator> supports only eq (Equals) and sw (Start With). For example, Filter = "GroupName sw test" indicates querying all user groups with names starting with test; Filter = "GroupName eq testgroup" indicates querying the user group with the name testgroup.
	Filter *string `pulumi:"filter"`
	// Filtered user. IsSelected=1 will be returned for the user group associated with this user.
	FilterUsers []string `pulumi:"filterUsers"`
	// User group type. Manual: manually created; Synchronized: externally imported.
	GroupType *string `pulumi:"groupType"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Sorting field, which currently only supports CreateTime. The default is the CreateTime field.
	SortField *string `pulumi:"sortField"`
	// Sorting type. Desc: descending order; Asc: ascending order. It should be set along with SortField.
	SortType *string `pulumi:"sortType"`
	// Space ID.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getCenterGroups.
type GetCenterGroupsResult struct {
	Filter      *string  `pulumi:"filter"`
	FilterUsers []string `pulumi:"filterUsers"`
	GroupType   *string  `pulumi:"groupType"`
	// User group list.
	Groups []GetCenterGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SortField        *string `pulumi:"sortField"`
	SortType         *string `pulumi:"sortType"`
	ZoneId           string  `pulumi:"zoneId"`
}

func GetCenterGroupsOutput(ctx *pulumi.Context, args GetCenterGroupsOutputArgs, opts ...pulumi.InvokeOption) GetCenterGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCenterGroupsResult, error) {
			args := v.(GetCenterGroupsArgs)
			r, err := GetCenterGroups(ctx, &args, opts...)
			var s GetCenterGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCenterGroupsResultOutput)
}

// A collection of arguments for invoking getCenterGroups.
type GetCenterGroupsOutputArgs struct {
	// Filter criterion. Format: <Attribute> <Operator> <Value>, case-insensitive. Currently, <Attribute> supports only GroupName, and <Operator> supports only eq (Equals) and sw (Start With). For example, Filter = "GroupName sw test" indicates querying all user groups with names starting with test; Filter = "GroupName eq testgroup" indicates querying the user group with the name testgroup.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Filtered user. IsSelected=1 will be returned for the user group associated with this user.
	FilterUsers pulumi.StringArrayInput `pulumi:"filterUsers"`
	// User group type. Manual: manually created; Synchronized: externally imported.
	GroupType pulumi.StringPtrInput `pulumi:"groupType"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Sorting field, which currently only supports CreateTime. The default is the CreateTime field.
	SortField pulumi.StringPtrInput `pulumi:"sortField"`
	// Sorting type. Desc: descending order; Asc: ascending order. It should be set along with SortField.
	SortType pulumi.StringPtrInput `pulumi:"sortType"`
	// Space ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetCenterGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCenterGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getCenterGroups.
type GetCenterGroupsResultOutput struct{ *pulumi.OutputState }

func (GetCenterGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCenterGroupsResult)(nil)).Elem()
}

func (o GetCenterGroupsResultOutput) ToGetCenterGroupsResultOutput() GetCenterGroupsResultOutput {
	return o
}

func (o GetCenterGroupsResultOutput) ToGetCenterGroupsResultOutputWithContext(ctx context.Context) GetCenterGroupsResultOutput {
	return o
}

func (o GetCenterGroupsResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o GetCenterGroupsResultOutput) FilterUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) []string { return v.FilterUsers }).(pulumi.StringArrayOutput)
}

func (o GetCenterGroupsResultOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// User group list.
func (o GetCenterGroupsResultOutput) Groups() GetCenterGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) []GetCenterGroupsGroup { return v.Groups }).(GetCenterGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCenterGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCenterGroupsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetCenterGroupsResultOutput) SortField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) *string { return v.SortField }).(pulumi.StringPtrOutput)
}

func (o GetCenterGroupsResultOutput) SortType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) *string { return v.SortType }).(pulumi.StringPtrOutput)
}

func (o GetCenterGroupsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCenterGroupsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCenterGroupsResultOutput{})
}
