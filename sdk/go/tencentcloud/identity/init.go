// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "tencentcloud:Identity/centerExternalSamlIdentityProvider:CenterExternalSamlIdentityProvider":
		r = &CenterExternalSamlIdentityProvider{}
	case "tencentcloud:Identity/centerGroup:CenterGroup":
		r = &CenterGroup{}
	case "tencentcloud:Identity/centerRoleAssignment:CenterRoleAssignment":
		r = &CenterRoleAssignment{}
	case "tencentcloud:Identity/centerRoleConfiguration:CenterRoleConfiguration":
		r = &CenterRoleConfiguration{}
	case "tencentcloud:Identity/centerRoleConfigurationPermissionCustomPoliciesAttachment:CenterRoleConfigurationPermissionCustomPoliciesAttachment":
		r = &CenterRoleConfigurationPermissionCustomPoliciesAttachment{}
	case "tencentcloud:Identity/centerRoleConfigurationPermissionCustomPolicyAttachment:CenterRoleConfigurationPermissionCustomPolicyAttachment":
		r = &CenterRoleConfigurationPermissionCustomPolicyAttachment{}
	case "tencentcloud:Identity/centerRoleConfigurationPermissionPolicyAttachment:CenterRoleConfigurationPermissionPolicyAttachment":
		r = &CenterRoleConfigurationPermissionPolicyAttachment{}
	case "tencentcloud:Identity/centerScimCredential:CenterScimCredential":
		r = &CenterScimCredential{}
	case "tencentcloud:Identity/centerScimCredentialStatus:CenterScimCredentialStatus":
		r = &CenterScimCredentialStatus{}
	case "tencentcloud:Identity/centerScimSynchronizationStatus:CenterScimSynchronizationStatus":
		r = &CenterScimSynchronizationStatus{}
	case "tencentcloud:Identity/centerUser:CenterUser":
		r = &CenterUser{}
	case "tencentcloud:Identity/centerUserGroupAttachment:CenterUserGroupAttachment":
		r = &CenterUserGroupAttachment{}
	case "tencentcloud:Identity/centerUserSyncProvisioning:CenterUserSyncProvisioning":
		r = &CenterUserSyncProvisioning{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerExternalSamlIdentityProvider",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerRoleAssignment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerRoleConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerRoleConfigurationPermissionCustomPoliciesAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerRoleConfigurationPermissionCustomPolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerRoleConfigurationPermissionPolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerScimCredential",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerScimCredentialStatus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerScimSynchronizationStatus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerUserGroupAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Identity/centerUserSyncProvisioning",
		&module{version},
	)
}
