// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a organization identityCenterRoleConfigurationPermissionPolicyAttachment
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewCenterRoleConfigurationPermissionPolicyAttachment(ctx, "identityCenterRoleConfigurationPermissionPolicyAttachment", &Identity.CenterRoleConfigurationPermissionPolicyAttachmentArgs{
//				ZoneId:              pulumi.String("z-xxxxxx"),
//				RoleConfigurationId: pulumi.String("rc-xxxxxx"),
//				RolePolicyId:        pulumi.Any(xxxxxx),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// organization identity_center_role_configuration_permission_policy_attachment can be imported using the id, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Identity/centerRoleConfigurationPermissionPolicyAttachment:CenterRoleConfigurationPermissionPolicyAttachment identity_center_role_configuration_permission_policy_attachment ${zoneId}#${roleConfigurationId}#${rolePolicyIdString}
// ```
type CenterRoleConfigurationPermissionPolicyAttachment struct {
	pulumi.CustomResourceState

	// Role policy add time.
	AddTime pulumi.StringOutput `pulumi:"addTime"`
	// Permission configuration ID.
	RoleConfigurationId pulumi.StringOutput `pulumi:"roleConfigurationId"`
	// Role policy document.
	RolePolicyDocument pulumi.StringOutput `pulumi:"rolePolicyDocument"`
	// Role policy id.
	RolePolicyId pulumi.IntOutput `pulumi:"rolePolicyId"`
	// Role policy name.
	RolePolicyName pulumi.StringOutput `pulumi:"rolePolicyName"`
	// Role policy type.
	RolePolicyType pulumi.StringOutput `pulumi:"rolePolicyType"`
	// Space ID.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewCenterRoleConfigurationPermissionPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewCenterRoleConfigurationPermissionPolicyAttachment(ctx *pulumi.Context,
	name string, args *CenterRoleConfigurationPermissionPolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*CenterRoleConfigurationPermissionPolicyAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'RoleConfigurationId'")
	}
	if args.RolePolicyId == nil {
		return nil, errors.New("invalid value for required argument 'RolePolicyId'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CenterRoleConfigurationPermissionPolicyAttachment
	err := ctx.RegisterResource("tencentcloud:Identity/centerRoleConfigurationPermissionPolicyAttachment:CenterRoleConfigurationPermissionPolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCenterRoleConfigurationPermissionPolicyAttachment gets an existing CenterRoleConfigurationPermissionPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCenterRoleConfigurationPermissionPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CenterRoleConfigurationPermissionPolicyAttachmentState, opts ...pulumi.ResourceOption) (*CenterRoleConfigurationPermissionPolicyAttachment, error) {
	var resource CenterRoleConfigurationPermissionPolicyAttachment
	err := ctx.ReadResource("tencentcloud:Identity/centerRoleConfigurationPermissionPolicyAttachment:CenterRoleConfigurationPermissionPolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CenterRoleConfigurationPermissionPolicyAttachment resources.
type centerRoleConfigurationPermissionPolicyAttachmentState struct {
	// Role policy add time.
	AddTime *string `pulumi:"addTime"`
	// Permission configuration ID.
	RoleConfigurationId *string `pulumi:"roleConfigurationId"`
	// Role policy document.
	RolePolicyDocument *string `pulumi:"rolePolicyDocument"`
	// Role policy id.
	RolePolicyId *int `pulumi:"rolePolicyId"`
	// Role policy name.
	RolePolicyName *string `pulumi:"rolePolicyName"`
	// Role policy type.
	RolePolicyType *string `pulumi:"rolePolicyType"`
	// Space ID.
	ZoneId *string `pulumi:"zoneId"`
}

type CenterRoleConfigurationPermissionPolicyAttachmentState struct {
	// Role policy add time.
	AddTime pulumi.StringPtrInput
	// Permission configuration ID.
	RoleConfigurationId pulumi.StringPtrInput
	// Role policy document.
	RolePolicyDocument pulumi.StringPtrInput
	// Role policy id.
	RolePolicyId pulumi.IntPtrInput
	// Role policy name.
	RolePolicyName pulumi.StringPtrInput
	// Role policy type.
	RolePolicyType pulumi.StringPtrInput
	// Space ID.
	ZoneId pulumi.StringPtrInput
}

func (CenterRoleConfigurationPermissionPolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*centerRoleConfigurationPermissionPolicyAttachmentState)(nil)).Elem()
}

type centerRoleConfigurationPermissionPolicyAttachmentArgs struct {
	// Permission configuration ID.
	RoleConfigurationId string `pulumi:"roleConfigurationId"`
	// Role policy id.
	RolePolicyId int `pulumi:"rolePolicyId"`
	// Role policy name.
	RolePolicyName *string `pulumi:"rolePolicyName"`
	// Space ID.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a CenterRoleConfigurationPermissionPolicyAttachment resource.
type CenterRoleConfigurationPermissionPolicyAttachmentArgs struct {
	// Permission configuration ID.
	RoleConfigurationId pulumi.StringInput
	// Role policy id.
	RolePolicyId pulumi.IntInput
	// Role policy name.
	RolePolicyName pulumi.StringPtrInput
	// Space ID.
	ZoneId pulumi.StringInput
}

func (CenterRoleConfigurationPermissionPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*centerRoleConfigurationPermissionPolicyAttachmentArgs)(nil)).Elem()
}

type CenterRoleConfigurationPermissionPolicyAttachmentInput interface {
	pulumi.Input

	ToCenterRoleConfigurationPermissionPolicyAttachmentOutput() CenterRoleConfigurationPermissionPolicyAttachmentOutput
	ToCenterRoleConfigurationPermissionPolicyAttachmentOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentOutput
}

func (*CenterRoleConfigurationPermissionPolicyAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**CenterRoleConfigurationPermissionPolicyAttachment)(nil)).Elem()
}

func (i *CenterRoleConfigurationPermissionPolicyAttachment) ToCenterRoleConfigurationPermissionPolicyAttachmentOutput() CenterRoleConfigurationPermissionPolicyAttachmentOutput {
	return i.ToCenterRoleConfigurationPermissionPolicyAttachmentOutputWithContext(context.Background())
}

func (i *CenterRoleConfigurationPermissionPolicyAttachment) ToCenterRoleConfigurationPermissionPolicyAttachmentOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CenterRoleConfigurationPermissionPolicyAttachmentOutput)
}

// CenterRoleConfigurationPermissionPolicyAttachmentArrayInput is an input type that accepts CenterRoleConfigurationPermissionPolicyAttachmentArray and CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `CenterRoleConfigurationPermissionPolicyAttachmentArrayInput` via:
//
//	CenterRoleConfigurationPermissionPolicyAttachmentArray{ CenterRoleConfigurationPermissionPolicyAttachmentArgs{...} }
type CenterRoleConfigurationPermissionPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutput() CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput
	ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutputWithContext(context.Context) CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput
}

type CenterRoleConfigurationPermissionPolicyAttachmentArray []CenterRoleConfigurationPermissionPolicyAttachmentInput

func (CenterRoleConfigurationPermissionPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CenterRoleConfigurationPermissionPolicyAttachment)(nil)).Elem()
}

func (i CenterRoleConfigurationPermissionPolicyAttachmentArray) ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutput() CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput {
	return i.ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i CenterRoleConfigurationPermissionPolicyAttachmentArray) ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput)
}

// CenterRoleConfigurationPermissionPolicyAttachmentMapInput is an input type that accepts CenterRoleConfigurationPermissionPolicyAttachmentMap and CenterRoleConfigurationPermissionPolicyAttachmentMapOutput values.
// You can construct a concrete instance of `CenterRoleConfigurationPermissionPolicyAttachmentMapInput` via:
//
//	CenterRoleConfigurationPermissionPolicyAttachmentMap{ "key": CenterRoleConfigurationPermissionPolicyAttachmentArgs{...} }
type CenterRoleConfigurationPermissionPolicyAttachmentMapInput interface {
	pulumi.Input

	ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutput() CenterRoleConfigurationPermissionPolicyAttachmentMapOutput
	ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutputWithContext(context.Context) CenterRoleConfigurationPermissionPolicyAttachmentMapOutput
}

type CenterRoleConfigurationPermissionPolicyAttachmentMap map[string]CenterRoleConfigurationPermissionPolicyAttachmentInput

func (CenterRoleConfigurationPermissionPolicyAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CenterRoleConfigurationPermissionPolicyAttachment)(nil)).Elem()
}

func (i CenterRoleConfigurationPermissionPolicyAttachmentMap) ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutput() CenterRoleConfigurationPermissionPolicyAttachmentMapOutput {
	return i.ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutputWithContext(context.Background())
}

func (i CenterRoleConfigurationPermissionPolicyAttachmentMap) ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CenterRoleConfigurationPermissionPolicyAttachmentMapOutput)
}

type CenterRoleConfigurationPermissionPolicyAttachmentOutput struct{ *pulumi.OutputState }

func (CenterRoleConfigurationPermissionPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CenterRoleConfigurationPermissionPolicyAttachment)(nil)).Elem()
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) ToCenterRoleConfigurationPermissionPolicyAttachmentOutput() CenterRoleConfigurationPermissionPolicyAttachmentOutput {
	return o
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) ToCenterRoleConfigurationPermissionPolicyAttachmentOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentOutput {
	return o
}

// Role policy add time.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) AddTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.StringOutput { return v.AddTime }).(pulumi.StringOutput)
}

// Permission configuration ID.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) RoleConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.StringOutput {
		return v.RoleConfigurationId
	}).(pulumi.StringOutput)
}

// Role policy document.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) RolePolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.StringOutput {
		return v.RolePolicyDocument
	}).(pulumi.StringOutput)
}

// Role policy id.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) RolePolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.IntOutput { return v.RolePolicyId }).(pulumi.IntOutput)
}

// Role policy name.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) RolePolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.StringOutput {
		return v.RolePolicyName
	}).(pulumi.StringOutput)
}

// Role policy type.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) RolePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.StringOutput {
		return v.RolePolicyType
	}).(pulumi.StringOutput)
}

// Space ID.
func (o CenterRoleConfigurationPermissionPolicyAttachmentOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *CenterRoleConfigurationPermissionPolicyAttachment) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CenterRoleConfigurationPermissionPolicyAttachment)(nil)).Elem()
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput) ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutput() CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput {
	return o
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput) ToCenterRoleConfigurationPermissionPolicyAttachmentArrayOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput {
	return o
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) CenterRoleConfigurationPermissionPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CenterRoleConfigurationPermissionPolicyAttachment {
		return vs[0].([]*CenterRoleConfigurationPermissionPolicyAttachment)[vs[1].(int)]
	}).(CenterRoleConfigurationPermissionPolicyAttachmentOutput)
}

type CenterRoleConfigurationPermissionPolicyAttachmentMapOutput struct{ *pulumi.OutputState }

func (CenterRoleConfigurationPermissionPolicyAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CenterRoleConfigurationPermissionPolicyAttachment)(nil)).Elem()
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentMapOutput) ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutput() CenterRoleConfigurationPermissionPolicyAttachmentMapOutput {
	return o
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentMapOutput) ToCenterRoleConfigurationPermissionPolicyAttachmentMapOutputWithContext(ctx context.Context) CenterRoleConfigurationPermissionPolicyAttachmentMapOutput {
	return o
}

func (o CenterRoleConfigurationPermissionPolicyAttachmentMapOutput) MapIndex(k pulumi.StringInput) CenterRoleConfigurationPermissionPolicyAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CenterRoleConfigurationPermissionPolicyAttachment {
		return vs[0].(map[string]*CenterRoleConfigurationPermissionPolicyAttachment)[vs[1].(string)]
	}).(CenterRoleConfigurationPermissionPolicyAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CenterRoleConfigurationPermissionPolicyAttachmentInput)(nil)).Elem(), &CenterRoleConfigurationPermissionPolicyAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*CenterRoleConfigurationPermissionPolicyAttachmentArrayInput)(nil)).Elem(), CenterRoleConfigurationPermissionPolicyAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CenterRoleConfigurationPermissionPolicyAttachmentMapInput)(nil)).Elem(), CenterRoleConfigurationPermissionPolicyAttachmentMap{})
	pulumi.RegisterOutputType(CenterRoleConfigurationPermissionPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(CenterRoleConfigurationPermissionPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(CenterRoleConfigurationPermissionPolicyAttachmentMapOutput{})
}
