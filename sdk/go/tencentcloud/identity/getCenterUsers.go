// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of identity center users
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetCenterUsers(ctx, &identity.GetCenterUsersArgs{
//				ZoneId: "z-xxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetCenterUsers(ctx *pulumi.Context, args *GetCenterUsersArgs, opts ...pulumi.InvokeOption) (*GetCenterUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCenterUsersResult
	err := ctx.Invoke("tencentcloud:Identity/getCenterUsers:getCenterUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCenterUsers.
type GetCenterUsersArgs struct {
	// Filter criterion, which currently only supports username, email address, userId, and description.
	Filter *string `pulumi:"filter"`
	// Filtered user group. IsSelected=1 will be returned for the sub-user associated with this user group.
	FilterGroups []string `pulumi:"filterGroups"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Sorting field, which currently only supports CreateTime. The default is the CreateTime field.
	SortField *string `pulumi:"sortField"`
	// Sorting type. Desc: descending order; Asc: ascending order. It should be set along with SortField.
	SortType *string `pulumi:"sortType"`
	// User status: Enabled, Disabled.
	UserStatus *string `pulumi:"userStatus"`
	// User type. Manual: manually created; Synchronized: externally imported.
	UserType *string `pulumi:"userType"`
	// Space ID.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getCenterUsers.
type GetCenterUsersResult struct {
	Filter       *string  `pulumi:"filter"`
	FilterGroups []string `pulumi:"filterGroups"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SortField        *string `pulumi:"sortField"`
	SortType         *string `pulumi:"sortType"`
	UserStatus       *string `pulumi:"userStatus"`
	UserType         *string `pulumi:"userType"`
	// User list.
	Users  []GetCenterUsersUser `pulumi:"users"`
	ZoneId string               `pulumi:"zoneId"`
}

func GetCenterUsersOutput(ctx *pulumi.Context, args GetCenterUsersOutputArgs, opts ...pulumi.InvokeOption) GetCenterUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCenterUsersResult, error) {
			args := v.(GetCenterUsersArgs)
			r, err := GetCenterUsers(ctx, &args, opts...)
			var s GetCenterUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCenterUsersResultOutput)
}

// A collection of arguments for invoking getCenterUsers.
type GetCenterUsersOutputArgs struct {
	// Filter criterion, which currently only supports username, email address, userId, and description.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Filtered user group. IsSelected=1 will be returned for the sub-user associated with this user group.
	FilterGroups pulumi.StringArrayInput `pulumi:"filterGroups"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Sorting field, which currently only supports CreateTime. The default is the CreateTime field.
	SortField pulumi.StringPtrInput `pulumi:"sortField"`
	// Sorting type. Desc: descending order; Asc: ascending order. It should be set along with SortField.
	SortType pulumi.StringPtrInput `pulumi:"sortType"`
	// User status: Enabled, Disabled.
	UserStatus pulumi.StringPtrInput `pulumi:"userStatus"`
	// User type. Manual: manually created; Synchronized: externally imported.
	UserType pulumi.StringPtrInput `pulumi:"userType"`
	// Space ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetCenterUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCenterUsersArgs)(nil)).Elem()
}

// A collection of values returned by getCenterUsers.
type GetCenterUsersResultOutput struct{ *pulumi.OutputState }

func (GetCenterUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCenterUsersResult)(nil)).Elem()
}

func (o GetCenterUsersResultOutput) ToGetCenterUsersResultOutput() GetCenterUsersResultOutput {
	return o
}

func (o GetCenterUsersResultOutput) ToGetCenterUsersResultOutputWithContext(ctx context.Context) GetCenterUsersResultOutput {
	return o
}

func (o GetCenterUsersResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterUsersResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o GetCenterUsersResultOutput) FilterGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCenterUsersResult) []string { return v.FilterGroups }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCenterUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCenterUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCenterUsersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterUsersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetCenterUsersResultOutput) SortField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterUsersResult) *string { return v.SortField }).(pulumi.StringPtrOutput)
}

func (o GetCenterUsersResultOutput) SortType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterUsersResult) *string { return v.SortType }).(pulumi.StringPtrOutput)
}

func (o GetCenterUsersResultOutput) UserStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterUsersResult) *string { return v.UserStatus }).(pulumi.StringPtrOutput)
}

func (o GetCenterUsersResultOutput) UserType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCenterUsersResult) *string { return v.UserType }).(pulumi.StringPtrOutput)
}

// User list.
func (o GetCenterUsersResultOutput) Users() GetCenterUsersUserArrayOutput {
	return o.ApplyT(func(v GetCenterUsersResult) []GetCenterUsersUser { return v.Users }).(GetCenterUsersUserArrayOutput)
}

func (o GetCenterUsersResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCenterUsersResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCenterUsersResultOutput{})
}
