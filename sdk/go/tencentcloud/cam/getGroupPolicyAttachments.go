// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of CAM group policy attachments
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cam.GetGroupPolicyAttachments(ctx, &cam.GetGroupPolicyAttachmentsArgs{
//				GroupId: tencentcloud_cam_group.Foo.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Cam.GetGroupPolicyAttachments(ctx, &cam.GetGroupPolicyAttachmentsArgs{
//				GroupId:  tencentcloud_cam_group.Foo.Id,
//				PolicyId: pulumi.StringRef(tencentcloud_cam_policy.Foo.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroupPolicyAttachments(ctx *pulumi.Context, args *GetGroupPolicyAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetGroupPolicyAttachmentsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetGroupPolicyAttachmentsResult
	err := ctx.Invoke("tencentcloud:Cam/getGroupPolicyAttachments:getGroupPolicyAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupPolicyAttachments.
type GetGroupPolicyAttachmentsArgs struct {
	// Mode of creation of the CAM user policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode *int `pulumi:"createMode"`
	// ID of the attached CAM group to be queried.
	GroupId string `pulumi:"groupId"`
	// ID of CAM policy to be queried.
	PolicyId *string `pulumi:"policyId"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType *string `pulumi:"policyType"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getGroupPolicyAttachments.
type GetGroupPolicyAttachmentsResult struct {
	// Mode of Creation of the CAM group policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode *int `pulumi:"createMode"`
	// ID of CAM group.
	GroupId string `pulumi:"groupId"`
	// A list of CAM group policy attachments. Each element contains the following attributes:
	GroupPolicyAttachmentLists []GetGroupPolicyAttachmentsGroupPolicyAttachmentList `pulumi:"groupPolicyAttachmentLists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of CAM group.
	PolicyId *string `pulumi:"policyId"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType       *string `pulumi:"policyType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetGroupPolicyAttachmentsOutput(ctx *pulumi.Context, args GetGroupPolicyAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetGroupPolicyAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupPolicyAttachmentsResult, error) {
			args := v.(GetGroupPolicyAttachmentsArgs)
			r, err := GetGroupPolicyAttachments(ctx, &args, opts...)
			var s GetGroupPolicyAttachmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupPolicyAttachmentsResultOutput)
}

// A collection of arguments for invoking getGroupPolicyAttachments.
type GetGroupPolicyAttachmentsOutputArgs struct {
	// Mode of creation of the CAM user policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
	CreateMode pulumi.IntPtrInput `pulumi:"createMode"`
	// ID of the attached CAM group to be queried.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// ID of CAM policy to be queried.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetGroupPolicyAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupPolicyAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by getGroupPolicyAttachments.
type GetGroupPolicyAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetGroupPolicyAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupPolicyAttachmentsResult)(nil)).Elem()
}

func (o GetGroupPolicyAttachmentsResultOutput) ToGetGroupPolicyAttachmentsResultOutput() GetGroupPolicyAttachmentsResultOutput {
	return o
}

func (o GetGroupPolicyAttachmentsResultOutput) ToGetGroupPolicyAttachmentsResultOutputWithContext(ctx context.Context) GetGroupPolicyAttachmentsResultOutput {
	return o
}

// Mode of Creation of the CAM group policy attachment. 1 means the cam policy attachment is created by production, and the others indicate syntax strategy ways.
func (o GetGroupPolicyAttachmentsResultOutput) CreateMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) *int { return v.CreateMode }).(pulumi.IntPtrOutput)
}

// ID of CAM group.
func (o GetGroupPolicyAttachmentsResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// A list of CAM group policy attachments. Each element contains the following attributes:
func (o GetGroupPolicyAttachmentsResultOutput) GroupPolicyAttachmentLists() GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) []GetGroupPolicyAttachmentsGroupPolicyAttachmentList {
		return v.GroupPolicyAttachmentLists
	}).(GetGroupPolicyAttachmentsGroupPolicyAttachmentListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupPolicyAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of CAM group.
func (o GetGroupPolicyAttachmentsResultOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Type of the policy strategy. 'User' means customer strategy and 'QCS' means preset strategy.
func (o GetGroupPolicyAttachmentsResultOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o GetGroupPolicyAttachmentsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupPolicyAttachmentsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupPolicyAttachmentsResultOutput{})
}
