// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cam

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a CAM-ROLE-SSO (Only support OIDC).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cam.NewRoleSso(ctx, "foo", &Cam.RoleSsoArgs{
//				ClientIds: pulumi.StringArray{
//					pulumi.String("..."),
//				},
//				Description: pulumi.String("this is a description"),
//				IdentityKey: pulumi.String("..."),
//				IdentityUrl: pulumi.String("https://login.microsoftonline.com/.../v2.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CAM-ROLE-SSO can be imported using the `name`, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cam/roleSso:RoleSso foo "test"
//
// ```
type RoleSso struct {
	pulumi.CustomResourceState

	// Client ids.
	ClientIds pulumi.StringArrayOutput `pulumi:"clientIds"`
	// The description of resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Sign the public key.
	IdentityKey pulumi.StringOutput `pulumi:"identityKey"`
	// Identity provider URL.
	IdentityUrl pulumi.StringOutput `pulumi:"identityUrl"`
	// The name of resource.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewRoleSso registers a new resource with the given unique name, arguments, and options.
func NewRoleSso(ctx *pulumi.Context,
	name string, args *RoleSsoArgs, opts ...pulumi.ResourceOption) (*RoleSso, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientIds == nil {
		return nil, errors.New("invalid value for required argument 'ClientIds'")
	}
	if args.IdentityKey == nil {
		return nil, errors.New("invalid value for required argument 'IdentityKey'")
	}
	if args.IdentityUrl == nil {
		return nil, errors.New("invalid value for required argument 'IdentityUrl'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RoleSso
	err := ctx.RegisterResource("tencentcloud:Cam/roleSso:RoleSso", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleSso gets an existing RoleSso resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleSso(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleSsoState, opts ...pulumi.ResourceOption) (*RoleSso, error) {
	var resource RoleSso
	err := ctx.ReadResource("tencentcloud:Cam/roleSso:RoleSso", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleSso resources.
type roleSsoState struct {
	// Client ids.
	ClientIds []string `pulumi:"clientIds"`
	// The description of resource.
	Description *string `pulumi:"description"`
	// Sign the public key.
	IdentityKey *string `pulumi:"identityKey"`
	// Identity provider URL.
	IdentityUrl *string `pulumi:"identityUrl"`
	// The name of resource.
	Name *string `pulumi:"name"`
}

type RoleSsoState struct {
	// Client ids.
	ClientIds pulumi.StringArrayInput
	// The description of resource.
	Description pulumi.StringPtrInput
	// Sign the public key.
	IdentityKey pulumi.StringPtrInput
	// Identity provider URL.
	IdentityUrl pulumi.StringPtrInput
	// The name of resource.
	Name pulumi.StringPtrInput
}

func (RoleSsoState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleSsoState)(nil)).Elem()
}

type roleSsoArgs struct {
	// Client ids.
	ClientIds []string `pulumi:"clientIds"`
	// The description of resource.
	Description *string `pulumi:"description"`
	// Sign the public key.
	IdentityKey string `pulumi:"identityKey"`
	// Identity provider URL.
	IdentityUrl string `pulumi:"identityUrl"`
	// The name of resource.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a RoleSso resource.
type RoleSsoArgs struct {
	// Client ids.
	ClientIds pulumi.StringArrayInput
	// The description of resource.
	Description pulumi.StringPtrInput
	// Sign the public key.
	IdentityKey pulumi.StringInput
	// Identity provider URL.
	IdentityUrl pulumi.StringInput
	// The name of resource.
	Name pulumi.StringPtrInput
}

func (RoleSsoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleSsoArgs)(nil)).Elem()
}

type RoleSsoInput interface {
	pulumi.Input

	ToRoleSsoOutput() RoleSsoOutput
	ToRoleSsoOutputWithContext(ctx context.Context) RoleSsoOutput
}

func (*RoleSso) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleSso)(nil)).Elem()
}

func (i *RoleSso) ToRoleSsoOutput() RoleSsoOutput {
	return i.ToRoleSsoOutputWithContext(context.Background())
}

func (i *RoleSso) ToRoleSsoOutputWithContext(ctx context.Context) RoleSsoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSsoOutput)
}

// RoleSsoArrayInput is an input type that accepts RoleSsoArray and RoleSsoArrayOutput values.
// You can construct a concrete instance of `RoleSsoArrayInput` via:
//
//	RoleSsoArray{ RoleSsoArgs{...} }
type RoleSsoArrayInput interface {
	pulumi.Input

	ToRoleSsoArrayOutput() RoleSsoArrayOutput
	ToRoleSsoArrayOutputWithContext(context.Context) RoleSsoArrayOutput
}

type RoleSsoArray []RoleSsoInput

func (RoleSsoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoleSso)(nil)).Elem()
}

func (i RoleSsoArray) ToRoleSsoArrayOutput() RoleSsoArrayOutput {
	return i.ToRoleSsoArrayOutputWithContext(context.Background())
}

func (i RoleSsoArray) ToRoleSsoArrayOutputWithContext(ctx context.Context) RoleSsoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSsoArrayOutput)
}

// RoleSsoMapInput is an input type that accepts RoleSsoMap and RoleSsoMapOutput values.
// You can construct a concrete instance of `RoleSsoMapInput` via:
//
//	RoleSsoMap{ "key": RoleSsoArgs{...} }
type RoleSsoMapInput interface {
	pulumi.Input

	ToRoleSsoMapOutput() RoleSsoMapOutput
	ToRoleSsoMapOutputWithContext(context.Context) RoleSsoMapOutput
}

type RoleSsoMap map[string]RoleSsoInput

func (RoleSsoMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoleSso)(nil)).Elem()
}

func (i RoleSsoMap) ToRoleSsoMapOutput() RoleSsoMapOutput {
	return i.ToRoleSsoMapOutputWithContext(context.Background())
}

func (i RoleSsoMap) ToRoleSsoMapOutputWithContext(ctx context.Context) RoleSsoMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSsoMapOutput)
}

type RoleSsoOutput struct{ *pulumi.OutputState }

func (RoleSsoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleSso)(nil)).Elem()
}

func (o RoleSsoOutput) ToRoleSsoOutput() RoleSsoOutput {
	return o
}

func (o RoleSsoOutput) ToRoleSsoOutputWithContext(ctx context.Context) RoleSsoOutput {
	return o
}

// Client ids.
func (o RoleSsoOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoleSso) pulumi.StringArrayOutput { return v.ClientIds }).(pulumi.StringArrayOutput)
}

// The description of resource.
func (o RoleSsoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleSso) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Sign the public key.
func (o RoleSsoOutput) IdentityKey() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleSso) pulumi.StringOutput { return v.IdentityKey }).(pulumi.StringOutput)
}

// Identity provider URL.
func (o RoleSsoOutput) IdentityUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleSso) pulumi.StringOutput { return v.IdentityUrl }).(pulumi.StringOutput)
}

// The name of resource.
func (o RoleSsoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleSso) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type RoleSsoArrayOutput struct{ *pulumi.OutputState }

func (RoleSsoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoleSso)(nil)).Elem()
}

func (o RoleSsoArrayOutput) ToRoleSsoArrayOutput() RoleSsoArrayOutput {
	return o
}

func (o RoleSsoArrayOutput) ToRoleSsoArrayOutputWithContext(ctx context.Context) RoleSsoArrayOutput {
	return o
}

func (o RoleSsoArrayOutput) Index(i pulumi.IntInput) RoleSsoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RoleSso {
		return vs[0].([]*RoleSso)[vs[1].(int)]
	}).(RoleSsoOutput)
}

type RoleSsoMapOutput struct{ *pulumi.OutputState }

func (RoleSsoMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoleSso)(nil)).Elem()
}

func (o RoleSsoMapOutput) ToRoleSsoMapOutput() RoleSsoMapOutput {
	return o
}

func (o RoleSsoMapOutput) ToRoleSsoMapOutputWithContext(ctx context.Context) RoleSsoMapOutput {
	return o
}

func (o RoleSsoMapOutput) MapIndex(k pulumi.StringInput) RoleSsoOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RoleSso {
		return vs[0].(map[string]*RoleSso)[vs[1].(string)]
	}).(RoleSsoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoleSsoInput)(nil)).Elem(), &RoleSso{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleSsoArrayInput)(nil)).Elem(), RoleSsoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleSsoMapInput)(nil)).Elem(), RoleSsoMap{})
	pulumi.RegisterOutputType(RoleSsoOutput{})
	pulumi.RegisterOutputType(RoleSsoArrayOutput{})
	pulumi.RegisterOutputType(RoleSsoMapOutput{})
}
