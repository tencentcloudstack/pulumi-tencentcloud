// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssl downloadCertificate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewDownloadCertificateOperation(ctx, "downloadCertificate", &Ssl.DownloadCertificateOperationArgs{
//				CertificateId: pulumi.String("8x1eUSSl"),
//				OutputPath:    pulumi.String("./"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssl download_certificate can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssl/downloadCertificateOperation:DownloadCertificateOperation download_certificate download_certificate_id
//
// ```
type DownloadCertificateOperation struct {
	pulumi.CustomResourceState

	// Certificate ID.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// Certificate ID.
	OutputPath pulumi.StringOutput `pulumi:"outputPath"`
}

// NewDownloadCertificateOperation registers a new resource with the given unique name, arguments, and options.
func NewDownloadCertificateOperation(ctx *pulumi.Context,
	name string, args *DownloadCertificateOperationArgs, opts ...pulumi.ResourceOption) (*DownloadCertificateOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateId == nil {
		return nil, errors.New("invalid value for required argument 'CertificateId'")
	}
	if args.OutputPath == nil {
		return nil, errors.New("invalid value for required argument 'OutputPath'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DownloadCertificateOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/downloadCertificateOperation:DownloadCertificateOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDownloadCertificateOperation gets an existing DownloadCertificateOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDownloadCertificateOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DownloadCertificateOperationState, opts ...pulumi.ResourceOption) (*DownloadCertificateOperation, error) {
	var resource DownloadCertificateOperation
	err := ctx.ReadResource("tencentcloud:Ssl/downloadCertificateOperation:DownloadCertificateOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DownloadCertificateOperation resources.
type downloadCertificateOperationState struct {
	// Certificate ID.
	CertificateId *string `pulumi:"certificateId"`
	// Certificate ID.
	OutputPath *string `pulumi:"outputPath"`
}

type DownloadCertificateOperationState struct {
	// Certificate ID.
	CertificateId pulumi.StringPtrInput
	// Certificate ID.
	OutputPath pulumi.StringPtrInput
}

func (DownloadCertificateOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*downloadCertificateOperationState)(nil)).Elem()
}

type downloadCertificateOperationArgs struct {
	// Certificate ID.
	CertificateId string `pulumi:"certificateId"`
	// Certificate ID.
	OutputPath string `pulumi:"outputPath"`
}

// The set of arguments for constructing a DownloadCertificateOperation resource.
type DownloadCertificateOperationArgs struct {
	// Certificate ID.
	CertificateId pulumi.StringInput
	// Certificate ID.
	OutputPath pulumi.StringInput
}

func (DownloadCertificateOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*downloadCertificateOperationArgs)(nil)).Elem()
}

type DownloadCertificateOperationInput interface {
	pulumi.Input

	ToDownloadCertificateOperationOutput() DownloadCertificateOperationOutput
	ToDownloadCertificateOperationOutputWithContext(ctx context.Context) DownloadCertificateOperationOutput
}

func (*DownloadCertificateOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**DownloadCertificateOperation)(nil)).Elem()
}

func (i *DownloadCertificateOperation) ToDownloadCertificateOperationOutput() DownloadCertificateOperationOutput {
	return i.ToDownloadCertificateOperationOutputWithContext(context.Background())
}

func (i *DownloadCertificateOperation) ToDownloadCertificateOperationOutputWithContext(ctx context.Context) DownloadCertificateOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadCertificateOperationOutput)
}

// DownloadCertificateOperationArrayInput is an input type that accepts DownloadCertificateOperationArray and DownloadCertificateOperationArrayOutput values.
// You can construct a concrete instance of `DownloadCertificateOperationArrayInput` via:
//
//	DownloadCertificateOperationArray{ DownloadCertificateOperationArgs{...} }
type DownloadCertificateOperationArrayInput interface {
	pulumi.Input

	ToDownloadCertificateOperationArrayOutput() DownloadCertificateOperationArrayOutput
	ToDownloadCertificateOperationArrayOutputWithContext(context.Context) DownloadCertificateOperationArrayOutput
}

type DownloadCertificateOperationArray []DownloadCertificateOperationInput

func (DownloadCertificateOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DownloadCertificateOperation)(nil)).Elem()
}

func (i DownloadCertificateOperationArray) ToDownloadCertificateOperationArrayOutput() DownloadCertificateOperationArrayOutput {
	return i.ToDownloadCertificateOperationArrayOutputWithContext(context.Background())
}

func (i DownloadCertificateOperationArray) ToDownloadCertificateOperationArrayOutputWithContext(ctx context.Context) DownloadCertificateOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadCertificateOperationArrayOutput)
}

// DownloadCertificateOperationMapInput is an input type that accepts DownloadCertificateOperationMap and DownloadCertificateOperationMapOutput values.
// You can construct a concrete instance of `DownloadCertificateOperationMapInput` via:
//
//	DownloadCertificateOperationMap{ "key": DownloadCertificateOperationArgs{...} }
type DownloadCertificateOperationMapInput interface {
	pulumi.Input

	ToDownloadCertificateOperationMapOutput() DownloadCertificateOperationMapOutput
	ToDownloadCertificateOperationMapOutputWithContext(context.Context) DownloadCertificateOperationMapOutput
}

type DownloadCertificateOperationMap map[string]DownloadCertificateOperationInput

func (DownloadCertificateOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DownloadCertificateOperation)(nil)).Elem()
}

func (i DownloadCertificateOperationMap) ToDownloadCertificateOperationMapOutput() DownloadCertificateOperationMapOutput {
	return i.ToDownloadCertificateOperationMapOutputWithContext(context.Background())
}

func (i DownloadCertificateOperationMap) ToDownloadCertificateOperationMapOutputWithContext(ctx context.Context) DownloadCertificateOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadCertificateOperationMapOutput)
}

type DownloadCertificateOperationOutput struct{ *pulumi.OutputState }

func (DownloadCertificateOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DownloadCertificateOperation)(nil)).Elem()
}

func (o DownloadCertificateOperationOutput) ToDownloadCertificateOperationOutput() DownloadCertificateOperationOutput {
	return o
}

func (o DownloadCertificateOperationOutput) ToDownloadCertificateOperationOutputWithContext(ctx context.Context) DownloadCertificateOperationOutput {
	return o
}

// Certificate ID.
func (o DownloadCertificateOperationOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadCertificateOperation) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// Certificate ID.
func (o DownloadCertificateOperationOutput) OutputPath() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadCertificateOperation) pulumi.StringOutput { return v.OutputPath }).(pulumi.StringOutput)
}

type DownloadCertificateOperationArrayOutput struct{ *pulumi.OutputState }

func (DownloadCertificateOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DownloadCertificateOperation)(nil)).Elem()
}

func (o DownloadCertificateOperationArrayOutput) ToDownloadCertificateOperationArrayOutput() DownloadCertificateOperationArrayOutput {
	return o
}

func (o DownloadCertificateOperationArrayOutput) ToDownloadCertificateOperationArrayOutputWithContext(ctx context.Context) DownloadCertificateOperationArrayOutput {
	return o
}

func (o DownloadCertificateOperationArrayOutput) Index(i pulumi.IntInput) DownloadCertificateOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DownloadCertificateOperation {
		return vs[0].([]*DownloadCertificateOperation)[vs[1].(int)]
	}).(DownloadCertificateOperationOutput)
}

type DownloadCertificateOperationMapOutput struct{ *pulumi.OutputState }

func (DownloadCertificateOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DownloadCertificateOperation)(nil)).Elem()
}

func (o DownloadCertificateOperationMapOutput) ToDownloadCertificateOperationMapOutput() DownloadCertificateOperationMapOutput {
	return o
}

func (o DownloadCertificateOperationMapOutput) ToDownloadCertificateOperationMapOutputWithContext(ctx context.Context) DownloadCertificateOperationMapOutput {
	return o
}

func (o DownloadCertificateOperationMapOutput) MapIndex(k pulumi.StringInput) DownloadCertificateOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DownloadCertificateOperation {
		return vs[0].(map[string]*DownloadCertificateOperation)[vs[1].(string)]
	}).(DownloadCertificateOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadCertificateOperationInput)(nil)).Elem(), &DownloadCertificateOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadCertificateOperationArrayInput)(nil)).Elem(), DownloadCertificateOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadCertificateOperationMapInput)(nil)).Elem(), DownloadCertificateOperationMap{})
	pulumi.RegisterOutputType(DownloadCertificateOperationOutput{})
	pulumi.RegisterOutputType(DownloadCertificateOperationArrayOutput{})
	pulumi.RegisterOutputType(DownloadCertificateOperationMapOutput{})
}
