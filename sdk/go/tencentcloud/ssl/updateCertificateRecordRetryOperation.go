// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssl updateCertificateRecordRetry
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewUpdateCertificateRecordRetryOperation(ctx, "updateCertificateRecordRetry", &Ssl.UpdateCertificateRecordRetryOperationArgs{
//				DeployRecordId: pulumi.Int(1603),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssl update_certificate_record_retry can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssl/updateCertificateRecordRetryOperation:UpdateCertificateRecordRetryOperation update_certificate_record_retry update_certificate_record_retry_id
//
// ```
type UpdateCertificateRecordRetryOperation struct {
	pulumi.CustomResourceState

	// Deployment record details ID to be retried.
	DeployRecordDetailId pulumi.IntPtrOutput `pulumi:"deployRecordDetailId"`
	// Deployment record ID to be retried.
	DeployRecordId pulumi.IntPtrOutput `pulumi:"deployRecordId"`
}

// NewUpdateCertificateRecordRetryOperation registers a new resource with the given unique name, arguments, and options.
func NewUpdateCertificateRecordRetryOperation(ctx *pulumi.Context,
	name string, args *UpdateCertificateRecordRetryOperationArgs, opts ...pulumi.ResourceOption) (*UpdateCertificateRecordRetryOperation, error) {
	if args == nil {
		args = &UpdateCertificateRecordRetryOperationArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource UpdateCertificateRecordRetryOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/updateCertificateRecordRetryOperation:UpdateCertificateRecordRetryOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUpdateCertificateRecordRetryOperation gets an existing UpdateCertificateRecordRetryOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUpdateCertificateRecordRetryOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UpdateCertificateRecordRetryOperationState, opts ...pulumi.ResourceOption) (*UpdateCertificateRecordRetryOperation, error) {
	var resource UpdateCertificateRecordRetryOperation
	err := ctx.ReadResource("tencentcloud:Ssl/updateCertificateRecordRetryOperation:UpdateCertificateRecordRetryOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UpdateCertificateRecordRetryOperation resources.
type updateCertificateRecordRetryOperationState struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId *int `pulumi:"deployRecordDetailId"`
	// Deployment record ID to be retried.
	DeployRecordId *int `pulumi:"deployRecordId"`
}

type UpdateCertificateRecordRetryOperationState struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId pulumi.IntPtrInput
	// Deployment record ID to be retried.
	DeployRecordId pulumi.IntPtrInput
}

func (UpdateCertificateRecordRetryOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*updateCertificateRecordRetryOperationState)(nil)).Elem()
}

type updateCertificateRecordRetryOperationArgs struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId *int `pulumi:"deployRecordDetailId"`
	// Deployment record ID to be retried.
	DeployRecordId *int `pulumi:"deployRecordId"`
}

// The set of arguments for constructing a UpdateCertificateRecordRetryOperation resource.
type UpdateCertificateRecordRetryOperationArgs struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId pulumi.IntPtrInput
	// Deployment record ID to be retried.
	DeployRecordId pulumi.IntPtrInput
}

func (UpdateCertificateRecordRetryOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*updateCertificateRecordRetryOperationArgs)(nil)).Elem()
}

type UpdateCertificateRecordRetryOperationInput interface {
	pulumi.Input

	ToUpdateCertificateRecordRetryOperationOutput() UpdateCertificateRecordRetryOperationOutput
	ToUpdateCertificateRecordRetryOperationOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationOutput
}

func (*UpdateCertificateRecordRetryOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateCertificateRecordRetryOperation)(nil)).Elem()
}

func (i *UpdateCertificateRecordRetryOperation) ToUpdateCertificateRecordRetryOperationOutput() UpdateCertificateRecordRetryOperationOutput {
	return i.ToUpdateCertificateRecordRetryOperationOutputWithContext(context.Background())
}

func (i *UpdateCertificateRecordRetryOperation) ToUpdateCertificateRecordRetryOperationOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateCertificateRecordRetryOperationOutput)
}

// UpdateCertificateRecordRetryOperationArrayInput is an input type that accepts UpdateCertificateRecordRetryOperationArray and UpdateCertificateRecordRetryOperationArrayOutput values.
// You can construct a concrete instance of `UpdateCertificateRecordRetryOperationArrayInput` via:
//
//	UpdateCertificateRecordRetryOperationArray{ UpdateCertificateRecordRetryOperationArgs{...} }
type UpdateCertificateRecordRetryOperationArrayInput interface {
	pulumi.Input

	ToUpdateCertificateRecordRetryOperationArrayOutput() UpdateCertificateRecordRetryOperationArrayOutput
	ToUpdateCertificateRecordRetryOperationArrayOutputWithContext(context.Context) UpdateCertificateRecordRetryOperationArrayOutput
}

type UpdateCertificateRecordRetryOperationArray []UpdateCertificateRecordRetryOperationInput

func (UpdateCertificateRecordRetryOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpdateCertificateRecordRetryOperation)(nil)).Elem()
}

func (i UpdateCertificateRecordRetryOperationArray) ToUpdateCertificateRecordRetryOperationArrayOutput() UpdateCertificateRecordRetryOperationArrayOutput {
	return i.ToUpdateCertificateRecordRetryOperationArrayOutputWithContext(context.Background())
}

func (i UpdateCertificateRecordRetryOperationArray) ToUpdateCertificateRecordRetryOperationArrayOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateCertificateRecordRetryOperationArrayOutput)
}

// UpdateCertificateRecordRetryOperationMapInput is an input type that accepts UpdateCertificateRecordRetryOperationMap and UpdateCertificateRecordRetryOperationMapOutput values.
// You can construct a concrete instance of `UpdateCertificateRecordRetryOperationMapInput` via:
//
//	UpdateCertificateRecordRetryOperationMap{ "key": UpdateCertificateRecordRetryOperationArgs{...} }
type UpdateCertificateRecordRetryOperationMapInput interface {
	pulumi.Input

	ToUpdateCertificateRecordRetryOperationMapOutput() UpdateCertificateRecordRetryOperationMapOutput
	ToUpdateCertificateRecordRetryOperationMapOutputWithContext(context.Context) UpdateCertificateRecordRetryOperationMapOutput
}

type UpdateCertificateRecordRetryOperationMap map[string]UpdateCertificateRecordRetryOperationInput

func (UpdateCertificateRecordRetryOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpdateCertificateRecordRetryOperation)(nil)).Elem()
}

func (i UpdateCertificateRecordRetryOperationMap) ToUpdateCertificateRecordRetryOperationMapOutput() UpdateCertificateRecordRetryOperationMapOutput {
	return i.ToUpdateCertificateRecordRetryOperationMapOutputWithContext(context.Background())
}

func (i UpdateCertificateRecordRetryOperationMap) ToUpdateCertificateRecordRetryOperationMapOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateCertificateRecordRetryOperationMapOutput)
}

type UpdateCertificateRecordRetryOperationOutput struct{ *pulumi.OutputState }

func (UpdateCertificateRecordRetryOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateCertificateRecordRetryOperation)(nil)).Elem()
}

func (o UpdateCertificateRecordRetryOperationOutput) ToUpdateCertificateRecordRetryOperationOutput() UpdateCertificateRecordRetryOperationOutput {
	return o
}

func (o UpdateCertificateRecordRetryOperationOutput) ToUpdateCertificateRecordRetryOperationOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationOutput {
	return o
}

// Deployment record details ID to be retried.
func (o UpdateCertificateRecordRetryOperationOutput) DeployRecordDetailId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateCertificateRecordRetryOperation) pulumi.IntPtrOutput { return v.DeployRecordDetailId }).(pulumi.IntPtrOutput)
}

// Deployment record ID to be retried.
func (o UpdateCertificateRecordRetryOperationOutput) DeployRecordId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateCertificateRecordRetryOperation) pulumi.IntPtrOutput { return v.DeployRecordId }).(pulumi.IntPtrOutput)
}

type UpdateCertificateRecordRetryOperationArrayOutput struct{ *pulumi.OutputState }

func (UpdateCertificateRecordRetryOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpdateCertificateRecordRetryOperation)(nil)).Elem()
}

func (o UpdateCertificateRecordRetryOperationArrayOutput) ToUpdateCertificateRecordRetryOperationArrayOutput() UpdateCertificateRecordRetryOperationArrayOutput {
	return o
}

func (o UpdateCertificateRecordRetryOperationArrayOutput) ToUpdateCertificateRecordRetryOperationArrayOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationArrayOutput {
	return o
}

func (o UpdateCertificateRecordRetryOperationArrayOutput) Index(i pulumi.IntInput) UpdateCertificateRecordRetryOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UpdateCertificateRecordRetryOperation {
		return vs[0].([]*UpdateCertificateRecordRetryOperation)[vs[1].(int)]
	}).(UpdateCertificateRecordRetryOperationOutput)
}

type UpdateCertificateRecordRetryOperationMapOutput struct{ *pulumi.OutputState }

func (UpdateCertificateRecordRetryOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpdateCertificateRecordRetryOperation)(nil)).Elem()
}

func (o UpdateCertificateRecordRetryOperationMapOutput) ToUpdateCertificateRecordRetryOperationMapOutput() UpdateCertificateRecordRetryOperationMapOutput {
	return o
}

func (o UpdateCertificateRecordRetryOperationMapOutput) ToUpdateCertificateRecordRetryOperationMapOutputWithContext(ctx context.Context) UpdateCertificateRecordRetryOperationMapOutput {
	return o
}

func (o UpdateCertificateRecordRetryOperationMapOutput) MapIndex(k pulumi.StringInput) UpdateCertificateRecordRetryOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UpdateCertificateRecordRetryOperation {
		return vs[0].(map[string]*UpdateCertificateRecordRetryOperation)[vs[1].(string)]
	}).(UpdateCertificateRecordRetryOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateCertificateRecordRetryOperationInput)(nil)).Elem(), &UpdateCertificateRecordRetryOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateCertificateRecordRetryOperationArrayInput)(nil)).Elem(), UpdateCertificateRecordRetryOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateCertificateRecordRetryOperationMapInput)(nil)).Elem(), UpdateCertificateRecordRetryOperationMap{})
	pulumi.RegisterOutputType(UpdateCertificateRecordRetryOperationOutput{})
	pulumi.RegisterOutputType(UpdateCertificateRecordRetryOperationArrayOutput{})
	pulumi.RegisterOutputType(UpdateCertificateRecordRetryOperationMapOutput{})
}
