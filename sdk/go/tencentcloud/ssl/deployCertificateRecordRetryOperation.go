// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssl deployCertificateRecordRetry
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewDeployCertificateRecordRetryOperation(ctx, "deployCertificateRecordRetry", &Ssl.DeployCertificateRecordRetryOperationArgs{
//				DeployRecordId: pulumi.Int(35474),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssl deploy_certificate_record_retry can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssl/deployCertificateRecordRetryOperation:DeployCertificateRecordRetryOperation deploy_certificate_record_retry deploy_certificate_record_retry_id
//
// ```
type DeployCertificateRecordRetryOperation struct {
	pulumi.CustomResourceState

	// Deployment record details ID to be retried.
	DeployRecordDetailId pulumi.IntPtrOutput `pulumi:"deployRecordDetailId"`
	// Deployment record ID to be retried.
	DeployRecordId pulumi.IntPtrOutput `pulumi:"deployRecordId"`
}

// NewDeployCertificateRecordRetryOperation registers a new resource with the given unique name, arguments, and options.
func NewDeployCertificateRecordRetryOperation(ctx *pulumi.Context,
	name string, args *DeployCertificateRecordRetryOperationArgs, opts ...pulumi.ResourceOption) (*DeployCertificateRecordRetryOperation, error) {
	if args == nil {
		args = &DeployCertificateRecordRetryOperationArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource DeployCertificateRecordRetryOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/deployCertificateRecordRetryOperation:DeployCertificateRecordRetryOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployCertificateRecordRetryOperation gets an existing DeployCertificateRecordRetryOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployCertificateRecordRetryOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeployCertificateRecordRetryOperationState, opts ...pulumi.ResourceOption) (*DeployCertificateRecordRetryOperation, error) {
	var resource DeployCertificateRecordRetryOperation
	err := ctx.ReadResource("tencentcloud:Ssl/deployCertificateRecordRetryOperation:DeployCertificateRecordRetryOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeployCertificateRecordRetryOperation resources.
type deployCertificateRecordRetryOperationState struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId *int `pulumi:"deployRecordDetailId"`
	// Deployment record ID to be retried.
	DeployRecordId *int `pulumi:"deployRecordId"`
}

type DeployCertificateRecordRetryOperationState struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId pulumi.IntPtrInput
	// Deployment record ID to be retried.
	DeployRecordId pulumi.IntPtrInput
}

func (DeployCertificateRecordRetryOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*deployCertificateRecordRetryOperationState)(nil)).Elem()
}

type deployCertificateRecordRetryOperationArgs struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId *int `pulumi:"deployRecordDetailId"`
	// Deployment record ID to be retried.
	DeployRecordId *int `pulumi:"deployRecordId"`
}

// The set of arguments for constructing a DeployCertificateRecordRetryOperation resource.
type DeployCertificateRecordRetryOperationArgs struct {
	// Deployment record details ID to be retried.
	DeployRecordDetailId pulumi.IntPtrInput
	// Deployment record ID to be retried.
	DeployRecordId pulumi.IntPtrInput
}

func (DeployCertificateRecordRetryOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deployCertificateRecordRetryOperationArgs)(nil)).Elem()
}

type DeployCertificateRecordRetryOperationInput interface {
	pulumi.Input

	ToDeployCertificateRecordRetryOperationOutput() DeployCertificateRecordRetryOperationOutput
	ToDeployCertificateRecordRetryOperationOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationOutput
}

func (*DeployCertificateRecordRetryOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployCertificateRecordRetryOperation)(nil)).Elem()
}

func (i *DeployCertificateRecordRetryOperation) ToDeployCertificateRecordRetryOperationOutput() DeployCertificateRecordRetryOperationOutput {
	return i.ToDeployCertificateRecordRetryOperationOutputWithContext(context.Background())
}

func (i *DeployCertificateRecordRetryOperation) ToDeployCertificateRecordRetryOperationOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployCertificateRecordRetryOperationOutput)
}

// DeployCertificateRecordRetryOperationArrayInput is an input type that accepts DeployCertificateRecordRetryOperationArray and DeployCertificateRecordRetryOperationArrayOutput values.
// You can construct a concrete instance of `DeployCertificateRecordRetryOperationArrayInput` via:
//
//	DeployCertificateRecordRetryOperationArray{ DeployCertificateRecordRetryOperationArgs{...} }
type DeployCertificateRecordRetryOperationArrayInput interface {
	pulumi.Input

	ToDeployCertificateRecordRetryOperationArrayOutput() DeployCertificateRecordRetryOperationArrayOutput
	ToDeployCertificateRecordRetryOperationArrayOutputWithContext(context.Context) DeployCertificateRecordRetryOperationArrayOutput
}

type DeployCertificateRecordRetryOperationArray []DeployCertificateRecordRetryOperationInput

func (DeployCertificateRecordRetryOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployCertificateRecordRetryOperation)(nil)).Elem()
}

func (i DeployCertificateRecordRetryOperationArray) ToDeployCertificateRecordRetryOperationArrayOutput() DeployCertificateRecordRetryOperationArrayOutput {
	return i.ToDeployCertificateRecordRetryOperationArrayOutputWithContext(context.Background())
}

func (i DeployCertificateRecordRetryOperationArray) ToDeployCertificateRecordRetryOperationArrayOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployCertificateRecordRetryOperationArrayOutput)
}

// DeployCertificateRecordRetryOperationMapInput is an input type that accepts DeployCertificateRecordRetryOperationMap and DeployCertificateRecordRetryOperationMapOutput values.
// You can construct a concrete instance of `DeployCertificateRecordRetryOperationMapInput` via:
//
//	DeployCertificateRecordRetryOperationMap{ "key": DeployCertificateRecordRetryOperationArgs{...} }
type DeployCertificateRecordRetryOperationMapInput interface {
	pulumi.Input

	ToDeployCertificateRecordRetryOperationMapOutput() DeployCertificateRecordRetryOperationMapOutput
	ToDeployCertificateRecordRetryOperationMapOutputWithContext(context.Context) DeployCertificateRecordRetryOperationMapOutput
}

type DeployCertificateRecordRetryOperationMap map[string]DeployCertificateRecordRetryOperationInput

func (DeployCertificateRecordRetryOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployCertificateRecordRetryOperation)(nil)).Elem()
}

func (i DeployCertificateRecordRetryOperationMap) ToDeployCertificateRecordRetryOperationMapOutput() DeployCertificateRecordRetryOperationMapOutput {
	return i.ToDeployCertificateRecordRetryOperationMapOutputWithContext(context.Background())
}

func (i DeployCertificateRecordRetryOperationMap) ToDeployCertificateRecordRetryOperationMapOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployCertificateRecordRetryOperationMapOutput)
}

type DeployCertificateRecordRetryOperationOutput struct{ *pulumi.OutputState }

func (DeployCertificateRecordRetryOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployCertificateRecordRetryOperation)(nil)).Elem()
}

func (o DeployCertificateRecordRetryOperationOutput) ToDeployCertificateRecordRetryOperationOutput() DeployCertificateRecordRetryOperationOutput {
	return o
}

func (o DeployCertificateRecordRetryOperationOutput) ToDeployCertificateRecordRetryOperationOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationOutput {
	return o
}

// Deployment record details ID to be retried.
func (o DeployCertificateRecordRetryOperationOutput) DeployRecordDetailId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeployCertificateRecordRetryOperation) pulumi.IntPtrOutput { return v.DeployRecordDetailId }).(pulumi.IntPtrOutput)
}

// Deployment record ID to be retried.
func (o DeployCertificateRecordRetryOperationOutput) DeployRecordId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeployCertificateRecordRetryOperation) pulumi.IntPtrOutput { return v.DeployRecordId }).(pulumi.IntPtrOutput)
}

type DeployCertificateRecordRetryOperationArrayOutput struct{ *pulumi.OutputState }

func (DeployCertificateRecordRetryOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployCertificateRecordRetryOperation)(nil)).Elem()
}

func (o DeployCertificateRecordRetryOperationArrayOutput) ToDeployCertificateRecordRetryOperationArrayOutput() DeployCertificateRecordRetryOperationArrayOutput {
	return o
}

func (o DeployCertificateRecordRetryOperationArrayOutput) ToDeployCertificateRecordRetryOperationArrayOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationArrayOutput {
	return o
}

func (o DeployCertificateRecordRetryOperationArrayOutput) Index(i pulumi.IntInput) DeployCertificateRecordRetryOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeployCertificateRecordRetryOperation {
		return vs[0].([]*DeployCertificateRecordRetryOperation)[vs[1].(int)]
	}).(DeployCertificateRecordRetryOperationOutput)
}

type DeployCertificateRecordRetryOperationMapOutput struct{ *pulumi.OutputState }

func (DeployCertificateRecordRetryOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployCertificateRecordRetryOperation)(nil)).Elem()
}

func (o DeployCertificateRecordRetryOperationMapOutput) ToDeployCertificateRecordRetryOperationMapOutput() DeployCertificateRecordRetryOperationMapOutput {
	return o
}

func (o DeployCertificateRecordRetryOperationMapOutput) ToDeployCertificateRecordRetryOperationMapOutputWithContext(ctx context.Context) DeployCertificateRecordRetryOperationMapOutput {
	return o
}

func (o DeployCertificateRecordRetryOperationMapOutput) MapIndex(k pulumi.StringInput) DeployCertificateRecordRetryOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeployCertificateRecordRetryOperation {
		return vs[0].(map[string]*DeployCertificateRecordRetryOperation)[vs[1].(string)]
	}).(DeployCertificateRecordRetryOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeployCertificateRecordRetryOperationInput)(nil)).Elem(), &DeployCertificateRecordRetryOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployCertificateRecordRetryOperationArrayInput)(nil)).Elem(), DeployCertificateRecordRetryOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployCertificateRecordRetryOperationMapInput)(nil)).Elem(), DeployCertificateRecordRetryOperationMap{})
	pulumi.RegisterOutputType(DeployCertificateRecordRetryOperationOutput{})
	pulumi.RegisterOutputType(DeployCertificateRecordRetryOperationArrayOutput{})
	pulumi.RegisterOutputType(DeployCertificateRecordRetryOperationMapOutput{})
}
