// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssl checkCertificateChain
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewCheckCertificateChainOperation(ctx, "checkCertificateChain", &Ssl.CheckCertificateChainOperationArgs{
//				CertificateChain: pulumi.String("-----BEGIN CERTIFICATE--·····---END CERTIFICATE-----"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssl check_certificate_chain can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssl/checkCertificateChainOperation:CheckCertificateChainOperation check_certificate_chain check_certificate_chain_id
//
// ```
type CheckCertificateChainOperation struct {
	pulumi.CustomResourceState

	// The certificate chain to check.
	CertificateChain pulumi.StringOutput `pulumi:"certificateChain"`
}

// NewCheckCertificateChainOperation registers a new resource with the given unique name, arguments, and options.
func NewCheckCertificateChainOperation(ctx *pulumi.Context,
	name string, args *CheckCertificateChainOperationArgs, opts ...pulumi.ResourceOption) (*CheckCertificateChainOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateChain == nil {
		return nil, errors.New("invalid value for required argument 'CertificateChain'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CheckCertificateChainOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/checkCertificateChainOperation:CheckCertificateChainOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCheckCertificateChainOperation gets an existing CheckCertificateChainOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCheckCertificateChainOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CheckCertificateChainOperationState, opts ...pulumi.ResourceOption) (*CheckCertificateChainOperation, error) {
	var resource CheckCertificateChainOperation
	err := ctx.ReadResource("tencentcloud:Ssl/checkCertificateChainOperation:CheckCertificateChainOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CheckCertificateChainOperation resources.
type checkCertificateChainOperationState struct {
	// The certificate chain to check.
	CertificateChain *string `pulumi:"certificateChain"`
}

type CheckCertificateChainOperationState struct {
	// The certificate chain to check.
	CertificateChain pulumi.StringPtrInput
}

func (CheckCertificateChainOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*checkCertificateChainOperationState)(nil)).Elem()
}

type checkCertificateChainOperationArgs struct {
	// The certificate chain to check.
	CertificateChain string `pulumi:"certificateChain"`
}

// The set of arguments for constructing a CheckCertificateChainOperation resource.
type CheckCertificateChainOperationArgs struct {
	// The certificate chain to check.
	CertificateChain pulumi.StringInput
}

func (CheckCertificateChainOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*checkCertificateChainOperationArgs)(nil)).Elem()
}

type CheckCertificateChainOperationInput interface {
	pulumi.Input

	ToCheckCertificateChainOperationOutput() CheckCertificateChainOperationOutput
	ToCheckCertificateChainOperationOutputWithContext(ctx context.Context) CheckCertificateChainOperationOutput
}

func (*CheckCertificateChainOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**CheckCertificateChainOperation)(nil)).Elem()
}

func (i *CheckCertificateChainOperation) ToCheckCertificateChainOperationOutput() CheckCertificateChainOperationOutput {
	return i.ToCheckCertificateChainOperationOutputWithContext(context.Background())
}

func (i *CheckCertificateChainOperation) ToCheckCertificateChainOperationOutputWithContext(ctx context.Context) CheckCertificateChainOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckCertificateChainOperationOutput)
}

// CheckCertificateChainOperationArrayInput is an input type that accepts CheckCertificateChainOperationArray and CheckCertificateChainOperationArrayOutput values.
// You can construct a concrete instance of `CheckCertificateChainOperationArrayInput` via:
//
//	CheckCertificateChainOperationArray{ CheckCertificateChainOperationArgs{...} }
type CheckCertificateChainOperationArrayInput interface {
	pulumi.Input

	ToCheckCertificateChainOperationArrayOutput() CheckCertificateChainOperationArrayOutput
	ToCheckCertificateChainOperationArrayOutputWithContext(context.Context) CheckCertificateChainOperationArrayOutput
}

type CheckCertificateChainOperationArray []CheckCertificateChainOperationInput

func (CheckCertificateChainOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CheckCertificateChainOperation)(nil)).Elem()
}

func (i CheckCertificateChainOperationArray) ToCheckCertificateChainOperationArrayOutput() CheckCertificateChainOperationArrayOutput {
	return i.ToCheckCertificateChainOperationArrayOutputWithContext(context.Background())
}

func (i CheckCertificateChainOperationArray) ToCheckCertificateChainOperationArrayOutputWithContext(ctx context.Context) CheckCertificateChainOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckCertificateChainOperationArrayOutput)
}

// CheckCertificateChainOperationMapInput is an input type that accepts CheckCertificateChainOperationMap and CheckCertificateChainOperationMapOutput values.
// You can construct a concrete instance of `CheckCertificateChainOperationMapInput` via:
//
//	CheckCertificateChainOperationMap{ "key": CheckCertificateChainOperationArgs{...} }
type CheckCertificateChainOperationMapInput interface {
	pulumi.Input

	ToCheckCertificateChainOperationMapOutput() CheckCertificateChainOperationMapOutput
	ToCheckCertificateChainOperationMapOutputWithContext(context.Context) CheckCertificateChainOperationMapOutput
}

type CheckCertificateChainOperationMap map[string]CheckCertificateChainOperationInput

func (CheckCertificateChainOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CheckCertificateChainOperation)(nil)).Elem()
}

func (i CheckCertificateChainOperationMap) ToCheckCertificateChainOperationMapOutput() CheckCertificateChainOperationMapOutput {
	return i.ToCheckCertificateChainOperationMapOutputWithContext(context.Background())
}

func (i CheckCertificateChainOperationMap) ToCheckCertificateChainOperationMapOutputWithContext(ctx context.Context) CheckCertificateChainOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckCertificateChainOperationMapOutput)
}

type CheckCertificateChainOperationOutput struct{ *pulumi.OutputState }

func (CheckCertificateChainOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CheckCertificateChainOperation)(nil)).Elem()
}

func (o CheckCertificateChainOperationOutput) ToCheckCertificateChainOperationOutput() CheckCertificateChainOperationOutput {
	return o
}

func (o CheckCertificateChainOperationOutput) ToCheckCertificateChainOperationOutputWithContext(ctx context.Context) CheckCertificateChainOperationOutput {
	return o
}

// The certificate chain to check.
func (o CheckCertificateChainOperationOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v *CheckCertificateChainOperation) pulumi.StringOutput { return v.CertificateChain }).(pulumi.StringOutput)
}

type CheckCertificateChainOperationArrayOutput struct{ *pulumi.OutputState }

func (CheckCertificateChainOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CheckCertificateChainOperation)(nil)).Elem()
}

func (o CheckCertificateChainOperationArrayOutput) ToCheckCertificateChainOperationArrayOutput() CheckCertificateChainOperationArrayOutput {
	return o
}

func (o CheckCertificateChainOperationArrayOutput) ToCheckCertificateChainOperationArrayOutputWithContext(ctx context.Context) CheckCertificateChainOperationArrayOutput {
	return o
}

func (o CheckCertificateChainOperationArrayOutput) Index(i pulumi.IntInput) CheckCertificateChainOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CheckCertificateChainOperation {
		return vs[0].([]*CheckCertificateChainOperation)[vs[1].(int)]
	}).(CheckCertificateChainOperationOutput)
}

type CheckCertificateChainOperationMapOutput struct{ *pulumi.OutputState }

func (CheckCertificateChainOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CheckCertificateChainOperation)(nil)).Elem()
}

func (o CheckCertificateChainOperationMapOutput) ToCheckCertificateChainOperationMapOutput() CheckCertificateChainOperationMapOutput {
	return o
}

func (o CheckCertificateChainOperationMapOutput) ToCheckCertificateChainOperationMapOutputWithContext(ctx context.Context) CheckCertificateChainOperationMapOutput {
	return o
}

func (o CheckCertificateChainOperationMapOutput) MapIndex(k pulumi.StringInput) CheckCertificateChainOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CheckCertificateChainOperation {
		return vs[0].(map[string]*CheckCertificateChainOperation)[vs[1].(string)]
	}).(CheckCertificateChainOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CheckCertificateChainOperationInput)(nil)).Elem(), &CheckCertificateChainOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CheckCertificateChainOperationArrayInput)(nil)).Elem(), CheckCertificateChainOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CheckCertificateChainOperationMapInput)(nil)).Elem(), CheckCertificateChainOperationMap{})
	pulumi.RegisterOutputType(CheckCertificateChainOperationOutput{})
	pulumi.RegisterOutputType(CheckCertificateChainOperationArrayOutput{})
	pulumi.RegisterOutputType(CheckCertificateChainOperationMapOutput{})
}
