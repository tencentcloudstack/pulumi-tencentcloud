// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a ssl Check Certificate Domain Verification
//
// > **NOTE:** You can customize the maximum timeout time by setting parameter `timeouts`, which defaults to 15 minutes.
//
// ## Example Usage
//
// ### Check certificate domain
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewCheckCertificateDomainVerificationOperation(ctx, "example", &Ssl.CheckCertificateDomainVerificationOperationArgs{
//				CertificateId: pulumi.String("6BE701Jx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ### Check certificate domain and set the maximum timeout period
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewCheckCertificateDomainVerificationOperation(ctx, "example", &Ssl.CheckCertificateDomainVerificationOperationArgs{
//				CertificateId: pulumi.String("6BE701Jx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type CheckCertificateDomainVerificationOperation struct {
	pulumi.CustomResourceState

	// The certificate ID.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// Domain name verification results.
	VerificationResults CheckCertificateDomainVerificationOperationVerificationResultArrayOutput `pulumi:"verificationResults"`
}

// NewCheckCertificateDomainVerificationOperation registers a new resource with the given unique name, arguments, and options.
func NewCheckCertificateDomainVerificationOperation(ctx *pulumi.Context,
	name string, args *CheckCertificateDomainVerificationOperationArgs, opts ...pulumi.ResourceOption) (*CheckCertificateDomainVerificationOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateId == nil {
		return nil, errors.New("invalid value for required argument 'CertificateId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CheckCertificateDomainVerificationOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/checkCertificateDomainVerificationOperation:CheckCertificateDomainVerificationOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCheckCertificateDomainVerificationOperation gets an existing CheckCertificateDomainVerificationOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCheckCertificateDomainVerificationOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CheckCertificateDomainVerificationOperationState, opts ...pulumi.ResourceOption) (*CheckCertificateDomainVerificationOperation, error) {
	var resource CheckCertificateDomainVerificationOperation
	err := ctx.ReadResource("tencentcloud:Ssl/checkCertificateDomainVerificationOperation:CheckCertificateDomainVerificationOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CheckCertificateDomainVerificationOperation resources.
type checkCertificateDomainVerificationOperationState struct {
	// The certificate ID.
	CertificateId *string `pulumi:"certificateId"`
	// Domain name verification results.
	VerificationResults []CheckCertificateDomainVerificationOperationVerificationResult `pulumi:"verificationResults"`
}

type CheckCertificateDomainVerificationOperationState struct {
	// The certificate ID.
	CertificateId pulumi.StringPtrInput
	// Domain name verification results.
	VerificationResults CheckCertificateDomainVerificationOperationVerificationResultArrayInput
}

func (CheckCertificateDomainVerificationOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*checkCertificateDomainVerificationOperationState)(nil)).Elem()
}

type checkCertificateDomainVerificationOperationArgs struct {
	// The certificate ID.
	CertificateId string `pulumi:"certificateId"`
}

// The set of arguments for constructing a CheckCertificateDomainVerificationOperation resource.
type CheckCertificateDomainVerificationOperationArgs struct {
	// The certificate ID.
	CertificateId pulumi.StringInput
}

func (CheckCertificateDomainVerificationOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*checkCertificateDomainVerificationOperationArgs)(nil)).Elem()
}

type CheckCertificateDomainVerificationOperationInput interface {
	pulumi.Input

	ToCheckCertificateDomainVerificationOperationOutput() CheckCertificateDomainVerificationOperationOutput
	ToCheckCertificateDomainVerificationOperationOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationOutput
}

func (*CheckCertificateDomainVerificationOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**CheckCertificateDomainVerificationOperation)(nil)).Elem()
}

func (i *CheckCertificateDomainVerificationOperation) ToCheckCertificateDomainVerificationOperationOutput() CheckCertificateDomainVerificationOperationOutput {
	return i.ToCheckCertificateDomainVerificationOperationOutputWithContext(context.Background())
}

func (i *CheckCertificateDomainVerificationOperation) ToCheckCertificateDomainVerificationOperationOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckCertificateDomainVerificationOperationOutput)
}

// CheckCertificateDomainVerificationOperationArrayInput is an input type that accepts CheckCertificateDomainVerificationOperationArray and CheckCertificateDomainVerificationOperationArrayOutput values.
// You can construct a concrete instance of `CheckCertificateDomainVerificationOperationArrayInput` via:
//
//	CheckCertificateDomainVerificationOperationArray{ CheckCertificateDomainVerificationOperationArgs{...} }
type CheckCertificateDomainVerificationOperationArrayInput interface {
	pulumi.Input

	ToCheckCertificateDomainVerificationOperationArrayOutput() CheckCertificateDomainVerificationOperationArrayOutput
	ToCheckCertificateDomainVerificationOperationArrayOutputWithContext(context.Context) CheckCertificateDomainVerificationOperationArrayOutput
}

type CheckCertificateDomainVerificationOperationArray []CheckCertificateDomainVerificationOperationInput

func (CheckCertificateDomainVerificationOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CheckCertificateDomainVerificationOperation)(nil)).Elem()
}

func (i CheckCertificateDomainVerificationOperationArray) ToCheckCertificateDomainVerificationOperationArrayOutput() CheckCertificateDomainVerificationOperationArrayOutput {
	return i.ToCheckCertificateDomainVerificationOperationArrayOutputWithContext(context.Background())
}

func (i CheckCertificateDomainVerificationOperationArray) ToCheckCertificateDomainVerificationOperationArrayOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckCertificateDomainVerificationOperationArrayOutput)
}

// CheckCertificateDomainVerificationOperationMapInput is an input type that accepts CheckCertificateDomainVerificationOperationMap and CheckCertificateDomainVerificationOperationMapOutput values.
// You can construct a concrete instance of `CheckCertificateDomainVerificationOperationMapInput` via:
//
//	CheckCertificateDomainVerificationOperationMap{ "key": CheckCertificateDomainVerificationOperationArgs{...} }
type CheckCertificateDomainVerificationOperationMapInput interface {
	pulumi.Input

	ToCheckCertificateDomainVerificationOperationMapOutput() CheckCertificateDomainVerificationOperationMapOutput
	ToCheckCertificateDomainVerificationOperationMapOutputWithContext(context.Context) CheckCertificateDomainVerificationOperationMapOutput
}

type CheckCertificateDomainVerificationOperationMap map[string]CheckCertificateDomainVerificationOperationInput

func (CheckCertificateDomainVerificationOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CheckCertificateDomainVerificationOperation)(nil)).Elem()
}

func (i CheckCertificateDomainVerificationOperationMap) ToCheckCertificateDomainVerificationOperationMapOutput() CheckCertificateDomainVerificationOperationMapOutput {
	return i.ToCheckCertificateDomainVerificationOperationMapOutputWithContext(context.Background())
}

func (i CheckCertificateDomainVerificationOperationMap) ToCheckCertificateDomainVerificationOperationMapOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckCertificateDomainVerificationOperationMapOutput)
}

type CheckCertificateDomainVerificationOperationOutput struct{ *pulumi.OutputState }

func (CheckCertificateDomainVerificationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CheckCertificateDomainVerificationOperation)(nil)).Elem()
}

func (o CheckCertificateDomainVerificationOperationOutput) ToCheckCertificateDomainVerificationOperationOutput() CheckCertificateDomainVerificationOperationOutput {
	return o
}

func (o CheckCertificateDomainVerificationOperationOutput) ToCheckCertificateDomainVerificationOperationOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationOutput {
	return o
}

// The certificate ID.
func (o CheckCertificateDomainVerificationOperationOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *CheckCertificateDomainVerificationOperation) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// Domain name verification results.
func (o CheckCertificateDomainVerificationOperationOutput) VerificationResults() CheckCertificateDomainVerificationOperationVerificationResultArrayOutput {
	return o.ApplyT(func(v *CheckCertificateDomainVerificationOperation) CheckCertificateDomainVerificationOperationVerificationResultArrayOutput {
		return v.VerificationResults
	}).(CheckCertificateDomainVerificationOperationVerificationResultArrayOutput)
}

type CheckCertificateDomainVerificationOperationArrayOutput struct{ *pulumi.OutputState }

func (CheckCertificateDomainVerificationOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CheckCertificateDomainVerificationOperation)(nil)).Elem()
}

func (o CheckCertificateDomainVerificationOperationArrayOutput) ToCheckCertificateDomainVerificationOperationArrayOutput() CheckCertificateDomainVerificationOperationArrayOutput {
	return o
}

func (o CheckCertificateDomainVerificationOperationArrayOutput) ToCheckCertificateDomainVerificationOperationArrayOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationArrayOutput {
	return o
}

func (o CheckCertificateDomainVerificationOperationArrayOutput) Index(i pulumi.IntInput) CheckCertificateDomainVerificationOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CheckCertificateDomainVerificationOperation {
		return vs[0].([]*CheckCertificateDomainVerificationOperation)[vs[1].(int)]
	}).(CheckCertificateDomainVerificationOperationOutput)
}

type CheckCertificateDomainVerificationOperationMapOutput struct{ *pulumi.OutputState }

func (CheckCertificateDomainVerificationOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CheckCertificateDomainVerificationOperation)(nil)).Elem()
}

func (o CheckCertificateDomainVerificationOperationMapOutput) ToCheckCertificateDomainVerificationOperationMapOutput() CheckCertificateDomainVerificationOperationMapOutput {
	return o
}

func (o CheckCertificateDomainVerificationOperationMapOutput) ToCheckCertificateDomainVerificationOperationMapOutputWithContext(ctx context.Context) CheckCertificateDomainVerificationOperationMapOutput {
	return o
}

func (o CheckCertificateDomainVerificationOperationMapOutput) MapIndex(k pulumi.StringInput) CheckCertificateDomainVerificationOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CheckCertificateDomainVerificationOperation {
		return vs[0].(map[string]*CheckCertificateDomainVerificationOperation)[vs[1].(string)]
	}).(CheckCertificateDomainVerificationOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CheckCertificateDomainVerificationOperationInput)(nil)).Elem(), &CheckCertificateDomainVerificationOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CheckCertificateDomainVerificationOperationArrayInput)(nil)).Elem(), CheckCertificateDomainVerificationOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CheckCertificateDomainVerificationOperationMapInput)(nil)).Elem(), CheckCertificateDomainVerificationOperationMap{})
	pulumi.RegisterOutputType(CheckCertificateDomainVerificationOperationOutput{})
	pulumi.RegisterOutputType(CheckCertificateDomainVerificationOperationArrayOutput{})
	pulumi.RegisterOutputType(CheckCertificateDomainVerificationOperationMapOutput{})
}
