// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of ssl describeManagers
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.GetDescribeManagers(ctx, &ssl.GetDescribeManagersArgs{
//				CompanyId: 11772,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDescribeManagers(ctx *pulumi.Context, args *GetDescribeManagersArgs, opts ...pulumi.InvokeOption) (*GetDescribeManagersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDescribeManagersResult
	err := ctx.Invoke("tencentcloud:Ssl/getDescribeManagers:getDescribeManagers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDescribeManagers.
type GetDescribeManagersArgs struct {
	// Company ID.
	CompanyId int `pulumi:"companyId"`
	// Vague query manager email (will be abandoned), please use Searchkey.
	ManagerMail *string `pulumi:"managerMail"`
	// Manager&amp;#39;s name (will be abandoned), please use Searchkey.
	ManagerName *string `pulumi:"managerName"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Manager&amp;#39;s surname/Manager name/mailbox/department precise matching.
	SearchKey *string `pulumi:"searchKey"`
	// Filter according to the status of the manager, and the value is available&amp;#39;None&amp;#39; Unable to submit review&amp;#39;Audit&amp;#39;, Asian Credit Review&amp;#39;Caaudit&amp;#39; CA review&amp;#39;OK&amp;#39; has been reviewed&amp;#39;Invalid&amp;#39; review failed&amp;#39;Expiring&amp;#39; is about to expire&amp;#39;Expired&amp;#39; expired.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getDescribeManagers.
type GetDescribeManagersResult struct {
	CompanyId int `pulumi:"companyId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Manager mailbox.
	ManagerMail *string `pulumi:"managerMail"`
	ManagerName *string `pulumi:"managerName"`
	// Company Manager List.
	Managers         []GetDescribeManagersManager `pulumi:"managers"`
	ResultOutputFile *string                      `pulumi:"resultOutputFile"`
	SearchKey        *string                      `pulumi:"searchKey"`
	// Status: Audit: OK during the review: review passed inValid: expired expiRing: is about to expire Expired: expired.
	Status *string `pulumi:"status"`
}

func GetDescribeManagersOutput(ctx *pulumi.Context, args GetDescribeManagersOutputArgs, opts ...pulumi.InvokeOption) GetDescribeManagersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDescribeManagersResult, error) {
			args := v.(GetDescribeManagersArgs)
			r, err := GetDescribeManagers(ctx, &args, opts...)
			var s GetDescribeManagersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDescribeManagersResultOutput)
}

// A collection of arguments for invoking getDescribeManagers.
type GetDescribeManagersOutputArgs struct {
	// Company ID.
	CompanyId pulumi.IntInput `pulumi:"companyId"`
	// Vague query manager email (will be abandoned), please use Searchkey.
	ManagerMail pulumi.StringPtrInput `pulumi:"managerMail"`
	// Manager&amp;#39;s name (will be abandoned), please use Searchkey.
	ManagerName pulumi.StringPtrInput `pulumi:"managerName"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Manager&amp;#39;s surname/Manager name/mailbox/department precise matching.
	SearchKey pulumi.StringPtrInput `pulumi:"searchKey"`
	// Filter according to the status of the manager, and the value is available&amp;#39;None&amp;#39; Unable to submit review&amp;#39;Audit&amp;#39;, Asian Credit Review&amp;#39;Caaudit&amp;#39; CA review&amp;#39;OK&amp;#39; has been reviewed&amp;#39;Invalid&amp;#39; review failed&amp;#39;Expiring&amp;#39; is about to expire&amp;#39;Expired&amp;#39; expired.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetDescribeManagersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeManagersArgs)(nil)).Elem()
}

// A collection of values returned by getDescribeManagers.
type GetDescribeManagersResultOutput struct{ *pulumi.OutputState }

func (GetDescribeManagersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeManagersResult)(nil)).Elem()
}

func (o GetDescribeManagersResultOutput) ToGetDescribeManagersResultOutput() GetDescribeManagersResultOutput {
	return o
}

func (o GetDescribeManagersResultOutput) ToGetDescribeManagersResultOutputWithContext(ctx context.Context) GetDescribeManagersResultOutput {
	return o
}

func (o GetDescribeManagersResultOutput) CompanyId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) int { return v.CompanyId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDescribeManagersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Manager mailbox.
func (o GetDescribeManagersResultOutput) ManagerMail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) *string { return v.ManagerMail }).(pulumi.StringPtrOutput)
}

func (o GetDescribeManagersResultOutput) ManagerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) *string { return v.ManagerName }).(pulumi.StringPtrOutput)
}

// Company Manager List.
func (o GetDescribeManagersResultOutput) Managers() GetDescribeManagersManagerArrayOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) []GetDescribeManagersManager { return v.Managers }).(GetDescribeManagersManagerArrayOutput)
}

func (o GetDescribeManagersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDescribeManagersResultOutput) SearchKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) *string { return v.SearchKey }).(pulumi.StringPtrOutput)
}

// Status: Audit: OK during the review: review passed inValid: expired expiRing: is about to expire Expired: expired.
func (o GetDescribeManagersResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeManagersResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDescribeManagersResultOutput{})
}
