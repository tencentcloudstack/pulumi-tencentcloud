// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssl revokeCertificate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewRevokeCertificateOperation(ctx, "revokeCertificate", &Ssl.RevokeCertificateOperationArgs{
//				CertificateId: pulumi.String("7zUGkVab"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssl revoke_certificate can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssl/revokeCertificateOperation:RevokeCertificateOperation revoke_certificate revoke_certificate_id
//
// ```
type RevokeCertificateOperation struct {
	pulumi.CustomResourceState

	// Certificate ID.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// Reasons for revoking certificate.
	Reason pulumi.StringPtrOutput `pulumi:"reason"`
}

// NewRevokeCertificateOperation registers a new resource with the given unique name, arguments, and options.
func NewRevokeCertificateOperation(ctx *pulumi.Context,
	name string, args *RevokeCertificateOperationArgs, opts ...pulumi.ResourceOption) (*RevokeCertificateOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateId == nil {
		return nil, errors.New("invalid value for required argument 'CertificateId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RevokeCertificateOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/revokeCertificateOperation:RevokeCertificateOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRevokeCertificateOperation gets an existing RevokeCertificateOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRevokeCertificateOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RevokeCertificateOperationState, opts ...pulumi.ResourceOption) (*RevokeCertificateOperation, error) {
	var resource RevokeCertificateOperation
	err := ctx.ReadResource("tencentcloud:Ssl/revokeCertificateOperation:RevokeCertificateOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RevokeCertificateOperation resources.
type revokeCertificateOperationState struct {
	// Certificate ID.
	CertificateId *string `pulumi:"certificateId"`
	// Reasons for revoking certificate.
	Reason *string `pulumi:"reason"`
}

type RevokeCertificateOperationState struct {
	// Certificate ID.
	CertificateId pulumi.StringPtrInput
	// Reasons for revoking certificate.
	Reason pulumi.StringPtrInput
}

func (RevokeCertificateOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*revokeCertificateOperationState)(nil)).Elem()
}

type revokeCertificateOperationArgs struct {
	// Certificate ID.
	CertificateId string `pulumi:"certificateId"`
	// Reasons for revoking certificate.
	Reason *string `pulumi:"reason"`
}

// The set of arguments for constructing a RevokeCertificateOperation resource.
type RevokeCertificateOperationArgs struct {
	// Certificate ID.
	CertificateId pulumi.StringInput
	// Reasons for revoking certificate.
	Reason pulumi.StringPtrInput
}

func (RevokeCertificateOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*revokeCertificateOperationArgs)(nil)).Elem()
}

type RevokeCertificateOperationInput interface {
	pulumi.Input

	ToRevokeCertificateOperationOutput() RevokeCertificateOperationOutput
	ToRevokeCertificateOperationOutputWithContext(ctx context.Context) RevokeCertificateOperationOutput
}

func (*RevokeCertificateOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**RevokeCertificateOperation)(nil)).Elem()
}

func (i *RevokeCertificateOperation) ToRevokeCertificateOperationOutput() RevokeCertificateOperationOutput {
	return i.ToRevokeCertificateOperationOutputWithContext(context.Background())
}

func (i *RevokeCertificateOperation) ToRevokeCertificateOperationOutputWithContext(ctx context.Context) RevokeCertificateOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevokeCertificateOperationOutput)
}

// RevokeCertificateOperationArrayInput is an input type that accepts RevokeCertificateOperationArray and RevokeCertificateOperationArrayOutput values.
// You can construct a concrete instance of `RevokeCertificateOperationArrayInput` via:
//
//	RevokeCertificateOperationArray{ RevokeCertificateOperationArgs{...} }
type RevokeCertificateOperationArrayInput interface {
	pulumi.Input

	ToRevokeCertificateOperationArrayOutput() RevokeCertificateOperationArrayOutput
	ToRevokeCertificateOperationArrayOutputWithContext(context.Context) RevokeCertificateOperationArrayOutput
}

type RevokeCertificateOperationArray []RevokeCertificateOperationInput

func (RevokeCertificateOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RevokeCertificateOperation)(nil)).Elem()
}

func (i RevokeCertificateOperationArray) ToRevokeCertificateOperationArrayOutput() RevokeCertificateOperationArrayOutput {
	return i.ToRevokeCertificateOperationArrayOutputWithContext(context.Background())
}

func (i RevokeCertificateOperationArray) ToRevokeCertificateOperationArrayOutputWithContext(ctx context.Context) RevokeCertificateOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevokeCertificateOperationArrayOutput)
}

// RevokeCertificateOperationMapInput is an input type that accepts RevokeCertificateOperationMap and RevokeCertificateOperationMapOutput values.
// You can construct a concrete instance of `RevokeCertificateOperationMapInput` via:
//
//	RevokeCertificateOperationMap{ "key": RevokeCertificateOperationArgs{...} }
type RevokeCertificateOperationMapInput interface {
	pulumi.Input

	ToRevokeCertificateOperationMapOutput() RevokeCertificateOperationMapOutput
	ToRevokeCertificateOperationMapOutputWithContext(context.Context) RevokeCertificateOperationMapOutput
}

type RevokeCertificateOperationMap map[string]RevokeCertificateOperationInput

func (RevokeCertificateOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RevokeCertificateOperation)(nil)).Elem()
}

func (i RevokeCertificateOperationMap) ToRevokeCertificateOperationMapOutput() RevokeCertificateOperationMapOutput {
	return i.ToRevokeCertificateOperationMapOutputWithContext(context.Background())
}

func (i RevokeCertificateOperationMap) ToRevokeCertificateOperationMapOutputWithContext(ctx context.Context) RevokeCertificateOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevokeCertificateOperationMapOutput)
}

type RevokeCertificateOperationOutput struct{ *pulumi.OutputState }

func (RevokeCertificateOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevokeCertificateOperation)(nil)).Elem()
}

func (o RevokeCertificateOperationOutput) ToRevokeCertificateOperationOutput() RevokeCertificateOperationOutput {
	return o
}

func (o RevokeCertificateOperationOutput) ToRevokeCertificateOperationOutputWithContext(ctx context.Context) RevokeCertificateOperationOutput {
	return o
}

// Certificate ID.
func (o RevokeCertificateOperationOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *RevokeCertificateOperation) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// Reasons for revoking certificate.
func (o RevokeCertificateOperationOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevokeCertificateOperation) pulumi.StringPtrOutput { return v.Reason }).(pulumi.StringPtrOutput)
}

type RevokeCertificateOperationArrayOutput struct{ *pulumi.OutputState }

func (RevokeCertificateOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RevokeCertificateOperation)(nil)).Elem()
}

func (o RevokeCertificateOperationArrayOutput) ToRevokeCertificateOperationArrayOutput() RevokeCertificateOperationArrayOutput {
	return o
}

func (o RevokeCertificateOperationArrayOutput) ToRevokeCertificateOperationArrayOutputWithContext(ctx context.Context) RevokeCertificateOperationArrayOutput {
	return o
}

func (o RevokeCertificateOperationArrayOutput) Index(i pulumi.IntInput) RevokeCertificateOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RevokeCertificateOperation {
		return vs[0].([]*RevokeCertificateOperation)[vs[1].(int)]
	}).(RevokeCertificateOperationOutput)
}

type RevokeCertificateOperationMapOutput struct{ *pulumi.OutputState }

func (RevokeCertificateOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RevokeCertificateOperation)(nil)).Elem()
}

func (o RevokeCertificateOperationMapOutput) ToRevokeCertificateOperationMapOutput() RevokeCertificateOperationMapOutput {
	return o
}

func (o RevokeCertificateOperationMapOutput) ToRevokeCertificateOperationMapOutputWithContext(ctx context.Context) RevokeCertificateOperationMapOutput {
	return o
}

func (o RevokeCertificateOperationMapOutput) MapIndex(k pulumi.StringInput) RevokeCertificateOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RevokeCertificateOperation {
		return vs[0].(map[string]*RevokeCertificateOperation)[vs[1].(string)]
	}).(RevokeCertificateOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RevokeCertificateOperationInput)(nil)).Elem(), &RevokeCertificateOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevokeCertificateOperationArrayInput)(nil)).Elem(), RevokeCertificateOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevokeCertificateOperationMapInput)(nil)).Elem(), RevokeCertificateOperationMap{})
	pulumi.RegisterOutputType(RevokeCertificateOperationOutput{})
	pulumi.RegisterOutputType(RevokeCertificateOperationArrayOutput{})
	pulumi.RegisterOutputType(RevokeCertificateOperationMapOutput{})
}
