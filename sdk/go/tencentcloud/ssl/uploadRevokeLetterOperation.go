// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssl uploadRevokeLetter
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/base64"
//	"io/ioutil"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssl"
//
// )
//
//	func filebase64OrPanic(path string) pulumi.StringPtrInput {
//		if fileData, err := ioutil.ReadFile(path); err == nil {
//			return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
//		} else {
//			panic(err.Error())
//		}
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssl.NewUploadRevokeLetterOperation(ctx, "uploadRevokeLetter", &Ssl.UploadRevokeLetterOperationArgs{
//				CertificateId: pulumi.String("8xRYdDlc"),
//				RevokeLetter:  filebase64OrPanic("./c.pdf"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssl upload_revoke_letter can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssl/uploadRevokeLetterOperation:UploadRevokeLetterOperation upload_revoke_letter upload_revoke_letter_id
//
// ```
type UploadRevokeLetterOperation struct {
	pulumi.CustomResourceState

	// Certificate ID.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// The format of the base64-encoded certificate confirmation letter file should be jpg, jpeg, png, or pdf, and the size should be between 1kb and 1.4M.
	RevokeLetter pulumi.StringOutput `pulumi:"revokeLetter"`
}

// NewUploadRevokeLetterOperation registers a new resource with the given unique name, arguments, and options.
func NewUploadRevokeLetterOperation(ctx *pulumi.Context,
	name string, args *UploadRevokeLetterOperationArgs, opts ...pulumi.ResourceOption) (*UploadRevokeLetterOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateId == nil {
		return nil, errors.New("invalid value for required argument 'CertificateId'")
	}
	if args.RevokeLetter == nil {
		return nil, errors.New("invalid value for required argument 'RevokeLetter'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource UploadRevokeLetterOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/uploadRevokeLetterOperation:UploadRevokeLetterOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUploadRevokeLetterOperation gets an existing UploadRevokeLetterOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUploadRevokeLetterOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UploadRevokeLetterOperationState, opts ...pulumi.ResourceOption) (*UploadRevokeLetterOperation, error) {
	var resource UploadRevokeLetterOperation
	err := ctx.ReadResource("tencentcloud:Ssl/uploadRevokeLetterOperation:UploadRevokeLetterOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UploadRevokeLetterOperation resources.
type uploadRevokeLetterOperationState struct {
	// Certificate ID.
	CertificateId *string `pulumi:"certificateId"`
	// The format of the base64-encoded certificate confirmation letter file should be jpg, jpeg, png, or pdf, and the size should be between 1kb and 1.4M.
	RevokeLetter *string `pulumi:"revokeLetter"`
}

type UploadRevokeLetterOperationState struct {
	// Certificate ID.
	CertificateId pulumi.StringPtrInput
	// The format of the base64-encoded certificate confirmation letter file should be jpg, jpeg, png, or pdf, and the size should be between 1kb and 1.4M.
	RevokeLetter pulumi.StringPtrInput
}

func (UploadRevokeLetterOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*uploadRevokeLetterOperationState)(nil)).Elem()
}

type uploadRevokeLetterOperationArgs struct {
	// Certificate ID.
	CertificateId string `pulumi:"certificateId"`
	// The format of the base64-encoded certificate confirmation letter file should be jpg, jpeg, png, or pdf, and the size should be between 1kb and 1.4M.
	RevokeLetter string `pulumi:"revokeLetter"`
}

// The set of arguments for constructing a UploadRevokeLetterOperation resource.
type UploadRevokeLetterOperationArgs struct {
	// Certificate ID.
	CertificateId pulumi.StringInput
	// The format of the base64-encoded certificate confirmation letter file should be jpg, jpeg, png, or pdf, and the size should be between 1kb and 1.4M.
	RevokeLetter pulumi.StringInput
}

func (UploadRevokeLetterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*uploadRevokeLetterOperationArgs)(nil)).Elem()
}

type UploadRevokeLetterOperationInput interface {
	pulumi.Input

	ToUploadRevokeLetterOperationOutput() UploadRevokeLetterOperationOutput
	ToUploadRevokeLetterOperationOutputWithContext(ctx context.Context) UploadRevokeLetterOperationOutput
}

func (*UploadRevokeLetterOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadRevokeLetterOperation)(nil)).Elem()
}

func (i *UploadRevokeLetterOperation) ToUploadRevokeLetterOperationOutput() UploadRevokeLetterOperationOutput {
	return i.ToUploadRevokeLetterOperationOutputWithContext(context.Background())
}

func (i *UploadRevokeLetterOperation) ToUploadRevokeLetterOperationOutputWithContext(ctx context.Context) UploadRevokeLetterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadRevokeLetterOperationOutput)
}

// UploadRevokeLetterOperationArrayInput is an input type that accepts UploadRevokeLetterOperationArray and UploadRevokeLetterOperationArrayOutput values.
// You can construct a concrete instance of `UploadRevokeLetterOperationArrayInput` via:
//
//	UploadRevokeLetterOperationArray{ UploadRevokeLetterOperationArgs{...} }
type UploadRevokeLetterOperationArrayInput interface {
	pulumi.Input

	ToUploadRevokeLetterOperationArrayOutput() UploadRevokeLetterOperationArrayOutput
	ToUploadRevokeLetterOperationArrayOutputWithContext(context.Context) UploadRevokeLetterOperationArrayOutput
}

type UploadRevokeLetterOperationArray []UploadRevokeLetterOperationInput

func (UploadRevokeLetterOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UploadRevokeLetterOperation)(nil)).Elem()
}

func (i UploadRevokeLetterOperationArray) ToUploadRevokeLetterOperationArrayOutput() UploadRevokeLetterOperationArrayOutput {
	return i.ToUploadRevokeLetterOperationArrayOutputWithContext(context.Background())
}

func (i UploadRevokeLetterOperationArray) ToUploadRevokeLetterOperationArrayOutputWithContext(ctx context.Context) UploadRevokeLetterOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadRevokeLetterOperationArrayOutput)
}

// UploadRevokeLetterOperationMapInput is an input type that accepts UploadRevokeLetterOperationMap and UploadRevokeLetterOperationMapOutput values.
// You can construct a concrete instance of `UploadRevokeLetterOperationMapInput` via:
//
//	UploadRevokeLetterOperationMap{ "key": UploadRevokeLetterOperationArgs{...} }
type UploadRevokeLetterOperationMapInput interface {
	pulumi.Input

	ToUploadRevokeLetterOperationMapOutput() UploadRevokeLetterOperationMapOutput
	ToUploadRevokeLetterOperationMapOutputWithContext(context.Context) UploadRevokeLetterOperationMapOutput
}

type UploadRevokeLetterOperationMap map[string]UploadRevokeLetterOperationInput

func (UploadRevokeLetterOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UploadRevokeLetterOperation)(nil)).Elem()
}

func (i UploadRevokeLetterOperationMap) ToUploadRevokeLetterOperationMapOutput() UploadRevokeLetterOperationMapOutput {
	return i.ToUploadRevokeLetterOperationMapOutputWithContext(context.Background())
}

func (i UploadRevokeLetterOperationMap) ToUploadRevokeLetterOperationMapOutputWithContext(ctx context.Context) UploadRevokeLetterOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadRevokeLetterOperationMapOutput)
}

type UploadRevokeLetterOperationOutput struct{ *pulumi.OutputState }

func (UploadRevokeLetterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadRevokeLetterOperation)(nil)).Elem()
}

func (o UploadRevokeLetterOperationOutput) ToUploadRevokeLetterOperationOutput() UploadRevokeLetterOperationOutput {
	return o
}

func (o UploadRevokeLetterOperationOutput) ToUploadRevokeLetterOperationOutputWithContext(ctx context.Context) UploadRevokeLetterOperationOutput {
	return o
}

// Certificate ID.
func (o UploadRevokeLetterOperationOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *UploadRevokeLetterOperation) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// The format of the base64-encoded certificate confirmation letter file should be jpg, jpeg, png, or pdf, and the size should be between 1kb and 1.4M.
func (o UploadRevokeLetterOperationOutput) RevokeLetter() pulumi.StringOutput {
	return o.ApplyT(func(v *UploadRevokeLetterOperation) pulumi.StringOutput { return v.RevokeLetter }).(pulumi.StringOutput)
}

type UploadRevokeLetterOperationArrayOutput struct{ *pulumi.OutputState }

func (UploadRevokeLetterOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UploadRevokeLetterOperation)(nil)).Elem()
}

func (o UploadRevokeLetterOperationArrayOutput) ToUploadRevokeLetterOperationArrayOutput() UploadRevokeLetterOperationArrayOutput {
	return o
}

func (o UploadRevokeLetterOperationArrayOutput) ToUploadRevokeLetterOperationArrayOutputWithContext(ctx context.Context) UploadRevokeLetterOperationArrayOutput {
	return o
}

func (o UploadRevokeLetterOperationArrayOutput) Index(i pulumi.IntInput) UploadRevokeLetterOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UploadRevokeLetterOperation {
		return vs[0].([]*UploadRevokeLetterOperation)[vs[1].(int)]
	}).(UploadRevokeLetterOperationOutput)
}

type UploadRevokeLetterOperationMapOutput struct{ *pulumi.OutputState }

func (UploadRevokeLetterOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UploadRevokeLetterOperation)(nil)).Elem()
}

func (o UploadRevokeLetterOperationMapOutput) ToUploadRevokeLetterOperationMapOutput() UploadRevokeLetterOperationMapOutput {
	return o
}

func (o UploadRevokeLetterOperationMapOutput) ToUploadRevokeLetterOperationMapOutputWithContext(ctx context.Context) UploadRevokeLetterOperationMapOutput {
	return o
}

func (o UploadRevokeLetterOperationMapOutput) MapIndex(k pulumi.StringInput) UploadRevokeLetterOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UploadRevokeLetterOperation {
		return vs[0].(map[string]*UploadRevokeLetterOperation)[vs[1].(string)]
	}).(UploadRevokeLetterOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UploadRevokeLetterOperationInput)(nil)).Elem(), &UploadRevokeLetterOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*UploadRevokeLetterOperationArrayInput)(nil)).Elem(), UploadRevokeLetterOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UploadRevokeLetterOperationMapInput)(nil)).Elem(), UploadRevokeLetterOperationMap{})
	pulumi.RegisterOutputType(UploadRevokeLetterOperationOutput{})
	pulumi.RegisterOutputType(UploadRevokeLetterOperationArrayOutput{})
	pulumi.RegisterOutputType(UploadRevokeLetterOperationMapOutput{})
}
