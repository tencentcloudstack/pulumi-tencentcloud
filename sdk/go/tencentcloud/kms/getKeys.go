// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of KMS key
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Kms.GetKeys(ctx, &kms.GetKeysArgs{
//				KeyState:       pulumi.IntRef(0),
//				KeyUsage:       pulumi.StringRef("ALL"),
//				Origin:         pulumi.StringRef("TENCENT_KMS"),
//				SearchKeyAlias: pulumi.StringRef("tf_example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKeys(ctx *pulumi.Context, args *GetKeysArgs, opts ...pulumi.InvokeOption) (*GetKeysResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetKeysResult
	err := ctx.Invoke("tencentcloud:Kms/getKeys:getKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeys.
type GetKeysArgs struct {
	// Filter by state of CMK. `0` - all CMKs are queried, `1` - only Enabled CMKs are queried, `2` - only Disabled CMKs are queried, `3` - only PendingDelete CMKs are queried, `4` - only PendingImport CMKs are queried, `5` - only Archived CMKs are queried.
	KeyState *int `pulumi:"keyState"`
	// Filter by usage of CMK. Available values include `ALL`, `ENCRYPT_DECRYPT`, `ASYMMETRIC_DECRYPT_RSA_2048`, `ASYMMETRIC_DECRYPT_SM2`, `ASYMMETRIC_SIGN_VERIFY_SM2`, `ASYMMETRIC_SIGN_VERIFY_RSA_2048`, `ASYMMETRIC_SIGN_VERIFY_ECC`. Default value is `ENCRYPT_DECRYPT`.
	KeyUsage *string `pulumi:"keyUsage"`
	// Order to sort the CMK create time. `0` - desc, `1` - asc. Default value is `0`.
	OrderType *int `pulumi:"orderType"`
	// Filter by origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user, `ALL` - all CMKs. Default value is `ALL`.
	Origin *string `pulumi:"origin"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Filter by role of the CMK creator. `0` - created by user, `1` - created by cloud product. Default value is `0`.
	Role *int `pulumi:"role"`
	// Words used to match the results, and the words can be: keyId and alias.
	SearchKeyAlias *string `pulumi:"searchKeyAlias"`
	// Tags to filter CMK.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getKeys.
type GetKeysResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of KMS keys.
	KeyLists []GetKeysKeyList `pulumi:"keyLists"`
	// State of CMK.
	KeyState *int `pulumi:"keyState"`
	// Usage of CMK.
	KeyUsage  *string `pulumi:"keyUsage"`
	OrderType *int    `pulumi:"orderType"`
	// Origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user.
	Origin           *string                `pulumi:"origin"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Role             *int                   `pulumi:"role"`
	SearchKeyAlias   *string                `pulumi:"searchKeyAlias"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func GetKeysOutput(ctx *pulumi.Context, args GetKeysOutputArgs, opts ...pulumi.InvokeOption) GetKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeysResult, error) {
			args := v.(GetKeysArgs)
			r, err := GetKeys(ctx, &args, opts...)
			var s GetKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeysResultOutput)
}

// A collection of arguments for invoking getKeys.
type GetKeysOutputArgs struct {
	// Filter by state of CMK. `0` - all CMKs are queried, `1` - only Enabled CMKs are queried, `2` - only Disabled CMKs are queried, `3` - only PendingDelete CMKs are queried, `4` - only PendingImport CMKs are queried, `5` - only Archived CMKs are queried.
	KeyState pulumi.IntPtrInput `pulumi:"keyState"`
	// Filter by usage of CMK. Available values include `ALL`, `ENCRYPT_DECRYPT`, `ASYMMETRIC_DECRYPT_RSA_2048`, `ASYMMETRIC_DECRYPT_SM2`, `ASYMMETRIC_SIGN_VERIFY_SM2`, `ASYMMETRIC_SIGN_VERIFY_RSA_2048`, `ASYMMETRIC_SIGN_VERIFY_ECC`. Default value is `ENCRYPT_DECRYPT`.
	KeyUsage pulumi.StringPtrInput `pulumi:"keyUsage"`
	// Order to sort the CMK create time. `0` - desc, `1` - asc. Default value is `0`.
	OrderType pulumi.IntPtrInput `pulumi:"orderType"`
	// Filter by origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user, `ALL` - all CMKs. Default value is `ALL`.
	Origin pulumi.StringPtrInput `pulumi:"origin"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Filter by role of the CMK creator. `0` - created by user, `1` - created by cloud product. Default value is `0`.
	Role pulumi.IntPtrInput `pulumi:"role"`
	// Words used to match the results, and the words can be: keyId and alias.
	SearchKeyAlias pulumi.StringPtrInput `pulumi:"searchKeyAlias"`
	// Tags to filter CMK.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysArgs)(nil)).Elem()
}

// A collection of values returned by getKeys.
type GetKeysResultOutput struct{ *pulumi.OutputState }

func (GetKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysResult)(nil)).Elem()
}

func (o GetKeysResultOutput) ToGetKeysResultOutput() GetKeysResultOutput {
	return o
}

func (o GetKeysResultOutput) ToGetKeysResultOutputWithContext(ctx context.Context) GetKeysResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of KMS keys.
func (o GetKeysResultOutput) KeyLists() GetKeysKeyListArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []GetKeysKeyList { return v.KeyLists }).(GetKeysKeyListArrayOutput)
}

// State of CMK.
func (o GetKeysResultOutput) KeyState() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *int { return v.KeyState }).(pulumi.IntPtrOutput)
}

// Usage of CMK.
func (o GetKeysResultOutput) KeyUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.KeyUsage }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) OrderType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *int { return v.OrderType }).(pulumi.IntPtrOutput)
}

// Origin of CMK. `TENCENT_KMS` - CMK created by KMS, `EXTERNAL` - CMK imported by user.
func (o GetKeysResultOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) Role() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *int { return v.Role }).(pulumi.IntPtrOutput)
}

func (o GetKeysResultOutput) SearchKeyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.SearchKeyAlias }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetKeysResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeysResultOutput{})
}
