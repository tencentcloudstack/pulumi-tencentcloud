// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of kms getParametersForImport
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Kms.GetGetParametersForImport(ctx, &kms.GetGetParametersForImportArgs{
//				KeyId:             "786aea8c-4aec-11ee-b601-525400281a45",
//				WrappingAlgorithm: "RSAES_OAEP_SHA_1",
//				WrappingKeySpec:   "RSA_2048",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGetParametersForImport(ctx *pulumi.Context, args *GetGetParametersForImportArgs, opts ...pulumi.InvokeOption) (*GetGetParametersForImportResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetGetParametersForImportResult
	err := ctx.Invoke("tencentcloud:Kms/getGetParametersForImport:getGetParametersForImport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGetParametersForImport.
type GetGetParametersForImportArgs struct {
	// CMK unique identifier.
	KeyId string `pulumi:"keyId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Specifies the algorithm for encrypting key material, currently supports RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256.
	WrappingAlgorithm string `pulumi:"wrappingAlgorithm"`
	// Specifies the type of encryption key material, currently only supports RSA_2048.
	WrappingKeySpec string `pulumi:"wrappingKeySpec"`
}

// A collection of values returned by getGetParametersForImport.
type GetGetParametersForImportResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The token required for importing key material is used as the parameter of ImportKeyMaterial.
	ImportToken string `pulumi:"importToken"`
	KeyId       string `pulumi:"keyId"`
	// The validity period of the exported token and public key cannot be imported after this period, and you need to call GetParametersForImport again to obtain it.
	ParametersValidTo int `pulumi:"parametersValidTo"`
	// Base64-encoded public key content.
	PublicKey         string  `pulumi:"publicKey"`
	ResultOutputFile  *string `pulumi:"resultOutputFile"`
	WrappingAlgorithm string  `pulumi:"wrappingAlgorithm"`
	WrappingKeySpec   string  `pulumi:"wrappingKeySpec"`
}

func GetGetParametersForImportOutput(ctx *pulumi.Context, args GetGetParametersForImportOutputArgs, opts ...pulumi.InvokeOption) GetGetParametersForImportResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGetParametersForImportResult, error) {
			args := v.(GetGetParametersForImportArgs)
			r, err := GetGetParametersForImport(ctx, &args, opts...)
			var s GetGetParametersForImportResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGetParametersForImportResultOutput)
}

// A collection of arguments for invoking getGetParametersForImport.
type GetGetParametersForImportOutputArgs struct {
	// CMK unique identifier.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Specifies the algorithm for encrypting key material, currently supports RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256.
	WrappingAlgorithm pulumi.StringInput `pulumi:"wrappingAlgorithm"`
	// Specifies the type of encryption key material, currently only supports RSA_2048.
	WrappingKeySpec pulumi.StringInput `pulumi:"wrappingKeySpec"`
}

func (GetGetParametersForImportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGetParametersForImportArgs)(nil)).Elem()
}

// A collection of values returned by getGetParametersForImport.
type GetGetParametersForImportResultOutput struct{ *pulumi.OutputState }

func (GetGetParametersForImportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGetParametersForImportResult)(nil)).Elem()
}

func (o GetGetParametersForImportResultOutput) ToGetGetParametersForImportResultOutput() GetGetParametersForImportResultOutput {
	return o
}

func (o GetGetParametersForImportResultOutput) ToGetGetParametersForImportResultOutputWithContext(ctx context.Context) GetGetParametersForImportResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetGetParametersForImportResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) string { return v.Id }).(pulumi.StringOutput)
}

// The token required for importing key material is used as the parameter of ImportKeyMaterial.
func (o GetGetParametersForImportResultOutput) ImportToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) string { return v.ImportToken }).(pulumi.StringOutput)
}

func (o GetGetParametersForImportResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The validity period of the exported token and public key cannot be imported after this period, and you need to call GetParametersForImport again to obtain it.
func (o GetGetParametersForImportResultOutput) ParametersValidTo() pulumi.IntOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) int { return v.ParametersValidTo }).(pulumi.IntOutput)
}

// Base64-encoded public key content.
func (o GetGetParametersForImportResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

func (o GetGetParametersForImportResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetGetParametersForImportResultOutput) WrappingAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) string { return v.WrappingAlgorithm }).(pulumi.StringOutput)
}

func (o GetGetParametersForImportResultOutput) WrappingKeySpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetGetParametersForImportResult) string { return v.WrappingKeySpec }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGetParametersForImportResultOutput{})
}
