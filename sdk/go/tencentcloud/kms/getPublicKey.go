// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of kms publicKey
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleKey, err := Kms.NewKey(ctx, "exampleKey", &Kms.KeyArgs{
//				Alias:                     pulumi.String("tf-example-kms-key"),
//				Description:               pulumi.String("example of kms key"),
//				KeyUsage:                  pulumi.String("ASYMMETRIC_DECRYPT_RSA_2048"),
//				IsEnabled:                 pulumi.Bool(true),
//				PendingDeleteWindowInDays: pulumi.Int(7),
//			})
//			if err != nil {
//				return err
//			}
//			_ = Kms.GetPublicKeyOutput(ctx, kms.GetPublicKeyOutputArgs{
//				KeyId: exampleKey.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetPublicKey(ctx *pulumi.Context, args *GetPublicKeyArgs, opts ...pulumi.InvokeOption) (*GetPublicKeyResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPublicKeyResult
	err := ctx.Invoke("tencentcloud:Kms/getPublicKey:getPublicKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPublicKey.
type GetPublicKeyArgs struct {
	// CMK unique identifier.
	KeyId string `pulumi:"keyId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getPublicKey.
type GetPublicKeyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	KeyId string `pulumi:"keyId"`
	// Base64-encoded public key content.
	PublicKey string `pulumi:"publicKey"`
	// Public key content in PEM format.
	PublicKeyPem     string  `pulumi:"publicKeyPem"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetPublicKeyOutput(ctx *pulumi.Context, args GetPublicKeyOutputArgs, opts ...pulumi.InvokeOption) GetPublicKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPublicKeyResult, error) {
			args := v.(GetPublicKeyArgs)
			r, err := GetPublicKey(ctx, &args, opts...)
			var s GetPublicKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPublicKeyResultOutput)
}

// A collection of arguments for invoking getPublicKey.
type GetPublicKeyOutputArgs struct {
	// CMK unique identifier.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetPublicKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicKeyArgs)(nil)).Elem()
}

// A collection of values returned by getPublicKey.
type GetPublicKeyResultOutput struct{ *pulumi.OutputState }

func (GetPublicKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicKeyResult)(nil)).Elem()
}

func (o GetPublicKeyResultOutput) ToGetPublicKeyResultOutput() GetPublicKeyResultOutput {
	return o
}

func (o GetPublicKeyResultOutput) ToGetPublicKeyResultOutputWithContext(ctx context.Context) GetPublicKeyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPublicKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPublicKeyResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicKeyResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// Base64-encoded public key content.
func (o GetPublicKeyResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicKeyResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// Public key content in PEM format.
func (o GetPublicKeyResultOutput) PublicKeyPem() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicKeyResult) string { return v.PublicKeyPem }).(pulumi.StringOutput)
}

func (o GetPublicKeyResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublicKeyResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPublicKeyResultOutput{})
}
