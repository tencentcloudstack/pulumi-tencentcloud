// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tcmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetQueueFilter struct {
	// Filter parameter name.
	Name *string `pulumi:"name"`
	// Value.
	Values []string `pulumi:"values"`
}

// GetQueueFilterInput is an input type that accepts GetQueueFilterArgs and GetQueueFilterOutput values.
// You can construct a concrete instance of `GetQueueFilterInput` via:
//
//	GetQueueFilterArgs{...}
type GetQueueFilterInput interface {
	pulumi.Input

	ToGetQueueFilterOutput() GetQueueFilterOutput
	ToGetQueueFilterOutputWithContext(context.Context) GetQueueFilterOutput
}

type GetQueueFilterArgs struct {
	// Filter parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetQueueFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueFilter)(nil)).Elem()
}

func (i GetQueueFilterArgs) ToGetQueueFilterOutput() GetQueueFilterOutput {
	return i.ToGetQueueFilterOutputWithContext(context.Background())
}

func (i GetQueueFilterArgs) ToGetQueueFilterOutputWithContext(ctx context.Context) GetQueueFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueFilterOutput)
}

// GetQueueFilterArrayInput is an input type that accepts GetQueueFilterArray and GetQueueFilterArrayOutput values.
// You can construct a concrete instance of `GetQueueFilterArrayInput` via:
//
//	GetQueueFilterArray{ GetQueueFilterArgs{...} }
type GetQueueFilterArrayInput interface {
	pulumi.Input

	ToGetQueueFilterArrayOutput() GetQueueFilterArrayOutput
	ToGetQueueFilterArrayOutputWithContext(context.Context) GetQueueFilterArrayOutput
}

type GetQueueFilterArray []GetQueueFilterInput

func (GetQueueFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueFilter)(nil)).Elem()
}

func (i GetQueueFilterArray) ToGetQueueFilterArrayOutput() GetQueueFilterArrayOutput {
	return i.ToGetQueueFilterArrayOutputWithContext(context.Background())
}

func (i GetQueueFilterArray) ToGetQueueFilterArrayOutputWithContext(ctx context.Context) GetQueueFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueFilterArrayOutput)
}

type GetQueueFilterOutput struct{ *pulumi.OutputState }

func (GetQueueFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueFilter)(nil)).Elem()
}

func (o GetQueueFilterOutput) ToGetQueueFilterOutput() GetQueueFilterOutput {
	return o
}

func (o GetQueueFilterOutput) ToGetQueueFilterOutputWithContext(ctx context.Context) GetQueueFilterOutput {
	return o
}

// Filter parameter name.
func (o GetQueueFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueueFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o GetQueueFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueueFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetQueueFilterArrayOutput struct{ *pulumi.OutputState }

func (GetQueueFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueFilter)(nil)).Elem()
}

func (o GetQueueFilterArrayOutput) ToGetQueueFilterArrayOutput() GetQueueFilterArrayOutput {
	return o
}

func (o GetQueueFilterArrayOutput) ToGetQueueFilterArrayOutputWithContext(ctx context.Context) GetQueueFilterArrayOutput {
	return o
}

func (o GetQueueFilterArrayOutput) Index(i pulumi.IntInput) GetQueueFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueFilter {
		return vs[0].([]GetQueueFilter)[vs[1].(int)]
	}).(GetQueueFilterOutput)
}

type GetQueueQueueList struct {
	// Total number of messages in `Active` status (i.e., unconsumed) in the queue, which is an approximate value.
	ActiveMsgNum int `pulumi:"activeMsgNum"`
	// Bandwidth limit.
	Bps int `pulumi:"bps"`
	// Queue creation time. A Unix timestamp accurate down to the millisecond will be returned.
	CreateTime int `pulumi:"createTime"`
	// Creator `Uin`.
	CreateUin int `pulumi:"createUin"`
	// Dead letter queue policy.
	DeadLetterPolicies []GetQueueQueueListDeadLetterPolicy `pulumi:"deadLetterPolicies"`
	// Dead letter queue.
	DeadLetterSources []GetQueueQueueListDeadLetterSource `pulumi:"deadLetterSources"`
	// Number of delayed messages.
	DelayMsgNum int `pulumi:"delayMsgNum"`
	// Total number of messages in `Inactive` status (i.e., being consumed) in the queue, which is an approximate value.
	InactiveMsgNum int `pulumi:"inactiveMsgNum"`
	// Time when the queue attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
	LastModifyTime int `pulumi:"lastModifyTime"`
	// Maximum retention period for inflight messages.
	MaxDelaySeconds int `pulumi:"maxDelaySeconds"`
	// Maximum size of heaped messages in bytes.
	MaxMsgBacklogSize int `pulumi:"maxMsgBacklogSize"`
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum int `pulumi:"maxMsgHeapNum"`
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize int `pulumi:"maxMsgSize"`
	// The maximum number of unacknowledged messages.
	MaxUnackedMsgNum int `pulumi:"maxUnackedMsgNum"`
	// Minimum unconsumed time of message in seconds.
	MinMsgTime int `pulumi:"minMsgTime"`
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds int `pulumi:"msgRetentionSeconds"`
	// Namespace name.
	NamespaceName string `pulumi:"namespaceName"`
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds int `pulumi:"pollingWaitSeconds"`
	// Limit of the number of messages produced per second. The value for consumed messages is 1.1 times this value.
	Qps int `pulumi:"qps"`
	// Message queue ID.
	QueueId string `pulumi:"queueId"`
	// Filter by QueueName.
	QueueName string `pulumi:"queueName"`
	// Queue storage space configured for message rewind. Value range: 1,024-10,240 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb int `pulumi:"retentionSizeInMb"`
	// Number of retained messages which have been deleted by the `DelMsg` API but are still within their rewind time range.
	RewindMsgNum int `pulumi:"rewindMsgNum"`
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds int `pulumi:"rewindSeconds"`
	// Cluster status. `0`: creating; `1`: normal; `2`: terminating; `3`: deleted; `4`: isolated; `5`: creation failed; `6`: deletion failed.
	Status int `pulumi:"status"`
	// Associated tag.
	Tags []GetQueueQueueListTag `pulumi:"tags"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
	// Message trace. true: enabled; false: not enabled.
	Trace bool `pulumi:"trace"`
	// 1: transaction queue; 0: general queue.
	Transaction bool `pulumi:"transaction"`
	// Transaction message policy.
	TransactionPolicies []GetQueueQueueListTransactionPolicy `pulumi:"transactionPolicies"`
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout int `pulumi:"visibilityTimeout"`
}

// GetQueueQueueListInput is an input type that accepts GetQueueQueueListArgs and GetQueueQueueListOutput values.
// You can construct a concrete instance of `GetQueueQueueListInput` via:
//
//	GetQueueQueueListArgs{...}
type GetQueueQueueListInput interface {
	pulumi.Input

	ToGetQueueQueueListOutput() GetQueueQueueListOutput
	ToGetQueueQueueListOutputWithContext(context.Context) GetQueueQueueListOutput
}

type GetQueueQueueListArgs struct {
	// Total number of messages in `Active` status (i.e., unconsumed) in the queue, which is an approximate value.
	ActiveMsgNum pulumi.IntInput `pulumi:"activeMsgNum"`
	// Bandwidth limit.
	Bps pulumi.IntInput `pulumi:"bps"`
	// Queue creation time. A Unix timestamp accurate down to the millisecond will be returned.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Creator `Uin`.
	CreateUin pulumi.IntInput `pulumi:"createUin"`
	// Dead letter queue policy.
	DeadLetterPolicies GetQueueQueueListDeadLetterPolicyArrayInput `pulumi:"deadLetterPolicies"`
	// Dead letter queue.
	DeadLetterSources GetQueueQueueListDeadLetterSourceArrayInput `pulumi:"deadLetterSources"`
	// Number of delayed messages.
	DelayMsgNum pulumi.IntInput `pulumi:"delayMsgNum"`
	// Total number of messages in `Inactive` status (i.e., being consumed) in the queue, which is an approximate value.
	InactiveMsgNum pulumi.IntInput `pulumi:"inactiveMsgNum"`
	// Time when the queue attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
	LastModifyTime pulumi.IntInput `pulumi:"lastModifyTime"`
	// Maximum retention period for inflight messages.
	MaxDelaySeconds pulumi.IntInput `pulumi:"maxDelaySeconds"`
	// Maximum size of heaped messages in bytes.
	MaxMsgBacklogSize pulumi.IntInput `pulumi:"maxMsgBacklogSize"`
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum pulumi.IntInput `pulumi:"maxMsgHeapNum"`
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize pulumi.IntInput `pulumi:"maxMsgSize"`
	// The maximum number of unacknowledged messages.
	MaxUnackedMsgNum pulumi.IntInput `pulumi:"maxUnackedMsgNum"`
	// Minimum unconsumed time of message in seconds.
	MinMsgTime pulumi.IntInput `pulumi:"minMsgTime"`
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds pulumi.IntInput `pulumi:"msgRetentionSeconds"`
	// Namespace name.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds pulumi.IntInput `pulumi:"pollingWaitSeconds"`
	// Limit of the number of messages produced per second. The value for consumed messages is 1.1 times this value.
	Qps pulumi.IntInput `pulumi:"qps"`
	// Message queue ID.
	QueueId pulumi.StringInput `pulumi:"queueId"`
	// Filter by QueueName.
	QueueName pulumi.StringInput `pulumi:"queueName"`
	// Queue storage space configured for message rewind. Value range: 1,024-10,240 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb pulumi.IntInput `pulumi:"retentionSizeInMb"`
	// Number of retained messages which have been deleted by the `DelMsg` API but are still within their rewind time range.
	RewindMsgNum pulumi.IntInput `pulumi:"rewindMsgNum"`
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds pulumi.IntInput `pulumi:"rewindSeconds"`
	// Cluster status. `0`: creating; `1`: normal; `2`: terminating; `3`: deleted; `4`: isolated; `5`: creation failed; `6`: deletion failed.
	Status pulumi.IntInput `pulumi:"status"`
	// Associated tag.
	Tags GetQueueQueueListTagArrayInput `pulumi:"tags"`
	// Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Message trace. true: enabled; false: not enabled.
	Trace pulumi.BoolInput `pulumi:"trace"`
	// 1: transaction queue; 0: general queue.
	Transaction pulumi.BoolInput `pulumi:"transaction"`
	// Transaction message policy.
	TransactionPolicies GetQueueQueueListTransactionPolicyArrayInput `pulumi:"transactionPolicies"`
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout pulumi.IntInput `pulumi:"visibilityTimeout"`
}

func (GetQueueQueueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueList)(nil)).Elem()
}

func (i GetQueueQueueListArgs) ToGetQueueQueueListOutput() GetQueueQueueListOutput {
	return i.ToGetQueueQueueListOutputWithContext(context.Background())
}

func (i GetQueueQueueListArgs) ToGetQueueQueueListOutputWithContext(ctx context.Context) GetQueueQueueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListOutput)
}

// GetQueueQueueListArrayInput is an input type that accepts GetQueueQueueListArray and GetQueueQueueListArrayOutput values.
// You can construct a concrete instance of `GetQueueQueueListArrayInput` via:
//
//	GetQueueQueueListArray{ GetQueueQueueListArgs{...} }
type GetQueueQueueListArrayInput interface {
	pulumi.Input

	ToGetQueueQueueListArrayOutput() GetQueueQueueListArrayOutput
	ToGetQueueQueueListArrayOutputWithContext(context.Context) GetQueueQueueListArrayOutput
}

type GetQueueQueueListArray []GetQueueQueueListInput

func (GetQueueQueueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueList)(nil)).Elem()
}

func (i GetQueueQueueListArray) ToGetQueueQueueListArrayOutput() GetQueueQueueListArrayOutput {
	return i.ToGetQueueQueueListArrayOutputWithContext(context.Background())
}

func (i GetQueueQueueListArray) ToGetQueueQueueListArrayOutputWithContext(ctx context.Context) GetQueueQueueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListArrayOutput)
}

type GetQueueQueueListOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueList)(nil)).Elem()
}

func (o GetQueueQueueListOutput) ToGetQueueQueueListOutput() GetQueueQueueListOutput {
	return o
}

func (o GetQueueQueueListOutput) ToGetQueueQueueListOutputWithContext(ctx context.Context) GetQueueQueueListOutput {
	return o
}

// Total number of messages in `Active` status (i.e., unconsumed) in the queue, which is an approximate value.
func (o GetQueueQueueListOutput) ActiveMsgNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.ActiveMsgNum }).(pulumi.IntOutput)
}

// Bandwidth limit.
func (o GetQueueQueueListOutput) Bps() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.Bps }).(pulumi.IntOutput)
}

// Queue creation time. A Unix timestamp accurate down to the millisecond will be returned.
func (o GetQueueQueueListOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Creator `Uin`.
func (o GetQueueQueueListOutput) CreateUin() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.CreateUin }).(pulumi.IntOutput)
}

// Dead letter queue policy.
func (o GetQueueQueueListOutput) DeadLetterPolicies() GetQueueQueueListDeadLetterPolicyArrayOutput {
	return o.ApplyT(func(v GetQueueQueueList) []GetQueueQueueListDeadLetterPolicy { return v.DeadLetterPolicies }).(GetQueueQueueListDeadLetterPolicyArrayOutput)
}

// Dead letter queue.
func (o GetQueueQueueListOutput) DeadLetterSources() GetQueueQueueListDeadLetterSourceArrayOutput {
	return o.ApplyT(func(v GetQueueQueueList) []GetQueueQueueListDeadLetterSource { return v.DeadLetterSources }).(GetQueueQueueListDeadLetterSourceArrayOutput)
}

// Number of delayed messages.
func (o GetQueueQueueListOutput) DelayMsgNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.DelayMsgNum }).(pulumi.IntOutput)
}

// Total number of messages in `Inactive` status (i.e., being consumed) in the queue, which is an approximate value.
func (o GetQueueQueueListOutput) InactiveMsgNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.InactiveMsgNum }).(pulumi.IntOutput)
}

// Time when the queue attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
func (o GetQueueQueueListOutput) LastModifyTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.LastModifyTime }).(pulumi.IntOutput)
}

// Maximum retention period for inflight messages.
func (o GetQueueQueueListOutput) MaxDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MaxDelaySeconds }).(pulumi.IntOutput)
}

// Maximum size of heaped messages in bytes.
func (o GetQueueQueueListOutput) MaxMsgBacklogSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MaxMsgBacklogSize }).(pulumi.IntOutput)
}

// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
func (o GetQueueQueueListOutput) MaxMsgHeapNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MaxMsgHeapNum }).(pulumi.IntOutput)
}

// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
func (o GetQueueQueueListOutput) MaxMsgSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MaxMsgSize }).(pulumi.IntOutput)
}

// The maximum number of unacknowledged messages.
func (o GetQueueQueueListOutput) MaxUnackedMsgNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MaxUnackedMsgNum }).(pulumi.IntOutput)
}

// Minimum unconsumed time of message in seconds.
func (o GetQueueQueueListOutput) MinMsgTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MinMsgTime }).(pulumi.IntOutput)
}

// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
func (o GetQueueQueueListOutput) MsgRetentionSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.MsgRetentionSeconds }).(pulumi.IntOutput)
}

// Namespace name.
func (o GetQueueQueueListOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueList) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
func (o GetQueueQueueListOutput) PollingWaitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.PollingWaitSeconds }).(pulumi.IntOutput)
}

// Limit of the number of messages produced per second. The value for consumed messages is 1.1 times this value.
func (o GetQueueQueueListOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.Qps }).(pulumi.IntOutput)
}

// Message queue ID.
func (o GetQueueQueueListOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueList) string { return v.QueueId }).(pulumi.StringOutput)
}

// Filter by QueueName.
func (o GetQueueQueueListOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueList) string { return v.QueueName }).(pulumi.StringOutput)
}

// Queue storage space configured for message rewind. Value range: 1,024-10,240 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
func (o GetQueueQueueListOutput) RetentionSizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.RetentionSizeInMb }).(pulumi.IntOutput)
}

// Number of retained messages which have been deleted by the `DelMsg` API but are still within their rewind time range.
func (o GetQueueQueueListOutput) RewindMsgNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.RewindMsgNum }).(pulumi.IntOutput)
}

// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
func (o GetQueueQueueListOutput) RewindSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.RewindSeconds }).(pulumi.IntOutput)
}

// Cluster status. `0`: creating; `1`: normal; `2`: terminating; `3`: deleted; `4`: isolated; `5`: creation failed; `6`: deletion failed.
func (o GetQueueQueueListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.Status }).(pulumi.IntOutput)
}

// Associated tag.
func (o GetQueueQueueListOutput) Tags() GetQueueQueueListTagArrayOutput {
	return o.ApplyT(func(v GetQueueQueueList) []GetQueueQueueListTag { return v.Tags }).(GetQueueQueueListTagArrayOutput)
}

// Tenant ID.
func (o GetQueueQueueListOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueList) string { return v.TenantId }).(pulumi.StringOutput)
}

// Message trace. true: enabled; false: not enabled.
func (o GetQueueQueueListOutput) Trace() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueueQueueList) bool { return v.Trace }).(pulumi.BoolOutput)
}

// 1: transaction queue; 0: general queue.
func (o GetQueueQueueListOutput) Transaction() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueueQueueList) bool { return v.Transaction }).(pulumi.BoolOutput)
}

// Transaction message policy.
func (o GetQueueQueueListOutput) TransactionPolicies() GetQueueQueueListTransactionPolicyArrayOutput {
	return o.ApplyT(func(v GetQueueQueueList) []GetQueueQueueListTransactionPolicy { return v.TransactionPolicies }).(GetQueueQueueListTransactionPolicyArrayOutput)
}

// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
func (o GetQueueQueueListOutput) VisibilityTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueList) int { return v.VisibilityTimeout }).(pulumi.IntOutput)
}

type GetQueueQueueListArrayOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueList)(nil)).Elem()
}

func (o GetQueueQueueListArrayOutput) ToGetQueueQueueListArrayOutput() GetQueueQueueListArrayOutput {
	return o
}

func (o GetQueueQueueListArrayOutput) ToGetQueueQueueListArrayOutputWithContext(ctx context.Context) GetQueueQueueListArrayOutput {
	return o
}

func (o GetQueueQueueListArrayOutput) Index(i pulumi.IntInput) GetQueueQueueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueQueueList {
		return vs[0].([]GetQueueQueueList)[vs[1].(int)]
	}).(GetQueueQueueListOutput)
}

type GetQueueQueueListDeadLetterPolicy struct {
	// Dead letter queue.
	DeadLetterQueue string `pulumi:"deadLetterQueue"`
	// Maximum number of receipts.
	MaxReceiveCount int `pulumi:"maxReceiveCount"`
	// Maximum period in seconds before an unconsumed message expires, which is required if `Policy` is 1. Value range: 300-43200. This value should be smaller than `MsgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive int `pulumi:"maxTimeToLive"`
	// Dead letter queue policy.
	Policy int `pulumi:"policy"`
}

// GetQueueQueueListDeadLetterPolicyInput is an input type that accepts GetQueueQueueListDeadLetterPolicyArgs and GetQueueQueueListDeadLetterPolicyOutput values.
// You can construct a concrete instance of `GetQueueQueueListDeadLetterPolicyInput` via:
//
//	GetQueueQueueListDeadLetterPolicyArgs{...}
type GetQueueQueueListDeadLetterPolicyInput interface {
	pulumi.Input

	ToGetQueueQueueListDeadLetterPolicyOutput() GetQueueQueueListDeadLetterPolicyOutput
	ToGetQueueQueueListDeadLetterPolicyOutputWithContext(context.Context) GetQueueQueueListDeadLetterPolicyOutput
}

type GetQueueQueueListDeadLetterPolicyArgs struct {
	// Dead letter queue.
	DeadLetterQueue pulumi.StringInput `pulumi:"deadLetterQueue"`
	// Maximum number of receipts.
	MaxReceiveCount pulumi.IntInput `pulumi:"maxReceiveCount"`
	// Maximum period in seconds before an unconsumed message expires, which is required if `Policy` is 1. Value range: 300-43200. This value should be smaller than `MsgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive pulumi.IntInput `pulumi:"maxTimeToLive"`
	// Dead letter queue policy.
	Policy pulumi.IntInput `pulumi:"policy"`
}

func (GetQueueQueueListDeadLetterPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListDeadLetterPolicy)(nil)).Elem()
}

func (i GetQueueQueueListDeadLetterPolicyArgs) ToGetQueueQueueListDeadLetterPolicyOutput() GetQueueQueueListDeadLetterPolicyOutput {
	return i.ToGetQueueQueueListDeadLetterPolicyOutputWithContext(context.Background())
}

func (i GetQueueQueueListDeadLetterPolicyArgs) ToGetQueueQueueListDeadLetterPolicyOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListDeadLetterPolicyOutput)
}

// GetQueueQueueListDeadLetterPolicyArrayInput is an input type that accepts GetQueueQueueListDeadLetterPolicyArray and GetQueueQueueListDeadLetterPolicyArrayOutput values.
// You can construct a concrete instance of `GetQueueQueueListDeadLetterPolicyArrayInput` via:
//
//	GetQueueQueueListDeadLetterPolicyArray{ GetQueueQueueListDeadLetterPolicyArgs{...} }
type GetQueueQueueListDeadLetterPolicyArrayInput interface {
	pulumi.Input

	ToGetQueueQueueListDeadLetterPolicyArrayOutput() GetQueueQueueListDeadLetterPolicyArrayOutput
	ToGetQueueQueueListDeadLetterPolicyArrayOutputWithContext(context.Context) GetQueueQueueListDeadLetterPolicyArrayOutput
}

type GetQueueQueueListDeadLetterPolicyArray []GetQueueQueueListDeadLetterPolicyInput

func (GetQueueQueueListDeadLetterPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListDeadLetterPolicy)(nil)).Elem()
}

func (i GetQueueQueueListDeadLetterPolicyArray) ToGetQueueQueueListDeadLetterPolicyArrayOutput() GetQueueQueueListDeadLetterPolicyArrayOutput {
	return i.ToGetQueueQueueListDeadLetterPolicyArrayOutputWithContext(context.Background())
}

func (i GetQueueQueueListDeadLetterPolicyArray) ToGetQueueQueueListDeadLetterPolicyArrayOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListDeadLetterPolicyArrayOutput)
}

type GetQueueQueueListDeadLetterPolicyOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListDeadLetterPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListDeadLetterPolicy)(nil)).Elem()
}

func (o GetQueueQueueListDeadLetterPolicyOutput) ToGetQueueQueueListDeadLetterPolicyOutput() GetQueueQueueListDeadLetterPolicyOutput {
	return o
}

func (o GetQueueQueueListDeadLetterPolicyOutput) ToGetQueueQueueListDeadLetterPolicyOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterPolicyOutput {
	return o
}

// Dead letter queue.
func (o GetQueueQueueListDeadLetterPolicyOutput) DeadLetterQueue() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueListDeadLetterPolicy) string { return v.DeadLetterQueue }).(pulumi.StringOutput)
}

// Maximum number of receipts.
func (o GetQueueQueueListDeadLetterPolicyOutput) MaxReceiveCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueListDeadLetterPolicy) int { return v.MaxReceiveCount }).(pulumi.IntOutput)
}

// Maximum period in seconds before an unconsumed message expires, which is required if `Policy` is 1. Value range: 300-43200. This value should be smaller than `MsgRetentionSeconds` (maximum message retention period).
func (o GetQueueQueueListDeadLetterPolicyOutput) MaxTimeToLive() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueListDeadLetterPolicy) int { return v.MaxTimeToLive }).(pulumi.IntOutput)
}

// Dead letter queue policy.
func (o GetQueueQueueListDeadLetterPolicyOutput) Policy() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueListDeadLetterPolicy) int { return v.Policy }).(pulumi.IntOutput)
}

type GetQueueQueueListDeadLetterPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListDeadLetterPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListDeadLetterPolicy)(nil)).Elem()
}

func (o GetQueueQueueListDeadLetterPolicyArrayOutput) ToGetQueueQueueListDeadLetterPolicyArrayOutput() GetQueueQueueListDeadLetterPolicyArrayOutput {
	return o
}

func (o GetQueueQueueListDeadLetterPolicyArrayOutput) ToGetQueueQueueListDeadLetterPolicyArrayOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterPolicyArrayOutput {
	return o
}

func (o GetQueueQueueListDeadLetterPolicyArrayOutput) Index(i pulumi.IntInput) GetQueueQueueListDeadLetterPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueQueueListDeadLetterPolicy {
		return vs[0].([]GetQueueQueueListDeadLetterPolicy)[vs[1].(int)]
	}).(GetQueueQueueListDeadLetterPolicyOutput)
}

type GetQueueQueueListDeadLetterSource struct {
	// Message queue ID.
	QueueId string `pulumi:"queueId"`
	// Filter by QueueName.
	QueueName string `pulumi:"queueName"`
}

// GetQueueQueueListDeadLetterSourceInput is an input type that accepts GetQueueQueueListDeadLetterSourceArgs and GetQueueQueueListDeadLetterSourceOutput values.
// You can construct a concrete instance of `GetQueueQueueListDeadLetterSourceInput` via:
//
//	GetQueueQueueListDeadLetterSourceArgs{...}
type GetQueueQueueListDeadLetterSourceInput interface {
	pulumi.Input

	ToGetQueueQueueListDeadLetterSourceOutput() GetQueueQueueListDeadLetterSourceOutput
	ToGetQueueQueueListDeadLetterSourceOutputWithContext(context.Context) GetQueueQueueListDeadLetterSourceOutput
}

type GetQueueQueueListDeadLetterSourceArgs struct {
	// Message queue ID.
	QueueId pulumi.StringInput `pulumi:"queueId"`
	// Filter by QueueName.
	QueueName pulumi.StringInput `pulumi:"queueName"`
}

func (GetQueueQueueListDeadLetterSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListDeadLetterSource)(nil)).Elem()
}

func (i GetQueueQueueListDeadLetterSourceArgs) ToGetQueueQueueListDeadLetterSourceOutput() GetQueueQueueListDeadLetterSourceOutput {
	return i.ToGetQueueQueueListDeadLetterSourceOutputWithContext(context.Background())
}

func (i GetQueueQueueListDeadLetterSourceArgs) ToGetQueueQueueListDeadLetterSourceOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListDeadLetterSourceOutput)
}

// GetQueueQueueListDeadLetterSourceArrayInput is an input type that accepts GetQueueQueueListDeadLetterSourceArray and GetQueueQueueListDeadLetterSourceArrayOutput values.
// You can construct a concrete instance of `GetQueueQueueListDeadLetterSourceArrayInput` via:
//
//	GetQueueQueueListDeadLetterSourceArray{ GetQueueQueueListDeadLetterSourceArgs{...} }
type GetQueueQueueListDeadLetterSourceArrayInput interface {
	pulumi.Input

	ToGetQueueQueueListDeadLetterSourceArrayOutput() GetQueueQueueListDeadLetterSourceArrayOutput
	ToGetQueueQueueListDeadLetterSourceArrayOutputWithContext(context.Context) GetQueueQueueListDeadLetterSourceArrayOutput
}

type GetQueueQueueListDeadLetterSourceArray []GetQueueQueueListDeadLetterSourceInput

func (GetQueueQueueListDeadLetterSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListDeadLetterSource)(nil)).Elem()
}

func (i GetQueueQueueListDeadLetterSourceArray) ToGetQueueQueueListDeadLetterSourceArrayOutput() GetQueueQueueListDeadLetterSourceArrayOutput {
	return i.ToGetQueueQueueListDeadLetterSourceArrayOutputWithContext(context.Background())
}

func (i GetQueueQueueListDeadLetterSourceArray) ToGetQueueQueueListDeadLetterSourceArrayOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListDeadLetterSourceArrayOutput)
}

type GetQueueQueueListDeadLetterSourceOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListDeadLetterSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListDeadLetterSource)(nil)).Elem()
}

func (o GetQueueQueueListDeadLetterSourceOutput) ToGetQueueQueueListDeadLetterSourceOutput() GetQueueQueueListDeadLetterSourceOutput {
	return o
}

func (o GetQueueQueueListDeadLetterSourceOutput) ToGetQueueQueueListDeadLetterSourceOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterSourceOutput {
	return o
}

// Message queue ID.
func (o GetQueueQueueListDeadLetterSourceOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueListDeadLetterSource) string { return v.QueueId }).(pulumi.StringOutput)
}

// Filter by QueueName.
func (o GetQueueQueueListDeadLetterSourceOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueListDeadLetterSource) string { return v.QueueName }).(pulumi.StringOutput)
}

type GetQueueQueueListDeadLetterSourceArrayOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListDeadLetterSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListDeadLetterSource)(nil)).Elem()
}

func (o GetQueueQueueListDeadLetterSourceArrayOutput) ToGetQueueQueueListDeadLetterSourceArrayOutput() GetQueueQueueListDeadLetterSourceArrayOutput {
	return o
}

func (o GetQueueQueueListDeadLetterSourceArrayOutput) ToGetQueueQueueListDeadLetterSourceArrayOutputWithContext(ctx context.Context) GetQueueQueueListDeadLetterSourceArrayOutput {
	return o
}

func (o GetQueueQueueListDeadLetterSourceArrayOutput) Index(i pulumi.IntInput) GetQueueQueueListDeadLetterSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueQueueListDeadLetterSource {
		return vs[0].([]GetQueueQueueListDeadLetterSource)[vs[1].(int)]
	}).(GetQueueQueueListDeadLetterSourceOutput)
}

type GetQueueQueueListTag struct {
	// Value of the tag key.
	TagKey string `pulumi:"tagKey"`
	// Value of the tag value.
	TagValue string `pulumi:"tagValue"`
}

// GetQueueQueueListTagInput is an input type that accepts GetQueueQueueListTagArgs and GetQueueQueueListTagOutput values.
// You can construct a concrete instance of `GetQueueQueueListTagInput` via:
//
//	GetQueueQueueListTagArgs{...}
type GetQueueQueueListTagInput interface {
	pulumi.Input

	ToGetQueueQueueListTagOutput() GetQueueQueueListTagOutput
	ToGetQueueQueueListTagOutputWithContext(context.Context) GetQueueQueueListTagOutput
}

type GetQueueQueueListTagArgs struct {
	// Value of the tag key.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// Value of the tag value.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetQueueQueueListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListTag)(nil)).Elem()
}

func (i GetQueueQueueListTagArgs) ToGetQueueQueueListTagOutput() GetQueueQueueListTagOutput {
	return i.ToGetQueueQueueListTagOutputWithContext(context.Background())
}

func (i GetQueueQueueListTagArgs) ToGetQueueQueueListTagOutputWithContext(ctx context.Context) GetQueueQueueListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListTagOutput)
}

// GetQueueQueueListTagArrayInput is an input type that accepts GetQueueQueueListTagArray and GetQueueQueueListTagArrayOutput values.
// You can construct a concrete instance of `GetQueueQueueListTagArrayInput` via:
//
//	GetQueueQueueListTagArray{ GetQueueQueueListTagArgs{...} }
type GetQueueQueueListTagArrayInput interface {
	pulumi.Input

	ToGetQueueQueueListTagArrayOutput() GetQueueQueueListTagArrayOutput
	ToGetQueueQueueListTagArrayOutputWithContext(context.Context) GetQueueQueueListTagArrayOutput
}

type GetQueueQueueListTagArray []GetQueueQueueListTagInput

func (GetQueueQueueListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListTag)(nil)).Elem()
}

func (i GetQueueQueueListTagArray) ToGetQueueQueueListTagArrayOutput() GetQueueQueueListTagArrayOutput {
	return i.ToGetQueueQueueListTagArrayOutputWithContext(context.Background())
}

func (i GetQueueQueueListTagArray) ToGetQueueQueueListTagArrayOutputWithContext(ctx context.Context) GetQueueQueueListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListTagArrayOutput)
}

type GetQueueQueueListTagOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListTag)(nil)).Elem()
}

func (o GetQueueQueueListTagOutput) ToGetQueueQueueListTagOutput() GetQueueQueueListTagOutput {
	return o
}

func (o GetQueueQueueListTagOutput) ToGetQueueQueueListTagOutputWithContext(ctx context.Context) GetQueueQueueListTagOutput {
	return o
}

// Value of the tag key.
func (o GetQueueQueueListTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueListTag) string { return v.TagKey }).(pulumi.StringOutput)
}

// Value of the tag value.
func (o GetQueueQueueListTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueQueueListTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetQueueQueueListTagArrayOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListTag)(nil)).Elem()
}

func (o GetQueueQueueListTagArrayOutput) ToGetQueueQueueListTagArrayOutput() GetQueueQueueListTagArrayOutput {
	return o
}

func (o GetQueueQueueListTagArrayOutput) ToGetQueueQueueListTagArrayOutputWithContext(ctx context.Context) GetQueueQueueListTagArrayOutput {
	return o
}

func (o GetQueueQueueListTagArrayOutput) Index(i pulumi.IntInput) GetQueueQueueListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueQueueListTag {
		return vs[0].([]GetQueueQueueListTag)[vs[1].(int)]
	}).(GetQueueQueueListTagOutput)
}

type GetQueueQueueListTransactionPolicy struct {
	// First lookback time.
	FirstQueryInterval int `pulumi:"firstQueryInterval"`
	// Maximum number of queries.
	MaxQueryCount int `pulumi:"maxQueryCount"`
}

// GetQueueQueueListTransactionPolicyInput is an input type that accepts GetQueueQueueListTransactionPolicyArgs and GetQueueQueueListTransactionPolicyOutput values.
// You can construct a concrete instance of `GetQueueQueueListTransactionPolicyInput` via:
//
//	GetQueueQueueListTransactionPolicyArgs{...}
type GetQueueQueueListTransactionPolicyInput interface {
	pulumi.Input

	ToGetQueueQueueListTransactionPolicyOutput() GetQueueQueueListTransactionPolicyOutput
	ToGetQueueQueueListTransactionPolicyOutputWithContext(context.Context) GetQueueQueueListTransactionPolicyOutput
}

type GetQueueQueueListTransactionPolicyArgs struct {
	// First lookback time.
	FirstQueryInterval pulumi.IntInput `pulumi:"firstQueryInterval"`
	// Maximum number of queries.
	MaxQueryCount pulumi.IntInput `pulumi:"maxQueryCount"`
}

func (GetQueueQueueListTransactionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListTransactionPolicy)(nil)).Elem()
}

func (i GetQueueQueueListTransactionPolicyArgs) ToGetQueueQueueListTransactionPolicyOutput() GetQueueQueueListTransactionPolicyOutput {
	return i.ToGetQueueQueueListTransactionPolicyOutputWithContext(context.Background())
}

func (i GetQueueQueueListTransactionPolicyArgs) ToGetQueueQueueListTransactionPolicyOutputWithContext(ctx context.Context) GetQueueQueueListTransactionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListTransactionPolicyOutput)
}

// GetQueueQueueListTransactionPolicyArrayInput is an input type that accepts GetQueueQueueListTransactionPolicyArray and GetQueueQueueListTransactionPolicyArrayOutput values.
// You can construct a concrete instance of `GetQueueQueueListTransactionPolicyArrayInput` via:
//
//	GetQueueQueueListTransactionPolicyArray{ GetQueueQueueListTransactionPolicyArgs{...} }
type GetQueueQueueListTransactionPolicyArrayInput interface {
	pulumi.Input

	ToGetQueueQueueListTransactionPolicyArrayOutput() GetQueueQueueListTransactionPolicyArrayOutput
	ToGetQueueQueueListTransactionPolicyArrayOutputWithContext(context.Context) GetQueueQueueListTransactionPolicyArrayOutput
}

type GetQueueQueueListTransactionPolicyArray []GetQueueQueueListTransactionPolicyInput

func (GetQueueQueueListTransactionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListTransactionPolicy)(nil)).Elem()
}

func (i GetQueueQueueListTransactionPolicyArray) ToGetQueueQueueListTransactionPolicyArrayOutput() GetQueueQueueListTransactionPolicyArrayOutput {
	return i.ToGetQueueQueueListTransactionPolicyArrayOutputWithContext(context.Background())
}

func (i GetQueueQueueListTransactionPolicyArray) ToGetQueueQueueListTransactionPolicyArrayOutputWithContext(ctx context.Context) GetQueueQueueListTransactionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueQueueListTransactionPolicyArrayOutput)
}

type GetQueueQueueListTransactionPolicyOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListTransactionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueQueueListTransactionPolicy)(nil)).Elem()
}

func (o GetQueueQueueListTransactionPolicyOutput) ToGetQueueQueueListTransactionPolicyOutput() GetQueueQueueListTransactionPolicyOutput {
	return o
}

func (o GetQueueQueueListTransactionPolicyOutput) ToGetQueueQueueListTransactionPolicyOutputWithContext(ctx context.Context) GetQueueQueueListTransactionPolicyOutput {
	return o
}

// First lookback time.
func (o GetQueueQueueListTransactionPolicyOutput) FirstQueryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueListTransactionPolicy) int { return v.FirstQueryInterval }).(pulumi.IntOutput)
}

// Maximum number of queries.
func (o GetQueueQueueListTransactionPolicyOutput) MaxQueryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueueQueueListTransactionPolicy) int { return v.MaxQueryCount }).(pulumi.IntOutput)
}

type GetQueueQueueListTransactionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetQueueQueueListTransactionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueQueueListTransactionPolicy)(nil)).Elem()
}

func (o GetQueueQueueListTransactionPolicyArrayOutput) ToGetQueueQueueListTransactionPolicyArrayOutput() GetQueueQueueListTransactionPolicyArrayOutput {
	return o
}

func (o GetQueueQueueListTransactionPolicyArrayOutput) ToGetQueueQueueListTransactionPolicyArrayOutputWithContext(ctx context.Context) GetQueueQueueListTransactionPolicyArrayOutput {
	return o
}

func (o GetQueueQueueListTransactionPolicyArrayOutput) Index(i pulumi.IntInput) GetQueueQueueListTransactionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueQueueListTransactionPolicy {
		return vs[0].([]GetQueueQueueListTransactionPolicy)[vs[1].(int)]
	}).(GetQueueQueueListTransactionPolicyOutput)
}

type GetSubscribeSubscriptionList struct {
	// Filtering policy for subscribing to and receiving messages.
	BindingKeys []string `pulumi:"bindingKeys"`
	// Subscription creation time. A Unix timestamp accurate down to the millisecond will be returned.
	CreateTime int `pulumi:"createTime"`
	// Endpoint that receives notifications, which varies by `protocol`: for HTTP, the endpoint must start with `http://`, and the `host` can be a domain or IP; for `queue`, `queueName` should be entered.
	Endpoint string `pulumi:"endpoint"`
	// Filtering policy selected when a subscription is created:If `filterType` is 1, `filterTag` will be used for filtering. If `filterType` is 2, `bindingKey` will be used for filtering.
	FilterTags []string `pulumi:"filterTags"`
	// Time when the subscription attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
	LastModifyTime int `pulumi:"lastModifyTime"`
	// Number of messages to be delivered in the subscription.
	MsgCount int `pulumi:"msgCount"`
	// Push content format. Valid values: 1. `JSON`; 2. `SIMPLIFIED`, i.e., the raw format. If `Protocol` is `queue`, this value must be `SIMPLIFIED`. If `Protocol` is `http`, both options are acceptable, and the default value is `JSON`.
	NotifyContentFormat string `pulumi:"notifyContentFormat"`
	// CMQ push server retry policy in case an error occurs while pushing a message to `Endpoint`. Valid values: 1. `BACKOFF_RETRY`: backoff retry, which is to retry at a fixed interval, discard the message after a certain number of retries, and continue to push the next message; 2. `EXPONENTIAL_DECAY_RETRY`: exponential decay retry, which is to retry at an exponentially increasing interval, such as 1s, 2s, 4s, 8s, and so on. As a message can be retained in a topic for one day, failed messages will be discarded at most after one day of retry. Default value: `EXPONENTIAL_DECAY_RETRY`.
	NotifyStrategy string `pulumi:"notifyStrategy"`
	// Subscription protocol. Currently, two protocols are supported: HTTP and queue. To use the HTTP protocol, you need to build your own web server to receive messages. With the queue protocol, messages are automatically pushed to a CMQ queue and you can pull them concurrently.
	Protocol string `pulumi:"protocol"`
	// Subscription ID, which will be used during monitoring data pull.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Fuzzy search by SubscriptionName.
	SubscriptionName string `pulumi:"subscriptionName"`
	// Subscription owner APPID.
	TopicOwner int `pulumi:"topicOwner"`
}

// GetSubscribeSubscriptionListInput is an input type that accepts GetSubscribeSubscriptionListArgs and GetSubscribeSubscriptionListOutput values.
// You can construct a concrete instance of `GetSubscribeSubscriptionListInput` via:
//
//	GetSubscribeSubscriptionListArgs{...}
type GetSubscribeSubscriptionListInput interface {
	pulumi.Input

	ToGetSubscribeSubscriptionListOutput() GetSubscribeSubscriptionListOutput
	ToGetSubscribeSubscriptionListOutputWithContext(context.Context) GetSubscribeSubscriptionListOutput
}

type GetSubscribeSubscriptionListArgs struct {
	// Filtering policy for subscribing to and receiving messages.
	BindingKeys pulumi.StringArrayInput `pulumi:"bindingKeys"`
	// Subscription creation time. A Unix timestamp accurate down to the millisecond will be returned.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Endpoint that receives notifications, which varies by `protocol`: for HTTP, the endpoint must start with `http://`, and the `host` can be a domain or IP; for `queue`, `queueName` should be entered.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Filtering policy selected when a subscription is created:If `filterType` is 1, `filterTag` will be used for filtering. If `filterType` is 2, `bindingKey` will be used for filtering.
	FilterTags pulumi.StringArrayInput `pulumi:"filterTags"`
	// Time when the subscription attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
	LastModifyTime pulumi.IntInput `pulumi:"lastModifyTime"`
	// Number of messages to be delivered in the subscription.
	MsgCount pulumi.IntInput `pulumi:"msgCount"`
	// Push content format. Valid values: 1. `JSON`; 2. `SIMPLIFIED`, i.e., the raw format. If `Protocol` is `queue`, this value must be `SIMPLIFIED`. If `Protocol` is `http`, both options are acceptable, and the default value is `JSON`.
	NotifyContentFormat pulumi.StringInput `pulumi:"notifyContentFormat"`
	// CMQ push server retry policy in case an error occurs while pushing a message to `Endpoint`. Valid values: 1. `BACKOFF_RETRY`: backoff retry, which is to retry at a fixed interval, discard the message after a certain number of retries, and continue to push the next message; 2. `EXPONENTIAL_DECAY_RETRY`: exponential decay retry, which is to retry at an exponentially increasing interval, such as 1s, 2s, 4s, 8s, and so on. As a message can be retained in a topic for one day, failed messages will be discarded at most after one day of retry. Default value: `EXPONENTIAL_DECAY_RETRY`.
	NotifyStrategy pulumi.StringInput `pulumi:"notifyStrategy"`
	// Subscription protocol. Currently, two protocols are supported: HTTP and queue. To use the HTTP protocol, you need to build your own web server to receive messages. With the queue protocol, messages are automatically pushed to a CMQ queue and you can pull them concurrently.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Subscription ID, which will be used during monitoring data pull.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Fuzzy search by SubscriptionName.
	SubscriptionName pulumi.StringInput `pulumi:"subscriptionName"`
	// Subscription owner APPID.
	TopicOwner pulumi.IntInput `pulumi:"topicOwner"`
}

func (GetSubscribeSubscriptionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribeSubscriptionList)(nil)).Elem()
}

func (i GetSubscribeSubscriptionListArgs) ToGetSubscribeSubscriptionListOutput() GetSubscribeSubscriptionListOutput {
	return i.ToGetSubscribeSubscriptionListOutputWithContext(context.Background())
}

func (i GetSubscribeSubscriptionListArgs) ToGetSubscribeSubscriptionListOutputWithContext(ctx context.Context) GetSubscribeSubscriptionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribeSubscriptionListOutput)
}

// GetSubscribeSubscriptionListArrayInput is an input type that accepts GetSubscribeSubscriptionListArray and GetSubscribeSubscriptionListArrayOutput values.
// You can construct a concrete instance of `GetSubscribeSubscriptionListArrayInput` via:
//
//	GetSubscribeSubscriptionListArray{ GetSubscribeSubscriptionListArgs{...} }
type GetSubscribeSubscriptionListArrayInput interface {
	pulumi.Input

	ToGetSubscribeSubscriptionListArrayOutput() GetSubscribeSubscriptionListArrayOutput
	ToGetSubscribeSubscriptionListArrayOutputWithContext(context.Context) GetSubscribeSubscriptionListArrayOutput
}

type GetSubscribeSubscriptionListArray []GetSubscribeSubscriptionListInput

func (GetSubscribeSubscriptionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscribeSubscriptionList)(nil)).Elem()
}

func (i GetSubscribeSubscriptionListArray) ToGetSubscribeSubscriptionListArrayOutput() GetSubscribeSubscriptionListArrayOutput {
	return i.ToGetSubscribeSubscriptionListArrayOutputWithContext(context.Background())
}

func (i GetSubscribeSubscriptionListArray) ToGetSubscribeSubscriptionListArrayOutputWithContext(ctx context.Context) GetSubscribeSubscriptionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribeSubscriptionListArrayOutput)
}

type GetSubscribeSubscriptionListOutput struct{ *pulumi.OutputState }

func (GetSubscribeSubscriptionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribeSubscriptionList)(nil)).Elem()
}

func (o GetSubscribeSubscriptionListOutput) ToGetSubscribeSubscriptionListOutput() GetSubscribeSubscriptionListOutput {
	return o
}

func (o GetSubscribeSubscriptionListOutput) ToGetSubscribeSubscriptionListOutputWithContext(ctx context.Context) GetSubscribeSubscriptionListOutput {
	return o
}

// Filtering policy for subscribing to and receiving messages.
func (o GetSubscribeSubscriptionListOutput) BindingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) []string { return v.BindingKeys }).(pulumi.StringArrayOutput)
}

// Subscription creation time. A Unix timestamp accurate down to the millisecond will be returned.
func (o GetSubscribeSubscriptionListOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Endpoint that receives notifications, which varies by `protocol`: for HTTP, the endpoint must start with `http://`, and the `host` can be a domain or IP; for `queue`, `queueName` should be entered.
func (o GetSubscribeSubscriptionListOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Filtering policy selected when a subscription is created:If `filterType` is 1, `filterTag` will be used for filtering. If `filterType` is 2, `bindingKey` will be used for filtering.
func (o GetSubscribeSubscriptionListOutput) FilterTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) []string { return v.FilterTags }).(pulumi.StringArrayOutput)
}

// Time when the subscription attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
func (o GetSubscribeSubscriptionListOutput) LastModifyTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) int { return v.LastModifyTime }).(pulumi.IntOutput)
}

// Number of messages to be delivered in the subscription.
func (o GetSubscribeSubscriptionListOutput) MsgCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) int { return v.MsgCount }).(pulumi.IntOutput)
}

// Push content format. Valid values: 1. `JSON`; 2. `SIMPLIFIED`, i.e., the raw format. If `Protocol` is `queue`, this value must be `SIMPLIFIED`. If `Protocol` is `http`, both options are acceptable, and the default value is `JSON`.
func (o GetSubscribeSubscriptionListOutput) NotifyContentFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) string { return v.NotifyContentFormat }).(pulumi.StringOutput)
}

// CMQ push server retry policy in case an error occurs while pushing a message to `Endpoint`. Valid values: 1. `BACKOFF_RETRY`: backoff retry, which is to retry at a fixed interval, discard the message after a certain number of retries, and continue to push the next message; 2. `EXPONENTIAL_DECAY_RETRY`: exponential decay retry, which is to retry at an exponentially increasing interval, such as 1s, 2s, 4s, 8s, and so on. As a message can be retained in a topic for one day, failed messages will be discarded at most after one day of retry. Default value: `EXPONENTIAL_DECAY_RETRY`.
func (o GetSubscribeSubscriptionListOutput) NotifyStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) string { return v.NotifyStrategy }).(pulumi.StringOutput)
}

// Subscription protocol. Currently, two protocols are supported: HTTP and queue. To use the HTTP protocol, you need to build your own web server to receive messages. With the queue protocol, messages are automatically pushed to a CMQ queue and you can pull them concurrently.
func (o GetSubscribeSubscriptionListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) string { return v.Protocol }).(pulumi.StringOutput)
}

// Subscription ID, which will be used during monitoring data pull.
func (o GetSubscribeSubscriptionListOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Fuzzy search by SubscriptionName.
func (o GetSubscribeSubscriptionListOutput) SubscriptionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) string { return v.SubscriptionName }).(pulumi.StringOutput)
}

// Subscription owner APPID.
func (o GetSubscribeSubscriptionListOutput) TopicOwner() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscribeSubscriptionList) int { return v.TopicOwner }).(pulumi.IntOutput)
}

type GetSubscribeSubscriptionListArrayOutput struct{ *pulumi.OutputState }

func (GetSubscribeSubscriptionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscribeSubscriptionList)(nil)).Elem()
}

func (o GetSubscribeSubscriptionListArrayOutput) ToGetSubscribeSubscriptionListArrayOutput() GetSubscribeSubscriptionListArrayOutput {
	return o
}

func (o GetSubscribeSubscriptionListArrayOutput) ToGetSubscribeSubscriptionListArrayOutputWithContext(ctx context.Context) GetSubscribeSubscriptionListArrayOutput {
	return o
}

func (o GetSubscribeSubscriptionListArrayOutput) Index(i pulumi.IntInput) GetSubscribeSubscriptionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscribeSubscriptionList {
		return vs[0].([]GetSubscribeSubscriptionList)[vs[1].(int)]
	}).(GetSubscribeSubscriptionListOutput)
}

type GetTopicFilter struct {
	// Filter parameter name.
	Name *string `pulumi:"name"`
	// Value.
	Values []string `pulumi:"values"`
}

// GetTopicFilterInput is an input type that accepts GetTopicFilterArgs and GetTopicFilterOutput values.
// You can construct a concrete instance of `GetTopicFilterInput` via:
//
//	GetTopicFilterArgs{...}
type GetTopicFilterInput interface {
	pulumi.Input

	ToGetTopicFilterOutput() GetTopicFilterOutput
	ToGetTopicFilterOutputWithContext(context.Context) GetTopicFilterOutput
}

type GetTopicFilterArgs struct {
	// Filter parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTopicFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFilter)(nil)).Elem()
}

func (i GetTopicFilterArgs) ToGetTopicFilterOutput() GetTopicFilterOutput {
	return i.ToGetTopicFilterOutputWithContext(context.Background())
}

func (i GetTopicFilterArgs) ToGetTopicFilterOutputWithContext(ctx context.Context) GetTopicFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFilterOutput)
}

// GetTopicFilterArrayInput is an input type that accepts GetTopicFilterArray and GetTopicFilterArrayOutput values.
// You can construct a concrete instance of `GetTopicFilterArrayInput` via:
//
//	GetTopicFilterArray{ GetTopicFilterArgs{...} }
type GetTopicFilterArrayInput interface {
	pulumi.Input

	ToGetTopicFilterArrayOutput() GetTopicFilterArrayOutput
	ToGetTopicFilterArrayOutputWithContext(context.Context) GetTopicFilterArrayOutput
}

type GetTopicFilterArray []GetTopicFilterInput

func (GetTopicFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFilter)(nil)).Elem()
}

func (i GetTopicFilterArray) ToGetTopicFilterArrayOutput() GetTopicFilterArrayOutput {
	return i.ToGetTopicFilterArrayOutputWithContext(context.Background())
}

func (i GetTopicFilterArray) ToGetTopicFilterArrayOutputWithContext(ctx context.Context) GetTopicFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicFilterArrayOutput)
}

type GetTopicFilterOutput struct{ *pulumi.OutputState }

func (GetTopicFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicFilter)(nil)).Elem()
}

func (o GetTopicFilterOutput) ToGetTopicFilterOutput() GetTopicFilterOutput {
	return o
}

func (o GetTopicFilterOutput) ToGetTopicFilterOutputWithContext(ctx context.Context) GetTopicFilterOutput {
	return o
}

// Filter parameter name.
func (o GetTopicFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o GetTopicFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTopicFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTopicFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTopicFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicFilter)(nil)).Elem()
}

func (o GetTopicFilterArrayOutput) ToGetTopicFilterArrayOutput() GetTopicFilterArrayOutput {
	return o
}

func (o GetTopicFilterArrayOutput) ToGetTopicFilterArrayOutputWithContext(ctx context.Context) GetTopicFilterArrayOutput {
	return o
}

func (o GetTopicFilterArrayOutput) Index(i pulumi.IntInput) GetTopicFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicFilter {
		return vs[0].([]GetTopicFilter)[vs[1].(int)]
	}).(GetTopicFilterOutput)
}

type GetTopicTopicList struct {
	// Valid values: `0` (Pulsar), `1` (RocketMQ).
	BrokerType int `pulumi:"brokerType"`
	// Topic creation time. A Unix timestamp accurate down to the millisecond will be returned.
	CreateTime int `pulumi:"createTime"`
	// Creator `Uin`. The `resource` field for CAM authentication is composed of this field.
	CreateUin int `pulumi:"createUin"`
	// Filtering policy selected when a subscription is created: If `filterType` is 1, `FilterTag` will be used for filtering. If `filterType` is 2, `BindingKey` will be used for filtering.
	FilterType int `pulumi:"filterType"`
	// Time when the topic attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
	LastModifyTime int `pulumi:"lastModifyTime"`
	// Maximum message size, which ranges from 1,024 to 1,048,576 bytes (i.e., 1-1,024 KB). The default value is 65,536.
	MaxMsgSize int `pulumi:"maxMsgSize"`
	// Number of current messages in the topic (number of retained messages).
	MsgCount int `pulumi:"msgCount"`
	// Maximum lifecycle of message in topic. After the period specified by this parameter has elapsed since a message is sent to the topic, the message will be deleted no matter whether it has been successfully pushed to the user. This parameter is measured in seconds and defaulted to one day (86,400 seconds), which cannot be modified.
	MsgRetentionSeconds int `pulumi:"msgRetentionSeconds"`
	// Namespace name.
	NamespaceName string `pulumi:"namespaceName"`
	// Number of messages published per second.
	Qps int `pulumi:"qps"`
	// Cluster status. `0`: creating; `1`: normal; `2`: terminating; `3`: deleted; `4`: isolated; `5`: creation failed; `6`: deletion failed.
	Status int `pulumi:"status"`
	// Associated tag.
	Tags []GetTopicTopicListTag `pulumi:"tags"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
	// Topic ID.
	TopicId string `pulumi:"topicId"`
	// Fuzzy search by TopicName.
	TopicName string `pulumi:"topicName"`
	// Message trace. true: enabled; false: not enabled.
	Trace bool `pulumi:"trace"`
}

// GetTopicTopicListInput is an input type that accepts GetTopicTopicListArgs and GetTopicTopicListOutput values.
// You can construct a concrete instance of `GetTopicTopicListInput` via:
//
//	GetTopicTopicListArgs{...}
type GetTopicTopicListInput interface {
	pulumi.Input

	ToGetTopicTopicListOutput() GetTopicTopicListOutput
	ToGetTopicTopicListOutputWithContext(context.Context) GetTopicTopicListOutput
}

type GetTopicTopicListArgs struct {
	// Valid values: `0` (Pulsar), `1` (RocketMQ).
	BrokerType pulumi.IntInput `pulumi:"brokerType"`
	// Topic creation time. A Unix timestamp accurate down to the millisecond will be returned.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Creator `Uin`. The `resource` field for CAM authentication is composed of this field.
	CreateUin pulumi.IntInput `pulumi:"createUin"`
	// Filtering policy selected when a subscription is created: If `filterType` is 1, `FilterTag` will be used for filtering. If `filterType` is 2, `BindingKey` will be used for filtering.
	FilterType pulumi.IntInput `pulumi:"filterType"`
	// Time when the topic attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
	LastModifyTime pulumi.IntInput `pulumi:"lastModifyTime"`
	// Maximum message size, which ranges from 1,024 to 1,048,576 bytes (i.e., 1-1,024 KB). The default value is 65,536.
	MaxMsgSize pulumi.IntInput `pulumi:"maxMsgSize"`
	// Number of current messages in the topic (number of retained messages).
	MsgCount pulumi.IntInput `pulumi:"msgCount"`
	// Maximum lifecycle of message in topic. After the period specified by this parameter has elapsed since a message is sent to the topic, the message will be deleted no matter whether it has been successfully pushed to the user. This parameter is measured in seconds and defaulted to one day (86,400 seconds), which cannot be modified.
	MsgRetentionSeconds pulumi.IntInput `pulumi:"msgRetentionSeconds"`
	// Namespace name.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Number of messages published per second.
	Qps pulumi.IntInput `pulumi:"qps"`
	// Cluster status. `0`: creating; `1`: normal; `2`: terminating; `3`: deleted; `4`: isolated; `5`: creation failed; `6`: deletion failed.
	Status pulumi.IntInput `pulumi:"status"`
	// Associated tag.
	Tags GetTopicTopicListTagArrayInput `pulumi:"tags"`
	// Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Topic ID.
	TopicId pulumi.StringInput `pulumi:"topicId"`
	// Fuzzy search by TopicName.
	TopicName pulumi.StringInput `pulumi:"topicName"`
	// Message trace. true: enabled; false: not enabled.
	Trace pulumi.BoolInput `pulumi:"trace"`
}

func (GetTopicTopicListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicTopicList)(nil)).Elem()
}

func (i GetTopicTopicListArgs) ToGetTopicTopicListOutput() GetTopicTopicListOutput {
	return i.ToGetTopicTopicListOutputWithContext(context.Background())
}

func (i GetTopicTopicListArgs) ToGetTopicTopicListOutputWithContext(ctx context.Context) GetTopicTopicListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicTopicListOutput)
}

// GetTopicTopicListArrayInput is an input type that accepts GetTopicTopicListArray and GetTopicTopicListArrayOutput values.
// You can construct a concrete instance of `GetTopicTopicListArrayInput` via:
//
//	GetTopicTopicListArray{ GetTopicTopicListArgs{...} }
type GetTopicTopicListArrayInput interface {
	pulumi.Input

	ToGetTopicTopicListArrayOutput() GetTopicTopicListArrayOutput
	ToGetTopicTopicListArrayOutputWithContext(context.Context) GetTopicTopicListArrayOutput
}

type GetTopicTopicListArray []GetTopicTopicListInput

func (GetTopicTopicListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicTopicList)(nil)).Elem()
}

func (i GetTopicTopicListArray) ToGetTopicTopicListArrayOutput() GetTopicTopicListArrayOutput {
	return i.ToGetTopicTopicListArrayOutputWithContext(context.Background())
}

func (i GetTopicTopicListArray) ToGetTopicTopicListArrayOutputWithContext(ctx context.Context) GetTopicTopicListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicTopicListArrayOutput)
}

type GetTopicTopicListOutput struct{ *pulumi.OutputState }

func (GetTopicTopicListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicTopicList)(nil)).Elem()
}

func (o GetTopicTopicListOutput) ToGetTopicTopicListOutput() GetTopicTopicListOutput {
	return o
}

func (o GetTopicTopicListOutput) ToGetTopicTopicListOutputWithContext(ctx context.Context) GetTopicTopicListOutput {
	return o
}

// Valid values: `0` (Pulsar), `1` (RocketMQ).
func (o GetTopicTopicListOutput) BrokerType() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.BrokerType }).(pulumi.IntOutput)
}

// Topic creation time. A Unix timestamp accurate down to the millisecond will be returned.
func (o GetTopicTopicListOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Creator `Uin`. The `resource` field for CAM authentication is composed of this field.
func (o GetTopicTopicListOutput) CreateUin() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.CreateUin }).(pulumi.IntOutput)
}

// Filtering policy selected when a subscription is created: If `filterType` is 1, `FilterTag` will be used for filtering. If `filterType` is 2, `BindingKey` will be used for filtering.
func (o GetTopicTopicListOutput) FilterType() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.FilterType }).(pulumi.IntOutput)
}

// Time when the topic attribute is last modified. A Unix timestamp accurate down to the millisecond will be returned.
func (o GetTopicTopicListOutput) LastModifyTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.LastModifyTime }).(pulumi.IntOutput)
}

// Maximum message size, which ranges from 1,024 to 1,048,576 bytes (i.e., 1-1,024 KB). The default value is 65,536.
func (o GetTopicTopicListOutput) MaxMsgSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.MaxMsgSize }).(pulumi.IntOutput)
}

// Number of current messages in the topic (number of retained messages).
func (o GetTopicTopicListOutput) MsgCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.MsgCount }).(pulumi.IntOutput)
}

// Maximum lifecycle of message in topic. After the period specified by this parameter has elapsed since a message is sent to the topic, the message will be deleted no matter whether it has been successfully pushed to the user. This parameter is measured in seconds and defaulted to one day (86,400 seconds), which cannot be modified.
func (o GetTopicTopicListOutput) MsgRetentionSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.MsgRetentionSeconds }).(pulumi.IntOutput)
}

// Namespace name.
func (o GetTopicTopicListOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicTopicList) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// Number of messages published per second.
func (o GetTopicTopicListOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.Qps }).(pulumi.IntOutput)
}

// Cluster status. `0`: creating; `1`: normal; `2`: terminating; `3`: deleted; `4`: isolated; `5`: creation failed; `6`: deletion failed.
func (o GetTopicTopicListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicTopicList) int { return v.Status }).(pulumi.IntOutput)
}

// Associated tag.
func (o GetTopicTopicListOutput) Tags() GetTopicTopicListTagArrayOutput {
	return o.ApplyT(func(v GetTopicTopicList) []GetTopicTopicListTag { return v.Tags }).(GetTopicTopicListTagArrayOutput)
}

// Tenant ID.
func (o GetTopicTopicListOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicTopicList) string { return v.TenantId }).(pulumi.StringOutput)
}

// Topic ID.
func (o GetTopicTopicListOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicTopicList) string { return v.TopicId }).(pulumi.StringOutput)
}

// Fuzzy search by TopicName.
func (o GetTopicTopicListOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicTopicList) string { return v.TopicName }).(pulumi.StringOutput)
}

// Message trace. true: enabled; false: not enabled.
func (o GetTopicTopicListOutput) Trace() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicTopicList) bool { return v.Trace }).(pulumi.BoolOutput)
}

type GetTopicTopicListArrayOutput struct{ *pulumi.OutputState }

func (GetTopicTopicListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicTopicList)(nil)).Elem()
}

func (o GetTopicTopicListArrayOutput) ToGetTopicTopicListArrayOutput() GetTopicTopicListArrayOutput {
	return o
}

func (o GetTopicTopicListArrayOutput) ToGetTopicTopicListArrayOutputWithContext(ctx context.Context) GetTopicTopicListArrayOutput {
	return o
}

func (o GetTopicTopicListArrayOutput) Index(i pulumi.IntInput) GetTopicTopicListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicTopicList {
		return vs[0].([]GetTopicTopicList)[vs[1].(int)]
	}).(GetTopicTopicListOutput)
}

type GetTopicTopicListTag struct {
	// Value of the tag key.
	TagKey string `pulumi:"tagKey"`
	// Value of the tag value.
	TagValue string `pulumi:"tagValue"`
}

// GetTopicTopicListTagInput is an input type that accepts GetTopicTopicListTagArgs and GetTopicTopicListTagOutput values.
// You can construct a concrete instance of `GetTopicTopicListTagInput` via:
//
//	GetTopicTopicListTagArgs{...}
type GetTopicTopicListTagInput interface {
	pulumi.Input

	ToGetTopicTopicListTagOutput() GetTopicTopicListTagOutput
	ToGetTopicTopicListTagOutputWithContext(context.Context) GetTopicTopicListTagOutput
}

type GetTopicTopicListTagArgs struct {
	// Value of the tag key.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// Value of the tag value.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetTopicTopicListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicTopicListTag)(nil)).Elem()
}

func (i GetTopicTopicListTagArgs) ToGetTopicTopicListTagOutput() GetTopicTopicListTagOutput {
	return i.ToGetTopicTopicListTagOutputWithContext(context.Background())
}

func (i GetTopicTopicListTagArgs) ToGetTopicTopicListTagOutputWithContext(ctx context.Context) GetTopicTopicListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicTopicListTagOutput)
}

// GetTopicTopicListTagArrayInput is an input type that accepts GetTopicTopicListTagArray and GetTopicTopicListTagArrayOutput values.
// You can construct a concrete instance of `GetTopicTopicListTagArrayInput` via:
//
//	GetTopicTopicListTagArray{ GetTopicTopicListTagArgs{...} }
type GetTopicTopicListTagArrayInput interface {
	pulumi.Input

	ToGetTopicTopicListTagArrayOutput() GetTopicTopicListTagArrayOutput
	ToGetTopicTopicListTagArrayOutputWithContext(context.Context) GetTopicTopicListTagArrayOutput
}

type GetTopicTopicListTagArray []GetTopicTopicListTagInput

func (GetTopicTopicListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicTopicListTag)(nil)).Elem()
}

func (i GetTopicTopicListTagArray) ToGetTopicTopicListTagArrayOutput() GetTopicTopicListTagArrayOutput {
	return i.ToGetTopicTopicListTagArrayOutputWithContext(context.Background())
}

func (i GetTopicTopicListTagArray) ToGetTopicTopicListTagArrayOutputWithContext(ctx context.Context) GetTopicTopicListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicTopicListTagArrayOutput)
}

type GetTopicTopicListTagOutput struct{ *pulumi.OutputState }

func (GetTopicTopicListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicTopicListTag)(nil)).Elem()
}

func (o GetTopicTopicListTagOutput) ToGetTopicTopicListTagOutput() GetTopicTopicListTagOutput {
	return o
}

func (o GetTopicTopicListTagOutput) ToGetTopicTopicListTagOutputWithContext(ctx context.Context) GetTopicTopicListTagOutput {
	return o
}

// Value of the tag key.
func (o GetTopicTopicListTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicTopicListTag) string { return v.TagKey }).(pulumi.StringOutput)
}

// Value of the tag value.
func (o GetTopicTopicListTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicTopicListTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetTopicTopicListTagArrayOutput struct{ *pulumi.OutputState }

func (GetTopicTopicListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicTopicListTag)(nil)).Elem()
}

func (o GetTopicTopicListTagArrayOutput) ToGetTopicTopicListTagArrayOutput() GetTopicTopicListTagArrayOutput {
	return o
}

func (o GetTopicTopicListTagArrayOutput) ToGetTopicTopicListTagArrayOutputWithContext(ctx context.Context) GetTopicTopicListTagArrayOutput {
	return o
}

func (o GetTopicTopicListTagArrayOutput) Index(i pulumi.IntInput) GetTopicTopicListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicTopicListTag {
		return vs[0].([]GetTopicTopicListTag)[vs[1].(int)]
	}).(GetTopicTopicListTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueFilterInput)(nil)).Elem(), GetQueueFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueFilterArrayInput)(nil)).Elem(), GetQueueFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListInput)(nil)).Elem(), GetQueueQueueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListArrayInput)(nil)).Elem(), GetQueueQueueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListDeadLetterPolicyInput)(nil)).Elem(), GetQueueQueueListDeadLetterPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListDeadLetterPolicyArrayInput)(nil)).Elem(), GetQueueQueueListDeadLetterPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListDeadLetterSourceInput)(nil)).Elem(), GetQueueQueueListDeadLetterSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListDeadLetterSourceArrayInput)(nil)).Elem(), GetQueueQueueListDeadLetterSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListTagInput)(nil)).Elem(), GetQueueQueueListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListTagArrayInput)(nil)).Elem(), GetQueueQueueListTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListTransactionPolicyInput)(nil)).Elem(), GetQueueQueueListTransactionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueQueueListTransactionPolicyArrayInput)(nil)).Elem(), GetQueueQueueListTransactionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscribeSubscriptionListInput)(nil)).Elem(), GetSubscribeSubscriptionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscribeSubscriptionListArrayInput)(nil)).Elem(), GetSubscribeSubscriptionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFilterInput)(nil)).Elem(), GetTopicFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicFilterArrayInput)(nil)).Elem(), GetTopicFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicTopicListInput)(nil)).Elem(), GetTopicTopicListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicTopicListArrayInput)(nil)).Elem(), GetTopicTopicListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicTopicListTagInput)(nil)).Elem(), GetTopicTopicListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicTopicListTagArrayInput)(nil)).Elem(), GetTopicTopicListTagArray{})
	pulumi.RegisterOutputType(GetQueueFilterOutput{})
	pulumi.RegisterOutputType(GetQueueFilterArrayOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListArrayOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListDeadLetterPolicyOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListDeadLetterPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListDeadLetterSourceOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListDeadLetterSourceArrayOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListTagOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListTagArrayOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListTransactionPolicyOutput{})
	pulumi.RegisterOutputType(GetQueueQueueListTransactionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetSubscribeSubscriptionListOutput{})
	pulumi.RegisterOutputType(GetSubscribeSubscriptionListArrayOutput{})
	pulumi.RegisterOutputType(GetTopicFilterOutput{})
	pulumi.RegisterOutputType(GetTopicFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTopicTopicListOutput{})
	pulumi.RegisterOutputType(GetTopicTopicListArrayOutput{})
	pulumi.RegisterOutputType(GetTopicTopicListTagOutput{})
	pulumi.RegisterOutputType(GetTopicTopicListTagArrayOutput{})
}
