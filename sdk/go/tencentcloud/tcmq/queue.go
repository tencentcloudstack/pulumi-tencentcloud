// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tcmq

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tcmq queue
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tcmq"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tcmq.NewQueue(ctx, "queue", &Tcmq.QueueArgs{
//				QueueName: pulumi.String("queue_name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// tcmq queue can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Tcmq/queue:Queue queue queue_id
//
// ```
type Queue struct {
	pulumi.CustomResourceState

	// Dead letter queue name.
	DeadLetterQueueName pulumi.StringPtrOutput `pulumi:"deadLetterQueueName"`
	// First lookback interval.
	FirstQueryInterval pulumi.IntPtrOutput `pulumi:"firstQueryInterval"`
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum pulumi.IntPtrOutput `pulumi:"maxMsgHeapNum"`
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize pulumi.IntPtrOutput `pulumi:"maxMsgSize"`
	// Maximum number of lookbacks.
	MaxQueryCount pulumi.IntPtrOutput `pulumi:"maxQueryCount"`
	// Maximum receipt times. Value range: 1-1000.
	MaxReceiveCount pulumi.IntPtrOutput `pulumi:"maxReceiveCount"`
	// Maximum period in seconds before an unconsumed message expires, which is required if `policy` is 1. Value range: 300-43200. This value should be smaller than `msgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive pulumi.IntPtrOutput `pulumi:"maxTimeToLive"`
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds pulumi.IntPtrOutput `pulumi:"msgRetentionSeconds"`
	// Dead letter policy. 0: message has been consumed multiple times but not deleted; 1: `Time-To-Live` has elapsed.
	Policy pulumi.IntPtrOutput `pulumi:"policy"`
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds pulumi.IntPtrOutput `pulumi:"pollingWaitSeconds"`
	// Queue name, which must be unique under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	QueueName pulumi.StringOutput `pulumi:"queueName"`
	// Queue storage space configured for message rewind. Value range: 10,240-512,000 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb pulumi.IntPtrOutput `pulumi:"retentionSizeInMb"`
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds pulumi.IntPtrOutput `pulumi:"rewindSeconds"`
	// Whether to enable message trace. true: yes; false: no. If this field is not configured, the feature will not be enabled.
	Trace pulumi.BoolPtrOutput `pulumi:"trace"`
	// 1: transaction queue; 0: general queue.
	Transaction pulumi.IntPtrOutput `pulumi:"transaction"`
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout pulumi.IntPtrOutput `pulumi:"visibilityTimeout"`
}

// NewQueue registers a new resource with the given unique name, arguments, and options.
func NewQueue(ctx *pulumi.Context,
	name string, args *QueueArgs, opts ...pulumi.ResourceOption) (*Queue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QueueName == nil {
		return nil, errors.New("invalid value for required argument 'QueueName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Queue
	err := ctx.RegisterResource("tencentcloud:Tcmq/queue:Queue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueue gets an existing Queue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueueState, opts ...pulumi.ResourceOption) (*Queue, error) {
	var resource Queue
	err := ctx.ReadResource("tencentcloud:Tcmq/queue:Queue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Queue resources.
type queueState struct {
	// Dead letter queue name.
	DeadLetterQueueName *string `pulumi:"deadLetterQueueName"`
	// First lookback interval.
	FirstQueryInterval *int `pulumi:"firstQueryInterval"`
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum *int `pulumi:"maxMsgHeapNum"`
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize *int `pulumi:"maxMsgSize"`
	// Maximum number of lookbacks.
	MaxQueryCount *int `pulumi:"maxQueryCount"`
	// Maximum receipt times. Value range: 1-1000.
	MaxReceiveCount *int `pulumi:"maxReceiveCount"`
	// Maximum period in seconds before an unconsumed message expires, which is required if `policy` is 1. Value range: 300-43200. This value should be smaller than `msgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive *int `pulumi:"maxTimeToLive"`
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds *int `pulumi:"msgRetentionSeconds"`
	// Dead letter policy. 0: message has been consumed multiple times but not deleted; 1: `Time-To-Live` has elapsed.
	Policy *int `pulumi:"policy"`
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds *int `pulumi:"pollingWaitSeconds"`
	// Queue name, which must be unique under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	QueueName *string `pulumi:"queueName"`
	// Queue storage space configured for message rewind. Value range: 10,240-512,000 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb *int `pulumi:"retentionSizeInMb"`
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds *int `pulumi:"rewindSeconds"`
	// Whether to enable message trace. true: yes; false: no. If this field is not configured, the feature will not be enabled.
	Trace *bool `pulumi:"trace"`
	// 1: transaction queue; 0: general queue.
	Transaction *int `pulumi:"transaction"`
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout *int `pulumi:"visibilityTimeout"`
}

type QueueState struct {
	// Dead letter queue name.
	DeadLetterQueueName pulumi.StringPtrInput
	// First lookback interval.
	FirstQueryInterval pulumi.IntPtrInput
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum pulumi.IntPtrInput
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize pulumi.IntPtrInput
	// Maximum number of lookbacks.
	MaxQueryCount pulumi.IntPtrInput
	// Maximum receipt times. Value range: 1-1000.
	MaxReceiveCount pulumi.IntPtrInput
	// Maximum period in seconds before an unconsumed message expires, which is required if `policy` is 1. Value range: 300-43200. This value should be smaller than `msgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive pulumi.IntPtrInput
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds pulumi.IntPtrInput
	// Dead letter policy. 0: message has been consumed multiple times but not deleted; 1: `Time-To-Live` has elapsed.
	Policy pulumi.IntPtrInput
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds pulumi.IntPtrInput
	// Queue name, which must be unique under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	QueueName pulumi.StringPtrInput
	// Queue storage space configured for message rewind. Value range: 10,240-512,000 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb pulumi.IntPtrInput
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds pulumi.IntPtrInput
	// Whether to enable message trace. true: yes; false: no. If this field is not configured, the feature will not be enabled.
	Trace pulumi.BoolPtrInput
	// 1: transaction queue; 0: general queue.
	Transaction pulumi.IntPtrInput
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout pulumi.IntPtrInput
}

func (QueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*queueState)(nil)).Elem()
}

type queueArgs struct {
	// Dead letter queue name.
	DeadLetterQueueName *string `pulumi:"deadLetterQueueName"`
	// First lookback interval.
	FirstQueryInterval *int `pulumi:"firstQueryInterval"`
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum *int `pulumi:"maxMsgHeapNum"`
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize *int `pulumi:"maxMsgSize"`
	// Maximum number of lookbacks.
	MaxQueryCount *int `pulumi:"maxQueryCount"`
	// Maximum receipt times. Value range: 1-1000.
	MaxReceiveCount *int `pulumi:"maxReceiveCount"`
	// Maximum period in seconds before an unconsumed message expires, which is required if `policy` is 1. Value range: 300-43200. This value should be smaller than `msgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive *int `pulumi:"maxTimeToLive"`
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds *int `pulumi:"msgRetentionSeconds"`
	// Dead letter policy. 0: message has been consumed multiple times but not deleted; 1: `Time-To-Live` has elapsed.
	Policy *int `pulumi:"policy"`
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds *int `pulumi:"pollingWaitSeconds"`
	// Queue name, which must be unique under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	QueueName string `pulumi:"queueName"`
	// Queue storage space configured for message rewind. Value range: 10,240-512,000 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb *int `pulumi:"retentionSizeInMb"`
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds *int `pulumi:"rewindSeconds"`
	// Whether to enable message trace. true: yes; false: no. If this field is not configured, the feature will not be enabled.
	Trace *bool `pulumi:"trace"`
	// 1: transaction queue; 0: general queue.
	Transaction *int `pulumi:"transaction"`
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout *int `pulumi:"visibilityTimeout"`
}

// The set of arguments for constructing a Queue resource.
type QueueArgs struct {
	// Dead letter queue name.
	DeadLetterQueueName pulumi.StringPtrInput
	// First lookback interval.
	FirstQueryInterval pulumi.IntPtrInput
	// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
	MaxMsgHeapNum pulumi.IntPtrInput
	// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
	MaxMsgSize pulumi.IntPtrInput
	// Maximum number of lookbacks.
	MaxQueryCount pulumi.IntPtrInput
	// Maximum receipt times. Value range: 1-1000.
	MaxReceiveCount pulumi.IntPtrInput
	// Maximum period in seconds before an unconsumed message expires, which is required if `policy` is 1. Value range: 300-43200. This value should be smaller than `msgRetentionSeconds` (maximum message retention period).
	MaxTimeToLive pulumi.IntPtrInput
	// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
	MsgRetentionSeconds pulumi.IntPtrInput
	// Dead letter policy. 0: message has been consumed multiple times but not deleted; 1: `Time-To-Live` has elapsed.
	Policy pulumi.IntPtrInput
	// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
	PollingWaitSeconds pulumi.IntPtrInput
	// Queue name, which must be unique under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
	QueueName pulumi.StringInput
	// Queue storage space configured for message rewind. Value range: 10,240-512,000 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RetentionSizeInMb pulumi.IntPtrInput
	// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
	RewindSeconds pulumi.IntPtrInput
	// Whether to enable message trace. true: yes; false: no. If this field is not configured, the feature will not be enabled.
	Trace pulumi.BoolPtrInput
	// 1: transaction queue; 0: general queue.
	Transaction pulumi.IntPtrInput
	// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
	VisibilityTimeout pulumi.IntPtrInput
}

func (QueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queueArgs)(nil)).Elem()
}

type QueueInput interface {
	pulumi.Input

	ToQueueOutput() QueueOutput
	ToQueueOutputWithContext(ctx context.Context) QueueOutput
}

func (*Queue) ElementType() reflect.Type {
	return reflect.TypeOf((**Queue)(nil)).Elem()
}

func (i *Queue) ToQueueOutput() QueueOutput {
	return i.ToQueueOutputWithContext(context.Background())
}

func (i *Queue) ToQueueOutputWithContext(ctx context.Context) QueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutput)
}

// QueueArrayInput is an input type that accepts QueueArray and QueueArrayOutput values.
// You can construct a concrete instance of `QueueArrayInput` via:
//
//	QueueArray{ QueueArgs{...} }
type QueueArrayInput interface {
	pulumi.Input

	ToQueueArrayOutput() QueueArrayOutput
	ToQueueArrayOutputWithContext(context.Context) QueueArrayOutput
}

type QueueArray []QueueInput

func (QueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Queue)(nil)).Elem()
}

func (i QueueArray) ToQueueArrayOutput() QueueArrayOutput {
	return i.ToQueueArrayOutputWithContext(context.Background())
}

func (i QueueArray) ToQueueArrayOutputWithContext(ctx context.Context) QueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueArrayOutput)
}

// QueueMapInput is an input type that accepts QueueMap and QueueMapOutput values.
// You can construct a concrete instance of `QueueMapInput` via:
//
//	QueueMap{ "key": QueueArgs{...} }
type QueueMapInput interface {
	pulumi.Input

	ToQueueMapOutput() QueueMapOutput
	ToQueueMapOutputWithContext(context.Context) QueueMapOutput
}

type QueueMap map[string]QueueInput

func (QueueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Queue)(nil)).Elem()
}

func (i QueueMap) ToQueueMapOutput() QueueMapOutput {
	return i.ToQueueMapOutputWithContext(context.Background())
}

func (i QueueMap) ToQueueMapOutputWithContext(ctx context.Context) QueueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueMapOutput)
}

type QueueOutput struct{ *pulumi.OutputState }

func (QueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Queue)(nil)).Elem()
}

func (o QueueOutput) ToQueueOutput() QueueOutput {
	return o
}

func (o QueueOutput) ToQueueOutputWithContext(ctx context.Context) QueueOutput {
	return o
}

// Dead letter queue name.
func (o QueueOutput) DeadLetterQueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.StringPtrOutput { return v.DeadLetterQueueName }).(pulumi.StringPtrOutput)
}

// First lookback interval.
func (o QueueOutput) FirstQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.FirstQueryInterval }).(pulumi.IntPtrOutput)
}

// Maximum number of heaped messages. The value range is 1,000,000-10,000,000 during the beta test and can be 1,000,000-1,000,000,000 after the product is officially released. The default value is 10,000,000 during the beta test and will be 100,000,000 after the product is officially released.
func (o QueueOutput) MaxMsgHeapNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.MaxMsgHeapNum }).(pulumi.IntPtrOutput)
}

// Maximum message length. Value range: 1024-65536 bytes (i.e., 1-64 KB). Default value: 65536.
func (o QueueOutput) MaxMsgSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.MaxMsgSize }).(pulumi.IntPtrOutput)
}

// Maximum number of lookbacks.
func (o QueueOutput) MaxQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.MaxQueryCount }).(pulumi.IntPtrOutput)
}

// Maximum receipt times. Value range: 1-1000.
func (o QueueOutput) MaxReceiveCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.MaxReceiveCount }).(pulumi.IntPtrOutput)
}

// Maximum period in seconds before an unconsumed message expires, which is required if `policy` is 1. Value range: 300-43200. This value should be smaller than `msgRetentionSeconds` (maximum message retention period).
func (o QueueOutput) MaxTimeToLive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.MaxTimeToLive }).(pulumi.IntPtrOutput)
}

// The max period during which a message is retained before it is automatically acknowledged. Value range: 30-43,200 seconds (30 seconds to 12 hours). Default value: 3600 seconds (1 hour).
func (o QueueOutput) MsgRetentionSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.MsgRetentionSeconds }).(pulumi.IntPtrOutput)
}

// Dead letter policy. 0: message has been consumed multiple times but not deleted; 1: `Time-To-Live` has elapsed.
func (o QueueOutput) Policy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.Policy }).(pulumi.IntPtrOutput)
}

// Long polling wait time for message reception. Value range: 0-30 seconds. Default value: 0.
func (o QueueOutput) PollingWaitSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.PollingWaitSeconds }).(pulumi.IntPtrOutput)
}

// Queue name, which must be unique under the same account in the same region. It can contain up to 64 letters, digits, and hyphens and must begin with a letter.
func (o QueueOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v *Queue) pulumi.StringOutput { return v.QueueName }).(pulumi.StringOutput)
}

// Queue storage space configured for message rewind. Value range: 10,240-512,000 MB (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
func (o QueueOutput) RetentionSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.RetentionSizeInMb }).(pulumi.IntPtrOutput)
}

// Rewindable time of messages in the queue. Value range: 0-1,296,000s (if message rewind is enabled). The value `0` indicates that message rewind is not enabled.
func (o QueueOutput) RewindSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.RewindSeconds }).(pulumi.IntPtrOutput)
}

// Whether to enable message trace. true: yes; false: no. If this field is not configured, the feature will not be enabled.
func (o QueueOutput) Trace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.BoolPtrOutput { return v.Trace }).(pulumi.BoolPtrOutput)
}

// 1: transaction queue; 0: general queue.
func (o QueueOutput) Transaction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.Transaction }).(pulumi.IntPtrOutput)
}

// Message visibility timeout period. Value range: 1-43200 seconds (i.e., 12 hours). Default value: 30.
func (o QueueOutput) VisibilityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Queue) pulumi.IntPtrOutput { return v.VisibilityTimeout }).(pulumi.IntPtrOutput)
}

type QueueArrayOutput struct{ *pulumi.OutputState }

func (QueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Queue)(nil)).Elem()
}

func (o QueueArrayOutput) ToQueueArrayOutput() QueueArrayOutput {
	return o
}

func (o QueueArrayOutput) ToQueueArrayOutputWithContext(ctx context.Context) QueueArrayOutput {
	return o
}

func (o QueueArrayOutput) Index(i pulumi.IntInput) QueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Queue {
		return vs[0].([]*Queue)[vs[1].(int)]
	}).(QueueOutput)
}

type QueueMapOutput struct{ *pulumi.OutputState }

func (QueueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Queue)(nil)).Elem()
}

func (o QueueMapOutput) ToQueueMapOutput() QueueMapOutput {
	return o
}

func (o QueueMapOutput) ToQueueMapOutputWithContext(ctx context.Context) QueueMapOutput {
	return o
}

func (o QueueMapOutput) MapIndex(k pulumi.StringInput) QueueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Queue {
		return vs[0].(map[string]*Queue)[vs[1].(string)]
	}).(QueueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QueueInput)(nil)).Elem(), &Queue{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueArrayInput)(nil)).Elem(), QueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueMapInput)(nil)).Elem(), QueueMap{})
	pulumi.RegisterOutputType(QueueOutput{})
	pulumi.RegisterOutputType(QueueArrayOutput{})
	pulumi.RegisterOutputType(QueueMapOutput{})
}
