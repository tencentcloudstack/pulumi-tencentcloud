// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package antiddos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a antiddos ipAlarmThresholdConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Antiddos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Antiddos.NewIpAlarmThresholdConfig(ctx, "ipAlarmThresholdConfig", &Antiddos.IpAlarmThresholdConfigArgs{
//				AlarmThreshold: pulumi.Int(2),
//				AlarmType:      pulumi.Int(1),
//				InstanceId:     pulumi.String("bgp-xxxxxx"),
//				InstanceIp:     pulumi.String("xxx.xxx.xxx.xxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// antiddos ip_alarm_threshold_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig ip_alarm_threshold_config ${instanceId}#${instanceIp}#${alarmType}
//
// ```
type IpAlarmThresholdConfig struct {
	pulumi.CustomResourceState

	// Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
	AlarmThreshold pulumi.IntOutput `pulumi:"alarmThreshold"`
	// Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
	AlarmType pulumi.IntOutput `pulumi:"alarmType"`
	// Instance id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Instance ip.
	InstanceIp pulumi.StringOutput `pulumi:"instanceIp"`
}

// NewIpAlarmThresholdConfig registers a new resource with the given unique name, arguments, and options.
func NewIpAlarmThresholdConfig(ctx *pulumi.Context,
	name string, args *IpAlarmThresholdConfigArgs, opts ...pulumi.ResourceOption) (*IpAlarmThresholdConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlarmThreshold == nil {
		return nil, errors.New("invalid value for required argument 'AlarmThreshold'")
	}
	if args.AlarmType == nil {
		return nil, errors.New("invalid value for required argument 'AlarmType'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.InstanceIp == nil {
		return nil, errors.New("invalid value for required argument 'InstanceIp'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource IpAlarmThresholdConfig
	err := ctx.RegisterResource("tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpAlarmThresholdConfig gets an existing IpAlarmThresholdConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpAlarmThresholdConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpAlarmThresholdConfigState, opts ...pulumi.ResourceOption) (*IpAlarmThresholdConfig, error) {
	var resource IpAlarmThresholdConfig
	err := ctx.ReadResource("tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpAlarmThresholdConfig resources.
type ipAlarmThresholdConfigState struct {
	// Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
	AlarmThreshold *int `pulumi:"alarmThreshold"`
	// Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
	AlarmType *int `pulumi:"alarmType"`
	// Instance id.
	InstanceId *string `pulumi:"instanceId"`
	// Instance ip.
	InstanceIp *string `pulumi:"instanceIp"`
}

type IpAlarmThresholdConfigState struct {
	// Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
	AlarmThreshold pulumi.IntPtrInput
	// Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
	AlarmType pulumi.IntPtrInput
	// Instance id.
	InstanceId pulumi.StringPtrInput
	// Instance ip.
	InstanceIp pulumi.StringPtrInput
}

func (IpAlarmThresholdConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAlarmThresholdConfigState)(nil)).Elem()
}

type ipAlarmThresholdConfigArgs struct {
	// Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
	AlarmThreshold int `pulumi:"alarmThreshold"`
	// Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
	AlarmType int `pulumi:"alarmType"`
	// Instance id.
	InstanceId string `pulumi:"instanceId"`
	// Instance ip.
	InstanceIp string `pulumi:"instanceIp"`
}

// The set of arguments for constructing a IpAlarmThresholdConfig resource.
type IpAlarmThresholdConfigArgs struct {
	// Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
	AlarmThreshold pulumi.IntInput
	// Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
	AlarmType pulumi.IntInput
	// Instance id.
	InstanceId pulumi.StringInput
	// Instance ip.
	InstanceIp pulumi.StringInput
}

func (IpAlarmThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAlarmThresholdConfigArgs)(nil)).Elem()
}

type IpAlarmThresholdConfigInput interface {
	pulumi.Input

	ToIpAlarmThresholdConfigOutput() IpAlarmThresholdConfigOutput
	ToIpAlarmThresholdConfigOutputWithContext(ctx context.Context) IpAlarmThresholdConfigOutput
}

func (*IpAlarmThresholdConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAlarmThresholdConfig)(nil)).Elem()
}

func (i *IpAlarmThresholdConfig) ToIpAlarmThresholdConfigOutput() IpAlarmThresholdConfigOutput {
	return i.ToIpAlarmThresholdConfigOutputWithContext(context.Background())
}

func (i *IpAlarmThresholdConfig) ToIpAlarmThresholdConfigOutputWithContext(ctx context.Context) IpAlarmThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAlarmThresholdConfigOutput)
}

// IpAlarmThresholdConfigArrayInput is an input type that accepts IpAlarmThresholdConfigArray and IpAlarmThresholdConfigArrayOutput values.
// You can construct a concrete instance of `IpAlarmThresholdConfigArrayInput` via:
//
//	IpAlarmThresholdConfigArray{ IpAlarmThresholdConfigArgs{...} }
type IpAlarmThresholdConfigArrayInput interface {
	pulumi.Input

	ToIpAlarmThresholdConfigArrayOutput() IpAlarmThresholdConfigArrayOutput
	ToIpAlarmThresholdConfigArrayOutputWithContext(context.Context) IpAlarmThresholdConfigArrayOutput
}

type IpAlarmThresholdConfigArray []IpAlarmThresholdConfigInput

func (IpAlarmThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpAlarmThresholdConfig)(nil)).Elem()
}

func (i IpAlarmThresholdConfigArray) ToIpAlarmThresholdConfigArrayOutput() IpAlarmThresholdConfigArrayOutput {
	return i.ToIpAlarmThresholdConfigArrayOutputWithContext(context.Background())
}

func (i IpAlarmThresholdConfigArray) ToIpAlarmThresholdConfigArrayOutputWithContext(ctx context.Context) IpAlarmThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAlarmThresholdConfigArrayOutput)
}

// IpAlarmThresholdConfigMapInput is an input type that accepts IpAlarmThresholdConfigMap and IpAlarmThresholdConfigMapOutput values.
// You can construct a concrete instance of `IpAlarmThresholdConfigMapInput` via:
//
//	IpAlarmThresholdConfigMap{ "key": IpAlarmThresholdConfigArgs{...} }
type IpAlarmThresholdConfigMapInput interface {
	pulumi.Input

	ToIpAlarmThresholdConfigMapOutput() IpAlarmThresholdConfigMapOutput
	ToIpAlarmThresholdConfigMapOutputWithContext(context.Context) IpAlarmThresholdConfigMapOutput
}

type IpAlarmThresholdConfigMap map[string]IpAlarmThresholdConfigInput

func (IpAlarmThresholdConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpAlarmThresholdConfig)(nil)).Elem()
}

func (i IpAlarmThresholdConfigMap) ToIpAlarmThresholdConfigMapOutput() IpAlarmThresholdConfigMapOutput {
	return i.ToIpAlarmThresholdConfigMapOutputWithContext(context.Background())
}

func (i IpAlarmThresholdConfigMap) ToIpAlarmThresholdConfigMapOutputWithContext(ctx context.Context) IpAlarmThresholdConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAlarmThresholdConfigMapOutput)
}

type IpAlarmThresholdConfigOutput struct{ *pulumi.OutputState }

func (IpAlarmThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAlarmThresholdConfig)(nil)).Elem()
}

func (o IpAlarmThresholdConfigOutput) ToIpAlarmThresholdConfigOutput() IpAlarmThresholdConfigOutput {
	return o
}

func (o IpAlarmThresholdConfigOutput) ToIpAlarmThresholdConfigOutputWithContext(ctx context.Context) IpAlarmThresholdConfigOutput {
	return o
}

// Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
func (o IpAlarmThresholdConfigOutput) AlarmThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *IpAlarmThresholdConfig) pulumi.IntOutput { return v.AlarmThreshold }).(pulumi.IntOutput)
}

// Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
func (o IpAlarmThresholdConfigOutput) AlarmType() pulumi.IntOutput {
	return o.ApplyT(func(v *IpAlarmThresholdConfig) pulumi.IntOutput { return v.AlarmType }).(pulumi.IntOutput)
}

// Instance id.
func (o IpAlarmThresholdConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAlarmThresholdConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance ip.
func (o IpAlarmThresholdConfigOutput) InstanceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAlarmThresholdConfig) pulumi.StringOutput { return v.InstanceIp }).(pulumi.StringOutput)
}

type IpAlarmThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (IpAlarmThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpAlarmThresholdConfig)(nil)).Elem()
}

func (o IpAlarmThresholdConfigArrayOutput) ToIpAlarmThresholdConfigArrayOutput() IpAlarmThresholdConfigArrayOutput {
	return o
}

func (o IpAlarmThresholdConfigArrayOutput) ToIpAlarmThresholdConfigArrayOutputWithContext(ctx context.Context) IpAlarmThresholdConfigArrayOutput {
	return o
}

func (o IpAlarmThresholdConfigArrayOutput) Index(i pulumi.IntInput) IpAlarmThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpAlarmThresholdConfig {
		return vs[0].([]*IpAlarmThresholdConfig)[vs[1].(int)]
	}).(IpAlarmThresholdConfigOutput)
}

type IpAlarmThresholdConfigMapOutput struct{ *pulumi.OutputState }

func (IpAlarmThresholdConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpAlarmThresholdConfig)(nil)).Elem()
}

func (o IpAlarmThresholdConfigMapOutput) ToIpAlarmThresholdConfigMapOutput() IpAlarmThresholdConfigMapOutput {
	return o
}

func (o IpAlarmThresholdConfigMapOutput) ToIpAlarmThresholdConfigMapOutputWithContext(ctx context.Context) IpAlarmThresholdConfigMapOutput {
	return o
}

func (o IpAlarmThresholdConfigMapOutput) MapIndex(k pulumi.StringInput) IpAlarmThresholdConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpAlarmThresholdConfig {
		return vs[0].(map[string]*IpAlarmThresholdConfig)[vs[1].(string)]
	}).(IpAlarmThresholdConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpAlarmThresholdConfigInput)(nil)).Elem(), &IpAlarmThresholdConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAlarmThresholdConfigArrayInput)(nil)).Elem(), IpAlarmThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAlarmThresholdConfigMapInput)(nil)).Elem(), IpAlarmThresholdConfigMap{})
	pulumi.RegisterOutputType(IpAlarmThresholdConfigOutput{})
	pulumi.RegisterOutputType(IpAlarmThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(IpAlarmThresholdConfigMapOutput{})
}
