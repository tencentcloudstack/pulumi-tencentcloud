// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package antiddos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a antiddos packet filter config
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Antiddos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Antiddos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Antiddos.NewPacketFilterConfig(ctx, "packetFilterConfig", &Antiddos.PacketFilterConfigArgs{
//				InstanceId: pulumi.String("bgp-00000ry7"),
//				PacketFilterConfig: &antiddos.PacketFilterConfigPacketFilterConfigArgs{
//					Action:     pulumi.String("drop"),
//					Depth:      pulumi.Int(1),
//					DportEnd:   pulumi.Int(80),
//					DportStart: pulumi.Int(80),
//					IsNot:      pulumi.Int(0),
//					MatchBegin: pulumi.String("begin_l5"),
//					MatchType:  pulumi.String("pcre"),
//					Offset:     pulumi.Int(1),
//					PktlenMax:  pulumi.Int(1400),
//					PktlenMin:  pulumi.Int(1400),
//					Protocol:   pulumi.String("all"),
//					SportEnd:   pulumi.Int(8080),
//					SportStart: pulumi.Int(8080),
//					Str:        pulumi.String("a"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// antiddos packet_filter_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Antiddos/packetFilterConfig:PacketFilterConfig packet_filter_config packet_filter_config_id
//
// ```
type PacketFilterConfig struct {
	pulumi.CustomResourceState

	// resource id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Feature filtering configuration.
	PacketFilterConfig PacketFilterConfigPacketFilterConfigOutput `pulumi:"packetFilterConfig"`
}

// NewPacketFilterConfig registers a new resource with the given unique name, arguments, and options.
func NewPacketFilterConfig(ctx *pulumi.Context,
	name string, args *PacketFilterConfigArgs, opts ...pulumi.ResourceOption) (*PacketFilterConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PacketFilterConfig == nil {
		return nil, errors.New("invalid value for required argument 'PacketFilterConfig'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource PacketFilterConfig
	err := ctx.RegisterResource("tencentcloud:Antiddos/packetFilterConfig:PacketFilterConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPacketFilterConfig gets an existing PacketFilterConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPacketFilterConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PacketFilterConfigState, opts ...pulumi.ResourceOption) (*PacketFilterConfig, error) {
	var resource PacketFilterConfig
	err := ctx.ReadResource("tencentcloud:Antiddos/packetFilterConfig:PacketFilterConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PacketFilterConfig resources.
type packetFilterConfigState struct {
	// resource id.
	InstanceId *string `pulumi:"instanceId"`
	// Feature filtering configuration.
	PacketFilterConfig *PacketFilterConfigPacketFilterConfig `pulumi:"packetFilterConfig"`
}

type PacketFilterConfigState struct {
	// resource id.
	InstanceId pulumi.StringPtrInput
	// Feature filtering configuration.
	PacketFilterConfig PacketFilterConfigPacketFilterConfigPtrInput
}

func (PacketFilterConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*packetFilterConfigState)(nil)).Elem()
}

type packetFilterConfigArgs struct {
	// resource id.
	InstanceId string `pulumi:"instanceId"`
	// Feature filtering configuration.
	PacketFilterConfig PacketFilterConfigPacketFilterConfig `pulumi:"packetFilterConfig"`
}

// The set of arguments for constructing a PacketFilterConfig resource.
type PacketFilterConfigArgs struct {
	// resource id.
	InstanceId pulumi.StringInput
	// Feature filtering configuration.
	PacketFilterConfig PacketFilterConfigPacketFilterConfigInput
}

func (PacketFilterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packetFilterConfigArgs)(nil)).Elem()
}

type PacketFilterConfigInput interface {
	pulumi.Input

	ToPacketFilterConfigOutput() PacketFilterConfigOutput
	ToPacketFilterConfigOutputWithContext(ctx context.Context) PacketFilterConfigOutput
}

func (*PacketFilterConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketFilterConfig)(nil)).Elem()
}

func (i *PacketFilterConfig) ToPacketFilterConfigOutput() PacketFilterConfigOutput {
	return i.ToPacketFilterConfigOutputWithContext(context.Background())
}

func (i *PacketFilterConfig) ToPacketFilterConfigOutputWithContext(ctx context.Context) PacketFilterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterConfigOutput)
}

// PacketFilterConfigArrayInput is an input type that accepts PacketFilterConfigArray and PacketFilterConfigArrayOutput values.
// You can construct a concrete instance of `PacketFilterConfigArrayInput` via:
//
//	PacketFilterConfigArray{ PacketFilterConfigArgs{...} }
type PacketFilterConfigArrayInput interface {
	pulumi.Input

	ToPacketFilterConfigArrayOutput() PacketFilterConfigArrayOutput
	ToPacketFilterConfigArrayOutputWithContext(context.Context) PacketFilterConfigArrayOutput
}

type PacketFilterConfigArray []PacketFilterConfigInput

func (PacketFilterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PacketFilterConfig)(nil)).Elem()
}

func (i PacketFilterConfigArray) ToPacketFilterConfigArrayOutput() PacketFilterConfigArrayOutput {
	return i.ToPacketFilterConfigArrayOutputWithContext(context.Background())
}

func (i PacketFilterConfigArray) ToPacketFilterConfigArrayOutputWithContext(ctx context.Context) PacketFilterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterConfigArrayOutput)
}

// PacketFilterConfigMapInput is an input type that accepts PacketFilterConfigMap and PacketFilterConfigMapOutput values.
// You can construct a concrete instance of `PacketFilterConfigMapInput` via:
//
//	PacketFilterConfigMap{ "key": PacketFilterConfigArgs{...} }
type PacketFilterConfigMapInput interface {
	pulumi.Input

	ToPacketFilterConfigMapOutput() PacketFilterConfigMapOutput
	ToPacketFilterConfigMapOutputWithContext(context.Context) PacketFilterConfigMapOutput
}

type PacketFilterConfigMap map[string]PacketFilterConfigInput

func (PacketFilterConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PacketFilterConfig)(nil)).Elem()
}

func (i PacketFilterConfigMap) ToPacketFilterConfigMapOutput() PacketFilterConfigMapOutput {
	return i.ToPacketFilterConfigMapOutputWithContext(context.Background())
}

func (i PacketFilterConfigMap) ToPacketFilterConfigMapOutputWithContext(ctx context.Context) PacketFilterConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterConfigMapOutput)
}

type PacketFilterConfigOutput struct{ *pulumi.OutputState }

func (PacketFilterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketFilterConfig)(nil)).Elem()
}

func (o PacketFilterConfigOutput) ToPacketFilterConfigOutput() PacketFilterConfigOutput {
	return o
}

func (o PacketFilterConfigOutput) ToPacketFilterConfigOutputWithContext(ctx context.Context) PacketFilterConfigOutput {
	return o
}

// resource id.
func (o PacketFilterConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PacketFilterConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Feature filtering configuration.
func (o PacketFilterConfigOutput) PacketFilterConfig() PacketFilterConfigPacketFilterConfigOutput {
	return o.ApplyT(func(v *PacketFilterConfig) PacketFilterConfigPacketFilterConfigOutput { return v.PacketFilterConfig }).(PacketFilterConfigPacketFilterConfigOutput)
}

type PacketFilterConfigArrayOutput struct{ *pulumi.OutputState }

func (PacketFilterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PacketFilterConfig)(nil)).Elem()
}

func (o PacketFilterConfigArrayOutput) ToPacketFilterConfigArrayOutput() PacketFilterConfigArrayOutput {
	return o
}

func (o PacketFilterConfigArrayOutput) ToPacketFilterConfigArrayOutputWithContext(ctx context.Context) PacketFilterConfigArrayOutput {
	return o
}

func (o PacketFilterConfigArrayOutput) Index(i pulumi.IntInput) PacketFilterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PacketFilterConfig {
		return vs[0].([]*PacketFilterConfig)[vs[1].(int)]
	}).(PacketFilterConfigOutput)
}

type PacketFilterConfigMapOutput struct{ *pulumi.OutputState }

func (PacketFilterConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PacketFilterConfig)(nil)).Elem()
}

func (o PacketFilterConfigMapOutput) ToPacketFilterConfigMapOutput() PacketFilterConfigMapOutput {
	return o
}

func (o PacketFilterConfigMapOutput) ToPacketFilterConfigMapOutputWithContext(ctx context.Context) PacketFilterConfigMapOutput {
	return o
}

func (o PacketFilterConfigMapOutput) MapIndex(k pulumi.StringInput) PacketFilterConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PacketFilterConfig {
		return vs[0].(map[string]*PacketFilterConfig)[vs[1].(string)]
	}).(PacketFilterConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PacketFilterConfigInput)(nil)).Elem(), &PacketFilterConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*PacketFilterConfigArrayInput)(nil)).Elem(), PacketFilterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PacketFilterConfigMapInput)(nil)).Elem(), PacketFilterConfigMap{})
	pulumi.RegisterOutputType(PacketFilterConfigOutput{})
	pulumi.RegisterOutputType(PacketFilterConfigArrayOutput{})
	pulumi.RegisterOutputType(PacketFilterConfigMapOutput{})
}
