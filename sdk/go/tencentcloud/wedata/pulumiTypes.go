// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wedata

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BaselineAlarmRuleDto struct {
	// Important;Urgent;Normal.
	AlarmLevelType *string `pulumi:"alarmLevelType"`
	// Alarm Rule ID.
	AlarmRuleId *string `pulumi:"alarmRuleId"`
}

// BaselineAlarmRuleDtoInput is an input type that accepts BaselineAlarmRuleDtoArgs and BaselineAlarmRuleDtoOutput values.
// You can construct a concrete instance of `BaselineAlarmRuleDtoInput` via:
//
//	BaselineAlarmRuleDtoArgs{...}
type BaselineAlarmRuleDtoInput interface {
	pulumi.Input

	ToBaselineAlarmRuleDtoOutput() BaselineAlarmRuleDtoOutput
	ToBaselineAlarmRuleDtoOutputWithContext(context.Context) BaselineAlarmRuleDtoOutput
}

type BaselineAlarmRuleDtoArgs struct {
	// Important;Urgent;Normal.
	AlarmLevelType pulumi.StringPtrInput `pulumi:"alarmLevelType"`
	// Alarm Rule ID.
	AlarmRuleId pulumi.StringPtrInput `pulumi:"alarmRuleId"`
}

func (BaselineAlarmRuleDtoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaselineAlarmRuleDto)(nil)).Elem()
}

func (i BaselineAlarmRuleDtoArgs) ToBaselineAlarmRuleDtoOutput() BaselineAlarmRuleDtoOutput {
	return i.ToBaselineAlarmRuleDtoOutputWithContext(context.Background())
}

func (i BaselineAlarmRuleDtoArgs) ToBaselineAlarmRuleDtoOutputWithContext(ctx context.Context) BaselineAlarmRuleDtoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineAlarmRuleDtoOutput)
}

func (i BaselineAlarmRuleDtoArgs) ToBaselineAlarmRuleDtoPtrOutput() BaselineAlarmRuleDtoPtrOutput {
	return i.ToBaselineAlarmRuleDtoPtrOutputWithContext(context.Background())
}

func (i BaselineAlarmRuleDtoArgs) ToBaselineAlarmRuleDtoPtrOutputWithContext(ctx context.Context) BaselineAlarmRuleDtoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineAlarmRuleDtoOutput).ToBaselineAlarmRuleDtoPtrOutputWithContext(ctx)
}

// BaselineAlarmRuleDtoPtrInput is an input type that accepts BaselineAlarmRuleDtoArgs, BaselineAlarmRuleDtoPtr and BaselineAlarmRuleDtoPtrOutput values.
// You can construct a concrete instance of `BaselineAlarmRuleDtoPtrInput` via:
//
//	        BaselineAlarmRuleDtoArgs{...}
//
//	or:
//
//	        nil
type BaselineAlarmRuleDtoPtrInput interface {
	pulumi.Input

	ToBaselineAlarmRuleDtoPtrOutput() BaselineAlarmRuleDtoPtrOutput
	ToBaselineAlarmRuleDtoPtrOutputWithContext(context.Context) BaselineAlarmRuleDtoPtrOutput
}

type baselineAlarmRuleDtoPtrType BaselineAlarmRuleDtoArgs

func BaselineAlarmRuleDtoPtr(v *BaselineAlarmRuleDtoArgs) BaselineAlarmRuleDtoPtrInput {
	return (*baselineAlarmRuleDtoPtrType)(v)
}

func (*baselineAlarmRuleDtoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaselineAlarmRuleDto)(nil)).Elem()
}

func (i *baselineAlarmRuleDtoPtrType) ToBaselineAlarmRuleDtoPtrOutput() BaselineAlarmRuleDtoPtrOutput {
	return i.ToBaselineAlarmRuleDtoPtrOutputWithContext(context.Background())
}

func (i *baselineAlarmRuleDtoPtrType) ToBaselineAlarmRuleDtoPtrOutputWithContext(ctx context.Context) BaselineAlarmRuleDtoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineAlarmRuleDtoPtrOutput)
}

type BaselineAlarmRuleDtoOutput struct{ *pulumi.OutputState }

func (BaselineAlarmRuleDtoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaselineAlarmRuleDto)(nil)).Elem()
}

func (o BaselineAlarmRuleDtoOutput) ToBaselineAlarmRuleDtoOutput() BaselineAlarmRuleDtoOutput {
	return o
}

func (o BaselineAlarmRuleDtoOutput) ToBaselineAlarmRuleDtoOutputWithContext(ctx context.Context) BaselineAlarmRuleDtoOutput {
	return o
}

func (o BaselineAlarmRuleDtoOutput) ToBaselineAlarmRuleDtoPtrOutput() BaselineAlarmRuleDtoPtrOutput {
	return o.ToBaselineAlarmRuleDtoPtrOutputWithContext(context.Background())
}

func (o BaselineAlarmRuleDtoOutput) ToBaselineAlarmRuleDtoPtrOutputWithContext(ctx context.Context) BaselineAlarmRuleDtoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaselineAlarmRuleDto) *BaselineAlarmRuleDto {
		return &v
	}).(BaselineAlarmRuleDtoPtrOutput)
}

// Important;Urgent;Normal.
func (o BaselineAlarmRuleDtoOutput) AlarmLevelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineAlarmRuleDto) *string { return v.AlarmLevelType }).(pulumi.StringPtrOutput)
}

// Alarm Rule ID.
func (o BaselineAlarmRuleDtoOutput) AlarmRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineAlarmRuleDto) *string { return v.AlarmRuleId }).(pulumi.StringPtrOutput)
}

type BaselineAlarmRuleDtoPtrOutput struct{ *pulumi.OutputState }

func (BaselineAlarmRuleDtoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaselineAlarmRuleDto)(nil)).Elem()
}

func (o BaselineAlarmRuleDtoPtrOutput) ToBaselineAlarmRuleDtoPtrOutput() BaselineAlarmRuleDtoPtrOutput {
	return o
}

func (o BaselineAlarmRuleDtoPtrOutput) ToBaselineAlarmRuleDtoPtrOutputWithContext(ctx context.Context) BaselineAlarmRuleDtoPtrOutput {
	return o
}

func (o BaselineAlarmRuleDtoPtrOutput) Elem() BaselineAlarmRuleDtoOutput {
	return o.ApplyT(func(v *BaselineAlarmRuleDto) BaselineAlarmRuleDto {
		if v != nil {
			return *v
		}
		var ret BaselineAlarmRuleDto
		return ret
	}).(BaselineAlarmRuleDtoOutput)
}

// Important;Urgent;Normal.
func (o BaselineAlarmRuleDtoPtrOutput) AlarmLevelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineAlarmRuleDto) *string {
		if v == nil {
			return nil
		}
		return v.AlarmLevelType
	}).(pulumi.StringPtrOutput)
}

// Alarm Rule ID.
func (o BaselineAlarmRuleDtoPtrOutput) AlarmRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineAlarmRuleDto) *string {
		if v == nil {
			return nil
		}
		return v.AlarmRuleId
	}).(pulumi.StringPtrOutput)
}

type BaselineBaselineCreateAlarmRuleRequest struct {
	// Alarm Level, 1. Normal, 2. Important, 3. Urgent (default is 1. Normal)Note: This field may return null, indicating no valid value.
	AlarmLevel *int `pulumi:"alarmLevel"`
	// Alarm Recipient IDsNote: This field may return null, indicating no valid value.
	AlarmRecipientIds []string `pulumi:"alarmRecipientIds"`
	// Alarm Recipient Type: 1. Specified Personnel, 2. Task Owner, 3. Duty Roster (default is 1. Specified Personnel)Note: This field may return null, indicating no valid value.
	AlarmRecipientType *int `pulumi:"alarmRecipientType"`
	// Alarm RecipientsNote: This field may return null, indicating no valid value.
	AlarmRecipients []string `pulumi:"alarmRecipients"`
	// Alarm Types, 1. Failure Alarm, 2. Timeout Alarm, 3. Success Alarm, 4. Baseline Violation, 5. Baseline Warning, 6. Baseline Task Failure (default is 1. Failure Alarm)Note: This field may return null, indicating no valid value.
	AlarmTypes []string `pulumi:"alarmTypes"`
	// Alarm Methods, 1. Email, 2. SMS, 3. WeChat, 4. Voice, 5. Enterprise WeChat, 6. HTTP, 7. Enterprise WeChat Group; Alarm method code list (default is 1. Email)Note: This field may return null, indicating no valid value.
	AlarmWays []string `pulumi:"alarmWays"`
	// Creator UINNote: This field may return null, indicating no valid value.
	Creator *string `pulumi:"creator"`
	// Creator NameNote: This field may return null, indicating no valid value.
	CreatorId *string `pulumi:"creatorId"`
	// Extended Information, 1. Estimated Runtime (default), 2. Estimated Completion Time, 3. Estimated Scheduling Time, 4. Incomplete within the Cycle; Value Types: 1. Specified Value, 2. Historical Average (default is 1. Specified Value)Note: This field may return null, indicating no valid value.
	ExtInfo *string `pulumi:"extInfo"`
	// Monitoring ObjectsNote: This field may return null, indicating no valid value.
	MonitorObjectIds []string `pulumi:"monitorObjectIds"`
	// Monitoring Type, 1. Task, 2. Workflow, 3. Project, 4. Baseline (default is 1. Task)Note: This field may return null, indicating no valid value.
	MonitorType *int `pulumi:"monitorType"`
	// Project NameNote: This field may return null, indicating no valid value.
	ProjectId *string `pulumi:"projectId"`
	// Rule NameNote: This field may return null, indicating no valid value.
	RuleName *string `pulumi:"ruleName"`
}

// BaselineBaselineCreateAlarmRuleRequestInput is an input type that accepts BaselineBaselineCreateAlarmRuleRequestArgs and BaselineBaselineCreateAlarmRuleRequestOutput values.
// You can construct a concrete instance of `BaselineBaselineCreateAlarmRuleRequestInput` via:
//
//	BaselineBaselineCreateAlarmRuleRequestArgs{...}
type BaselineBaselineCreateAlarmRuleRequestInput interface {
	pulumi.Input

	ToBaselineBaselineCreateAlarmRuleRequestOutput() BaselineBaselineCreateAlarmRuleRequestOutput
	ToBaselineBaselineCreateAlarmRuleRequestOutputWithContext(context.Context) BaselineBaselineCreateAlarmRuleRequestOutput
}

type BaselineBaselineCreateAlarmRuleRequestArgs struct {
	// Alarm Level, 1. Normal, 2. Important, 3. Urgent (default is 1. Normal)Note: This field may return null, indicating no valid value.
	AlarmLevel pulumi.IntPtrInput `pulumi:"alarmLevel"`
	// Alarm Recipient IDsNote: This field may return null, indicating no valid value.
	AlarmRecipientIds pulumi.StringArrayInput `pulumi:"alarmRecipientIds"`
	// Alarm Recipient Type: 1. Specified Personnel, 2. Task Owner, 3. Duty Roster (default is 1. Specified Personnel)Note: This field may return null, indicating no valid value.
	AlarmRecipientType pulumi.IntPtrInput `pulumi:"alarmRecipientType"`
	// Alarm RecipientsNote: This field may return null, indicating no valid value.
	AlarmRecipients pulumi.StringArrayInput `pulumi:"alarmRecipients"`
	// Alarm Types, 1. Failure Alarm, 2. Timeout Alarm, 3. Success Alarm, 4. Baseline Violation, 5. Baseline Warning, 6. Baseline Task Failure (default is 1. Failure Alarm)Note: This field may return null, indicating no valid value.
	AlarmTypes pulumi.StringArrayInput `pulumi:"alarmTypes"`
	// Alarm Methods, 1. Email, 2. SMS, 3. WeChat, 4. Voice, 5. Enterprise WeChat, 6. HTTP, 7. Enterprise WeChat Group; Alarm method code list (default is 1. Email)Note: This field may return null, indicating no valid value.
	AlarmWays pulumi.StringArrayInput `pulumi:"alarmWays"`
	// Creator UINNote: This field may return null, indicating no valid value.
	Creator pulumi.StringPtrInput `pulumi:"creator"`
	// Creator NameNote: This field may return null, indicating no valid value.
	CreatorId pulumi.StringPtrInput `pulumi:"creatorId"`
	// Extended Information, 1. Estimated Runtime (default), 2. Estimated Completion Time, 3. Estimated Scheduling Time, 4. Incomplete within the Cycle; Value Types: 1. Specified Value, 2. Historical Average (default is 1. Specified Value)Note: This field may return null, indicating no valid value.
	ExtInfo pulumi.StringPtrInput `pulumi:"extInfo"`
	// Monitoring ObjectsNote: This field may return null, indicating no valid value.
	MonitorObjectIds pulumi.StringArrayInput `pulumi:"monitorObjectIds"`
	// Monitoring Type, 1. Task, 2. Workflow, 3. Project, 4. Baseline (default is 1. Task)Note: This field may return null, indicating no valid value.
	MonitorType pulumi.IntPtrInput `pulumi:"monitorType"`
	// Project NameNote: This field may return null, indicating no valid value.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Rule NameNote: This field may return null, indicating no valid value.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
}

func (BaselineBaselineCreateAlarmRuleRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaselineBaselineCreateAlarmRuleRequest)(nil)).Elem()
}

func (i BaselineBaselineCreateAlarmRuleRequestArgs) ToBaselineBaselineCreateAlarmRuleRequestOutput() BaselineBaselineCreateAlarmRuleRequestOutput {
	return i.ToBaselineBaselineCreateAlarmRuleRequestOutputWithContext(context.Background())
}

func (i BaselineBaselineCreateAlarmRuleRequestArgs) ToBaselineBaselineCreateAlarmRuleRequestOutputWithContext(ctx context.Context) BaselineBaselineCreateAlarmRuleRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineBaselineCreateAlarmRuleRequestOutput)
}

func (i BaselineBaselineCreateAlarmRuleRequestArgs) ToBaselineBaselineCreateAlarmRuleRequestPtrOutput() BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return i.ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(context.Background())
}

func (i BaselineBaselineCreateAlarmRuleRequestArgs) ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(ctx context.Context) BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineBaselineCreateAlarmRuleRequestOutput).ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(ctx)
}

// BaselineBaselineCreateAlarmRuleRequestPtrInput is an input type that accepts BaselineBaselineCreateAlarmRuleRequestArgs, BaselineBaselineCreateAlarmRuleRequestPtr and BaselineBaselineCreateAlarmRuleRequestPtrOutput values.
// You can construct a concrete instance of `BaselineBaselineCreateAlarmRuleRequestPtrInput` via:
//
//	        BaselineBaselineCreateAlarmRuleRequestArgs{...}
//
//	or:
//
//	        nil
type BaselineBaselineCreateAlarmRuleRequestPtrInput interface {
	pulumi.Input

	ToBaselineBaselineCreateAlarmRuleRequestPtrOutput() BaselineBaselineCreateAlarmRuleRequestPtrOutput
	ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(context.Context) BaselineBaselineCreateAlarmRuleRequestPtrOutput
}

type baselineBaselineCreateAlarmRuleRequestPtrType BaselineBaselineCreateAlarmRuleRequestArgs

func BaselineBaselineCreateAlarmRuleRequestPtr(v *BaselineBaselineCreateAlarmRuleRequestArgs) BaselineBaselineCreateAlarmRuleRequestPtrInput {
	return (*baselineBaselineCreateAlarmRuleRequestPtrType)(v)
}

func (*baselineBaselineCreateAlarmRuleRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaselineBaselineCreateAlarmRuleRequest)(nil)).Elem()
}

func (i *baselineBaselineCreateAlarmRuleRequestPtrType) ToBaselineBaselineCreateAlarmRuleRequestPtrOutput() BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return i.ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(context.Background())
}

func (i *baselineBaselineCreateAlarmRuleRequestPtrType) ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(ctx context.Context) BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineBaselineCreateAlarmRuleRequestPtrOutput)
}

type BaselineBaselineCreateAlarmRuleRequestOutput struct{ *pulumi.OutputState }

func (BaselineBaselineCreateAlarmRuleRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaselineBaselineCreateAlarmRuleRequest)(nil)).Elem()
}

func (o BaselineBaselineCreateAlarmRuleRequestOutput) ToBaselineBaselineCreateAlarmRuleRequestOutput() BaselineBaselineCreateAlarmRuleRequestOutput {
	return o
}

func (o BaselineBaselineCreateAlarmRuleRequestOutput) ToBaselineBaselineCreateAlarmRuleRequestOutputWithContext(ctx context.Context) BaselineBaselineCreateAlarmRuleRequestOutput {
	return o
}

func (o BaselineBaselineCreateAlarmRuleRequestOutput) ToBaselineBaselineCreateAlarmRuleRequestPtrOutput() BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return o.ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(context.Background())
}

func (o BaselineBaselineCreateAlarmRuleRequestOutput) ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(ctx context.Context) BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaselineBaselineCreateAlarmRuleRequest) *BaselineBaselineCreateAlarmRuleRequest {
		return &v
	}).(BaselineBaselineCreateAlarmRuleRequestPtrOutput)
}

// Alarm Level, 1. Normal, 2. Important, 3. Urgent (default is 1. Normal)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) AlarmLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *int { return v.AlarmLevel }).(pulumi.IntPtrOutput)
}

// Alarm Recipient IDsNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) AlarmRecipientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) []string { return v.AlarmRecipientIds }).(pulumi.StringArrayOutput)
}

// Alarm Recipient Type: 1. Specified Personnel, 2. Task Owner, 3. Duty Roster (default is 1. Specified Personnel)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) AlarmRecipientType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *int { return v.AlarmRecipientType }).(pulumi.IntPtrOutput)
}

// Alarm RecipientsNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) AlarmRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) []string { return v.AlarmRecipients }).(pulumi.StringArrayOutput)
}

// Alarm Types, 1. Failure Alarm, 2. Timeout Alarm, 3. Success Alarm, 4. Baseline Violation, 5. Baseline Warning, 6. Baseline Task Failure (default is 1. Failure Alarm)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) AlarmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) []string { return v.AlarmTypes }).(pulumi.StringArrayOutput)
}

// Alarm Methods, 1. Email, 2. SMS, 3. WeChat, 4. Voice, 5. Enterprise WeChat, 6. HTTP, 7. Enterprise WeChat Group; Alarm method code list (default is 1. Email)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) AlarmWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) []string { return v.AlarmWays }).(pulumi.StringArrayOutput)
}

// Creator UINNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) Creator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *string { return v.Creator }).(pulumi.StringPtrOutput)
}

// Creator NameNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) CreatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *string { return v.CreatorId }).(pulumi.StringPtrOutput)
}

// Extended Information, 1. Estimated Runtime (default), 2. Estimated Completion Time, 3. Estimated Scheduling Time, 4. Incomplete within the Cycle; Value Types: 1. Specified Value, 2. Historical Average (default is 1. Specified Value)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) ExtInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *string { return v.ExtInfo }).(pulumi.StringPtrOutput)
}

// Monitoring ObjectsNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) MonitorObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) []string { return v.MonitorObjectIds }).(pulumi.StringArrayOutput)
}

// Monitoring Type, 1. Task, 2. Workflow, 3. Project, 4. Baseline (default is 1. Task)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) MonitorType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *int { return v.MonitorType }).(pulumi.IntPtrOutput)
}

// Project NameNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Rule NameNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselineBaselineCreateAlarmRuleRequest) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

type BaselineBaselineCreateAlarmRuleRequestPtrOutput struct{ *pulumi.OutputState }

func (BaselineBaselineCreateAlarmRuleRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaselineBaselineCreateAlarmRuleRequest)(nil)).Elem()
}

func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) ToBaselineBaselineCreateAlarmRuleRequestPtrOutput() BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return o
}

func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) ToBaselineBaselineCreateAlarmRuleRequestPtrOutputWithContext(ctx context.Context) BaselineBaselineCreateAlarmRuleRequestPtrOutput {
	return o
}

func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) Elem() BaselineBaselineCreateAlarmRuleRequestOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) BaselineBaselineCreateAlarmRuleRequest {
		if v != nil {
			return *v
		}
		var ret BaselineBaselineCreateAlarmRuleRequest
		return ret
	}).(BaselineBaselineCreateAlarmRuleRequestOutput)
}

// Alarm Level, 1. Normal, 2. Important, 3. Urgent (default is 1. Normal)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) AlarmLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *int {
		if v == nil {
			return nil
		}
		return v.AlarmLevel
	}).(pulumi.IntPtrOutput)
}

// Alarm Recipient IDsNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) AlarmRecipientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) []string {
		if v == nil {
			return nil
		}
		return v.AlarmRecipientIds
	}).(pulumi.StringArrayOutput)
}

// Alarm Recipient Type: 1. Specified Personnel, 2. Task Owner, 3. Duty Roster (default is 1. Specified Personnel)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) AlarmRecipientType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *int {
		if v == nil {
			return nil
		}
		return v.AlarmRecipientType
	}).(pulumi.IntPtrOutput)
}

// Alarm RecipientsNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) AlarmRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) []string {
		if v == nil {
			return nil
		}
		return v.AlarmRecipients
	}).(pulumi.StringArrayOutput)
}

// Alarm Types, 1. Failure Alarm, 2. Timeout Alarm, 3. Success Alarm, 4. Baseline Violation, 5. Baseline Warning, 6. Baseline Task Failure (default is 1. Failure Alarm)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) AlarmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) []string {
		if v == nil {
			return nil
		}
		return v.AlarmTypes
	}).(pulumi.StringArrayOutput)
}

// Alarm Methods, 1. Email, 2. SMS, 3. WeChat, 4. Voice, 5. Enterprise WeChat, 6. HTTP, 7. Enterprise WeChat Group; Alarm method code list (default is 1. Email)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) AlarmWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) []string {
		if v == nil {
			return nil
		}
		return v.AlarmWays
	}).(pulumi.StringArrayOutput)
}

// Creator UINNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) Creator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *string {
		if v == nil {
			return nil
		}
		return v.Creator
	}).(pulumi.StringPtrOutput)
}

// Creator NameNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) CreatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *string {
		if v == nil {
			return nil
		}
		return v.CreatorId
	}).(pulumi.StringPtrOutput)
}

// Extended Information, 1. Estimated Runtime (default), 2. Estimated Completion Time, 3. Estimated Scheduling Time, 4. Incomplete within the Cycle; Value Types: 1. Specified Value, 2. Historical Average (default is 1. Specified Value)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) ExtInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *string {
		if v == nil {
			return nil
		}
		return v.ExtInfo
	}).(pulumi.StringPtrOutput)
}

// Monitoring ObjectsNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) MonitorObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) []string {
		if v == nil {
			return nil
		}
		return v.MonitorObjectIds
	}).(pulumi.StringArrayOutput)
}

// Monitoring Type, 1. Task, 2. Workflow, 3. Project, 4. Baseline (default is 1. Task)Note: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) MonitorType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *int {
		if v == nil {
			return nil
		}
		return v.MonitorType
	}).(pulumi.IntPtrOutput)
}

// Project NameNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Rule NameNote: This field may return null, indicating no valid value.
func (o BaselineBaselineCreateAlarmRuleRequestPtrOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaselineBaselineCreateAlarmRuleRequest) *string {
		if v == nil {
			return nil
		}
		return v.RuleName
	}).(pulumi.StringPtrOutput)
}

type BaselinePromiseTask struct {
	// Project ID.
	ProjectId *string `pulumi:"projectId"`
	// Task Scheduling Cycle.
	TaskCycle *string `pulumi:"taskCycle"`
	// Task ID.
	TaskId *string `pulumi:"taskId"`
	// Task Owner Name.
	TaskInChargeName *string `pulumi:"taskInChargeName"`
	// Task Owner ID.
	TaskInChargeUin *string `pulumi:"taskInChargeUin"`
	// Task Name.
	TaskName *string `pulumi:"taskName"`
	// Workflow ID.
	WorkflowId *string `pulumi:"workflowId"`
	// Workflow Name.
	WorkflowName *string `pulumi:"workflowName"`
}

// BaselinePromiseTaskInput is an input type that accepts BaselinePromiseTaskArgs and BaselinePromiseTaskOutput values.
// You can construct a concrete instance of `BaselinePromiseTaskInput` via:
//
//	BaselinePromiseTaskArgs{...}
type BaselinePromiseTaskInput interface {
	pulumi.Input

	ToBaselinePromiseTaskOutput() BaselinePromiseTaskOutput
	ToBaselinePromiseTaskOutputWithContext(context.Context) BaselinePromiseTaskOutput
}

type BaselinePromiseTaskArgs struct {
	// Project ID.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Task Scheduling Cycle.
	TaskCycle pulumi.StringPtrInput `pulumi:"taskCycle"`
	// Task ID.
	TaskId pulumi.StringPtrInput `pulumi:"taskId"`
	// Task Owner Name.
	TaskInChargeName pulumi.StringPtrInput `pulumi:"taskInChargeName"`
	// Task Owner ID.
	TaskInChargeUin pulumi.StringPtrInput `pulumi:"taskInChargeUin"`
	// Task Name.
	TaskName pulumi.StringPtrInput `pulumi:"taskName"`
	// Workflow ID.
	WorkflowId pulumi.StringPtrInput `pulumi:"workflowId"`
	// Workflow Name.
	WorkflowName pulumi.StringPtrInput `pulumi:"workflowName"`
}

func (BaselinePromiseTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaselinePromiseTask)(nil)).Elem()
}

func (i BaselinePromiseTaskArgs) ToBaselinePromiseTaskOutput() BaselinePromiseTaskOutput {
	return i.ToBaselinePromiseTaskOutputWithContext(context.Background())
}

func (i BaselinePromiseTaskArgs) ToBaselinePromiseTaskOutputWithContext(ctx context.Context) BaselinePromiseTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselinePromiseTaskOutput)
}

// BaselinePromiseTaskArrayInput is an input type that accepts BaselinePromiseTaskArray and BaselinePromiseTaskArrayOutput values.
// You can construct a concrete instance of `BaselinePromiseTaskArrayInput` via:
//
//	BaselinePromiseTaskArray{ BaselinePromiseTaskArgs{...} }
type BaselinePromiseTaskArrayInput interface {
	pulumi.Input

	ToBaselinePromiseTaskArrayOutput() BaselinePromiseTaskArrayOutput
	ToBaselinePromiseTaskArrayOutputWithContext(context.Context) BaselinePromiseTaskArrayOutput
}

type BaselinePromiseTaskArray []BaselinePromiseTaskInput

func (BaselinePromiseTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaselinePromiseTask)(nil)).Elem()
}

func (i BaselinePromiseTaskArray) ToBaselinePromiseTaskArrayOutput() BaselinePromiseTaskArrayOutput {
	return i.ToBaselinePromiseTaskArrayOutputWithContext(context.Background())
}

func (i BaselinePromiseTaskArray) ToBaselinePromiseTaskArrayOutputWithContext(ctx context.Context) BaselinePromiseTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselinePromiseTaskArrayOutput)
}

type BaselinePromiseTaskOutput struct{ *pulumi.OutputState }

func (BaselinePromiseTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaselinePromiseTask)(nil)).Elem()
}

func (o BaselinePromiseTaskOutput) ToBaselinePromiseTaskOutput() BaselinePromiseTaskOutput {
	return o
}

func (o BaselinePromiseTaskOutput) ToBaselinePromiseTaskOutputWithContext(ctx context.Context) BaselinePromiseTaskOutput {
	return o
}

// Project ID.
func (o BaselinePromiseTaskOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Task Scheduling Cycle.
func (o BaselinePromiseTaskOutput) TaskCycle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.TaskCycle }).(pulumi.StringPtrOutput)
}

// Task ID.
func (o BaselinePromiseTaskOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.TaskId }).(pulumi.StringPtrOutput)
}

// Task Owner Name.
func (o BaselinePromiseTaskOutput) TaskInChargeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.TaskInChargeName }).(pulumi.StringPtrOutput)
}

// Task Owner ID.
func (o BaselinePromiseTaskOutput) TaskInChargeUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.TaskInChargeUin }).(pulumi.StringPtrOutput)
}

// Task Name.
func (o BaselinePromiseTaskOutput) TaskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.TaskName }).(pulumi.StringPtrOutput)
}

// Workflow ID.
func (o BaselinePromiseTaskOutput) WorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.WorkflowId }).(pulumi.StringPtrOutput)
}

// Workflow Name.
func (o BaselinePromiseTaskOutput) WorkflowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaselinePromiseTask) *string { return v.WorkflowName }).(pulumi.StringPtrOutput)
}

type BaselinePromiseTaskArrayOutput struct{ *pulumi.OutputState }

func (BaselinePromiseTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaselinePromiseTask)(nil)).Elem()
}

func (o BaselinePromiseTaskArrayOutput) ToBaselinePromiseTaskArrayOutput() BaselinePromiseTaskArrayOutput {
	return o
}

func (o BaselinePromiseTaskArrayOutput) ToBaselinePromiseTaskArrayOutputWithContext(ctx context.Context) BaselinePromiseTaskArrayOutput {
	return o
}

func (o BaselinePromiseTaskArrayOutput) Index(i pulumi.IntInput) BaselinePromiseTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaselinePromiseTask {
		return vs[0].([]BaselinePromiseTask)[vs[1].(int)]
	}).(BaselinePromiseTaskOutput)
}

type DqRuleCompareRule struct {
	// Periodic Indicates the default period of a template, in secondsNote: This field may return null, indicating that a valid value cannot be obtained.
	CycleStep *int `pulumi:"cycleStep"`
	// Comparison condition listNote: This field may return null, indicating that a valid value cannot be obtained.
	Items []DqRuleCompareRuleItem `pulumi:"items"`
}

// DqRuleCompareRuleInput is an input type that accepts DqRuleCompareRuleArgs and DqRuleCompareRuleOutput values.
// You can construct a concrete instance of `DqRuleCompareRuleInput` via:
//
//	DqRuleCompareRuleArgs{...}
type DqRuleCompareRuleInput interface {
	pulumi.Input

	ToDqRuleCompareRuleOutput() DqRuleCompareRuleOutput
	ToDqRuleCompareRuleOutputWithContext(context.Context) DqRuleCompareRuleOutput
}

type DqRuleCompareRuleArgs struct {
	// Periodic Indicates the default period of a template, in secondsNote: This field may return null, indicating that a valid value cannot be obtained.
	CycleStep pulumi.IntPtrInput `pulumi:"cycleStep"`
	// Comparison condition listNote: This field may return null, indicating that a valid value cannot be obtained.
	Items DqRuleCompareRuleItemArrayInput `pulumi:"items"`
}

func (DqRuleCompareRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleCompareRule)(nil)).Elem()
}

func (i DqRuleCompareRuleArgs) ToDqRuleCompareRuleOutput() DqRuleCompareRuleOutput {
	return i.ToDqRuleCompareRuleOutputWithContext(context.Background())
}

func (i DqRuleCompareRuleArgs) ToDqRuleCompareRuleOutputWithContext(ctx context.Context) DqRuleCompareRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRuleOutput)
}

func (i DqRuleCompareRuleArgs) ToDqRuleCompareRulePtrOutput() DqRuleCompareRulePtrOutput {
	return i.ToDqRuleCompareRulePtrOutputWithContext(context.Background())
}

func (i DqRuleCompareRuleArgs) ToDqRuleCompareRulePtrOutputWithContext(ctx context.Context) DqRuleCompareRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRuleOutput).ToDqRuleCompareRulePtrOutputWithContext(ctx)
}

// DqRuleCompareRulePtrInput is an input type that accepts DqRuleCompareRuleArgs, DqRuleCompareRulePtr and DqRuleCompareRulePtrOutput values.
// You can construct a concrete instance of `DqRuleCompareRulePtrInput` via:
//
//	        DqRuleCompareRuleArgs{...}
//
//	or:
//
//	        nil
type DqRuleCompareRulePtrInput interface {
	pulumi.Input

	ToDqRuleCompareRulePtrOutput() DqRuleCompareRulePtrOutput
	ToDqRuleCompareRulePtrOutputWithContext(context.Context) DqRuleCompareRulePtrOutput
}

type dqRuleCompareRulePtrType DqRuleCompareRuleArgs

func DqRuleCompareRulePtr(v *DqRuleCompareRuleArgs) DqRuleCompareRulePtrInput {
	return (*dqRuleCompareRulePtrType)(v)
}

func (*dqRuleCompareRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DqRuleCompareRule)(nil)).Elem()
}

func (i *dqRuleCompareRulePtrType) ToDqRuleCompareRulePtrOutput() DqRuleCompareRulePtrOutput {
	return i.ToDqRuleCompareRulePtrOutputWithContext(context.Background())
}

func (i *dqRuleCompareRulePtrType) ToDqRuleCompareRulePtrOutputWithContext(ctx context.Context) DqRuleCompareRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRulePtrOutput)
}

type DqRuleCompareRuleOutput struct{ *pulumi.OutputState }

func (DqRuleCompareRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleCompareRule)(nil)).Elem()
}

func (o DqRuleCompareRuleOutput) ToDqRuleCompareRuleOutput() DqRuleCompareRuleOutput {
	return o
}

func (o DqRuleCompareRuleOutput) ToDqRuleCompareRuleOutputWithContext(ctx context.Context) DqRuleCompareRuleOutput {
	return o
}

func (o DqRuleCompareRuleOutput) ToDqRuleCompareRulePtrOutput() DqRuleCompareRulePtrOutput {
	return o.ToDqRuleCompareRulePtrOutputWithContext(context.Background())
}

func (o DqRuleCompareRuleOutput) ToDqRuleCompareRulePtrOutputWithContext(ctx context.Context) DqRuleCompareRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DqRuleCompareRule) *DqRuleCompareRule {
		return &v
	}).(DqRuleCompareRulePtrOutput)
}

// Periodic Indicates the default period of a template, in secondsNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleOutput) CycleStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DqRuleCompareRule) *int { return v.CycleStep }).(pulumi.IntPtrOutput)
}

// Comparison condition listNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleOutput) Items() DqRuleCompareRuleItemArrayOutput {
	return o.ApplyT(func(v DqRuleCompareRule) []DqRuleCompareRuleItem { return v.Items }).(DqRuleCompareRuleItemArrayOutput)
}

type DqRuleCompareRulePtrOutput struct{ *pulumi.OutputState }

func (DqRuleCompareRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DqRuleCompareRule)(nil)).Elem()
}

func (o DqRuleCompareRulePtrOutput) ToDqRuleCompareRulePtrOutput() DqRuleCompareRulePtrOutput {
	return o
}

func (o DqRuleCompareRulePtrOutput) ToDqRuleCompareRulePtrOutputWithContext(ctx context.Context) DqRuleCompareRulePtrOutput {
	return o
}

func (o DqRuleCompareRulePtrOutput) Elem() DqRuleCompareRuleOutput {
	return o.ApplyT(func(v *DqRuleCompareRule) DqRuleCompareRule {
		if v != nil {
			return *v
		}
		var ret DqRuleCompareRule
		return ret
	}).(DqRuleCompareRuleOutput)
}

// Periodic Indicates the default period of a template, in secondsNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRulePtrOutput) CycleStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DqRuleCompareRule) *int {
		if v == nil {
			return nil
		}
		return v.CycleStep
	}).(pulumi.IntPtrOutput)
}

// Comparison condition listNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRulePtrOutput) Items() DqRuleCompareRuleItemArrayOutput {
	return o.ApplyT(func(v *DqRuleCompareRule) []DqRuleCompareRuleItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(DqRuleCompareRuleItemArrayOutput)
}

type DqRuleCompareRuleItem struct {
	// Comparison type 1. Fixed value 2. Fluctuating value 3. Comparison of value range 4. Enumeration range comparison 5. Do not compareNote: This field may return null, indicating that a valid value cannot be obtained.
	CompareType *int `pulumi:"compareType"`
	// Comparison operation type &amp;lt; &amp;lt;= == =&amp;gt; &amp;gt;Note: This field may return null, indicating that a valid value cannot be obtained.
	Operator *string `pulumi:"operator"`
	// Quality statistics Type 1. Absolute value 2. Increase 3. Decrease 4. C contains 5. N C does not containNote: This field may return null, indicating that a valid value cannot be obtained.
	ValueComputeType *int `pulumi:"valueComputeType"`
	// Compare the threshold listNote: This field may return null, indicating that a valid value cannot be obtained.
	ValueLists []DqRuleCompareRuleItemValueList `pulumi:"valueLists"`
}

// DqRuleCompareRuleItemInput is an input type that accepts DqRuleCompareRuleItemArgs and DqRuleCompareRuleItemOutput values.
// You can construct a concrete instance of `DqRuleCompareRuleItemInput` via:
//
//	DqRuleCompareRuleItemArgs{...}
type DqRuleCompareRuleItemInput interface {
	pulumi.Input

	ToDqRuleCompareRuleItemOutput() DqRuleCompareRuleItemOutput
	ToDqRuleCompareRuleItemOutputWithContext(context.Context) DqRuleCompareRuleItemOutput
}

type DqRuleCompareRuleItemArgs struct {
	// Comparison type 1. Fixed value 2. Fluctuating value 3. Comparison of value range 4. Enumeration range comparison 5. Do not compareNote: This field may return null, indicating that a valid value cannot be obtained.
	CompareType pulumi.IntPtrInput `pulumi:"compareType"`
	// Comparison operation type &amp;lt; &amp;lt;= == =&amp;gt; &amp;gt;Note: This field may return null, indicating that a valid value cannot be obtained.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Quality statistics Type 1. Absolute value 2. Increase 3. Decrease 4. C contains 5. N C does not containNote: This field may return null, indicating that a valid value cannot be obtained.
	ValueComputeType pulumi.IntPtrInput `pulumi:"valueComputeType"`
	// Compare the threshold listNote: This field may return null, indicating that a valid value cannot be obtained.
	ValueLists DqRuleCompareRuleItemValueListArrayInput `pulumi:"valueLists"`
}

func (DqRuleCompareRuleItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleCompareRuleItem)(nil)).Elem()
}

func (i DqRuleCompareRuleItemArgs) ToDqRuleCompareRuleItemOutput() DqRuleCompareRuleItemOutput {
	return i.ToDqRuleCompareRuleItemOutputWithContext(context.Background())
}

func (i DqRuleCompareRuleItemArgs) ToDqRuleCompareRuleItemOutputWithContext(ctx context.Context) DqRuleCompareRuleItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRuleItemOutput)
}

// DqRuleCompareRuleItemArrayInput is an input type that accepts DqRuleCompareRuleItemArray and DqRuleCompareRuleItemArrayOutput values.
// You can construct a concrete instance of `DqRuleCompareRuleItemArrayInput` via:
//
//	DqRuleCompareRuleItemArray{ DqRuleCompareRuleItemArgs{...} }
type DqRuleCompareRuleItemArrayInput interface {
	pulumi.Input

	ToDqRuleCompareRuleItemArrayOutput() DqRuleCompareRuleItemArrayOutput
	ToDqRuleCompareRuleItemArrayOutputWithContext(context.Context) DqRuleCompareRuleItemArrayOutput
}

type DqRuleCompareRuleItemArray []DqRuleCompareRuleItemInput

func (DqRuleCompareRuleItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleCompareRuleItem)(nil)).Elem()
}

func (i DqRuleCompareRuleItemArray) ToDqRuleCompareRuleItemArrayOutput() DqRuleCompareRuleItemArrayOutput {
	return i.ToDqRuleCompareRuleItemArrayOutputWithContext(context.Background())
}

func (i DqRuleCompareRuleItemArray) ToDqRuleCompareRuleItemArrayOutputWithContext(ctx context.Context) DqRuleCompareRuleItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRuleItemArrayOutput)
}

type DqRuleCompareRuleItemOutput struct{ *pulumi.OutputState }

func (DqRuleCompareRuleItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleCompareRuleItem)(nil)).Elem()
}

func (o DqRuleCompareRuleItemOutput) ToDqRuleCompareRuleItemOutput() DqRuleCompareRuleItemOutput {
	return o
}

func (o DqRuleCompareRuleItemOutput) ToDqRuleCompareRuleItemOutputWithContext(ctx context.Context) DqRuleCompareRuleItemOutput {
	return o
}

// Comparison type 1. Fixed value 2. Fluctuating value 3. Comparison of value range 4. Enumeration range comparison 5. Do not compareNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleItemOutput) CompareType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DqRuleCompareRuleItem) *int { return v.CompareType }).(pulumi.IntPtrOutput)
}

// Comparison operation type &amp;lt; &amp;lt;= == =&amp;gt; &amp;gt;Note: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleItemOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleCompareRuleItem) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Quality statistics Type 1. Absolute value 2. Increase 3. Decrease 4. C contains 5. N C does not containNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleItemOutput) ValueComputeType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DqRuleCompareRuleItem) *int { return v.ValueComputeType }).(pulumi.IntPtrOutput)
}

// Compare the threshold listNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleItemOutput) ValueLists() DqRuleCompareRuleItemValueListArrayOutput {
	return o.ApplyT(func(v DqRuleCompareRuleItem) []DqRuleCompareRuleItemValueList { return v.ValueLists }).(DqRuleCompareRuleItemValueListArrayOutput)
}

type DqRuleCompareRuleItemArrayOutput struct{ *pulumi.OutputState }

func (DqRuleCompareRuleItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleCompareRuleItem)(nil)).Elem()
}

func (o DqRuleCompareRuleItemArrayOutput) ToDqRuleCompareRuleItemArrayOutput() DqRuleCompareRuleItemArrayOutput {
	return o
}

func (o DqRuleCompareRuleItemArrayOutput) ToDqRuleCompareRuleItemArrayOutputWithContext(ctx context.Context) DqRuleCompareRuleItemArrayOutput {
	return o
}

func (o DqRuleCompareRuleItemArrayOutput) Index(i pulumi.IntInput) DqRuleCompareRuleItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DqRuleCompareRuleItem {
		return vs[0].([]DqRuleCompareRuleItem)[vs[1].(int)]
	}).(DqRuleCompareRuleItemOutput)
}

type DqRuleCompareRuleItemValueList struct {
	// Threshold valueNote: This field may return null, indicating that a valid value cannot be obtained.
	Value *string `pulumi:"value"`
	// Threshold type 1. Low threshold 2. High threshold 3. Common threshold 4. Enumerated valueNote: This field may return null, indicating that a valid value cannot be obtained.
	ValueType *int `pulumi:"valueType"`
}

// DqRuleCompareRuleItemValueListInput is an input type that accepts DqRuleCompareRuleItemValueListArgs and DqRuleCompareRuleItemValueListOutput values.
// You can construct a concrete instance of `DqRuleCompareRuleItemValueListInput` via:
//
//	DqRuleCompareRuleItemValueListArgs{...}
type DqRuleCompareRuleItemValueListInput interface {
	pulumi.Input

	ToDqRuleCompareRuleItemValueListOutput() DqRuleCompareRuleItemValueListOutput
	ToDqRuleCompareRuleItemValueListOutputWithContext(context.Context) DqRuleCompareRuleItemValueListOutput
}

type DqRuleCompareRuleItemValueListArgs struct {
	// Threshold valueNote: This field may return null, indicating that a valid value cannot be obtained.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Threshold type 1. Low threshold 2. High threshold 3. Common threshold 4. Enumerated valueNote: This field may return null, indicating that a valid value cannot be obtained.
	ValueType pulumi.IntPtrInput `pulumi:"valueType"`
}

func (DqRuleCompareRuleItemValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleCompareRuleItemValueList)(nil)).Elem()
}

func (i DqRuleCompareRuleItemValueListArgs) ToDqRuleCompareRuleItemValueListOutput() DqRuleCompareRuleItemValueListOutput {
	return i.ToDqRuleCompareRuleItemValueListOutputWithContext(context.Background())
}

func (i DqRuleCompareRuleItemValueListArgs) ToDqRuleCompareRuleItemValueListOutputWithContext(ctx context.Context) DqRuleCompareRuleItemValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRuleItemValueListOutput)
}

// DqRuleCompareRuleItemValueListArrayInput is an input type that accepts DqRuleCompareRuleItemValueListArray and DqRuleCompareRuleItemValueListArrayOutput values.
// You can construct a concrete instance of `DqRuleCompareRuleItemValueListArrayInput` via:
//
//	DqRuleCompareRuleItemValueListArray{ DqRuleCompareRuleItemValueListArgs{...} }
type DqRuleCompareRuleItemValueListArrayInput interface {
	pulumi.Input

	ToDqRuleCompareRuleItemValueListArrayOutput() DqRuleCompareRuleItemValueListArrayOutput
	ToDqRuleCompareRuleItemValueListArrayOutputWithContext(context.Context) DqRuleCompareRuleItemValueListArrayOutput
}

type DqRuleCompareRuleItemValueListArray []DqRuleCompareRuleItemValueListInput

func (DqRuleCompareRuleItemValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleCompareRuleItemValueList)(nil)).Elem()
}

func (i DqRuleCompareRuleItemValueListArray) ToDqRuleCompareRuleItemValueListArrayOutput() DqRuleCompareRuleItemValueListArrayOutput {
	return i.ToDqRuleCompareRuleItemValueListArrayOutputWithContext(context.Background())
}

func (i DqRuleCompareRuleItemValueListArray) ToDqRuleCompareRuleItemValueListArrayOutputWithContext(ctx context.Context) DqRuleCompareRuleItemValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleCompareRuleItemValueListArrayOutput)
}

type DqRuleCompareRuleItemValueListOutput struct{ *pulumi.OutputState }

func (DqRuleCompareRuleItemValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleCompareRuleItemValueList)(nil)).Elem()
}

func (o DqRuleCompareRuleItemValueListOutput) ToDqRuleCompareRuleItemValueListOutput() DqRuleCompareRuleItemValueListOutput {
	return o
}

func (o DqRuleCompareRuleItemValueListOutput) ToDqRuleCompareRuleItemValueListOutputWithContext(ctx context.Context) DqRuleCompareRuleItemValueListOutput {
	return o
}

// Threshold valueNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleItemValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleCompareRuleItemValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Threshold type 1. Low threshold 2. High threshold 3. Common threshold 4. Enumerated valueNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleCompareRuleItemValueListOutput) ValueType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DqRuleCompareRuleItemValueList) *int { return v.ValueType }).(pulumi.IntPtrOutput)
}

type DqRuleCompareRuleItemValueListArrayOutput struct{ *pulumi.OutputState }

func (DqRuleCompareRuleItemValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleCompareRuleItemValueList)(nil)).Elem()
}

func (o DqRuleCompareRuleItemValueListArrayOutput) ToDqRuleCompareRuleItemValueListArrayOutput() DqRuleCompareRuleItemValueListArrayOutput {
	return o
}

func (o DqRuleCompareRuleItemValueListArrayOutput) ToDqRuleCompareRuleItemValueListArrayOutputWithContext(ctx context.Context) DqRuleCompareRuleItemValueListArrayOutput {
	return o
}

func (o DqRuleCompareRuleItemValueListArrayOutput) Index(i pulumi.IntInput) DqRuleCompareRuleItemValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DqRuleCompareRuleItemValueList {
		return vs[0].([]DqRuleCompareRuleItemValueList)[vs[1].(int)]
	}).(DqRuleCompareRuleItemValueListOutput)
}

type DqRuleFieldConfig struct {
	// Library table variableNote: This field may return null, indicating that a valid value cannot be obtained.
	TableConfigs []DqRuleFieldConfigTableConfig `pulumi:"tableConfigs"`
	// Where variableNote: This field may return null, indicating that a valid value cannot be obtained.
	WhereConfigs []DqRuleFieldConfigWhereConfig `pulumi:"whereConfigs"`
}

// DqRuleFieldConfigInput is an input type that accepts DqRuleFieldConfigArgs and DqRuleFieldConfigOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigInput` via:
//
//	DqRuleFieldConfigArgs{...}
type DqRuleFieldConfigInput interface {
	pulumi.Input

	ToDqRuleFieldConfigOutput() DqRuleFieldConfigOutput
	ToDqRuleFieldConfigOutputWithContext(context.Context) DqRuleFieldConfigOutput
}

type DqRuleFieldConfigArgs struct {
	// Library table variableNote: This field may return null, indicating that a valid value cannot be obtained.
	TableConfigs DqRuleFieldConfigTableConfigArrayInput `pulumi:"tableConfigs"`
	// Where variableNote: This field may return null, indicating that a valid value cannot be obtained.
	WhereConfigs DqRuleFieldConfigWhereConfigArrayInput `pulumi:"whereConfigs"`
}

func (DqRuleFieldConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigArgs) ToDqRuleFieldConfigOutput() DqRuleFieldConfigOutput {
	return i.ToDqRuleFieldConfigOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigArgs) ToDqRuleFieldConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigOutput)
}

func (i DqRuleFieldConfigArgs) ToDqRuleFieldConfigPtrOutput() DqRuleFieldConfigPtrOutput {
	return i.ToDqRuleFieldConfigPtrOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigArgs) ToDqRuleFieldConfigPtrOutputWithContext(ctx context.Context) DqRuleFieldConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigOutput).ToDqRuleFieldConfigPtrOutputWithContext(ctx)
}

// DqRuleFieldConfigPtrInput is an input type that accepts DqRuleFieldConfigArgs, DqRuleFieldConfigPtr and DqRuleFieldConfigPtrOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigPtrInput` via:
//
//	        DqRuleFieldConfigArgs{...}
//
//	or:
//
//	        nil
type DqRuleFieldConfigPtrInput interface {
	pulumi.Input

	ToDqRuleFieldConfigPtrOutput() DqRuleFieldConfigPtrOutput
	ToDqRuleFieldConfigPtrOutputWithContext(context.Context) DqRuleFieldConfigPtrOutput
}

type dqRuleFieldConfigPtrType DqRuleFieldConfigArgs

func DqRuleFieldConfigPtr(v *DqRuleFieldConfigArgs) DqRuleFieldConfigPtrInput {
	return (*dqRuleFieldConfigPtrType)(v)
}

func (*dqRuleFieldConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DqRuleFieldConfig)(nil)).Elem()
}

func (i *dqRuleFieldConfigPtrType) ToDqRuleFieldConfigPtrOutput() DqRuleFieldConfigPtrOutput {
	return i.ToDqRuleFieldConfigPtrOutputWithContext(context.Background())
}

func (i *dqRuleFieldConfigPtrType) ToDqRuleFieldConfigPtrOutputWithContext(ctx context.Context) DqRuleFieldConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigPtrOutput)
}

type DqRuleFieldConfigOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigOutput) ToDqRuleFieldConfigOutput() DqRuleFieldConfigOutput {
	return o
}

func (o DqRuleFieldConfigOutput) ToDqRuleFieldConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigOutput {
	return o
}

func (o DqRuleFieldConfigOutput) ToDqRuleFieldConfigPtrOutput() DqRuleFieldConfigPtrOutput {
	return o.ToDqRuleFieldConfigPtrOutputWithContext(context.Background())
}

func (o DqRuleFieldConfigOutput) ToDqRuleFieldConfigPtrOutputWithContext(ctx context.Context) DqRuleFieldConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DqRuleFieldConfig) *DqRuleFieldConfig {
		return &v
	}).(DqRuleFieldConfigPtrOutput)
}

// Library table variableNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigOutput) TableConfigs() DqRuleFieldConfigTableConfigArrayOutput {
	return o.ApplyT(func(v DqRuleFieldConfig) []DqRuleFieldConfigTableConfig { return v.TableConfigs }).(DqRuleFieldConfigTableConfigArrayOutput)
}

// Where variableNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigOutput) WhereConfigs() DqRuleFieldConfigWhereConfigArrayOutput {
	return o.ApplyT(func(v DqRuleFieldConfig) []DqRuleFieldConfigWhereConfig { return v.WhereConfigs }).(DqRuleFieldConfigWhereConfigArrayOutput)
}

type DqRuleFieldConfigPtrOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DqRuleFieldConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigPtrOutput) ToDqRuleFieldConfigPtrOutput() DqRuleFieldConfigPtrOutput {
	return o
}

func (o DqRuleFieldConfigPtrOutput) ToDqRuleFieldConfigPtrOutputWithContext(ctx context.Context) DqRuleFieldConfigPtrOutput {
	return o
}

func (o DqRuleFieldConfigPtrOutput) Elem() DqRuleFieldConfigOutput {
	return o.ApplyT(func(v *DqRuleFieldConfig) DqRuleFieldConfig {
		if v != nil {
			return *v
		}
		var ret DqRuleFieldConfig
		return ret
	}).(DqRuleFieldConfigOutput)
}

// Library table variableNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigPtrOutput) TableConfigs() DqRuleFieldConfigTableConfigArrayOutput {
	return o.ApplyT(func(v *DqRuleFieldConfig) []DqRuleFieldConfigTableConfig {
		if v == nil {
			return nil
		}
		return v.TableConfigs
	}).(DqRuleFieldConfigTableConfigArrayOutput)
}

// Where variableNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigPtrOutput) WhereConfigs() DqRuleFieldConfigWhereConfigArrayOutput {
	return o.ApplyT(func(v *DqRuleFieldConfig) []DqRuleFieldConfigWhereConfig {
		if v == nil {
			return nil
		}
		return v.WhereConfigs
	}).(DqRuleFieldConfigWhereConfigArrayOutput)
}

type DqRuleFieldConfigTableConfig struct {
	// Database idNote: This field may return null, indicating that a valid value cannot be obtained.
	DatabaseId *string `pulumi:"databaseId"`
	// Database nameNote: This field may return null, indicating that a valid value cannot be obtained.
	DatabaseName *string `pulumi:"databaseName"`
	// Field variableNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldConfigs []DqRuleFieldConfigTableConfigFieldConfig `pulumi:"fieldConfigs"`
	// Table idNote: This field may return null, indicating that a valid value cannot be obtained.
	TableId *string `pulumi:"tableId"`
	// Table keyNote: This field may return null, indicating that a valid value cannot be obtained.
	TableKey *string `pulumi:"tableKey"`
	// Table nameNote: This field may return null, indicating that a valid value cannot be obtained.
	TableName *string `pulumi:"tableName"`
}

// DqRuleFieldConfigTableConfigInput is an input type that accepts DqRuleFieldConfigTableConfigArgs and DqRuleFieldConfigTableConfigOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigTableConfigInput` via:
//
//	DqRuleFieldConfigTableConfigArgs{...}
type DqRuleFieldConfigTableConfigInput interface {
	pulumi.Input

	ToDqRuleFieldConfigTableConfigOutput() DqRuleFieldConfigTableConfigOutput
	ToDqRuleFieldConfigTableConfigOutputWithContext(context.Context) DqRuleFieldConfigTableConfigOutput
}

type DqRuleFieldConfigTableConfigArgs struct {
	// Database idNote: This field may return null, indicating that a valid value cannot be obtained.
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// Database nameNote: This field may return null, indicating that a valid value cannot be obtained.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Field variableNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldConfigs DqRuleFieldConfigTableConfigFieldConfigArrayInput `pulumi:"fieldConfigs"`
	// Table idNote: This field may return null, indicating that a valid value cannot be obtained.
	TableId pulumi.StringPtrInput `pulumi:"tableId"`
	// Table keyNote: This field may return null, indicating that a valid value cannot be obtained.
	TableKey pulumi.StringPtrInput `pulumi:"tableKey"`
	// Table nameNote: This field may return null, indicating that a valid value cannot be obtained.
	TableName pulumi.StringPtrInput `pulumi:"tableName"`
}

func (DqRuleFieldConfigTableConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfigTableConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigTableConfigArgs) ToDqRuleFieldConfigTableConfigOutput() DqRuleFieldConfigTableConfigOutput {
	return i.ToDqRuleFieldConfigTableConfigOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigTableConfigArgs) ToDqRuleFieldConfigTableConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigTableConfigOutput)
}

// DqRuleFieldConfigTableConfigArrayInput is an input type that accepts DqRuleFieldConfigTableConfigArray and DqRuleFieldConfigTableConfigArrayOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigTableConfigArrayInput` via:
//
//	DqRuleFieldConfigTableConfigArray{ DqRuleFieldConfigTableConfigArgs{...} }
type DqRuleFieldConfigTableConfigArrayInput interface {
	pulumi.Input

	ToDqRuleFieldConfigTableConfigArrayOutput() DqRuleFieldConfigTableConfigArrayOutput
	ToDqRuleFieldConfigTableConfigArrayOutputWithContext(context.Context) DqRuleFieldConfigTableConfigArrayOutput
}

type DqRuleFieldConfigTableConfigArray []DqRuleFieldConfigTableConfigInput

func (DqRuleFieldConfigTableConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleFieldConfigTableConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigTableConfigArray) ToDqRuleFieldConfigTableConfigArrayOutput() DqRuleFieldConfigTableConfigArrayOutput {
	return i.ToDqRuleFieldConfigTableConfigArrayOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigTableConfigArray) ToDqRuleFieldConfigTableConfigArrayOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigTableConfigArrayOutput)
}

type DqRuleFieldConfigTableConfigOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigTableConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfigTableConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigTableConfigOutput) ToDqRuleFieldConfigTableConfigOutput() DqRuleFieldConfigTableConfigOutput {
	return o
}

func (o DqRuleFieldConfigTableConfigOutput) ToDqRuleFieldConfigTableConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigOutput {
	return o
}

// Database idNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfig) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// Database nameNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfig) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Field variableNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigOutput) FieldConfigs() DqRuleFieldConfigTableConfigFieldConfigArrayOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfig) []DqRuleFieldConfigTableConfigFieldConfig { return v.FieldConfigs }).(DqRuleFieldConfigTableConfigFieldConfigArrayOutput)
}

// Table idNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigOutput) TableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfig) *string { return v.TableId }).(pulumi.StringPtrOutput)
}

// Table keyNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigOutput) TableKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfig) *string { return v.TableKey }).(pulumi.StringPtrOutput)
}

// Table nameNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfig) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

type DqRuleFieldConfigTableConfigArrayOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigTableConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleFieldConfigTableConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigTableConfigArrayOutput) ToDqRuleFieldConfigTableConfigArrayOutput() DqRuleFieldConfigTableConfigArrayOutput {
	return o
}

func (o DqRuleFieldConfigTableConfigArrayOutput) ToDqRuleFieldConfigTableConfigArrayOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigArrayOutput {
	return o
}

func (o DqRuleFieldConfigTableConfigArrayOutput) Index(i pulumi.IntInput) DqRuleFieldConfigTableConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DqRuleFieldConfigTableConfig {
		return vs[0].([]DqRuleFieldConfigTableConfig)[vs[1].(int)]
	}).(DqRuleFieldConfigTableConfigOutput)
}

type DqRuleFieldConfigTableConfigFieldConfig struct {
	// Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldDataType *string `pulumi:"fieldDataType"`
	// Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldKey *string `pulumi:"fieldKey"`
	// Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldValue *string `pulumi:"fieldValue"`
}

// DqRuleFieldConfigTableConfigFieldConfigInput is an input type that accepts DqRuleFieldConfigTableConfigFieldConfigArgs and DqRuleFieldConfigTableConfigFieldConfigOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigTableConfigFieldConfigInput` via:
//
//	DqRuleFieldConfigTableConfigFieldConfigArgs{...}
type DqRuleFieldConfigTableConfigFieldConfigInput interface {
	pulumi.Input

	ToDqRuleFieldConfigTableConfigFieldConfigOutput() DqRuleFieldConfigTableConfigFieldConfigOutput
	ToDqRuleFieldConfigTableConfigFieldConfigOutputWithContext(context.Context) DqRuleFieldConfigTableConfigFieldConfigOutput
}

type DqRuleFieldConfigTableConfigFieldConfigArgs struct {
	// Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldDataType pulumi.StringPtrInput `pulumi:"fieldDataType"`
	// Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldKey pulumi.StringPtrInput `pulumi:"fieldKey"`
	// Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldValue pulumi.StringPtrInput `pulumi:"fieldValue"`
}

func (DqRuleFieldConfigTableConfigFieldConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfigTableConfigFieldConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigTableConfigFieldConfigArgs) ToDqRuleFieldConfigTableConfigFieldConfigOutput() DqRuleFieldConfigTableConfigFieldConfigOutput {
	return i.ToDqRuleFieldConfigTableConfigFieldConfigOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigTableConfigFieldConfigArgs) ToDqRuleFieldConfigTableConfigFieldConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigFieldConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigTableConfigFieldConfigOutput)
}

// DqRuleFieldConfigTableConfigFieldConfigArrayInput is an input type that accepts DqRuleFieldConfigTableConfigFieldConfigArray and DqRuleFieldConfigTableConfigFieldConfigArrayOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigTableConfigFieldConfigArrayInput` via:
//
//	DqRuleFieldConfigTableConfigFieldConfigArray{ DqRuleFieldConfigTableConfigFieldConfigArgs{...} }
type DqRuleFieldConfigTableConfigFieldConfigArrayInput interface {
	pulumi.Input

	ToDqRuleFieldConfigTableConfigFieldConfigArrayOutput() DqRuleFieldConfigTableConfigFieldConfigArrayOutput
	ToDqRuleFieldConfigTableConfigFieldConfigArrayOutputWithContext(context.Context) DqRuleFieldConfigTableConfigFieldConfigArrayOutput
}

type DqRuleFieldConfigTableConfigFieldConfigArray []DqRuleFieldConfigTableConfigFieldConfigInput

func (DqRuleFieldConfigTableConfigFieldConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleFieldConfigTableConfigFieldConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigTableConfigFieldConfigArray) ToDqRuleFieldConfigTableConfigFieldConfigArrayOutput() DqRuleFieldConfigTableConfigFieldConfigArrayOutput {
	return i.ToDqRuleFieldConfigTableConfigFieldConfigArrayOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigTableConfigFieldConfigArray) ToDqRuleFieldConfigTableConfigFieldConfigArrayOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigFieldConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigTableConfigFieldConfigArrayOutput)
}

type DqRuleFieldConfigTableConfigFieldConfigOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigTableConfigFieldConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfigTableConfigFieldConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigTableConfigFieldConfigOutput) ToDqRuleFieldConfigTableConfigFieldConfigOutput() DqRuleFieldConfigTableConfigFieldConfigOutput {
	return o
}

func (o DqRuleFieldConfigTableConfigFieldConfigOutput) ToDqRuleFieldConfigTableConfigFieldConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigFieldConfigOutput {
	return o
}

// Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigFieldConfigOutput) FieldDataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfigFieldConfig) *string { return v.FieldDataType }).(pulumi.StringPtrOutput)
}

// Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigFieldConfigOutput) FieldKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfigFieldConfig) *string { return v.FieldKey }).(pulumi.StringPtrOutput)
}

// Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigTableConfigFieldConfigOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigTableConfigFieldConfig) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

type DqRuleFieldConfigTableConfigFieldConfigArrayOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigTableConfigFieldConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleFieldConfigTableConfigFieldConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigTableConfigFieldConfigArrayOutput) ToDqRuleFieldConfigTableConfigFieldConfigArrayOutput() DqRuleFieldConfigTableConfigFieldConfigArrayOutput {
	return o
}

func (o DqRuleFieldConfigTableConfigFieldConfigArrayOutput) ToDqRuleFieldConfigTableConfigFieldConfigArrayOutputWithContext(ctx context.Context) DqRuleFieldConfigTableConfigFieldConfigArrayOutput {
	return o
}

func (o DqRuleFieldConfigTableConfigFieldConfigArrayOutput) Index(i pulumi.IntInput) DqRuleFieldConfigTableConfigFieldConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DqRuleFieldConfigTableConfigFieldConfig {
		return vs[0].([]DqRuleFieldConfigTableConfigFieldConfig)[vs[1].(int)]
	}).(DqRuleFieldConfigTableConfigFieldConfigOutput)
}

type DqRuleFieldConfigWhereConfig struct {
	// Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldDataType *string `pulumi:"fieldDataType"`
	// Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldKey *string `pulumi:"fieldKey"`
	// Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldValue *string `pulumi:"fieldValue"`
}

// DqRuleFieldConfigWhereConfigInput is an input type that accepts DqRuleFieldConfigWhereConfigArgs and DqRuleFieldConfigWhereConfigOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigWhereConfigInput` via:
//
//	DqRuleFieldConfigWhereConfigArgs{...}
type DqRuleFieldConfigWhereConfigInput interface {
	pulumi.Input

	ToDqRuleFieldConfigWhereConfigOutput() DqRuleFieldConfigWhereConfigOutput
	ToDqRuleFieldConfigWhereConfigOutputWithContext(context.Context) DqRuleFieldConfigWhereConfigOutput
}

type DqRuleFieldConfigWhereConfigArgs struct {
	// Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldDataType pulumi.StringPtrInput `pulumi:"fieldDataType"`
	// Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldKey pulumi.StringPtrInput `pulumi:"fieldKey"`
	// Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
	FieldValue pulumi.StringPtrInput `pulumi:"fieldValue"`
}

func (DqRuleFieldConfigWhereConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfigWhereConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigWhereConfigArgs) ToDqRuleFieldConfigWhereConfigOutput() DqRuleFieldConfigWhereConfigOutput {
	return i.ToDqRuleFieldConfigWhereConfigOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigWhereConfigArgs) ToDqRuleFieldConfigWhereConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigWhereConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigWhereConfigOutput)
}

// DqRuleFieldConfigWhereConfigArrayInput is an input type that accepts DqRuleFieldConfigWhereConfigArray and DqRuleFieldConfigWhereConfigArrayOutput values.
// You can construct a concrete instance of `DqRuleFieldConfigWhereConfigArrayInput` via:
//
//	DqRuleFieldConfigWhereConfigArray{ DqRuleFieldConfigWhereConfigArgs{...} }
type DqRuleFieldConfigWhereConfigArrayInput interface {
	pulumi.Input

	ToDqRuleFieldConfigWhereConfigArrayOutput() DqRuleFieldConfigWhereConfigArrayOutput
	ToDqRuleFieldConfigWhereConfigArrayOutputWithContext(context.Context) DqRuleFieldConfigWhereConfigArrayOutput
}

type DqRuleFieldConfigWhereConfigArray []DqRuleFieldConfigWhereConfigInput

func (DqRuleFieldConfigWhereConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleFieldConfigWhereConfig)(nil)).Elem()
}

func (i DqRuleFieldConfigWhereConfigArray) ToDqRuleFieldConfigWhereConfigArrayOutput() DqRuleFieldConfigWhereConfigArrayOutput {
	return i.ToDqRuleFieldConfigWhereConfigArrayOutputWithContext(context.Background())
}

func (i DqRuleFieldConfigWhereConfigArray) ToDqRuleFieldConfigWhereConfigArrayOutputWithContext(ctx context.Context) DqRuleFieldConfigWhereConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DqRuleFieldConfigWhereConfigArrayOutput)
}

type DqRuleFieldConfigWhereConfigOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigWhereConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DqRuleFieldConfigWhereConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigWhereConfigOutput) ToDqRuleFieldConfigWhereConfigOutput() DqRuleFieldConfigWhereConfigOutput {
	return o
}

func (o DqRuleFieldConfigWhereConfigOutput) ToDqRuleFieldConfigWhereConfigOutputWithContext(ctx context.Context) DqRuleFieldConfigWhereConfigOutput {
	return o
}

// Field typeNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigWhereConfigOutput) FieldDataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigWhereConfig) *string { return v.FieldDataType }).(pulumi.StringPtrOutput)
}

// Field keyNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigWhereConfigOutput) FieldKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigWhereConfig) *string { return v.FieldKey }).(pulumi.StringPtrOutput)
}

// Field valueNote: This field may return null, indicating that a valid value cannot be obtained.
func (o DqRuleFieldConfigWhereConfigOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DqRuleFieldConfigWhereConfig) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

type DqRuleFieldConfigWhereConfigArrayOutput struct{ *pulumi.OutputState }

func (DqRuleFieldConfigWhereConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DqRuleFieldConfigWhereConfig)(nil)).Elem()
}

func (o DqRuleFieldConfigWhereConfigArrayOutput) ToDqRuleFieldConfigWhereConfigArrayOutput() DqRuleFieldConfigWhereConfigArrayOutput {
	return o
}

func (o DqRuleFieldConfigWhereConfigArrayOutput) ToDqRuleFieldConfigWhereConfigArrayOutputWithContext(ctx context.Context) DqRuleFieldConfigWhereConfigArrayOutput {
	return o
}

func (o DqRuleFieldConfigWhereConfigArrayOutput) Index(i pulumi.IntInput) DqRuleFieldConfigWhereConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DqRuleFieldConfigWhereConfig {
		return vs[0].([]DqRuleFieldConfigWhereConfig)[vs[1].(int)]
	}).(DqRuleFieldConfigWhereConfigOutput)
}

type FunctionResourceList struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource MD5 Value.
	Md5 *string `pulumi:"md5"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Resource Path.
	Path string `pulumi:"path"`
	// Resource Type.
	Type *string `pulumi:"type"`
}

// FunctionResourceListInput is an input type that accepts FunctionResourceListArgs and FunctionResourceListOutput values.
// You can construct a concrete instance of `FunctionResourceListInput` via:
//
//	FunctionResourceListArgs{...}
type FunctionResourceListInput interface {
	pulumi.Input

	ToFunctionResourceListOutput() FunctionResourceListOutput
	ToFunctionResourceListOutputWithContext(context.Context) FunctionResourceListOutput
}

type FunctionResourceListArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource MD5 Value.
	Md5 pulumi.StringPtrInput `pulumi:"md5"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource Path.
	Path pulumi.StringInput `pulumi:"path"`
	// Resource Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FunctionResourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionResourceList)(nil)).Elem()
}

func (i FunctionResourceListArgs) ToFunctionResourceListOutput() FunctionResourceListOutput {
	return i.ToFunctionResourceListOutputWithContext(context.Background())
}

func (i FunctionResourceListArgs) ToFunctionResourceListOutputWithContext(ctx context.Context) FunctionResourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionResourceListOutput)
}

// FunctionResourceListArrayInput is an input type that accepts FunctionResourceListArray and FunctionResourceListArrayOutput values.
// You can construct a concrete instance of `FunctionResourceListArrayInput` via:
//
//	FunctionResourceListArray{ FunctionResourceListArgs{...} }
type FunctionResourceListArrayInput interface {
	pulumi.Input

	ToFunctionResourceListArrayOutput() FunctionResourceListArrayOutput
	ToFunctionResourceListArrayOutputWithContext(context.Context) FunctionResourceListArrayOutput
}

type FunctionResourceListArray []FunctionResourceListInput

func (FunctionResourceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionResourceList)(nil)).Elem()
}

func (i FunctionResourceListArray) ToFunctionResourceListArrayOutput() FunctionResourceListArrayOutput {
	return i.ToFunctionResourceListArrayOutputWithContext(context.Background())
}

func (i FunctionResourceListArray) ToFunctionResourceListArrayOutputWithContext(ctx context.Context) FunctionResourceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionResourceListArrayOutput)
}

type FunctionResourceListOutput struct{ *pulumi.OutputState }

func (FunctionResourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionResourceList)(nil)).Elem()
}

func (o FunctionResourceListOutput) ToFunctionResourceListOutput() FunctionResourceListOutput {
	return o
}

func (o FunctionResourceListOutput) ToFunctionResourceListOutputWithContext(ctx context.Context) FunctionResourceListOutput {
	return o
}

// Resource ID.
func (o FunctionResourceListOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionResourceList) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource MD5 Value.
func (o FunctionResourceListOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionResourceList) *string { return v.Md5 }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o FunctionResourceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionResourceList) string { return v.Name }).(pulumi.StringOutput)
}

// Resource Path.
func (o FunctionResourceListOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionResourceList) string { return v.Path }).(pulumi.StringOutput)
}

// Resource Type.
func (o FunctionResourceListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionResourceList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FunctionResourceListArrayOutput struct{ *pulumi.OutputState }

func (FunctionResourceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionResourceList)(nil)).Elem()
}

func (o FunctionResourceListArrayOutput) ToFunctionResourceListArrayOutput() FunctionResourceListArrayOutput {
	return o
}

func (o FunctionResourceListArrayOutput) ToFunctionResourceListArrayOutputWithContext(ctx context.Context) FunctionResourceListArrayOutput {
	return o
}

func (o FunctionResourceListArrayOutput) Index(i pulumi.IntInput) FunctionResourceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionResourceList {
		return vs[0].([]FunctionResourceList)[vs[1].(int)]
	}).(FunctionResourceListOutput)
}

type IntegrationOfflineTaskTaskInfo struct {
	// User App Id.
	AppId *string `pulumi:"appId"`
	// Task configuration.
	Configs []IntegrationOfflineTaskTaskInfoConfig `pulumi:"configs"`
	// Create time.
	CreateTime *string `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin *string `pulumi:"creatorUin"`
	// Data proxy url.
	DataProxyUrls []string `pulumi:"dataProxyUrls"`
	// Execute context.
	ExecuteContexts []IntegrationOfflineTaskTaskInfoExecuteContext `pulumi:"executeContexts"`
	// Executor group name.
	ExecutorGroupName *string `pulumi:"executorGroupName"`
	// Executor resource ID.
	ExecutorId *string `pulumi:"executorId"`
	// Node extension configuration information.
	ExtConfigs []IntegrationOfflineTaskTaskInfoExtConfig `pulumi:"extConfigs"`
	// Whether the task been submitted.
	HasVersion *bool `pulumi:"hasVersion"`
	// InLong manager url.
	InLongManagerUrl *string `pulumi:"inLongManagerUrl"`
	// InLong manager version.
	InLongManagerVersion *string `pulumi:"inLongManagerVersion"`
	// InLong stream id.
	InLongStreamId *string `pulumi:"inLongStreamId"`
	// Incharge user.
	Incharge *string `pulumi:"incharge"`
	// Input datasource type.
	InputDatasourceType *string `pulumi:"inputDatasourceType"`
	// Instance version.
	InstanceVersion *int `pulumi:"instanceVersion"`
	// The last time the task was run.
	LastRunTime *string `pulumi:"lastRunTime"`
	// Whether the task been locked.
	Locked *bool `pulumi:"locked"`
	// User locked task.
	Locker *string `pulumi:"locker"`
	// Node mapping.
	Mappings []IntegrationOfflineTaskTaskInfoMapping `pulumi:"mappings"`
	// Number of reads.
	NumRecordsIn *int `pulumi:"numRecordsIn"`
	// Number of writes.
	NumRecordsOut *int `pulumi:"numRecordsOut"`
	// Times of restarts.
	NumRestarts *int `pulumi:"numRestarts"`
	// Offline task scheduling configuration.
	OfflineTaskAddEntity *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity `pulumi:"offlineTaskAddEntity"`
	// Operator User ID.
	OperatorUin *string `pulumi:"operatorUin"`
	// Output datasource type.
	OutputDatasourceType *string `pulumi:"outputDatasourceType"`
	// Owner User ID.
	OwnerUin *string `pulumi:"ownerUin"`
	// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
	ReadPhase *int `pulumi:"readPhase"`
	// Read latency.
	ReaderDelay *float64 `pulumi:"readerDelay"`
	// The amount of resources consumed by real-time task.
	RunningCu *float64 `pulumi:"runningCu"`
	// Task scheduling id (job id such as oceanus or us).
	ScheduleTaskId *string `pulumi:"scheduleTaskId"`
	// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
	Status *int `pulumi:"status"`
	// The time the task was stopped.
	StopTime *string `pulumi:"stopTime"`
	// Whether the task version has been submitted for operation and maintenance.
	Submit *bool `pulumi:"submit"`
	// Resource tiering status, 0: in progress, 1: successful, 2: failed.
	SwitchResource *int `pulumi:"switchResource"`
	// Synchronization type: 1. Whole database synchronization, 2. Single table synchronization.
	SyncType *int `pulumi:"syncType"`
	// Task alarm regular.
	TaskAlarmRegularLists []string `pulumi:"taskAlarmRegularLists"`
	// Inlong Task Group ID.
	TaskGroupId *string `pulumi:"taskGroupId"`
	// Task display mode, 0: canvas mode, 1: form mode.
	TaskMode *string `pulumi:"taskMode"`
	// Update time.
	UpdateTime *string `pulumi:"updateTime"`
	// The workflow id to which the task belongs.
	WorkflowId *string `pulumi:"workflowId"`
}

// IntegrationOfflineTaskTaskInfoInput is an input type that accepts IntegrationOfflineTaskTaskInfoArgs and IntegrationOfflineTaskTaskInfoOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoInput` via:
//
//	IntegrationOfflineTaskTaskInfoArgs{...}
type IntegrationOfflineTaskTaskInfoInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoOutput() IntegrationOfflineTaskTaskInfoOutput
	ToIntegrationOfflineTaskTaskInfoOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoOutput
}

type IntegrationOfflineTaskTaskInfoArgs struct {
	// User App Id.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Task configuration.
	Configs IntegrationOfflineTaskTaskInfoConfigArrayInput `pulumi:"configs"`
	// Create time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin pulumi.StringPtrInput `pulumi:"creatorUin"`
	// Data proxy url.
	DataProxyUrls pulumi.StringArrayInput `pulumi:"dataProxyUrls"`
	// Execute context.
	ExecuteContexts IntegrationOfflineTaskTaskInfoExecuteContextArrayInput `pulumi:"executeContexts"`
	// Executor group name.
	ExecutorGroupName pulumi.StringPtrInput `pulumi:"executorGroupName"`
	// Executor resource ID.
	ExecutorId pulumi.StringPtrInput `pulumi:"executorId"`
	// Node extension configuration information.
	ExtConfigs IntegrationOfflineTaskTaskInfoExtConfigArrayInput `pulumi:"extConfigs"`
	// Whether the task been submitted.
	HasVersion pulumi.BoolPtrInput `pulumi:"hasVersion"`
	// InLong manager url.
	InLongManagerUrl pulumi.StringPtrInput `pulumi:"inLongManagerUrl"`
	// InLong manager version.
	InLongManagerVersion pulumi.StringPtrInput `pulumi:"inLongManagerVersion"`
	// InLong stream id.
	InLongStreamId pulumi.StringPtrInput `pulumi:"inLongStreamId"`
	// Incharge user.
	Incharge pulumi.StringPtrInput `pulumi:"incharge"`
	// Input datasource type.
	InputDatasourceType pulumi.StringPtrInput `pulumi:"inputDatasourceType"`
	// Instance version.
	InstanceVersion pulumi.IntPtrInput `pulumi:"instanceVersion"`
	// The last time the task was run.
	LastRunTime pulumi.StringPtrInput `pulumi:"lastRunTime"`
	// Whether the task been locked.
	Locked pulumi.BoolPtrInput `pulumi:"locked"`
	// User locked task.
	Locker pulumi.StringPtrInput `pulumi:"locker"`
	// Node mapping.
	Mappings IntegrationOfflineTaskTaskInfoMappingArrayInput `pulumi:"mappings"`
	// Number of reads.
	NumRecordsIn pulumi.IntPtrInput `pulumi:"numRecordsIn"`
	// Number of writes.
	NumRecordsOut pulumi.IntPtrInput `pulumi:"numRecordsOut"`
	// Times of restarts.
	NumRestarts pulumi.IntPtrInput `pulumi:"numRestarts"`
	// Offline task scheduling configuration.
	OfflineTaskAddEntity IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrInput `pulumi:"offlineTaskAddEntity"`
	// Operator User ID.
	OperatorUin pulumi.StringPtrInput `pulumi:"operatorUin"`
	// Output datasource type.
	OutputDatasourceType pulumi.StringPtrInput `pulumi:"outputDatasourceType"`
	// Owner User ID.
	OwnerUin pulumi.StringPtrInput `pulumi:"ownerUin"`
	// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
	ReadPhase pulumi.IntPtrInput `pulumi:"readPhase"`
	// Read latency.
	ReaderDelay pulumi.Float64PtrInput `pulumi:"readerDelay"`
	// The amount of resources consumed by real-time task.
	RunningCu pulumi.Float64PtrInput `pulumi:"runningCu"`
	// Task scheduling id (job id such as oceanus or us).
	ScheduleTaskId pulumi.StringPtrInput `pulumi:"scheduleTaskId"`
	// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// The time the task was stopped.
	StopTime pulumi.StringPtrInput `pulumi:"stopTime"`
	// Whether the task version has been submitted for operation and maintenance.
	Submit pulumi.BoolPtrInput `pulumi:"submit"`
	// Resource tiering status, 0: in progress, 1: successful, 2: failed.
	SwitchResource pulumi.IntPtrInput `pulumi:"switchResource"`
	// Synchronization type: 1. Whole database synchronization, 2. Single table synchronization.
	SyncType pulumi.IntPtrInput `pulumi:"syncType"`
	// Task alarm regular.
	TaskAlarmRegularLists pulumi.StringArrayInput `pulumi:"taskAlarmRegularLists"`
	// Inlong Task Group ID.
	TaskGroupId pulumi.StringPtrInput `pulumi:"taskGroupId"`
	// Task display mode, 0: canvas mode, 1: form mode.
	TaskMode pulumi.StringPtrInput `pulumi:"taskMode"`
	// Update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// The workflow id to which the task belongs.
	WorkflowId pulumi.StringPtrInput `pulumi:"workflowId"`
}

func (IntegrationOfflineTaskTaskInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfo)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoArgs) ToIntegrationOfflineTaskTaskInfoOutput() IntegrationOfflineTaskTaskInfoOutput {
	return i.ToIntegrationOfflineTaskTaskInfoOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoArgs) ToIntegrationOfflineTaskTaskInfoOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoOutput)
}

func (i IntegrationOfflineTaskTaskInfoArgs) ToIntegrationOfflineTaskTaskInfoPtrOutput() IntegrationOfflineTaskTaskInfoPtrOutput {
	return i.ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoArgs) ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoOutput).ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(ctx)
}

// IntegrationOfflineTaskTaskInfoPtrInput is an input type that accepts IntegrationOfflineTaskTaskInfoArgs, IntegrationOfflineTaskTaskInfoPtr and IntegrationOfflineTaskTaskInfoPtrOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoPtrInput` via:
//
//	        IntegrationOfflineTaskTaskInfoArgs{...}
//
//	or:
//
//	        nil
type IntegrationOfflineTaskTaskInfoPtrInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoPtrOutput() IntegrationOfflineTaskTaskInfoPtrOutput
	ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoPtrOutput
}

type integrationOfflineTaskTaskInfoPtrType IntegrationOfflineTaskTaskInfoArgs

func IntegrationOfflineTaskTaskInfoPtr(v *IntegrationOfflineTaskTaskInfoArgs) IntegrationOfflineTaskTaskInfoPtrInput {
	return (*integrationOfflineTaskTaskInfoPtrType)(v)
}

func (*integrationOfflineTaskTaskInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationOfflineTaskTaskInfo)(nil)).Elem()
}

func (i *integrationOfflineTaskTaskInfoPtrType) ToIntegrationOfflineTaskTaskInfoPtrOutput() IntegrationOfflineTaskTaskInfoPtrOutput {
	return i.ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(context.Background())
}

func (i *integrationOfflineTaskTaskInfoPtrType) ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoPtrOutput)
}

type IntegrationOfflineTaskTaskInfoOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfo)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoOutput) ToIntegrationOfflineTaskTaskInfoOutput() IntegrationOfflineTaskTaskInfoOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoOutput) ToIntegrationOfflineTaskTaskInfoOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoOutput) ToIntegrationOfflineTaskTaskInfoPtrOutput() IntegrationOfflineTaskTaskInfoPtrOutput {
	return o.ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(context.Background())
}

func (o IntegrationOfflineTaskTaskInfoOutput) ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationOfflineTaskTaskInfo) *IntegrationOfflineTaskTaskInfo {
		return &v
	}).(IntegrationOfflineTaskTaskInfoPtrOutput)
}

// User App Id.
func (o IntegrationOfflineTaskTaskInfoOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Task configuration.
func (o IntegrationOfflineTaskTaskInfoOutput) Configs() IntegrationOfflineTaskTaskInfoConfigArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoConfig { return v.Configs }).(IntegrationOfflineTaskTaskInfoConfigArrayOutput)
}

// Create time.
func (o IntegrationOfflineTaskTaskInfoOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationOfflineTaskTaskInfoOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.CreatorUin }).(pulumi.StringPtrOutput)
}

// Data proxy url.
func (o IntegrationOfflineTaskTaskInfoOutput) DataProxyUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) []string { return v.DataProxyUrls }).(pulumi.StringArrayOutput)
}

// Execute context.
func (o IntegrationOfflineTaskTaskInfoOutput) ExecuteContexts() IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoExecuteContext {
		return v.ExecuteContexts
	}).(IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput)
}

// Executor group name.
func (o IntegrationOfflineTaskTaskInfoOutput) ExecutorGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.ExecutorGroupName }).(pulumi.StringPtrOutput)
}

// Executor resource ID.
func (o IntegrationOfflineTaskTaskInfoOutput) ExecutorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.ExecutorId }).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationOfflineTaskTaskInfoOutput) ExtConfigs() IntegrationOfflineTaskTaskInfoExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoExtConfig { return v.ExtConfigs }).(IntegrationOfflineTaskTaskInfoExtConfigArrayOutput)
}

// Whether the task been submitted.
func (o IntegrationOfflineTaskTaskInfoOutput) HasVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *bool { return v.HasVersion }).(pulumi.BoolPtrOutput)
}

// InLong manager url.
func (o IntegrationOfflineTaskTaskInfoOutput) InLongManagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.InLongManagerUrl }).(pulumi.StringPtrOutput)
}

// InLong manager version.
func (o IntegrationOfflineTaskTaskInfoOutput) InLongManagerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.InLongManagerVersion }).(pulumi.StringPtrOutput)
}

// InLong stream id.
func (o IntegrationOfflineTaskTaskInfoOutput) InLongStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.InLongStreamId }).(pulumi.StringPtrOutput)
}

// Incharge user.
func (o IntegrationOfflineTaskTaskInfoOutput) Incharge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.Incharge }).(pulumi.StringPtrOutput)
}

// Input datasource type.
func (o IntegrationOfflineTaskTaskInfoOutput) InputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.InputDatasourceType }).(pulumi.StringPtrOutput)
}

// Instance version.
func (o IntegrationOfflineTaskTaskInfoOutput) InstanceVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.InstanceVersion }).(pulumi.IntPtrOutput)
}

// The last time the task was run.
func (o IntegrationOfflineTaskTaskInfoOutput) LastRunTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.LastRunTime }).(pulumi.StringPtrOutput)
}

// Whether the task been locked.
func (o IntegrationOfflineTaskTaskInfoOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *bool { return v.Locked }).(pulumi.BoolPtrOutput)
}

// User locked task.
func (o IntegrationOfflineTaskTaskInfoOutput) Locker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.Locker }).(pulumi.StringPtrOutput)
}

// Node mapping.
func (o IntegrationOfflineTaskTaskInfoOutput) Mappings() IntegrationOfflineTaskTaskInfoMappingArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoMapping { return v.Mappings }).(IntegrationOfflineTaskTaskInfoMappingArrayOutput)
}

// Number of reads.
func (o IntegrationOfflineTaskTaskInfoOutput) NumRecordsIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.NumRecordsIn }).(pulumi.IntPtrOutput)
}

// Number of writes.
func (o IntegrationOfflineTaskTaskInfoOutput) NumRecordsOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.NumRecordsOut }).(pulumi.IntPtrOutput)
}

// Times of restarts.
func (o IntegrationOfflineTaskTaskInfoOutput) NumRestarts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.NumRestarts }).(pulumi.IntPtrOutput)
}

// Offline task scheduling configuration.
func (o IntegrationOfflineTaskTaskInfoOutput) OfflineTaskAddEntity() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity {
		return v.OfflineTaskAddEntity
	}).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput)
}

// Operator User ID.
func (o IntegrationOfflineTaskTaskInfoOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.OperatorUin }).(pulumi.StringPtrOutput)
}

// Output datasource type.
func (o IntegrationOfflineTaskTaskInfoOutput) OutputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.OutputDatasourceType }).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationOfflineTaskTaskInfoOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.OwnerUin }).(pulumi.StringPtrOutput)
}

// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
func (o IntegrationOfflineTaskTaskInfoOutput) ReadPhase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.ReadPhase }).(pulumi.IntPtrOutput)
}

// Read latency.
func (o IntegrationOfflineTaskTaskInfoOutput) ReaderDelay() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *float64 { return v.ReaderDelay }).(pulumi.Float64PtrOutput)
}

// The amount of resources consumed by real-time task.
func (o IntegrationOfflineTaskTaskInfoOutput) RunningCu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *float64 { return v.RunningCu }).(pulumi.Float64PtrOutput)
}

// Task scheduling id (job id such as oceanus or us).
func (o IntegrationOfflineTaskTaskInfoOutput) ScheduleTaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.ScheduleTaskId }).(pulumi.StringPtrOutput)
}

// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
func (o IntegrationOfflineTaskTaskInfoOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// The time the task was stopped.
func (o IntegrationOfflineTaskTaskInfoOutput) StopTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.StopTime }).(pulumi.StringPtrOutput)
}

// Whether the task version has been submitted for operation and maintenance.
func (o IntegrationOfflineTaskTaskInfoOutput) Submit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *bool { return v.Submit }).(pulumi.BoolPtrOutput)
}

// Resource tiering status, 0: in progress, 1: successful, 2: failed.
func (o IntegrationOfflineTaskTaskInfoOutput) SwitchResource() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.SwitchResource }).(pulumi.IntPtrOutput)
}

// Synchronization type: 1. Whole database synchronization, 2. Single table synchronization.
func (o IntegrationOfflineTaskTaskInfoOutput) SyncType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *int { return v.SyncType }).(pulumi.IntPtrOutput)
}

// Task alarm regular.
func (o IntegrationOfflineTaskTaskInfoOutput) TaskAlarmRegularLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) []string { return v.TaskAlarmRegularLists }).(pulumi.StringArrayOutput)
}

// Inlong Task Group ID.
func (o IntegrationOfflineTaskTaskInfoOutput) TaskGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.TaskGroupId }).(pulumi.StringPtrOutput)
}

// Task display mode, 0: canvas mode, 1: form mode.
func (o IntegrationOfflineTaskTaskInfoOutput) TaskMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.TaskMode }).(pulumi.StringPtrOutput)
}

// Update time.
func (o IntegrationOfflineTaskTaskInfoOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// The workflow id to which the task belongs.
func (o IntegrationOfflineTaskTaskInfoOutput) WorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfo) *string { return v.WorkflowId }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationOfflineTaskTaskInfo)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoPtrOutput) ToIntegrationOfflineTaskTaskInfoPtrOutput() IntegrationOfflineTaskTaskInfoPtrOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoPtrOutput) ToIntegrationOfflineTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoPtrOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoPtrOutput) Elem() IntegrationOfflineTaskTaskInfoOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) IntegrationOfflineTaskTaskInfo {
		if v != nil {
			return *v
		}
		var ret IntegrationOfflineTaskTaskInfo
		return ret
	}).(IntegrationOfflineTaskTaskInfoOutput)
}

// User App Id.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Task configuration.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Configs() IntegrationOfflineTaskTaskInfoConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(IntegrationOfflineTaskTaskInfoConfigArrayOutput)
}

// Create time.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.CreatorUin
	}).(pulumi.StringPtrOutput)
}

// Data proxy url.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) DataProxyUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) []string {
		if v == nil {
			return nil
		}
		return v.DataProxyUrls
	}).(pulumi.StringArrayOutput)
}

// Execute context.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ExecuteContexts() IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoExecuteContext {
		if v == nil {
			return nil
		}
		return v.ExecuteContexts
	}).(IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput)
}

// Executor group name.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ExecutorGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.ExecutorGroupName
	}).(pulumi.StringPtrOutput)
}

// Executor resource ID.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ExecutorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.ExecutorId
	}).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ExtConfigs() IntegrationOfflineTaskTaskInfoExtConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoExtConfig {
		if v == nil {
			return nil
		}
		return v.ExtConfigs
	}).(IntegrationOfflineTaskTaskInfoExtConfigArrayOutput)
}

// Whether the task been submitted.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) HasVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *bool {
		if v == nil {
			return nil
		}
		return v.HasVersion
	}).(pulumi.BoolPtrOutput)
}

// InLong manager url.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) InLongManagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InLongManagerUrl
	}).(pulumi.StringPtrOutput)
}

// InLong manager version.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) InLongManagerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InLongManagerVersion
	}).(pulumi.StringPtrOutput)
}

// InLong stream id.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) InLongStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InLongStreamId
	}).(pulumi.StringPtrOutput)
}

// Incharge user.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Incharge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.Incharge
	}).(pulumi.StringPtrOutput)
}

// Input datasource type.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) InputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InputDatasourceType
	}).(pulumi.StringPtrOutput)
}

// Instance version.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) InstanceVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.InstanceVersion
	}).(pulumi.IntPtrOutput)
}

// The last time the task was run.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) LastRunTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRunTime
	}).(pulumi.StringPtrOutput)
}

// Whether the task been locked.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Locked
	}).(pulumi.BoolPtrOutput)
}

// User locked task.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Locker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.Locker
	}).(pulumi.StringPtrOutput)
}

// Node mapping.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Mappings() IntegrationOfflineTaskTaskInfoMappingArrayOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) []IntegrationOfflineTaskTaskInfoMapping {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(IntegrationOfflineTaskTaskInfoMappingArrayOutput)
}

// Number of reads.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) NumRecordsIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.NumRecordsIn
	}).(pulumi.IntPtrOutput)
}

// Number of writes.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) NumRecordsOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.NumRecordsOut
	}).(pulumi.IntPtrOutput)
}

// Times of restarts.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) NumRestarts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.NumRestarts
	}).(pulumi.IntPtrOutput)
}

// Offline task scheduling configuration.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) OfflineTaskAddEntity() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity {
		if v == nil {
			return nil
		}
		return v.OfflineTaskAddEntity
	}).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput)
}

// Operator User ID.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.OperatorUin
	}).(pulumi.StringPtrOutput)
}

// Output datasource type.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) OutputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.OutputDatasourceType
	}).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUin
	}).(pulumi.StringPtrOutput)
}

// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ReadPhase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.ReadPhase
	}).(pulumi.IntPtrOutput)
}

// Read latency.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ReaderDelay() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.ReaderDelay
	}).(pulumi.Float64PtrOutput)
}

// The amount of resources consumed by real-time task.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) RunningCu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.RunningCu
	}).(pulumi.Float64PtrOutput)
}

// Task scheduling id (job id such as oceanus or us).
func (o IntegrationOfflineTaskTaskInfoPtrOutput) ScheduleTaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleTaskId
	}).(pulumi.StringPtrOutput)
}

// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The time the task was stopped.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) StopTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.StopTime
	}).(pulumi.StringPtrOutput)
}

// Whether the task version has been submitted for operation and maintenance.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) Submit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Submit
	}).(pulumi.BoolPtrOutput)
}

// Resource tiering status, 0: in progress, 1: successful, 2: failed.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) SwitchResource() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.SwitchResource
	}).(pulumi.IntPtrOutput)
}

// Synchronization type: 1. Whole database synchronization, 2. Single table synchronization.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) SyncType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.SyncType
	}).(pulumi.IntPtrOutput)
}

// Task alarm regular.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) TaskAlarmRegularLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) []string {
		if v == nil {
			return nil
		}
		return v.TaskAlarmRegularLists
	}).(pulumi.StringArrayOutput)
}

// Inlong Task Group ID.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) TaskGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.TaskGroupId
	}).(pulumi.StringPtrOutput)
}

// Task display mode, 0: canvas mode, 1: form mode.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) TaskMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.TaskMode
	}).(pulumi.StringPtrOutput)
}

// Update time.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// The workflow id to which the task belongs.
func (o IntegrationOfflineTaskTaskInfoPtrOutput) WorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.WorkflowId
	}).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationOfflineTaskTaskInfoConfigInput is an input type that accepts IntegrationOfflineTaskTaskInfoConfigArgs and IntegrationOfflineTaskTaskInfoConfigOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoConfigInput` via:
//
//	IntegrationOfflineTaskTaskInfoConfigArgs{...}
type IntegrationOfflineTaskTaskInfoConfigInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoConfigOutput() IntegrationOfflineTaskTaskInfoConfigOutput
	ToIntegrationOfflineTaskTaskInfoConfigOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoConfigOutput
}

type IntegrationOfflineTaskTaskInfoConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationOfflineTaskTaskInfoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoConfig)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoConfigArgs) ToIntegrationOfflineTaskTaskInfoConfigOutput() IntegrationOfflineTaskTaskInfoConfigOutput {
	return i.ToIntegrationOfflineTaskTaskInfoConfigOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoConfigArgs) ToIntegrationOfflineTaskTaskInfoConfigOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoConfigOutput)
}

// IntegrationOfflineTaskTaskInfoConfigArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoConfigArray and IntegrationOfflineTaskTaskInfoConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoConfigArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoConfigArray{ IntegrationOfflineTaskTaskInfoConfigArgs{...} }
type IntegrationOfflineTaskTaskInfoConfigArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoConfigArrayOutput() IntegrationOfflineTaskTaskInfoConfigArrayOutput
	ToIntegrationOfflineTaskTaskInfoConfigArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoConfigArrayOutput
}

type IntegrationOfflineTaskTaskInfoConfigArray []IntegrationOfflineTaskTaskInfoConfigInput

func (IntegrationOfflineTaskTaskInfoConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoConfig)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoConfigArray) ToIntegrationOfflineTaskTaskInfoConfigArrayOutput() IntegrationOfflineTaskTaskInfoConfigArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoConfigArray) ToIntegrationOfflineTaskTaskInfoConfigArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoConfigArrayOutput)
}

type IntegrationOfflineTaskTaskInfoConfigOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoConfig)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoConfigOutput) ToIntegrationOfflineTaskTaskInfoConfigOutput() IntegrationOfflineTaskTaskInfoConfigOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoConfigOutput) ToIntegrationOfflineTaskTaskInfoConfigOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationOfflineTaskTaskInfoConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationOfflineTaskTaskInfoConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoConfig)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoConfigArrayOutput) ToIntegrationOfflineTaskTaskInfoConfigArrayOutput() IntegrationOfflineTaskTaskInfoConfigArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoConfigArrayOutput) ToIntegrationOfflineTaskTaskInfoConfigArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoConfigArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoConfigArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoConfig {
		return vs[0].([]IntegrationOfflineTaskTaskInfoConfig)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoConfigOutput)
}

type IntegrationOfflineTaskTaskInfoExecuteContext struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationOfflineTaskTaskInfoExecuteContextInput is an input type that accepts IntegrationOfflineTaskTaskInfoExecuteContextArgs and IntegrationOfflineTaskTaskInfoExecuteContextOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoExecuteContextInput` via:
//
//	IntegrationOfflineTaskTaskInfoExecuteContextArgs{...}
type IntegrationOfflineTaskTaskInfoExecuteContextInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoExecuteContextOutput() IntegrationOfflineTaskTaskInfoExecuteContextOutput
	ToIntegrationOfflineTaskTaskInfoExecuteContextOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoExecuteContextOutput
}

type IntegrationOfflineTaskTaskInfoExecuteContextArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationOfflineTaskTaskInfoExecuteContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoExecuteContextArgs) ToIntegrationOfflineTaskTaskInfoExecuteContextOutput() IntegrationOfflineTaskTaskInfoExecuteContextOutput {
	return i.ToIntegrationOfflineTaskTaskInfoExecuteContextOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoExecuteContextArgs) ToIntegrationOfflineTaskTaskInfoExecuteContextOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExecuteContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoExecuteContextOutput)
}

// IntegrationOfflineTaskTaskInfoExecuteContextArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoExecuteContextArray and IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoExecuteContextArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoExecuteContextArray{ IntegrationOfflineTaskTaskInfoExecuteContextArgs{...} }
type IntegrationOfflineTaskTaskInfoExecuteContextArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutput() IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput
	ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput
}

type IntegrationOfflineTaskTaskInfoExecuteContextArray []IntegrationOfflineTaskTaskInfoExecuteContextInput

func (IntegrationOfflineTaskTaskInfoExecuteContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoExecuteContextArray) ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutput() IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoExecuteContextArray) ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput)
}

type IntegrationOfflineTaskTaskInfoExecuteContextOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoExecuteContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoExecuteContextOutput) ToIntegrationOfflineTaskTaskInfoExecuteContextOutput() IntegrationOfflineTaskTaskInfoExecuteContextOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoExecuteContextOutput) ToIntegrationOfflineTaskTaskInfoExecuteContextOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExecuteContextOutput {
	return o
}

// Configuration name.
func (o IntegrationOfflineTaskTaskInfoExecuteContextOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoExecuteContext) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationOfflineTaskTaskInfoExecuteContextOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoExecuteContext) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput) ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutput() IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput) ToIntegrationOfflineTaskTaskInfoExecuteContextArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoExecuteContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoExecuteContext {
		return vs[0].([]IntegrationOfflineTaskTaskInfoExecuteContext)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoExecuteContextOutput)
}

type IntegrationOfflineTaskTaskInfoExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationOfflineTaskTaskInfoExtConfigInput is an input type that accepts IntegrationOfflineTaskTaskInfoExtConfigArgs and IntegrationOfflineTaskTaskInfoExtConfigOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoExtConfigInput` via:
//
//	IntegrationOfflineTaskTaskInfoExtConfigArgs{...}
type IntegrationOfflineTaskTaskInfoExtConfigInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoExtConfigOutput() IntegrationOfflineTaskTaskInfoExtConfigOutput
	ToIntegrationOfflineTaskTaskInfoExtConfigOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoExtConfigOutput
}

type IntegrationOfflineTaskTaskInfoExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationOfflineTaskTaskInfoExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExtConfig)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoExtConfigArgs) ToIntegrationOfflineTaskTaskInfoExtConfigOutput() IntegrationOfflineTaskTaskInfoExtConfigOutput {
	return i.ToIntegrationOfflineTaskTaskInfoExtConfigOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoExtConfigArgs) ToIntegrationOfflineTaskTaskInfoExtConfigOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoExtConfigOutput)
}

// IntegrationOfflineTaskTaskInfoExtConfigArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoExtConfigArray and IntegrationOfflineTaskTaskInfoExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoExtConfigArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoExtConfigArray{ IntegrationOfflineTaskTaskInfoExtConfigArgs{...} }
type IntegrationOfflineTaskTaskInfoExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutput() IntegrationOfflineTaskTaskInfoExtConfigArrayOutput
	ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoExtConfigArrayOutput
}

type IntegrationOfflineTaskTaskInfoExtConfigArray []IntegrationOfflineTaskTaskInfoExtConfigInput

func (IntegrationOfflineTaskTaskInfoExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoExtConfig)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoExtConfigArray) ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutput() IntegrationOfflineTaskTaskInfoExtConfigArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoExtConfigArray) ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoExtConfigArrayOutput)
}

type IntegrationOfflineTaskTaskInfoExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExtConfig)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoExtConfigOutput) ToIntegrationOfflineTaskTaskInfoExtConfigOutput() IntegrationOfflineTaskTaskInfoExtConfigOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoExtConfigOutput) ToIntegrationOfflineTaskTaskInfoExtConfigOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationOfflineTaskTaskInfoExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationOfflineTaskTaskInfoExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoExtConfig)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoExtConfigArrayOutput) ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutput() IntegrationOfflineTaskTaskInfoExtConfigArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoExtConfigArrayOutput) ToIntegrationOfflineTaskTaskInfoExtConfigArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoExtConfigArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoExtConfig {
		return vs[0].([]IntegrationOfflineTaskTaskInfoExtConfig)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoExtConfigOutput)
}

type IntegrationOfflineTaskTaskInfoMapping struct {
	// Node extension configuration information.
	ExtConfigs []IntegrationOfflineTaskTaskInfoMappingExtConfig `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings []IntegrationOfflineTaskTaskInfoMappingSchemaMapping `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId *string `pulumi:"sinkId"`
	// Source node ID.
	SourceId *string `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas []IntegrationOfflineTaskTaskInfoMappingSourceSchema `pulumi:"sourceSchemas"`
}

// IntegrationOfflineTaskTaskInfoMappingInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingArgs and IntegrationOfflineTaskTaskInfoMappingOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingArgs{...}
type IntegrationOfflineTaskTaskInfoMappingInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingOutput() IntegrationOfflineTaskTaskInfoMappingOutput
	ToIntegrationOfflineTaskTaskInfoMappingOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingOutput
}

type IntegrationOfflineTaskTaskInfoMappingArgs struct {
	// Node extension configuration information.
	ExtConfigs IntegrationOfflineTaskTaskInfoMappingExtConfigArrayInput `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayInput `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId pulumi.StringPtrInput `pulumi:"sinkId"`
	// Source node ID.
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayInput `pulumi:"sourceSchemas"`
}

func (IntegrationOfflineTaskTaskInfoMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMapping)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingArgs) ToIntegrationOfflineTaskTaskInfoMappingOutput() IntegrationOfflineTaskTaskInfoMappingOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingArgs) ToIntegrationOfflineTaskTaskInfoMappingOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingOutput)
}

// IntegrationOfflineTaskTaskInfoMappingArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingArray and IntegrationOfflineTaskTaskInfoMappingArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingArray{ IntegrationOfflineTaskTaskInfoMappingArgs{...} }
type IntegrationOfflineTaskTaskInfoMappingArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingArrayOutput() IntegrationOfflineTaskTaskInfoMappingArrayOutput
	ToIntegrationOfflineTaskTaskInfoMappingArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingArrayOutput
}

type IntegrationOfflineTaskTaskInfoMappingArray []IntegrationOfflineTaskTaskInfoMappingInput

func (IntegrationOfflineTaskTaskInfoMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMapping)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingArray) ToIntegrationOfflineTaskTaskInfoMappingArrayOutput() IntegrationOfflineTaskTaskInfoMappingArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingArray) ToIntegrationOfflineTaskTaskInfoMappingArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingArrayOutput)
}

type IntegrationOfflineTaskTaskInfoMappingOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMapping)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingOutput) ToIntegrationOfflineTaskTaskInfoMappingOutput() IntegrationOfflineTaskTaskInfoMappingOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingOutput) ToIntegrationOfflineTaskTaskInfoMappingOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingOutput {
	return o
}

// Node extension configuration information.
func (o IntegrationOfflineTaskTaskInfoMappingOutput) ExtConfigs() IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMapping) []IntegrationOfflineTaskTaskInfoMappingExtConfig {
		return v.ExtConfigs
	}).(IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput)
}

// Schema mapping information.
func (o IntegrationOfflineTaskTaskInfoMappingOutput) SchemaMappings() IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMapping) []IntegrationOfflineTaskTaskInfoMappingSchemaMapping {
		return v.SchemaMappings
	}).(IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput)
}

// Sink node ID.
func (o IntegrationOfflineTaskTaskInfoMappingOutput) SinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMapping) *string { return v.SinkId }).(pulumi.StringPtrOutput)
}

// Source node ID.
func (o IntegrationOfflineTaskTaskInfoMappingOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMapping) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

// Source node schema information.
func (o IntegrationOfflineTaskTaskInfoMappingOutput) SourceSchemas() IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMapping) []IntegrationOfflineTaskTaskInfoMappingSourceSchema {
		return v.SourceSchemas
	}).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput)
}

type IntegrationOfflineTaskTaskInfoMappingArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMapping)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingArrayOutput() IntegrationOfflineTaskTaskInfoMappingArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoMapping {
		return vs[0].([]IntegrationOfflineTaskTaskInfoMapping)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoMappingOutput)
}

type IntegrationOfflineTaskTaskInfoMappingExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationOfflineTaskTaskInfoMappingExtConfigInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingExtConfigArgs and IntegrationOfflineTaskTaskInfoMappingExtConfigOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingExtConfigInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingExtConfigArgs{...}
type IntegrationOfflineTaskTaskInfoMappingExtConfigInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutput() IntegrationOfflineTaskTaskInfoMappingExtConfigOutput
	ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingExtConfigOutput
}

type IntegrationOfflineTaskTaskInfoMappingExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationOfflineTaskTaskInfoMappingExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingExtConfigArgs) ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutput() IntegrationOfflineTaskTaskInfoMappingExtConfigOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingExtConfigArgs) ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingExtConfigOutput)
}

// IntegrationOfflineTaskTaskInfoMappingExtConfigArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingExtConfigArray and IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingExtConfigArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingExtConfigArray{ IntegrationOfflineTaskTaskInfoMappingExtConfigArgs{...} }
type IntegrationOfflineTaskTaskInfoMappingExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput() IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput
	ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput
}

type IntegrationOfflineTaskTaskInfoMappingExtConfigArray []IntegrationOfflineTaskTaskInfoMappingExtConfigInput

func (IntegrationOfflineTaskTaskInfoMappingExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingExtConfigArray) ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput() IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingExtConfigArray) ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput)
}

type IntegrationOfflineTaskTaskInfoMappingExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingExtConfigOutput) ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutput() IntegrationOfflineTaskTaskInfoMappingExtConfigOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingExtConfigOutput) ToIntegrationOfflineTaskTaskInfoMappingExtConfigOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationOfflineTaskTaskInfoMappingExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationOfflineTaskTaskInfoMappingExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput() IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoMappingExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoMappingExtConfig {
		return vs[0].([]IntegrationOfflineTaskTaskInfoMappingExtConfig)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoMappingExtConfigOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSchemaMapping struct {
	// Schema ID from sink node.
	SinkSchemaId string `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId string `pulumi:"sourceSchemaId"`
}

// IntegrationOfflineTaskTaskInfoMappingSchemaMappingInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs and IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingSchemaMappingInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs{...}
type IntegrationOfflineTaskTaskInfoMappingSchemaMappingInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput() IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput
	ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput
}

type IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs struct {
	// Schema ID from sink node.
	SinkSchemaId pulumi.StringInput `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId pulumi.StringInput `pulumi:"sourceSchemaId"`
}

func (IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput() IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput)
}

// IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray and IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray{ IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs{...} }
type IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput() IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput
	ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput
}

type IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray []IntegrationOfflineTaskTaskInfoMappingSchemaMappingInput

func (IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput() IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput() IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput {
	return o
}

// Schema ID from sink node.
func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput) SinkSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSchemaMapping) string { return v.SinkSchemaId }).(pulumi.StringOutput)
}

// Schema ID from source node.
func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput) SourceSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSchemaMapping) string { return v.SourceSchemaId }).(pulumi.StringOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput() IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoMappingSchemaMapping {
		return vs[0].([]IntegrationOfflineTaskTaskInfoMappingSchemaMapping)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchema struct {
	// Schema alias.
	Alias *string `pulumi:"alias"`
	// Schema comment.
	Comment *string `pulumi:"comment"`
	// Schema ID.
	Id string `pulumi:"id"`
	// Schema name.
	Name string `pulumi:"name"`
	// Schema extended attributes.
	Properties []IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty `pulumi:"properties"`
	// Schema type.
	Type string `pulumi:"type"`
	// Schema value.
	Value *string `pulumi:"value"`
}

// IntegrationOfflineTaskTaskInfoMappingSourceSchemaInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs and IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingSourceSchemaInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs{...}
type IntegrationOfflineTaskTaskInfoMappingSourceSchemaInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput
	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs struct {
	// Schema alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Schema comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Schema ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Schema name.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema extended attributes.
	Properties IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayInput `pulumi:"properties"`
	// Schema type.
	Type pulumi.StringInput `pulumi:"type"`
	// Schema value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput)
}

// IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray and IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray{ IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs{...} }
type IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput
	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray []IntegrationOfflineTaskTaskInfoMappingSourceSchemaInput

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput {
	return o
}

// Schema alias.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Schema comment.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Schema ID.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) string { return v.Id }).(pulumi.StringOutput)
}

// Schema name.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Schema extended attributes.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Properties() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) []IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty {
		return v.Properties
	}).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput)
}

// Schema type.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Schema value.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchema) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoMappingSourceSchema {
		return vs[0].([]IntegrationOfflineTaskTaskInfoMappingSourceSchema)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty struct {
	// Attributes name.
	Name *string `pulumi:"name"`
	// Attributes value.
	Value *string `pulumi:"value"`
}

// IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs and IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs{...}
type IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput
	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs struct {
	// Attributes name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Attributes value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput)
}

// IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayInput is an input type that accepts IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray and IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayInput` via:
//
//	IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray{ IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs{...} }
type IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput
	ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray []IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyInput

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return i.ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return o
}

// Attributes name.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Attributes value.
func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput() IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) ToIntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) Index(i pulumi.IntInput) IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty {
		return vs[0].([]IntegrationOfflineTaskTaskInfoMappingSourceSchemaProperty)[vs[1].(int)]
	}).(IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput)
}

type IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity struct {
	// Crontab expression.
	CrontabExpression *string `pulumi:"crontabExpression"`
	// Scheduling type, 0: crontab type, 1: minutes, 2: hours, 3: days, 4: weeks, 5: months, 6: one-time, 7: user-driven, 10: elastic period (week), 11: elastic period (month), 12: year, 13: instant trigger.
	CycleType *int `pulumi:"cycleType"`
	// Scheduling execution end time.
	ExecutionEndTime *string `pulumi:"executionEndTime"`
	// Scheduling execution start time.
	ExecutionStartTime *string `pulumi:"executionStartTime"`
	// Whether to retry.
	Retriable *int `pulumi:"retriable"`
	// Retry waiting time, unit is minutes.
	RetryWait *int `pulumi:"retryWait"`
	// Self-dependent rules, 1: Ordered serial one at a time, queued execution, 2: Unordered serial one at a time, not queued execution, 3: Parallel, multiple at once.
	SelfDepend *int `pulumi:"selfDepend"`
	// Number of retries.
	TryLimit *int `pulumi:"tryLimit"`
}

// IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityInput is an input type that accepts IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs and IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityInput` via:
//
//	IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs{...}
type IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput
	ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput
}

type IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs struct {
	// Crontab expression.
	CrontabExpression pulumi.StringPtrInput `pulumi:"crontabExpression"`
	// Scheduling type, 0: crontab type, 1: minutes, 2: hours, 3: days, 4: weeks, 5: months, 6: one-time, 7: user-driven, 10: elastic period (week), 11: elastic period (month), 12: year, 13: instant trigger.
	CycleType pulumi.IntPtrInput `pulumi:"cycleType"`
	// Scheduling execution end time.
	ExecutionEndTime pulumi.StringPtrInput `pulumi:"executionEndTime"`
	// Scheduling execution start time.
	ExecutionStartTime pulumi.StringPtrInput `pulumi:"executionStartTime"`
	// Whether to retry.
	Retriable pulumi.IntPtrInput `pulumi:"retriable"`
	// Retry waiting time, unit is minutes.
	RetryWait pulumi.IntPtrInput `pulumi:"retryWait"`
	// Self-dependent rules, 1: Ordered serial one at a time, queued execution, 2: Unordered serial one at a time, not queued execution, 3: Parallel, multiple at once.
	SelfDepend pulumi.IntPtrInput `pulumi:"selfDepend"`
	// Number of retries.
	TryLimit pulumi.IntPtrInput `pulumi:"tryLimit"`
}

func (IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity)(nil)).Elem()
}

func (i IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput {
	return i.ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput)
}

func (i IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return i.ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(context.Background())
}

func (i IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput).ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(ctx)
}

// IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrInput is an input type that accepts IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs, IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtr and IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput values.
// You can construct a concrete instance of `IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrInput` via:
//
//	        IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs{...}
//
//	or:
//
//	        nil
type IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrInput interface {
	pulumi.Input

	ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput
	ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput
}

type integrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrType IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs

func IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtr(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrInput {
	return (*integrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrType)(v)
}

func (*integrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity)(nil)).Elem()
}

func (i *integrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrType) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return i.ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(context.Background())
}

func (i *integrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrType) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput)
}

type IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return o.ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(context.Background())
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity {
		return &v
	}).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput)
}

// Crontab expression.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) CrontabExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *string { return v.CrontabExpression }).(pulumi.StringPtrOutput)
}

// Scheduling type, 0: crontab type, 1: minutes, 2: hours, 3: days, 4: weeks, 5: months, 6: one-time, 7: user-driven, 10: elastic period (week), 11: elastic period (month), 12: year, 13: instant trigger.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) CycleType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int { return v.CycleType }).(pulumi.IntPtrOutput)
}

// Scheduling execution end time.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ExecutionEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *string { return v.ExecutionEndTime }).(pulumi.StringPtrOutput)
}

// Scheduling execution start time.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) ExecutionStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *string { return v.ExecutionStartTime }).(pulumi.StringPtrOutput)
}

// Whether to retry.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) Retriable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int { return v.Retriable }).(pulumi.IntPtrOutput)
}

// Retry waiting time, unit is minutes.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) RetryWait() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int { return v.RetryWait }).(pulumi.IntPtrOutput)
}

// Self-dependent rules, 1: Ordered serial one at a time, queued execution, 2: Unordered serial one at a time, not queued execution, 3: Parallel, multiple at once.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) SelfDepend() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int { return v.SelfDepend }).(pulumi.IntPtrOutput)
}

// Number of retries.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput) TryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int { return v.TryLimit }).(pulumi.IntPtrOutput)
}

type IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput struct{ *pulumi.OutputState }

func (IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity)(nil)).Elem()
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) ToIntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutputWithContext(ctx context.Context) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput {
	return o
}

func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) Elem() IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity {
		if v != nil {
			return *v
		}
		var ret IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity
		return ret
	}).(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput)
}

// Crontab expression.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) CrontabExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *string {
		if v == nil {
			return nil
		}
		return v.CrontabExpression
	}).(pulumi.StringPtrOutput)
}

// Scheduling type, 0: crontab type, 1: minutes, 2: hours, 3: days, 4: weeks, 5: months, 6: one-time, 7: user-driven, 10: elastic period (week), 11: elastic period (month), 12: year, 13: instant trigger.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) CycleType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int {
		if v == nil {
			return nil
		}
		return v.CycleType
	}).(pulumi.IntPtrOutput)
}

// Scheduling execution end time.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) ExecutionEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionEndTime
	}).(pulumi.StringPtrOutput)
}

// Scheduling execution start time.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) ExecutionStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionStartTime
	}).(pulumi.StringPtrOutput)
}

// Whether to retry.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) Retriable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int {
		if v == nil {
			return nil
		}
		return v.Retriable
	}).(pulumi.IntPtrOutput)
}

// Retry waiting time, unit is minutes.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) RetryWait() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int {
		if v == nil {
			return nil
		}
		return v.RetryWait
	}).(pulumi.IntPtrOutput)
}

// Self-dependent rules, 1: Ordered serial one at a time, queued execution, 2: Unordered serial one at a time, not queued execution, 3: Parallel, multiple at once.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) SelfDepend() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int {
		if v == nil {
			return nil
		}
		return v.SelfDepend
	}).(pulumi.IntPtrOutput)
}

// Number of retries.
func (o IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput) TryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationOfflineTaskTaskInfoOfflineTaskAddEntity) *int {
		if v == nil {
			return nil
		}
		return v.TryLimit
	}).(pulumi.IntPtrOutput)
}

type IntegrationRealtimeTaskTaskInfo struct {
	// User App Id.
	AppId *string `pulumi:"appId"`
	// Task configuration.
	Configs []IntegrationRealtimeTaskTaskInfoConfig `pulumi:"configs"`
	// Create time.
	CreateTime *string `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin *string `pulumi:"creatorUin"`
	// Data proxy url.
	DataProxyUrls []string `pulumi:"dataProxyUrls"`
	// Execute context.
	ExecuteContexts []IntegrationRealtimeTaskTaskInfoExecuteContext `pulumi:"executeContexts"`
	// Executor group name.
	ExecutorGroupName *string `pulumi:"executorGroupName"`
	// Executor resource ID.
	ExecutorId *string `pulumi:"executorId"`
	// Node extension configuration information.
	ExtConfigs []IntegrationRealtimeTaskTaskInfoExtConfig `pulumi:"extConfigs"`
	// Whether the task been submitted.
	HasVersion *bool `pulumi:"hasVersion"`
	// InLong manager url.
	InLongManagerUrl *string `pulumi:"inLongManagerUrl"`
	// InLong manager version.
	InLongManagerVersion *string `pulumi:"inLongManagerVersion"`
	// InLong stream id.
	InLongStreamId *string `pulumi:"inLongStreamId"`
	// Incharge user.
	Incharge *string `pulumi:"incharge"`
	// Input datasource type.
	InputDatasourceType *string `pulumi:"inputDatasourceType"`
	// Instance version.
	InstanceVersion *int `pulumi:"instanceVersion"`
	// The last time the task was run.
	LastRunTime *string `pulumi:"lastRunTime"`
	// Whether the task been locked.
	Locked *bool `pulumi:"locked"`
	// User locked task.
	Locker *string `pulumi:"locker"`
	// Node mapping.
	Mappings []IntegrationRealtimeTaskTaskInfoMapping `pulumi:"mappings"`
	// Task Node Information.
	Nodes []IntegrationRealtimeTaskTaskInfoNode `pulumi:"nodes"`
	// Number of reads.
	NumRecordsIn *int `pulumi:"numRecordsIn"`
	// Number of writes.
	NumRecordsOut *int `pulumi:"numRecordsOut"`
	// Times of restarts.
	NumRestarts *int `pulumi:"numRestarts"`
	// Operator User ID.
	OperatorUin *string `pulumi:"operatorUin"`
	// Output datasource type.
	OutputDatasourceType *string `pulumi:"outputDatasourceType"`
	// Owner User ID.
	OwnerUin *string `pulumi:"ownerUin"`
	// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
	ReadPhase *int `pulumi:"readPhase"`
	// Read latency.
	ReaderDelay *float64 `pulumi:"readerDelay"`
	// The amount of resources consumed by real-time task.
	RunningCu *float64 `pulumi:"runningCu"`
	// Task scheduling id (job id such as oceanus or us).
	ScheduleTaskId *string `pulumi:"scheduleTaskId"`
	// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
	Status *int `pulumi:"status"`
	// The time the task was stopped.
	StopTime *string `pulumi:"stopTime"`
	// Whether the task version has been submitted for operation and maintenance.
	Submit *bool `pulumi:"submit"`
	// Resource tiering status, 0: in progress, 1: successful, 2: failed.
	SwitchResource *int `pulumi:"switchResource"`
	// Task alarm regular.
	TaskAlarmRegularLists []string `pulumi:"taskAlarmRegularLists"`
	// Inlong Task Group ID.
	TaskGroupId *string `pulumi:"taskGroupId"`
	// Update time.
	UpdateTime *string `pulumi:"updateTime"`
	// The workflow id to which the task belongs.
	WorkflowId *string `pulumi:"workflowId"`
}

// IntegrationRealtimeTaskTaskInfoInput is an input type that accepts IntegrationRealtimeTaskTaskInfoArgs and IntegrationRealtimeTaskTaskInfoOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoInput` via:
//
//	IntegrationRealtimeTaskTaskInfoArgs{...}
type IntegrationRealtimeTaskTaskInfoInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoOutput() IntegrationRealtimeTaskTaskInfoOutput
	ToIntegrationRealtimeTaskTaskInfoOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoOutput
}

type IntegrationRealtimeTaskTaskInfoArgs struct {
	// User App Id.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Task configuration.
	Configs IntegrationRealtimeTaskTaskInfoConfigArrayInput `pulumi:"configs"`
	// Create time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin pulumi.StringPtrInput `pulumi:"creatorUin"`
	// Data proxy url.
	DataProxyUrls pulumi.StringArrayInput `pulumi:"dataProxyUrls"`
	// Execute context.
	ExecuteContexts IntegrationRealtimeTaskTaskInfoExecuteContextArrayInput `pulumi:"executeContexts"`
	// Executor group name.
	ExecutorGroupName pulumi.StringPtrInput `pulumi:"executorGroupName"`
	// Executor resource ID.
	ExecutorId pulumi.StringPtrInput `pulumi:"executorId"`
	// Node extension configuration information.
	ExtConfigs IntegrationRealtimeTaskTaskInfoExtConfigArrayInput `pulumi:"extConfigs"`
	// Whether the task been submitted.
	HasVersion pulumi.BoolPtrInput `pulumi:"hasVersion"`
	// InLong manager url.
	InLongManagerUrl pulumi.StringPtrInput `pulumi:"inLongManagerUrl"`
	// InLong manager version.
	InLongManagerVersion pulumi.StringPtrInput `pulumi:"inLongManagerVersion"`
	// InLong stream id.
	InLongStreamId pulumi.StringPtrInput `pulumi:"inLongStreamId"`
	// Incharge user.
	Incharge pulumi.StringPtrInput `pulumi:"incharge"`
	// Input datasource type.
	InputDatasourceType pulumi.StringPtrInput `pulumi:"inputDatasourceType"`
	// Instance version.
	InstanceVersion pulumi.IntPtrInput `pulumi:"instanceVersion"`
	// The last time the task was run.
	LastRunTime pulumi.StringPtrInput `pulumi:"lastRunTime"`
	// Whether the task been locked.
	Locked pulumi.BoolPtrInput `pulumi:"locked"`
	// User locked task.
	Locker pulumi.StringPtrInput `pulumi:"locker"`
	// Node mapping.
	Mappings IntegrationRealtimeTaskTaskInfoMappingArrayInput `pulumi:"mappings"`
	// Task Node Information.
	Nodes IntegrationRealtimeTaskTaskInfoNodeArrayInput `pulumi:"nodes"`
	// Number of reads.
	NumRecordsIn pulumi.IntPtrInput `pulumi:"numRecordsIn"`
	// Number of writes.
	NumRecordsOut pulumi.IntPtrInput `pulumi:"numRecordsOut"`
	// Times of restarts.
	NumRestarts pulumi.IntPtrInput `pulumi:"numRestarts"`
	// Operator User ID.
	OperatorUin pulumi.StringPtrInput `pulumi:"operatorUin"`
	// Output datasource type.
	OutputDatasourceType pulumi.StringPtrInput `pulumi:"outputDatasourceType"`
	// Owner User ID.
	OwnerUin pulumi.StringPtrInput `pulumi:"ownerUin"`
	// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
	ReadPhase pulumi.IntPtrInput `pulumi:"readPhase"`
	// Read latency.
	ReaderDelay pulumi.Float64PtrInput `pulumi:"readerDelay"`
	// The amount of resources consumed by real-time task.
	RunningCu pulumi.Float64PtrInput `pulumi:"runningCu"`
	// Task scheduling id (job id such as oceanus or us).
	ScheduleTaskId pulumi.StringPtrInput `pulumi:"scheduleTaskId"`
	// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// The time the task was stopped.
	StopTime pulumi.StringPtrInput `pulumi:"stopTime"`
	// Whether the task version has been submitted for operation and maintenance.
	Submit pulumi.BoolPtrInput `pulumi:"submit"`
	// Resource tiering status, 0: in progress, 1: successful, 2: failed.
	SwitchResource pulumi.IntPtrInput `pulumi:"switchResource"`
	// Task alarm regular.
	TaskAlarmRegularLists pulumi.StringArrayInput `pulumi:"taskAlarmRegularLists"`
	// Inlong Task Group ID.
	TaskGroupId pulumi.StringPtrInput `pulumi:"taskGroupId"`
	// Update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// The workflow id to which the task belongs.
	WorkflowId pulumi.StringPtrInput `pulumi:"workflowId"`
}

func (IntegrationRealtimeTaskTaskInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfo)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoArgs) ToIntegrationRealtimeTaskTaskInfoOutput() IntegrationRealtimeTaskTaskInfoOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoArgs) ToIntegrationRealtimeTaskTaskInfoOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoOutput)
}

func (i IntegrationRealtimeTaskTaskInfoArgs) ToIntegrationRealtimeTaskTaskInfoPtrOutput() IntegrationRealtimeTaskTaskInfoPtrOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoArgs) ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoOutput).ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(ctx)
}

// IntegrationRealtimeTaskTaskInfoPtrInput is an input type that accepts IntegrationRealtimeTaskTaskInfoArgs, IntegrationRealtimeTaskTaskInfoPtr and IntegrationRealtimeTaskTaskInfoPtrOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoPtrInput` via:
//
//	        IntegrationRealtimeTaskTaskInfoArgs{...}
//
//	or:
//
//	        nil
type IntegrationRealtimeTaskTaskInfoPtrInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoPtrOutput() IntegrationRealtimeTaskTaskInfoPtrOutput
	ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoPtrOutput
}

type integrationRealtimeTaskTaskInfoPtrType IntegrationRealtimeTaskTaskInfoArgs

func IntegrationRealtimeTaskTaskInfoPtr(v *IntegrationRealtimeTaskTaskInfoArgs) IntegrationRealtimeTaskTaskInfoPtrInput {
	return (*integrationRealtimeTaskTaskInfoPtrType)(v)
}

func (*integrationRealtimeTaskTaskInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRealtimeTaskTaskInfo)(nil)).Elem()
}

func (i *integrationRealtimeTaskTaskInfoPtrType) ToIntegrationRealtimeTaskTaskInfoPtrOutput() IntegrationRealtimeTaskTaskInfoPtrOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(context.Background())
}

func (i *integrationRealtimeTaskTaskInfoPtrType) ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfo)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoOutput) ToIntegrationRealtimeTaskTaskInfoOutput() IntegrationRealtimeTaskTaskInfoOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoOutput) ToIntegrationRealtimeTaskTaskInfoOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoOutput) ToIntegrationRealtimeTaskTaskInfoPtrOutput() IntegrationRealtimeTaskTaskInfoPtrOutput {
	return o.ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(context.Background())
}

func (o IntegrationRealtimeTaskTaskInfoOutput) ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRealtimeTaskTaskInfo) *IntegrationRealtimeTaskTaskInfo {
		return &v
	}).(IntegrationRealtimeTaskTaskInfoPtrOutput)
}

// User App Id.
func (o IntegrationRealtimeTaskTaskInfoOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Task configuration.
func (o IntegrationRealtimeTaskTaskInfoOutput) Configs() IntegrationRealtimeTaskTaskInfoConfigArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoConfig { return v.Configs }).(IntegrationRealtimeTaskTaskInfoConfigArrayOutput)
}

// Create time.
func (o IntegrationRealtimeTaskTaskInfoOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationRealtimeTaskTaskInfoOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.CreatorUin }).(pulumi.StringPtrOutput)
}

// Data proxy url.
func (o IntegrationRealtimeTaskTaskInfoOutput) DataProxyUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []string { return v.DataProxyUrls }).(pulumi.StringArrayOutput)
}

// Execute context.
func (o IntegrationRealtimeTaskTaskInfoOutput) ExecuteContexts() IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoExecuteContext {
		return v.ExecuteContexts
	}).(IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput)
}

// Executor group name.
func (o IntegrationRealtimeTaskTaskInfoOutput) ExecutorGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.ExecutorGroupName }).(pulumi.StringPtrOutput)
}

// Executor resource ID.
func (o IntegrationRealtimeTaskTaskInfoOutput) ExecutorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.ExecutorId }).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationRealtimeTaskTaskInfoOutput) ExtConfigs() IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoExtConfig {
		return v.ExtConfigs
	}).(IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput)
}

// Whether the task been submitted.
func (o IntegrationRealtimeTaskTaskInfoOutput) HasVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *bool { return v.HasVersion }).(pulumi.BoolPtrOutput)
}

// InLong manager url.
func (o IntegrationRealtimeTaskTaskInfoOutput) InLongManagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.InLongManagerUrl }).(pulumi.StringPtrOutput)
}

// InLong manager version.
func (o IntegrationRealtimeTaskTaskInfoOutput) InLongManagerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.InLongManagerVersion }).(pulumi.StringPtrOutput)
}

// InLong stream id.
func (o IntegrationRealtimeTaskTaskInfoOutput) InLongStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.InLongStreamId }).(pulumi.StringPtrOutput)
}

// Incharge user.
func (o IntegrationRealtimeTaskTaskInfoOutput) Incharge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.Incharge }).(pulumi.StringPtrOutput)
}

// Input datasource type.
func (o IntegrationRealtimeTaskTaskInfoOutput) InputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.InputDatasourceType }).(pulumi.StringPtrOutput)
}

// Instance version.
func (o IntegrationRealtimeTaskTaskInfoOutput) InstanceVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.InstanceVersion }).(pulumi.IntPtrOutput)
}

// The last time the task was run.
func (o IntegrationRealtimeTaskTaskInfoOutput) LastRunTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.LastRunTime }).(pulumi.StringPtrOutput)
}

// Whether the task been locked.
func (o IntegrationRealtimeTaskTaskInfoOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *bool { return v.Locked }).(pulumi.BoolPtrOutput)
}

// User locked task.
func (o IntegrationRealtimeTaskTaskInfoOutput) Locker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.Locker }).(pulumi.StringPtrOutput)
}

// Node mapping.
func (o IntegrationRealtimeTaskTaskInfoOutput) Mappings() IntegrationRealtimeTaskTaskInfoMappingArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoMapping { return v.Mappings }).(IntegrationRealtimeTaskTaskInfoMappingArrayOutput)
}

// Task Node Information.
func (o IntegrationRealtimeTaskTaskInfoOutput) Nodes() IntegrationRealtimeTaskTaskInfoNodeArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoNode { return v.Nodes }).(IntegrationRealtimeTaskTaskInfoNodeArrayOutput)
}

// Number of reads.
func (o IntegrationRealtimeTaskTaskInfoOutput) NumRecordsIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.NumRecordsIn }).(pulumi.IntPtrOutput)
}

// Number of writes.
func (o IntegrationRealtimeTaskTaskInfoOutput) NumRecordsOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.NumRecordsOut }).(pulumi.IntPtrOutput)
}

// Times of restarts.
func (o IntegrationRealtimeTaskTaskInfoOutput) NumRestarts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.NumRestarts }).(pulumi.IntPtrOutput)
}

// Operator User ID.
func (o IntegrationRealtimeTaskTaskInfoOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.OperatorUin }).(pulumi.StringPtrOutput)
}

// Output datasource type.
func (o IntegrationRealtimeTaskTaskInfoOutput) OutputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.OutputDatasourceType }).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationRealtimeTaskTaskInfoOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.OwnerUin }).(pulumi.StringPtrOutput)
}

// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
func (o IntegrationRealtimeTaskTaskInfoOutput) ReadPhase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.ReadPhase }).(pulumi.IntPtrOutput)
}

// Read latency.
func (o IntegrationRealtimeTaskTaskInfoOutput) ReaderDelay() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *float64 { return v.ReaderDelay }).(pulumi.Float64PtrOutput)
}

// The amount of resources consumed by real-time task.
func (o IntegrationRealtimeTaskTaskInfoOutput) RunningCu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *float64 { return v.RunningCu }).(pulumi.Float64PtrOutput)
}

// Task scheduling id (job id such as oceanus or us).
func (o IntegrationRealtimeTaskTaskInfoOutput) ScheduleTaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.ScheduleTaskId }).(pulumi.StringPtrOutput)
}

// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
func (o IntegrationRealtimeTaskTaskInfoOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// The time the task was stopped.
func (o IntegrationRealtimeTaskTaskInfoOutput) StopTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.StopTime }).(pulumi.StringPtrOutput)
}

// Whether the task version has been submitted for operation and maintenance.
func (o IntegrationRealtimeTaskTaskInfoOutput) Submit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *bool { return v.Submit }).(pulumi.BoolPtrOutput)
}

// Resource tiering status, 0: in progress, 1: successful, 2: failed.
func (o IntegrationRealtimeTaskTaskInfoOutput) SwitchResource() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *int { return v.SwitchResource }).(pulumi.IntPtrOutput)
}

// Task alarm regular.
func (o IntegrationRealtimeTaskTaskInfoOutput) TaskAlarmRegularLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) []string { return v.TaskAlarmRegularLists }).(pulumi.StringArrayOutput)
}

// Inlong Task Group ID.
func (o IntegrationRealtimeTaskTaskInfoOutput) TaskGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.TaskGroupId }).(pulumi.StringPtrOutput)
}

// Update time.
func (o IntegrationRealtimeTaskTaskInfoOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// The workflow id to which the task belongs.
func (o IntegrationRealtimeTaskTaskInfoOutput) WorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfo) *string { return v.WorkflowId }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRealtimeTaskTaskInfo)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ToIntegrationRealtimeTaskTaskInfoPtrOutput() IntegrationRealtimeTaskTaskInfoPtrOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ToIntegrationRealtimeTaskTaskInfoPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoPtrOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Elem() IntegrationRealtimeTaskTaskInfoOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) IntegrationRealtimeTaskTaskInfo {
		if v != nil {
			return *v
		}
		var ret IntegrationRealtimeTaskTaskInfo
		return ret
	}).(IntegrationRealtimeTaskTaskInfoOutput)
}

// User App Id.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Task configuration.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Configs() IntegrationRealtimeTaskTaskInfoConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(IntegrationRealtimeTaskTaskInfoConfigArrayOutput)
}

// Create time.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.CreatorUin
	}).(pulumi.StringPtrOutput)
}

// Data proxy url.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) DataProxyUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []string {
		if v == nil {
			return nil
		}
		return v.DataProxyUrls
	}).(pulumi.StringArrayOutput)
}

// Execute context.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ExecuteContexts() IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoExecuteContext {
		if v == nil {
			return nil
		}
		return v.ExecuteContexts
	}).(IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput)
}

// Executor group name.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ExecutorGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.ExecutorGroupName
	}).(pulumi.StringPtrOutput)
}

// Executor resource ID.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ExecutorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.ExecutorId
	}).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ExtConfigs() IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoExtConfig {
		if v == nil {
			return nil
		}
		return v.ExtConfigs
	}).(IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput)
}

// Whether the task been submitted.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) HasVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *bool {
		if v == nil {
			return nil
		}
		return v.HasVersion
	}).(pulumi.BoolPtrOutput)
}

// InLong manager url.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) InLongManagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InLongManagerUrl
	}).(pulumi.StringPtrOutput)
}

// InLong manager version.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) InLongManagerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InLongManagerVersion
	}).(pulumi.StringPtrOutput)
}

// InLong stream id.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) InLongStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InLongStreamId
	}).(pulumi.StringPtrOutput)
}

// Incharge user.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Incharge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.Incharge
	}).(pulumi.StringPtrOutput)
}

// Input datasource type.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) InputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.InputDatasourceType
	}).(pulumi.StringPtrOutput)
}

// Instance version.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) InstanceVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.InstanceVersion
	}).(pulumi.IntPtrOutput)
}

// The last time the task was run.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) LastRunTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRunTime
	}).(pulumi.StringPtrOutput)
}

// Whether the task been locked.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Locked
	}).(pulumi.BoolPtrOutput)
}

// User locked task.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Locker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.Locker
	}).(pulumi.StringPtrOutput)
}

// Node mapping.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Mappings() IntegrationRealtimeTaskTaskInfoMappingArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoMapping {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(IntegrationRealtimeTaskTaskInfoMappingArrayOutput)
}

// Task Node Information.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Nodes() IntegrationRealtimeTaskTaskInfoNodeArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []IntegrationRealtimeTaskTaskInfoNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(IntegrationRealtimeTaskTaskInfoNodeArrayOutput)
}

// Number of reads.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) NumRecordsIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.NumRecordsIn
	}).(pulumi.IntPtrOutput)
}

// Number of writes.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) NumRecordsOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.NumRecordsOut
	}).(pulumi.IntPtrOutput)
}

// Times of restarts.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) NumRestarts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.NumRestarts
	}).(pulumi.IntPtrOutput)
}

// Operator User ID.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.OperatorUin
	}).(pulumi.StringPtrOutput)
}

// Output datasource type.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) OutputDatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.OutputDatasourceType
	}).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUin
	}).(pulumi.StringPtrOutput)
}

// Reading stage, 0: full amount, 1: partial full amount, 2: all incremental.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ReadPhase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.ReadPhase
	}).(pulumi.IntPtrOutput)
}

// Read latency.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ReaderDelay() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.ReaderDelay
	}).(pulumi.Float64PtrOutput)
}

// The amount of resources consumed by real-time task.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) RunningCu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.RunningCu
	}).(pulumi.Float64PtrOutput)
}

// Task scheduling id (job id such as oceanus or us).
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) ScheduleTaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleTaskId
	}).(pulumi.StringPtrOutput)
}

// Task status 1. Not started | Task initialization, 2. Task starting, 3. Running, 4. Paused, 5. Task stopping, 6. Stopped, 7. Execution failed, 8. deleted, 9. Locked, 404. unknown status.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The time the task was stopped.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) StopTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.StopTime
	}).(pulumi.StringPtrOutput)
}

// Whether the task version has been submitted for operation and maintenance.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) Submit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Submit
	}).(pulumi.BoolPtrOutput)
}

// Resource tiering status, 0: in progress, 1: successful, 2: failed.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) SwitchResource() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *int {
		if v == nil {
			return nil
		}
		return v.SwitchResource
	}).(pulumi.IntPtrOutput)
}

// Task alarm regular.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) TaskAlarmRegularLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) []string {
		if v == nil {
			return nil
		}
		return v.TaskAlarmRegularLists
	}).(pulumi.StringArrayOutput)
}

// Inlong Task Group ID.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) TaskGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.TaskGroupId
	}).(pulumi.StringPtrOutput)
}

// Update time.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// The workflow id to which the task belongs.
func (o IntegrationRealtimeTaskTaskInfoPtrOutput) WorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfo) *string {
		if v == nil {
			return nil
		}
		return v.WorkflowId
	}).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoConfigInput is an input type that accepts IntegrationRealtimeTaskTaskInfoConfigArgs and IntegrationRealtimeTaskTaskInfoConfigOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoConfigInput` via:
//
//	IntegrationRealtimeTaskTaskInfoConfigArgs{...}
type IntegrationRealtimeTaskTaskInfoConfigInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoConfigOutput() IntegrationRealtimeTaskTaskInfoConfigOutput
	ToIntegrationRealtimeTaskTaskInfoConfigOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoConfigOutput
}

type IntegrationRealtimeTaskTaskInfoConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoConfigArgs) ToIntegrationRealtimeTaskTaskInfoConfigOutput() IntegrationRealtimeTaskTaskInfoConfigOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoConfigOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoConfigArgs) ToIntegrationRealtimeTaskTaskInfoConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoConfigOutput)
}

// IntegrationRealtimeTaskTaskInfoConfigArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoConfigArray and IntegrationRealtimeTaskTaskInfoConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoConfigArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoConfigArray{ IntegrationRealtimeTaskTaskInfoConfigArgs{...} }
type IntegrationRealtimeTaskTaskInfoConfigArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoConfigArrayOutput() IntegrationRealtimeTaskTaskInfoConfigArrayOutput
	ToIntegrationRealtimeTaskTaskInfoConfigArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoConfigArrayOutput
}

type IntegrationRealtimeTaskTaskInfoConfigArray []IntegrationRealtimeTaskTaskInfoConfigInput

func (IntegrationRealtimeTaskTaskInfoConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoConfigArray) ToIntegrationRealtimeTaskTaskInfoConfigArrayOutput() IntegrationRealtimeTaskTaskInfoConfigArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoConfigArray) ToIntegrationRealtimeTaskTaskInfoConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoConfigArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoConfigOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoConfigOutput) ToIntegrationRealtimeTaskTaskInfoConfigOutput() IntegrationRealtimeTaskTaskInfoConfigOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoConfigOutput) ToIntegrationRealtimeTaskTaskInfoConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoConfigArrayOutput() IntegrationRealtimeTaskTaskInfoConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoConfigArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoConfig {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoConfig)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoConfigOutput)
}

type IntegrationRealtimeTaskTaskInfoExecuteContext struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoExecuteContextInput is an input type that accepts IntegrationRealtimeTaskTaskInfoExecuteContextArgs and IntegrationRealtimeTaskTaskInfoExecuteContextOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoExecuteContextInput` via:
//
//	IntegrationRealtimeTaskTaskInfoExecuteContextArgs{...}
type IntegrationRealtimeTaskTaskInfoExecuteContextInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoExecuteContextOutput() IntegrationRealtimeTaskTaskInfoExecuteContextOutput
	ToIntegrationRealtimeTaskTaskInfoExecuteContextOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoExecuteContextOutput
}

type IntegrationRealtimeTaskTaskInfoExecuteContextArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoExecuteContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoExecuteContextArgs) ToIntegrationRealtimeTaskTaskInfoExecuteContextOutput() IntegrationRealtimeTaskTaskInfoExecuteContextOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoExecuteContextOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoExecuteContextArgs) ToIntegrationRealtimeTaskTaskInfoExecuteContextOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExecuteContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoExecuteContextOutput)
}

// IntegrationRealtimeTaskTaskInfoExecuteContextArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoExecuteContextArray and IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoExecuteContextArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoExecuteContextArray{ IntegrationRealtimeTaskTaskInfoExecuteContextArgs{...} }
type IntegrationRealtimeTaskTaskInfoExecuteContextArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput() IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput
	ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput
}

type IntegrationRealtimeTaskTaskInfoExecuteContextArray []IntegrationRealtimeTaskTaskInfoExecuteContextInput

func (IntegrationRealtimeTaskTaskInfoExecuteContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoExecuteContextArray) ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput() IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoExecuteContextArray) ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoExecuteContextOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoExecuteContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoExecuteContextOutput) ToIntegrationRealtimeTaskTaskInfoExecuteContextOutput() IntegrationRealtimeTaskTaskInfoExecuteContextOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoExecuteContextOutput) ToIntegrationRealtimeTaskTaskInfoExecuteContextOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExecuteContextOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoExecuteContextOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoExecuteContext) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoExecuteContextOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoExecuteContext) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoExecuteContext)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput) ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput() IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput) ToIntegrationRealtimeTaskTaskInfoExecuteContextArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoExecuteContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoExecuteContext {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoExecuteContext)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoExecuteContextOutput)
}

type IntegrationRealtimeTaskTaskInfoExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoExtConfigInput is an input type that accepts IntegrationRealtimeTaskTaskInfoExtConfigArgs and IntegrationRealtimeTaskTaskInfoExtConfigOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoExtConfigInput` via:
//
//	IntegrationRealtimeTaskTaskInfoExtConfigArgs{...}
type IntegrationRealtimeTaskTaskInfoExtConfigInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoExtConfigOutput() IntegrationRealtimeTaskTaskInfoExtConfigOutput
	ToIntegrationRealtimeTaskTaskInfoExtConfigOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoExtConfigOutput
}

type IntegrationRealtimeTaskTaskInfoExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoExtConfigOutput() IntegrationRealtimeTaskTaskInfoExtConfigOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoExtConfigOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoExtConfigOutput)
}

// IntegrationRealtimeTaskTaskInfoExtConfigArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoExtConfigArray and IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoExtConfigArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoExtConfigArray{ IntegrationRealtimeTaskTaskInfoExtConfigArgs{...} }
type IntegrationRealtimeTaskTaskInfoExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput
	ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput
}

type IntegrationRealtimeTaskTaskInfoExtConfigArray []IntegrationRealtimeTaskTaskInfoExtConfigInput

func (IntegrationRealtimeTaskTaskInfoExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoExtConfigArray) ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoExtConfigArray) ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoExtConfigOutput() IntegrationRealtimeTaskTaskInfoExtConfigOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoExtConfig {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoExtConfig)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoExtConfigOutput)
}

type IntegrationRealtimeTaskTaskInfoMapping struct {
	// Node extension configuration information.
	ExtConfigs []IntegrationRealtimeTaskTaskInfoMappingExtConfig `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings []IntegrationRealtimeTaskTaskInfoMappingSchemaMapping `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId *string `pulumi:"sinkId"`
	// Source node ID.
	SourceId *string `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas []IntegrationRealtimeTaskTaskInfoMappingSourceSchema `pulumi:"sourceSchemas"`
}

// IntegrationRealtimeTaskTaskInfoMappingInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingArgs and IntegrationRealtimeTaskTaskInfoMappingOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingArgs{...}
type IntegrationRealtimeTaskTaskInfoMappingInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingOutput() IntegrationRealtimeTaskTaskInfoMappingOutput
	ToIntegrationRealtimeTaskTaskInfoMappingOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingOutput
}

type IntegrationRealtimeTaskTaskInfoMappingArgs struct {
	// Node extension configuration information.
	ExtConfigs IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayInput `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayInput `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId pulumi.StringPtrInput `pulumi:"sinkId"`
	// Source node ID.
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayInput `pulumi:"sourceSchemas"`
}

func (IntegrationRealtimeTaskTaskInfoMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingArgs) ToIntegrationRealtimeTaskTaskInfoMappingOutput() IntegrationRealtimeTaskTaskInfoMappingOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingArgs) ToIntegrationRealtimeTaskTaskInfoMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingOutput)
}

// IntegrationRealtimeTaskTaskInfoMappingArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingArray and IntegrationRealtimeTaskTaskInfoMappingArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingArray{ IntegrationRealtimeTaskTaskInfoMappingArgs{...} }
type IntegrationRealtimeTaskTaskInfoMappingArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingArrayOutput() IntegrationRealtimeTaskTaskInfoMappingArrayOutput
	ToIntegrationRealtimeTaskTaskInfoMappingArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingArrayOutput
}

type IntegrationRealtimeTaskTaskInfoMappingArray []IntegrationRealtimeTaskTaskInfoMappingInput

func (IntegrationRealtimeTaskTaskInfoMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingArray) ToIntegrationRealtimeTaskTaskInfoMappingArrayOutput() IntegrationRealtimeTaskTaskInfoMappingArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingArray) ToIntegrationRealtimeTaskTaskInfoMappingArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingOutput) ToIntegrationRealtimeTaskTaskInfoMappingOutput() IntegrationRealtimeTaskTaskInfoMappingOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingOutput) ToIntegrationRealtimeTaskTaskInfoMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingOutput {
	return o
}

// Node extension configuration information.
func (o IntegrationRealtimeTaskTaskInfoMappingOutput) ExtConfigs() IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMapping) []IntegrationRealtimeTaskTaskInfoMappingExtConfig {
		return v.ExtConfigs
	}).(IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput)
}

// Schema mapping information.
func (o IntegrationRealtimeTaskTaskInfoMappingOutput) SchemaMappings() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMapping) []IntegrationRealtimeTaskTaskInfoMappingSchemaMapping {
		return v.SchemaMappings
	}).(IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput)
}

// Sink node ID.
func (o IntegrationRealtimeTaskTaskInfoMappingOutput) SinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMapping) *string { return v.SinkId }).(pulumi.StringPtrOutput)
}

// Source node ID.
func (o IntegrationRealtimeTaskTaskInfoMappingOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMapping) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

// Source node schema information.
func (o IntegrationRealtimeTaskTaskInfoMappingOutput) SourceSchemas() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMapping) []IntegrationRealtimeTaskTaskInfoMappingSourceSchema {
		return v.SourceSchemas
	}).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingArrayOutput() IntegrationRealtimeTaskTaskInfoMappingArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoMapping {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoMapping)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoMappingOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoMappingExtConfigInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs and IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingExtConfigInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs{...}
type IntegrationRealtimeTaskTaskInfoMappingExtConfigInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutput() IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput
	ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput
}

type IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutput() IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput)
}

// IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingExtConfigArray and IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingExtConfigArray{ IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs{...} }
type IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput
	ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput
}

type IntegrationRealtimeTaskTaskInfoMappingExtConfigArray []IntegrationRealtimeTaskTaskInfoMappingExtConfigInput

func (IntegrationRealtimeTaskTaskInfoMappingExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingExtConfigArray) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingExtConfigArray) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutput() IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoMappingExtConfig {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoMappingExtConfig)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSchemaMapping struct {
	// Schema ID from sink node.
	SinkSchemaId string `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId string `pulumi:"sourceSchemaId"`
}

// IntegrationRealtimeTaskTaskInfoMappingSchemaMappingInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs and IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingSchemaMappingInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs{...}
type IntegrationRealtimeTaskTaskInfoMappingSchemaMappingInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput
	ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput
}

type IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs struct {
	// Schema ID from sink node.
	SinkSchemaId pulumi.StringInput `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId pulumi.StringInput `pulumi:"sourceSchemaId"`
}

func (IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput)
}

// IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray and IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray{ IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs{...} }
type IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput
	ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput
}

type IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray []IntegrationRealtimeTaskTaskInfoMappingSchemaMappingInput

func (IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput {
	return o
}

// Schema ID from sink node.
func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput) SinkSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSchemaMapping) string { return v.SinkSchemaId }).(pulumi.StringOutput)
}

// Schema ID from source node.
func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput) SourceSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSchemaMapping) string { return v.SourceSchemaId }).(pulumi.StringOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoMappingSchemaMapping {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoMappingSchemaMapping)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchema struct {
	// Schema alias.
	Alias *string `pulumi:"alias"`
	// Schema comment.
	Comment *string `pulumi:"comment"`
	// Schema ID.
	Id string `pulumi:"id"`
	// Schema name.
	Name string `pulumi:"name"`
	// Schema extended attributes.
	Properties []IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty `pulumi:"properties"`
	// Schema type.
	Type string `pulumi:"type"`
	// Schema value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoMappingSourceSchemaInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs and IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingSourceSchemaInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs{...}
type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput
	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs struct {
	// Schema alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Schema comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Schema ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Schema name.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema extended attributes.
	Properties IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayInput `pulumi:"properties"`
	// Schema type.
	Type pulumi.StringInput `pulumi:"type"`
	// Schema value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput)
}

// IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray and IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray{ IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs{...} }
type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput
	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray []IntegrationRealtimeTaskTaskInfoMappingSourceSchemaInput

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput {
	return o
}

// Schema alias.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Schema comment.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Schema ID.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) string { return v.Id }).(pulumi.StringOutput)
}

// Schema name.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Schema extended attributes.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Properties() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) []IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty {
		return v.Properties
	}).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput)
}

// Schema type.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Schema value.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchema) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoMappingSourceSchema {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoMappingSourceSchema)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty struct {
	// Attributes name.
	Name *string `pulumi:"name"`
	// Attributes value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs and IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs{...}
type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput
	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs struct {
	// Attributes name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Attributes value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput)
}

// IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray and IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray{ IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs{...} }
type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput
	ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray []IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyInput

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return o
}

// Attributes name.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Attributes value.
func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) ToIntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoMappingSourceSchemaProperty)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput)
}

type IntegrationRealtimeTaskTaskInfoNode struct {
	// User App Id.
	AppId *string `pulumi:"appId"`
	// Node configuration information.
	Configs []IntegrationRealtimeTaskTaskInfoNodeConfig `pulumi:"configs"`
	// Create time.
	CreateTime *string `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin *string `pulumi:"creatorUin"`
	// Data source type: MYSQL, POSTGRE, ORACLE, SQLSERVER, FTP, HIVE, HDFS, ICEBERG, KAFKA, HBASE, SPARK, TBASE, DB2, DM, GAUSSDB, GBASE, IMPALA, ES, S3_DATAINSIGHT, GREENPLUM, PHOENIX, SAP_HANA, SFTP, OCEANBASE, CLICKHOUSE, KUDU, VERTICA, REDIS, COS, DLC, DORIS, CKAFKA, DTS_KAFKA, S3, CDW, TDSQLC, TDSQL, MONGODB, SYBASE, REST_API, StarRocks, TCHOUSE_X.
	DataSourceType *string `pulumi:"dataSourceType"`
	// Datasource ID.
	DatasourceId *string `pulumi:"datasourceId"`
	// Node Description.
	Description *string `pulumi:"description"`
	// Node extension configuration information.
	ExtConfigs []IntegrationRealtimeTaskTaskInfoNodeExtConfig `pulumi:"extConfigs"`
	// Node ID.
	Id *string `pulumi:"id"`
	// Node Name.
	Name *string `pulumi:"name"`
	// Node mapping.
	NodeMapping *IntegrationRealtimeTaskTaskInfoNodeNodeMapping `pulumi:"nodeMapping"`
	// Node type: INPUT,OUTPUT,JOIN,FILTER,TRANSFORM.
	NodeType *string `pulumi:"nodeType"`
	// Operator User ID.
	OperatorUin *string `pulumi:"operatorUin"`
	// Owner User ID.
	OwnerUin *string `pulumi:"ownerUin"`
	// Project ID.
	ProjectId *string `pulumi:"projectId"`
	// Schema information.
	Schemas []IntegrationRealtimeTaskTaskInfoNodeSchema `pulumi:"schemas"`
	// The task id to which the node belongs.
	TaskId *string `pulumi:"taskId"`
	// Update time.
	UpdateTime *string `pulumi:"updateTime"`
}

// IntegrationRealtimeTaskTaskInfoNodeInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeArgs and IntegrationRealtimeTaskTaskInfoNodeOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeOutput() IntegrationRealtimeTaskTaskInfoNodeOutput
	ToIntegrationRealtimeTaskTaskInfoNodeOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeOutput
}

type IntegrationRealtimeTaskTaskInfoNodeArgs struct {
	// User App Id.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Node configuration information.
	Configs IntegrationRealtimeTaskTaskInfoNodeConfigArrayInput `pulumi:"configs"`
	// Create time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin pulumi.StringPtrInput `pulumi:"creatorUin"`
	// Data source type: MYSQL, POSTGRE, ORACLE, SQLSERVER, FTP, HIVE, HDFS, ICEBERG, KAFKA, HBASE, SPARK, TBASE, DB2, DM, GAUSSDB, GBASE, IMPALA, ES, S3_DATAINSIGHT, GREENPLUM, PHOENIX, SAP_HANA, SFTP, OCEANBASE, CLICKHOUSE, KUDU, VERTICA, REDIS, COS, DLC, DORIS, CKAFKA, DTS_KAFKA, S3, CDW, TDSQLC, TDSQL, MONGODB, SYBASE, REST_API, StarRocks, TCHOUSE_X.
	DataSourceType pulumi.StringPtrInput `pulumi:"dataSourceType"`
	// Datasource ID.
	DatasourceId pulumi.StringPtrInput `pulumi:"datasourceId"`
	// Node Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Node extension configuration information.
	ExtConfigs IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayInput `pulumi:"extConfigs"`
	// Node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Node Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Node mapping.
	NodeMapping IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrInput `pulumi:"nodeMapping"`
	// Node type: INPUT,OUTPUT,JOIN,FILTER,TRANSFORM.
	NodeType pulumi.StringPtrInput `pulumi:"nodeType"`
	// Operator User ID.
	OperatorUin pulumi.StringPtrInput `pulumi:"operatorUin"`
	// Owner User ID.
	OwnerUin pulumi.StringPtrInput `pulumi:"ownerUin"`
	// Project ID.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Schema information.
	Schemas IntegrationRealtimeTaskTaskInfoNodeSchemaArrayInput `pulumi:"schemas"`
	// The task id to which the node belongs.
	TaskId pulumi.StringPtrInput `pulumi:"taskId"`
	// Update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (IntegrationRealtimeTaskTaskInfoNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNode)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeArgs) ToIntegrationRealtimeTaskTaskInfoNodeOutput() IntegrationRealtimeTaskTaskInfoNodeOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeArgs) ToIntegrationRealtimeTaskTaskInfoNodeOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeArray and IntegrationRealtimeTaskTaskInfoNodeArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeArray{ IntegrationRealtimeTaskTaskInfoNodeArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeArrayOutput() IntegrationRealtimeTaskTaskInfoNodeArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeArray []IntegrationRealtimeTaskTaskInfoNodeInput

func (IntegrationRealtimeTaskTaskInfoNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNode)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeArray) ToIntegrationRealtimeTaskTaskInfoNodeArrayOutput() IntegrationRealtimeTaskTaskInfoNodeArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeArray) ToIntegrationRealtimeTaskTaskInfoNodeArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNode)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeOutput) ToIntegrationRealtimeTaskTaskInfoNodeOutput() IntegrationRealtimeTaskTaskInfoNodeOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeOutput) ToIntegrationRealtimeTaskTaskInfoNodeOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeOutput {
	return o
}

// User App Id.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Node configuration information.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) Configs() IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) []IntegrationRealtimeTaskTaskInfoNodeConfig {
		return v.Configs
	}).(IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput)
}

// Create time.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.CreatorUin }).(pulumi.StringPtrOutput)
}

// Data source type: MYSQL, POSTGRE, ORACLE, SQLSERVER, FTP, HIVE, HDFS, ICEBERG, KAFKA, HBASE, SPARK, TBASE, DB2, DM, GAUSSDB, GBASE, IMPALA, ES, S3_DATAINSIGHT, GREENPLUM, PHOENIX, SAP_HANA, SFTP, OCEANBASE, CLICKHOUSE, KUDU, VERTICA, REDIS, COS, DLC, DORIS, CKAFKA, DTS_KAFKA, S3, CDW, TDSQLC, TDSQL, MONGODB, SYBASE, REST_API, StarRocks, TCHOUSE_X.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) DataSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.DataSourceType }).(pulumi.StringPtrOutput)
}

// Datasource ID.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) DatasourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.DatasourceId }).(pulumi.StringPtrOutput)
}

// Node Description.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) ExtConfigs() IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) []IntegrationRealtimeTaskTaskInfoNodeExtConfig {
		return v.ExtConfigs
	}).(IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput)
}

// Node ID.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Node Name.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Node mapping.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) NodeMapping() IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *IntegrationRealtimeTaskTaskInfoNodeNodeMapping {
		return v.NodeMapping
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput)
}

// Node type: INPUT,OUTPUT,JOIN,FILTER,TRANSFORM.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.NodeType }).(pulumi.StringPtrOutput)
}

// Operator User ID.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.OperatorUin }).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.OwnerUin }).(pulumi.StringPtrOutput)
}

// Project ID.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Schema information.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) Schemas() IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) []IntegrationRealtimeTaskTaskInfoNodeSchema {
		return v.Schemas
	}).(IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput)
}

// The task id to which the node belongs.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.TaskId }).(pulumi.StringPtrOutput)
}

// Update time.
func (o IntegrationRealtimeTaskTaskInfoNodeOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNode) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNode)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeArrayOutput() IntegrationRealtimeTaskTaskInfoNodeArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNode {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNode)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeConfigInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeConfigArgs and IntegrationRealtimeTaskTaskInfoNodeConfigOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeConfigInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeConfigArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeConfigInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeConfigOutput() IntegrationRealtimeTaskTaskInfoNodeConfigOutput
	ToIntegrationRealtimeTaskTaskInfoNodeConfigOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeConfigOutput
}

type IntegrationRealtimeTaskTaskInfoNodeConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeConfigArgs) ToIntegrationRealtimeTaskTaskInfoNodeConfigOutput() IntegrationRealtimeTaskTaskInfoNodeConfigOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeConfigOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeConfigArgs) ToIntegrationRealtimeTaskTaskInfoNodeConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeConfigOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeConfigArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeConfigArray and IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeConfigArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeConfigArray{ IntegrationRealtimeTaskTaskInfoNodeConfigArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeConfigArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeConfigArray []IntegrationRealtimeTaskTaskInfoNodeConfigInput

func (IntegrationRealtimeTaskTaskInfoNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeConfigArray) ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeConfigArray) ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeConfigOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeConfigOutput) ToIntegrationRealtimeTaskTaskInfoNodeConfigOutput() IntegrationRealtimeTaskTaskInfoNodeConfigOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeConfigOutput) ToIntegrationRealtimeTaskTaskInfoNodeConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoNodeConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoNodeConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeConfig {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeConfig)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeConfigOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeExtConfigInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs and IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeExtConfigInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeExtConfigInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutput() IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput
	ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput
}

type IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutput() IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeExtConfigArray and IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeExtConfigArray{ IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeExtConfigArray []IntegrationRealtimeTaskTaskInfoNodeExtConfigInput

func (IntegrationRealtimeTaskTaskInfoNodeExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeExtConfigArray) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeExtConfigArray) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutput() IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeExtConfig {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeExtConfig)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMapping struct {
	// Node extension configuration information.
	ExtConfigs []IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId *string `pulumi:"sinkId"`
	// Source node ID.
	SourceId *string `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema `pulumi:"sourceSchemas"`
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs and IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs struct {
	// Node extension configuration information.
	ExtConfigs IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayInput `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayInput `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId pulumi.StringPtrInput `pulumi:"sinkId"`
	// Source node ID.
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayInput `pulumi:"sourceSchemas"`
}

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput)
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput).ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(ctx)
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs, IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtr and IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrInput` via:
//
//	        IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs{...}
//
//	or:
//
//	        nil
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput
}

type integrationRealtimeTaskTaskInfoNodeNodeMappingPtrType IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs

func IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtr(v *IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs) IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrInput {
	return (*integrationRealtimeTaskTaskInfoNodeNodeMappingPtrType)(v)
}

func (*integrationRealtimeTaskTaskInfoNodeNodeMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRealtimeTaskTaskInfoNodeNodeMapping)(nil)).Elem()
}

func (i *integrationRealtimeTaskTaskInfoNodeNodeMappingPtrType) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(context.Background())
}

func (i *integrationRealtimeTaskTaskInfoNodeNodeMappingPtrType) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return o.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(context.Background())
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRealtimeTaskTaskInfoNodeNodeMapping) *IntegrationRealtimeTaskTaskInfoNodeNodeMapping {
		return &v
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput)
}

// Node extension configuration information.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) ExtConfigs() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMapping) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig {
		return v.ExtConfigs
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput)
}

// Schema mapping information.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) SchemaMappings() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMapping) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping {
		return v.SchemaMappings
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput)
}

// Sink node ID.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) SinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMapping) *string { return v.SinkId }).(pulumi.StringPtrOutput)
}

// Source node ID.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMapping) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

// Source node schema information.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput) SourceSchemas() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMapping) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema {
		return v.SourceSchemas
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRealtimeTaskTaskInfoNodeNodeMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) Elem() IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfoNodeNodeMapping) IntegrationRealtimeTaskTaskInfoNodeNodeMapping {
		if v != nil {
			return *v
		}
		var ret IntegrationRealtimeTaskTaskInfoNodeNodeMapping
		return ret
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput)
}

// Node extension configuration information.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) ExtConfigs() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfoNodeNodeMapping) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig {
		if v == nil {
			return nil
		}
		return v.ExtConfigs
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput)
}

// Schema mapping information.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) SchemaMappings() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfoNodeNodeMapping) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping {
		if v == nil {
			return nil
		}
		return v.SchemaMappings
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput)
}

// Sink node ID.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) SinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfoNodeNodeMapping) *string {
		if v == nil {
			return nil
		}
		return v.SinkId
	}).(pulumi.StringPtrOutput)
}

// Source node ID.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfoNodeNodeMapping) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Source node schema information.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput) SourceSchemas() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput {
	return o.ApplyT(func(v *IntegrationRealtimeTaskTaskInfoNodeNodeMapping) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema {
		if v == nil {
			return nil
		}
		return v.SourceSchemas
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs and IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray and IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray{ IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray []IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigInput

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfig)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping struct {
	// Schema ID from sink node.
	SinkSchemaId string `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId string `pulumi:"sourceSchemaId"`
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs and IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs struct {
	// Schema ID from sink node.
	SinkSchemaId pulumi.StringInput `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId pulumi.StringInput `pulumi:"sourceSchemaId"`
}

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray and IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray{ IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingInput

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput {
	return o
}

// Schema ID from sink node.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput) SinkSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping) string { return v.SinkSchemaId }).(pulumi.StringOutput)
}

// Schema ID from source node.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput) SourceSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping) string { return v.SourceSchemaId }).(pulumi.StringOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMapping)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema struct {
	// Schema alias.
	Alias *string `pulumi:"alias"`
	// Schema comment.
	Comment *string `pulumi:"comment"`
	// Schema ID.
	Id string `pulumi:"id"`
	// Schema name.
	Name string `pulumi:"name"`
	// Schema extended attributes.
	Properties []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty `pulumi:"properties"`
	// Schema type.
	Type string `pulumi:"type"`
	// Schema value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs and IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs struct {
	// Schema alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Schema comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Schema ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Schema name.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema extended attributes.
	Properties IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayInput `pulumi:"properties"`
	// Schema type.
	Type pulumi.StringInput `pulumi:"type"`
	// Schema value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray and IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray{ IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaInput

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput {
	return o
}

// Schema alias.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Schema comment.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Schema ID.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) string { return v.Id }).(pulumi.StringOutput)
}

// Schema name.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Schema extended attributes.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Properties() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty {
		return v.Properties
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput)
}

// Schema type.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Schema value.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchema)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty struct {
	// Attributes name.
	Name *string `pulumi:"name"`
	// Attributes value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs and IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs struct {
	// Attributes name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Attributes value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray and IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray{ IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray []IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyInput

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput {
	return o
}

// Attributes name.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Attributes value.
func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaProperty)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeSchema struct {
	// Schema alias.
	Alias *string `pulumi:"alias"`
	// Schema comment.
	Comment *string `pulumi:"comment"`
	// Schema ID.
	Id string `pulumi:"id"`
	// Schema name.
	Name string `pulumi:"name"`
	// Schema extended attributes.
	Properties []IntegrationRealtimeTaskTaskInfoNodeSchemaProperty `pulumi:"properties"`
	// Schema type.
	Type string `pulumi:"type"`
	// Schema value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeSchemaInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeSchemaArgs and IntegrationRealtimeTaskTaskInfoNodeSchemaOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeSchemaInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeSchemaArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeSchemaInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaOutput
	ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaOutput
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaArgs struct {
	// Schema alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Schema comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Schema ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Schema name.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema extended attributes.
	Properties IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayInput `pulumi:"properties"`
	// Schema type.
	Type pulumi.StringInput `pulumi:"type"`
	// Schema value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchema)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaArgs) ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaArgs) ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeSchemaOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeSchemaArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeSchemaArray and IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeSchemaArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeSchemaArray{ IntegrationRealtimeTaskTaskInfoNodeSchemaArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeSchemaArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaArray []IntegrationRealtimeTaskTaskInfoNodeSchemaInput

func (IntegrationRealtimeTaskTaskInfoNodeSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeSchema)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaArray) ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaArray) ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchema)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaOutput {
	return o
}

// Schema alias.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Schema comment.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Schema ID.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) string { return v.Id }).(pulumi.StringOutput)
}

// Schema name.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Schema extended attributes.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Properties() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) []IntegrationRealtimeTaskTaskInfoNodeSchemaProperty {
		return v.Properties
	}).(IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput)
}

// Schema type.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Schema value.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchema) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeSchema)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeSchema {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeSchema)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeSchemaOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaProperty struct {
	// Attributes name.
	Name *string `pulumi:"name"`
	// Attributes value.
	Value *string `pulumi:"value"`
}

// IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs and IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs{...}
type IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput
	ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs struct {
	// Attributes name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Attributes value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchemaProperty)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput)
}

// IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayInput is an input type that accepts IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray and IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput values.
// You can construct a concrete instance of `IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayInput` via:
//
//	IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray{ IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs{...} }
type IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayInput interface {
	pulumi.Input

	ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput
	ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutputWithContext(context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray []IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyInput

func (IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeSchemaProperty)(nil)).Elem()
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput {
	return i.ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutputWithContext(context.Background())
}

func (i IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchemaProperty)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput {
	return o
}

// Attributes name.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchemaProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Attributes value.
func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRealtimeTaskTaskInfoNodeSchemaProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRealtimeTaskTaskInfoNodeSchemaProperty)(nil)).Elem()
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput() IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput) ToIntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput) Index(i pulumi.IntInput) IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRealtimeTaskTaskInfoNodeSchemaProperty {
		return vs[0].([]IntegrationRealtimeTaskTaskInfoNodeSchemaProperty)[vs[1].(int)]
	}).(IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput)
}

type IntegrationTaskNodeNodeInfo struct {
	// User App Id.
	AppId *string `pulumi:"appId"`
	// Node configuration information.
	Configs []IntegrationTaskNodeNodeInfoConfig `pulumi:"configs"`
	// Create time.
	CreateTime *string `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin *string `pulumi:"creatorUin"`
	// Datasource ID.
	DatasourceId *string `pulumi:"datasourceId"`
	// Node extension configuration information.
	ExtConfigs []IntegrationTaskNodeNodeInfoExtConfig `pulumi:"extConfigs"`
	// Node mapping.
	NodeMapping *IntegrationTaskNodeNodeInfoNodeMapping `pulumi:"nodeMapping"`
	// Operator User ID.
	OperatorUin *string `pulumi:"operatorUin"`
	// Owner User ID.
	OwnerUin *string `pulumi:"ownerUin"`
	// Schema information.
	Schemas []IntegrationTaskNodeNodeInfoSchema `pulumi:"schemas"`
	// Update time.
	UpdateTime *string `pulumi:"updateTime"`
}

// IntegrationTaskNodeNodeInfoInput is an input type that accepts IntegrationTaskNodeNodeInfoArgs and IntegrationTaskNodeNodeInfoOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoInput` via:
//
//	IntegrationTaskNodeNodeInfoArgs{...}
type IntegrationTaskNodeNodeInfoInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoOutput() IntegrationTaskNodeNodeInfoOutput
	ToIntegrationTaskNodeNodeInfoOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoOutput
}

type IntegrationTaskNodeNodeInfoArgs struct {
	// User App Id.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Node configuration information.
	Configs IntegrationTaskNodeNodeInfoConfigArrayInput `pulumi:"configs"`
	// Create time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Creator User ID.
	CreatorUin pulumi.StringPtrInput `pulumi:"creatorUin"`
	// Datasource ID.
	DatasourceId pulumi.StringPtrInput `pulumi:"datasourceId"`
	// Node extension configuration information.
	ExtConfigs IntegrationTaskNodeNodeInfoExtConfigArrayInput `pulumi:"extConfigs"`
	// Node mapping.
	NodeMapping IntegrationTaskNodeNodeInfoNodeMappingPtrInput `pulumi:"nodeMapping"`
	// Operator User ID.
	OperatorUin pulumi.StringPtrInput `pulumi:"operatorUin"`
	// Owner User ID.
	OwnerUin pulumi.StringPtrInput `pulumi:"ownerUin"`
	// Schema information.
	Schemas IntegrationTaskNodeNodeInfoSchemaArrayInput `pulumi:"schemas"`
	// Update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (IntegrationTaskNodeNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfo)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoArgs) ToIntegrationTaskNodeNodeInfoOutput() IntegrationTaskNodeNodeInfoOutput {
	return i.ToIntegrationTaskNodeNodeInfoOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoArgs) ToIntegrationTaskNodeNodeInfoOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoOutput)
}

func (i IntegrationTaskNodeNodeInfoArgs) ToIntegrationTaskNodeNodeInfoPtrOutput() IntegrationTaskNodeNodeInfoPtrOutput {
	return i.ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoArgs) ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoOutput).ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(ctx)
}

// IntegrationTaskNodeNodeInfoPtrInput is an input type that accepts IntegrationTaskNodeNodeInfoArgs, IntegrationTaskNodeNodeInfoPtr and IntegrationTaskNodeNodeInfoPtrOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoPtrInput` via:
//
//	        IntegrationTaskNodeNodeInfoArgs{...}
//
//	or:
//
//	        nil
type IntegrationTaskNodeNodeInfoPtrInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoPtrOutput() IntegrationTaskNodeNodeInfoPtrOutput
	ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoPtrOutput
}

type integrationTaskNodeNodeInfoPtrType IntegrationTaskNodeNodeInfoArgs

func IntegrationTaskNodeNodeInfoPtr(v *IntegrationTaskNodeNodeInfoArgs) IntegrationTaskNodeNodeInfoPtrInput {
	return (*integrationTaskNodeNodeInfoPtrType)(v)
}

func (*integrationTaskNodeNodeInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTaskNodeNodeInfo)(nil)).Elem()
}

func (i *integrationTaskNodeNodeInfoPtrType) ToIntegrationTaskNodeNodeInfoPtrOutput() IntegrationTaskNodeNodeInfoPtrOutput {
	return i.ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(context.Background())
}

func (i *integrationTaskNodeNodeInfoPtrType) ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoPtrOutput)
}

type IntegrationTaskNodeNodeInfoOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfo)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoOutput) ToIntegrationTaskNodeNodeInfoOutput() IntegrationTaskNodeNodeInfoOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoOutput) ToIntegrationTaskNodeNodeInfoOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoOutput) ToIntegrationTaskNodeNodeInfoPtrOutput() IntegrationTaskNodeNodeInfoPtrOutput {
	return o.ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(context.Background())
}

func (o IntegrationTaskNodeNodeInfoOutput) ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationTaskNodeNodeInfo) *IntegrationTaskNodeNodeInfo {
		return &v
	}).(IntegrationTaskNodeNodeInfoPtrOutput)
}

// User App Id.
func (o IntegrationTaskNodeNodeInfoOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Node configuration information.
func (o IntegrationTaskNodeNodeInfoOutput) Configs() IntegrationTaskNodeNodeInfoConfigArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) []IntegrationTaskNodeNodeInfoConfig { return v.Configs }).(IntegrationTaskNodeNodeInfoConfigArrayOutput)
}

// Create time.
func (o IntegrationTaskNodeNodeInfoOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationTaskNodeNodeInfoOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.CreatorUin }).(pulumi.StringPtrOutput)
}

// Datasource ID.
func (o IntegrationTaskNodeNodeInfoOutput) DatasourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.DatasourceId }).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationTaskNodeNodeInfoOutput) ExtConfigs() IntegrationTaskNodeNodeInfoExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) []IntegrationTaskNodeNodeInfoExtConfig { return v.ExtConfigs }).(IntegrationTaskNodeNodeInfoExtConfigArrayOutput)
}

// Node mapping.
func (o IntegrationTaskNodeNodeInfoOutput) NodeMapping() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *IntegrationTaskNodeNodeInfoNodeMapping { return v.NodeMapping }).(IntegrationTaskNodeNodeInfoNodeMappingPtrOutput)
}

// Operator User ID.
func (o IntegrationTaskNodeNodeInfoOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.OperatorUin }).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationTaskNodeNodeInfoOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.OwnerUin }).(pulumi.StringPtrOutput)
}

// Schema information.
func (o IntegrationTaskNodeNodeInfoOutput) Schemas() IntegrationTaskNodeNodeInfoSchemaArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) []IntegrationTaskNodeNodeInfoSchema { return v.Schemas }).(IntegrationTaskNodeNodeInfoSchemaArrayOutput)
}

// Update time.
func (o IntegrationTaskNodeNodeInfoOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfo) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTaskNodeNodeInfo)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoPtrOutput) ToIntegrationTaskNodeNodeInfoPtrOutput() IntegrationTaskNodeNodeInfoPtrOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoPtrOutput) ToIntegrationTaskNodeNodeInfoPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoPtrOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoPtrOutput) Elem() IntegrationTaskNodeNodeInfoOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) IntegrationTaskNodeNodeInfo {
		if v != nil {
			return *v
		}
		var ret IntegrationTaskNodeNodeInfo
		return ret
	}).(IntegrationTaskNodeNodeInfoOutput)
}

// User App Id.
func (o IntegrationTaskNodeNodeInfoPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Node configuration information.
func (o IntegrationTaskNodeNodeInfoPtrOutput) Configs() IntegrationTaskNodeNodeInfoConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) []IntegrationTaskNodeNodeInfoConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(IntegrationTaskNodeNodeInfoConfigArrayOutput)
}

// Create time.
func (o IntegrationTaskNodeNodeInfoPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Creator User ID.
func (o IntegrationTaskNodeNodeInfoPtrOutput) CreatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.CreatorUin
	}).(pulumi.StringPtrOutput)
}

// Datasource ID.
func (o IntegrationTaskNodeNodeInfoPtrOutput) DatasourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.DatasourceId
	}).(pulumi.StringPtrOutput)
}

// Node extension configuration information.
func (o IntegrationTaskNodeNodeInfoPtrOutput) ExtConfigs() IntegrationTaskNodeNodeInfoExtConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) []IntegrationTaskNodeNodeInfoExtConfig {
		if v == nil {
			return nil
		}
		return v.ExtConfigs
	}).(IntegrationTaskNodeNodeInfoExtConfigArrayOutput)
}

// Node mapping.
func (o IntegrationTaskNodeNodeInfoPtrOutput) NodeMapping() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *IntegrationTaskNodeNodeInfoNodeMapping {
		if v == nil {
			return nil
		}
		return v.NodeMapping
	}).(IntegrationTaskNodeNodeInfoNodeMappingPtrOutput)
}

// Operator User ID.
func (o IntegrationTaskNodeNodeInfoPtrOutput) OperatorUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.OperatorUin
	}).(pulumi.StringPtrOutput)
}

// Owner User ID.
func (o IntegrationTaskNodeNodeInfoPtrOutput) OwnerUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUin
	}).(pulumi.StringPtrOutput)
}

// Schema information.
func (o IntegrationTaskNodeNodeInfoPtrOutput) Schemas() IntegrationTaskNodeNodeInfoSchemaArrayOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) []IntegrationTaskNodeNodeInfoSchema {
		if v == nil {
			return nil
		}
		return v.Schemas
	}).(IntegrationTaskNodeNodeInfoSchemaArrayOutput)
}

// Update time.
func (o IntegrationTaskNodeNodeInfoPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfo) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoConfigInput is an input type that accepts IntegrationTaskNodeNodeInfoConfigArgs and IntegrationTaskNodeNodeInfoConfigOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoConfigInput` via:
//
//	IntegrationTaskNodeNodeInfoConfigArgs{...}
type IntegrationTaskNodeNodeInfoConfigInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoConfigOutput() IntegrationTaskNodeNodeInfoConfigOutput
	ToIntegrationTaskNodeNodeInfoConfigOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoConfigOutput
}

type IntegrationTaskNodeNodeInfoConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoConfig)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoConfigArgs) ToIntegrationTaskNodeNodeInfoConfigOutput() IntegrationTaskNodeNodeInfoConfigOutput {
	return i.ToIntegrationTaskNodeNodeInfoConfigOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoConfigArgs) ToIntegrationTaskNodeNodeInfoConfigOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoConfigOutput)
}

// IntegrationTaskNodeNodeInfoConfigArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoConfigArray and IntegrationTaskNodeNodeInfoConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoConfigArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoConfigArray{ IntegrationTaskNodeNodeInfoConfigArgs{...} }
type IntegrationTaskNodeNodeInfoConfigArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoConfigArrayOutput() IntegrationTaskNodeNodeInfoConfigArrayOutput
	ToIntegrationTaskNodeNodeInfoConfigArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoConfigArrayOutput
}

type IntegrationTaskNodeNodeInfoConfigArray []IntegrationTaskNodeNodeInfoConfigInput

func (IntegrationTaskNodeNodeInfoConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoConfig)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoConfigArray) ToIntegrationTaskNodeNodeInfoConfigArrayOutput() IntegrationTaskNodeNodeInfoConfigArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoConfigArray) ToIntegrationTaskNodeNodeInfoConfigArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoConfigArrayOutput)
}

type IntegrationTaskNodeNodeInfoConfigOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoConfig)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoConfigOutput) ToIntegrationTaskNodeNodeInfoConfigOutput() IntegrationTaskNodeNodeInfoConfigOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoConfigOutput) ToIntegrationTaskNodeNodeInfoConfigOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationTaskNodeNodeInfoConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationTaskNodeNodeInfoConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoConfig)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoConfigArrayOutput) ToIntegrationTaskNodeNodeInfoConfigArrayOutput() IntegrationTaskNodeNodeInfoConfigArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoConfigArrayOutput) ToIntegrationTaskNodeNodeInfoConfigArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoConfigArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoConfigArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoConfig {
		return vs[0].([]IntegrationTaskNodeNodeInfoConfig)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoConfigOutput)
}

type IntegrationTaskNodeNodeInfoExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoExtConfigInput is an input type that accepts IntegrationTaskNodeNodeInfoExtConfigArgs and IntegrationTaskNodeNodeInfoExtConfigOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoExtConfigInput` via:
//
//	IntegrationTaskNodeNodeInfoExtConfigArgs{...}
type IntegrationTaskNodeNodeInfoExtConfigInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoExtConfigOutput() IntegrationTaskNodeNodeInfoExtConfigOutput
	ToIntegrationTaskNodeNodeInfoExtConfigOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoExtConfigOutput
}

type IntegrationTaskNodeNodeInfoExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoExtConfig)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoExtConfigArgs) ToIntegrationTaskNodeNodeInfoExtConfigOutput() IntegrationTaskNodeNodeInfoExtConfigOutput {
	return i.ToIntegrationTaskNodeNodeInfoExtConfigOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoExtConfigArgs) ToIntegrationTaskNodeNodeInfoExtConfigOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoExtConfigOutput)
}

// IntegrationTaskNodeNodeInfoExtConfigArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoExtConfigArray and IntegrationTaskNodeNodeInfoExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoExtConfigArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoExtConfigArray{ IntegrationTaskNodeNodeInfoExtConfigArgs{...} }
type IntegrationTaskNodeNodeInfoExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoExtConfigArrayOutput() IntegrationTaskNodeNodeInfoExtConfigArrayOutput
	ToIntegrationTaskNodeNodeInfoExtConfigArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoExtConfigArrayOutput
}

type IntegrationTaskNodeNodeInfoExtConfigArray []IntegrationTaskNodeNodeInfoExtConfigInput

func (IntegrationTaskNodeNodeInfoExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoExtConfig)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoExtConfigArray) ToIntegrationTaskNodeNodeInfoExtConfigArrayOutput() IntegrationTaskNodeNodeInfoExtConfigArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoExtConfigArray) ToIntegrationTaskNodeNodeInfoExtConfigArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoExtConfigArrayOutput)
}

type IntegrationTaskNodeNodeInfoExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoExtConfig)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoExtConfigOutput) ToIntegrationTaskNodeNodeInfoExtConfigOutput() IntegrationTaskNodeNodeInfoExtConfigOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoExtConfigOutput) ToIntegrationTaskNodeNodeInfoExtConfigOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationTaskNodeNodeInfoExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationTaskNodeNodeInfoExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoExtConfig)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoExtConfigArrayOutput) ToIntegrationTaskNodeNodeInfoExtConfigArrayOutput() IntegrationTaskNodeNodeInfoExtConfigArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoExtConfigArrayOutput) ToIntegrationTaskNodeNodeInfoExtConfigArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoExtConfigArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoExtConfig {
		return vs[0].([]IntegrationTaskNodeNodeInfoExtConfig)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoExtConfigOutput)
}

type IntegrationTaskNodeNodeInfoNodeMapping struct {
	// Node extension configuration information.
	ExtConfigs []IntegrationTaskNodeNodeInfoNodeMappingExtConfig `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings []IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId *string `pulumi:"sinkId"`
	// Source node ID.
	SourceId *string `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas []IntegrationTaskNodeNodeInfoNodeMappingSourceSchema `pulumi:"sourceSchemas"`
}

// IntegrationTaskNodeNodeInfoNodeMappingInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingArgs and IntegrationTaskNodeNodeInfoNodeMappingOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingArgs{...}
type IntegrationTaskNodeNodeInfoNodeMappingInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingOutput() IntegrationTaskNodeNodeInfoNodeMappingOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingArgs struct {
	// Node extension configuration information.
	ExtConfigs IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayInput `pulumi:"extConfigs"`
	// Schema mapping information.
	SchemaMappings IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayInput `pulumi:"schemaMappings"`
	// Sink node ID.
	SinkId pulumi.StringPtrInput `pulumi:"sinkId"`
	// Source node ID.
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
	// Source node schema information.
	SourceSchemas IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayInput `pulumi:"sourceSchemas"`
}

func (IntegrationTaskNodeNodeInfoNodeMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMapping)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingArgs) ToIntegrationTaskNodeNodeInfoNodeMappingOutput() IntegrationTaskNodeNodeInfoNodeMappingOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingArgs) ToIntegrationTaskNodeNodeInfoNodeMappingOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingOutput)
}

func (i IntegrationTaskNodeNodeInfoNodeMappingArgs) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutput() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingArgs) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingOutput).ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(ctx)
}

// IntegrationTaskNodeNodeInfoNodeMappingPtrInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingArgs, IntegrationTaskNodeNodeInfoNodeMappingPtr and IntegrationTaskNodeNodeInfoNodeMappingPtrOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingPtrInput` via:
//
//	        IntegrationTaskNodeNodeInfoNodeMappingArgs{...}
//
//	or:
//
//	        nil
type IntegrationTaskNodeNodeInfoNodeMappingPtrInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutput() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingPtrOutput
}

type integrationTaskNodeNodeInfoNodeMappingPtrType IntegrationTaskNodeNodeInfoNodeMappingArgs

func IntegrationTaskNodeNodeInfoNodeMappingPtr(v *IntegrationTaskNodeNodeInfoNodeMappingArgs) IntegrationTaskNodeNodeInfoNodeMappingPtrInput {
	return (*integrationTaskNodeNodeInfoNodeMappingPtrType)(v)
}

func (*integrationTaskNodeNodeInfoNodeMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTaskNodeNodeInfoNodeMapping)(nil)).Elem()
}

func (i *integrationTaskNodeNodeInfoNodeMappingPtrType) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutput() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(context.Background())
}

func (i *integrationTaskNodeNodeInfoNodeMappingPtrType) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingPtrOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMapping)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) ToIntegrationTaskNodeNodeInfoNodeMappingOutput() IntegrationTaskNodeNodeInfoNodeMappingOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) ToIntegrationTaskNodeNodeInfoNodeMappingOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutput() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return o.ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(context.Background())
}

func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationTaskNodeNodeInfoNodeMapping) *IntegrationTaskNodeNodeInfoNodeMapping {
		return &v
	}).(IntegrationTaskNodeNodeInfoNodeMappingPtrOutput)
}

// Node extension configuration information.
func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) ExtConfigs() IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMapping) []IntegrationTaskNodeNodeInfoNodeMappingExtConfig {
		return v.ExtConfigs
	}).(IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput)
}

// Schema mapping information.
func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) SchemaMappings() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMapping) []IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping {
		return v.SchemaMappings
	}).(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput)
}

// Sink node ID.
func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) SinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMapping) *string { return v.SinkId }).(pulumi.StringPtrOutput)
}

// Source node ID.
func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMapping) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

// Source node schema information.
func (o IntegrationTaskNodeNodeInfoNodeMappingOutput) SourceSchemas() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMapping) []IntegrationTaskNodeNodeInfoNodeMappingSourceSchema {
		return v.SourceSchemas
	}).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingPtrOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTaskNodeNodeInfoNodeMapping)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutput() IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) ToIntegrationTaskNodeNodeInfoNodeMappingPtrOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingPtrOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) Elem() IntegrationTaskNodeNodeInfoNodeMappingOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfoNodeMapping) IntegrationTaskNodeNodeInfoNodeMapping {
		if v != nil {
			return *v
		}
		var ret IntegrationTaskNodeNodeInfoNodeMapping
		return ret
	}).(IntegrationTaskNodeNodeInfoNodeMappingOutput)
}

// Node extension configuration information.
func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) ExtConfigs() IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfoNodeMapping) []IntegrationTaskNodeNodeInfoNodeMappingExtConfig {
		if v == nil {
			return nil
		}
		return v.ExtConfigs
	}).(IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput)
}

// Schema mapping information.
func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) SchemaMappings() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfoNodeMapping) []IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping {
		if v == nil {
			return nil
		}
		return v.SchemaMappings
	}).(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput)
}

// Sink node ID.
func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) SinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfoNodeMapping) *string {
		if v == nil {
			return nil
		}
		return v.SinkId
	}).(pulumi.StringPtrOutput)
}

// Source node ID.
func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfoNodeMapping) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Source node schema information.
func (o IntegrationTaskNodeNodeInfoNodeMappingPtrOutput) SourceSchemas() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput {
	return o.ApplyT(func(v *IntegrationTaskNodeNodeInfoNodeMapping) []IntegrationTaskNodeNodeInfoNodeMappingSourceSchema {
		if v == nil {
			return nil
		}
		return v.SourceSchemas
	}).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingExtConfig struct {
	// Configuration name.
	Name *string `pulumi:"name"`
	// Configuration value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoNodeMappingExtConfigInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs and IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingExtConfigInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs{...}
type IntegrationTaskNodeNodeInfoNodeMappingExtConfigInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput() IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs struct {
	// Configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingExtConfig)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput() IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput)
}

// IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray and IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray{ IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs{...} }
type IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray []IntegrationTaskNodeNodeInfoNodeMappingExtConfigInput

func (IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingExtConfig)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingExtConfig)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput() IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput {
	return o
}

// Configuration name.
func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingExtConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration value.
func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingExtConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingExtConfig)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoNodeMappingExtConfig {
		return vs[0].([]IntegrationTaskNodeNodeInfoNodeMappingExtConfig)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping struct {
	// Schema ID from sink node.
	SinkSchemaId string `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId string `pulumi:"sourceSchemaId"`
}

// IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs and IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs{...}
type IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs struct {
	// Schema ID from sink node.
	SinkSchemaId pulumi.StringInput `pulumi:"sinkSchemaId"`
	// Schema ID from source node.
	SourceSchemaId pulumi.StringInput `pulumi:"sourceSchemaId"`
}

func (IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput)
}

// IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray and IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray{ IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs{...} }
type IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray []IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingInput

func (IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput {
	return o
}

// Schema ID from sink node.
func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput) SinkSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping) string { return v.SinkSchemaId }).(pulumi.StringOutput)
}

// Schema ID from source node.
func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput) SourceSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping) string { return v.SourceSchemaId }).(pulumi.StringOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping {
		return vs[0].([]IntegrationTaskNodeNodeInfoNodeMappingSchemaMapping)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchema struct {
	// Schema alias.
	Alias *string `pulumi:"alias"`
	// Schema comment.
	Comment *string `pulumi:"comment"`
	// Schema ID.
	Id string `pulumi:"id"`
	// Schema name.
	Name string `pulumi:"name"`
	// Schema extended attributes.
	Properties []IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty `pulumi:"properties"`
	// Schema type.
	Type string `pulumi:"type"`
	// Schema value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs and IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs{...}
type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs struct {
	// Schema alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Schema comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Schema ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Schema name.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema extended attributes.
	Properties IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayInput `pulumi:"properties"`
	// Schema type.
	Type pulumi.StringInput `pulumi:"type"`
	// Schema value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput)
}

// IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray and IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray{ IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs{...} }
type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray []IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaInput

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingSourceSchema)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput {
	return o
}

// Schema alias.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Schema comment.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Schema ID.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) string { return v.Id }).(pulumi.StringOutput)
}

// Schema name.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Schema extended attributes.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Properties() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) []IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty {
		return v.Properties
	}).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput)
}

// Schema type.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Schema value.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchema) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingSourceSchema)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoNodeMappingSourceSchema {
		return vs[0].([]IntegrationTaskNodeNodeInfoNodeMappingSourceSchema)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty struct {
	// Attributes name.
	Name *string `pulumi:"name"`
	// Attributes value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs and IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs{...}
type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs struct {
	// Attributes name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Attributes value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput)
}

// IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray and IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray{ IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs{...} }
type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput
	ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray []IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyInput

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput {
	return o
}

// Attributes name.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Attributes value.
func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput() IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput) ToIntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty {
		return vs[0].([]IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaProperty)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput)
}

type IntegrationTaskNodeNodeInfoSchema struct {
	// Schema alias.
	Alias *string `pulumi:"alias"`
	// Schema comment.
	Comment *string `pulumi:"comment"`
	// Schema ID.
	Id string `pulumi:"id"`
	// Schema name.
	Name string `pulumi:"name"`
	// Schema extended attributes.
	Properties []IntegrationTaskNodeNodeInfoSchemaProperty `pulumi:"properties"`
	// Schema type.
	Type string `pulumi:"type"`
	// Schema value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoSchemaInput is an input type that accepts IntegrationTaskNodeNodeInfoSchemaArgs and IntegrationTaskNodeNodeInfoSchemaOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoSchemaInput` via:
//
//	IntegrationTaskNodeNodeInfoSchemaArgs{...}
type IntegrationTaskNodeNodeInfoSchemaInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoSchemaOutput() IntegrationTaskNodeNodeInfoSchemaOutput
	ToIntegrationTaskNodeNodeInfoSchemaOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoSchemaOutput
}

type IntegrationTaskNodeNodeInfoSchemaArgs struct {
	// Schema alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Schema comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Schema ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Schema name.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema extended attributes.
	Properties IntegrationTaskNodeNodeInfoSchemaPropertyArrayInput `pulumi:"properties"`
	// Schema type.
	Type pulumi.StringInput `pulumi:"type"`
	// Schema value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchema)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoSchemaArgs) ToIntegrationTaskNodeNodeInfoSchemaOutput() IntegrationTaskNodeNodeInfoSchemaOutput {
	return i.ToIntegrationTaskNodeNodeInfoSchemaOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoSchemaArgs) ToIntegrationTaskNodeNodeInfoSchemaOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoSchemaOutput)
}

// IntegrationTaskNodeNodeInfoSchemaArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoSchemaArray and IntegrationTaskNodeNodeInfoSchemaArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoSchemaArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoSchemaArray{ IntegrationTaskNodeNodeInfoSchemaArgs{...} }
type IntegrationTaskNodeNodeInfoSchemaArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoSchemaArrayOutput() IntegrationTaskNodeNodeInfoSchemaArrayOutput
	ToIntegrationTaskNodeNodeInfoSchemaArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoSchemaArrayOutput
}

type IntegrationTaskNodeNodeInfoSchemaArray []IntegrationTaskNodeNodeInfoSchemaInput

func (IntegrationTaskNodeNodeInfoSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoSchema)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoSchemaArray) ToIntegrationTaskNodeNodeInfoSchemaArrayOutput() IntegrationTaskNodeNodeInfoSchemaArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoSchemaArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoSchemaArray) ToIntegrationTaskNodeNodeInfoSchemaArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoSchemaArrayOutput)
}

type IntegrationTaskNodeNodeInfoSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchema)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoSchemaOutput) ToIntegrationTaskNodeNodeInfoSchemaOutput() IntegrationTaskNodeNodeInfoSchemaOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoSchemaOutput) ToIntegrationTaskNodeNodeInfoSchemaOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaOutput {
	return o
}

// Schema alias.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Schema comment.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Schema ID.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) string { return v.Id }).(pulumi.StringOutput)
}

// Schema name.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Schema extended attributes.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Properties() IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) []IntegrationTaskNodeNodeInfoSchemaProperty {
		return v.Properties
	}).(IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput)
}

// Schema type.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) string { return v.Type }).(pulumi.StringOutput)
}

// Schema value.
func (o IntegrationTaskNodeNodeInfoSchemaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchema) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoSchemaArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoSchema)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoSchemaArrayOutput) ToIntegrationTaskNodeNodeInfoSchemaArrayOutput() IntegrationTaskNodeNodeInfoSchemaArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoSchemaArrayOutput) ToIntegrationTaskNodeNodeInfoSchemaArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoSchemaArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoSchema {
		return vs[0].([]IntegrationTaskNodeNodeInfoSchema)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoSchemaOutput)
}

type IntegrationTaskNodeNodeInfoSchemaProperty struct {
	// Attributes name.
	Name *string `pulumi:"name"`
	// Attributes value.
	Value *string `pulumi:"value"`
}

// IntegrationTaskNodeNodeInfoSchemaPropertyInput is an input type that accepts IntegrationTaskNodeNodeInfoSchemaPropertyArgs and IntegrationTaskNodeNodeInfoSchemaPropertyOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoSchemaPropertyInput` via:
//
//	IntegrationTaskNodeNodeInfoSchemaPropertyArgs{...}
type IntegrationTaskNodeNodeInfoSchemaPropertyInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoSchemaPropertyOutput() IntegrationTaskNodeNodeInfoSchemaPropertyOutput
	ToIntegrationTaskNodeNodeInfoSchemaPropertyOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoSchemaPropertyOutput
}

type IntegrationTaskNodeNodeInfoSchemaPropertyArgs struct {
	// Attributes name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Attributes value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationTaskNodeNodeInfoSchemaPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchemaProperty)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoSchemaPropertyArgs) ToIntegrationTaskNodeNodeInfoSchemaPropertyOutput() IntegrationTaskNodeNodeInfoSchemaPropertyOutput {
	return i.ToIntegrationTaskNodeNodeInfoSchemaPropertyOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoSchemaPropertyArgs) ToIntegrationTaskNodeNodeInfoSchemaPropertyOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoSchemaPropertyOutput)
}

// IntegrationTaskNodeNodeInfoSchemaPropertyArrayInput is an input type that accepts IntegrationTaskNodeNodeInfoSchemaPropertyArray and IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskNodeNodeInfoSchemaPropertyArrayInput` via:
//
//	IntegrationTaskNodeNodeInfoSchemaPropertyArray{ IntegrationTaskNodeNodeInfoSchemaPropertyArgs{...} }
type IntegrationTaskNodeNodeInfoSchemaPropertyArrayInput interface {
	pulumi.Input

	ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput() IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput
	ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutputWithContext(context.Context) IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput
}

type IntegrationTaskNodeNodeInfoSchemaPropertyArray []IntegrationTaskNodeNodeInfoSchemaPropertyInput

func (IntegrationTaskNodeNodeInfoSchemaPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoSchemaProperty)(nil)).Elem()
}

func (i IntegrationTaskNodeNodeInfoSchemaPropertyArray) ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput() IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput {
	return i.ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskNodeNodeInfoSchemaPropertyArray) ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput)
}

type IntegrationTaskNodeNodeInfoSchemaPropertyOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoSchemaPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchemaProperty)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoSchemaPropertyOutput) ToIntegrationTaskNodeNodeInfoSchemaPropertyOutput() IntegrationTaskNodeNodeInfoSchemaPropertyOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoSchemaPropertyOutput) ToIntegrationTaskNodeNodeInfoSchemaPropertyOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaPropertyOutput {
	return o
}

// Attributes name.
func (o IntegrationTaskNodeNodeInfoSchemaPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchemaProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Attributes value.
func (o IntegrationTaskNodeNodeInfoSchemaPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTaskNodeNodeInfoSchemaProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskNodeNodeInfoSchemaProperty)(nil)).Elem()
}

func (o IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput) ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput() IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput) ToIntegrationTaskNodeNodeInfoSchemaPropertyArrayOutputWithContext(ctx context.Context) IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput {
	return o
}

func (o IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput) Index(i pulumi.IntInput) IntegrationTaskNodeNodeInfoSchemaPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskNodeNodeInfoSchemaProperty {
		return vs[0].([]IntegrationTaskNodeNodeInfoSchemaProperty)[vs[1].(int)]
	}).(IntegrationTaskNodeNodeInfoSchemaPropertyOutput)
}

type GetDataSourceListFilter struct {
	// Filter name.
	Name *string `pulumi:"name"`
	// Filter value.
	Values []string `pulumi:"values"`
}

// GetDataSourceListFilterInput is an input type that accepts GetDataSourceListFilterArgs and GetDataSourceListFilterOutput values.
// You can construct a concrete instance of `GetDataSourceListFilterInput` via:
//
//	GetDataSourceListFilterArgs{...}
type GetDataSourceListFilterInput interface {
	pulumi.Input

	ToGetDataSourceListFilterOutput() GetDataSourceListFilterOutput
	ToGetDataSourceListFilterOutputWithContext(context.Context) GetDataSourceListFilterOutput
}

type GetDataSourceListFilterArgs struct {
	// Filter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Filter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataSourceListFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceListFilter)(nil)).Elem()
}

func (i GetDataSourceListFilterArgs) ToGetDataSourceListFilterOutput() GetDataSourceListFilterOutput {
	return i.ToGetDataSourceListFilterOutputWithContext(context.Background())
}

func (i GetDataSourceListFilterArgs) ToGetDataSourceListFilterOutputWithContext(ctx context.Context) GetDataSourceListFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceListFilterOutput)
}

// GetDataSourceListFilterArrayInput is an input type that accepts GetDataSourceListFilterArray and GetDataSourceListFilterArrayOutput values.
// You can construct a concrete instance of `GetDataSourceListFilterArrayInput` via:
//
//	GetDataSourceListFilterArray{ GetDataSourceListFilterArgs{...} }
type GetDataSourceListFilterArrayInput interface {
	pulumi.Input

	ToGetDataSourceListFilterArrayOutput() GetDataSourceListFilterArrayOutput
	ToGetDataSourceListFilterArrayOutputWithContext(context.Context) GetDataSourceListFilterArrayOutput
}

type GetDataSourceListFilterArray []GetDataSourceListFilterInput

func (GetDataSourceListFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceListFilter)(nil)).Elem()
}

func (i GetDataSourceListFilterArray) ToGetDataSourceListFilterArrayOutput() GetDataSourceListFilterArrayOutput {
	return i.ToGetDataSourceListFilterArrayOutputWithContext(context.Background())
}

func (i GetDataSourceListFilterArray) ToGetDataSourceListFilterArrayOutputWithContext(ctx context.Context) GetDataSourceListFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceListFilterArrayOutput)
}

type GetDataSourceListFilterOutput struct{ *pulumi.OutputState }

func (GetDataSourceListFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceListFilter)(nil)).Elem()
}

func (o GetDataSourceListFilterOutput) ToGetDataSourceListFilterOutput() GetDataSourceListFilterOutput {
	return o
}

func (o GetDataSourceListFilterOutput) ToGetDataSourceListFilterOutputWithContext(ctx context.Context) GetDataSourceListFilterOutput {
	return o
}

// Filter name.
func (o GetDataSourceListFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDataSourceListFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Filter value.
func (o GetDataSourceListFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataSourceListFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataSourceListFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceListFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceListFilter)(nil)).Elem()
}

func (o GetDataSourceListFilterArrayOutput) ToGetDataSourceListFilterArrayOutput() GetDataSourceListFilterArrayOutput {
	return o
}

func (o GetDataSourceListFilterArrayOutput) ToGetDataSourceListFilterArrayOutputWithContext(ctx context.Context) GetDataSourceListFilterArrayOutput {
	return o
}

func (o GetDataSourceListFilterArrayOutput) Index(i pulumi.IntInput) GetDataSourceListFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceListFilter {
		return vs[0].([]GetDataSourceListFilter)[vs[1].(int)]
	}).(GetDataSourceListFilterOutput)
}

type GetDataSourceListOrderField struct {
	// OrderFields rule.
	Direction string `pulumi:"direction"`
	// OrderFields name.
	Name string `pulumi:"name"`
}

// GetDataSourceListOrderFieldInput is an input type that accepts GetDataSourceListOrderFieldArgs and GetDataSourceListOrderFieldOutput values.
// You can construct a concrete instance of `GetDataSourceListOrderFieldInput` via:
//
//	GetDataSourceListOrderFieldArgs{...}
type GetDataSourceListOrderFieldInput interface {
	pulumi.Input

	ToGetDataSourceListOrderFieldOutput() GetDataSourceListOrderFieldOutput
	ToGetDataSourceListOrderFieldOutputWithContext(context.Context) GetDataSourceListOrderFieldOutput
}

type GetDataSourceListOrderFieldArgs struct {
	// OrderFields rule.
	Direction pulumi.StringInput `pulumi:"direction"`
	// OrderFields name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataSourceListOrderFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceListOrderField)(nil)).Elem()
}

func (i GetDataSourceListOrderFieldArgs) ToGetDataSourceListOrderFieldOutput() GetDataSourceListOrderFieldOutput {
	return i.ToGetDataSourceListOrderFieldOutputWithContext(context.Background())
}

func (i GetDataSourceListOrderFieldArgs) ToGetDataSourceListOrderFieldOutputWithContext(ctx context.Context) GetDataSourceListOrderFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceListOrderFieldOutput)
}

// GetDataSourceListOrderFieldArrayInput is an input type that accepts GetDataSourceListOrderFieldArray and GetDataSourceListOrderFieldArrayOutput values.
// You can construct a concrete instance of `GetDataSourceListOrderFieldArrayInput` via:
//
//	GetDataSourceListOrderFieldArray{ GetDataSourceListOrderFieldArgs{...} }
type GetDataSourceListOrderFieldArrayInput interface {
	pulumi.Input

	ToGetDataSourceListOrderFieldArrayOutput() GetDataSourceListOrderFieldArrayOutput
	ToGetDataSourceListOrderFieldArrayOutputWithContext(context.Context) GetDataSourceListOrderFieldArrayOutput
}

type GetDataSourceListOrderFieldArray []GetDataSourceListOrderFieldInput

func (GetDataSourceListOrderFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceListOrderField)(nil)).Elem()
}

func (i GetDataSourceListOrderFieldArray) ToGetDataSourceListOrderFieldArrayOutput() GetDataSourceListOrderFieldArrayOutput {
	return i.ToGetDataSourceListOrderFieldArrayOutputWithContext(context.Background())
}

func (i GetDataSourceListOrderFieldArray) ToGetDataSourceListOrderFieldArrayOutputWithContext(ctx context.Context) GetDataSourceListOrderFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceListOrderFieldArrayOutput)
}

type GetDataSourceListOrderFieldOutput struct{ *pulumi.OutputState }

func (GetDataSourceListOrderFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceListOrderField)(nil)).Elem()
}

func (o GetDataSourceListOrderFieldOutput) ToGetDataSourceListOrderFieldOutput() GetDataSourceListOrderFieldOutput {
	return o
}

func (o GetDataSourceListOrderFieldOutput) ToGetDataSourceListOrderFieldOutputWithContext(ctx context.Context) GetDataSourceListOrderFieldOutput {
	return o
}

// OrderFields rule.
func (o GetDataSourceListOrderFieldOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListOrderField) string { return v.Direction }).(pulumi.StringOutput)
}

// OrderFields name.
func (o GetDataSourceListOrderFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListOrderField) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataSourceListOrderFieldArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceListOrderFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceListOrderField)(nil)).Elem()
}

func (o GetDataSourceListOrderFieldArrayOutput) ToGetDataSourceListOrderFieldArrayOutput() GetDataSourceListOrderFieldArrayOutput {
	return o
}

func (o GetDataSourceListOrderFieldArrayOutput) ToGetDataSourceListOrderFieldArrayOutputWithContext(ctx context.Context) GetDataSourceListOrderFieldArrayOutput {
	return o
}

func (o GetDataSourceListOrderFieldArrayOutput) Index(i pulumi.IntInput) GetDataSourceListOrderFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceListOrderField {
		return vs[0].([]GetDataSourceListOrderField)[vs[1].(int)]
	}).(GetDataSourceListOrderFieldOutput)
}

type GetDataSourceListRow struct {
	// Appid.
	AppId int `pulumi:"appId"`
	// Has Author.
	Author bool `pulumi:"author"`
	// Datasource AuthorityProjectName.
	AuthorityProjectName string `pulumi:"authorityProjectName"`
	// Datasource AuthorityUserName.
	AuthorityUserName string `pulumi:"authorityUserName"`
	// Biz params.
	BizParams string `pulumi:"bizParams"`
	// Biz params json string.
	BizParamsString string `pulumi:"bizParamsString"`
	// Datasource category.
	Category string `pulumi:"category"`
	// Datasource cluster id.
	ClusterId string `pulumi:"clusterId"`
	// Datasource cluster name.
	ClusterName string `pulumi:"clusterName"`
	// CreateTime.
	CreateTime int `pulumi:"createTime"`
	// DatasourceDataSourceStatus.
	DataSourceStatus string `pulumi:"dataSourceStatus"`
	// DatabaseName.
	DatabaseName string `pulumi:"databaseName"`
	// Can Deliver.
	Deliver bool `pulumi:"deliver"`
	// Description.
	Description string `pulumi:"description"`
	// Datasource display name.
	Display string `pulumi:"display"`
	// Datasource can Edit.
	Edit bool `pulumi:"edit"`
	// ID.
	Id int `pulumi:"id"`
	// Instance.
	Instance string `pulumi:"instance"`
	// Datasource ModifiedTime.
	ModifiedTime int `pulumi:"modifiedTime"`
	// Filter name.
	Name string `pulumi:"name"`
	// Datasource owner account.
	OwnerAccount string `pulumi:"ownerAccount"`
	// Datasource owner account name.
	OwnerAccountName string `pulumi:"ownerAccountName"`
	// Datasource owner project id.
	OwnerProjectId string `pulumi:"ownerProjectId"`
	// Datasource OwnerProjectIdent.
	OwnerProjectIdent string `pulumi:"ownerProjectIdent"`
	// Datasource OwnerProjectName.
	OwnerProjectName string `pulumi:"ownerProjectName"`
	// Datasource params.
	Params string `pulumi:"params"`
	// Params json string.
	ParamsString string `pulumi:"paramsString"`
	// Datasource engin cluster region.
	Region string `pulumi:"region"`
	// Datasource show type.
	ShowType string `pulumi:"showType"`
	// Datasource status.
	Status int `pulumi:"status"`
	// Datasource type.
	Type string `pulumi:"type"`
}

// GetDataSourceListRowInput is an input type that accepts GetDataSourceListRowArgs and GetDataSourceListRowOutput values.
// You can construct a concrete instance of `GetDataSourceListRowInput` via:
//
//	GetDataSourceListRowArgs{...}
type GetDataSourceListRowInput interface {
	pulumi.Input

	ToGetDataSourceListRowOutput() GetDataSourceListRowOutput
	ToGetDataSourceListRowOutputWithContext(context.Context) GetDataSourceListRowOutput
}

type GetDataSourceListRowArgs struct {
	// Appid.
	AppId pulumi.IntInput `pulumi:"appId"`
	// Has Author.
	Author pulumi.BoolInput `pulumi:"author"`
	// Datasource AuthorityProjectName.
	AuthorityProjectName pulumi.StringInput `pulumi:"authorityProjectName"`
	// Datasource AuthorityUserName.
	AuthorityUserName pulumi.StringInput `pulumi:"authorityUserName"`
	// Biz params.
	BizParams pulumi.StringInput `pulumi:"bizParams"`
	// Biz params json string.
	BizParamsString pulumi.StringInput `pulumi:"bizParamsString"`
	// Datasource category.
	Category pulumi.StringInput `pulumi:"category"`
	// Datasource cluster id.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Datasource cluster name.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// CreateTime.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// DatasourceDataSourceStatus.
	DataSourceStatus pulumi.StringInput `pulumi:"dataSourceStatus"`
	// DatabaseName.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Can Deliver.
	Deliver pulumi.BoolInput `pulumi:"deliver"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Datasource display name.
	Display pulumi.StringInput `pulumi:"display"`
	// Datasource can Edit.
	Edit pulumi.BoolInput `pulumi:"edit"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Instance.
	Instance pulumi.StringInput `pulumi:"instance"`
	// Datasource ModifiedTime.
	ModifiedTime pulumi.IntInput `pulumi:"modifiedTime"`
	// Filter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Datasource owner account.
	OwnerAccount pulumi.StringInput `pulumi:"ownerAccount"`
	// Datasource owner account name.
	OwnerAccountName pulumi.StringInput `pulumi:"ownerAccountName"`
	// Datasource owner project id.
	OwnerProjectId pulumi.StringInput `pulumi:"ownerProjectId"`
	// Datasource OwnerProjectIdent.
	OwnerProjectIdent pulumi.StringInput `pulumi:"ownerProjectIdent"`
	// Datasource OwnerProjectName.
	OwnerProjectName pulumi.StringInput `pulumi:"ownerProjectName"`
	// Datasource params.
	Params pulumi.StringInput `pulumi:"params"`
	// Params json string.
	ParamsString pulumi.StringInput `pulumi:"paramsString"`
	// Datasource engin cluster region.
	Region pulumi.StringInput `pulumi:"region"`
	// Datasource show type.
	ShowType pulumi.StringInput `pulumi:"showType"`
	// Datasource status.
	Status pulumi.IntInput `pulumi:"status"`
	// Datasource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataSourceListRowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceListRow)(nil)).Elem()
}

func (i GetDataSourceListRowArgs) ToGetDataSourceListRowOutput() GetDataSourceListRowOutput {
	return i.ToGetDataSourceListRowOutputWithContext(context.Background())
}

func (i GetDataSourceListRowArgs) ToGetDataSourceListRowOutputWithContext(ctx context.Context) GetDataSourceListRowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceListRowOutput)
}

// GetDataSourceListRowArrayInput is an input type that accepts GetDataSourceListRowArray and GetDataSourceListRowArrayOutput values.
// You can construct a concrete instance of `GetDataSourceListRowArrayInput` via:
//
//	GetDataSourceListRowArray{ GetDataSourceListRowArgs{...} }
type GetDataSourceListRowArrayInput interface {
	pulumi.Input

	ToGetDataSourceListRowArrayOutput() GetDataSourceListRowArrayOutput
	ToGetDataSourceListRowArrayOutputWithContext(context.Context) GetDataSourceListRowArrayOutput
}

type GetDataSourceListRowArray []GetDataSourceListRowInput

func (GetDataSourceListRowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceListRow)(nil)).Elem()
}

func (i GetDataSourceListRowArray) ToGetDataSourceListRowArrayOutput() GetDataSourceListRowArrayOutput {
	return i.ToGetDataSourceListRowArrayOutputWithContext(context.Background())
}

func (i GetDataSourceListRowArray) ToGetDataSourceListRowArrayOutputWithContext(ctx context.Context) GetDataSourceListRowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceListRowArrayOutput)
}

type GetDataSourceListRowOutput struct{ *pulumi.OutputState }

func (GetDataSourceListRowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceListRow)(nil)).Elem()
}

func (o GetDataSourceListRowOutput) ToGetDataSourceListRowOutput() GetDataSourceListRowOutput {
	return o
}

func (o GetDataSourceListRowOutput) ToGetDataSourceListRowOutputWithContext(ctx context.Context) GetDataSourceListRowOutput {
	return o
}

// Appid.
func (o GetDataSourceListRowOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceListRow) int { return v.AppId }).(pulumi.IntOutput)
}

// Has Author.
func (o GetDataSourceListRowOutput) Author() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataSourceListRow) bool { return v.Author }).(pulumi.BoolOutput)
}

// Datasource AuthorityProjectName.
func (o GetDataSourceListRowOutput) AuthorityProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.AuthorityProjectName }).(pulumi.StringOutput)
}

// Datasource AuthorityUserName.
func (o GetDataSourceListRowOutput) AuthorityUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.AuthorityUserName }).(pulumi.StringOutput)
}

// Biz params.
func (o GetDataSourceListRowOutput) BizParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.BizParams }).(pulumi.StringOutput)
}

// Biz params json string.
func (o GetDataSourceListRowOutput) BizParamsString() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.BizParamsString }).(pulumi.StringOutput)
}

// Datasource category.
func (o GetDataSourceListRowOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Category }).(pulumi.StringOutput)
}

// Datasource cluster id.
func (o GetDataSourceListRowOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Datasource cluster name.
func (o GetDataSourceListRowOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.ClusterName }).(pulumi.StringOutput)
}

// CreateTime.
func (o GetDataSourceListRowOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceListRow) int { return v.CreateTime }).(pulumi.IntOutput)
}

// DatasourceDataSourceStatus.
func (o GetDataSourceListRowOutput) DataSourceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.DataSourceStatus }).(pulumi.StringOutput)
}

// DatabaseName.
func (o GetDataSourceListRowOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Can Deliver.
func (o GetDataSourceListRowOutput) Deliver() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataSourceListRow) bool { return v.Deliver }).(pulumi.BoolOutput)
}

// Description.
func (o GetDataSourceListRowOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Description }).(pulumi.StringOutput)
}

// Datasource display name.
func (o GetDataSourceListRowOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Display }).(pulumi.StringOutput)
}

// Datasource can Edit.
func (o GetDataSourceListRowOutput) Edit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataSourceListRow) bool { return v.Edit }).(pulumi.BoolOutput)
}

// ID.
func (o GetDataSourceListRowOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceListRow) int { return v.Id }).(pulumi.IntOutput)
}

// Instance.
func (o GetDataSourceListRowOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Instance }).(pulumi.StringOutput)
}

// Datasource ModifiedTime.
func (o GetDataSourceListRowOutput) ModifiedTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceListRow) int { return v.ModifiedTime }).(pulumi.IntOutput)
}

// Filter name.
func (o GetDataSourceListRowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Name }).(pulumi.StringOutput)
}

// Datasource owner account.
func (o GetDataSourceListRowOutput) OwnerAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.OwnerAccount }).(pulumi.StringOutput)
}

// Datasource owner account name.
func (o GetDataSourceListRowOutput) OwnerAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.OwnerAccountName }).(pulumi.StringOutput)
}

// Datasource owner project id.
func (o GetDataSourceListRowOutput) OwnerProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.OwnerProjectId }).(pulumi.StringOutput)
}

// Datasource OwnerProjectIdent.
func (o GetDataSourceListRowOutput) OwnerProjectIdent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.OwnerProjectIdent }).(pulumi.StringOutput)
}

// Datasource OwnerProjectName.
func (o GetDataSourceListRowOutput) OwnerProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.OwnerProjectName }).(pulumi.StringOutput)
}

// Datasource params.
func (o GetDataSourceListRowOutput) Params() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Params }).(pulumi.StringOutput)
}

// Params json string.
func (o GetDataSourceListRowOutput) ParamsString() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.ParamsString }).(pulumi.StringOutput)
}

// Datasource engin cluster region.
func (o GetDataSourceListRowOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Region }).(pulumi.StringOutput)
}

// Datasource show type.
func (o GetDataSourceListRowOutput) ShowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.ShowType }).(pulumi.StringOutput)
}

// Datasource status.
func (o GetDataSourceListRowOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceListRow) int { return v.Status }).(pulumi.IntOutput)
}

// Datasource type.
func (o GetDataSourceListRowOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceListRow) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataSourceListRowArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceListRowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceListRow)(nil)).Elem()
}

func (o GetDataSourceListRowArrayOutput) ToGetDataSourceListRowArrayOutput() GetDataSourceListRowArrayOutput {
	return o
}

func (o GetDataSourceListRowArrayOutput) ToGetDataSourceListRowArrayOutputWithContext(ctx context.Context) GetDataSourceListRowArrayOutput {
	return o
}

func (o GetDataSourceListRowArrayOutput) Index(i pulumi.IntInput) GetDataSourceListRowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceListRow {
		return vs[0].([]GetDataSourceListRow)[vs[1].(int)]
	}).(GetDataSourceListRowOutput)
}

type GetDataSourceWithoutInfoData struct {
	// Appid.
	AppId int `pulumi:"appId"`
	// Has Author.
	Author bool `pulumi:"author"`
	// Datasource AuthorityProjectName.
	AuthorityProjectName string `pulumi:"authorityProjectName"`
	// Datasource AuthorityUserName.
	AuthorityUserName string `pulumi:"authorityUserName"`
	// Biz params.
	BizParams string `pulumi:"bizParams"`
	// Biz params json string.
	BizParamsString string `pulumi:"bizParamsString"`
	// Datasource category.
	Category string `pulumi:"category"`
	// Datasource cluster id.
	ClusterId string `pulumi:"clusterId"`
	// Datasource cluster name.
	ClusterName string `pulumi:"clusterName"`
	// CreateTime.
	CreateTime int `pulumi:"createTime"`
	// DatasourceDataSourceStatus.
	DataSourceStatus string `pulumi:"dataSourceStatus"`
	// DatabaseName.
	DatabaseName string `pulumi:"databaseName"`
	// Can Deliver.
	Deliver bool `pulumi:"deliver"`
	// Description.
	Description string `pulumi:"description"`
	// Datasource display name.
	Display string `pulumi:"display"`
	// Datasource can Edit.
	Edit bool `pulumi:"edit"`
	// ID.
	Id int `pulumi:"id"`
	// Instance.
	Instance string `pulumi:"instance"`
	// Datasource ModifiedTime.
	ModifiedTime int `pulumi:"modifiedTime"`
	// Filter name.
	Name string `pulumi:"name"`
	// Datasource owner account.
	OwnerAccount string `pulumi:"ownerAccount"`
	// Datasource owner account name.
	OwnerAccountName string `pulumi:"ownerAccountName"`
	// Datasource owner project id.
	OwnerProjectId string `pulumi:"ownerProjectId"`
	// Datasource OwnerProjectIdent.
	OwnerProjectIdent string `pulumi:"ownerProjectIdent"`
	// Datasource OwnerProjectName.
	OwnerProjectName string `pulumi:"ownerProjectName"`
	// Datasource params.
	Params string `pulumi:"params"`
	// Params json string.
	ParamsString string `pulumi:"paramsString"`
	// Datasource engin cluster region.
	Region string `pulumi:"region"`
	// Datasource show type.
	ShowType string `pulumi:"showType"`
	// Datasource status.
	Status int `pulumi:"status"`
	// Datasource type.
	Type string `pulumi:"type"`
}

// GetDataSourceWithoutInfoDataInput is an input type that accepts GetDataSourceWithoutInfoDataArgs and GetDataSourceWithoutInfoDataOutput values.
// You can construct a concrete instance of `GetDataSourceWithoutInfoDataInput` via:
//
//	GetDataSourceWithoutInfoDataArgs{...}
type GetDataSourceWithoutInfoDataInput interface {
	pulumi.Input

	ToGetDataSourceWithoutInfoDataOutput() GetDataSourceWithoutInfoDataOutput
	ToGetDataSourceWithoutInfoDataOutputWithContext(context.Context) GetDataSourceWithoutInfoDataOutput
}

type GetDataSourceWithoutInfoDataArgs struct {
	// Appid.
	AppId pulumi.IntInput `pulumi:"appId"`
	// Has Author.
	Author pulumi.BoolInput `pulumi:"author"`
	// Datasource AuthorityProjectName.
	AuthorityProjectName pulumi.StringInput `pulumi:"authorityProjectName"`
	// Datasource AuthorityUserName.
	AuthorityUserName pulumi.StringInput `pulumi:"authorityUserName"`
	// Biz params.
	BizParams pulumi.StringInput `pulumi:"bizParams"`
	// Biz params json string.
	BizParamsString pulumi.StringInput `pulumi:"bizParamsString"`
	// Datasource category.
	Category pulumi.StringInput `pulumi:"category"`
	// Datasource cluster id.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Datasource cluster name.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// CreateTime.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// DatasourceDataSourceStatus.
	DataSourceStatus pulumi.StringInput `pulumi:"dataSourceStatus"`
	// DatabaseName.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Can Deliver.
	Deliver pulumi.BoolInput `pulumi:"deliver"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Datasource display name.
	Display pulumi.StringInput `pulumi:"display"`
	// Datasource can Edit.
	Edit pulumi.BoolInput `pulumi:"edit"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Instance.
	Instance pulumi.StringInput `pulumi:"instance"`
	// Datasource ModifiedTime.
	ModifiedTime pulumi.IntInput `pulumi:"modifiedTime"`
	// Filter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Datasource owner account.
	OwnerAccount pulumi.StringInput `pulumi:"ownerAccount"`
	// Datasource owner account name.
	OwnerAccountName pulumi.StringInput `pulumi:"ownerAccountName"`
	// Datasource owner project id.
	OwnerProjectId pulumi.StringInput `pulumi:"ownerProjectId"`
	// Datasource OwnerProjectIdent.
	OwnerProjectIdent pulumi.StringInput `pulumi:"ownerProjectIdent"`
	// Datasource OwnerProjectName.
	OwnerProjectName pulumi.StringInput `pulumi:"ownerProjectName"`
	// Datasource params.
	Params pulumi.StringInput `pulumi:"params"`
	// Params json string.
	ParamsString pulumi.StringInput `pulumi:"paramsString"`
	// Datasource engin cluster region.
	Region pulumi.StringInput `pulumi:"region"`
	// Datasource show type.
	ShowType pulumi.StringInput `pulumi:"showType"`
	// Datasource status.
	Status pulumi.IntInput `pulumi:"status"`
	// Datasource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataSourceWithoutInfoDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceWithoutInfoData)(nil)).Elem()
}

func (i GetDataSourceWithoutInfoDataArgs) ToGetDataSourceWithoutInfoDataOutput() GetDataSourceWithoutInfoDataOutput {
	return i.ToGetDataSourceWithoutInfoDataOutputWithContext(context.Background())
}

func (i GetDataSourceWithoutInfoDataArgs) ToGetDataSourceWithoutInfoDataOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceWithoutInfoDataOutput)
}

// GetDataSourceWithoutInfoDataArrayInput is an input type that accepts GetDataSourceWithoutInfoDataArray and GetDataSourceWithoutInfoDataArrayOutput values.
// You can construct a concrete instance of `GetDataSourceWithoutInfoDataArrayInput` via:
//
//	GetDataSourceWithoutInfoDataArray{ GetDataSourceWithoutInfoDataArgs{...} }
type GetDataSourceWithoutInfoDataArrayInput interface {
	pulumi.Input

	ToGetDataSourceWithoutInfoDataArrayOutput() GetDataSourceWithoutInfoDataArrayOutput
	ToGetDataSourceWithoutInfoDataArrayOutputWithContext(context.Context) GetDataSourceWithoutInfoDataArrayOutput
}

type GetDataSourceWithoutInfoDataArray []GetDataSourceWithoutInfoDataInput

func (GetDataSourceWithoutInfoDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceWithoutInfoData)(nil)).Elem()
}

func (i GetDataSourceWithoutInfoDataArray) ToGetDataSourceWithoutInfoDataArrayOutput() GetDataSourceWithoutInfoDataArrayOutput {
	return i.ToGetDataSourceWithoutInfoDataArrayOutputWithContext(context.Background())
}

func (i GetDataSourceWithoutInfoDataArray) ToGetDataSourceWithoutInfoDataArrayOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceWithoutInfoDataArrayOutput)
}

type GetDataSourceWithoutInfoDataOutput struct{ *pulumi.OutputState }

func (GetDataSourceWithoutInfoDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceWithoutInfoData)(nil)).Elem()
}

func (o GetDataSourceWithoutInfoDataOutput) ToGetDataSourceWithoutInfoDataOutput() GetDataSourceWithoutInfoDataOutput {
	return o
}

func (o GetDataSourceWithoutInfoDataOutput) ToGetDataSourceWithoutInfoDataOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoDataOutput {
	return o
}

// Appid.
func (o GetDataSourceWithoutInfoDataOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) int { return v.AppId }).(pulumi.IntOutput)
}

// Has Author.
func (o GetDataSourceWithoutInfoDataOutput) Author() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) bool { return v.Author }).(pulumi.BoolOutput)
}

// Datasource AuthorityProjectName.
func (o GetDataSourceWithoutInfoDataOutput) AuthorityProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.AuthorityProjectName }).(pulumi.StringOutput)
}

// Datasource AuthorityUserName.
func (o GetDataSourceWithoutInfoDataOutput) AuthorityUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.AuthorityUserName }).(pulumi.StringOutput)
}

// Biz params.
func (o GetDataSourceWithoutInfoDataOutput) BizParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.BizParams }).(pulumi.StringOutput)
}

// Biz params json string.
func (o GetDataSourceWithoutInfoDataOutput) BizParamsString() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.BizParamsString }).(pulumi.StringOutput)
}

// Datasource category.
func (o GetDataSourceWithoutInfoDataOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Category }).(pulumi.StringOutput)
}

// Datasource cluster id.
func (o GetDataSourceWithoutInfoDataOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Datasource cluster name.
func (o GetDataSourceWithoutInfoDataOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.ClusterName }).(pulumi.StringOutput)
}

// CreateTime.
func (o GetDataSourceWithoutInfoDataOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) int { return v.CreateTime }).(pulumi.IntOutput)
}

// DatasourceDataSourceStatus.
func (o GetDataSourceWithoutInfoDataOutput) DataSourceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.DataSourceStatus }).(pulumi.StringOutput)
}

// DatabaseName.
func (o GetDataSourceWithoutInfoDataOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Can Deliver.
func (o GetDataSourceWithoutInfoDataOutput) Deliver() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) bool { return v.Deliver }).(pulumi.BoolOutput)
}

// Description.
func (o GetDataSourceWithoutInfoDataOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Description }).(pulumi.StringOutput)
}

// Datasource display name.
func (o GetDataSourceWithoutInfoDataOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Display }).(pulumi.StringOutput)
}

// Datasource can Edit.
func (o GetDataSourceWithoutInfoDataOutput) Edit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) bool { return v.Edit }).(pulumi.BoolOutput)
}

// ID.
func (o GetDataSourceWithoutInfoDataOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) int { return v.Id }).(pulumi.IntOutput)
}

// Instance.
func (o GetDataSourceWithoutInfoDataOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Instance }).(pulumi.StringOutput)
}

// Datasource ModifiedTime.
func (o GetDataSourceWithoutInfoDataOutput) ModifiedTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) int { return v.ModifiedTime }).(pulumi.IntOutput)
}

// Filter name.
func (o GetDataSourceWithoutInfoDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Name }).(pulumi.StringOutput)
}

// Datasource owner account.
func (o GetDataSourceWithoutInfoDataOutput) OwnerAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.OwnerAccount }).(pulumi.StringOutput)
}

// Datasource owner account name.
func (o GetDataSourceWithoutInfoDataOutput) OwnerAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.OwnerAccountName }).(pulumi.StringOutput)
}

// Datasource owner project id.
func (o GetDataSourceWithoutInfoDataOutput) OwnerProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.OwnerProjectId }).(pulumi.StringOutput)
}

// Datasource OwnerProjectIdent.
func (o GetDataSourceWithoutInfoDataOutput) OwnerProjectIdent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.OwnerProjectIdent }).(pulumi.StringOutput)
}

// Datasource OwnerProjectName.
func (o GetDataSourceWithoutInfoDataOutput) OwnerProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.OwnerProjectName }).(pulumi.StringOutput)
}

// Datasource params.
func (o GetDataSourceWithoutInfoDataOutput) Params() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Params }).(pulumi.StringOutput)
}

// Params json string.
func (o GetDataSourceWithoutInfoDataOutput) ParamsString() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.ParamsString }).(pulumi.StringOutput)
}

// Datasource engin cluster region.
func (o GetDataSourceWithoutInfoDataOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Region }).(pulumi.StringOutput)
}

// Datasource show type.
func (o GetDataSourceWithoutInfoDataOutput) ShowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.ShowType }).(pulumi.StringOutput)
}

// Datasource status.
func (o GetDataSourceWithoutInfoDataOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) int { return v.Status }).(pulumi.IntOutput)
}

// Datasource type.
func (o GetDataSourceWithoutInfoDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoData) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataSourceWithoutInfoDataArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceWithoutInfoDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceWithoutInfoData)(nil)).Elem()
}

func (o GetDataSourceWithoutInfoDataArrayOutput) ToGetDataSourceWithoutInfoDataArrayOutput() GetDataSourceWithoutInfoDataArrayOutput {
	return o
}

func (o GetDataSourceWithoutInfoDataArrayOutput) ToGetDataSourceWithoutInfoDataArrayOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoDataArrayOutput {
	return o
}

func (o GetDataSourceWithoutInfoDataArrayOutput) Index(i pulumi.IntInput) GetDataSourceWithoutInfoDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceWithoutInfoData {
		return vs[0].([]GetDataSourceWithoutInfoData)[vs[1].(int)]
	}).(GetDataSourceWithoutInfoDataOutput)
}

type GetDataSourceWithoutInfoFilter struct {
	// Filter name.
	Name *string `pulumi:"name"`
	// Filter value.
	Values []string `pulumi:"values"`
}

// GetDataSourceWithoutInfoFilterInput is an input type that accepts GetDataSourceWithoutInfoFilterArgs and GetDataSourceWithoutInfoFilterOutput values.
// You can construct a concrete instance of `GetDataSourceWithoutInfoFilterInput` via:
//
//	GetDataSourceWithoutInfoFilterArgs{...}
type GetDataSourceWithoutInfoFilterInput interface {
	pulumi.Input

	ToGetDataSourceWithoutInfoFilterOutput() GetDataSourceWithoutInfoFilterOutput
	ToGetDataSourceWithoutInfoFilterOutputWithContext(context.Context) GetDataSourceWithoutInfoFilterOutput
}

type GetDataSourceWithoutInfoFilterArgs struct {
	// Filter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Filter value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataSourceWithoutInfoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceWithoutInfoFilter)(nil)).Elem()
}

func (i GetDataSourceWithoutInfoFilterArgs) ToGetDataSourceWithoutInfoFilterOutput() GetDataSourceWithoutInfoFilterOutput {
	return i.ToGetDataSourceWithoutInfoFilterOutputWithContext(context.Background())
}

func (i GetDataSourceWithoutInfoFilterArgs) ToGetDataSourceWithoutInfoFilterOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceWithoutInfoFilterOutput)
}

// GetDataSourceWithoutInfoFilterArrayInput is an input type that accepts GetDataSourceWithoutInfoFilterArray and GetDataSourceWithoutInfoFilterArrayOutput values.
// You can construct a concrete instance of `GetDataSourceWithoutInfoFilterArrayInput` via:
//
//	GetDataSourceWithoutInfoFilterArray{ GetDataSourceWithoutInfoFilterArgs{...} }
type GetDataSourceWithoutInfoFilterArrayInput interface {
	pulumi.Input

	ToGetDataSourceWithoutInfoFilterArrayOutput() GetDataSourceWithoutInfoFilterArrayOutput
	ToGetDataSourceWithoutInfoFilterArrayOutputWithContext(context.Context) GetDataSourceWithoutInfoFilterArrayOutput
}

type GetDataSourceWithoutInfoFilterArray []GetDataSourceWithoutInfoFilterInput

func (GetDataSourceWithoutInfoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceWithoutInfoFilter)(nil)).Elem()
}

func (i GetDataSourceWithoutInfoFilterArray) ToGetDataSourceWithoutInfoFilterArrayOutput() GetDataSourceWithoutInfoFilterArrayOutput {
	return i.ToGetDataSourceWithoutInfoFilterArrayOutputWithContext(context.Background())
}

func (i GetDataSourceWithoutInfoFilterArray) ToGetDataSourceWithoutInfoFilterArrayOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceWithoutInfoFilterArrayOutput)
}

type GetDataSourceWithoutInfoFilterOutput struct{ *pulumi.OutputState }

func (GetDataSourceWithoutInfoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceWithoutInfoFilter)(nil)).Elem()
}

func (o GetDataSourceWithoutInfoFilterOutput) ToGetDataSourceWithoutInfoFilterOutput() GetDataSourceWithoutInfoFilterOutput {
	return o
}

func (o GetDataSourceWithoutInfoFilterOutput) ToGetDataSourceWithoutInfoFilterOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoFilterOutput {
	return o
}

// Filter name.
func (o GetDataSourceWithoutInfoFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Filter value.
func (o GetDataSourceWithoutInfoFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataSourceWithoutInfoFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceWithoutInfoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceWithoutInfoFilter)(nil)).Elem()
}

func (o GetDataSourceWithoutInfoFilterArrayOutput) ToGetDataSourceWithoutInfoFilterArrayOutput() GetDataSourceWithoutInfoFilterArrayOutput {
	return o
}

func (o GetDataSourceWithoutInfoFilterArrayOutput) ToGetDataSourceWithoutInfoFilterArrayOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoFilterArrayOutput {
	return o
}

func (o GetDataSourceWithoutInfoFilterArrayOutput) Index(i pulumi.IntInput) GetDataSourceWithoutInfoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceWithoutInfoFilter {
		return vs[0].([]GetDataSourceWithoutInfoFilter)[vs[1].(int)]
	}).(GetDataSourceWithoutInfoFilterOutput)
}

type GetDataSourceWithoutInfoOrderField struct {
	// OrderFields rule.
	Direction string `pulumi:"direction"`
	// OrderFields name.
	Name string `pulumi:"name"`
}

// GetDataSourceWithoutInfoOrderFieldInput is an input type that accepts GetDataSourceWithoutInfoOrderFieldArgs and GetDataSourceWithoutInfoOrderFieldOutput values.
// You can construct a concrete instance of `GetDataSourceWithoutInfoOrderFieldInput` via:
//
//	GetDataSourceWithoutInfoOrderFieldArgs{...}
type GetDataSourceWithoutInfoOrderFieldInput interface {
	pulumi.Input

	ToGetDataSourceWithoutInfoOrderFieldOutput() GetDataSourceWithoutInfoOrderFieldOutput
	ToGetDataSourceWithoutInfoOrderFieldOutputWithContext(context.Context) GetDataSourceWithoutInfoOrderFieldOutput
}

type GetDataSourceWithoutInfoOrderFieldArgs struct {
	// OrderFields rule.
	Direction pulumi.StringInput `pulumi:"direction"`
	// OrderFields name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataSourceWithoutInfoOrderFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceWithoutInfoOrderField)(nil)).Elem()
}

func (i GetDataSourceWithoutInfoOrderFieldArgs) ToGetDataSourceWithoutInfoOrderFieldOutput() GetDataSourceWithoutInfoOrderFieldOutput {
	return i.ToGetDataSourceWithoutInfoOrderFieldOutputWithContext(context.Background())
}

func (i GetDataSourceWithoutInfoOrderFieldArgs) ToGetDataSourceWithoutInfoOrderFieldOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoOrderFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceWithoutInfoOrderFieldOutput)
}

// GetDataSourceWithoutInfoOrderFieldArrayInput is an input type that accepts GetDataSourceWithoutInfoOrderFieldArray and GetDataSourceWithoutInfoOrderFieldArrayOutput values.
// You can construct a concrete instance of `GetDataSourceWithoutInfoOrderFieldArrayInput` via:
//
//	GetDataSourceWithoutInfoOrderFieldArray{ GetDataSourceWithoutInfoOrderFieldArgs{...} }
type GetDataSourceWithoutInfoOrderFieldArrayInput interface {
	pulumi.Input

	ToGetDataSourceWithoutInfoOrderFieldArrayOutput() GetDataSourceWithoutInfoOrderFieldArrayOutput
	ToGetDataSourceWithoutInfoOrderFieldArrayOutputWithContext(context.Context) GetDataSourceWithoutInfoOrderFieldArrayOutput
}

type GetDataSourceWithoutInfoOrderFieldArray []GetDataSourceWithoutInfoOrderFieldInput

func (GetDataSourceWithoutInfoOrderFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceWithoutInfoOrderField)(nil)).Elem()
}

func (i GetDataSourceWithoutInfoOrderFieldArray) ToGetDataSourceWithoutInfoOrderFieldArrayOutput() GetDataSourceWithoutInfoOrderFieldArrayOutput {
	return i.ToGetDataSourceWithoutInfoOrderFieldArrayOutputWithContext(context.Background())
}

func (i GetDataSourceWithoutInfoOrderFieldArray) ToGetDataSourceWithoutInfoOrderFieldArrayOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoOrderFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceWithoutInfoOrderFieldArrayOutput)
}

type GetDataSourceWithoutInfoOrderFieldOutput struct{ *pulumi.OutputState }

func (GetDataSourceWithoutInfoOrderFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceWithoutInfoOrderField)(nil)).Elem()
}

func (o GetDataSourceWithoutInfoOrderFieldOutput) ToGetDataSourceWithoutInfoOrderFieldOutput() GetDataSourceWithoutInfoOrderFieldOutput {
	return o
}

func (o GetDataSourceWithoutInfoOrderFieldOutput) ToGetDataSourceWithoutInfoOrderFieldOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoOrderFieldOutput {
	return o
}

// OrderFields rule.
func (o GetDataSourceWithoutInfoOrderFieldOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoOrderField) string { return v.Direction }).(pulumi.StringOutput)
}

// OrderFields name.
func (o GetDataSourceWithoutInfoOrderFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceWithoutInfoOrderField) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataSourceWithoutInfoOrderFieldArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceWithoutInfoOrderFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceWithoutInfoOrderField)(nil)).Elem()
}

func (o GetDataSourceWithoutInfoOrderFieldArrayOutput) ToGetDataSourceWithoutInfoOrderFieldArrayOutput() GetDataSourceWithoutInfoOrderFieldArrayOutput {
	return o
}

func (o GetDataSourceWithoutInfoOrderFieldArrayOutput) ToGetDataSourceWithoutInfoOrderFieldArrayOutputWithContext(ctx context.Context) GetDataSourceWithoutInfoOrderFieldArrayOutput {
	return o
}

func (o GetDataSourceWithoutInfoOrderFieldArrayOutput) Index(i pulumi.IntInput) GetDataSourceWithoutInfoOrderFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceWithoutInfoOrderField {
		return vs[0].([]GetDataSourceWithoutInfoOrderField)[vs[1].(int)]
	}).(GetDataSourceWithoutInfoOrderFieldOutput)
}

type GetRuleTemplatesData struct {
	// Citations.
	CitationCount int `pulumi:"citationCount"`
	// The type of comparison method supported by the rule (1: fixed value comparison, greater than, less than, greater than or equal to, etc. 2: fluctuating value comparison, absolute value, rise, fall).
	CompareType int `pulumi:"compareType"`
	// Description of rule template.
	Description string `pulumi:"description"`
	// Whether to associate other library tables.
	MultiSourceFlag bool `pulumi:"multiSourceFlag"`
	// Name of rule template.
	Name string `pulumi:"name"`
	// Quality inspection dimensions. `1`: Accuracy, `2`: Uniqueness, `3`: Completeness, `4`: Consistency, `5`: Timeliness, `6`: Effectiveness.
	QualityDim int `pulumi:"qualityDim"`
	// ID of rule template.
	RuleTemplateId int `pulumi:"ruleTemplateId"`
	// Content of rule template.
	SourceContent string `pulumi:"sourceContent"`
	// Applicable type of source data.
	SourceEngineTypes []int `pulumi:"sourceEngineTypes"`
	// Source data object type. `1`: value, `2`: string.
	SourceObjectDataType int `pulumi:"sourceObjectDataType"`
	// Source data object type. `1`: Constant, `2`: Offline table level, `3`: Offline field level.
	SourceObjectType int `pulumi:"sourceObjectType"`
	// Sql Expression.
	SqlExpression string `pulumi:"sqlExpression"`
	// Sub Quality inspection dimensions. `1`: Accuracy, `2`: Uniqueness, `3`: Completeness, `4`: Consistency, `5`: Timeliness, `6`: Effectiveness.
	SubQualityDim int `pulumi:"subQualityDim"`
	// Template type. `1` means System template, `2` means Custom template.
	Type int `pulumi:"type"`
	// update time, like: yyyy-MM-dd HH:mm:ss.
	UpdateTime string `pulumi:"updateTime"`
	// user id.
	UserId int `pulumi:"userId"`
	// user name.
	UserName string `pulumi:"userName"`
	// If add where.
	WhereFlag bool `pulumi:"whereFlag"`
}

// GetRuleTemplatesDataInput is an input type that accepts GetRuleTemplatesDataArgs and GetRuleTemplatesDataOutput values.
// You can construct a concrete instance of `GetRuleTemplatesDataInput` via:
//
//	GetRuleTemplatesDataArgs{...}
type GetRuleTemplatesDataInput interface {
	pulumi.Input

	ToGetRuleTemplatesDataOutput() GetRuleTemplatesDataOutput
	ToGetRuleTemplatesDataOutputWithContext(context.Context) GetRuleTemplatesDataOutput
}

type GetRuleTemplatesDataArgs struct {
	// Citations.
	CitationCount pulumi.IntInput `pulumi:"citationCount"`
	// The type of comparison method supported by the rule (1: fixed value comparison, greater than, less than, greater than or equal to, etc. 2: fluctuating value comparison, absolute value, rise, fall).
	CompareType pulumi.IntInput `pulumi:"compareType"`
	// Description of rule template.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to associate other library tables.
	MultiSourceFlag pulumi.BoolInput `pulumi:"multiSourceFlag"`
	// Name of rule template.
	Name pulumi.StringInput `pulumi:"name"`
	// Quality inspection dimensions. `1`: Accuracy, `2`: Uniqueness, `3`: Completeness, `4`: Consistency, `5`: Timeliness, `6`: Effectiveness.
	QualityDim pulumi.IntInput `pulumi:"qualityDim"`
	// ID of rule template.
	RuleTemplateId pulumi.IntInput `pulumi:"ruleTemplateId"`
	// Content of rule template.
	SourceContent pulumi.StringInput `pulumi:"sourceContent"`
	// Applicable type of source data.
	SourceEngineTypes pulumi.IntArrayInput `pulumi:"sourceEngineTypes"`
	// Source data object type. `1`: value, `2`: string.
	SourceObjectDataType pulumi.IntInput `pulumi:"sourceObjectDataType"`
	// Source data object type. `1`: Constant, `2`: Offline table level, `3`: Offline field level.
	SourceObjectType pulumi.IntInput `pulumi:"sourceObjectType"`
	// Sql Expression.
	SqlExpression pulumi.StringInput `pulumi:"sqlExpression"`
	// Sub Quality inspection dimensions. `1`: Accuracy, `2`: Uniqueness, `3`: Completeness, `4`: Consistency, `5`: Timeliness, `6`: Effectiveness.
	SubQualityDim pulumi.IntInput `pulumi:"subQualityDim"`
	// Template type. `1` means System template, `2` means Custom template.
	Type pulumi.IntInput `pulumi:"type"`
	// update time, like: yyyy-MM-dd HH:mm:ss.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// user id.
	UserId pulumi.IntInput `pulumi:"userId"`
	// user name.
	UserName pulumi.StringInput `pulumi:"userName"`
	// If add where.
	WhereFlag pulumi.BoolInput `pulumi:"whereFlag"`
}

func (GetRuleTemplatesDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleTemplatesData)(nil)).Elem()
}

func (i GetRuleTemplatesDataArgs) ToGetRuleTemplatesDataOutput() GetRuleTemplatesDataOutput {
	return i.ToGetRuleTemplatesDataOutputWithContext(context.Background())
}

func (i GetRuleTemplatesDataArgs) ToGetRuleTemplatesDataOutputWithContext(ctx context.Context) GetRuleTemplatesDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleTemplatesDataOutput)
}

// GetRuleTemplatesDataArrayInput is an input type that accepts GetRuleTemplatesDataArray and GetRuleTemplatesDataArrayOutput values.
// You can construct a concrete instance of `GetRuleTemplatesDataArrayInput` via:
//
//	GetRuleTemplatesDataArray{ GetRuleTemplatesDataArgs{...} }
type GetRuleTemplatesDataArrayInput interface {
	pulumi.Input

	ToGetRuleTemplatesDataArrayOutput() GetRuleTemplatesDataArrayOutput
	ToGetRuleTemplatesDataArrayOutputWithContext(context.Context) GetRuleTemplatesDataArrayOutput
}

type GetRuleTemplatesDataArray []GetRuleTemplatesDataInput

func (GetRuleTemplatesDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleTemplatesData)(nil)).Elem()
}

func (i GetRuleTemplatesDataArray) ToGetRuleTemplatesDataArrayOutput() GetRuleTemplatesDataArrayOutput {
	return i.ToGetRuleTemplatesDataArrayOutputWithContext(context.Background())
}

func (i GetRuleTemplatesDataArray) ToGetRuleTemplatesDataArrayOutputWithContext(ctx context.Context) GetRuleTemplatesDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleTemplatesDataArrayOutput)
}

type GetRuleTemplatesDataOutput struct{ *pulumi.OutputState }

func (GetRuleTemplatesDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleTemplatesData)(nil)).Elem()
}

func (o GetRuleTemplatesDataOutput) ToGetRuleTemplatesDataOutput() GetRuleTemplatesDataOutput {
	return o
}

func (o GetRuleTemplatesDataOutput) ToGetRuleTemplatesDataOutputWithContext(ctx context.Context) GetRuleTemplatesDataOutput {
	return o
}

// Citations.
func (o GetRuleTemplatesDataOutput) CitationCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.CitationCount }).(pulumi.IntOutput)
}

// The type of comparison method supported by the rule (1: fixed value comparison, greater than, less than, greater than or equal to, etc. 2: fluctuating value comparison, absolute value, rise, fall).
func (o GetRuleTemplatesDataOutput) CompareType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.CompareType }).(pulumi.IntOutput)
}

// Description of rule template.
func (o GetRuleTemplatesDataOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to associate other library tables.
func (o GetRuleTemplatesDataOutput) MultiSourceFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) bool { return v.MultiSourceFlag }).(pulumi.BoolOutput)
}

// Name of rule template.
func (o GetRuleTemplatesDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.Name }).(pulumi.StringOutput)
}

// Quality inspection dimensions. `1`: Accuracy, `2`: Uniqueness, `3`: Completeness, `4`: Consistency, `5`: Timeliness, `6`: Effectiveness.
func (o GetRuleTemplatesDataOutput) QualityDim() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.QualityDim }).(pulumi.IntOutput)
}

// ID of rule template.
func (o GetRuleTemplatesDataOutput) RuleTemplateId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.RuleTemplateId }).(pulumi.IntOutput)
}

// Content of rule template.
func (o GetRuleTemplatesDataOutput) SourceContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.SourceContent }).(pulumi.StringOutput)
}

// Applicable type of source data.
func (o GetRuleTemplatesDataOutput) SourceEngineTypes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) []int { return v.SourceEngineTypes }).(pulumi.IntArrayOutput)
}

// Source data object type. `1`: value, `2`: string.
func (o GetRuleTemplatesDataOutput) SourceObjectDataType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.SourceObjectDataType }).(pulumi.IntOutput)
}

// Source data object type. `1`: Constant, `2`: Offline table level, `3`: Offline field level.
func (o GetRuleTemplatesDataOutput) SourceObjectType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.SourceObjectType }).(pulumi.IntOutput)
}

// Sql Expression.
func (o GetRuleTemplatesDataOutput) SqlExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.SqlExpression }).(pulumi.StringOutput)
}

// Sub Quality inspection dimensions. `1`: Accuracy, `2`: Uniqueness, `3`: Completeness, `4`: Consistency, `5`: Timeliness, `6`: Effectiveness.
func (o GetRuleTemplatesDataOutput) SubQualityDim() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.SubQualityDim }).(pulumi.IntOutput)
}

// Template type. `1` means System template, `2` means Custom template.
func (o GetRuleTemplatesDataOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.Type }).(pulumi.IntOutput)
}

// update time, like: yyyy-MM-dd HH:mm:ss.
func (o GetRuleTemplatesDataOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// user id.
func (o GetRuleTemplatesDataOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.UserId }).(pulumi.IntOutput)
}

// user name.
func (o GetRuleTemplatesDataOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.UserName }).(pulumi.StringOutput)
}

// If add where.
func (o GetRuleTemplatesDataOutput) WhereFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) bool { return v.WhereFlag }).(pulumi.BoolOutput)
}

type GetRuleTemplatesDataArrayOutput struct{ *pulumi.OutputState }

func (GetRuleTemplatesDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleTemplatesData)(nil)).Elem()
}

func (o GetRuleTemplatesDataArrayOutput) ToGetRuleTemplatesDataArrayOutput() GetRuleTemplatesDataArrayOutput {
	return o
}

func (o GetRuleTemplatesDataArrayOutput) ToGetRuleTemplatesDataArrayOutputWithContext(ctx context.Context) GetRuleTemplatesDataArrayOutput {
	return o
}

func (o GetRuleTemplatesDataArrayOutput) Index(i pulumi.IntInput) GetRuleTemplatesDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleTemplatesData {
		return vs[0].([]GetRuleTemplatesData)[vs[1].(int)]
	}).(GetRuleTemplatesDataOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineAlarmRuleDtoInput)(nil)).Elem(), BaselineAlarmRuleDtoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineAlarmRuleDtoPtrInput)(nil)).Elem(), BaselineAlarmRuleDtoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineBaselineCreateAlarmRuleRequestInput)(nil)).Elem(), BaselineBaselineCreateAlarmRuleRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineBaselineCreateAlarmRuleRequestPtrInput)(nil)).Elem(), BaselineBaselineCreateAlarmRuleRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselinePromiseTaskInput)(nil)).Elem(), BaselinePromiseTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselinePromiseTaskArrayInput)(nil)).Elem(), BaselinePromiseTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleCompareRuleInput)(nil)).Elem(), DqRuleCompareRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleCompareRulePtrInput)(nil)).Elem(), DqRuleCompareRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleCompareRuleItemInput)(nil)).Elem(), DqRuleCompareRuleItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleCompareRuleItemArrayInput)(nil)).Elem(), DqRuleCompareRuleItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleCompareRuleItemValueListInput)(nil)).Elem(), DqRuleCompareRuleItemValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleCompareRuleItemValueListArrayInput)(nil)).Elem(), DqRuleCompareRuleItemValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigInput)(nil)).Elem(), DqRuleFieldConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigPtrInput)(nil)).Elem(), DqRuleFieldConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigTableConfigInput)(nil)).Elem(), DqRuleFieldConfigTableConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigTableConfigArrayInput)(nil)).Elem(), DqRuleFieldConfigTableConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigTableConfigFieldConfigInput)(nil)).Elem(), DqRuleFieldConfigTableConfigFieldConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigTableConfigFieldConfigArrayInput)(nil)).Elem(), DqRuleFieldConfigTableConfigFieldConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigWhereConfigInput)(nil)).Elem(), DqRuleFieldConfigWhereConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DqRuleFieldConfigWhereConfigArrayInput)(nil)).Elem(), DqRuleFieldConfigWhereConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionResourceListInput)(nil)).Elem(), FunctionResourceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionResourceListArrayInput)(nil)).Elem(), FunctionResourceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoPtrInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoConfigInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoConfigArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExecuteContextInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoExecuteContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExecuteContextArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoExecuteContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExtConfigInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoExtConfigArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingExtConfigInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingExtConfigArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSchemaMappingInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingSchemaMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingSchemaMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchemaInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingSourceSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingSourceSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrInput)(nil)).Elem(), IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoPtrInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoConfigInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoConfigArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExecuteContextInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoExecuteContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExecuteContextArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoExecuteContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExtConfigInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoExtConfigArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingExtConfigInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSchemaMappingInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchemaInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeConfigInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeConfigArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeExtConfigInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchemaInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchemaArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayInput)(nil)).Elem(), IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoPtrInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoConfigInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoConfigArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoExtConfigInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoExtConfigArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingPtrInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingExtConfigInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingExtConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingExtConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchemaInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchemaArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchemaPropertyInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoSchemaPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationTaskNodeNodeInfoSchemaPropertyArrayInput)(nil)).Elem(), IntegrationTaskNodeNodeInfoSchemaPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceListFilterInput)(nil)).Elem(), GetDataSourceListFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceListFilterArrayInput)(nil)).Elem(), GetDataSourceListFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceListOrderFieldInput)(nil)).Elem(), GetDataSourceListOrderFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceListOrderFieldArrayInput)(nil)).Elem(), GetDataSourceListOrderFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceListRowInput)(nil)).Elem(), GetDataSourceListRowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceListRowArrayInput)(nil)).Elem(), GetDataSourceListRowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceWithoutInfoDataInput)(nil)).Elem(), GetDataSourceWithoutInfoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceWithoutInfoDataArrayInput)(nil)).Elem(), GetDataSourceWithoutInfoDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceWithoutInfoFilterInput)(nil)).Elem(), GetDataSourceWithoutInfoFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceWithoutInfoFilterArrayInput)(nil)).Elem(), GetDataSourceWithoutInfoFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceWithoutInfoOrderFieldInput)(nil)).Elem(), GetDataSourceWithoutInfoOrderFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceWithoutInfoOrderFieldArrayInput)(nil)).Elem(), GetDataSourceWithoutInfoOrderFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleTemplatesDataInput)(nil)).Elem(), GetRuleTemplatesDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleTemplatesDataArrayInput)(nil)).Elem(), GetRuleTemplatesDataArray{})
	pulumi.RegisterOutputType(BaselineAlarmRuleDtoOutput{})
	pulumi.RegisterOutputType(BaselineAlarmRuleDtoPtrOutput{})
	pulumi.RegisterOutputType(BaselineBaselineCreateAlarmRuleRequestOutput{})
	pulumi.RegisterOutputType(BaselineBaselineCreateAlarmRuleRequestPtrOutput{})
	pulumi.RegisterOutputType(BaselinePromiseTaskOutput{})
	pulumi.RegisterOutputType(BaselinePromiseTaskArrayOutput{})
	pulumi.RegisterOutputType(DqRuleCompareRuleOutput{})
	pulumi.RegisterOutputType(DqRuleCompareRulePtrOutput{})
	pulumi.RegisterOutputType(DqRuleCompareRuleItemOutput{})
	pulumi.RegisterOutputType(DqRuleCompareRuleItemArrayOutput{})
	pulumi.RegisterOutputType(DqRuleCompareRuleItemValueListOutput{})
	pulumi.RegisterOutputType(DqRuleCompareRuleItemValueListArrayOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigPtrOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigTableConfigOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigTableConfigArrayOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigTableConfigFieldConfigOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigTableConfigFieldConfigArrayOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigWhereConfigOutput{})
	pulumi.RegisterOutputType(DqRuleFieldConfigWhereConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionResourceListOutput{})
	pulumi.RegisterOutputType(FunctionResourceListArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoPtrOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoConfigOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoExecuteContextOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoExecuteContextArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingSchemaMappingOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingSchemaMappingArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingSourceSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingSourceSchemaArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoMappingSourceSchemaPropertyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityOutput{})
	pulumi.RegisterOutputType(IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoConfigOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoExecuteContextOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoExecuteContextArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingSchemaMappingOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingSchemaMappingArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoMappingSourceSchemaPropertyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeConfigOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSchemaMappingArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeNodeMappingSourceSchemaPropertyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeSchemaArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyOutput{})
	pulumi.RegisterOutputType(IntegrationRealtimeTaskTaskInfoNodeSchemaPropertyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoPtrOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoConfigOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingPtrOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingExtConfigOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingExtConfigArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingSchemaMappingArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoNodeMappingSourceSchemaPropertyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoSchemaArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoSchemaPropertyOutput{})
	pulumi.RegisterOutputType(IntegrationTaskNodeNodeInfoSchemaPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceListFilterOutput{})
	pulumi.RegisterOutputType(GetDataSourceListFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceListOrderFieldOutput{})
	pulumi.RegisterOutputType(GetDataSourceListOrderFieldArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceListRowOutput{})
	pulumi.RegisterOutputType(GetDataSourceListRowArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceWithoutInfoDataOutput{})
	pulumi.RegisterOutputType(GetDataSourceWithoutInfoDataArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceWithoutInfoFilterOutput{})
	pulumi.RegisterOutputType(GetDataSourceWithoutInfoFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceWithoutInfoOrderFieldOutput{})
	pulumi.RegisterOutputType(GetDataSourceWithoutInfoOrderFieldArrayOutput{})
	pulumi.RegisterOutputType(GetRuleTemplatesDataOutput{})
	pulumi.RegisterOutputType(GetRuleTemplatesDataArrayOutput{})
}
