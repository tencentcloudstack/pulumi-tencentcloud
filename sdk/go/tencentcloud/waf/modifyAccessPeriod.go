// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a waf modifyAccessPeriod
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewModifyAccessPeriod(ctx, "example", &Waf.ModifyAccessPeriodArgs{
//				Period:  pulumi.Int(30),
//				TopicId: pulumi.String("1ae37c76-df99-4e2b-998c-20f39eba6226"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ModifyAccessPeriod struct {
	pulumi.CustomResourceState

	// Access log retention period, range is [1, 180].
	Period pulumi.IntOutput `pulumi:"period"`
	// Log topic, new version does not need to be uploaded.
	TopicId pulumi.StringOutput `pulumi:"topicId"`
}

// NewModifyAccessPeriod registers a new resource with the given unique name, arguments, and options.
func NewModifyAccessPeriod(ctx *pulumi.Context,
	name string, args *ModifyAccessPeriodArgs, opts ...pulumi.ResourceOption) (*ModifyAccessPeriod, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Period == nil {
		return nil, errors.New("invalid value for required argument 'Period'")
	}
	if args.TopicId == nil {
		return nil, errors.New("invalid value for required argument 'TopicId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ModifyAccessPeriod
	err := ctx.RegisterResource("tencentcloud:Waf/modifyAccessPeriod:ModifyAccessPeriod", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModifyAccessPeriod gets an existing ModifyAccessPeriod resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModifyAccessPeriod(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModifyAccessPeriodState, opts ...pulumi.ResourceOption) (*ModifyAccessPeriod, error) {
	var resource ModifyAccessPeriod
	err := ctx.ReadResource("tencentcloud:Waf/modifyAccessPeriod:ModifyAccessPeriod", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ModifyAccessPeriod resources.
type modifyAccessPeriodState struct {
	// Access log retention period, range is [1, 180].
	Period *int `pulumi:"period"`
	// Log topic, new version does not need to be uploaded.
	TopicId *string `pulumi:"topicId"`
}

type ModifyAccessPeriodState struct {
	// Access log retention period, range is [1, 180].
	Period pulumi.IntPtrInput
	// Log topic, new version does not need to be uploaded.
	TopicId pulumi.StringPtrInput
}

func (ModifyAccessPeriodState) ElementType() reflect.Type {
	return reflect.TypeOf((*modifyAccessPeriodState)(nil)).Elem()
}

type modifyAccessPeriodArgs struct {
	// Access log retention period, range is [1, 180].
	Period int `pulumi:"period"`
	// Log topic, new version does not need to be uploaded.
	TopicId string `pulumi:"topicId"`
}

// The set of arguments for constructing a ModifyAccessPeriod resource.
type ModifyAccessPeriodArgs struct {
	// Access log retention period, range is [1, 180].
	Period pulumi.IntInput
	// Log topic, new version does not need to be uploaded.
	TopicId pulumi.StringInput
}

func (ModifyAccessPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modifyAccessPeriodArgs)(nil)).Elem()
}

type ModifyAccessPeriodInput interface {
	pulumi.Input

	ToModifyAccessPeriodOutput() ModifyAccessPeriodOutput
	ToModifyAccessPeriodOutputWithContext(ctx context.Context) ModifyAccessPeriodOutput
}

func (*ModifyAccessPeriod) ElementType() reflect.Type {
	return reflect.TypeOf((**ModifyAccessPeriod)(nil)).Elem()
}

func (i *ModifyAccessPeriod) ToModifyAccessPeriodOutput() ModifyAccessPeriodOutput {
	return i.ToModifyAccessPeriodOutputWithContext(context.Background())
}

func (i *ModifyAccessPeriod) ToModifyAccessPeriodOutputWithContext(ctx context.Context) ModifyAccessPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyAccessPeriodOutput)
}

// ModifyAccessPeriodArrayInput is an input type that accepts ModifyAccessPeriodArray and ModifyAccessPeriodArrayOutput values.
// You can construct a concrete instance of `ModifyAccessPeriodArrayInput` via:
//
//	ModifyAccessPeriodArray{ ModifyAccessPeriodArgs{...} }
type ModifyAccessPeriodArrayInput interface {
	pulumi.Input

	ToModifyAccessPeriodArrayOutput() ModifyAccessPeriodArrayOutput
	ToModifyAccessPeriodArrayOutputWithContext(context.Context) ModifyAccessPeriodArrayOutput
}

type ModifyAccessPeriodArray []ModifyAccessPeriodInput

func (ModifyAccessPeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModifyAccessPeriod)(nil)).Elem()
}

func (i ModifyAccessPeriodArray) ToModifyAccessPeriodArrayOutput() ModifyAccessPeriodArrayOutput {
	return i.ToModifyAccessPeriodArrayOutputWithContext(context.Background())
}

func (i ModifyAccessPeriodArray) ToModifyAccessPeriodArrayOutputWithContext(ctx context.Context) ModifyAccessPeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyAccessPeriodArrayOutput)
}

// ModifyAccessPeriodMapInput is an input type that accepts ModifyAccessPeriodMap and ModifyAccessPeriodMapOutput values.
// You can construct a concrete instance of `ModifyAccessPeriodMapInput` via:
//
//	ModifyAccessPeriodMap{ "key": ModifyAccessPeriodArgs{...} }
type ModifyAccessPeriodMapInput interface {
	pulumi.Input

	ToModifyAccessPeriodMapOutput() ModifyAccessPeriodMapOutput
	ToModifyAccessPeriodMapOutputWithContext(context.Context) ModifyAccessPeriodMapOutput
}

type ModifyAccessPeriodMap map[string]ModifyAccessPeriodInput

func (ModifyAccessPeriodMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModifyAccessPeriod)(nil)).Elem()
}

func (i ModifyAccessPeriodMap) ToModifyAccessPeriodMapOutput() ModifyAccessPeriodMapOutput {
	return i.ToModifyAccessPeriodMapOutputWithContext(context.Background())
}

func (i ModifyAccessPeriodMap) ToModifyAccessPeriodMapOutputWithContext(ctx context.Context) ModifyAccessPeriodMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyAccessPeriodMapOutput)
}

type ModifyAccessPeriodOutput struct{ *pulumi.OutputState }

func (ModifyAccessPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModifyAccessPeriod)(nil)).Elem()
}

func (o ModifyAccessPeriodOutput) ToModifyAccessPeriodOutput() ModifyAccessPeriodOutput {
	return o
}

func (o ModifyAccessPeriodOutput) ToModifyAccessPeriodOutputWithContext(ctx context.Context) ModifyAccessPeriodOutput {
	return o
}

// Access log retention period, range is [1, 180].
func (o ModifyAccessPeriodOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *ModifyAccessPeriod) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// Log topic, new version does not need to be uploaded.
func (o ModifyAccessPeriodOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v *ModifyAccessPeriod) pulumi.StringOutput { return v.TopicId }).(pulumi.StringOutput)
}

type ModifyAccessPeriodArrayOutput struct{ *pulumi.OutputState }

func (ModifyAccessPeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModifyAccessPeriod)(nil)).Elem()
}

func (o ModifyAccessPeriodArrayOutput) ToModifyAccessPeriodArrayOutput() ModifyAccessPeriodArrayOutput {
	return o
}

func (o ModifyAccessPeriodArrayOutput) ToModifyAccessPeriodArrayOutputWithContext(ctx context.Context) ModifyAccessPeriodArrayOutput {
	return o
}

func (o ModifyAccessPeriodArrayOutput) Index(i pulumi.IntInput) ModifyAccessPeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ModifyAccessPeriod {
		return vs[0].([]*ModifyAccessPeriod)[vs[1].(int)]
	}).(ModifyAccessPeriodOutput)
}

type ModifyAccessPeriodMapOutput struct{ *pulumi.OutputState }

func (ModifyAccessPeriodMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModifyAccessPeriod)(nil)).Elem()
}

func (o ModifyAccessPeriodMapOutput) ToModifyAccessPeriodMapOutput() ModifyAccessPeriodMapOutput {
	return o
}

func (o ModifyAccessPeriodMapOutput) ToModifyAccessPeriodMapOutputWithContext(ctx context.Context) ModifyAccessPeriodMapOutput {
	return o
}

func (o ModifyAccessPeriodMapOutput) MapIndex(k pulumi.StringInput) ModifyAccessPeriodOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ModifyAccessPeriod {
		return vs[0].(map[string]*ModifyAccessPeriod)[vs[1].(string)]
	}).(ModifyAccessPeriodOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyAccessPeriodInput)(nil)).Elem(), &ModifyAccessPeriod{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyAccessPeriodArrayInput)(nil)).Elem(), ModifyAccessPeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyAccessPeriodMapInput)(nil)).Elem(), ModifyAccessPeriodMap{})
	pulumi.RegisterOutputType(ModifyAccessPeriodOutput{})
	pulumi.RegisterOutputType(ModifyAccessPeriodArrayOutput{})
	pulumi.RegisterOutputType(ModifyAccessPeriodMapOutput{})
}
