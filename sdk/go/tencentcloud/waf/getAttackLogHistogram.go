// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of waf attackLogHistogram
//
// ## Example Usage
// ### Obtain the specified domain name log information
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.GetAttackLogHistogram(ctx, &waf.GetAttackLogHistogramArgs{
//				Domain:      "domain.com",
//				EndTime:     "2023-09-29 00:00:00",
//				QueryString: "method:GET",
//				StartTime:   "2023-09-01 00:00:00",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Obtain all domain name log information
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.GetAttackLogHistogram(ctx, &waf.GetAttackLogHistogramArgs{
//				Domain:      "all",
//				EndTime:     "2023-09-29 00:00:00",
//				QueryString: "method:GET",
//				StartTime:   "2023-09-01 00:00:00",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAttackLogHistogram(ctx *pulumi.Context, args *GetAttackLogHistogramArgs, opts ...pulumi.InvokeOption) (*GetAttackLogHistogramResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAttackLogHistogramResult
	err := ctx.Invoke("tencentcloud:Waf/getAttackLogHistogram:getAttackLogHistogram", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttackLogHistogram.
type GetAttackLogHistogramArgs struct {
	// Domain for query, all domain use all.
	Domain string `pulumi:"domain"`
	// End time.
	EndTime string `pulumi:"endTime"`
	// Lucene grammar.
	QueryString string `pulumi:"queryString"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Begin time.
	StartTime string `pulumi:"startTime"`
}

// A collection of values returned by getAttackLogHistogram.
type GetAttackLogHistogramResult struct {
	// The statistics detail.
	Datas   []GetAttackLogHistogramData `pulumi:"datas"`
	Domain  string                      `pulumi:"domain"`
	EndTime string                      `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Period.
	Period           int     `pulumi:"period"`
	QueryString      string  `pulumi:"queryString"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        string  `pulumi:"startTime"`
	// total count.
	TotalCount int `pulumi:"totalCount"`
}

func GetAttackLogHistogramOutput(ctx *pulumi.Context, args GetAttackLogHistogramOutputArgs, opts ...pulumi.InvokeOption) GetAttackLogHistogramResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAttackLogHistogramResult, error) {
			args := v.(GetAttackLogHistogramArgs)
			r, err := GetAttackLogHistogram(ctx, &args, opts...)
			var s GetAttackLogHistogramResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAttackLogHistogramResultOutput)
}

// A collection of arguments for invoking getAttackLogHistogram.
type GetAttackLogHistogramOutputArgs struct {
	// Domain for query, all domain use all.
	Domain pulumi.StringInput `pulumi:"domain"`
	// End time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Lucene grammar.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Begin time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetAttackLogHistogramOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogHistogramArgs)(nil)).Elem()
}

// A collection of values returned by getAttackLogHistogram.
type GetAttackLogHistogramResultOutput struct{ *pulumi.OutputState }

func (GetAttackLogHistogramResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogHistogramResult)(nil)).Elem()
}

func (o GetAttackLogHistogramResultOutput) ToGetAttackLogHistogramResultOutput() GetAttackLogHistogramResultOutput {
	return o
}

func (o GetAttackLogHistogramResultOutput) ToGetAttackLogHistogramResultOutputWithContext(ctx context.Context) GetAttackLogHistogramResultOutput {
	return o
}

// The statistics detail.
func (o GetAttackLogHistogramResultOutput) Datas() GetAttackLogHistogramDataArrayOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) []GetAttackLogHistogramData { return v.Datas }).(GetAttackLogHistogramDataArrayOutput)
}

func (o GetAttackLogHistogramResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetAttackLogHistogramResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAttackLogHistogramResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) string { return v.Id }).(pulumi.StringOutput)
}

// Period.
func (o GetAttackLogHistogramResultOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) int { return v.Period }).(pulumi.IntOutput)
}

func (o GetAttackLogHistogramResultOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) string { return v.QueryString }).(pulumi.StringOutput)
}

func (o GetAttackLogHistogramResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAttackLogHistogramResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// total count.
func (o GetAttackLogHistogramResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogHistogramResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAttackLogHistogramResultOutput{})
}
