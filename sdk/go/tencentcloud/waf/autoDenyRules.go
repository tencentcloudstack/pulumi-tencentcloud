// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a waf autoDenyRules
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewAutoDenyRules(ctx, "example", &Waf.AutoDenyRulesArgs{
//				AttackThreshold:   pulumi.Int(20),
//				DenyTimeThreshold: pulumi.Int(5),
//				Domain:            pulumi.String("demo.waf.com"),
//				TimeThreshold:     pulumi.Int(12),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// waf auto_deny_rules can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Waf/autoDenyRules:AutoDenyRules example demo.waf.com
//
// ```
type AutoDenyRules struct {
	pulumi.CustomResourceState

	// The threshold number of attacks that triggers IP autodeny, ranging from 2 to 100 times.
	AttackThreshold pulumi.IntOutput `pulumi:"attackThreshold"`
	// The IP autodeny time after triggering the IP autodeny, ranging from 5 to 360 minutes.
	DenyTimeThreshold pulumi.IntOutput `pulumi:"denyTimeThreshold"`
	// Domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// IP autodeny statistical time, ranging from 1-60 minutes.
	TimeThreshold pulumi.IntOutput `pulumi:"timeThreshold"`
}

// NewAutoDenyRules registers a new resource with the given unique name, arguments, and options.
func NewAutoDenyRules(ctx *pulumi.Context,
	name string, args *AutoDenyRulesArgs, opts ...pulumi.ResourceOption) (*AutoDenyRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttackThreshold == nil {
		return nil, errors.New("invalid value for required argument 'AttackThreshold'")
	}
	if args.DenyTimeThreshold == nil {
		return nil, errors.New("invalid value for required argument 'DenyTimeThreshold'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.TimeThreshold == nil {
		return nil, errors.New("invalid value for required argument 'TimeThreshold'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AutoDenyRules
	err := ctx.RegisterResource("tencentcloud:Waf/autoDenyRules:AutoDenyRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoDenyRules gets an existing AutoDenyRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoDenyRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoDenyRulesState, opts ...pulumi.ResourceOption) (*AutoDenyRules, error) {
	var resource AutoDenyRules
	err := ctx.ReadResource("tencentcloud:Waf/autoDenyRules:AutoDenyRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoDenyRules resources.
type autoDenyRulesState struct {
	// The threshold number of attacks that triggers IP autodeny, ranging from 2 to 100 times.
	AttackThreshold *int `pulumi:"attackThreshold"`
	// The IP autodeny time after triggering the IP autodeny, ranging from 5 to 360 minutes.
	DenyTimeThreshold *int `pulumi:"denyTimeThreshold"`
	// Domain.
	Domain *string `pulumi:"domain"`
	// IP autodeny statistical time, ranging from 1-60 minutes.
	TimeThreshold *int `pulumi:"timeThreshold"`
}

type AutoDenyRulesState struct {
	// The threshold number of attacks that triggers IP autodeny, ranging from 2 to 100 times.
	AttackThreshold pulumi.IntPtrInput
	// The IP autodeny time after triggering the IP autodeny, ranging from 5 to 360 minutes.
	DenyTimeThreshold pulumi.IntPtrInput
	// Domain.
	Domain pulumi.StringPtrInput
	// IP autodeny statistical time, ranging from 1-60 minutes.
	TimeThreshold pulumi.IntPtrInput
}

func (AutoDenyRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoDenyRulesState)(nil)).Elem()
}

type autoDenyRulesArgs struct {
	// The threshold number of attacks that triggers IP autodeny, ranging from 2 to 100 times.
	AttackThreshold int `pulumi:"attackThreshold"`
	// The IP autodeny time after triggering the IP autodeny, ranging from 5 to 360 minutes.
	DenyTimeThreshold int `pulumi:"denyTimeThreshold"`
	// Domain.
	Domain string `pulumi:"domain"`
	// IP autodeny statistical time, ranging from 1-60 minutes.
	TimeThreshold int `pulumi:"timeThreshold"`
}

// The set of arguments for constructing a AutoDenyRules resource.
type AutoDenyRulesArgs struct {
	// The threshold number of attacks that triggers IP autodeny, ranging from 2 to 100 times.
	AttackThreshold pulumi.IntInput
	// The IP autodeny time after triggering the IP autodeny, ranging from 5 to 360 minutes.
	DenyTimeThreshold pulumi.IntInput
	// Domain.
	Domain pulumi.StringInput
	// IP autodeny statistical time, ranging from 1-60 minutes.
	TimeThreshold pulumi.IntInput
}

func (AutoDenyRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoDenyRulesArgs)(nil)).Elem()
}

type AutoDenyRulesInput interface {
	pulumi.Input

	ToAutoDenyRulesOutput() AutoDenyRulesOutput
	ToAutoDenyRulesOutputWithContext(ctx context.Context) AutoDenyRulesOutput
}

func (*AutoDenyRules) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoDenyRules)(nil)).Elem()
}

func (i *AutoDenyRules) ToAutoDenyRulesOutput() AutoDenyRulesOutput {
	return i.ToAutoDenyRulesOutputWithContext(context.Background())
}

func (i *AutoDenyRules) ToAutoDenyRulesOutputWithContext(ctx context.Context) AutoDenyRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoDenyRulesOutput)
}

// AutoDenyRulesArrayInput is an input type that accepts AutoDenyRulesArray and AutoDenyRulesArrayOutput values.
// You can construct a concrete instance of `AutoDenyRulesArrayInput` via:
//
//	AutoDenyRulesArray{ AutoDenyRulesArgs{...} }
type AutoDenyRulesArrayInput interface {
	pulumi.Input

	ToAutoDenyRulesArrayOutput() AutoDenyRulesArrayOutput
	ToAutoDenyRulesArrayOutputWithContext(context.Context) AutoDenyRulesArrayOutput
}

type AutoDenyRulesArray []AutoDenyRulesInput

func (AutoDenyRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoDenyRules)(nil)).Elem()
}

func (i AutoDenyRulesArray) ToAutoDenyRulesArrayOutput() AutoDenyRulesArrayOutput {
	return i.ToAutoDenyRulesArrayOutputWithContext(context.Background())
}

func (i AutoDenyRulesArray) ToAutoDenyRulesArrayOutputWithContext(ctx context.Context) AutoDenyRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoDenyRulesArrayOutput)
}

// AutoDenyRulesMapInput is an input type that accepts AutoDenyRulesMap and AutoDenyRulesMapOutput values.
// You can construct a concrete instance of `AutoDenyRulesMapInput` via:
//
//	AutoDenyRulesMap{ "key": AutoDenyRulesArgs{...} }
type AutoDenyRulesMapInput interface {
	pulumi.Input

	ToAutoDenyRulesMapOutput() AutoDenyRulesMapOutput
	ToAutoDenyRulesMapOutputWithContext(context.Context) AutoDenyRulesMapOutput
}

type AutoDenyRulesMap map[string]AutoDenyRulesInput

func (AutoDenyRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoDenyRules)(nil)).Elem()
}

func (i AutoDenyRulesMap) ToAutoDenyRulesMapOutput() AutoDenyRulesMapOutput {
	return i.ToAutoDenyRulesMapOutputWithContext(context.Background())
}

func (i AutoDenyRulesMap) ToAutoDenyRulesMapOutputWithContext(ctx context.Context) AutoDenyRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoDenyRulesMapOutput)
}

type AutoDenyRulesOutput struct{ *pulumi.OutputState }

func (AutoDenyRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoDenyRules)(nil)).Elem()
}

func (o AutoDenyRulesOutput) ToAutoDenyRulesOutput() AutoDenyRulesOutput {
	return o
}

func (o AutoDenyRulesOutput) ToAutoDenyRulesOutputWithContext(ctx context.Context) AutoDenyRulesOutput {
	return o
}

// The threshold number of attacks that triggers IP autodeny, ranging from 2 to 100 times.
func (o AutoDenyRulesOutput) AttackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoDenyRules) pulumi.IntOutput { return v.AttackThreshold }).(pulumi.IntOutput)
}

// The IP autodeny time after triggering the IP autodeny, ranging from 5 to 360 minutes.
func (o AutoDenyRulesOutput) DenyTimeThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoDenyRules) pulumi.IntOutput { return v.DenyTimeThreshold }).(pulumi.IntOutput)
}

// Domain.
func (o AutoDenyRulesOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDenyRules) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// IP autodeny statistical time, ranging from 1-60 minutes.
func (o AutoDenyRulesOutput) TimeThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoDenyRules) pulumi.IntOutput { return v.TimeThreshold }).(pulumi.IntOutput)
}

type AutoDenyRulesArrayOutput struct{ *pulumi.OutputState }

func (AutoDenyRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoDenyRules)(nil)).Elem()
}

func (o AutoDenyRulesArrayOutput) ToAutoDenyRulesArrayOutput() AutoDenyRulesArrayOutput {
	return o
}

func (o AutoDenyRulesArrayOutput) ToAutoDenyRulesArrayOutputWithContext(ctx context.Context) AutoDenyRulesArrayOutput {
	return o
}

func (o AutoDenyRulesArrayOutput) Index(i pulumi.IntInput) AutoDenyRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoDenyRules {
		return vs[0].([]*AutoDenyRules)[vs[1].(int)]
	}).(AutoDenyRulesOutput)
}

type AutoDenyRulesMapOutput struct{ *pulumi.OutputState }

func (AutoDenyRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoDenyRules)(nil)).Elem()
}

func (o AutoDenyRulesMapOutput) ToAutoDenyRulesMapOutput() AutoDenyRulesMapOutput {
	return o
}

func (o AutoDenyRulesMapOutput) ToAutoDenyRulesMapOutputWithContext(ctx context.Context) AutoDenyRulesMapOutput {
	return o
}

func (o AutoDenyRulesMapOutput) MapIndex(k pulumi.StringInput) AutoDenyRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoDenyRules {
		return vs[0].(map[string]*AutoDenyRules)[vs[1].(string)]
	}).(AutoDenyRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoDenyRulesInput)(nil)).Elem(), &AutoDenyRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoDenyRulesArrayInput)(nil)).Elem(), AutoDenyRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoDenyRulesMapInput)(nil)).Elem(), AutoDenyRulesMap{})
	pulumi.RegisterOutputType(AutoDenyRulesOutput{})
	pulumi.RegisterOutputType(AutoDenyRulesArrayOutput{})
	pulumi.RegisterOutputType(AutoDenyRulesMapOutput{})
}
