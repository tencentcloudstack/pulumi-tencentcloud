// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a waf customRule
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewCustomRule(ctx, "example", &Waf.CustomRuleArgs{
//				ActionType: pulumi.String("1"),
//				Domain:     pulumi.String("test.com"),
//				ExpireTime: pulumi.String("0"),
//				Redirect:   pulumi.String("/"),
//				SortId:     pulumi.String("50"),
//				Status:     pulumi.String("1"),
//				Strategies: waf.CustomRuleStrategyArray{
//					&waf.CustomRuleStrategyArgs{
//						Arg:         pulumi.String(""),
//						CompareFunc: pulumi.String("ipmatch"),
//						Content:     pulumi.String("2.2.2.2"),
//						Field:       pulumi.String("IP"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// waf custom_rule can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Waf/customRule:CustomRule example test.com#1100310609
//
// ```
type CustomRule struct {
	pulumi.CustomResourceState

	// Action type, 1 represents blocking, 2 represents captcha, 3 represents observation, and 4 represents redirection.
	ActionType pulumi.StringOutput `pulumi:"actionType"`
	// Domain name that needs to add policy.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Expiration time, measured in seconds, such as 1677254399, which means the expiration time is 2023-02-24 23:59:59 0 means never expires.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Rule Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// If the action is a redirect, it represents the redirect address; Other situations can be left blank.
	Redirect pulumi.StringPtrOutput `pulumi:"redirect"`
	// rule ID.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// Priority, value range 0-100.
	SortId pulumi.StringOutput `pulumi:"sortId"`
	// The status of the switch, 1 is on, 0 is off, default 1.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Strategies detail.
	Strategies CustomRuleStrategyArrayOutput `pulumi:"strategies"`
}

// NewCustomRule registers a new resource with the given unique name, arguments, and options.
func NewCustomRule(ctx *pulumi.Context,
	name string, args *CustomRuleArgs, opts ...pulumi.ResourceOption) (*CustomRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ActionType == nil {
		return nil, errors.New("invalid value for required argument 'ActionType'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.ExpireTime == nil {
		return nil, errors.New("invalid value for required argument 'ExpireTime'")
	}
	if args.SortId == nil {
		return nil, errors.New("invalid value for required argument 'SortId'")
	}
	if args.Strategies == nil {
		return nil, errors.New("invalid value for required argument 'Strategies'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CustomRule
	err := ctx.RegisterResource("tencentcloud:Waf/customRule:CustomRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomRule gets an existing CustomRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomRuleState, opts ...pulumi.ResourceOption) (*CustomRule, error) {
	var resource CustomRule
	err := ctx.ReadResource("tencentcloud:Waf/customRule:CustomRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomRule resources.
type customRuleState struct {
	// Action type, 1 represents blocking, 2 represents captcha, 3 represents observation, and 4 represents redirection.
	ActionType *string `pulumi:"actionType"`
	// Domain name that needs to add policy.
	Domain *string `pulumi:"domain"`
	// Expiration time, measured in seconds, such as 1677254399, which means the expiration time is 2023-02-24 23:59:59 0 means never expires.
	ExpireTime *string `pulumi:"expireTime"`
	// Rule Name.
	Name *string `pulumi:"name"`
	// If the action is a redirect, it represents the redirect address; Other situations can be left blank.
	Redirect *string `pulumi:"redirect"`
	// rule ID.
	RuleId *string `pulumi:"ruleId"`
	// Priority, value range 0-100.
	SortId *string `pulumi:"sortId"`
	// The status of the switch, 1 is on, 0 is off, default 1.
	Status *string `pulumi:"status"`
	// Strategies detail.
	Strategies []CustomRuleStrategy `pulumi:"strategies"`
}

type CustomRuleState struct {
	// Action type, 1 represents blocking, 2 represents captcha, 3 represents observation, and 4 represents redirection.
	ActionType pulumi.StringPtrInput
	// Domain name that needs to add policy.
	Domain pulumi.StringPtrInput
	// Expiration time, measured in seconds, such as 1677254399, which means the expiration time is 2023-02-24 23:59:59 0 means never expires.
	ExpireTime pulumi.StringPtrInput
	// Rule Name.
	Name pulumi.StringPtrInput
	// If the action is a redirect, it represents the redirect address; Other situations can be left blank.
	Redirect pulumi.StringPtrInput
	// rule ID.
	RuleId pulumi.StringPtrInput
	// Priority, value range 0-100.
	SortId pulumi.StringPtrInput
	// The status of the switch, 1 is on, 0 is off, default 1.
	Status pulumi.StringPtrInput
	// Strategies detail.
	Strategies CustomRuleStrategyArrayInput
}

func (CustomRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*customRuleState)(nil)).Elem()
}

type customRuleArgs struct {
	// Action type, 1 represents blocking, 2 represents captcha, 3 represents observation, and 4 represents redirection.
	ActionType string `pulumi:"actionType"`
	// Domain name that needs to add policy.
	Domain string `pulumi:"domain"`
	// Expiration time, measured in seconds, such as 1677254399, which means the expiration time is 2023-02-24 23:59:59 0 means never expires.
	ExpireTime string `pulumi:"expireTime"`
	// Rule Name.
	Name *string `pulumi:"name"`
	// If the action is a redirect, it represents the redirect address; Other situations can be left blank.
	Redirect *string `pulumi:"redirect"`
	// Priority, value range 0-100.
	SortId string `pulumi:"sortId"`
	// The status of the switch, 1 is on, 0 is off, default 1.
	Status *string `pulumi:"status"`
	// Strategies detail.
	Strategies []CustomRuleStrategy `pulumi:"strategies"`
}

// The set of arguments for constructing a CustomRule resource.
type CustomRuleArgs struct {
	// Action type, 1 represents blocking, 2 represents captcha, 3 represents observation, and 4 represents redirection.
	ActionType pulumi.StringInput
	// Domain name that needs to add policy.
	Domain pulumi.StringInput
	// Expiration time, measured in seconds, such as 1677254399, which means the expiration time is 2023-02-24 23:59:59 0 means never expires.
	ExpireTime pulumi.StringInput
	// Rule Name.
	Name pulumi.StringPtrInput
	// If the action is a redirect, it represents the redirect address; Other situations can be left blank.
	Redirect pulumi.StringPtrInput
	// Priority, value range 0-100.
	SortId pulumi.StringInput
	// The status of the switch, 1 is on, 0 is off, default 1.
	Status pulumi.StringPtrInput
	// Strategies detail.
	Strategies CustomRuleStrategyArrayInput
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customRuleArgs)(nil)).Elem()
}

type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput
}

func (*CustomRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRule)(nil)).Elem()
}

func (i *CustomRule) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i *CustomRule) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//	CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// CustomRuleMapInput is an input type that accepts CustomRuleMap and CustomRuleMapOutput values.
// You can construct a concrete instance of `CustomRuleMapInput` via:
//
//	CustomRuleMap{ "key": CustomRuleArgs{...} }
type CustomRuleMapInput interface {
	pulumi.Input

	ToCustomRuleMapOutput() CustomRuleMapOutput
	ToCustomRuleMapOutputWithContext(context.Context) CustomRuleMapOutput
}

type CustomRuleMap map[string]CustomRuleInput

func (CustomRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomRule)(nil)).Elem()
}

func (i CustomRuleMap) ToCustomRuleMapOutput() CustomRuleMapOutput {
	return i.ToCustomRuleMapOutputWithContext(context.Background())
}

func (i CustomRuleMap) ToCustomRuleMapOutputWithContext(ctx context.Context) CustomRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleMapOutput)
}

type CustomRuleOutput struct{ *pulumi.OutputState }

func (CustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRule)(nil)).Elem()
}

func (o CustomRuleOutput) ToCustomRuleOutput() CustomRuleOutput {
	return o
}

func (o CustomRuleOutput) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return o
}

// Action type, 1 represents blocking, 2 represents captcha, 3 represents observation, and 4 represents redirection.
func (o CustomRuleOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringOutput { return v.ActionType }).(pulumi.StringOutput)
}

// Domain name that needs to add policy.
func (o CustomRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Expiration time, measured in seconds, such as 1677254399, which means the expiration time is 2023-02-24 23:59:59 0 means never expires.
func (o CustomRuleOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Rule Name.
func (o CustomRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// If the action is a redirect, it represents the redirect address; Other situations can be left blank.
func (o CustomRuleOutput) Redirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringPtrOutput { return v.Redirect }).(pulumi.StringPtrOutput)
}

// rule ID.
func (o CustomRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

// Priority, value range 0-100.
func (o CustomRuleOutput) SortId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringOutput { return v.SortId }).(pulumi.StringOutput)
}

// The status of the switch, 1 is on, 0 is off, default 1.
func (o CustomRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRule) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// Strategies detail.
func (o CustomRuleOutput) Strategies() CustomRuleStrategyArrayOutput {
	return o.ApplyT(func(v *CustomRule) CustomRuleStrategyArrayOutput { return v.Strategies }).(CustomRuleStrategyArrayOutput)
}

type CustomRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomRule)(nil)).Elem()
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) Index(i pulumi.IntInput) CustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomRule {
		return vs[0].([]*CustomRule)[vs[1].(int)]
	}).(CustomRuleOutput)
}

type CustomRuleMapOutput struct{ *pulumi.OutputState }

func (CustomRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomRule)(nil)).Elem()
}

func (o CustomRuleMapOutput) ToCustomRuleMapOutput() CustomRuleMapOutput {
	return o
}

func (o CustomRuleMapOutput) ToCustomRuleMapOutputWithContext(ctx context.Context) CustomRuleMapOutput {
	return o
}

func (o CustomRuleMapOutput) MapIndex(k pulumi.StringInput) CustomRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomRule {
		return vs[0].(map[string]*CustomRule)[vs[1].(string)]
	}).(CustomRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRuleInput)(nil)).Elem(), &CustomRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRuleArrayInput)(nil)).Elem(), CustomRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRuleMapInput)(nil)).Elem(), CustomRuleMap{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleMapOutput{})
}
