// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a waf ccAutoStatus
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewCcAutoStatus(ctx, "example", &Waf.CcAutoStatusArgs{
//				Domain:  pulumi.String("www.demo.com"),
//				Edition: pulumi.String("sparta-waf"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// waf cc_auto_status can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Waf/ccAutoStatus:CcAutoStatus example www.demo.com#sparta-waf
//
// ```
type CcAutoStatus struct {
	pulumi.CustomResourceState

	// Domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
	Edition pulumi.StringOutput `pulumi:"edition"`
	// cc auto status, 1 means open, 0 means close.
	Status pulumi.IntOutput `pulumi:"status"`
}

// NewCcAutoStatus registers a new resource with the given unique name, arguments, and options.
func NewCcAutoStatus(ctx *pulumi.Context,
	name string, args *CcAutoStatusArgs, opts ...pulumi.ResourceOption) (*CcAutoStatus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Edition == nil {
		return nil, errors.New("invalid value for required argument 'Edition'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CcAutoStatus
	err := ctx.RegisterResource("tencentcloud:Waf/ccAutoStatus:CcAutoStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCcAutoStatus gets an existing CcAutoStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCcAutoStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CcAutoStatusState, opts ...pulumi.ResourceOption) (*CcAutoStatus, error) {
	var resource CcAutoStatus
	err := ctx.ReadResource("tencentcloud:Waf/ccAutoStatus:CcAutoStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CcAutoStatus resources.
type ccAutoStatusState struct {
	// Domain.
	Domain *string `pulumi:"domain"`
	// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
	Edition *string `pulumi:"edition"`
	// cc auto status, 1 means open, 0 means close.
	Status *int `pulumi:"status"`
}

type CcAutoStatusState struct {
	// Domain.
	Domain pulumi.StringPtrInput
	// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
	Edition pulumi.StringPtrInput
	// cc auto status, 1 means open, 0 means close.
	Status pulumi.IntPtrInput
}

func (CcAutoStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*ccAutoStatusState)(nil)).Elem()
}

type ccAutoStatusArgs struct {
	// Domain.
	Domain string `pulumi:"domain"`
	// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
	Edition string `pulumi:"edition"`
}

// The set of arguments for constructing a CcAutoStatus resource.
type CcAutoStatusArgs struct {
	// Domain.
	Domain pulumi.StringInput
	// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
	Edition pulumi.StringInput
}

func (CcAutoStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ccAutoStatusArgs)(nil)).Elem()
}

type CcAutoStatusInput interface {
	pulumi.Input

	ToCcAutoStatusOutput() CcAutoStatusOutput
	ToCcAutoStatusOutputWithContext(ctx context.Context) CcAutoStatusOutput
}

func (*CcAutoStatus) ElementType() reflect.Type {
	return reflect.TypeOf((**CcAutoStatus)(nil)).Elem()
}

func (i *CcAutoStatus) ToCcAutoStatusOutput() CcAutoStatusOutput {
	return i.ToCcAutoStatusOutputWithContext(context.Background())
}

func (i *CcAutoStatus) ToCcAutoStatusOutputWithContext(ctx context.Context) CcAutoStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcAutoStatusOutput)
}

// CcAutoStatusArrayInput is an input type that accepts CcAutoStatusArray and CcAutoStatusArrayOutput values.
// You can construct a concrete instance of `CcAutoStatusArrayInput` via:
//
//	CcAutoStatusArray{ CcAutoStatusArgs{...} }
type CcAutoStatusArrayInput interface {
	pulumi.Input

	ToCcAutoStatusArrayOutput() CcAutoStatusArrayOutput
	ToCcAutoStatusArrayOutputWithContext(context.Context) CcAutoStatusArrayOutput
}

type CcAutoStatusArray []CcAutoStatusInput

func (CcAutoStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CcAutoStatus)(nil)).Elem()
}

func (i CcAutoStatusArray) ToCcAutoStatusArrayOutput() CcAutoStatusArrayOutput {
	return i.ToCcAutoStatusArrayOutputWithContext(context.Background())
}

func (i CcAutoStatusArray) ToCcAutoStatusArrayOutputWithContext(ctx context.Context) CcAutoStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcAutoStatusArrayOutput)
}

// CcAutoStatusMapInput is an input type that accepts CcAutoStatusMap and CcAutoStatusMapOutput values.
// You can construct a concrete instance of `CcAutoStatusMapInput` via:
//
//	CcAutoStatusMap{ "key": CcAutoStatusArgs{...} }
type CcAutoStatusMapInput interface {
	pulumi.Input

	ToCcAutoStatusMapOutput() CcAutoStatusMapOutput
	ToCcAutoStatusMapOutputWithContext(context.Context) CcAutoStatusMapOutput
}

type CcAutoStatusMap map[string]CcAutoStatusInput

func (CcAutoStatusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CcAutoStatus)(nil)).Elem()
}

func (i CcAutoStatusMap) ToCcAutoStatusMapOutput() CcAutoStatusMapOutput {
	return i.ToCcAutoStatusMapOutputWithContext(context.Background())
}

func (i CcAutoStatusMap) ToCcAutoStatusMapOutputWithContext(ctx context.Context) CcAutoStatusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcAutoStatusMapOutput)
}

type CcAutoStatusOutput struct{ *pulumi.OutputState }

func (CcAutoStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CcAutoStatus)(nil)).Elem()
}

func (o CcAutoStatusOutput) ToCcAutoStatusOutput() CcAutoStatusOutput {
	return o
}

func (o CcAutoStatusOutput) ToCcAutoStatusOutputWithContext(ctx context.Context) CcAutoStatusOutput {
	return o
}

// Domain.
func (o CcAutoStatusOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *CcAutoStatus) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
func (o CcAutoStatusOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v *CcAutoStatus) pulumi.StringOutput { return v.Edition }).(pulumi.StringOutput)
}

// cc auto status, 1 means open, 0 means close.
func (o CcAutoStatusOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *CcAutoStatus) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

type CcAutoStatusArrayOutput struct{ *pulumi.OutputState }

func (CcAutoStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CcAutoStatus)(nil)).Elem()
}

func (o CcAutoStatusArrayOutput) ToCcAutoStatusArrayOutput() CcAutoStatusArrayOutput {
	return o
}

func (o CcAutoStatusArrayOutput) ToCcAutoStatusArrayOutputWithContext(ctx context.Context) CcAutoStatusArrayOutput {
	return o
}

func (o CcAutoStatusArrayOutput) Index(i pulumi.IntInput) CcAutoStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CcAutoStatus {
		return vs[0].([]*CcAutoStatus)[vs[1].(int)]
	}).(CcAutoStatusOutput)
}

type CcAutoStatusMapOutput struct{ *pulumi.OutputState }

func (CcAutoStatusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CcAutoStatus)(nil)).Elem()
}

func (o CcAutoStatusMapOutput) ToCcAutoStatusMapOutput() CcAutoStatusMapOutput {
	return o
}

func (o CcAutoStatusMapOutput) ToCcAutoStatusMapOutputWithContext(ctx context.Context) CcAutoStatusMapOutput {
	return o
}

func (o CcAutoStatusMapOutput) MapIndex(k pulumi.StringInput) CcAutoStatusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CcAutoStatus {
		return vs[0].(map[string]*CcAutoStatus)[vs[1].(string)]
	}).(CcAutoStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CcAutoStatusInput)(nil)).Elem(), &CcAutoStatus{})
	pulumi.RegisterInputType(reflect.TypeOf((*CcAutoStatusArrayInput)(nil)).Elem(), CcAutoStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CcAutoStatusMapInput)(nil)).Elem(), CcAutoStatusMap{})
	pulumi.RegisterOutputType(CcAutoStatusOutput{})
	pulumi.RegisterOutputType(CcAutoStatusArrayOutput{})
	pulumi.RegisterOutputType(CcAutoStatusMapOutput{})
}
