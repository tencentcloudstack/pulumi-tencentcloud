// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a waf ip access control v2
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewIpAccessControlV2(ctx, "example", &Waf.IpAccessControlV2Args{
//				ActionType: pulumi.Int(40),
//				Domain:     pulumi.String("example.com"),
//				InstanceId: pulumi.String("waf_2kxtlbky11bbcr4b"),
//				IpLists: pulumi.StringArray{
//					pulumi.String("10.0.0.10"),
//					pulumi.String("172.0.0.16"),
//					pulumi.String("192.168.0.30"),
//				},
//				JobDateTime: &waf.IpAccessControlV2JobDateTimeArgs{
//					TimeTZone: pulumi.String("UTC+8"),
//					Timeds: waf.IpAccessControlV2JobDateTimeTimedArray{
//						&waf.IpAccessControlV2JobDateTimeTimedArgs{
//							EndDateTime:   pulumi.Int(0),
//							StartDateTime: pulumi.Int(0),
//						},
//					},
//				},
//				JobType: pulumi.String("TimedJob"),
//				Note:    pulumi.String("note."),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// waf ip access control v2 can be imported using the id, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2 example waf_2kxtlbky11bbcr4b#example.com#5503616778
// ```
type IpAccessControlV2 struct {
	pulumi.CustomResourceState

	// 42: blocklist; 40: allowlist.
	ActionType pulumi.IntOutput `pulumi:"actionType"`
	// Specific domain name, for example, test.qcloudwaf.com.
	// Global domain name, that is, global.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// IP parameter list.
	IpLists pulumi.StringArrayOutput `pulumi:"ipLists"`
	// Details of scheduled configuration.
	JobDateTime IpAccessControlV2JobDateTimeOutput `pulumi:"jobDateTime"`
	// Scheduled configuration type.
	JobType pulumi.StringOutput `pulumi:"jobType"`
	// Remarks.
	Note pulumi.StringPtrOutput `pulumi:"note"`
}

// NewIpAccessControlV2 registers a new resource with the given unique name, arguments, and options.
func NewIpAccessControlV2(ctx *pulumi.Context,
	name string, args *IpAccessControlV2Args, opts ...pulumi.ResourceOption) (*IpAccessControlV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ActionType == nil {
		return nil, errors.New("invalid value for required argument 'ActionType'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.IpLists == nil {
		return nil, errors.New("invalid value for required argument 'IpLists'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpAccessControlV2
	err := ctx.RegisterResource("tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpAccessControlV2 gets an existing IpAccessControlV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpAccessControlV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpAccessControlV2State, opts ...pulumi.ResourceOption) (*IpAccessControlV2, error) {
	var resource IpAccessControlV2
	err := ctx.ReadResource("tencentcloud:Waf/ipAccessControlV2:IpAccessControlV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpAccessControlV2 resources.
type ipAccessControlV2State struct {
	// 42: blocklist; 40: allowlist.
	ActionType *int `pulumi:"actionType"`
	// Specific domain name, for example, test.qcloudwaf.com.
	// Global domain name, that is, global.
	Domain *string `pulumi:"domain"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// IP parameter list.
	IpLists []string `pulumi:"ipLists"`
	// Details of scheduled configuration.
	JobDateTime *IpAccessControlV2JobDateTime `pulumi:"jobDateTime"`
	// Scheduled configuration type.
	JobType *string `pulumi:"jobType"`
	// Remarks.
	Note *string `pulumi:"note"`
}

type IpAccessControlV2State struct {
	// 42: blocklist; 40: allowlist.
	ActionType pulumi.IntPtrInput
	// Specific domain name, for example, test.qcloudwaf.com.
	// Global domain name, that is, global.
	Domain pulumi.StringPtrInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// IP parameter list.
	IpLists pulumi.StringArrayInput
	// Details of scheduled configuration.
	JobDateTime IpAccessControlV2JobDateTimePtrInput
	// Scheduled configuration type.
	JobType pulumi.StringPtrInput
	// Remarks.
	Note pulumi.StringPtrInput
}

func (IpAccessControlV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAccessControlV2State)(nil)).Elem()
}

type ipAccessControlV2Args struct {
	// 42: blocklist; 40: allowlist.
	ActionType int `pulumi:"actionType"`
	// Specific domain name, for example, test.qcloudwaf.com.
	// Global domain name, that is, global.
	Domain string `pulumi:"domain"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// IP parameter list.
	IpLists []string `pulumi:"ipLists"`
	// Details of scheduled configuration.
	JobDateTime *IpAccessControlV2JobDateTime `pulumi:"jobDateTime"`
	// Scheduled configuration type.
	JobType *string `pulumi:"jobType"`
	// Remarks.
	Note *string `pulumi:"note"`
}

// The set of arguments for constructing a IpAccessControlV2 resource.
type IpAccessControlV2Args struct {
	// 42: blocklist; 40: allowlist.
	ActionType pulumi.IntInput
	// Specific domain name, for example, test.qcloudwaf.com.
	// Global domain name, that is, global.
	Domain pulumi.StringInput
	// Instance ID.
	InstanceId pulumi.StringInput
	// IP parameter list.
	IpLists pulumi.StringArrayInput
	// Details of scheduled configuration.
	JobDateTime IpAccessControlV2JobDateTimePtrInput
	// Scheduled configuration type.
	JobType pulumi.StringPtrInput
	// Remarks.
	Note pulumi.StringPtrInput
}

func (IpAccessControlV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAccessControlV2Args)(nil)).Elem()
}

type IpAccessControlV2Input interface {
	pulumi.Input

	ToIpAccessControlV2Output() IpAccessControlV2Output
	ToIpAccessControlV2OutputWithContext(ctx context.Context) IpAccessControlV2Output
}

func (*IpAccessControlV2) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAccessControlV2)(nil)).Elem()
}

func (i *IpAccessControlV2) ToIpAccessControlV2Output() IpAccessControlV2Output {
	return i.ToIpAccessControlV2OutputWithContext(context.Background())
}

func (i *IpAccessControlV2) ToIpAccessControlV2OutputWithContext(ctx context.Context) IpAccessControlV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessControlV2Output)
}

// IpAccessControlV2ArrayInput is an input type that accepts IpAccessControlV2Array and IpAccessControlV2ArrayOutput values.
// You can construct a concrete instance of `IpAccessControlV2ArrayInput` via:
//
//	IpAccessControlV2Array{ IpAccessControlV2Args{...} }
type IpAccessControlV2ArrayInput interface {
	pulumi.Input

	ToIpAccessControlV2ArrayOutput() IpAccessControlV2ArrayOutput
	ToIpAccessControlV2ArrayOutputWithContext(context.Context) IpAccessControlV2ArrayOutput
}

type IpAccessControlV2Array []IpAccessControlV2Input

func (IpAccessControlV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpAccessControlV2)(nil)).Elem()
}

func (i IpAccessControlV2Array) ToIpAccessControlV2ArrayOutput() IpAccessControlV2ArrayOutput {
	return i.ToIpAccessControlV2ArrayOutputWithContext(context.Background())
}

func (i IpAccessControlV2Array) ToIpAccessControlV2ArrayOutputWithContext(ctx context.Context) IpAccessControlV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessControlV2ArrayOutput)
}

// IpAccessControlV2MapInput is an input type that accepts IpAccessControlV2Map and IpAccessControlV2MapOutput values.
// You can construct a concrete instance of `IpAccessControlV2MapInput` via:
//
//	IpAccessControlV2Map{ "key": IpAccessControlV2Args{...} }
type IpAccessControlV2MapInput interface {
	pulumi.Input

	ToIpAccessControlV2MapOutput() IpAccessControlV2MapOutput
	ToIpAccessControlV2MapOutputWithContext(context.Context) IpAccessControlV2MapOutput
}

type IpAccessControlV2Map map[string]IpAccessControlV2Input

func (IpAccessControlV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpAccessControlV2)(nil)).Elem()
}

func (i IpAccessControlV2Map) ToIpAccessControlV2MapOutput() IpAccessControlV2MapOutput {
	return i.ToIpAccessControlV2MapOutputWithContext(context.Background())
}

func (i IpAccessControlV2Map) ToIpAccessControlV2MapOutputWithContext(ctx context.Context) IpAccessControlV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessControlV2MapOutput)
}

type IpAccessControlV2Output struct{ *pulumi.OutputState }

func (IpAccessControlV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAccessControlV2)(nil)).Elem()
}

func (o IpAccessControlV2Output) ToIpAccessControlV2Output() IpAccessControlV2Output {
	return o
}

func (o IpAccessControlV2Output) ToIpAccessControlV2OutputWithContext(ctx context.Context) IpAccessControlV2Output {
	return o
}

// 42: blocklist; 40: allowlist.
func (o IpAccessControlV2Output) ActionType() pulumi.IntOutput {
	return o.ApplyT(func(v *IpAccessControlV2) pulumi.IntOutput { return v.ActionType }).(pulumi.IntOutput)
}

// Specific domain name, for example, test.qcloudwaf.com.
// Global domain name, that is, global.
func (o IpAccessControlV2Output) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessControlV2) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Instance ID.
func (o IpAccessControlV2Output) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessControlV2) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// IP parameter list.
func (o IpAccessControlV2Output) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpAccessControlV2) pulumi.StringArrayOutput { return v.IpLists }).(pulumi.StringArrayOutput)
}

// Details of scheduled configuration.
func (o IpAccessControlV2Output) JobDateTime() IpAccessControlV2JobDateTimeOutput {
	return o.ApplyT(func(v *IpAccessControlV2) IpAccessControlV2JobDateTimeOutput { return v.JobDateTime }).(IpAccessControlV2JobDateTimeOutput)
}

// Scheduled configuration type.
func (o IpAccessControlV2Output) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessControlV2) pulumi.StringOutput { return v.JobType }).(pulumi.StringOutput)
}

// Remarks.
func (o IpAccessControlV2Output) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpAccessControlV2) pulumi.StringPtrOutput { return v.Note }).(pulumi.StringPtrOutput)
}

type IpAccessControlV2ArrayOutput struct{ *pulumi.OutputState }

func (IpAccessControlV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpAccessControlV2)(nil)).Elem()
}

func (o IpAccessControlV2ArrayOutput) ToIpAccessControlV2ArrayOutput() IpAccessControlV2ArrayOutput {
	return o
}

func (o IpAccessControlV2ArrayOutput) ToIpAccessControlV2ArrayOutputWithContext(ctx context.Context) IpAccessControlV2ArrayOutput {
	return o
}

func (o IpAccessControlV2ArrayOutput) Index(i pulumi.IntInput) IpAccessControlV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpAccessControlV2 {
		return vs[0].([]*IpAccessControlV2)[vs[1].(int)]
	}).(IpAccessControlV2Output)
}

type IpAccessControlV2MapOutput struct{ *pulumi.OutputState }

func (IpAccessControlV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpAccessControlV2)(nil)).Elem()
}

func (o IpAccessControlV2MapOutput) ToIpAccessControlV2MapOutput() IpAccessControlV2MapOutput {
	return o
}

func (o IpAccessControlV2MapOutput) ToIpAccessControlV2MapOutputWithContext(ctx context.Context) IpAccessControlV2MapOutput {
	return o
}

func (o IpAccessControlV2MapOutput) MapIndex(k pulumi.StringInput) IpAccessControlV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpAccessControlV2 {
		return vs[0].(map[string]*IpAccessControlV2)[vs[1].(string)]
	}).(IpAccessControlV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessControlV2Input)(nil)).Elem(), &IpAccessControlV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessControlV2ArrayInput)(nil)).Elem(), IpAccessControlV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessControlV2MapInput)(nil)).Elem(), IpAccessControlV2Map{})
	pulumi.RegisterOutputType(IpAccessControlV2Output{})
	pulumi.RegisterOutputType(IpAccessControlV2ArrayOutput{})
	pulumi.RegisterOutputType(IpAccessControlV2MapOutput{})
}
