// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of waf instanceQpsLimit
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.GetInstanceQpsLimit(ctx, &waf.GetInstanceQpsLimitArgs{
//				InstanceId: "waf_2kxtlbky00b3b4qz",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstanceQpsLimit(ctx *pulumi.Context, args *GetInstanceQpsLimitArgs, opts ...pulumi.InvokeOption) (*GetInstanceQpsLimitResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetInstanceQpsLimitResult
	err := ctx.Invoke("tencentcloud:Waf/getInstanceQpsLimit:getInstanceQpsLimit", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceQpsLimit.
type GetInstanceQpsLimitArgs struct {
	// Unique ID of Instance.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Instance type.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getInstanceQpsLimit.
type GetInstanceQpsLimitResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Qps info.
	QpsDatas         []GetInstanceQpsLimitQpsData `pulumi:"qpsDatas"`
	ResultOutputFile *string                      `pulumi:"resultOutputFile"`
	Type             *string                      `pulumi:"type"`
}

func GetInstanceQpsLimitOutput(ctx *pulumi.Context, args GetInstanceQpsLimitOutputArgs, opts ...pulumi.InvokeOption) GetInstanceQpsLimitResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceQpsLimitResult, error) {
			args := v.(GetInstanceQpsLimitArgs)
			r, err := GetInstanceQpsLimit(ctx, &args, opts...)
			var s GetInstanceQpsLimitResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceQpsLimitResultOutput)
}

// A collection of arguments for invoking getInstanceQpsLimit.
type GetInstanceQpsLimitOutputArgs struct {
	// Unique ID of Instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Instance type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetInstanceQpsLimitOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceQpsLimitArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceQpsLimit.
type GetInstanceQpsLimitResultOutput struct{ *pulumi.OutputState }

func (GetInstanceQpsLimitResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceQpsLimitResult)(nil)).Elem()
}

func (o GetInstanceQpsLimitResultOutput) ToGetInstanceQpsLimitResultOutput() GetInstanceQpsLimitResultOutput {
	return o
}

func (o GetInstanceQpsLimitResultOutput) ToGetInstanceQpsLimitResultOutputWithContext(ctx context.Context) GetInstanceQpsLimitResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceQpsLimitResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceQpsLimitResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Qps info.
func (o GetInstanceQpsLimitResultOutput) QpsDatas() GetInstanceQpsLimitQpsDataArrayOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitResult) []GetInstanceQpsLimitQpsData { return v.QpsDatas }).(GetInstanceQpsLimitQpsDataArrayOutput)
}

func (o GetInstanceQpsLimitResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetInstanceQpsLimitResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceQpsLimitResultOutput{})
}
