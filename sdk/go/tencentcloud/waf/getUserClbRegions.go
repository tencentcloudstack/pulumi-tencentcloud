// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of waf userClbRegions
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.GetUserClbRegions(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserClbRegions(ctx *pulumi.Context, args *GetUserClbRegionsArgs, opts ...pulumi.InvokeOption) (*GetUserClbRegionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetUserClbRegionsResult
	err := ctx.Invoke("tencentcloud:Waf/getUserClbRegions:getUserClbRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserClbRegions.
type GetUserClbRegionsArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getUserClbRegions.
type GetUserClbRegionsResult struct {
	// Region list(ap-xxx format).
	Datas []string `pulumi:"datas"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Detail info for region.
	RichDatas []GetUserClbRegionsRichData `pulumi:"richDatas"`
}

func GetUserClbRegionsOutput(ctx *pulumi.Context, args GetUserClbRegionsOutputArgs, opts ...pulumi.InvokeOption) GetUserClbRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserClbRegionsResult, error) {
			args := v.(GetUserClbRegionsArgs)
			r, err := GetUserClbRegions(ctx, &args, opts...)
			var s GetUserClbRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserClbRegionsResultOutput)
}

// A collection of arguments for invoking getUserClbRegions.
type GetUserClbRegionsOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetUserClbRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserClbRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getUserClbRegions.
type GetUserClbRegionsResultOutput struct{ *pulumi.OutputState }

func (GetUserClbRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserClbRegionsResult)(nil)).Elem()
}

func (o GetUserClbRegionsResultOutput) ToGetUserClbRegionsResultOutput() GetUserClbRegionsResultOutput {
	return o
}

func (o GetUserClbRegionsResultOutput) ToGetUserClbRegionsResultOutputWithContext(ctx context.Context) GetUserClbRegionsResultOutput {
	return o
}

// Region list(ap-xxx format).
func (o GetUserClbRegionsResultOutput) Datas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserClbRegionsResult) []string { return v.Datas }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserClbRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserClbRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserClbRegionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserClbRegionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Detail info for region.
func (o GetUserClbRegionsResultOutput) RichDatas() GetUserClbRegionsRichDataArrayOutput {
	return o.ApplyT(func(v GetUserClbRegionsResult) []GetUserClbRegionsRichData { return v.RichDatas }).(GetUserClbRegionsRichDataArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserClbRegionsResultOutput{})
}
