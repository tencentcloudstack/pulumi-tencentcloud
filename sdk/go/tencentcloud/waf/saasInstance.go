// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a waf saas instance
//
// > **NOTE:** Region only supports `ap-guangzhou` and `ap-seoul`.
//
// ## Example Usage
// ### Create a basic waf premium saas instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewSaasInstance(ctx, "example", &Waf.SaasInstanceArgs{
//				GoodsCategory: pulumi.String("premium_saas"),
//				InstanceName:  pulumi.String("tf-example-saas-waf"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a complete waf ultimateSaas instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewSaasInstance(ctx, "example", &Waf.SaasInstanceArgs{
//				ApiSecurity:   pulumi.Int(1),
//				AutoRenewFlag: pulumi.Int(1),
//				BotManagement: pulumi.Int(1),
//				ElasticMode:   pulumi.Int(1),
//				GoodsCategory: pulumi.String("ultimate_saas"),
//				InstanceName:  pulumi.String("tf-example-saas-waf"),
//				RealRegion:    pulumi.String("gz"),
//				TimeSpan:      pulumi.Int(1),
//				TimeUnit:      pulumi.String("m"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Set waf ultimateSaas instance qps limit
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waf.NewSaasInstance(ctx, "example", &Waf.SaasInstanceArgs{
//				ApiSecurity:   pulumi.Int(1),
//				AutoRenewFlag: pulumi.Int(1),
//				BotManagement: pulumi.Int(1),
//				ElasticMode:   pulumi.Int(1),
//				GoodsCategory: pulumi.String("ultimate_saas"),
//				InstanceName:  pulumi.String("tf-example-saas-waf"),
//				QpsLimit:      pulumi.Int(200000),
//				RealRegion:    pulumi.String("gz"),
//				TimeSpan:      pulumi.Int(1),
//				TimeUnit:      pulumi.String("m"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SaasInstance struct {
	pulumi.CustomResourceState

	// Whether to purchase API Security, 1: yes, 0: no. Default is 0.
	ApiSecurity pulumi.IntPtrOutput `pulumi:"apiSecurity"`
	// Auto renew flag, 1: enable, 0: disable.
	AutoRenewFlag pulumi.IntPtrOutput `pulumi:"autoRenewFlag"`
	// waf instance start time.
	BeginTime pulumi.StringOutput `pulumi:"beginTime"`
	// Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
	BotManagement pulumi.IntPtrOutput `pulumi:"botManagement"`
	// waf instance edition, clb or saas.
	Edition pulumi.StringOutput `pulumi:"edition"`
	// Is elastic billing enabled, 1: enable, 0: disable.
	ElasticMode pulumi.IntPtrOutput `pulumi:"elasticMode"`
	// Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
	GoodsCategory pulumi.StringOutput `pulumi:"goodsCategory"`
	// waf instance id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Waf instance name.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// QPS Limit, Minimum setting 10000. Only `elasticMode` is 1, can be set.
	QpsLimit pulumi.IntOutput `pulumi:"qpsLimit"`
	// region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
	RealRegion pulumi.StringPtrOutput `pulumi:"realRegion"`
	// waf instance status.
	Status pulumi.IntOutput `pulumi:"status"`
	// Time interval.
	TimeSpan pulumi.IntPtrOutput `pulumi:"timeSpan"`
	// Time unit, support d, m, y. d: day, m: month, y: year.
	TimeUnit pulumi.StringPtrOutput `pulumi:"timeUnit"`
	// waf instance valid time.
	ValidTime pulumi.StringOutput `pulumi:"validTime"`
}

// NewSaasInstance registers a new resource with the given unique name, arguments, and options.
func NewSaasInstance(ctx *pulumi.Context,
	name string, args *SaasInstanceArgs, opts ...pulumi.ResourceOption) (*SaasInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GoodsCategory == nil {
		return nil, errors.New("invalid value for required argument 'GoodsCategory'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SaasInstance
	err := ctx.RegisterResource("tencentcloud:Waf/saasInstance:SaasInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSaasInstance gets an existing SaasInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSaasInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SaasInstanceState, opts ...pulumi.ResourceOption) (*SaasInstance, error) {
	var resource SaasInstance
	err := ctx.ReadResource("tencentcloud:Waf/saasInstance:SaasInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SaasInstance resources.
type saasInstanceState struct {
	// Whether to purchase API Security, 1: yes, 0: no. Default is 0.
	ApiSecurity *int `pulumi:"apiSecurity"`
	// Auto renew flag, 1: enable, 0: disable.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// waf instance start time.
	BeginTime *string `pulumi:"beginTime"`
	// Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
	BotManagement *int `pulumi:"botManagement"`
	// waf instance edition, clb or saas.
	Edition *string `pulumi:"edition"`
	// Is elastic billing enabled, 1: enable, 0: disable.
	ElasticMode *int `pulumi:"elasticMode"`
	// Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
	GoodsCategory *string `pulumi:"goodsCategory"`
	// waf instance id.
	InstanceId *string `pulumi:"instanceId"`
	// Waf instance name.
	InstanceName *string `pulumi:"instanceName"`
	// QPS Limit, Minimum setting 10000. Only `elasticMode` is 1, can be set.
	QpsLimit *int `pulumi:"qpsLimit"`
	// region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
	RealRegion *string `pulumi:"realRegion"`
	// waf instance status.
	Status *int `pulumi:"status"`
	// Time interval.
	TimeSpan *int `pulumi:"timeSpan"`
	// Time unit, support d, m, y. d: day, m: month, y: year.
	TimeUnit *string `pulumi:"timeUnit"`
	// waf instance valid time.
	ValidTime *string `pulumi:"validTime"`
}

type SaasInstanceState struct {
	// Whether to purchase API Security, 1: yes, 0: no. Default is 0.
	ApiSecurity pulumi.IntPtrInput
	// Auto renew flag, 1: enable, 0: disable.
	AutoRenewFlag pulumi.IntPtrInput
	// waf instance start time.
	BeginTime pulumi.StringPtrInput
	// Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
	BotManagement pulumi.IntPtrInput
	// waf instance edition, clb or saas.
	Edition pulumi.StringPtrInput
	// Is elastic billing enabled, 1: enable, 0: disable.
	ElasticMode pulumi.IntPtrInput
	// Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
	GoodsCategory pulumi.StringPtrInput
	// waf instance id.
	InstanceId pulumi.StringPtrInput
	// Waf instance name.
	InstanceName pulumi.StringPtrInput
	// QPS Limit, Minimum setting 10000. Only `elasticMode` is 1, can be set.
	QpsLimit pulumi.IntPtrInput
	// region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
	RealRegion pulumi.StringPtrInput
	// waf instance status.
	Status pulumi.IntPtrInput
	// Time interval.
	TimeSpan pulumi.IntPtrInput
	// Time unit, support d, m, y. d: day, m: month, y: year.
	TimeUnit pulumi.StringPtrInput
	// waf instance valid time.
	ValidTime pulumi.StringPtrInput
}

func (SaasInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*saasInstanceState)(nil)).Elem()
}

type saasInstanceArgs struct {
	// Whether to purchase API Security, 1: yes, 0: no. Default is 0.
	ApiSecurity *int `pulumi:"apiSecurity"`
	// Auto renew flag, 1: enable, 0: disable.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
	BotManagement *int `pulumi:"botManagement"`
	// Is elastic billing enabled, 1: enable, 0: disable.
	ElasticMode *int `pulumi:"elasticMode"`
	// Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
	GoodsCategory string `pulumi:"goodsCategory"`
	// Waf instance name.
	InstanceName *string `pulumi:"instanceName"`
	// QPS Limit, Minimum setting 10000. Only `elasticMode` is 1, can be set.
	QpsLimit *int `pulumi:"qpsLimit"`
	// region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
	RealRegion *string `pulumi:"realRegion"`
	// Time interval.
	TimeSpan *int `pulumi:"timeSpan"`
	// Time unit, support d, m, y. d: day, m: month, y: year.
	TimeUnit *string `pulumi:"timeUnit"`
}

// The set of arguments for constructing a SaasInstance resource.
type SaasInstanceArgs struct {
	// Whether to purchase API Security, 1: yes, 0: no. Default is 0.
	ApiSecurity pulumi.IntPtrInput
	// Auto renew flag, 1: enable, 0: disable.
	AutoRenewFlag pulumi.IntPtrInput
	// Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
	BotManagement pulumi.IntPtrInput
	// Is elastic billing enabled, 1: enable, 0: disable.
	ElasticMode pulumi.IntPtrInput
	// Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
	GoodsCategory pulumi.StringInput
	// Waf instance name.
	InstanceName pulumi.StringPtrInput
	// QPS Limit, Minimum setting 10000. Only `elasticMode` is 1, can be set.
	QpsLimit pulumi.IntPtrInput
	// region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
	RealRegion pulumi.StringPtrInput
	// Time interval.
	TimeSpan pulumi.IntPtrInput
	// Time unit, support d, m, y. d: day, m: month, y: year.
	TimeUnit pulumi.StringPtrInput
}

func (SaasInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*saasInstanceArgs)(nil)).Elem()
}

type SaasInstanceInput interface {
	pulumi.Input

	ToSaasInstanceOutput() SaasInstanceOutput
	ToSaasInstanceOutputWithContext(ctx context.Context) SaasInstanceOutput
}

func (*SaasInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**SaasInstance)(nil)).Elem()
}

func (i *SaasInstance) ToSaasInstanceOutput() SaasInstanceOutput {
	return i.ToSaasInstanceOutputWithContext(context.Background())
}

func (i *SaasInstance) ToSaasInstanceOutputWithContext(ctx context.Context) SaasInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaasInstanceOutput)
}

// SaasInstanceArrayInput is an input type that accepts SaasInstanceArray and SaasInstanceArrayOutput values.
// You can construct a concrete instance of `SaasInstanceArrayInput` via:
//
//	SaasInstanceArray{ SaasInstanceArgs{...} }
type SaasInstanceArrayInput interface {
	pulumi.Input

	ToSaasInstanceArrayOutput() SaasInstanceArrayOutput
	ToSaasInstanceArrayOutputWithContext(context.Context) SaasInstanceArrayOutput
}

type SaasInstanceArray []SaasInstanceInput

func (SaasInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SaasInstance)(nil)).Elem()
}

func (i SaasInstanceArray) ToSaasInstanceArrayOutput() SaasInstanceArrayOutput {
	return i.ToSaasInstanceArrayOutputWithContext(context.Background())
}

func (i SaasInstanceArray) ToSaasInstanceArrayOutputWithContext(ctx context.Context) SaasInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaasInstanceArrayOutput)
}

// SaasInstanceMapInput is an input type that accepts SaasInstanceMap and SaasInstanceMapOutput values.
// You can construct a concrete instance of `SaasInstanceMapInput` via:
//
//	SaasInstanceMap{ "key": SaasInstanceArgs{...} }
type SaasInstanceMapInput interface {
	pulumi.Input

	ToSaasInstanceMapOutput() SaasInstanceMapOutput
	ToSaasInstanceMapOutputWithContext(context.Context) SaasInstanceMapOutput
}

type SaasInstanceMap map[string]SaasInstanceInput

func (SaasInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SaasInstance)(nil)).Elem()
}

func (i SaasInstanceMap) ToSaasInstanceMapOutput() SaasInstanceMapOutput {
	return i.ToSaasInstanceMapOutputWithContext(context.Background())
}

func (i SaasInstanceMap) ToSaasInstanceMapOutputWithContext(ctx context.Context) SaasInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaasInstanceMapOutput)
}

type SaasInstanceOutput struct{ *pulumi.OutputState }

func (SaasInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SaasInstance)(nil)).Elem()
}

func (o SaasInstanceOutput) ToSaasInstanceOutput() SaasInstanceOutput {
	return o
}

func (o SaasInstanceOutput) ToSaasInstanceOutputWithContext(ctx context.Context) SaasInstanceOutput {
	return o
}

// Whether to purchase API Security, 1: yes, 0: no. Default is 0.
func (o SaasInstanceOutput) ApiSecurity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntPtrOutput { return v.ApiSecurity }).(pulumi.IntPtrOutput)
}

// Auto renew flag, 1: enable, 0: disable.
func (o SaasInstanceOutput) AutoRenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntPtrOutput { return v.AutoRenewFlag }).(pulumi.IntPtrOutput)
}

// waf instance start time.
func (o SaasInstanceOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringOutput { return v.BeginTime }).(pulumi.StringOutput)
}

// Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
func (o SaasInstanceOutput) BotManagement() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntPtrOutput { return v.BotManagement }).(pulumi.IntPtrOutput)
}

// waf instance edition, clb or saas.
func (o SaasInstanceOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringOutput { return v.Edition }).(pulumi.StringOutput)
}

// Is elastic billing enabled, 1: enable, 0: disable.
func (o SaasInstanceOutput) ElasticMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntPtrOutput { return v.ElasticMode }).(pulumi.IntPtrOutput)
}

// Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
func (o SaasInstanceOutput) GoodsCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringOutput { return v.GoodsCategory }).(pulumi.StringOutput)
}

// waf instance id.
func (o SaasInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Waf instance name.
func (o SaasInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// QPS Limit, Minimum setting 10000. Only `elasticMode` is 1, can be set.
func (o SaasInstanceOutput) QpsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntOutput { return v.QpsLimit }).(pulumi.IntOutput)
}

// region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
func (o SaasInstanceOutput) RealRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringPtrOutput { return v.RealRegion }).(pulumi.StringPtrOutput)
}

// waf instance status.
func (o SaasInstanceOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

// Time interval.
func (o SaasInstanceOutput) TimeSpan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.IntPtrOutput { return v.TimeSpan }).(pulumi.IntPtrOutput)
}

// Time unit, support d, m, y. d: day, m: month, y: year.
func (o SaasInstanceOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringPtrOutput { return v.TimeUnit }).(pulumi.StringPtrOutput)
}

// waf instance valid time.
func (o SaasInstanceOutput) ValidTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SaasInstance) pulumi.StringOutput { return v.ValidTime }).(pulumi.StringOutput)
}

type SaasInstanceArrayOutput struct{ *pulumi.OutputState }

func (SaasInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SaasInstance)(nil)).Elem()
}

func (o SaasInstanceArrayOutput) ToSaasInstanceArrayOutput() SaasInstanceArrayOutput {
	return o
}

func (o SaasInstanceArrayOutput) ToSaasInstanceArrayOutputWithContext(ctx context.Context) SaasInstanceArrayOutput {
	return o
}

func (o SaasInstanceArrayOutput) Index(i pulumi.IntInput) SaasInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SaasInstance {
		return vs[0].([]*SaasInstance)[vs[1].(int)]
	}).(SaasInstanceOutput)
}

type SaasInstanceMapOutput struct{ *pulumi.OutputState }

func (SaasInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SaasInstance)(nil)).Elem()
}

func (o SaasInstanceMapOutput) ToSaasInstanceMapOutput() SaasInstanceMapOutput {
	return o
}

func (o SaasInstanceMapOutput) ToSaasInstanceMapOutputWithContext(ctx context.Context) SaasInstanceMapOutput {
	return o
}

func (o SaasInstanceMapOutput) MapIndex(k pulumi.StringInput) SaasInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SaasInstance {
		return vs[0].(map[string]*SaasInstance)[vs[1].(string)]
	}).(SaasInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SaasInstanceInput)(nil)).Elem(), &SaasInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*SaasInstanceArrayInput)(nil)).Elem(), SaasInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SaasInstanceMapInput)(nil)).Elem(), SaasInstanceMap{})
	pulumi.RegisterOutputType(SaasInstanceOutput{})
	pulumi.RegisterOutputType(SaasInstanceArrayOutput{})
	pulumi.RegisterOutputType(SaasInstanceMapOutput{})
}
