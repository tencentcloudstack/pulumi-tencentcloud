// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mps parseLiveStreamProcessNotification
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mps"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mps.GetParseLiveStreamProcessNotification(ctx, &mps.GetParseLiveStreamProcessNotificationArgs{
//				Content: "your_content",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetParseLiveStreamProcessNotification(ctx *pulumi.Context, args *GetParseLiveStreamProcessNotificationArgs, opts ...pulumi.InvokeOption) (*GetParseLiveStreamProcessNotificationResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetParseLiveStreamProcessNotificationResult
	err := ctx.Invoke("tencentcloud:Mps/getParseLiveStreamProcessNotification:getParseLiveStreamProcessNotification", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParseLiveStreamProcessNotification.
type GetParseLiveStreamProcessNotificationArgs struct {
	// Live stream event notification obtained from CMQ.
	Content string `pulumi:"content"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getParseLiveStreamProcessNotification.
type GetParseLiveStreamProcessNotificationResult struct {
	Content string `pulumi:"content"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetParseLiveStreamProcessNotificationOutput(ctx *pulumi.Context, args GetParseLiveStreamProcessNotificationOutputArgs, opts ...pulumi.InvokeOption) GetParseLiveStreamProcessNotificationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetParseLiveStreamProcessNotificationResult, error) {
			args := v.(GetParseLiveStreamProcessNotificationArgs)
			r, err := GetParseLiveStreamProcessNotification(ctx, &args, opts...)
			var s GetParseLiveStreamProcessNotificationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetParseLiveStreamProcessNotificationResultOutput)
}

// A collection of arguments for invoking getParseLiveStreamProcessNotification.
type GetParseLiveStreamProcessNotificationOutputArgs struct {
	// Live stream event notification obtained from CMQ.
	Content pulumi.StringInput `pulumi:"content"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetParseLiveStreamProcessNotificationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParseLiveStreamProcessNotificationArgs)(nil)).Elem()
}

// A collection of values returned by getParseLiveStreamProcessNotification.
type GetParseLiveStreamProcessNotificationResultOutput struct{ *pulumi.OutputState }

func (GetParseLiveStreamProcessNotificationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParseLiveStreamProcessNotificationResult)(nil)).Elem()
}

func (o GetParseLiveStreamProcessNotificationResultOutput) ToGetParseLiveStreamProcessNotificationResultOutput() GetParseLiveStreamProcessNotificationResultOutput {
	return o
}

func (o GetParseLiveStreamProcessNotificationResultOutput) ToGetParseLiveStreamProcessNotificationResultOutputWithContext(ctx context.Context) GetParseLiveStreamProcessNotificationResultOutput {
	return o
}

func (o GetParseLiveStreamProcessNotificationResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetParseLiveStreamProcessNotificationResult) string { return v.Content }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetParseLiveStreamProcessNotificationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetParseLiveStreamProcessNotificationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetParseLiveStreamProcessNotificationResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetParseLiveStreamProcessNotificationResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetParseLiveStreamProcessNotificationResultOutput{})
}
