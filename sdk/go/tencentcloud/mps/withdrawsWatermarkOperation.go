// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mps

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a mps withdrawsWatermarkOperation
//
// ## Example Usage
// ### Withdraw the watermark from COS
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mps"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleBucket, err := Cos.NewBucket(ctx, "exampleBucket", &Cos.BucketArgs{
//				Bucket: pulumi.String(fmt.Sprintf("%v%v", "tf-test-mps-wm-", local.App_id)),
//				Acl:    pulumi.String("public-read"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBucketObject, err := Cos.NewBucketObject(ctx, "exampleBucketObject", &Cos.BucketObjectArgs{
//				Bucket: exampleBucket.Bucket,
//				Key:    pulumi.String("/test-file/test.mov"),
//				Source: pulumi.String("/Users/luoyin/Downloads/file_example_MOV_480_700kB.mov"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Mps.NewWithdrawsWatermarkOperation(ctx, "operation", &Mps.WithdrawsWatermarkOperationArgs{
//				InputInfo: &mps.WithdrawsWatermarkOperationInputInfoArgs{
//					Type: pulumi.String("COS"),
//					CosInputInfo: &mps.WithdrawsWatermarkOperationInputInfoCosInputInfoArgs{
//						Bucket: exampleBucketObject.Bucket,
//						Region: pulumi.String(fmt.Sprintf("%v%v", "%", "s")),
//						Object: exampleBucketObject.Key,
//					},
//				},
//				SessionContext: pulumi.String("this is a example session context"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type WithdrawsWatermarkOperation struct {
	pulumi.CustomResourceState

	// Input information of file for metadata getting.
	InputInfo WithdrawsWatermarkOperationInputInfoOutput `pulumi:"inputInfo"`
	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field.
	SessionContext pulumi.StringPtrOutput `pulumi:"sessionContext"`
	// Event notification information of a task. If this parameter is left empty, no event notifications will be obtained.
	TaskNotifyConfig WithdrawsWatermarkOperationTaskNotifyConfigPtrOutput `pulumi:"taskNotifyConfig"`
}

// NewWithdrawsWatermarkOperation registers a new resource with the given unique name, arguments, and options.
func NewWithdrawsWatermarkOperation(ctx *pulumi.Context,
	name string, args *WithdrawsWatermarkOperationArgs, opts ...pulumi.ResourceOption) (*WithdrawsWatermarkOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputInfo == nil {
		return nil, errors.New("invalid value for required argument 'InputInfo'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource WithdrawsWatermarkOperation
	err := ctx.RegisterResource("tencentcloud:Mps/withdrawsWatermarkOperation:WithdrawsWatermarkOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWithdrawsWatermarkOperation gets an existing WithdrawsWatermarkOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWithdrawsWatermarkOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WithdrawsWatermarkOperationState, opts ...pulumi.ResourceOption) (*WithdrawsWatermarkOperation, error) {
	var resource WithdrawsWatermarkOperation
	err := ctx.ReadResource("tencentcloud:Mps/withdrawsWatermarkOperation:WithdrawsWatermarkOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WithdrawsWatermarkOperation resources.
type withdrawsWatermarkOperationState struct {
	// Input information of file for metadata getting.
	InputInfo *WithdrawsWatermarkOperationInputInfo `pulumi:"inputInfo"`
	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field.
	SessionContext *string `pulumi:"sessionContext"`
	// Event notification information of a task. If this parameter is left empty, no event notifications will be obtained.
	TaskNotifyConfig *WithdrawsWatermarkOperationTaskNotifyConfig `pulumi:"taskNotifyConfig"`
}

type WithdrawsWatermarkOperationState struct {
	// Input information of file for metadata getting.
	InputInfo WithdrawsWatermarkOperationInputInfoPtrInput
	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field.
	SessionContext pulumi.StringPtrInput
	// Event notification information of a task. If this parameter is left empty, no event notifications will be obtained.
	TaskNotifyConfig WithdrawsWatermarkOperationTaskNotifyConfigPtrInput
}

func (WithdrawsWatermarkOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*withdrawsWatermarkOperationState)(nil)).Elem()
}

type withdrawsWatermarkOperationArgs struct {
	// Input information of file for metadata getting.
	InputInfo WithdrawsWatermarkOperationInputInfo `pulumi:"inputInfo"`
	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field.
	SessionContext *string `pulumi:"sessionContext"`
	// Event notification information of a task. If this parameter is left empty, no event notifications will be obtained.
	TaskNotifyConfig *WithdrawsWatermarkOperationTaskNotifyConfig `pulumi:"taskNotifyConfig"`
}

// The set of arguments for constructing a WithdrawsWatermarkOperation resource.
type WithdrawsWatermarkOperationArgs struct {
	// Input information of file for metadata getting.
	InputInfo WithdrawsWatermarkOperationInputInfoInput
	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field.
	SessionContext pulumi.StringPtrInput
	// Event notification information of a task. If this parameter is left empty, no event notifications will be obtained.
	TaskNotifyConfig WithdrawsWatermarkOperationTaskNotifyConfigPtrInput
}

func (WithdrawsWatermarkOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*withdrawsWatermarkOperationArgs)(nil)).Elem()
}

type WithdrawsWatermarkOperationInput interface {
	pulumi.Input

	ToWithdrawsWatermarkOperationOutput() WithdrawsWatermarkOperationOutput
	ToWithdrawsWatermarkOperationOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationOutput
}

func (*WithdrawsWatermarkOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**WithdrawsWatermarkOperation)(nil)).Elem()
}

func (i *WithdrawsWatermarkOperation) ToWithdrawsWatermarkOperationOutput() WithdrawsWatermarkOperationOutput {
	return i.ToWithdrawsWatermarkOperationOutputWithContext(context.Background())
}

func (i *WithdrawsWatermarkOperation) ToWithdrawsWatermarkOperationOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WithdrawsWatermarkOperationOutput)
}

// WithdrawsWatermarkOperationArrayInput is an input type that accepts WithdrawsWatermarkOperationArray and WithdrawsWatermarkOperationArrayOutput values.
// You can construct a concrete instance of `WithdrawsWatermarkOperationArrayInput` via:
//
//	WithdrawsWatermarkOperationArray{ WithdrawsWatermarkOperationArgs{...} }
type WithdrawsWatermarkOperationArrayInput interface {
	pulumi.Input

	ToWithdrawsWatermarkOperationArrayOutput() WithdrawsWatermarkOperationArrayOutput
	ToWithdrawsWatermarkOperationArrayOutputWithContext(context.Context) WithdrawsWatermarkOperationArrayOutput
}

type WithdrawsWatermarkOperationArray []WithdrawsWatermarkOperationInput

func (WithdrawsWatermarkOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WithdrawsWatermarkOperation)(nil)).Elem()
}

func (i WithdrawsWatermarkOperationArray) ToWithdrawsWatermarkOperationArrayOutput() WithdrawsWatermarkOperationArrayOutput {
	return i.ToWithdrawsWatermarkOperationArrayOutputWithContext(context.Background())
}

func (i WithdrawsWatermarkOperationArray) ToWithdrawsWatermarkOperationArrayOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WithdrawsWatermarkOperationArrayOutput)
}

// WithdrawsWatermarkOperationMapInput is an input type that accepts WithdrawsWatermarkOperationMap and WithdrawsWatermarkOperationMapOutput values.
// You can construct a concrete instance of `WithdrawsWatermarkOperationMapInput` via:
//
//	WithdrawsWatermarkOperationMap{ "key": WithdrawsWatermarkOperationArgs{...} }
type WithdrawsWatermarkOperationMapInput interface {
	pulumi.Input

	ToWithdrawsWatermarkOperationMapOutput() WithdrawsWatermarkOperationMapOutput
	ToWithdrawsWatermarkOperationMapOutputWithContext(context.Context) WithdrawsWatermarkOperationMapOutput
}

type WithdrawsWatermarkOperationMap map[string]WithdrawsWatermarkOperationInput

func (WithdrawsWatermarkOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WithdrawsWatermarkOperation)(nil)).Elem()
}

func (i WithdrawsWatermarkOperationMap) ToWithdrawsWatermarkOperationMapOutput() WithdrawsWatermarkOperationMapOutput {
	return i.ToWithdrawsWatermarkOperationMapOutputWithContext(context.Background())
}

func (i WithdrawsWatermarkOperationMap) ToWithdrawsWatermarkOperationMapOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WithdrawsWatermarkOperationMapOutput)
}

type WithdrawsWatermarkOperationOutput struct{ *pulumi.OutputState }

func (WithdrawsWatermarkOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WithdrawsWatermarkOperation)(nil)).Elem()
}

func (o WithdrawsWatermarkOperationOutput) ToWithdrawsWatermarkOperationOutput() WithdrawsWatermarkOperationOutput {
	return o
}

func (o WithdrawsWatermarkOperationOutput) ToWithdrawsWatermarkOperationOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationOutput {
	return o
}

// Input information of file for metadata getting.
func (o WithdrawsWatermarkOperationOutput) InputInfo() WithdrawsWatermarkOperationInputInfoOutput {
	return o.ApplyT(func(v *WithdrawsWatermarkOperation) WithdrawsWatermarkOperationInputInfoOutput { return v.InputInfo }).(WithdrawsWatermarkOperationInputInfoOutput)
}

// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field.
func (o WithdrawsWatermarkOperationOutput) SessionContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WithdrawsWatermarkOperation) pulumi.StringPtrOutput { return v.SessionContext }).(pulumi.StringPtrOutput)
}

// Event notification information of a task. If this parameter is left empty, no event notifications will be obtained.
func (o WithdrawsWatermarkOperationOutput) TaskNotifyConfig() WithdrawsWatermarkOperationTaskNotifyConfigPtrOutput {
	return o.ApplyT(func(v *WithdrawsWatermarkOperation) WithdrawsWatermarkOperationTaskNotifyConfigPtrOutput {
		return v.TaskNotifyConfig
	}).(WithdrawsWatermarkOperationTaskNotifyConfigPtrOutput)
}

type WithdrawsWatermarkOperationArrayOutput struct{ *pulumi.OutputState }

func (WithdrawsWatermarkOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WithdrawsWatermarkOperation)(nil)).Elem()
}

func (o WithdrawsWatermarkOperationArrayOutput) ToWithdrawsWatermarkOperationArrayOutput() WithdrawsWatermarkOperationArrayOutput {
	return o
}

func (o WithdrawsWatermarkOperationArrayOutput) ToWithdrawsWatermarkOperationArrayOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationArrayOutput {
	return o
}

func (o WithdrawsWatermarkOperationArrayOutput) Index(i pulumi.IntInput) WithdrawsWatermarkOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WithdrawsWatermarkOperation {
		return vs[0].([]*WithdrawsWatermarkOperation)[vs[1].(int)]
	}).(WithdrawsWatermarkOperationOutput)
}

type WithdrawsWatermarkOperationMapOutput struct{ *pulumi.OutputState }

func (WithdrawsWatermarkOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WithdrawsWatermarkOperation)(nil)).Elem()
}

func (o WithdrawsWatermarkOperationMapOutput) ToWithdrawsWatermarkOperationMapOutput() WithdrawsWatermarkOperationMapOutput {
	return o
}

func (o WithdrawsWatermarkOperationMapOutput) ToWithdrawsWatermarkOperationMapOutputWithContext(ctx context.Context) WithdrawsWatermarkOperationMapOutput {
	return o
}

func (o WithdrawsWatermarkOperationMapOutput) MapIndex(k pulumi.StringInput) WithdrawsWatermarkOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WithdrawsWatermarkOperation {
		return vs[0].(map[string]*WithdrawsWatermarkOperation)[vs[1].(string)]
	}).(WithdrawsWatermarkOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WithdrawsWatermarkOperationInput)(nil)).Elem(), &WithdrawsWatermarkOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*WithdrawsWatermarkOperationArrayInput)(nil)).Elem(), WithdrawsWatermarkOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WithdrawsWatermarkOperationMapInput)(nil)).Elem(), WithdrawsWatermarkOperationMap{})
	pulumi.RegisterOutputType(WithdrawsWatermarkOperationOutput{})
	pulumi.RegisterOutputType(WithdrawsWatermarkOperationArrayOutput{})
	pulumi.RegisterOutputType(WithdrawsWatermarkOperationMapOutput{})
}
