// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package audit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query the events list supported by the audit.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Audit"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Audit.GetEvents(ctx, &audit.GetEventsArgs{
//				EndTime:          1727437441,
//				IsReturnLocation: pulumi.IntRef(1),
//				LookupAttributes: []audit.GetEventsLookupAttribute{
//					{
//						AttributeKey:   "ResourceType",
//						AttributeValue: pulumi.StringRef("cvm"),
//					},
//					{
//						AttributeKey:   "OnlyRecordNotSeen",
//						AttributeValue: pulumi.StringRef("0"),
//					},
//					{
//						AttributeKey:   "EventPlatform",
//						AttributeValue: pulumi.StringRef("0"),
//					},
//				},
//				MaxResults: pulumi.IntRef(50),
//				StartTime:  1727433841,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetEvents(ctx *pulumi.Context, args *GetEventsArgs, opts ...pulumi.InvokeOption) (*GetEventsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventsResult
	err := ctx.Invoke("tencentcloud:Audit/getEvents:getEvents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEvents.
type GetEventsArgs struct {
	// End timestamp in seconds (the time range for query is less than 30 days).
	EndTime int `pulumi:"endTime"`
	// Whether to return the IP location. `1`: yes, `0`: no.
	IsReturnLocation *int `pulumi:"isReturnLocation"`
	// Search condition. Valid values: `RequestId`, `EventName`, `ActionType` (write/read), `PrincipalId` (sub-account), `ResourceType`, `ResourceName`, `AccessKeyId`, `SensitiveAction`, `ApiErrorCode`, `CamErrorCode`, and `Tags` (Format of AttributeValue: [{"key":"*","value":"*"}]).
	LookupAttributes []GetEventsLookupAttribute `pulumi:"lookupAttributes"`
	// Max number of returned logs (up to 50).
	MaxResults *int `pulumi:"maxResults"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Start timestamp in seconds (cannot be 90 days after the current time).
	StartTime int `pulumi:"startTime"`
}

// A collection of values returned by getEvents.
type GetEventsResult struct {
	EndTime int `pulumi:"endTime"`
	// Logset. Note: `null` may be returned for this field, indicating that no valid values can be obtained.
	Events []GetEventsEvent `pulumi:"events"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                     `pulumi:"id"`
	IsReturnLocation *int                       `pulumi:"isReturnLocation"`
	LookupAttributes []GetEventsLookupAttribute `pulumi:"lookupAttributes"`
	MaxResults       *int                       `pulumi:"maxResults"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	StartTime        int                        `pulumi:"startTime"`
}

func GetEventsOutput(ctx *pulumi.Context, args GetEventsOutputArgs, opts ...pulumi.InvokeOption) GetEventsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEventsResult, error) {
			args := v.(GetEventsArgs)
			r, err := GetEvents(ctx, &args, opts...)
			var s GetEventsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEventsResultOutput)
}

// A collection of arguments for invoking getEvents.
type GetEventsOutputArgs struct {
	// End timestamp in seconds (the time range for query is less than 30 days).
	EndTime pulumi.IntInput `pulumi:"endTime"`
	// Whether to return the IP location. `1`: yes, `0`: no.
	IsReturnLocation pulumi.IntPtrInput `pulumi:"isReturnLocation"`
	// Search condition. Valid values: `RequestId`, `EventName`, `ActionType` (write/read), `PrincipalId` (sub-account), `ResourceType`, `ResourceName`, `AccessKeyId`, `SensitiveAction`, `ApiErrorCode`, `CamErrorCode`, and `Tags` (Format of AttributeValue: [{"key":"*","value":"*"}]).
	LookupAttributes GetEventsLookupAttributeArrayInput `pulumi:"lookupAttributes"`
	// Max number of returned logs (up to 50).
	MaxResults pulumi.IntPtrInput `pulumi:"maxResults"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Start timestamp in seconds (cannot be 90 days after the current time).
	StartTime pulumi.IntInput `pulumi:"startTime"`
}

func (GetEventsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsArgs)(nil)).Elem()
}

// A collection of values returned by getEvents.
type GetEventsResultOutput struct{ *pulumi.OutputState }

func (GetEventsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsResult)(nil)).Elem()
}

func (o GetEventsResultOutput) ToGetEventsResultOutput() GetEventsResultOutput {
	return o
}

func (o GetEventsResultOutput) ToGetEventsResultOutputWithContext(ctx context.Context) GetEventsResultOutput {
	return o
}

func (o GetEventsResultOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetEventsResult) int { return v.EndTime }).(pulumi.IntOutput)
}

// Logset. Note: `null` may be returned for this field, indicating that no valid values can be obtained.
func (o GetEventsResultOutput) Events() GetEventsEventArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsEvent { return v.Events }).(GetEventsEventArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEventsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEventsResultOutput) IsReturnLocation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *int { return v.IsReturnLocation }).(pulumi.IntPtrOutput)
}

func (o GetEventsResultOutput) LookupAttributes() GetEventsLookupAttributeArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsLookupAttribute { return v.LookupAttributes }).(GetEventsLookupAttributeArrayOutput)
}

func (o GetEventsResultOutput) MaxResults() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *int { return v.MaxResults }).(pulumi.IntPtrOutput)
}

func (o GetEventsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetEventsResultOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetEventsResult) int { return v.StartTime }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventsResultOutput{})
}
