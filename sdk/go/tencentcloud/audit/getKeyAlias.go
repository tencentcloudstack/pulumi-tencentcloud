// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package audit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query the key alias list specified with region supported by the audit.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Audit"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Audit"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Audit.GetKeyAlias(ctx, &audit.GetKeyAliasArgs{
//				Region: "ap-hongkong",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKeyAlias(ctx *pulumi.Context, args *GetKeyAliasArgs, opts ...pulumi.InvokeOption) (*GetKeyAliasResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetKeyAliasResult
	err := ctx.Invoke("tencentcloud:Audit/getKeyAlias:getKeyAlias", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyAlias.
type GetKeyAliasArgs struct {
	// Region.
	Region string `pulumi:"region"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getKeyAlias.
type GetKeyAliasResult struct {
	// List of available key alias supported by audit.
	AuditKeyAliasLists []GetKeyAliasAuditKeyAliasList `pulumi:"auditKeyAliasLists"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	Region           string  `pulumi:"region"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetKeyAliasOutput(ctx *pulumi.Context, args GetKeyAliasOutputArgs, opts ...pulumi.InvokeOption) GetKeyAliasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeyAliasResult, error) {
			args := v.(GetKeyAliasArgs)
			r, err := GetKeyAlias(ctx, &args, opts...)
			var s GetKeyAliasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeyAliasResultOutput)
}

// A collection of arguments for invoking getKeyAlias.
type GetKeyAliasOutputArgs struct {
	// Region.
	Region pulumi.StringInput `pulumi:"region"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetKeyAliasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyAliasArgs)(nil)).Elem()
}

// A collection of values returned by getKeyAlias.
type GetKeyAliasResultOutput struct{ *pulumi.OutputState }

func (GetKeyAliasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyAliasResult)(nil)).Elem()
}

func (o GetKeyAliasResultOutput) ToGetKeyAliasResultOutput() GetKeyAliasResultOutput {
	return o
}

func (o GetKeyAliasResultOutput) ToGetKeyAliasResultOutputWithContext(ctx context.Context) GetKeyAliasResultOutput {
	return o
}

// List of available key alias supported by audit.
func (o GetKeyAliasResultOutput) AuditKeyAliasLists() GetKeyAliasAuditKeyAliasListArrayOutput {
	return o.ApplyT(func(v GetKeyAliasResult) []GetKeyAliasAuditKeyAliasList { return v.AuditKeyAliasLists }).(GetKeyAliasAuditKeyAliasListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeyAliasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyAliasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKeyAliasResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyAliasResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetKeyAliasResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeyAliasResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeyAliasResultOutput{})
}
