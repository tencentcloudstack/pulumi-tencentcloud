// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package audit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query the cos region list supported by the audit.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Audit"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Audit"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Audit.GetCosRegions(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCosRegions(ctx *pulumi.Context, args *GetCosRegionsArgs, opts ...pulumi.InvokeOption) (*GetCosRegionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCosRegionsResult
	err := ctx.Invoke("tencentcloud:Audit/getCosRegions:getCosRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCosRegions.
type GetCosRegionsArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getCosRegions.
type GetCosRegionsResult struct {
	// List of available regions supported by audit cos.
	AuditCosRegionLists []GetCosRegionsAuditCosRegionList `pulumi:"auditCosRegionLists"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetCosRegionsOutput(ctx *pulumi.Context, args GetCosRegionsOutputArgs, opts ...pulumi.InvokeOption) GetCosRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCosRegionsResult, error) {
			args := v.(GetCosRegionsArgs)
			r, err := GetCosRegions(ctx, &args, opts...)
			var s GetCosRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCosRegionsResultOutput)
}

// A collection of arguments for invoking getCosRegions.
type GetCosRegionsOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetCosRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCosRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getCosRegions.
type GetCosRegionsResultOutput struct{ *pulumi.OutputState }

func (GetCosRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCosRegionsResult)(nil)).Elem()
}

func (o GetCosRegionsResultOutput) ToGetCosRegionsResultOutput() GetCosRegionsResultOutput {
	return o
}

func (o GetCosRegionsResultOutput) ToGetCosRegionsResultOutputWithContext(ctx context.Context) GetCosRegionsResultOutput {
	return o
}

// List of available regions supported by audit cos.
func (o GetCosRegionsResultOutput) AuditCosRegionLists() GetCosRegionsAuditCosRegionListArrayOutput {
	return o.ApplyT(func(v GetCosRegionsResult) []GetCosRegionsAuditCosRegionList { return v.AuditCosRegionLists }).(GetCosRegionsAuditCosRegionListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCosRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCosRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCosRegionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCosRegionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCosRegionsResultOutput{})
}
