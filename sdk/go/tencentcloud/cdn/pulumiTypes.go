// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

type DomainAuthentication struct {
	// Authentication switching, available values: `on`, `off`.
	Switch *string `pulumi:"switch"`
	// Timestamp hotlink protection mode A configuration.
	TypeA *DomainAuthenticationTypeA `pulumi:"typeA"`
	// Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
	TypeB *DomainAuthenticationTypeB `pulumi:"typeB"`
	// Timestamp hotlink protection mode C configuration.
	TypeC *DomainAuthenticationTypeC `pulumi:"typeC"`
	// Timestamp hotlink protection mode D configuration.
	TypeD *DomainAuthenticationTypeD `pulumi:"typeD"`
}

// DomainAuthenticationInput is an input type that accepts DomainAuthenticationArgs and DomainAuthenticationOutput values.
// You can construct a concrete instance of `DomainAuthenticationInput` via:
//
//	DomainAuthenticationArgs{...}
type DomainAuthenticationInput interface {
	pulumi.Input

	ToDomainAuthenticationOutput() DomainAuthenticationOutput
	ToDomainAuthenticationOutputWithContext(context.Context) DomainAuthenticationOutput
}

type DomainAuthenticationArgs struct {
	// Authentication switching, available values: `on`, `off`.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
	// Timestamp hotlink protection mode A configuration.
	TypeA DomainAuthenticationTypeAPtrInput `pulumi:"typeA"`
	// Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
	TypeB DomainAuthenticationTypeBPtrInput `pulumi:"typeB"`
	// Timestamp hotlink protection mode C configuration.
	TypeC DomainAuthenticationTypeCPtrInput `pulumi:"typeC"`
	// Timestamp hotlink protection mode D configuration.
	TypeD DomainAuthenticationTypeDPtrInput `pulumi:"typeD"`
}

func (DomainAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthentication)(nil)).Elem()
}

func (i DomainAuthenticationArgs) ToDomainAuthenticationOutput() DomainAuthenticationOutput {
	return i.ToDomainAuthenticationOutputWithContext(context.Background())
}

func (i DomainAuthenticationArgs) ToDomainAuthenticationOutputWithContext(ctx context.Context) DomainAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationOutput)
}

func (i DomainAuthenticationArgs) ToDomainAuthenticationPtrOutput() DomainAuthenticationPtrOutput {
	return i.ToDomainAuthenticationPtrOutputWithContext(context.Background())
}

func (i DomainAuthenticationArgs) ToDomainAuthenticationPtrOutputWithContext(ctx context.Context) DomainAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationOutput).ToDomainAuthenticationPtrOutputWithContext(ctx)
}

// DomainAuthenticationPtrInput is an input type that accepts DomainAuthenticationArgs, DomainAuthenticationPtr and DomainAuthenticationPtrOutput values.
// You can construct a concrete instance of `DomainAuthenticationPtrInput` via:
//
//	        DomainAuthenticationArgs{...}
//
//	or:
//
//	        nil
type DomainAuthenticationPtrInput interface {
	pulumi.Input

	ToDomainAuthenticationPtrOutput() DomainAuthenticationPtrOutput
	ToDomainAuthenticationPtrOutputWithContext(context.Context) DomainAuthenticationPtrOutput
}

type domainAuthenticationPtrType DomainAuthenticationArgs

func DomainAuthenticationPtr(v *DomainAuthenticationArgs) DomainAuthenticationPtrInput {
	return (*domainAuthenticationPtrType)(v)
}

func (*domainAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthentication)(nil)).Elem()
}

func (i *domainAuthenticationPtrType) ToDomainAuthenticationPtrOutput() DomainAuthenticationPtrOutput {
	return i.ToDomainAuthenticationPtrOutputWithContext(context.Background())
}

func (i *domainAuthenticationPtrType) ToDomainAuthenticationPtrOutputWithContext(ctx context.Context) DomainAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationPtrOutput)
}

type DomainAuthenticationOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthentication)(nil)).Elem()
}

func (o DomainAuthenticationOutput) ToDomainAuthenticationOutput() DomainAuthenticationOutput {
	return o
}

func (o DomainAuthenticationOutput) ToDomainAuthenticationOutputWithContext(ctx context.Context) DomainAuthenticationOutput {
	return o
}

func (o DomainAuthenticationOutput) ToDomainAuthenticationPtrOutput() DomainAuthenticationPtrOutput {
	return o.ToDomainAuthenticationPtrOutputWithContext(context.Background())
}

func (o DomainAuthenticationOutput) ToDomainAuthenticationPtrOutputWithContext(ctx context.Context) DomainAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAuthentication) *DomainAuthentication {
		return &v
	}).(DomainAuthenticationPtrOutput)
}

// Authentication switching, available values: `on`, `off`.
func (o DomainAuthenticationOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthentication) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

// Timestamp hotlink protection mode A configuration.
func (o DomainAuthenticationOutput) TypeA() DomainAuthenticationTypeAPtrOutput {
	return o.ApplyT(func(v DomainAuthentication) *DomainAuthenticationTypeA { return v.TypeA }).(DomainAuthenticationTypeAPtrOutput)
}

// Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
func (o DomainAuthenticationOutput) TypeB() DomainAuthenticationTypeBPtrOutput {
	return o.ApplyT(func(v DomainAuthentication) *DomainAuthenticationTypeB { return v.TypeB }).(DomainAuthenticationTypeBPtrOutput)
}

// Timestamp hotlink protection mode C configuration.
func (o DomainAuthenticationOutput) TypeC() DomainAuthenticationTypeCPtrOutput {
	return o.ApplyT(func(v DomainAuthentication) *DomainAuthenticationTypeC { return v.TypeC }).(DomainAuthenticationTypeCPtrOutput)
}

// Timestamp hotlink protection mode D configuration.
func (o DomainAuthenticationOutput) TypeD() DomainAuthenticationTypeDPtrOutput {
	return o.ApplyT(func(v DomainAuthentication) *DomainAuthenticationTypeD { return v.TypeD }).(DomainAuthenticationTypeDPtrOutput)
}

type DomainAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthentication)(nil)).Elem()
}

func (o DomainAuthenticationPtrOutput) ToDomainAuthenticationPtrOutput() DomainAuthenticationPtrOutput {
	return o
}

func (o DomainAuthenticationPtrOutput) ToDomainAuthenticationPtrOutputWithContext(ctx context.Context) DomainAuthenticationPtrOutput {
	return o
}

func (o DomainAuthenticationPtrOutput) Elem() DomainAuthenticationOutput {
	return o.ApplyT(func(v *DomainAuthentication) DomainAuthentication {
		if v != nil {
			return *v
		}
		var ret DomainAuthentication
		return ret
	}).(DomainAuthenticationOutput)
}

// Authentication switching, available values: `on`, `off`.
func (o DomainAuthenticationPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

// Timestamp hotlink protection mode A configuration.
func (o DomainAuthenticationPtrOutput) TypeA() DomainAuthenticationTypeAPtrOutput {
	return o.ApplyT(func(v *DomainAuthentication) *DomainAuthenticationTypeA {
		if v == nil {
			return nil
		}
		return v.TypeA
	}).(DomainAuthenticationTypeAPtrOutput)
}

// Timestamp hotlink protection mode B configuration. NOTE: according to upgrading of TencentCloud Platform, TypeB is unavailable for now.
func (o DomainAuthenticationPtrOutput) TypeB() DomainAuthenticationTypeBPtrOutput {
	return o.ApplyT(func(v *DomainAuthentication) *DomainAuthenticationTypeB {
		if v == nil {
			return nil
		}
		return v.TypeB
	}).(DomainAuthenticationTypeBPtrOutput)
}

// Timestamp hotlink protection mode C configuration.
func (o DomainAuthenticationPtrOutput) TypeC() DomainAuthenticationTypeCPtrOutput {
	return o.ApplyT(func(v *DomainAuthentication) *DomainAuthenticationTypeC {
		if v == nil {
			return nil
		}
		return v.TypeC
	}).(DomainAuthenticationTypeCPtrOutput)
}

// Timestamp hotlink protection mode D configuration.
func (o DomainAuthenticationPtrOutput) TypeD() DomainAuthenticationTypeDPtrOutput {
	return o.ApplyT(func(v *DomainAuthentication) *DomainAuthenticationTypeD {
		if v == nil {
			return nil
		}
		return v.TypeD
	}).(DomainAuthenticationTypeDPtrOutput)
}

type DomainAuthenticationTypeA struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey *string `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime int `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions []string `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType string `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey string `pulumi:"secretKey"`
	// Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
	SignParam string `pulumi:"signParam"`
}

// DomainAuthenticationTypeAInput is an input type that accepts DomainAuthenticationTypeAArgs and DomainAuthenticationTypeAOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeAInput` via:
//
//	DomainAuthenticationTypeAArgs{...}
type DomainAuthenticationTypeAInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeAOutput() DomainAuthenticationTypeAOutput
	ToDomainAuthenticationTypeAOutputWithContext(context.Context) DomainAuthenticationTypeAOutput
}

type DomainAuthenticationTypeAArgs struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey pulumi.StringPtrInput `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions pulumi.StringArrayInput `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
	// Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
	SignParam pulumi.StringInput `pulumi:"signParam"`
}

func (DomainAuthenticationTypeAArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeA)(nil)).Elem()
}

func (i DomainAuthenticationTypeAArgs) ToDomainAuthenticationTypeAOutput() DomainAuthenticationTypeAOutput {
	return i.ToDomainAuthenticationTypeAOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeAArgs) ToDomainAuthenticationTypeAOutputWithContext(ctx context.Context) DomainAuthenticationTypeAOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeAOutput)
}

func (i DomainAuthenticationTypeAArgs) ToDomainAuthenticationTypeAPtrOutput() DomainAuthenticationTypeAPtrOutput {
	return i.ToDomainAuthenticationTypeAPtrOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeAArgs) ToDomainAuthenticationTypeAPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeAOutput).ToDomainAuthenticationTypeAPtrOutputWithContext(ctx)
}

// DomainAuthenticationTypeAPtrInput is an input type that accepts DomainAuthenticationTypeAArgs, DomainAuthenticationTypeAPtr and DomainAuthenticationTypeAPtrOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeAPtrInput` via:
//
//	        DomainAuthenticationTypeAArgs{...}
//
//	or:
//
//	        nil
type DomainAuthenticationTypeAPtrInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeAPtrOutput() DomainAuthenticationTypeAPtrOutput
	ToDomainAuthenticationTypeAPtrOutputWithContext(context.Context) DomainAuthenticationTypeAPtrOutput
}

type domainAuthenticationTypeAPtrType DomainAuthenticationTypeAArgs

func DomainAuthenticationTypeAPtr(v *DomainAuthenticationTypeAArgs) DomainAuthenticationTypeAPtrInput {
	return (*domainAuthenticationTypeAPtrType)(v)
}

func (*domainAuthenticationTypeAPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeA)(nil)).Elem()
}

func (i *domainAuthenticationTypeAPtrType) ToDomainAuthenticationTypeAPtrOutput() DomainAuthenticationTypeAPtrOutput {
	return i.ToDomainAuthenticationTypeAPtrOutputWithContext(context.Background())
}

func (i *domainAuthenticationTypeAPtrType) ToDomainAuthenticationTypeAPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeAPtrOutput)
}

type DomainAuthenticationTypeAOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeAOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeA)(nil)).Elem()
}

func (o DomainAuthenticationTypeAOutput) ToDomainAuthenticationTypeAOutput() DomainAuthenticationTypeAOutput {
	return o
}

func (o DomainAuthenticationTypeAOutput) ToDomainAuthenticationTypeAOutputWithContext(ctx context.Context) DomainAuthenticationTypeAOutput {
	return o
}

func (o DomainAuthenticationTypeAOutput) ToDomainAuthenticationTypeAPtrOutput() DomainAuthenticationTypeAPtrOutput {
	return o.ToDomainAuthenticationTypeAPtrOutputWithContext(context.Background())
}

func (o DomainAuthenticationTypeAOutput) ToDomainAuthenticationTypeAPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeAPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAuthenticationTypeA) *DomainAuthenticationTypeA {
		return &v
	}).(DomainAuthenticationTypeAPtrOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeAOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeA) *string { return v.BackupSecretKey }).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeAOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeA) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeAOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeA) []string { return v.FileExtensions }).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeAOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeA) string { return v.FilterType }).(pulumi.StringOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeAOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeA) string { return v.SecretKey }).(pulumi.StringOutput)
}

// Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
func (o DomainAuthenticationTypeAOutput) SignParam() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeA) string { return v.SignParam }).(pulumi.StringOutput)
}

type DomainAuthenticationTypeAPtrOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeAPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeA)(nil)).Elem()
}

func (o DomainAuthenticationTypeAPtrOutput) ToDomainAuthenticationTypeAPtrOutput() DomainAuthenticationTypeAPtrOutput {
	return o
}

func (o DomainAuthenticationTypeAPtrOutput) ToDomainAuthenticationTypeAPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeAPtrOutput {
	return o
}

func (o DomainAuthenticationTypeAPtrOutput) Elem() DomainAuthenticationTypeAOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) DomainAuthenticationTypeA {
		if v != nil {
			return *v
		}
		var ret DomainAuthenticationTypeA
		return ret
	}).(DomainAuthenticationTypeAOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeAPtrOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) *string {
		if v == nil {
			return nil
		}
		return v.BackupSecretKey
	}).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeAPtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) *int {
		if v == nil {
			return nil
		}
		return &v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeAPtrOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) []string {
		if v == nil {
			return nil
		}
		return v.FileExtensions
	}).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeAPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeAPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Signature parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
func (o DomainAuthenticationTypeAPtrOutput) SignParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeA) *string {
		if v == nil {
			return nil
		}
		return &v.SignParam
	}).(pulumi.StringPtrOutput)
}

type DomainAuthenticationTypeB struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey *string `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime int `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions []string `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType string `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey string `pulumi:"secretKey"`
}

// DomainAuthenticationTypeBInput is an input type that accepts DomainAuthenticationTypeBArgs and DomainAuthenticationTypeBOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeBInput` via:
//
//	DomainAuthenticationTypeBArgs{...}
type DomainAuthenticationTypeBInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeBOutput() DomainAuthenticationTypeBOutput
	ToDomainAuthenticationTypeBOutputWithContext(context.Context) DomainAuthenticationTypeBOutput
}

type DomainAuthenticationTypeBArgs struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey pulumi.StringPtrInput `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions pulumi.StringArrayInput `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (DomainAuthenticationTypeBArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeB)(nil)).Elem()
}

func (i DomainAuthenticationTypeBArgs) ToDomainAuthenticationTypeBOutput() DomainAuthenticationTypeBOutput {
	return i.ToDomainAuthenticationTypeBOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeBArgs) ToDomainAuthenticationTypeBOutputWithContext(ctx context.Context) DomainAuthenticationTypeBOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeBOutput)
}

func (i DomainAuthenticationTypeBArgs) ToDomainAuthenticationTypeBPtrOutput() DomainAuthenticationTypeBPtrOutput {
	return i.ToDomainAuthenticationTypeBPtrOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeBArgs) ToDomainAuthenticationTypeBPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeBPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeBOutput).ToDomainAuthenticationTypeBPtrOutputWithContext(ctx)
}

// DomainAuthenticationTypeBPtrInput is an input type that accepts DomainAuthenticationTypeBArgs, DomainAuthenticationTypeBPtr and DomainAuthenticationTypeBPtrOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeBPtrInput` via:
//
//	        DomainAuthenticationTypeBArgs{...}
//
//	or:
//
//	        nil
type DomainAuthenticationTypeBPtrInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeBPtrOutput() DomainAuthenticationTypeBPtrOutput
	ToDomainAuthenticationTypeBPtrOutputWithContext(context.Context) DomainAuthenticationTypeBPtrOutput
}

type domainAuthenticationTypeBPtrType DomainAuthenticationTypeBArgs

func DomainAuthenticationTypeBPtr(v *DomainAuthenticationTypeBArgs) DomainAuthenticationTypeBPtrInput {
	return (*domainAuthenticationTypeBPtrType)(v)
}

func (*domainAuthenticationTypeBPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeB)(nil)).Elem()
}

func (i *domainAuthenticationTypeBPtrType) ToDomainAuthenticationTypeBPtrOutput() DomainAuthenticationTypeBPtrOutput {
	return i.ToDomainAuthenticationTypeBPtrOutputWithContext(context.Background())
}

func (i *domainAuthenticationTypeBPtrType) ToDomainAuthenticationTypeBPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeBPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeBPtrOutput)
}

type DomainAuthenticationTypeBOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeBOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeB)(nil)).Elem()
}

func (o DomainAuthenticationTypeBOutput) ToDomainAuthenticationTypeBOutput() DomainAuthenticationTypeBOutput {
	return o
}

func (o DomainAuthenticationTypeBOutput) ToDomainAuthenticationTypeBOutputWithContext(ctx context.Context) DomainAuthenticationTypeBOutput {
	return o
}

func (o DomainAuthenticationTypeBOutput) ToDomainAuthenticationTypeBPtrOutput() DomainAuthenticationTypeBPtrOutput {
	return o.ToDomainAuthenticationTypeBPtrOutputWithContext(context.Background())
}

func (o DomainAuthenticationTypeBOutput) ToDomainAuthenticationTypeBPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeBPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAuthenticationTypeB) *DomainAuthenticationTypeB {
		return &v
	}).(DomainAuthenticationTypeBPtrOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeBOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeB) *string { return v.BackupSecretKey }).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeBOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeB) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeBOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeB) []string { return v.FileExtensions }).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeBOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeB) string { return v.FilterType }).(pulumi.StringOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeBOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeB) string { return v.SecretKey }).(pulumi.StringOutput)
}

type DomainAuthenticationTypeBPtrOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeBPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeB)(nil)).Elem()
}

func (o DomainAuthenticationTypeBPtrOutput) ToDomainAuthenticationTypeBPtrOutput() DomainAuthenticationTypeBPtrOutput {
	return o
}

func (o DomainAuthenticationTypeBPtrOutput) ToDomainAuthenticationTypeBPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeBPtrOutput {
	return o
}

func (o DomainAuthenticationTypeBPtrOutput) Elem() DomainAuthenticationTypeBOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeB) DomainAuthenticationTypeB {
		if v != nil {
			return *v
		}
		var ret DomainAuthenticationTypeB
		return ret
	}).(DomainAuthenticationTypeBOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeBPtrOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeB) *string {
		if v == nil {
			return nil
		}
		return v.BackupSecretKey
	}).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeBPtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeB) *int {
		if v == nil {
			return nil
		}
		return &v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeBPtrOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeB) []string {
		if v == nil {
			return nil
		}
		return v.FileExtensions
	}).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeBPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeB) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeBPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeB) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type DomainAuthenticationTypeC struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey *string `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime int `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions []string `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType string `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey string `pulumi:"secretKey"`
	// Timestamp formation, available values: `dec`, `hex`.
	TimeFormat *string `pulumi:"timeFormat"`
}

// DomainAuthenticationTypeCInput is an input type that accepts DomainAuthenticationTypeCArgs and DomainAuthenticationTypeCOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeCInput` via:
//
//	DomainAuthenticationTypeCArgs{...}
type DomainAuthenticationTypeCInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeCOutput() DomainAuthenticationTypeCOutput
	ToDomainAuthenticationTypeCOutputWithContext(context.Context) DomainAuthenticationTypeCOutput
}

type DomainAuthenticationTypeCArgs struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey pulumi.StringPtrInput `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions pulumi.StringArrayInput `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
	// Timestamp formation, available values: `dec`, `hex`.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
}

func (DomainAuthenticationTypeCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeC)(nil)).Elem()
}

func (i DomainAuthenticationTypeCArgs) ToDomainAuthenticationTypeCOutput() DomainAuthenticationTypeCOutput {
	return i.ToDomainAuthenticationTypeCOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeCArgs) ToDomainAuthenticationTypeCOutputWithContext(ctx context.Context) DomainAuthenticationTypeCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeCOutput)
}

func (i DomainAuthenticationTypeCArgs) ToDomainAuthenticationTypeCPtrOutput() DomainAuthenticationTypeCPtrOutput {
	return i.ToDomainAuthenticationTypeCPtrOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeCArgs) ToDomainAuthenticationTypeCPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeCOutput).ToDomainAuthenticationTypeCPtrOutputWithContext(ctx)
}

// DomainAuthenticationTypeCPtrInput is an input type that accepts DomainAuthenticationTypeCArgs, DomainAuthenticationTypeCPtr and DomainAuthenticationTypeCPtrOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeCPtrInput` via:
//
//	        DomainAuthenticationTypeCArgs{...}
//
//	or:
//
//	        nil
type DomainAuthenticationTypeCPtrInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeCPtrOutput() DomainAuthenticationTypeCPtrOutput
	ToDomainAuthenticationTypeCPtrOutputWithContext(context.Context) DomainAuthenticationTypeCPtrOutput
}

type domainAuthenticationTypeCPtrType DomainAuthenticationTypeCArgs

func DomainAuthenticationTypeCPtr(v *DomainAuthenticationTypeCArgs) DomainAuthenticationTypeCPtrInput {
	return (*domainAuthenticationTypeCPtrType)(v)
}

func (*domainAuthenticationTypeCPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeC)(nil)).Elem()
}

func (i *domainAuthenticationTypeCPtrType) ToDomainAuthenticationTypeCPtrOutput() DomainAuthenticationTypeCPtrOutput {
	return i.ToDomainAuthenticationTypeCPtrOutputWithContext(context.Background())
}

func (i *domainAuthenticationTypeCPtrType) ToDomainAuthenticationTypeCPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeCPtrOutput)
}

type DomainAuthenticationTypeCOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeC)(nil)).Elem()
}

func (o DomainAuthenticationTypeCOutput) ToDomainAuthenticationTypeCOutput() DomainAuthenticationTypeCOutput {
	return o
}

func (o DomainAuthenticationTypeCOutput) ToDomainAuthenticationTypeCOutputWithContext(ctx context.Context) DomainAuthenticationTypeCOutput {
	return o
}

func (o DomainAuthenticationTypeCOutput) ToDomainAuthenticationTypeCPtrOutput() DomainAuthenticationTypeCPtrOutput {
	return o.ToDomainAuthenticationTypeCPtrOutputWithContext(context.Background())
}

func (o DomainAuthenticationTypeCOutput) ToDomainAuthenticationTypeCPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeCPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAuthenticationTypeC) *DomainAuthenticationTypeC {
		return &v
	}).(DomainAuthenticationTypeCPtrOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeCOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeC) *string { return v.BackupSecretKey }).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeCOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeC) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeCOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeC) []string { return v.FileExtensions }).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeCOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeC) string { return v.FilterType }).(pulumi.StringOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeCOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeC) string { return v.SecretKey }).(pulumi.StringOutput)
}

// Timestamp formation, available values: `dec`, `hex`.
func (o DomainAuthenticationTypeCOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeC) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

type DomainAuthenticationTypeCPtrOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeCPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeC)(nil)).Elem()
}

func (o DomainAuthenticationTypeCPtrOutput) ToDomainAuthenticationTypeCPtrOutput() DomainAuthenticationTypeCPtrOutput {
	return o
}

func (o DomainAuthenticationTypeCPtrOutput) ToDomainAuthenticationTypeCPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeCPtrOutput {
	return o
}

func (o DomainAuthenticationTypeCPtrOutput) Elem() DomainAuthenticationTypeCOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) DomainAuthenticationTypeC {
		if v != nil {
			return *v
		}
		var ret DomainAuthenticationTypeC
		return ret
	}).(DomainAuthenticationTypeCOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeCPtrOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) *string {
		if v == nil {
			return nil
		}
		return v.BackupSecretKey
	}).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeCPtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) *int {
		if v == nil {
			return nil
		}
		return &v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeCPtrOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) []string {
		if v == nil {
			return nil
		}
		return v.FileExtensions
	}).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeCPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeCPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Timestamp formation, available values: `dec`, `hex`.
func (o DomainAuthenticationTypeCPtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeC) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

type DomainAuthenticationTypeD struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey *string `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime int `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions []string `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType string `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey string `pulumi:"secretKey"`
	// Timestamp formation, available values: `dec`, `hex`.
	TimeFormat *string `pulumi:"timeFormat"`
	// Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
	TimeParam *string `pulumi:"timeParam"`
}

// DomainAuthenticationTypeDInput is an input type that accepts DomainAuthenticationTypeDArgs and DomainAuthenticationTypeDOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeDInput` via:
//
//	DomainAuthenticationTypeDArgs{...}
type DomainAuthenticationTypeDInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeDOutput() DomainAuthenticationTypeDOutput
	ToDomainAuthenticationTypeDOutputWithContext(context.Context) DomainAuthenticationTypeDOutput
}

type DomainAuthenticationTypeDArgs struct {
	// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
	BackupSecretKey pulumi.StringPtrInput `pulumi:"backupSecretKey"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
	FileExtensions pulumi.StringArrayInput `pulumi:"fileExtensions"`
	// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
	// Timestamp formation, available values: `dec`, `hex`.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
	TimeParam pulumi.StringPtrInput `pulumi:"timeParam"`
}

func (DomainAuthenticationTypeDArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeD)(nil)).Elem()
}

func (i DomainAuthenticationTypeDArgs) ToDomainAuthenticationTypeDOutput() DomainAuthenticationTypeDOutput {
	return i.ToDomainAuthenticationTypeDOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeDArgs) ToDomainAuthenticationTypeDOutputWithContext(ctx context.Context) DomainAuthenticationTypeDOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeDOutput)
}

func (i DomainAuthenticationTypeDArgs) ToDomainAuthenticationTypeDPtrOutput() DomainAuthenticationTypeDPtrOutput {
	return i.ToDomainAuthenticationTypeDPtrOutputWithContext(context.Background())
}

func (i DomainAuthenticationTypeDArgs) ToDomainAuthenticationTypeDPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeDOutput).ToDomainAuthenticationTypeDPtrOutputWithContext(ctx)
}

// DomainAuthenticationTypeDPtrInput is an input type that accepts DomainAuthenticationTypeDArgs, DomainAuthenticationTypeDPtr and DomainAuthenticationTypeDPtrOutput values.
// You can construct a concrete instance of `DomainAuthenticationTypeDPtrInput` via:
//
//	        DomainAuthenticationTypeDArgs{...}
//
//	or:
//
//	        nil
type DomainAuthenticationTypeDPtrInput interface {
	pulumi.Input

	ToDomainAuthenticationTypeDPtrOutput() DomainAuthenticationTypeDPtrOutput
	ToDomainAuthenticationTypeDPtrOutputWithContext(context.Context) DomainAuthenticationTypeDPtrOutput
}

type domainAuthenticationTypeDPtrType DomainAuthenticationTypeDArgs

func DomainAuthenticationTypeDPtr(v *DomainAuthenticationTypeDArgs) DomainAuthenticationTypeDPtrInput {
	return (*domainAuthenticationTypeDPtrType)(v)
}

func (*domainAuthenticationTypeDPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeD)(nil)).Elem()
}

func (i *domainAuthenticationTypeDPtrType) ToDomainAuthenticationTypeDPtrOutput() DomainAuthenticationTypeDPtrOutput {
	return i.ToDomainAuthenticationTypeDPtrOutputWithContext(context.Background())
}

func (i *domainAuthenticationTypeDPtrType) ToDomainAuthenticationTypeDPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAuthenticationTypeDPtrOutput)
}

type DomainAuthenticationTypeDOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeDOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthenticationTypeD)(nil)).Elem()
}

func (o DomainAuthenticationTypeDOutput) ToDomainAuthenticationTypeDOutput() DomainAuthenticationTypeDOutput {
	return o
}

func (o DomainAuthenticationTypeDOutput) ToDomainAuthenticationTypeDOutputWithContext(ctx context.Context) DomainAuthenticationTypeDOutput {
	return o
}

func (o DomainAuthenticationTypeDOutput) ToDomainAuthenticationTypeDPtrOutput() DomainAuthenticationTypeDPtrOutput {
	return o.ToDomainAuthenticationTypeDPtrOutputWithContext(context.Background())
}

func (o DomainAuthenticationTypeDOutput) ToDomainAuthenticationTypeDPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeDPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAuthenticationTypeD) *DomainAuthenticationTypeD {
		return &v
	}).(DomainAuthenticationTypeDPtrOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeDOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) *string { return v.BackupSecretKey }).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeDOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeDOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) []string { return v.FileExtensions }).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeDOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) string { return v.FilterType }).(pulumi.StringOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeDOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) string { return v.SecretKey }).(pulumi.StringOutput)
}

// Timestamp formation, available values: `dec`, `hex`.
func (o DomainAuthenticationTypeDOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
func (o DomainAuthenticationTypeDOutput) TimeParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAuthenticationTypeD) *string { return v.TimeParam }).(pulumi.StringPtrOutput)
}

type DomainAuthenticationTypeDPtrOutput struct{ *pulumi.OutputState }

func (DomainAuthenticationTypeDPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthenticationTypeD)(nil)).Elem()
}

func (o DomainAuthenticationTypeDPtrOutput) ToDomainAuthenticationTypeDPtrOutput() DomainAuthenticationTypeDPtrOutput {
	return o
}

func (o DomainAuthenticationTypeDPtrOutput) ToDomainAuthenticationTypeDPtrOutputWithContext(ctx context.Context) DomainAuthenticationTypeDPtrOutput {
	return o
}

func (o DomainAuthenticationTypeDPtrOutput) Elem() DomainAuthenticationTypeDOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) DomainAuthenticationTypeD {
		if v != nil {
			return *v
		}
		var ret DomainAuthenticationTypeD
		return ret
	}).(DomainAuthenticationTypeDOutput)
}

// Used for calculate a signature. 6-32 characters. Only digits and letters are allowed.
func (o DomainAuthenticationTypeDPtrOutput) BackupSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) *string {
		if v == nil {
			return nil
		}
		return v.BackupSecretKey
	}).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainAuthenticationTypeDPtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) *int {
		if v == nil {
			return nil
		}
		return &v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

// File extension list settings determining if authentication should be performed. NOTE: If it contains an asterisk (*), this indicates all files.
func (o DomainAuthenticationTypeDPtrOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) []string {
		if v == nil {
			return nil
		}
		return v.FileExtensions
	}).(pulumi.StringArrayOutput)
}

// Available values: `whitelist` - all types apart from `fileExtensions` are authenticated, `blacklist`: - only the types in the `fileExtensions` are authenticated.
func (o DomainAuthenticationTypeDPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The key for signature calculation. Only digits, upper and lower-case letters are allowed. Length limit: 6-32 characters.
func (o DomainAuthenticationTypeDPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Timestamp formation, available values: `dec`, `hex`.
func (o DomainAuthenticationTypeDPtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

// Timestamp parameter name. Only upper and lower-case letters, digits, and underscores (_) are allowed. It cannot start with a digit. Length limit: 1-100 characters.
func (o DomainAuthenticationTypeDPtrOutput) TimeParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAuthenticationTypeD) *string {
		if v == nil {
			return nil
		}
		return v.TimeParam
	}).(pulumi.StringPtrOutput)
}

type DomainAwsPrivateAccess struct {
	// Access ID.
	AccessKey *string `pulumi:"accessKey"`
	// Bucket.
	Bucket *string `pulumi:"bucket"`
	// Region.
	Region *string `pulumi:"region"`
	// Key.
	SecretKey *string `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainAwsPrivateAccessInput is an input type that accepts DomainAwsPrivateAccessArgs and DomainAwsPrivateAccessOutput values.
// You can construct a concrete instance of `DomainAwsPrivateAccessInput` via:
//
//	DomainAwsPrivateAccessArgs{...}
type DomainAwsPrivateAccessInput interface {
	pulumi.Input

	ToDomainAwsPrivateAccessOutput() DomainAwsPrivateAccessOutput
	ToDomainAwsPrivateAccessOutputWithContext(context.Context) DomainAwsPrivateAccessOutput
}

type DomainAwsPrivateAccessArgs struct {
	// Access ID.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Key.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainAwsPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAwsPrivateAccess)(nil)).Elem()
}

func (i DomainAwsPrivateAccessArgs) ToDomainAwsPrivateAccessOutput() DomainAwsPrivateAccessOutput {
	return i.ToDomainAwsPrivateAccessOutputWithContext(context.Background())
}

func (i DomainAwsPrivateAccessArgs) ToDomainAwsPrivateAccessOutputWithContext(ctx context.Context) DomainAwsPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAwsPrivateAccessOutput)
}

func (i DomainAwsPrivateAccessArgs) ToDomainAwsPrivateAccessPtrOutput() DomainAwsPrivateAccessPtrOutput {
	return i.ToDomainAwsPrivateAccessPtrOutputWithContext(context.Background())
}

func (i DomainAwsPrivateAccessArgs) ToDomainAwsPrivateAccessPtrOutputWithContext(ctx context.Context) DomainAwsPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAwsPrivateAccessOutput).ToDomainAwsPrivateAccessPtrOutputWithContext(ctx)
}

// DomainAwsPrivateAccessPtrInput is an input type that accepts DomainAwsPrivateAccessArgs, DomainAwsPrivateAccessPtr and DomainAwsPrivateAccessPtrOutput values.
// You can construct a concrete instance of `DomainAwsPrivateAccessPtrInput` via:
//
//	        DomainAwsPrivateAccessArgs{...}
//
//	or:
//
//	        nil
type DomainAwsPrivateAccessPtrInput interface {
	pulumi.Input

	ToDomainAwsPrivateAccessPtrOutput() DomainAwsPrivateAccessPtrOutput
	ToDomainAwsPrivateAccessPtrOutputWithContext(context.Context) DomainAwsPrivateAccessPtrOutput
}

type domainAwsPrivateAccessPtrType DomainAwsPrivateAccessArgs

func DomainAwsPrivateAccessPtr(v *DomainAwsPrivateAccessArgs) DomainAwsPrivateAccessPtrInput {
	return (*domainAwsPrivateAccessPtrType)(v)
}

func (*domainAwsPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAwsPrivateAccess)(nil)).Elem()
}

func (i *domainAwsPrivateAccessPtrType) ToDomainAwsPrivateAccessPtrOutput() DomainAwsPrivateAccessPtrOutput {
	return i.ToDomainAwsPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *domainAwsPrivateAccessPtrType) ToDomainAwsPrivateAccessPtrOutputWithContext(ctx context.Context) DomainAwsPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAwsPrivateAccessPtrOutput)
}

type DomainAwsPrivateAccessOutput struct{ *pulumi.OutputState }

func (DomainAwsPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAwsPrivateAccess)(nil)).Elem()
}

func (o DomainAwsPrivateAccessOutput) ToDomainAwsPrivateAccessOutput() DomainAwsPrivateAccessOutput {
	return o
}

func (o DomainAwsPrivateAccessOutput) ToDomainAwsPrivateAccessOutputWithContext(ctx context.Context) DomainAwsPrivateAccessOutput {
	return o
}

func (o DomainAwsPrivateAccessOutput) ToDomainAwsPrivateAccessPtrOutput() DomainAwsPrivateAccessPtrOutput {
	return o.ToDomainAwsPrivateAccessPtrOutputWithContext(context.Background())
}

func (o DomainAwsPrivateAccessOutput) ToDomainAwsPrivateAccessPtrOutputWithContext(ctx context.Context) DomainAwsPrivateAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAwsPrivateAccess) *DomainAwsPrivateAccess {
		return &v
	}).(DomainAwsPrivateAccessPtrOutput)
}

// Access ID.
func (o DomainAwsPrivateAccessOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAwsPrivateAccess) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainAwsPrivateAccessOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAwsPrivateAccess) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Region.
func (o DomainAwsPrivateAccessOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAwsPrivateAccess) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainAwsPrivateAccessOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAwsPrivateAccess) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainAwsPrivateAccessOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAwsPrivateAccess) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainAwsPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (DomainAwsPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAwsPrivateAccess)(nil)).Elem()
}

func (o DomainAwsPrivateAccessPtrOutput) ToDomainAwsPrivateAccessPtrOutput() DomainAwsPrivateAccessPtrOutput {
	return o
}

func (o DomainAwsPrivateAccessPtrOutput) ToDomainAwsPrivateAccessPtrOutputWithContext(ctx context.Context) DomainAwsPrivateAccessPtrOutput {
	return o
}

func (o DomainAwsPrivateAccessPtrOutput) Elem() DomainAwsPrivateAccessOutput {
	return o.ApplyT(func(v *DomainAwsPrivateAccess) DomainAwsPrivateAccess {
		if v != nil {
			return *v
		}
		var ret DomainAwsPrivateAccess
		return ret
	}).(DomainAwsPrivateAccessOutput)
}

// Access ID.
func (o DomainAwsPrivateAccessPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAwsPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainAwsPrivateAccessPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAwsPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Region.
func (o DomainAwsPrivateAccessPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAwsPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainAwsPrivateAccessPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAwsPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainAwsPrivateAccessPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAwsPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainBandWidthAlert struct {
	// Alert percentage.
	AlertPercentage *int `pulumi:"alertPercentage"`
	// Switch alert.
	AlertSwitch *string `pulumi:"alertSwitch"`
	// threshold of bps.
	BpsThreshold *int `pulumi:"bpsThreshold"`
	// Counter measure.
	CounterMeasure *string `pulumi:"counterMeasure"`
	// Last trigger time.
	LastTriggerTime *string `pulumi:"lastTriggerTime"`
	// Last trigger time of overseas.
	LastTriggerTimeOverseas *string `pulumi:"lastTriggerTimeOverseas"`
	// Metric.
	Metric *string `pulumi:"metric"`
	// Specify statistic item configuration.
	StatisticItem *DomainBandWidthAlertStatisticItem `pulumi:"statisticItem"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainBandWidthAlertInput is an input type that accepts DomainBandWidthAlertArgs and DomainBandWidthAlertOutput values.
// You can construct a concrete instance of `DomainBandWidthAlertInput` via:
//
//	DomainBandWidthAlertArgs{...}
type DomainBandWidthAlertInput interface {
	pulumi.Input

	ToDomainBandWidthAlertOutput() DomainBandWidthAlertOutput
	ToDomainBandWidthAlertOutputWithContext(context.Context) DomainBandWidthAlertOutput
}

type DomainBandWidthAlertArgs struct {
	// Alert percentage.
	AlertPercentage pulumi.IntPtrInput `pulumi:"alertPercentage"`
	// Switch alert.
	AlertSwitch pulumi.StringPtrInput `pulumi:"alertSwitch"`
	// threshold of bps.
	BpsThreshold pulumi.IntPtrInput `pulumi:"bpsThreshold"`
	// Counter measure.
	CounterMeasure pulumi.StringPtrInput `pulumi:"counterMeasure"`
	// Last trigger time.
	LastTriggerTime pulumi.StringPtrInput `pulumi:"lastTriggerTime"`
	// Last trigger time of overseas.
	LastTriggerTimeOverseas pulumi.StringPtrInput `pulumi:"lastTriggerTimeOverseas"`
	// Metric.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Specify statistic item configuration.
	StatisticItem DomainBandWidthAlertStatisticItemPtrInput `pulumi:"statisticItem"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainBandWidthAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainBandWidthAlert)(nil)).Elem()
}

func (i DomainBandWidthAlertArgs) ToDomainBandWidthAlertOutput() DomainBandWidthAlertOutput {
	return i.ToDomainBandWidthAlertOutputWithContext(context.Background())
}

func (i DomainBandWidthAlertArgs) ToDomainBandWidthAlertOutputWithContext(ctx context.Context) DomainBandWidthAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainBandWidthAlertOutput)
}

func (i DomainBandWidthAlertArgs) ToDomainBandWidthAlertPtrOutput() DomainBandWidthAlertPtrOutput {
	return i.ToDomainBandWidthAlertPtrOutputWithContext(context.Background())
}

func (i DomainBandWidthAlertArgs) ToDomainBandWidthAlertPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainBandWidthAlertOutput).ToDomainBandWidthAlertPtrOutputWithContext(ctx)
}

// DomainBandWidthAlertPtrInput is an input type that accepts DomainBandWidthAlertArgs, DomainBandWidthAlertPtr and DomainBandWidthAlertPtrOutput values.
// You can construct a concrete instance of `DomainBandWidthAlertPtrInput` via:
//
//	        DomainBandWidthAlertArgs{...}
//
//	or:
//
//	        nil
type DomainBandWidthAlertPtrInput interface {
	pulumi.Input

	ToDomainBandWidthAlertPtrOutput() DomainBandWidthAlertPtrOutput
	ToDomainBandWidthAlertPtrOutputWithContext(context.Context) DomainBandWidthAlertPtrOutput
}

type domainBandWidthAlertPtrType DomainBandWidthAlertArgs

func DomainBandWidthAlertPtr(v *DomainBandWidthAlertArgs) DomainBandWidthAlertPtrInput {
	return (*domainBandWidthAlertPtrType)(v)
}

func (*domainBandWidthAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainBandWidthAlert)(nil)).Elem()
}

func (i *domainBandWidthAlertPtrType) ToDomainBandWidthAlertPtrOutput() DomainBandWidthAlertPtrOutput {
	return i.ToDomainBandWidthAlertPtrOutputWithContext(context.Background())
}

func (i *domainBandWidthAlertPtrType) ToDomainBandWidthAlertPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainBandWidthAlertPtrOutput)
}

type DomainBandWidthAlertOutput struct{ *pulumi.OutputState }

func (DomainBandWidthAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainBandWidthAlert)(nil)).Elem()
}

func (o DomainBandWidthAlertOutput) ToDomainBandWidthAlertOutput() DomainBandWidthAlertOutput {
	return o
}

func (o DomainBandWidthAlertOutput) ToDomainBandWidthAlertOutputWithContext(ctx context.Context) DomainBandWidthAlertOutput {
	return o
}

func (o DomainBandWidthAlertOutput) ToDomainBandWidthAlertPtrOutput() DomainBandWidthAlertPtrOutput {
	return o.ToDomainBandWidthAlertPtrOutputWithContext(context.Background())
}

func (o DomainBandWidthAlertOutput) ToDomainBandWidthAlertPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainBandWidthAlert) *DomainBandWidthAlert {
		return &v
	}).(DomainBandWidthAlertPtrOutput)
}

// Alert percentage.
func (o DomainBandWidthAlertOutput) AlertPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *int { return v.AlertPercentage }).(pulumi.IntPtrOutput)
}

// Switch alert.
func (o DomainBandWidthAlertOutput) AlertSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *string { return v.AlertSwitch }).(pulumi.StringPtrOutput)
}

// threshold of bps.
func (o DomainBandWidthAlertOutput) BpsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *int { return v.BpsThreshold }).(pulumi.IntPtrOutput)
}

// Counter measure.
func (o DomainBandWidthAlertOutput) CounterMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *string { return v.CounterMeasure }).(pulumi.StringPtrOutput)
}

// Last trigger time.
func (o DomainBandWidthAlertOutput) LastTriggerTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *string { return v.LastTriggerTime }).(pulumi.StringPtrOutput)
}

// Last trigger time of overseas.
func (o DomainBandWidthAlertOutput) LastTriggerTimeOverseas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *string { return v.LastTriggerTimeOverseas }).(pulumi.StringPtrOutput)
}

// Metric.
func (o DomainBandWidthAlertOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Specify statistic item configuration.
func (o DomainBandWidthAlertOutput) StatisticItem() DomainBandWidthAlertStatisticItemPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) *DomainBandWidthAlertStatisticItem { return v.StatisticItem }).(DomainBandWidthAlertStatisticItemPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainBandWidthAlertOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainBandWidthAlert) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainBandWidthAlertPtrOutput struct{ *pulumi.OutputState }

func (DomainBandWidthAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainBandWidthAlert)(nil)).Elem()
}

func (o DomainBandWidthAlertPtrOutput) ToDomainBandWidthAlertPtrOutput() DomainBandWidthAlertPtrOutput {
	return o
}

func (o DomainBandWidthAlertPtrOutput) ToDomainBandWidthAlertPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertPtrOutput {
	return o
}

func (o DomainBandWidthAlertPtrOutput) Elem() DomainBandWidthAlertOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) DomainBandWidthAlert {
		if v != nil {
			return *v
		}
		var ret DomainBandWidthAlert
		return ret
	}).(DomainBandWidthAlertOutput)
}

// Alert percentage.
func (o DomainBandWidthAlertPtrOutput) AlertPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *int {
		if v == nil {
			return nil
		}
		return v.AlertPercentage
	}).(pulumi.IntPtrOutput)
}

// Switch alert.
func (o DomainBandWidthAlertPtrOutput) AlertSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *string {
		if v == nil {
			return nil
		}
		return v.AlertSwitch
	}).(pulumi.StringPtrOutput)
}

// threshold of bps.
func (o DomainBandWidthAlertPtrOutput) BpsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *int {
		if v == nil {
			return nil
		}
		return v.BpsThreshold
	}).(pulumi.IntPtrOutput)
}

// Counter measure.
func (o DomainBandWidthAlertPtrOutput) CounterMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *string {
		if v == nil {
			return nil
		}
		return v.CounterMeasure
	}).(pulumi.StringPtrOutput)
}

// Last trigger time.
func (o DomainBandWidthAlertPtrOutput) LastTriggerTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *string {
		if v == nil {
			return nil
		}
		return v.LastTriggerTime
	}).(pulumi.StringPtrOutput)
}

// Last trigger time of overseas.
func (o DomainBandWidthAlertPtrOutput) LastTriggerTimeOverseas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *string {
		if v == nil {
			return nil
		}
		return v.LastTriggerTimeOverseas
	}).(pulumi.StringPtrOutput)
}

// Metric.
func (o DomainBandWidthAlertPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

// Specify statistic item configuration.
func (o DomainBandWidthAlertPtrOutput) StatisticItem() DomainBandWidthAlertStatisticItemPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *DomainBandWidthAlertStatisticItem {
		if v == nil {
			return nil
		}
		return v.StatisticItem
	}).(DomainBandWidthAlertStatisticItemPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainBandWidthAlertPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlert) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainBandWidthAlertStatisticItem struct {
	// Alert percentage.
	AlertPercentage *int `pulumi:"alertPercentage"`
	// Switch alert.
	AlertSwitch *string `pulumi:"alertSwitch"`
	// threshold of bps.
	BpsThreshold *int `pulumi:"bpsThreshold"`
	// Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
	CounterMeasure *string `pulumi:"counterMeasure"`
	// Cycle of checking in minutes, values `60`, `1440`.
	Cycle *int `pulumi:"cycle"`
	// Metric.
	Metric *string `pulumi:"metric"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
	// Type of statistic item.
	Type *string `pulumi:"type"`
	// Time of auto unblock.
	UnblockTime *int `pulumi:"unblockTime"`
}

// DomainBandWidthAlertStatisticItemInput is an input type that accepts DomainBandWidthAlertStatisticItemArgs and DomainBandWidthAlertStatisticItemOutput values.
// You can construct a concrete instance of `DomainBandWidthAlertStatisticItemInput` via:
//
//	DomainBandWidthAlertStatisticItemArgs{...}
type DomainBandWidthAlertStatisticItemInput interface {
	pulumi.Input

	ToDomainBandWidthAlertStatisticItemOutput() DomainBandWidthAlertStatisticItemOutput
	ToDomainBandWidthAlertStatisticItemOutputWithContext(context.Context) DomainBandWidthAlertStatisticItemOutput
}

type DomainBandWidthAlertStatisticItemArgs struct {
	// Alert percentage.
	AlertPercentage pulumi.IntPtrInput `pulumi:"alertPercentage"`
	// Switch alert.
	AlertSwitch pulumi.StringPtrInput `pulumi:"alertSwitch"`
	// threshold of bps.
	BpsThreshold pulumi.IntPtrInput `pulumi:"bpsThreshold"`
	// Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
	CounterMeasure pulumi.StringPtrInput `pulumi:"counterMeasure"`
	// Cycle of checking in minutes, values `60`, `1440`.
	Cycle pulumi.IntPtrInput `pulumi:"cycle"`
	// Metric.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
	// Type of statistic item.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Time of auto unblock.
	UnblockTime pulumi.IntPtrInput `pulumi:"unblockTime"`
}

func (DomainBandWidthAlertStatisticItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainBandWidthAlertStatisticItem)(nil)).Elem()
}

func (i DomainBandWidthAlertStatisticItemArgs) ToDomainBandWidthAlertStatisticItemOutput() DomainBandWidthAlertStatisticItemOutput {
	return i.ToDomainBandWidthAlertStatisticItemOutputWithContext(context.Background())
}

func (i DomainBandWidthAlertStatisticItemArgs) ToDomainBandWidthAlertStatisticItemOutputWithContext(ctx context.Context) DomainBandWidthAlertStatisticItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainBandWidthAlertStatisticItemOutput)
}

func (i DomainBandWidthAlertStatisticItemArgs) ToDomainBandWidthAlertStatisticItemPtrOutput() DomainBandWidthAlertStatisticItemPtrOutput {
	return i.ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(context.Background())
}

func (i DomainBandWidthAlertStatisticItemArgs) ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertStatisticItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainBandWidthAlertStatisticItemOutput).ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(ctx)
}

// DomainBandWidthAlertStatisticItemPtrInput is an input type that accepts DomainBandWidthAlertStatisticItemArgs, DomainBandWidthAlertStatisticItemPtr and DomainBandWidthAlertStatisticItemPtrOutput values.
// You can construct a concrete instance of `DomainBandWidthAlertStatisticItemPtrInput` via:
//
//	        DomainBandWidthAlertStatisticItemArgs{...}
//
//	or:
//
//	        nil
type DomainBandWidthAlertStatisticItemPtrInput interface {
	pulumi.Input

	ToDomainBandWidthAlertStatisticItemPtrOutput() DomainBandWidthAlertStatisticItemPtrOutput
	ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(context.Context) DomainBandWidthAlertStatisticItemPtrOutput
}

type domainBandWidthAlertStatisticItemPtrType DomainBandWidthAlertStatisticItemArgs

func DomainBandWidthAlertStatisticItemPtr(v *DomainBandWidthAlertStatisticItemArgs) DomainBandWidthAlertStatisticItemPtrInput {
	return (*domainBandWidthAlertStatisticItemPtrType)(v)
}

func (*domainBandWidthAlertStatisticItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainBandWidthAlertStatisticItem)(nil)).Elem()
}

func (i *domainBandWidthAlertStatisticItemPtrType) ToDomainBandWidthAlertStatisticItemPtrOutput() DomainBandWidthAlertStatisticItemPtrOutput {
	return i.ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(context.Background())
}

func (i *domainBandWidthAlertStatisticItemPtrType) ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertStatisticItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainBandWidthAlertStatisticItemPtrOutput)
}

type DomainBandWidthAlertStatisticItemOutput struct{ *pulumi.OutputState }

func (DomainBandWidthAlertStatisticItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainBandWidthAlertStatisticItem)(nil)).Elem()
}

func (o DomainBandWidthAlertStatisticItemOutput) ToDomainBandWidthAlertStatisticItemOutput() DomainBandWidthAlertStatisticItemOutput {
	return o
}

func (o DomainBandWidthAlertStatisticItemOutput) ToDomainBandWidthAlertStatisticItemOutputWithContext(ctx context.Context) DomainBandWidthAlertStatisticItemOutput {
	return o
}

func (o DomainBandWidthAlertStatisticItemOutput) ToDomainBandWidthAlertStatisticItemPtrOutput() DomainBandWidthAlertStatisticItemPtrOutput {
	return o.ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(context.Background())
}

func (o DomainBandWidthAlertStatisticItemOutput) ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertStatisticItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainBandWidthAlertStatisticItem) *DomainBandWidthAlertStatisticItem {
		return &v
	}).(DomainBandWidthAlertStatisticItemPtrOutput)
}

// Alert percentage.
func (o DomainBandWidthAlertStatisticItemOutput) AlertPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *int { return v.AlertPercentage }).(pulumi.IntPtrOutput)
}

// Switch alert.
func (o DomainBandWidthAlertStatisticItemOutput) AlertSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *string { return v.AlertSwitch }).(pulumi.StringPtrOutput)
}

// threshold of bps.
func (o DomainBandWidthAlertStatisticItemOutput) BpsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *int { return v.BpsThreshold }).(pulumi.IntPtrOutput)
}

// Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
func (o DomainBandWidthAlertStatisticItemOutput) CounterMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *string { return v.CounterMeasure }).(pulumi.StringPtrOutput)
}

// Cycle of checking in minutes, values `60`, `1440`.
func (o DomainBandWidthAlertStatisticItemOutput) Cycle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *int { return v.Cycle }).(pulumi.IntPtrOutput)
}

// Metric.
func (o DomainBandWidthAlertStatisticItemOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainBandWidthAlertStatisticItemOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) string { return v.Switch }).(pulumi.StringOutput)
}

// Type of statistic item.
func (o DomainBandWidthAlertStatisticItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Time of auto unblock.
func (o DomainBandWidthAlertStatisticItemOutput) UnblockTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainBandWidthAlertStatisticItem) *int { return v.UnblockTime }).(pulumi.IntPtrOutput)
}

type DomainBandWidthAlertStatisticItemPtrOutput struct{ *pulumi.OutputState }

func (DomainBandWidthAlertStatisticItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainBandWidthAlertStatisticItem)(nil)).Elem()
}

func (o DomainBandWidthAlertStatisticItemPtrOutput) ToDomainBandWidthAlertStatisticItemPtrOutput() DomainBandWidthAlertStatisticItemPtrOutput {
	return o
}

func (o DomainBandWidthAlertStatisticItemPtrOutput) ToDomainBandWidthAlertStatisticItemPtrOutputWithContext(ctx context.Context) DomainBandWidthAlertStatisticItemPtrOutput {
	return o
}

func (o DomainBandWidthAlertStatisticItemPtrOutput) Elem() DomainBandWidthAlertStatisticItemOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) DomainBandWidthAlertStatisticItem {
		if v != nil {
			return *v
		}
		var ret DomainBandWidthAlertStatisticItem
		return ret
	}).(DomainBandWidthAlertStatisticItemOutput)
}

// Alert percentage.
func (o DomainBandWidthAlertStatisticItemPtrOutput) AlertPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *int {
		if v == nil {
			return nil
		}
		return v.AlertPercentage
	}).(pulumi.IntPtrOutput)
}

// Switch alert.
func (o DomainBandWidthAlertStatisticItemPtrOutput) AlertSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *string {
		if v == nil {
			return nil
		}
		return v.AlertSwitch
	}).(pulumi.StringPtrOutput)
}

// threshold of bps.
func (o DomainBandWidthAlertStatisticItemPtrOutput) BpsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *int {
		if v == nil {
			return nil
		}
		return v.BpsThreshold
	}).(pulumi.IntPtrOutput)
}

// Counter measure, values: `RETURN_404`, `RESOLVE_DNS_TO_ORIGIN`.
func (o DomainBandWidthAlertStatisticItemPtrOutput) CounterMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *string {
		if v == nil {
			return nil
		}
		return v.CounterMeasure
	}).(pulumi.StringPtrOutput)
}

// Cycle of checking in minutes, values `60`, `1440`.
func (o DomainBandWidthAlertStatisticItemPtrOutput) Cycle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *int {
		if v == nil {
			return nil
		}
		return v.Cycle
	}).(pulumi.IntPtrOutput)
}

// Metric.
func (o DomainBandWidthAlertStatisticItemPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainBandWidthAlertStatisticItemPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

// Type of statistic item.
func (o DomainBandWidthAlertStatisticItemPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Time of auto unblock.
func (o DomainBandWidthAlertStatisticItemPtrOutput) UnblockTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainBandWidthAlertStatisticItem) *int {
		if v == nil {
			return nil
		}
		return v.UnblockTime
	}).(pulumi.IntPtrOutput)
}

type DomainCacheKey struct {
	// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
	FullUrlCache *string `pulumi:"fullUrlCache"`
	// Specifies whether the cache key is case sensitive.
	IgnoreCase *string `pulumi:"ignoreCase"`
	// Path-specific cache key configuration.
	KeyRules []DomainCacheKeyKeyRule `pulumi:"keyRules"`
	// Request parameter contained in CacheKey.
	QueryString *DomainCacheKeyQueryString `pulumi:"queryString"`
}

// DomainCacheKeyInput is an input type that accepts DomainCacheKeyArgs and DomainCacheKeyOutput values.
// You can construct a concrete instance of `DomainCacheKeyInput` via:
//
//	DomainCacheKeyArgs{...}
type DomainCacheKeyInput interface {
	pulumi.Input

	ToDomainCacheKeyOutput() DomainCacheKeyOutput
	ToDomainCacheKeyOutputWithContext(context.Context) DomainCacheKeyOutput
}

type DomainCacheKeyArgs struct {
	// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
	FullUrlCache pulumi.StringPtrInput `pulumi:"fullUrlCache"`
	// Specifies whether the cache key is case sensitive.
	IgnoreCase pulumi.StringPtrInput `pulumi:"ignoreCase"`
	// Path-specific cache key configuration.
	KeyRules DomainCacheKeyKeyRuleArrayInput `pulumi:"keyRules"`
	// Request parameter contained in CacheKey.
	QueryString DomainCacheKeyQueryStringPtrInput `pulumi:"queryString"`
}

func (DomainCacheKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKey)(nil)).Elem()
}

func (i DomainCacheKeyArgs) ToDomainCacheKeyOutput() DomainCacheKeyOutput {
	return i.ToDomainCacheKeyOutputWithContext(context.Background())
}

func (i DomainCacheKeyArgs) ToDomainCacheKeyOutputWithContext(ctx context.Context) DomainCacheKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyOutput)
}

func (i DomainCacheKeyArgs) ToDomainCacheKeyPtrOutput() DomainCacheKeyPtrOutput {
	return i.ToDomainCacheKeyPtrOutputWithContext(context.Background())
}

func (i DomainCacheKeyArgs) ToDomainCacheKeyPtrOutputWithContext(ctx context.Context) DomainCacheKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyOutput).ToDomainCacheKeyPtrOutputWithContext(ctx)
}

// DomainCacheKeyPtrInput is an input type that accepts DomainCacheKeyArgs, DomainCacheKeyPtr and DomainCacheKeyPtrOutput values.
// You can construct a concrete instance of `DomainCacheKeyPtrInput` via:
//
//	        DomainCacheKeyArgs{...}
//
//	or:
//
//	        nil
type DomainCacheKeyPtrInput interface {
	pulumi.Input

	ToDomainCacheKeyPtrOutput() DomainCacheKeyPtrOutput
	ToDomainCacheKeyPtrOutputWithContext(context.Context) DomainCacheKeyPtrOutput
}

type domainCacheKeyPtrType DomainCacheKeyArgs

func DomainCacheKeyPtr(v *DomainCacheKeyArgs) DomainCacheKeyPtrInput {
	return (*domainCacheKeyPtrType)(v)
}

func (*domainCacheKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCacheKey)(nil)).Elem()
}

func (i *domainCacheKeyPtrType) ToDomainCacheKeyPtrOutput() DomainCacheKeyPtrOutput {
	return i.ToDomainCacheKeyPtrOutputWithContext(context.Background())
}

func (i *domainCacheKeyPtrType) ToDomainCacheKeyPtrOutputWithContext(ctx context.Context) DomainCacheKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyPtrOutput)
}

type DomainCacheKeyOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKey)(nil)).Elem()
}

func (o DomainCacheKeyOutput) ToDomainCacheKeyOutput() DomainCacheKeyOutput {
	return o
}

func (o DomainCacheKeyOutput) ToDomainCacheKeyOutputWithContext(ctx context.Context) DomainCacheKeyOutput {
	return o
}

func (o DomainCacheKeyOutput) ToDomainCacheKeyPtrOutput() DomainCacheKeyPtrOutput {
	return o.ToDomainCacheKeyPtrOutputWithContext(context.Background())
}

func (o DomainCacheKeyOutput) ToDomainCacheKeyPtrOutputWithContext(ctx context.Context) DomainCacheKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCacheKey) *DomainCacheKey {
		return &v
	}).(DomainCacheKeyPtrOutput)
}

// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
func (o DomainCacheKeyOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKey) *string { return v.FullUrlCache }).(pulumi.StringPtrOutput)
}

// Specifies whether the cache key is case sensitive.
func (o DomainCacheKeyOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKey) *string { return v.IgnoreCase }).(pulumi.StringPtrOutput)
}

// Path-specific cache key configuration.
func (o DomainCacheKeyOutput) KeyRules() DomainCacheKeyKeyRuleArrayOutput {
	return o.ApplyT(func(v DomainCacheKey) []DomainCacheKeyKeyRule { return v.KeyRules }).(DomainCacheKeyKeyRuleArrayOutput)
}

// Request parameter contained in CacheKey.
func (o DomainCacheKeyOutput) QueryString() DomainCacheKeyQueryStringPtrOutput {
	return o.ApplyT(func(v DomainCacheKey) *DomainCacheKeyQueryString { return v.QueryString }).(DomainCacheKeyQueryStringPtrOutput)
}

type DomainCacheKeyPtrOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCacheKey)(nil)).Elem()
}

func (o DomainCacheKeyPtrOutput) ToDomainCacheKeyPtrOutput() DomainCacheKeyPtrOutput {
	return o
}

func (o DomainCacheKeyPtrOutput) ToDomainCacheKeyPtrOutputWithContext(ctx context.Context) DomainCacheKeyPtrOutput {
	return o
}

func (o DomainCacheKeyPtrOutput) Elem() DomainCacheKeyOutput {
	return o.ApplyT(func(v *DomainCacheKey) DomainCacheKey {
		if v != nil {
			return *v
		}
		var ret DomainCacheKey
		return ret
	}).(DomainCacheKeyOutput)
}

// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
func (o DomainCacheKeyPtrOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKey) *string {
		if v == nil {
			return nil
		}
		return v.FullUrlCache
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the cache key is case sensitive.
func (o DomainCacheKeyPtrOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKey) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.StringPtrOutput)
}

// Path-specific cache key configuration.
func (o DomainCacheKeyPtrOutput) KeyRules() DomainCacheKeyKeyRuleArrayOutput {
	return o.ApplyT(func(v *DomainCacheKey) []DomainCacheKeyKeyRule {
		if v == nil {
			return nil
		}
		return v.KeyRules
	}).(DomainCacheKeyKeyRuleArrayOutput)
}

// Request parameter contained in CacheKey.
func (o DomainCacheKeyPtrOutput) QueryString() DomainCacheKeyQueryStringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKey) *DomainCacheKeyQueryString {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(DomainCacheKeyQueryStringPtrOutput)
}

type DomainCacheKeyKeyRule struct {
	// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
	FullUrlCache *string `pulumi:"fullUrlCache"`
	// Whether caches are case insensitive.
	IgnoreCase *string `pulumi:"ignoreCase"`
	// Request parameter contained in CacheKey.
	QueryString DomainCacheKeyKeyRuleQueryString `pulumi:"queryString"`
	// List of rule paths for each `keyRules`: `/` for `index`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	RulePaths []string `pulumi:"rulePaths"`
	// Specify rule tag, default value is `user`.
	RuleTag *string `pulumi:"ruleTag"`
	// Rule type, available: `file`, `directory`, `path`, `index`.
	RuleType string `pulumi:"ruleType"`
}

// DomainCacheKeyKeyRuleInput is an input type that accepts DomainCacheKeyKeyRuleArgs and DomainCacheKeyKeyRuleOutput values.
// You can construct a concrete instance of `DomainCacheKeyKeyRuleInput` via:
//
//	DomainCacheKeyKeyRuleArgs{...}
type DomainCacheKeyKeyRuleInput interface {
	pulumi.Input

	ToDomainCacheKeyKeyRuleOutput() DomainCacheKeyKeyRuleOutput
	ToDomainCacheKeyKeyRuleOutputWithContext(context.Context) DomainCacheKeyKeyRuleOutput
}

type DomainCacheKeyKeyRuleArgs struct {
	// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
	FullUrlCache pulumi.StringPtrInput `pulumi:"fullUrlCache"`
	// Whether caches are case insensitive.
	IgnoreCase pulumi.StringPtrInput `pulumi:"ignoreCase"`
	// Request parameter contained in CacheKey.
	QueryString DomainCacheKeyKeyRuleQueryStringInput `pulumi:"queryString"`
	// List of rule paths for each `keyRules`: `/` for `index`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Specify rule tag, default value is `user`.
	RuleTag pulumi.StringPtrInput `pulumi:"ruleTag"`
	// Rule type, available: `file`, `directory`, `path`, `index`.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (DomainCacheKeyKeyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKeyKeyRule)(nil)).Elem()
}

func (i DomainCacheKeyKeyRuleArgs) ToDomainCacheKeyKeyRuleOutput() DomainCacheKeyKeyRuleOutput {
	return i.ToDomainCacheKeyKeyRuleOutputWithContext(context.Background())
}

func (i DomainCacheKeyKeyRuleArgs) ToDomainCacheKeyKeyRuleOutputWithContext(ctx context.Context) DomainCacheKeyKeyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyKeyRuleOutput)
}

// DomainCacheKeyKeyRuleArrayInput is an input type that accepts DomainCacheKeyKeyRuleArray and DomainCacheKeyKeyRuleArrayOutput values.
// You can construct a concrete instance of `DomainCacheKeyKeyRuleArrayInput` via:
//
//	DomainCacheKeyKeyRuleArray{ DomainCacheKeyKeyRuleArgs{...} }
type DomainCacheKeyKeyRuleArrayInput interface {
	pulumi.Input

	ToDomainCacheKeyKeyRuleArrayOutput() DomainCacheKeyKeyRuleArrayOutput
	ToDomainCacheKeyKeyRuleArrayOutputWithContext(context.Context) DomainCacheKeyKeyRuleArrayOutput
}

type DomainCacheKeyKeyRuleArray []DomainCacheKeyKeyRuleInput

func (DomainCacheKeyKeyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCacheKeyKeyRule)(nil)).Elem()
}

func (i DomainCacheKeyKeyRuleArray) ToDomainCacheKeyKeyRuleArrayOutput() DomainCacheKeyKeyRuleArrayOutput {
	return i.ToDomainCacheKeyKeyRuleArrayOutputWithContext(context.Background())
}

func (i DomainCacheKeyKeyRuleArray) ToDomainCacheKeyKeyRuleArrayOutputWithContext(ctx context.Context) DomainCacheKeyKeyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyKeyRuleArrayOutput)
}

type DomainCacheKeyKeyRuleOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyKeyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKeyKeyRule)(nil)).Elem()
}

func (o DomainCacheKeyKeyRuleOutput) ToDomainCacheKeyKeyRuleOutput() DomainCacheKeyKeyRuleOutput {
	return o
}

func (o DomainCacheKeyKeyRuleOutput) ToDomainCacheKeyKeyRuleOutputWithContext(ctx context.Context) DomainCacheKeyKeyRuleOutput {
	return o
}

// Whether to enable full-path cache, values `on` (DEFAULT ON), `off`.
func (o DomainCacheKeyKeyRuleOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRule) *string { return v.FullUrlCache }).(pulumi.StringPtrOutput)
}

// Whether caches are case insensitive.
func (o DomainCacheKeyKeyRuleOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRule) *string { return v.IgnoreCase }).(pulumi.StringPtrOutput)
}

// Request parameter contained in CacheKey.
func (o DomainCacheKeyKeyRuleOutput) QueryString() DomainCacheKeyKeyRuleQueryStringOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRule) DomainCacheKeyKeyRuleQueryString { return v.QueryString }).(DomainCacheKeyKeyRuleQueryStringOutput)
}

// List of rule paths for each `keyRules`: `/` for `index`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
func (o DomainCacheKeyKeyRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Specify rule tag, default value is `user`.
func (o DomainCacheKeyKeyRuleOutput) RuleTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRule) *string { return v.RuleTag }).(pulumi.StringPtrOutput)
}

// Rule type, available: `file`, `directory`, `path`, `index`.
func (o DomainCacheKeyKeyRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type DomainCacheKeyKeyRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyKeyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCacheKeyKeyRule)(nil)).Elem()
}

func (o DomainCacheKeyKeyRuleArrayOutput) ToDomainCacheKeyKeyRuleArrayOutput() DomainCacheKeyKeyRuleArrayOutput {
	return o
}

func (o DomainCacheKeyKeyRuleArrayOutput) ToDomainCacheKeyKeyRuleArrayOutputWithContext(ctx context.Context) DomainCacheKeyKeyRuleArrayOutput {
	return o
}

func (o DomainCacheKeyKeyRuleArrayOutput) Index(i pulumi.IntInput) DomainCacheKeyKeyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainCacheKeyKeyRule {
		return vs[0].([]DomainCacheKeyKeyRule)[vs[1].(int)]
	}).(DomainCacheKeyKeyRuleOutput)
}

type DomainCacheKeyKeyRuleQueryString struct {
	// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
	Action *string `pulumi:"action"`
	// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
	Switch *string `pulumi:"switch"`
	// Array of included/excluded query strings (separated by `;`).
	Value *string `pulumi:"value"`
}

// DomainCacheKeyKeyRuleQueryStringInput is an input type that accepts DomainCacheKeyKeyRuleQueryStringArgs and DomainCacheKeyKeyRuleQueryStringOutput values.
// You can construct a concrete instance of `DomainCacheKeyKeyRuleQueryStringInput` via:
//
//	DomainCacheKeyKeyRuleQueryStringArgs{...}
type DomainCacheKeyKeyRuleQueryStringInput interface {
	pulumi.Input

	ToDomainCacheKeyKeyRuleQueryStringOutput() DomainCacheKeyKeyRuleQueryStringOutput
	ToDomainCacheKeyKeyRuleQueryStringOutputWithContext(context.Context) DomainCacheKeyKeyRuleQueryStringOutput
}

type DomainCacheKeyKeyRuleQueryStringArgs struct {
	// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
	Switch pulumi.StringPtrInput `pulumi:"switch"`
	// Array of included/excluded query strings (separated by `;`).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DomainCacheKeyKeyRuleQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKeyKeyRuleQueryString)(nil)).Elem()
}

func (i DomainCacheKeyKeyRuleQueryStringArgs) ToDomainCacheKeyKeyRuleQueryStringOutput() DomainCacheKeyKeyRuleQueryStringOutput {
	return i.ToDomainCacheKeyKeyRuleQueryStringOutputWithContext(context.Background())
}

func (i DomainCacheKeyKeyRuleQueryStringArgs) ToDomainCacheKeyKeyRuleQueryStringOutputWithContext(ctx context.Context) DomainCacheKeyKeyRuleQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyKeyRuleQueryStringOutput)
}

type DomainCacheKeyKeyRuleQueryStringOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyKeyRuleQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKeyKeyRuleQueryString)(nil)).Elem()
}

func (o DomainCacheKeyKeyRuleQueryStringOutput) ToDomainCacheKeyKeyRuleQueryStringOutput() DomainCacheKeyKeyRuleQueryStringOutput {
	return o
}

func (o DomainCacheKeyKeyRuleQueryStringOutput) ToDomainCacheKeyKeyRuleQueryStringOutputWithContext(ctx context.Context) DomainCacheKeyKeyRuleQueryStringOutput {
	return o
}

// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
func (o DomainCacheKeyKeyRuleQueryStringOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRuleQueryString) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
func (o DomainCacheKeyKeyRuleQueryStringOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRuleQueryString) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

// Array of included/excluded query strings (separated by `;`).
func (o DomainCacheKeyKeyRuleQueryStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyKeyRuleQueryString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DomainCacheKeyQueryString struct {
	// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
	Action *string `pulumi:"action"`
	// Whether to sort again, values `on`, `off` (Default).
	Reorder *string `pulumi:"reorder"`
	// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
	Switch *string `pulumi:"switch"`
	// Array of included/excluded query strings (separated by `;`).
	Value *string `pulumi:"value"`
}

// DomainCacheKeyQueryStringInput is an input type that accepts DomainCacheKeyQueryStringArgs and DomainCacheKeyQueryStringOutput values.
// You can construct a concrete instance of `DomainCacheKeyQueryStringInput` via:
//
//	DomainCacheKeyQueryStringArgs{...}
type DomainCacheKeyQueryStringInput interface {
	pulumi.Input

	ToDomainCacheKeyQueryStringOutput() DomainCacheKeyQueryStringOutput
	ToDomainCacheKeyQueryStringOutputWithContext(context.Context) DomainCacheKeyQueryStringOutput
}

type DomainCacheKeyQueryStringArgs struct {
	// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Whether to sort again, values `on`, `off` (Default).
	Reorder pulumi.StringPtrInput `pulumi:"reorder"`
	// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
	Switch pulumi.StringPtrInput `pulumi:"switch"`
	// Array of included/excluded query strings (separated by `;`).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DomainCacheKeyQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKeyQueryString)(nil)).Elem()
}

func (i DomainCacheKeyQueryStringArgs) ToDomainCacheKeyQueryStringOutput() DomainCacheKeyQueryStringOutput {
	return i.ToDomainCacheKeyQueryStringOutputWithContext(context.Background())
}

func (i DomainCacheKeyQueryStringArgs) ToDomainCacheKeyQueryStringOutputWithContext(ctx context.Context) DomainCacheKeyQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyQueryStringOutput)
}

func (i DomainCacheKeyQueryStringArgs) ToDomainCacheKeyQueryStringPtrOutput() DomainCacheKeyQueryStringPtrOutput {
	return i.ToDomainCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (i DomainCacheKeyQueryStringArgs) ToDomainCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) DomainCacheKeyQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyQueryStringOutput).ToDomainCacheKeyQueryStringPtrOutputWithContext(ctx)
}

// DomainCacheKeyQueryStringPtrInput is an input type that accepts DomainCacheKeyQueryStringArgs, DomainCacheKeyQueryStringPtr and DomainCacheKeyQueryStringPtrOutput values.
// You can construct a concrete instance of `DomainCacheKeyQueryStringPtrInput` via:
//
//	        DomainCacheKeyQueryStringArgs{...}
//
//	or:
//
//	        nil
type DomainCacheKeyQueryStringPtrInput interface {
	pulumi.Input

	ToDomainCacheKeyQueryStringPtrOutput() DomainCacheKeyQueryStringPtrOutput
	ToDomainCacheKeyQueryStringPtrOutputWithContext(context.Context) DomainCacheKeyQueryStringPtrOutput
}

type domainCacheKeyQueryStringPtrType DomainCacheKeyQueryStringArgs

func DomainCacheKeyQueryStringPtr(v *DomainCacheKeyQueryStringArgs) DomainCacheKeyQueryStringPtrInput {
	return (*domainCacheKeyQueryStringPtrType)(v)
}

func (*domainCacheKeyQueryStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCacheKeyQueryString)(nil)).Elem()
}

func (i *domainCacheKeyQueryStringPtrType) ToDomainCacheKeyQueryStringPtrOutput() DomainCacheKeyQueryStringPtrOutput {
	return i.ToDomainCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (i *domainCacheKeyQueryStringPtrType) ToDomainCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) DomainCacheKeyQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCacheKeyQueryStringPtrOutput)
}

type DomainCacheKeyQueryStringOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCacheKeyQueryString)(nil)).Elem()
}

func (o DomainCacheKeyQueryStringOutput) ToDomainCacheKeyQueryStringOutput() DomainCacheKeyQueryStringOutput {
	return o
}

func (o DomainCacheKeyQueryStringOutput) ToDomainCacheKeyQueryStringOutputWithContext(ctx context.Context) DomainCacheKeyQueryStringOutput {
	return o
}

func (o DomainCacheKeyQueryStringOutput) ToDomainCacheKeyQueryStringPtrOutput() DomainCacheKeyQueryStringPtrOutput {
	return o.ToDomainCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (o DomainCacheKeyQueryStringOutput) ToDomainCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) DomainCacheKeyQueryStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCacheKeyQueryString) *DomainCacheKeyQueryString {
		return &v
	}).(DomainCacheKeyQueryStringPtrOutput)
}

// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
func (o DomainCacheKeyQueryStringOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyQueryString) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Whether to sort again, values `on`, `off` (Default).
func (o DomainCacheKeyQueryStringOutput) Reorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyQueryString) *string { return v.Reorder }).(pulumi.StringPtrOutput)
}

// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
func (o DomainCacheKeyQueryStringOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyQueryString) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

// Array of included/excluded query strings (separated by `;`).
func (o DomainCacheKeyQueryStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCacheKeyQueryString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DomainCacheKeyQueryStringPtrOutput struct{ *pulumi.OutputState }

func (DomainCacheKeyQueryStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCacheKeyQueryString)(nil)).Elem()
}

func (o DomainCacheKeyQueryStringPtrOutput) ToDomainCacheKeyQueryStringPtrOutput() DomainCacheKeyQueryStringPtrOutput {
	return o
}

func (o DomainCacheKeyQueryStringPtrOutput) ToDomainCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) DomainCacheKeyQueryStringPtrOutput {
	return o
}

func (o DomainCacheKeyQueryStringPtrOutput) Elem() DomainCacheKeyQueryStringOutput {
	return o.ApplyT(func(v *DomainCacheKeyQueryString) DomainCacheKeyQueryString {
		if v != nil {
			return *v
		}
		var ret DomainCacheKeyQueryString
		return ret
	}).(DomainCacheKeyQueryStringOutput)
}

// Specify key rule QS action, values: `includeCustom`, `excludeCustom`.
func (o DomainCacheKeyQueryStringPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Whether to sort again, values `on`, `off` (Default).
func (o DomainCacheKeyQueryStringPtrOutput) Reorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return v.Reorder
	}).(pulumi.StringPtrOutput)
}

// Whether to use QueryString as part of CacheKey, values `on`, `off` (Default).
func (o DomainCacheKeyQueryStringPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

// Array of included/excluded query strings (separated by `;`).
func (o DomainCacheKeyQueryStringPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type DomainCompression struct {
	// List of compression rules.
	CompressionRules []DomainCompressionCompressionRule `pulumi:"compressionRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainCompressionInput is an input type that accepts DomainCompressionArgs and DomainCompressionOutput values.
// You can construct a concrete instance of `DomainCompressionInput` via:
//
//	DomainCompressionArgs{...}
type DomainCompressionInput interface {
	pulumi.Input

	ToDomainCompressionOutput() DomainCompressionOutput
	ToDomainCompressionOutputWithContext(context.Context) DomainCompressionOutput
}

type DomainCompressionArgs struct {
	// List of compression rules.
	CompressionRules DomainCompressionCompressionRuleArrayInput `pulumi:"compressionRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCompression)(nil)).Elem()
}

func (i DomainCompressionArgs) ToDomainCompressionOutput() DomainCompressionOutput {
	return i.ToDomainCompressionOutputWithContext(context.Background())
}

func (i DomainCompressionArgs) ToDomainCompressionOutputWithContext(ctx context.Context) DomainCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCompressionOutput)
}

func (i DomainCompressionArgs) ToDomainCompressionPtrOutput() DomainCompressionPtrOutput {
	return i.ToDomainCompressionPtrOutputWithContext(context.Background())
}

func (i DomainCompressionArgs) ToDomainCompressionPtrOutputWithContext(ctx context.Context) DomainCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCompressionOutput).ToDomainCompressionPtrOutputWithContext(ctx)
}

// DomainCompressionPtrInput is an input type that accepts DomainCompressionArgs, DomainCompressionPtr and DomainCompressionPtrOutput values.
// You can construct a concrete instance of `DomainCompressionPtrInput` via:
//
//	        DomainCompressionArgs{...}
//
//	or:
//
//	        nil
type DomainCompressionPtrInput interface {
	pulumi.Input

	ToDomainCompressionPtrOutput() DomainCompressionPtrOutput
	ToDomainCompressionPtrOutputWithContext(context.Context) DomainCompressionPtrOutput
}

type domainCompressionPtrType DomainCompressionArgs

func DomainCompressionPtr(v *DomainCompressionArgs) DomainCompressionPtrInput {
	return (*domainCompressionPtrType)(v)
}

func (*domainCompressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCompression)(nil)).Elem()
}

func (i *domainCompressionPtrType) ToDomainCompressionPtrOutput() DomainCompressionPtrOutput {
	return i.ToDomainCompressionPtrOutputWithContext(context.Background())
}

func (i *domainCompressionPtrType) ToDomainCompressionPtrOutputWithContext(ctx context.Context) DomainCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCompressionPtrOutput)
}

type DomainCompressionOutput struct{ *pulumi.OutputState }

func (DomainCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCompression)(nil)).Elem()
}

func (o DomainCompressionOutput) ToDomainCompressionOutput() DomainCompressionOutput {
	return o
}

func (o DomainCompressionOutput) ToDomainCompressionOutputWithContext(ctx context.Context) DomainCompressionOutput {
	return o
}

func (o DomainCompressionOutput) ToDomainCompressionPtrOutput() DomainCompressionPtrOutput {
	return o.ToDomainCompressionPtrOutputWithContext(context.Background())
}

func (o DomainCompressionOutput) ToDomainCompressionPtrOutputWithContext(ctx context.Context) DomainCompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCompression) *DomainCompression {
		return &v
	}).(DomainCompressionPtrOutput)
}

// List of compression rules.
func (o DomainCompressionOutput) CompressionRules() DomainCompressionCompressionRuleArrayOutput {
	return o.ApplyT(func(v DomainCompression) []DomainCompressionCompressionRule { return v.CompressionRules }).(DomainCompressionCompressionRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainCompressionOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCompression) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainCompressionPtrOutput struct{ *pulumi.OutputState }

func (DomainCompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCompression)(nil)).Elem()
}

func (o DomainCompressionPtrOutput) ToDomainCompressionPtrOutput() DomainCompressionPtrOutput {
	return o
}

func (o DomainCompressionPtrOutput) ToDomainCompressionPtrOutputWithContext(ctx context.Context) DomainCompressionPtrOutput {
	return o
}

func (o DomainCompressionPtrOutput) Elem() DomainCompressionOutput {
	return o.ApplyT(func(v *DomainCompression) DomainCompression {
		if v != nil {
			return *v
		}
		var ret DomainCompression
		return ret
	}).(DomainCompressionOutput)
}

// List of compression rules.
func (o DomainCompressionPtrOutput) CompressionRules() DomainCompressionCompressionRuleArrayOutput {
	return o.ApplyT(func(v *DomainCompression) []DomainCompressionCompressionRule {
		if v == nil {
			return nil
		}
		return v.CompressionRules
	}).(DomainCompressionCompressionRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainCompressionPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCompression) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainCompressionCompressionRule struct {
	// List of algorithms, available: `gzip` and `brotli`.
	Algorithms []string `pulumi:"algorithms"`
	// Must be set as true, enables compression.
	Compress bool `pulumi:"compress"`
	// List of file extensions like `jpg`, `txt`.
	FileExtensions []string `pulumi:"fileExtensions"`
	// The maximum file size to trigger compression (in bytes).
	MaxLength int `pulumi:"maxLength"`
	// The minimum file size to trigger compression (in bytes).
	MinLength int `pulumi:"minLength"`
	// List of rule paths for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	RulePaths []string `pulumi:"rulePaths"`
	// Rule type, available: `all`, `file`, `directory`, `path`, `contentType`.
	RuleType *string `pulumi:"ruleType"`
}

// DomainCompressionCompressionRuleInput is an input type that accepts DomainCompressionCompressionRuleArgs and DomainCompressionCompressionRuleOutput values.
// You can construct a concrete instance of `DomainCompressionCompressionRuleInput` via:
//
//	DomainCompressionCompressionRuleArgs{...}
type DomainCompressionCompressionRuleInput interface {
	pulumi.Input

	ToDomainCompressionCompressionRuleOutput() DomainCompressionCompressionRuleOutput
	ToDomainCompressionCompressionRuleOutputWithContext(context.Context) DomainCompressionCompressionRuleOutput
}

type DomainCompressionCompressionRuleArgs struct {
	// List of algorithms, available: `gzip` and `brotli`.
	Algorithms pulumi.StringArrayInput `pulumi:"algorithms"`
	// Must be set as true, enables compression.
	Compress pulumi.BoolInput `pulumi:"compress"`
	// List of file extensions like `jpg`, `txt`.
	FileExtensions pulumi.StringArrayInput `pulumi:"fileExtensions"`
	// The maximum file size to trigger compression (in bytes).
	MaxLength pulumi.IntInput `pulumi:"maxLength"`
	// The minimum file size to trigger compression (in bytes).
	MinLength pulumi.IntInput `pulumi:"minLength"`
	// List of rule paths for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Rule type, available: `all`, `file`, `directory`, `path`, `contentType`.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
}

func (DomainCompressionCompressionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCompressionCompressionRule)(nil)).Elem()
}

func (i DomainCompressionCompressionRuleArgs) ToDomainCompressionCompressionRuleOutput() DomainCompressionCompressionRuleOutput {
	return i.ToDomainCompressionCompressionRuleOutputWithContext(context.Background())
}

func (i DomainCompressionCompressionRuleArgs) ToDomainCompressionCompressionRuleOutputWithContext(ctx context.Context) DomainCompressionCompressionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCompressionCompressionRuleOutput)
}

// DomainCompressionCompressionRuleArrayInput is an input type that accepts DomainCompressionCompressionRuleArray and DomainCompressionCompressionRuleArrayOutput values.
// You can construct a concrete instance of `DomainCompressionCompressionRuleArrayInput` via:
//
//	DomainCompressionCompressionRuleArray{ DomainCompressionCompressionRuleArgs{...} }
type DomainCompressionCompressionRuleArrayInput interface {
	pulumi.Input

	ToDomainCompressionCompressionRuleArrayOutput() DomainCompressionCompressionRuleArrayOutput
	ToDomainCompressionCompressionRuleArrayOutputWithContext(context.Context) DomainCompressionCompressionRuleArrayOutput
}

type DomainCompressionCompressionRuleArray []DomainCompressionCompressionRuleInput

func (DomainCompressionCompressionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCompressionCompressionRule)(nil)).Elem()
}

func (i DomainCompressionCompressionRuleArray) ToDomainCompressionCompressionRuleArrayOutput() DomainCompressionCompressionRuleArrayOutput {
	return i.ToDomainCompressionCompressionRuleArrayOutputWithContext(context.Background())
}

func (i DomainCompressionCompressionRuleArray) ToDomainCompressionCompressionRuleArrayOutputWithContext(ctx context.Context) DomainCompressionCompressionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCompressionCompressionRuleArrayOutput)
}

type DomainCompressionCompressionRuleOutput struct{ *pulumi.OutputState }

func (DomainCompressionCompressionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCompressionCompressionRule)(nil)).Elem()
}

func (o DomainCompressionCompressionRuleOutput) ToDomainCompressionCompressionRuleOutput() DomainCompressionCompressionRuleOutput {
	return o
}

func (o DomainCompressionCompressionRuleOutput) ToDomainCompressionCompressionRuleOutputWithContext(ctx context.Context) DomainCompressionCompressionRuleOutput {
	return o
}

// List of algorithms, available: `gzip` and `brotli`.
func (o DomainCompressionCompressionRuleOutput) Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) []string { return v.Algorithms }).(pulumi.StringArrayOutput)
}

// Must be set as true, enables compression.
func (o DomainCompressionCompressionRuleOutput) Compress() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) bool { return v.Compress }).(pulumi.BoolOutput)
}

// List of file extensions like `jpg`, `txt`.
func (o DomainCompressionCompressionRuleOutput) FileExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) []string { return v.FileExtensions }).(pulumi.StringArrayOutput)
}

// The maximum file size to trigger compression (in bytes).
func (o DomainCompressionCompressionRuleOutput) MaxLength() pulumi.IntOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) int { return v.MaxLength }).(pulumi.IntOutput)
}

// The minimum file size to trigger compression (in bytes).
func (o DomainCompressionCompressionRuleOutput) MinLength() pulumi.IntOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) int { return v.MinLength }).(pulumi.IntOutput)
}

// List of rule paths for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
func (o DomainCompressionCompressionRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Rule type, available: `all`, `file`, `directory`, `path`, `contentType`.
func (o DomainCompressionCompressionRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCompressionCompressionRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

type DomainCompressionCompressionRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainCompressionCompressionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCompressionCompressionRule)(nil)).Elem()
}

func (o DomainCompressionCompressionRuleArrayOutput) ToDomainCompressionCompressionRuleArrayOutput() DomainCompressionCompressionRuleArrayOutput {
	return o
}

func (o DomainCompressionCompressionRuleArrayOutput) ToDomainCompressionCompressionRuleArrayOutputWithContext(ctx context.Context) DomainCompressionCompressionRuleArrayOutput {
	return o
}

func (o DomainCompressionCompressionRuleArrayOutput) Index(i pulumi.IntInput) DomainCompressionCompressionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainCompressionCompressionRule {
		return vs[0].([]DomainCompressionCompressionRule)[vs[1].(int)]
	}).(DomainCompressionCompressionRuleOutput)
}

type DomainDownstreamCapping struct {
	// List of capping rule.
	CappingRules []DomainDownstreamCappingCappingRule `pulumi:"cappingRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainDownstreamCappingInput is an input type that accepts DomainDownstreamCappingArgs and DomainDownstreamCappingOutput values.
// You can construct a concrete instance of `DomainDownstreamCappingInput` via:
//
//	DomainDownstreamCappingArgs{...}
type DomainDownstreamCappingInput interface {
	pulumi.Input

	ToDomainDownstreamCappingOutput() DomainDownstreamCappingOutput
	ToDomainDownstreamCappingOutputWithContext(context.Context) DomainDownstreamCappingOutput
}

type DomainDownstreamCappingArgs struct {
	// List of capping rule.
	CappingRules DomainDownstreamCappingCappingRuleArrayInput `pulumi:"cappingRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainDownstreamCappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDownstreamCapping)(nil)).Elem()
}

func (i DomainDownstreamCappingArgs) ToDomainDownstreamCappingOutput() DomainDownstreamCappingOutput {
	return i.ToDomainDownstreamCappingOutputWithContext(context.Background())
}

func (i DomainDownstreamCappingArgs) ToDomainDownstreamCappingOutputWithContext(ctx context.Context) DomainDownstreamCappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDownstreamCappingOutput)
}

func (i DomainDownstreamCappingArgs) ToDomainDownstreamCappingPtrOutput() DomainDownstreamCappingPtrOutput {
	return i.ToDomainDownstreamCappingPtrOutputWithContext(context.Background())
}

func (i DomainDownstreamCappingArgs) ToDomainDownstreamCappingPtrOutputWithContext(ctx context.Context) DomainDownstreamCappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDownstreamCappingOutput).ToDomainDownstreamCappingPtrOutputWithContext(ctx)
}

// DomainDownstreamCappingPtrInput is an input type that accepts DomainDownstreamCappingArgs, DomainDownstreamCappingPtr and DomainDownstreamCappingPtrOutput values.
// You can construct a concrete instance of `DomainDownstreamCappingPtrInput` via:
//
//	        DomainDownstreamCappingArgs{...}
//
//	or:
//
//	        nil
type DomainDownstreamCappingPtrInput interface {
	pulumi.Input

	ToDomainDownstreamCappingPtrOutput() DomainDownstreamCappingPtrOutput
	ToDomainDownstreamCappingPtrOutputWithContext(context.Context) DomainDownstreamCappingPtrOutput
}

type domainDownstreamCappingPtrType DomainDownstreamCappingArgs

func DomainDownstreamCappingPtr(v *DomainDownstreamCappingArgs) DomainDownstreamCappingPtrInput {
	return (*domainDownstreamCappingPtrType)(v)
}

func (*domainDownstreamCappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDownstreamCapping)(nil)).Elem()
}

func (i *domainDownstreamCappingPtrType) ToDomainDownstreamCappingPtrOutput() DomainDownstreamCappingPtrOutput {
	return i.ToDomainDownstreamCappingPtrOutputWithContext(context.Background())
}

func (i *domainDownstreamCappingPtrType) ToDomainDownstreamCappingPtrOutputWithContext(ctx context.Context) DomainDownstreamCappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDownstreamCappingPtrOutput)
}

type DomainDownstreamCappingOutput struct{ *pulumi.OutputState }

func (DomainDownstreamCappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDownstreamCapping)(nil)).Elem()
}

func (o DomainDownstreamCappingOutput) ToDomainDownstreamCappingOutput() DomainDownstreamCappingOutput {
	return o
}

func (o DomainDownstreamCappingOutput) ToDomainDownstreamCappingOutputWithContext(ctx context.Context) DomainDownstreamCappingOutput {
	return o
}

func (o DomainDownstreamCappingOutput) ToDomainDownstreamCappingPtrOutput() DomainDownstreamCappingPtrOutput {
	return o.ToDomainDownstreamCappingPtrOutputWithContext(context.Background())
}

func (o DomainDownstreamCappingOutput) ToDomainDownstreamCappingPtrOutputWithContext(ctx context.Context) DomainDownstreamCappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainDownstreamCapping) *DomainDownstreamCapping {
		return &v
	}).(DomainDownstreamCappingPtrOutput)
}

// List of capping rule.
func (o DomainDownstreamCappingOutput) CappingRules() DomainDownstreamCappingCappingRuleArrayOutput {
	return o.ApplyT(func(v DomainDownstreamCapping) []DomainDownstreamCappingCappingRule { return v.CappingRules }).(DomainDownstreamCappingCappingRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainDownstreamCappingOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainDownstreamCapping) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainDownstreamCappingPtrOutput struct{ *pulumi.OutputState }

func (DomainDownstreamCappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDownstreamCapping)(nil)).Elem()
}

func (o DomainDownstreamCappingPtrOutput) ToDomainDownstreamCappingPtrOutput() DomainDownstreamCappingPtrOutput {
	return o
}

func (o DomainDownstreamCappingPtrOutput) ToDomainDownstreamCappingPtrOutputWithContext(ctx context.Context) DomainDownstreamCappingPtrOutput {
	return o
}

func (o DomainDownstreamCappingPtrOutput) Elem() DomainDownstreamCappingOutput {
	return o.ApplyT(func(v *DomainDownstreamCapping) DomainDownstreamCapping {
		if v != nil {
			return *v
		}
		var ret DomainDownstreamCapping
		return ret
	}).(DomainDownstreamCappingOutput)
}

// List of capping rule.
func (o DomainDownstreamCappingPtrOutput) CappingRules() DomainDownstreamCappingCappingRuleArrayOutput {
	return o.ApplyT(func(v *DomainDownstreamCapping) []DomainDownstreamCappingCappingRule {
		if v == nil {
			return nil
		}
		return v.CappingRules
	}).(DomainDownstreamCappingCappingRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainDownstreamCappingPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainDownstreamCapping) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainDownstreamCappingCappingRule struct {
	// Capping rule kbps threshold.
	KbpsThreshold int `pulumi:"kbpsThreshold"`
	// List of capping rule path.
	RulePaths []string `pulumi:"rulePaths"`
	// Capping rule type.
	RuleType string `pulumi:"ruleType"`
}

// DomainDownstreamCappingCappingRuleInput is an input type that accepts DomainDownstreamCappingCappingRuleArgs and DomainDownstreamCappingCappingRuleOutput values.
// You can construct a concrete instance of `DomainDownstreamCappingCappingRuleInput` via:
//
//	DomainDownstreamCappingCappingRuleArgs{...}
type DomainDownstreamCappingCappingRuleInput interface {
	pulumi.Input

	ToDomainDownstreamCappingCappingRuleOutput() DomainDownstreamCappingCappingRuleOutput
	ToDomainDownstreamCappingCappingRuleOutputWithContext(context.Context) DomainDownstreamCappingCappingRuleOutput
}

type DomainDownstreamCappingCappingRuleArgs struct {
	// Capping rule kbps threshold.
	KbpsThreshold pulumi.IntInput `pulumi:"kbpsThreshold"`
	// List of capping rule path.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Capping rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (DomainDownstreamCappingCappingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDownstreamCappingCappingRule)(nil)).Elem()
}

func (i DomainDownstreamCappingCappingRuleArgs) ToDomainDownstreamCappingCappingRuleOutput() DomainDownstreamCappingCappingRuleOutput {
	return i.ToDomainDownstreamCappingCappingRuleOutputWithContext(context.Background())
}

func (i DomainDownstreamCappingCappingRuleArgs) ToDomainDownstreamCappingCappingRuleOutputWithContext(ctx context.Context) DomainDownstreamCappingCappingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDownstreamCappingCappingRuleOutput)
}

// DomainDownstreamCappingCappingRuleArrayInput is an input type that accepts DomainDownstreamCappingCappingRuleArray and DomainDownstreamCappingCappingRuleArrayOutput values.
// You can construct a concrete instance of `DomainDownstreamCappingCappingRuleArrayInput` via:
//
//	DomainDownstreamCappingCappingRuleArray{ DomainDownstreamCappingCappingRuleArgs{...} }
type DomainDownstreamCappingCappingRuleArrayInput interface {
	pulumi.Input

	ToDomainDownstreamCappingCappingRuleArrayOutput() DomainDownstreamCappingCappingRuleArrayOutput
	ToDomainDownstreamCappingCappingRuleArrayOutputWithContext(context.Context) DomainDownstreamCappingCappingRuleArrayOutput
}

type DomainDownstreamCappingCappingRuleArray []DomainDownstreamCappingCappingRuleInput

func (DomainDownstreamCappingCappingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainDownstreamCappingCappingRule)(nil)).Elem()
}

func (i DomainDownstreamCappingCappingRuleArray) ToDomainDownstreamCappingCappingRuleArrayOutput() DomainDownstreamCappingCappingRuleArrayOutput {
	return i.ToDomainDownstreamCappingCappingRuleArrayOutputWithContext(context.Background())
}

func (i DomainDownstreamCappingCappingRuleArray) ToDomainDownstreamCappingCappingRuleArrayOutputWithContext(ctx context.Context) DomainDownstreamCappingCappingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDownstreamCappingCappingRuleArrayOutput)
}

type DomainDownstreamCappingCappingRuleOutput struct{ *pulumi.OutputState }

func (DomainDownstreamCappingCappingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDownstreamCappingCappingRule)(nil)).Elem()
}

func (o DomainDownstreamCappingCappingRuleOutput) ToDomainDownstreamCappingCappingRuleOutput() DomainDownstreamCappingCappingRuleOutput {
	return o
}

func (o DomainDownstreamCappingCappingRuleOutput) ToDomainDownstreamCappingCappingRuleOutputWithContext(ctx context.Context) DomainDownstreamCappingCappingRuleOutput {
	return o
}

// Capping rule kbps threshold.
func (o DomainDownstreamCappingCappingRuleOutput) KbpsThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v DomainDownstreamCappingCappingRule) int { return v.KbpsThreshold }).(pulumi.IntOutput)
}

// List of capping rule path.
func (o DomainDownstreamCappingCappingRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainDownstreamCappingCappingRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Capping rule type.
func (o DomainDownstreamCappingCappingRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainDownstreamCappingCappingRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type DomainDownstreamCappingCappingRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainDownstreamCappingCappingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainDownstreamCappingCappingRule)(nil)).Elem()
}

func (o DomainDownstreamCappingCappingRuleArrayOutput) ToDomainDownstreamCappingCappingRuleArrayOutput() DomainDownstreamCappingCappingRuleArrayOutput {
	return o
}

func (o DomainDownstreamCappingCappingRuleArrayOutput) ToDomainDownstreamCappingCappingRuleArrayOutputWithContext(ctx context.Context) DomainDownstreamCappingCappingRuleArrayOutput {
	return o
}

func (o DomainDownstreamCappingCappingRuleArrayOutput) Index(i pulumi.IntInput) DomainDownstreamCappingCappingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainDownstreamCappingCappingRule {
		return vs[0].([]DomainDownstreamCappingCappingRule)[vs[1].(int)]
	}).(DomainDownstreamCappingCappingRuleOutput)
}

type DomainErrorPage struct {
	// List of error page rule.
	PageRules []DomainErrorPagePageRule `pulumi:"pageRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainErrorPageInput is an input type that accepts DomainErrorPageArgs and DomainErrorPageOutput values.
// You can construct a concrete instance of `DomainErrorPageInput` via:
//
//	DomainErrorPageArgs{...}
type DomainErrorPageInput interface {
	pulumi.Input

	ToDomainErrorPageOutput() DomainErrorPageOutput
	ToDomainErrorPageOutputWithContext(context.Context) DomainErrorPageOutput
}

type DomainErrorPageArgs struct {
	// List of error page rule.
	PageRules DomainErrorPagePageRuleArrayInput `pulumi:"pageRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainErrorPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainErrorPage)(nil)).Elem()
}

func (i DomainErrorPageArgs) ToDomainErrorPageOutput() DomainErrorPageOutput {
	return i.ToDomainErrorPageOutputWithContext(context.Background())
}

func (i DomainErrorPageArgs) ToDomainErrorPageOutputWithContext(ctx context.Context) DomainErrorPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageOutput)
}

func (i DomainErrorPageArgs) ToDomainErrorPagePtrOutput() DomainErrorPagePtrOutput {
	return i.ToDomainErrorPagePtrOutputWithContext(context.Background())
}

func (i DomainErrorPageArgs) ToDomainErrorPagePtrOutputWithContext(ctx context.Context) DomainErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageOutput).ToDomainErrorPagePtrOutputWithContext(ctx)
}

// DomainErrorPagePtrInput is an input type that accepts DomainErrorPageArgs, DomainErrorPagePtr and DomainErrorPagePtrOutput values.
// You can construct a concrete instance of `DomainErrorPagePtrInput` via:
//
//	        DomainErrorPageArgs{...}
//
//	or:
//
//	        nil
type DomainErrorPagePtrInput interface {
	pulumi.Input

	ToDomainErrorPagePtrOutput() DomainErrorPagePtrOutput
	ToDomainErrorPagePtrOutputWithContext(context.Context) DomainErrorPagePtrOutput
}

type domainErrorPagePtrType DomainErrorPageArgs

func DomainErrorPagePtr(v *DomainErrorPageArgs) DomainErrorPagePtrInput {
	return (*domainErrorPagePtrType)(v)
}

func (*domainErrorPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainErrorPage)(nil)).Elem()
}

func (i *domainErrorPagePtrType) ToDomainErrorPagePtrOutput() DomainErrorPagePtrOutput {
	return i.ToDomainErrorPagePtrOutputWithContext(context.Background())
}

func (i *domainErrorPagePtrType) ToDomainErrorPagePtrOutputWithContext(ctx context.Context) DomainErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPagePtrOutput)
}

type DomainErrorPageOutput struct{ *pulumi.OutputState }

func (DomainErrorPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainErrorPage)(nil)).Elem()
}

func (o DomainErrorPageOutput) ToDomainErrorPageOutput() DomainErrorPageOutput {
	return o
}

func (o DomainErrorPageOutput) ToDomainErrorPageOutputWithContext(ctx context.Context) DomainErrorPageOutput {
	return o
}

func (o DomainErrorPageOutput) ToDomainErrorPagePtrOutput() DomainErrorPagePtrOutput {
	return o.ToDomainErrorPagePtrOutputWithContext(context.Background())
}

func (o DomainErrorPageOutput) ToDomainErrorPagePtrOutputWithContext(ctx context.Context) DomainErrorPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainErrorPage) *DomainErrorPage {
		return &v
	}).(DomainErrorPagePtrOutput)
}

// List of error page rule.
func (o DomainErrorPageOutput) PageRules() DomainErrorPagePageRuleArrayOutput {
	return o.ApplyT(func(v DomainErrorPage) []DomainErrorPagePageRule { return v.PageRules }).(DomainErrorPagePageRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainErrorPageOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainErrorPage) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainErrorPagePtrOutput struct{ *pulumi.OutputState }

func (DomainErrorPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainErrorPage)(nil)).Elem()
}

func (o DomainErrorPagePtrOutput) ToDomainErrorPagePtrOutput() DomainErrorPagePtrOutput {
	return o
}

func (o DomainErrorPagePtrOutput) ToDomainErrorPagePtrOutputWithContext(ctx context.Context) DomainErrorPagePtrOutput {
	return o
}

func (o DomainErrorPagePtrOutput) Elem() DomainErrorPageOutput {
	return o.ApplyT(func(v *DomainErrorPage) DomainErrorPage {
		if v != nil {
			return *v
		}
		var ret DomainErrorPage
		return ret
	}).(DomainErrorPageOutput)
}

// List of error page rule.
func (o DomainErrorPagePtrOutput) PageRules() DomainErrorPagePageRuleArrayOutput {
	return o.ApplyT(func(v *DomainErrorPage) []DomainErrorPagePageRule {
		if v == nil {
			return nil
		}
		return v.PageRules
	}).(DomainErrorPagePageRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainErrorPagePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainErrorPagePageRule struct {
	// Redirect code of error page rules.
	RedirectCode int `pulumi:"redirectCode"`
	// Redirect url of error page rules.
	RedirectUrl string `pulumi:"redirectUrl"`
	// Status code of error page rules.
	StatusCode int `pulumi:"statusCode"`
}

// DomainErrorPagePageRuleInput is an input type that accepts DomainErrorPagePageRuleArgs and DomainErrorPagePageRuleOutput values.
// You can construct a concrete instance of `DomainErrorPagePageRuleInput` via:
//
//	DomainErrorPagePageRuleArgs{...}
type DomainErrorPagePageRuleInput interface {
	pulumi.Input

	ToDomainErrorPagePageRuleOutput() DomainErrorPagePageRuleOutput
	ToDomainErrorPagePageRuleOutputWithContext(context.Context) DomainErrorPagePageRuleOutput
}

type DomainErrorPagePageRuleArgs struct {
	// Redirect code of error page rules.
	RedirectCode pulumi.IntInput `pulumi:"redirectCode"`
	// Redirect url of error page rules.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
	// Status code of error page rules.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (DomainErrorPagePageRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainErrorPagePageRule)(nil)).Elem()
}

func (i DomainErrorPagePageRuleArgs) ToDomainErrorPagePageRuleOutput() DomainErrorPagePageRuleOutput {
	return i.ToDomainErrorPagePageRuleOutputWithContext(context.Background())
}

func (i DomainErrorPagePageRuleArgs) ToDomainErrorPagePageRuleOutputWithContext(ctx context.Context) DomainErrorPagePageRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPagePageRuleOutput)
}

// DomainErrorPagePageRuleArrayInput is an input type that accepts DomainErrorPagePageRuleArray and DomainErrorPagePageRuleArrayOutput values.
// You can construct a concrete instance of `DomainErrorPagePageRuleArrayInput` via:
//
//	DomainErrorPagePageRuleArray{ DomainErrorPagePageRuleArgs{...} }
type DomainErrorPagePageRuleArrayInput interface {
	pulumi.Input

	ToDomainErrorPagePageRuleArrayOutput() DomainErrorPagePageRuleArrayOutput
	ToDomainErrorPagePageRuleArrayOutputWithContext(context.Context) DomainErrorPagePageRuleArrayOutput
}

type DomainErrorPagePageRuleArray []DomainErrorPagePageRuleInput

func (DomainErrorPagePageRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainErrorPagePageRule)(nil)).Elem()
}

func (i DomainErrorPagePageRuleArray) ToDomainErrorPagePageRuleArrayOutput() DomainErrorPagePageRuleArrayOutput {
	return i.ToDomainErrorPagePageRuleArrayOutputWithContext(context.Background())
}

func (i DomainErrorPagePageRuleArray) ToDomainErrorPagePageRuleArrayOutputWithContext(ctx context.Context) DomainErrorPagePageRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPagePageRuleArrayOutput)
}

type DomainErrorPagePageRuleOutput struct{ *pulumi.OutputState }

func (DomainErrorPagePageRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainErrorPagePageRule)(nil)).Elem()
}

func (o DomainErrorPagePageRuleOutput) ToDomainErrorPagePageRuleOutput() DomainErrorPagePageRuleOutput {
	return o
}

func (o DomainErrorPagePageRuleOutput) ToDomainErrorPagePageRuleOutputWithContext(ctx context.Context) DomainErrorPagePageRuleOutput {
	return o
}

// Redirect code of error page rules.
func (o DomainErrorPagePageRuleOutput) RedirectCode() pulumi.IntOutput {
	return o.ApplyT(func(v DomainErrorPagePageRule) int { return v.RedirectCode }).(pulumi.IntOutput)
}

// Redirect url of error page rules.
func (o DomainErrorPagePageRuleOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DomainErrorPagePageRule) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

// Status code of error page rules.
func (o DomainErrorPagePageRuleOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v DomainErrorPagePageRule) int { return v.StatusCode }).(pulumi.IntOutput)
}

type DomainErrorPagePageRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainErrorPagePageRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainErrorPagePageRule)(nil)).Elem()
}

func (o DomainErrorPagePageRuleArrayOutput) ToDomainErrorPagePageRuleArrayOutput() DomainErrorPagePageRuleArrayOutput {
	return o
}

func (o DomainErrorPagePageRuleArrayOutput) ToDomainErrorPagePageRuleArrayOutputWithContext(ctx context.Context) DomainErrorPagePageRuleArrayOutput {
	return o
}

func (o DomainErrorPagePageRuleArrayOutput) Index(i pulumi.IntInput) DomainErrorPagePageRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainErrorPagePageRule {
		return vs[0].([]DomainErrorPagePageRule)[vs[1].(int)]
	}).(DomainErrorPagePageRuleOutput)
}

type DomainHttpsConfig struct {
	// Client certificate configuration information.
	ClientCertificateConfig *DomainHttpsConfigClientCertificateConfig `pulumi:"clientCertificateConfig"`
	// Configuration of forced HTTP or HTTPS redirects.
	ForceRedirect *DomainHttpsConfigForceRedirect `pulumi:"forceRedirect"`
	// HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
	Http2Switch *string `pulumi:"http2Switch"`
	// HTTPS configuration switch. Valid values are `on` and `off`.
	HttpsSwitch string `pulumi:"httpsSwitch"`
	// OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
	OcspStaplingSwitch *string `pulumi:"ocspStaplingSwitch"`
	// Server certificate configuration information.
	ServerCertificateConfig *DomainHttpsConfigServerCertificateConfig `pulumi:"serverCertificateConfig"`
	// Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
	SpdySwitch *string `pulumi:"spdySwitch"`
	// Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
	TlsVersions []string `pulumi:"tlsVersions"`
	// Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
	VerifyClient *string `pulumi:"verifyClient"`
}

// DomainHttpsConfigInput is an input type that accepts DomainHttpsConfigArgs and DomainHttpsConfigOutput values.
// You can construct a concrete instance of `DomainHttpsConfigInput` via:
//
//	DomainHttpsConfigArgs{...}
type DomainHttpsConfigInput interface {
	pulumi.Input

	ToDomainHttpsConfigOutput() DomainHttpsConfigOutput
	ToDomainHttpsConfigOutputWithContext(context.Context) DomainHttpsConfigOutput
}

type DomainHttpsConfigArgs struct {
	// Client certificate configuration information.
	ClientCertificateConfig DomainHttpsConfigClientCertificateConfigPtrInput `pulumi:"clientCertificateConfig"`
	// Configuration of forced HTTP or HTTPS redirects.
	ForceRedirect DomainHttpsConfigForceRedirectPtrInput `pulumi:"forceRedirect"`
	// HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
	Http2Switch pulumi.StringPtrInput `pulumi:"http2Switch"`
	// HTTPS configuration switch. Valid values are `on` and `off`.
	HttpsSwitch pulumi.StringInput `pulumi:"httpsSwitch"`
	// OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
	OcspStaplingSwitch pulumi.StringPtrInput `pulumi:"ocspStaplingSwitch"`
	// Server certificate configuration information.
	ServerCertificateConfig DomainHttpsConfigServerCertificateConfigPtrInput `pulumi:"serverCertificateConfig"`
	// Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
	SpdySwitch pulumi.StringPtrInput `pulumi:"spdySwitch"`
	// Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
	TlsVersions pulumi.StringArrayInput `pulumi:"tlsVersions"`
	// Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
	VerifyClient pulumi.StringPtrInput `pulumi:"verifyClient"`
}

func (DomainHttpsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfig)(nil)).Elem()
}

func (i DomainHttpsConfigArgs) ToDomainHttpsConfigOutput() DomainHttpsConfigOutput {
	return i.ToDomainHttpsConfigOutputWithContext(context.Background())
}

func (i DomainHttpsConfigArgs) ToDomainHttpsConfigOutputWithContext(ctx context.Context) DomainHttpsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigOutput)
}

func (i DomainHttpsConfigArgs) ToDomainHttpsConfigPtrOutput() DomainHttpsConfigPtrOutput {
	return i.ToDomainHttpsConfigPtrOutputWithContext(context.Background())
}

func (i DomainHttpsConfigArgs) ToDomainHttpsConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigOutput).ToDomainHttpsConfigPtrOutputWithContext(ctx)
}

// DomainHttpsConfigPtrInput is an input type that accepts DomainHttpsConfigArgs, DomainHttpsConfigPtr and DomainHttpsConfigPtrOutput values.
// You can construct a concrete instance of `DomainHttpsConfigPtrInput` via:
//
//	        DomainHttpsConfigArgs{...}
//
//	or:
//
//	        nil
type DomainHttpsConfigPtrInput interface {
	pulumi.Input

	ToDomainHttpsConfigPtrOutput() DomainHttpsConfigPtrOutput
	ToDomainHttpsConfigPtrOutputWithContext(context.Context) DomainHttpsConfigPtrOutput
}

type domainHttpsConfigPtrType DomainHttpsConfigArgs

func DomainHttpsConfigPtr(v *DomainHttpsConfigArgs) DomainHttpsConfigPtrInput {
	return (*domainHttpsConfigPtrType)(v)
}

func (*domainHttpsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfig)(nil)).Elem()
}

func (i *domainHttpsConfigPtrType) ToDomainHttpsConfigPtrOutput() DomainHttpsConfigPtrOutput {
	return i.ToDomainHttpsConfigPtrOutputWithContext(context.Background())
}

func (i *domainHttpsConfigPtrType) ToDomainHttpsConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigPtrOutput)
}

type DomainHttpsConfigOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfig)(nil)).Elem()
}

func (o DomainHttpsConfigOutput) ToDomainHttpsConfigOutput() DomainHttpsConfigOutput {
	return o
}

func (o DomainHttpsConfigOutput) ToDomainHttpsConfigOutputWithContext(ctx context.Context) DomainHttpsConfigOutput {
	return o
}

func (o DomainHttpsConfigOutput) ToDomainHttpsConfigPtrOutput() DomainHttpsConfigPtrOutput {
	return o.ToDomainHttpsConfigPtrOutputWithContext(context.Background())
}

func (o DomainHttpsConfigOutput) ToDomainHttpsConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainHttpsConfig) *DomainHttpsConfig {
		return &v
	}).(DomainHttpsConfigPtrOutput)
}

// Client certificate configuration information.
func (o DomainHttpsConfigOutput) ClientCertificateConfig() DomainHttpsConfigClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *DomainHttpsConfigClientCertificateConfig { return v.ClientCertificateConfig }).(DomainHttpsConfigClientCertificateConfigPtrOutput)
}

// Configuration of forced HTTP or HTTPS redirects.
func (o DomainHttpsConfigOutput) ForceRedirect() DomainHttpsConfigForceRedirectPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *DomainHttpsConfigForceRedirect { return v.ForceRedirect }).(DomainHttpsConfigForceRedirectPtrOutput)
}

// HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
func (o DomainHttpsConfigOutput) Http2Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *string { return v.Http2Switch }).(pulumi.StringPtrOutput)
}

// HTTPS configuration switch. Valid values are `on` and `off`.
func (o DomainHttpsConfigOutput) HttpsSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainHttpsConfig) string { return v.HttpsSwitch }).(pulumi.StringOutput)
}

// OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
func (o DomainHttpsConfigOutput) OcspStaplingSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *string { return v.OcspStaplingSwitch }).(pulumi.StringPtrOutput)
}

// Server certificate configuration information.
func (o DomainHttpsConfigOutput) ServerCertificateConfig() DomainHttpsConfigServerCertificateConfigPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *DomainHttpsConfigServerCertificateConfig { return v.ServerCertificateConfig }).(DomainHttpsConfigServerCertificateConfigPtrOutput)
}

// Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
func (o DomainHttpsConfigOutput) SpdySwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *string { return v.SpdySwitch }).(pulumi.StringPtrOutput)
}

// Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
func (o DomainHttpsConfigOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainHttpsConfig) []string { return v.TlsVersions }).(pulumi.StringArrayOutput)
}

// Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
func (o DomainHttpsConfigOutput) VerifyClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfig) *string { return v.VerifyClient }).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfig)(nil)).Elem()
}

func (o DomainHttpsConfigPtrOutput) ToDomainHttpsConfigPtrOutput() DomainHttpsConfigPtrOutput {
	return o
}

func (o DomainHttpsConfigPtrOutput) ToDomainHttpsConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigPtrOutput {
	return o
}

func (o DomainHttpsConfigPtrOutput) Elem() DomainHttpsConfigOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) DomainHttpsConfig {
		if v != nil {
			return *v
		}
		var ret DomainHttpsConfig
		return ret
	}).(DomainHttpsConfigOutput)
}

// Client certificate configuration information.
func (o DomainHttpsConfigPtrOutput) ClientCertificateConfig() DomainHttpsConfigClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *DomainHttpsConfigClientCertificateConfig {
		if v == nil {
			return nil
		}
		return v.ClientCertificateConfig
	}).(DomainHttpsConfigClientCertificateConfigPtrOutput)
}

// Configuration of forced HTTP or HTTPS redirects.
func (o DomainHttpsConfigPtrOutput) ForceRedirect() DomainHttpsConfigForceRedirectPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *DomainHttpsConfigForceRedirect {
		if v == nil {
			return nil
		}
		return v.ForceRedirect
	}).(DomainHttpsConfigForceRedirectPtrOutput)
}

// HTTP2 configuration switch. Valid values are `on` and `off`. and default value is `off`.
func (o DomainHttpsConfigPtrOutput) Http2Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Http2Switch
	}).(pulumi.StringPtrOutput)
}

// HTTPS configuration switch. Valid values are `on` and `off`.
func (o DomainHttpsConfigPtrOutput) HttpsSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.HttpsSwitch
	}).(pulumi.StringPtrOutput)
}

// OCSP configuration switch. Valid values are `on` and `off`. and default value is `off`.
func (o DomainHttpsConfigPtrOutput) OcspStaplingSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *string {
		if v == nil {
			return nil
		}
		return v.OcspStaplingSwitch
	}).(pulumi.StringPtrOutput)
}

// Server certificate configuration information.
func (o DomainHttpsConfigPtrOutput) ServerCertificateConfig() DomainHttpsConfigServerCertificateConfigPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *DomainHttpsConfigServerCertificateConfig {
		if v == nil {
			return nil
		}
		return v.ServerCertificateConfig
	}).(DomainHttpsConfigServerCertificateConfigPtrOutput)
}

// Spdy configuration switch. Valid values are `on` and `off`. and default value is `off`. This parameter is for white-list customer.
func (o DomainHttpsConfigPtrOutput) SpdySwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SpdySwitch
	}).(pulumi.StringPtrOutput)
}

// Tls version settings, only support some Advanced domain names, support settings TLSv1, TLSV1.1, TLSV1.2, TLSv1.3, when modifying must open consecutive versions.
func (o DomainHttpsConfigPtrOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) []string {
		if v == nil {
			return nil
		}
		return v.TlsVersions
	}).(pulumi.StringArrayOutput)
}

// Client certificate authentication feature. Valid values are `on` and `off`. and default value is `off`.
func (o DomainHttpsConfigPtrOutput) VerifyClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfig) *string {
		if v == nil {
			return nil
		}
		return v.VerifyClient
	}).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigClientCertificateConfig struct {
	// Client Certificate PEM format, requires Base64 encoding.
	CertificateContent string `pulumi:"certificateContent"`
	// Client certificate name.
	CertificateName *string `pulumi:"certificateName"`
	// Deploy time of client certificate.
	DeployTime *string `pulumi:"deployTime"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime *string `pulumi:"expireTime"`
}

// DomainHttpsConfigClientCertificateConfigInput is an input type that accepts DomainHttpsConfigClientCertificateConfigArgs and DomainHttpsConfigClientCertificateConfigOutput values.
// You can construct a concrete instance of `DomainHttpsConfigClientCertificateConfigInput` via:
//
//	DomainHttpsConfigClientCertificateConfigArgs{...}
type DomainHttpsConfigClientCertificateConfigInput interface {
	pulumi.Input

	ToDomainHttpsConfigClientCertificateConfigOutput() DomainHttpsConfigClientCertificateConfigOutput
	ToDomainHttpsConfigClientCertificateConfigOutputWithContext(context.Context) DomainHttpsConfigClientCertificateConfigOutput
}

type DomainHttpsConfigClientCertificateConfigArgs struct {
	// Client Certificate PEM format, requires Base64 encoding.
	CertificateContent pulumi.StringInput `pulumi:"certificateContent"`
	// Client certificate name.
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// Deploy time of client certificate.
	DeployTime pulumi.StringPtrInput `pulumi:"deployTime"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
}

func (DomainHttpsConfigClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfigClientCertificateConfig)(nil)).Elem()
}

func (i DomainHttpsConfigClientCertificateConfigArgs) ToDomainHttpsConfigClientCertificateConfigOutput() DomainHttpsConfigClientCertificateConfigOutput {
	return i.ToDomainHttpsConfigClientCertificateConfigOutputWithContext(context.Background())
}

func (i DomainHttpsConfigClientCertificateConfigArgs) ToDomainHttpsConfigClientCertificateConfigOutputWithContext(ctx context.Context) DomainHttpsConfigClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigClientCertificateConfigOutput)
}

func (i DomainHttpsConfigClientCertificateConfigArgs) ToDomainHttpsConfigClientCertificateConfigPtrOutput() DomainHttpsConfigClientCertificateConfigPtrOutput {
	return i.ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i DomainHttpsConfigClientCertificateConfigArgs) ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigClientCertificateConfigOutput).ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(ctx)
}

// DomainHttpsConfigClientCertificateConfigPtrInput is an input type that accepts DomainHttpsConfigClientCertificateConfigArgs, DomainHttpsConfigClientCertificateConfigPtr and DomainHttpsConfigClientCertificateConfigPtrOutput values.
// You can construct a concrete instance of `DomainHttpsConfigClientCertificateConfigPtrInput` via:
//
//	        DomainHttpsConfigClientCertificateConfigArgs{...}
//
//	or:
//
//	        nil
type DomainHttpsConfigClientCertificateConfigPtrInput interface {
	pulumi.Input

	ToDomainHttpsConfigClientCertificateConfigPtrOutput() DomainHttpsConfigClientCertificateConfigPtrOutput
	ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(context.Context) DomainHttpsConfigClientCertificateConfigPtrOutput
}

type domainHttpsConfigClientCertificateConfigPtrType DomainHttpsConfigClientCertificateConfigArgs

func DomainHttpsConfigClientCertificateConfigPtr(v *DomainHttpsConfigClientCertificateConfigArgs) DomainHttpsConfigClientCertificateConfigPtrInput {
	return (*domainHttpsConfigClientCertificateConfigPtrType)(v)
}

func (*domainHttpsConfigClientCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfigClientCertificateConfig)(nil)).Elem()
}

func (i *domainHttpsConfigClientCertificateConfigPtrType) ToDomainHttpsConfigClientCertificateConfigPtrOutput() DomainHttpsConfigClientCertificateConfigPtrOutput {
	return i.ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *domainHttpsConfigClientCertificateConfigPtrType) ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigClientCertificateConfigPtrOutput)
}

type DomainHttpsConfigClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfigClientCertificateConfig)(nil)).Elem()
}

func (o DomainHttpsConfigClientCertificateConfigOutput) ToDomainHttpsConfigClientCertificateConfigOutput() DomainHttpsConfigClientCertificateConfigOutput {
	return o
}

func (o DomainHttpsConfigClientCertificateConfigOutput) ToDomainHttpsConfigClientCertificateConfigOutputWithContext(ctx context.Context) DomainHttpsConfigClientCertificateConfigOutput {
	return o
}

func (o DomainHttpsConfigClientCertificateConfigOutput) ToDomainHttpsConfigClientCertificateConfigPtrOutput() DomainHttpsConfigClientCertificateConfigPtrOutput {
	return o.ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (o DomainHttpsConfigClientCertificateConfigOutput) ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigClientCertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainHttpsConfigClientCertificateConfig) *DomainHttpsConfigClientCertificateConfig {
		return &v
	}).(DomainHttpsConfigClientCertificateConfigPtrOutput)
}

// Client Certificate PEM format, requires Base64 encoding.
func (o DomainHttpsConfigClientCertificateConfigOutput) CertificateContent() pulumi.StringOutput {
	return o.ApplyT(func(v DomainHttpsConfigClientCertificateConfig) string { return v.CertificateContent }).(pulumi.StringOutput)
}

// Client certificate name.
func (o DomainHttpsConfigClientCertificateConfigOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigClientCertificateConfig) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// Deploy time of client certificate.
func (o DomainHttpsConfigClientCertificateConfigOutput) DeployTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigClientCertificateConfig) *string { return v.DeployTime }).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainHttpsConfigClientCertificateConfigOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigClientCertificateConfig) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigClientCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigClientCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfigClientCertificateConfig)(nil)).Elem()
}

func (o DomainHttpsConfigClientCertificateConfigPtrOutput) ToDomainHttpsConfigClientCertificateConfigPtrOutput() DomainHttpsConfigClientCertificateConfigPtrOutput {
	return o
}

func (o DomainHttpsConfigClientCertificateConfigPtrOutput) ToDomainHttpsConfigClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigClientCertificateConfigPtrOutput {
	return o
}

func (o DomainHttpsConfigClientCertificateConfigPtrOutput) Elem() DomainHttpsConfigClientCertificateConfigOutput {
	return o.ApplyT(func(v *DomainHttpsConfigClientCertificateConfig) DomainHttpsConfigClientCertificateConfig {
		if v != nil {
			return *v
		}
		var ret DomainHttpsConfigClientCertificateConfig
		return ret
	}).(DomainHttpsConfigClientCertificateConfigOutput)
}

// Client Certificate PEM format, requires Base64 encoding.
func (o DomainHttpsConfigClientCertificateConfigPtrOutput) CertificateContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigClientCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateContent
	}).(pulumi.StringPtrOutput)
}

// Client certificate name.
func (o DomainHttpsConfigClientCertificateConfigPtrOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigClientCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// Deploy time of client certificate.
func (o DomainHttpsConfigClientCertificateConfigPtrOutput) DeployTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigClientCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.DeployTime
	}).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainHttpsConfigClientCertificateConfigPtrOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigClientCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigForceRedirect struct {
	// Whether to return the newly added header during force redirection. Values: `on`, `off`.
	CarryHeaders *string `pulumi:"carryHeaders"`
	// Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
	RedirectStatusCode *int `pulumi:"redirectStatusCode"`
	// Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
	RedirectType *string `pulumi:"redirectType"`
	// Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
	Switch *string `pulumi:"switch"`
}

// DomainHttpsConfigForceRedirectInput is an input type that accepts DomainHttpsConfigForceRedirectArgs and DomainHttpsConfigForceRedirectOutput values.
// You can construct a concrete instance of `DomainHttpsConfigForceRedirectInput` via:
//
//	DomainHttpsConfigForceRedirectArgs{...}
type DomainHttpsConfigForceRedirectInput interface {
	pulumi.Input

	ToDomainHttpsConfigForceRedirectOutput() DomainHttpsConfigForceRedirectOutput
	ToDomainHttpsConfigForceRedirectOutputWithContext(context.Context) DomainHttpsConfigForceRedirectOutput
}

type DomainHttpsConfigForceRedirectArgs struct {
	// Whether to return the newly added header during force redirection. Values: `on`, `off`.
	CarryHeaders pulumi.StringPtrInput `pulumi:"carryHeaders"`
	// Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
	RedirectStatusCode pulumi.IntPtrInput `pulumi:"redirectStatusCode"`
	// Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (DomainHttpsConfigForceRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfigForceRedirect)(nil)).Elem()
}

func (i DomainHttpsConfigForceRedirectArgs) ToDomainHttpsConfigForceRedirectOutput() DomainHttpsConfigForceRedirectOutput {
	return i.ToDomainHttpsConfigForceRedirectOutputWithContext(context.Background())
}

func (i DomainHttpsConfigForceRedirectArgs) ToDomainHttpsConfigForceRedirectOutputWithContext(ctx context.Context) DomainHttpsConfigForceRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigForceRedirectOutput)
}

func (i DomainHttpsConfigForceRedirectArgs) ToDomainHttpsConfigForceRedirectPtrOutput() DomainHttpsConfigForceRedirectPtrOutput {
	return i.ToDomainHttpsConfigForceRedirectPtrOutputWithContext(context.Background())
}

func (i DomainHttpsConfigForceRedirectArgs) ToDomainHttpsConfigForceRedirectPtrOutputWithContext(ctx context.Context) DomainHttpsConfigForceRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigForceRedirectOutput).ToDomainHttpsConfigForceRedirectPtrOutputWithContext(ctx)
}

// DomainHttpsConfigForceRedirectPtrInput is an input type that accepts DomainHttpsConfigForceRedirectArgs, DomainHttpsConfigForceRedirectPtr and DomainHttpsConfigForceRedirectPtrOutput values.
// You can construct a concrete instance of `DomainHttpsConfigForceRedirectPtrInput` via:
//
//	        DomainHttpsConfigForceRedirectArgs{...}
//
//	or:
//
//	        nil
type DomainHttpsConfigForceRedirectPtrInput interface {
	pulumi.Input

	ToDomainHttpsConfigForceRedirectPtrOutput() DomainHttpsConfigForceRedirectPtrOutput
	ToDomainHttpsConfigForceRedirectPtrOutputWithContext(context.Context) DomainHttpsConfigForceRedirectPtrOutput
}

type domainHttpsConfigForceRedirectPtrType DomainHttpsConfigForceRedirectArgs

func DomainHttpsConfigForceRedirectPtr(v *DomainHttpsConfigForceRedirectArgs) DomainHttpsConfigForceRedirectPtrInput {
	return (*domainHttpsConfigForceRedirectPtrType)(v)
}

func (*domainHttpsConfigForceRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfigForceRedirect)(nil)).Elem()
}

func (i *domainHttpsConfigForceRedirectPtrType) ToDomainHttpsConfigForceRedirectPtrOutput() DomainHttpsConfigForceRedirectPtrOutput {
	return i.ToDomainHttpsConfigForceRedirectPtrOutputWithContext(context.Background())
}

func (i *domainHttpsConfigForceRedirectPtrType) ToDomainHttpsConfigForceRedirectPtrOutputWithContext(ctx context.Context) DomainHttpsConfigForceRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigForceRedirectPtrOutput)
}

type DomainHttpsConfigForceRedirectOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigForceRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfigForceRedirect)(nil)).Elem()
}

func (o DomainHttpsConfigForceRedirectOutput) ToDomainHttpsConfigForceRedirectOutput() DomainHttpsConfigForceRedirectOutput {
	return o
}

func (o DomainHttpsConfigForceRedirectOutput) ToDomainHttpsConfigForceRedirectOutputWithContext(ctx context.Context) DomainHttpsConfigForceRedirectOutput {
	return o
}

func (o DomainHttpsConfigForceRedirectOutput) ToDomainHttpsConfigForceRedirectPtrOutput() DomainHttpsConfigForceRedirectPtrOutput {
	return o.ToDomainHttpsConfigForceRedirectPtrOutputWithContext(context.Background())
}

func (o DomainHttpsConfigForceRedirectOutput) ToDomainHttpsConfigForceRedirectPtrOutputWithContext(ctx context.Context) DomainHttpsConfigForceRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainHttpsConfigForceRedirect) *DomainHttpsConfigForceRedirect {
		return &v
	}).(DomainHttpsConfigForceRedirectPtrOutput)
}

// Whether to return the newly added header during force redirection. Values: `on`, `off`.
func (o DomainHttpsConfigForceRedirectOutput) CarryHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigForceRedirect) *string { return v.CarryHeaders }).(pulumi.StringPtrOutput)
}

// Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
func (o DomainHttpsConfigForceRedirectOutput) RedirectStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigForceRedirect) *int { return v.RedirectStatusCode }).(pulumi.IntPtrOutput)
}

// Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
func (o DomainHttpsConfigForceRedirectOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigForceRedirect) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
func (o DomainHttpsConfigForceRedirectOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigForceRedirect) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigForceRedirectPtrOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigForceRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfigForceRedirect)(nil)).Elem()
}

func (o DomainHttpsConfigForceRedirectPtrOutput) ToDomainHttpsConfigForceRedirectPtrOutput() DomainHttpsConfigForceRedirectPtrOutput {
	return o
}

func (o DomainHttpsConfigForceRedirectPtrOutput) ToDomainHttpsConfigForceRedirectPtrOutputWithContext(ctx context.Context) DomainHttpsConfigForceRedirectPtrOutput {
	return o
}

func (o DomainHttpsConfigForceRedirectPtrOutput) Elem() DomainHttpsConfigForceRedirectOutput {
	return o.ApplyT(func(v *DomainHttpsConfigForceRedirect) DomainHttpsConfigForceRedirect {
		if v != nil {
			return *v
		}
		var ret DomainHttpsConfigForceRedirect
		return ret
	}).(DomainHttpsConfigForceRedirectOutput)
}

// Whether to return the newly added header during force redirection. Values: `on`, `off`.
func (o DomainHttpsConfigForceRedirectPtrOutput) CarryHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigForceRedirect) *string {
		if v == nil {
			return nil
		}
		return v.CarryHeaders
	}).(pulumi.StringPtrOutput)
}

// Forced redirect status code. Valid values are `301` and `302`. When `switch` setting `off`, this property does not need to be set or set to `302`. Default value is `302`.
func (o DomainHttpsConfigForceRedirectPtrOutput) RedirectStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigForceRedirect) *int {
		if v == nil {
			return nil
		}
		return v.RedirectStatusCode
	}).(pulumi.IntPtrOutput)
}

// Forced redirect type. Valid values are `http` and `https`. `http` means a forced redirect from HTTPS to HTTP, `https` means a forced redirect from HTTP to HTTPS. When `switch` setting `off`, this property does not need to be set or set to `http`. Default value is `http`.
func (o DomainHttpsConfigForceRedirectPtrOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigForceRedirect) *string {
		if v == nil {
			return nil
		}
		return v.RedirectType
	}).(pulumi.StringPtrOutput)
}

// Forced redirect configuration switch. Valid values are `on` and `off`. Default value is `off`.
func (o DomainHttpsConfigForceRedirectPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigForceRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigServerCertificateConfig struct {
	// Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
	CertificateContent *string `pulumi:"certificateContent"`
	// Server certificate ID.
	CertificateId *string `pulumi:"certificateId"`
	// Server certificate name.
	CertificateName *string `pulumi:"certificateName"`
	// Deploy time of server certificate.
	DeployTime *string `pulumi:"deployTime"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime *string `pulumi:"expireTime"`
	// Certificate remarks.
	Message *string `pulumi:"message"`
	// Server key information. This is required when uploading an external certificate.
	PrivateKey *string `pulumi:"privateKey"`
}

// DomainHttpsConfigServerCertificateConfigInput is an input type that accepts DomainHttpsConfigServerCertificateConfigArgs and DomainHttpsConfigServerCertificateConfigOutput values.
// You can construct a concrete instance of `DomainHttpsConfigServerCertificateConfigInput` via:
//
//	DomainHttpsConfigServerCertificateConfigArgs{...}
type DomainHttpsConfigServerCertificateConfigInput interface {
	pulumi.Input

	ToDomainHttpsConfigServerCertificateConfigOutput() DomainHttpsConfigServerCertificateConfigOutput
	ToDomainHttpsConfigServerCertificateConfigOutputWithContext(context.Context) DomainHttpsConfigServerCertificateConfigOutput
}

type DomainHttpsConfigServerCertificateConfigArgs struct {
	// Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
	CertificateContent pulumi.StringPtrInput `pulumi:"certificateContent"`
	// Server certificate ID.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
	// Server certificate name.
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// Deploy time of server certificate.
	DeployTime pulumi.StringPtrInput `pulumi:"deployTime"`
	// Signature expiration time in second. The maximum value is 630720000.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
	// Certificate remarks.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Server key information. This is required when uploading an external certificate.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
}

func (DomainHttpsConfigServerCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfigServerCertificateConfig)(nil)).Elem()
}

func (i DomainHttpsConfigServerCertificateConfigArgs) ToDomainHttpsConfigServerCertificateConfigOutput() DomainHttpsConfigServerCertificateConfigOutput {
	return i.ToDomainHttpsConfigServerCertificateConfigOutputWithContext(context.Background())
}

func (i DomainHttpsConfigServerCertificateConfigArgs) ToDomainHttpsConfigServerCertificateConfigOutputWithContext(ctx context.Context) DomainHttpsConfigServerCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigServerCertificateConfigOutput)
}

func (i DomainHttpsConfigServerCertificateConfigArgs) ToDomainHttpsConfigServerCertificateConfigPtrOutput() DomainHttpsConfigServerCertificateConfigPtrOutput {
	return i.ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(context.Background())
}

func (i DomainHttpsConfigServerCertificateConfigArgs) ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigServerCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigServerCertificateConfigOutput).ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(ctx)
}

// DomainHttpsConfigServerCertificateConfigPtrInput is an input type that accepts DomainHttpsConfigServerCertificateConfigArgs, DomainHttpsConfigServerCertificateConfigPtr and DomainHttpsConfigServerCertificateConfigPtrOutput values.
// You can construct a concrete instance of `DomainHttpsConfigServerCertificateConfigPtrInput` via:
//
//	        DomainHttpsConfigServerCertificateConfigArgs{...}
//
//	or:
//
//	        nil
type DomainHttpsConfigServerCertificateConfigPtrInput interface {
	pulumi.Input

	ToDomainHttpsConfigServerCertificateConfigPtrOutput() DomainHttpsConfigServerCertificateConfigPtrOutput
	ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(context.Context) DomainHttpsConfigServerCertificateConfigPtrOutput
}

type domainHttpsConfigServerCertificateConfigPtrType DomainHttpsConfigServerCertificateConfigArgs

func DomainHttpsConfigServerCertificateConfigPtr(v *DomainHttpsConfigServerCertificateConfigArgs) DomainHttpsConfigServerCertificateConfigPtrInput {
	return (*domainHttpsConfigServerCertificateConfigPtrType)(v)
}

func (*domainHttpsConfigServerCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfigServerCertificateConfig)(nil)).Elem()
}

func (i *domainHttpsConfigServerCertificateConfigPtrType) ToDomainHttpsConfigServerCertificateConfigPtrOutput() DomainHttpsConfigServerCertificateConfigPtrOutput {
	return i.ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *domainHttpsConfigServerCertificateConfigPtrType) ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigServerCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHttpsConfigServerCertificateConfigPtrOutput)
}

type DomainHttpsConfigServerCertificateConfigOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigServerCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHttpsConfigServerCertificateConfig)(nil)).Elem()
}

func (o DomainHttpsConfigServerCertificateConfigOutput) ToDomainHttpsConfigServerCertificateConfigOutput() DomainHttpsConfigServerCertificateConfigOutput {
	return o
}

func (o DomainHttpsConfigServerCertificateConfigOutput) ToDomainHttpsConfigServerCertificateConfigOutputWithContext(ctx context.Context) DomainHttpsConfigServerCertificateConfigOutput {
	return o
}

func (o DomainHttpsConfigServerCertificateConfigOutput) ToDomainHttpsConfigServerCertificateConfigPtrOutput() DomainHttpsConfigServerCertificateConfigPtrOutput {
	return o.ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(context.Background())
}

func (o DomainHttpsConfigServerCertificateConfigOutput) ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigServerCertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainHttpsConfigServerCertificateConfig) *DomainHttpsConfigServerCertificateConfig {
		return &v
	}).(DomainHttpsConfigServerCertificateConfigPtrOutput)
}

// Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
func (o DomainHttpsConfigServerCertificateConfigOutput) CertificateContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.CertificateContent }).(pulumi.StringPtrOutput)
}

// Server certificate ID.
func (o DomainHttpsConfigServerCertificateConfigOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// Server certificate name.
func (o DomainHttpsConfigServerCertificateConfigOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// Deploy time of server certificate.
func (o DomainHttpsConfigServerCertificateConfigOutput) DeployTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.DeployTime }).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainHttpsConfigServerCertificateConfigOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// Certificate remarks.
func (o DomainHttpsConfigServerCertificateConfigOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Server key information. This is required when uploading an external certificate.
func (o DomainHttpsConfigServerCertificateConfigOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHttpsConfigServerCertificateConfig) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

type DomainHttpsConfigServerCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainHttpsConfigServerCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHttpsConfigServerCertificateConfig)(nil)).Elem()
}

func (o DomainHttpsConfigServerCertificateConfigPtrOutput) ToDomainHttpsConfigServerCertificateConfigPtrOutput() DomainHttpsConfigServerCertificateConfigPtrOutput {
	return o
}

func (o DomainHttpsConfigServerCertificateConfigPtrOutput) ToDomainHttpsConfigServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainHttpsConfigServerCertificateConfigPtrOutput {
	return o
}

func (o DomainHttpsConfigServerCertificateConfigPtrOutput) Elem() DomainHttpsConfigServerCertificateConfigOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) DomainHttpsConfigServerCertificateConfig {
		if v != nil {
			return *v
		}
		var ret DomainHttpsConfigServerCertificateConfig
		return ret
	}).(DomainHttpsConfigServerCertificateConfigOutput)
}

// Server certificate information. This is required when uploading an external certificate, which should contain the complete certificate chain.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) CertificateContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificateContent
	}).(pulumi.StringPtrOutput)
}

// Server certificate ID.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificateId
	}).(pulumi.StringPtrOutput)
}

// Server certificate name.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// Deploy time of server certificate.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) DeployTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.DeployTime
	}).(pulumi.StringPtrOutput)
}

// Signature expiration time in second. The maximum value is 630720000.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.StringPtrOutput)
}

// Certificate remarks.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Server key information. This is required when uploading an external certificate.
func (o DomainHttpsConfigServerCertificateConfigPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHttpsConfigServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type DomainHwPrivateAccess struct {
	// Access ID.
	AccessKey *string `pulumi:"accessKey"`
	// Bucket.
	Bucket *string `pulumi:"bucket"`
	// Key.
	SecretKey *string `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainHwPrivateAccessInput is an input type that accepts DomainHwPrivateAccessArgs and DomainHwPrivateAccessOutput values.
// You can construct a concrete instance of `DomainHwPrivateAccessInput` via:
//
//	DomainHwPrivateAccessArgs{...}
type DomainHwPrivateAccessInput interface {
	pulumi.Input

	ToDomainHwPrivateAccessOutput() DomainHwPrivateAccessOutput
	ToDomainHwPrivateAccessOutputWithContext(context.Context) DomainHwPrivateAccessOutput
}

type DomainHwPrivateAccessArgs struct {
	// Access ID.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Key.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainHwPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHwPrivateAccess)(nil)).Elem()
}

func (i DomainHwPrivateAccessArgs) ToDomainHwPrivateAccessOutput() DomainHwPrivateAccessOutput {
	return i.ToDomainHwPrivateAccessOutputWithContext(context.Background())
}

func (i DomainHwPrivateAccessArgs) ToDomainHwPrivateAccessOutputWithContext(ctx context.Context) DomainHwPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHwPrivateAccessOutput)
}

func (i DomainHwPrivateAccessArgs) ToDomainHwPrivateAccessPtrOutput() DomainHwPrivateAccessPtrOutput {
	return i.ToDomainHwPrivateAccessPtrOutputWithContext(context.Background())
}

func (i DomainHwPrivateAccessArgs) ToDomainHwPrivateAccessPtrOutputWithContext(ctx context.Context) DomainHwPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHwPrivateAccessOutput).ToDomainHwPrivateAccessPtrOutputWithContext(ctx)
}

// DomainHwPrivateAccessPtrInput is an input type that accepts DomainHwPrivateAccessArgs, DomainHwPrivateAccessPtr and DomainHwPrivateAccessPtrOutput values.
// You can construct a concrete instance of `DomainHwPrivateAccessPtrInput` via:
//
//	        DomainHwPrivateAccessArgs{...}
//
//	or:
//
//	        nil
type DomainHwPrivateAccessPtrInput interface {
	pulumi.Input

	ToDomainHwPrivateAccessPtrOutput() DomainHwPrivateAccessPtrOutput
	ToDomainHwPrivateAccessPtrOutputWithContext(context.Context) DomainHwPrivateAccessPtrOutput
}

type domainHwPrivateAccessPtrType DomainHwPrivateAccessArgs

func DomainHwPrivateAccessPtr(v *DomainHwPrivateAccessArgs) DomainHwPrivateAccessPtrInput {
	return (*domainHwPrivateAccessPtrType)(v)
}

func (*domainHwPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHwPrivateAccess)(nil)).Elem()
}

func (i *domainHwPrivateAccessPtrType) ToDomainHwPrivateAccessPtrOutput() DomainHwPrivateAccessPtrOutput {
	return i.ToDomainHwPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *domainHwPrivateAccessPtrType) ToDomainHwPrivateAccessPtrOutputWithContext(ctx context.Context) DomainHwPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainHwPrivateAccessPtrOutput)
}

type DomainHwPrivateAccessOutput struct{ *pulumi.OutputState }

func (DomainHwPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainHwPrivateAccess)(nil)).Elem()
}

func (o DomainHwPrivateAccessOutput) ToDomainHwPrivateAccessOutput() DomainHwPrivateAccessOutput {
	return o
}

func (o DomainHwPrivateAccessOutput) ToDomainHwPrivateAccessOutputWithContext(ctx context.Context) DomainHwPrivateAccessOutput {
	return o
}

func (o DomainHwPrivateAccessOutput) ToDomainHwPrivateAccessPtrOutput() DomainHwPrivateAccessPtrOutput {
	return o.ToDomainHwPrivateAccessPtrOutputWithContext(context.Background())
}

func (o DomainHwPrivateAccessOutput) ToDomainHwPrivateAccessPtrOutputWithContext(ctx context.Context) DomainHwPrivateAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainHwPrivateAccess) *DomainHwPrivateAccess {
		return &v
	}).(DomainHwPrivateAccessPtrOutput)
}

// Access ID.
func (o DomainHwPrivateAccessOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHwPrivateAccess) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainHwPrivateAccessOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHwPrivateAccess) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainHwPrivateAccessOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainHwPrivateAccess) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainHwPrivateAccessOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainHwPrivateAccess) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainHwPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (DomainHwPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainHwPrivateAccess)(nil)).Elem()
}

func (o DomainHwPrivateAccessPtrOutput) ToDomainHwPrivateAccessPtrOutput() DomainHwPrivateAccessPtrOutput {
	return o
}

func (o DomainHwPrivateAccessPtrOutput) ToDomainHwPrivateAccessPtrOutputWithContext(ctx context.Context) DomainHwPrivateAccessPtrOutput {
	return o
}

func (o DomainHwPrivateAccessPtrOutput) Elem() DomainHwPrivateAccessOutput {
	return o.ApplyT(func(v *DomainHwPrivateAccess) DomainHwPrivateAccess {
		if v != nil {
			return *v
		}
		var ret DomainHwPrivateAccess
		return ret
	}).(DomainHwPrivateAccessOutput)
}

// Access ID.
func (o DomainHwPrivateAccessPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHwPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainHwPrivateAccessPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHwPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainHwPrivateAccessPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHwPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainHwPrivateAccessPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainHwPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainIpFilter struct {
	// Ip filter rules, This feature is only available to selected beta customers.
	FilterRules []DomainIpFilterFilterRule `pulumi:"filterRules"`
	// IP `blacklist`/`whitelist` type.
	FilterType *string `pulumi:"filterType"`
	// Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
	Filters []string `pulumi:"filters"`
	// Return code, available values: 400-499.
	ReturnCode *int `pulumi:"returnCode"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainIpFilterInput is an input type that accepts DomainIpFilterArgs and DomainIpFilterOutput values.
// You can construct a concrete instance of `DomainIpFilterInput` via:
//
//	DomainIpFilterArgs{...}
type DomainIpFilterInput interface {
	pulumi.Input

	ToDomainIpFilterOutput() DomainIpFilterOutput
	ToDomainIpFilterOutputWithContext(context.Context) DomainIpFilterOutput
}

type DomainIpFilterArgs struct {
	// Ip filter rules, This feature is only available to selected beta customers.
	FilterRules DomainIpFilterFilterRuleArrayInput `pulumi:"filterRules"`
	// IP `blacklist`/`whitelist` type.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// Return code, available values: 400-499.
	ReturnCode pulumi.IntPtrInput `pulumi:"returnCode"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainIpFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIpFilter)(nil)).Elem()
}

func (i DomainIpFilterArgs) ToDomainIpFilterOutput() DomainIpFilterOutput {
	return i.ToDomainIpFilterOutputWithContext(context.Background())
}

func (i DomainIpFilterArgs) ToDomainIpFilterOutputWithContext(ctx context.Context) DomainIpFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFilterOutput)
}

func (i DomainIpFilterArgs) ToDomainIpFilterPtrOutput() DomainIpFilterPtrOutput {
	return i.ToDomainIpFilterPtrOutputWithContext(context.Background())
}

func (i DomainIpFilterArgs) ToDomainIpFilterPtrOutputWithContext(ctx context.Context) DomainIpFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFilterOutput).ToDomainIpFilterPtrOutputWithContext(ctx)
}

// DomainIpFilterPtrInput is an input type that accepts DomainIpFilterArgs, DomainIpFilterPtr and DomainIpFilterPtrOutput values.
// You can construct a concrete instance of `DomainIpFilterPtrInput` via:
//
//	        DomainIpFilterArgs{...}
//
//	or:
//
//	        nil
type DomainIpFilterPtrInput interface {
	pulumi.Input

	ToDomainIpFilterPtrOutput() DomainIpFilterPtrOutput
	ToDomainIpFilterPtrOutputWithContext(context.Context) DomainIpFilterPtrOutput
}

type domainIpFilterPtrType DomainIpFilterArgs

func DomainIpFilterPtr(v *DomainIpFilterArgs) DomainIpFilterPtrInput {
	return (*domainIpFilterPtrType)(v)
}

func (*domainIpFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIpFilter)(nil)).Elem()
}

func (i *domainIpFilterPtrType) ToDomainIpFilterPtrOutput() DomainIpFilterPtrOutput {
	return i.ToDomainIpFilterPtrOutputWithContext(context.Background())
}

func (i *domainIpFilterPtrType) ToDomainIpFilterPtrOutputWithContext(ctx context.Context) DomainIpFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFilterPtrOutput)
}

type DomainIpFilterOutput struct{ *pulumi.OutputState }

func (DomainIpFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIpFilter)(nil)).Elem()
}

func (o DomainIpFilterOutput) ToDomainIpFilterOutput() DomainIpFilterOutput {
	return o
}

func (o DomainIpFilterOutput) ToDomainIpFilterOutputWithContext(ctx context.Context) DomainIpFilterOutput {
	return o
}

func (o DomainIpFilterOutput) ToDomainIpFilterPtrOutput() DomainIpFilterPtrOutput {
	return o.ToDomainIpFilterPtrOutputWithContext(context.Background())
}

func (o DomainIpFilterOutput) ToDomainIpFilterPtrOutputWithContext(ctx context.Context) DomainIpFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainIpFilter) *DomainIpFilter {
		return &v
	}).(DomainIpFilterPtrOutput)
}

// Ip filter rules, This feature is only available to selected beta customers.
func (o DomainIpFilterOutput) FilterRules() DomainIpFilterFilterRuleArrayOutput {
	return o.ApplyT(func(v DomainIpFilter) []DomainIpFilterFilterRule { return v.FilterRules }).(DomainIpFilterFilterRuleArrayOutput)
}

// IP `blacklist`/`whitelist` type.
func (o DomainIpFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainIpFilter) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
func (o DomainIpFilterOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainIpFilter) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// Return code, available values: 400-499.
func (o DomainIpFilterOutput) ReturnCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainIpFilter) *int { return v.ReturnCode }).(pulumi.IntPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainIpFilterOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIpFilter) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainIpFilterPtrOutput struct{ *pulumi.OutputState }

func (DomainIpFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIpFilter)(nil)).Elem()
}

func (o DomainIpFilterPtrOutput) ToDomainIpFilterPtrOutput() DomainIpFilterPtrOutput {
	return o
}

func (o DomainIpFilterPtrOutput) ToDomainIpFilterPtrOutputWithContext(ctx context.Context) DomainIpFilterPtrOutput {
	return o
}

func (o DomainIpFilterPtrOutput) Elem() DomainIpFilterOutput {
	return o.ApplyT(func(v *DomainIpFilter) DomainIpFilter {
		if v != nil {
			return *v
		}
		var ret DomainIpFilter
		return ret
	}).(DomainIpFilterOutput)
}

// Ip filter rules, This feature is only available to selected beta customers.
func (o DomainIpFilterPtrOutput) FilterRules() DomainIpFilterFilterRuleArrayOutput {
	return o.ApplyT(func(v *DomainIpFilter) []DomainIpFilterFilterRule {
		if v == nil {
			return nil
		}
		return v.FilterRules
	}).(DomainIpFilterFilterRuleArrayOutput)
}

// IP `blacklist`/`whitelist` type.
func (o DomainIpFilterPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIpFilter) *string {
		if v == nil {
			return nil
		}
		return v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Ip filter list, Supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
func (o DomainIpFilterPtrOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainIpFilter) []string {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(pulumi.StringArrayOutput)
}

// Return code, available values: 400-499.
func (o DomainIpFilterPtrOutput) ReturnCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainIpFilter) *int {
		if v == nil {
			return nil
		}
		return v.ReturnCode
	}).(pulumi.IntPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainIpFilterPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIpFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainIpFilterFilterRule struct {
	// Ip filter `blacklist`/`whitelist` type of filter rules.
	FilterType string `pulumi:"filterType"`
	// Ip filter rule list, supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
	Filters []string `pulumi:"filters"`
	// Content list for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	RulePaths []string `pulumi:"rulePaths"`
	// Ip filter rule type of filter rules, available: `all`, `file`, `directory`, `path`.
	RuleType string `pulumi:"ruleType"`
}

// DomainIpFilterFilterRuleInput is an input type that accepts DomainIpFilterFilterRuleArgs and DomainIpFilterFilterRuleOutput values.
// You can construct a concrete instance of `DomainIpFilterFilterRuleInput` via:
//
//	DomainIpFilterFilterRuleArgs{...}
type DomainIpFilterFilterRuleInput interface {
	pulumi.Input

	ToDomainIpFilterFilterRuleOutput() DomainIpFilterFilterRuleOutput
	ToDomainIpFilterFilterRuleOutputWithContext(context.Context) DomainIpFilterFilterRuleOutput
}

type DomainIpFilterFilterRuleArgs struct {
	// Ip filter `blacklist`/`whitelist` type of filter rules.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Ip filter rule list, supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// Content list for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Ip filter rule type of filter rules, available: `all`, `file`, `directory`, `path`.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (DomainIpFilterFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIpFilterFilterRule)(nil)).Elem()
}

func (i DomainIpFilterFilterRuleArgs) ToDomainIpFilterFilterRuleOutput() DomainIpFilterFilterRuleOutput {
	return i.ToDomainIpFilterFilterRuleOutputWithContext(context.Background())
}

func (i DomainIpFilterFilterRuleArgs) ToDomainIpFilterFilterRuleOutputWithContext(ctx context.Context) DomainIpFilterFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFilterFilterRuleOutput)
}

// DomainIpFilterFilterRuleArrayInput is an input type that accepts DomainIpFilterFilterRuleArray and DomainIpFilterFilterRuleArrayOutput values.
// You can construct a concrete instance of `DomainIpFilterFilterRuleArrayInput` via:
//
//	DomainIpFilterFilterRuleArray{ DomainIpFilterFilterRuleArgs{...} }
type DomainIpFilterFilterRuleArrayInput interface {
	pulumi.Input

	ToDomainIpFilterFilterRuleArrayOutput() DomainIpFilterFilterRuleArrayOutput
	ToDomainIpFilterFilterRuleArrayOutputWithContext(context.Context) DomainIpFilterFilterRuleArrayOutput
}

type DomainIpFilterFilterRuleArray []DomainIpFilterFilterRuleInput

func (DomainIpFilterFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainIpFilterFilterRule)(nil)).Elem()
}

func (i DomainIpFilterFilterRuleArray) ToDomainIpFilterFilterRuleArrayOutput() DomainIpFilterFilterRuleArrayOutput {
	return i.ToDomainIpFilterFilterRuleArrayOutputWithContext(context.Background())
}

func (i DomainIpFilterFilterRuleArray) ToDomainIpFilterFilterRuleArrayOutputWithContext(ctx context.Context) DomainIpFilterFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFilterFilterRuleArrayOutput)
}

type DomainIpFilterFilterRuleOutput struct{ *pulumi.OutputState }

func (DomainIpFilterFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIpFilterFilterRule)(nil)).Elem()
}

func (o DomainIpFilterFilterRuleOutput) ToDomainIpFilterFilterRuleOutput() DomainIpFilterFilterRuleOutput {
	return o
}

func (o DomainIpFilterFilterRuleOutput) ToDomainIpFilterFilterRuleOutputWithContext(ctx context.Context) DomainIpFilterFilterRuleOutput {
	return o
}

// Ip filter `blacklist`/`whitelist` type of filter rules.
func (o DomainIpFilterFilterRuleOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIpFilterFilterRule) string { return v.FilterType }).(pulumi.StringOutput)
}

// Ip filter rule list, supports IPs in X.X.X.X format, or /8, /16, /24 format IP ranges. Up to 50 allowlists or blocklists can be entered.
func (o DomainIpFilterFilterRuleOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainIpFilterFilterRule) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// Content list for each `ruleType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
func (o DomainIpFilterFilterRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainIpFilterFilterRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Ip filter rule type of filter rules, available: `all`, `file`, `directory`, `path`.
func (o DomainIpFilterFilterRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIpFilterFilterRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type DomainIpFilterFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainIpFilterFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainIpFilterFilterRule)(nil)).Elem()
}

func (o DomainIpFilterFilterRuleArrayOutput) ToDomainIpFilterFilterRuleArrayOutput() DomainIpFilterFilterRuleArrayOutput {
	return o
}

func (o DomainIpFilterFilterRuleArrayOutput) ToDomainIpFilterFilterRuleArrayOutputWithContext(ctx context.Context) DomainIpFilterFilterRuleArrayOutput {
	return o
}

func (o DomainIpFilterFilterRuleArrayOutput) Index(i pulumi.IntInput) DomainIpFilterFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainIpFilterFilterRule {
		return vs[0].([]DomainIpFilterFilterRule)[vs[1].(int)]
	}).(DomainIpFilterFilterRuleOutput)
}

type DomainIpFreqLimit struct {
	// Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
	Qps *int `pulumi:"qps"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainIpFreqLimitInput is an input type that accepts DomainIpFreqLimitArgs and DomainIpFreqLimitOutput values.
// You can construct a concrete instance of `DomainIpFreqLimitInput` via:
//
//	DomainIpFreqLimitArgs{...}
type DomainIpFreqLimitInput interface {
	pulumi.Input

	ToDomainIpFreqLimitOutput() DomainIpFreqLimitOutput
	ToDomainIpFreqLimitOutputWithContext(context.Context) DomainIpFreqLimitOutput
}

type DomainIpFreqLimitArgs struct {
	// Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
	Qps pulumi.IntPtrInput `pulumi:"qps"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainIpFreqLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIpFreqLimit)(nil)).Elem()
}

func (i DomainIpFreqLimitArgs) ToDomainIpFreqLimitOutput() DomainIpFreqLimitOutput {
	return i.ToDomainIpFreqLimitOutputWithContext(context.Background())
}

func (i DomainIpFreqLimitArgs) ToDomainIpFreqLimitOutputWithContext(ctx context.Context) DomainIpFreqLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFreqLimitOutput)
}

func (i DomainIpFreqLimitArgs) ToDomainIpFreqLimitPtrOutput() DomainIpFreqLimitPtrOutput {
	return i.ToDomainIpFreqLimitPtrOutputWithContext(context.Background())
}

func (i DomainIpFreqLimitArgs) ToDomainIpFreqLimitPtrOutputWithContext(ctx context.Context) DomainIpFreqLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFreqLimitOutput).ToDomainIpFreqLimitPtrOutputWithContext(ctx)
}

// DomainIpFreqLimitPtrInput is an input type that accepts DomainIpFreqLimitArgs, DomainIpFreqLimitPtr and DomainIpFreqLimitPtrOutput values.
// You can construct a concrete instance of `DomainIpFreqLimitPtrInput` via:
//
//	        DomainIpFreqLimitArgs{...}
//
//	or:
//
//	        nil
type DomainIpFreqLimitPtrInput interface {
	pulumi.Input

	ToDomainIpFreqLimitPtrOutput() DomainIpFreqLimitPtrOutput
	ToDomainIpFreqLimitPtrOutputWithContext(context.Context) DomainIpFreqLimitPtrOutput
}

type domainIpFreqLimitPtrType DomainIpFreqLimitArgs

func DomainIpFreqLimitPtr(v *DomainIpFreqLimitArgs) DomainIpFreqLimitPtrInput {
	return (*domainIpFreqLimitPtrType)(v)
}

func (*domainIpFreqLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIpFreqLimit)(nil)).Elem()
}

func (i *domainIpFreqLimitPtrType) ToDomainIpFreqLimitPtrOutput() DomainIpFreqLimitPtrOutput {
	return i.ToDomainIpFreqLimitPtrOutputWithContext(context.Background())
}

func (i *domainIpFreqLimitPtrType) ToDomainIpFreqLimitPtrOutputWithContext(ctx context.Context) DomainIpFreqLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIpFreqLimitPtrOutput)
}

type DomainIpFreqLimitOutput struct{ *pulumi.OutputState }

func (DomainIpFreqLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIpFreqLimit)(nil)).Elem()
}

func (o DomainIpFreqLimitOutput) ToDomainIpFreqLimitOutput() DomainIpFreqLimitOutput {
	return o
}

func (o DomainIpFreqLimitOutput) ToDomainIpFreqLimitOutputWithContext(ctx context.Context) DomainIpFreqLimitOutput {
	return o
}

func (o DomainIpFreqLimitOutput) ToDomainIpFreqLimitPtrOutput() DomainIpFreqLimitPtrOutput {
	return o.ToDomainIpFreqLimitPtrOutputWithContext(context.Background())
}

func (o DomainIpFreqLimitOutput) ToDomainIpFreqLimitPtrOutputWithContext(ctx context.Context) DomainIpFreqLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainIpFreqLimit) *DomainIpFreqLimit {
		return &v
	}).(DomainIpFreqLimitPtrOutput)
}

// Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
func (o DomainIpFreqLimitOutput) Qps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainIpFreqLimit) *int { return v.Qps }).(pulumi.IntPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainIpFreqLimitOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIpFreqLimit) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainIpFreqLimitPtrOutput struct{ *pulumi.OutputState }

func (DomainIpFreqLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIpFreqLimit)(nil)).Elem()
}

func (o DomainIpFreqLimitPtrOutput) ToDomainIpFreqLimitPtrOutput() DomainIpFreqLimitPtrOutput {
	return o
}

func (o DomainIpFreqLimitPtrOutput) ToDomainIpFreqLimitPtrOutputWithContext(ctx context.Context) DomainIpFreqLimitPtrOutput {
	return o
}

func (o DomainIpFreqLimitPtrOutput) Elem() DomainIpFreqLimitOutput {
	return o.ApplyT(func(v *DomainIpFreqLimit) DomainIpFreqLimit {
		if v != nil {
			return *v
		}
		var ret DomainIpFreqLimit
		return ret
	}).(DomainIpFreqLimitOutput)
}

// Sets the limited number of requests per second, 514 will be returned for requests that exceed the limit.
func (o DomainIpFreqLimitPtrOutput) Qps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainIpFreqLimit) *int {
		if v == nil {
			return nil
		}
		return v.Qps
	}).(pulumi.IntPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainIpFreqLimitPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIpFreqLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainMaxAge struct {
	// List of Max Age rule configuration.
	MaxAgeRules []DomainMaxAgeMaxAgeRule `pulumi:"maxAgeRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainMaxAgeInput is an input type that accepts DomainMaxAgeArgs and DomainMaxAgeOutput values.
// You can construct a concrete instance of `DomainMaxAgeInput` via:
//
//	DomainMaxAgeArgs{...}
type DomainMaxAgeInput interface {
	pulumi.Input

	ToDomainMaxAgeOutput() DomainMaxAgeOutput
	ToDomainMaxAgeOutputWithContext(context.Context) DomainMaxAgeOutput
}

type DomainMaxAgeArgs struct {
	// List of Max Age rule configuration.
	MaxAgeRules DomainMaxAgeMaxAgeRuleArrayInput `pulumi:"maxAgeRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainMaxAgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMaxAge)(nil)).Elem()
}

func (i DomainMaxAgeArgs) ToDomainMaxAgeOutput() DomainMaxAgeOutput {
	return i.ToDomainMaxAgeOutputWithContext(context.Background())
}

func (i DomainMaxAgeArgs) ToDomainMaxAgeOutputWithContext(ctx context.Context) DomainMaxAgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMaxAgeOutput)
}

func (i DomainMaxAgeArgs) ToDomainMaxAgePtrOutput() DomainMaxAgePtrOutput {
	return i.ToDomainMaxAgePtrOutputWithContext(context.Background())
}

func (i DomainMaxAgeArgs) ToDomainMaxAgePtrOutputWithContext(ctx context.Context) DomainMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMaxAgeOutput).ToDomainMaxAgePtrOutputWithContext(ctx)
}

// DomainMaxAgePtrInput is an input type that accepts DomainMaxAgeArgs, DomainMaxAgePtr and DomainMaxAgePtrOutput values.
// You can construct a concrete instance of `DomainMaxAgePtrInput` via:
//
//	        DomainMaxAgeArgs{...}
//
//	or:
//
//	        nil
type DomainMaxAgePtrInput interface {
	pulumi.Input

	ToDomainMaxAgePtrOutput() DomainMaxAgePtrOutput
	ToDomainMaxAgePtrOutputWithContext(context.Context) DomainMaxAgePtrOutput
}

type domainMaxAgePtrType DomainMaxAgeArgs

func DomainMaxAgePtr(v *DomainMaxAgeArgs) DomainMaxAgePtrInput {
	return (*domainMaxAgePtrType)(v)
}

func (*domainMaxAgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMaxAge)(nil)).Elem()
}

func (i *domainMaxAgePtrType) ToDomainMaxAgePtrOutput() DomainMaxAgePtrOutput {
	return i.ToDomainMaxAgePtrOutputWithContext(context.Background())
}

func (i *domainMaxAgePtrType) ToDomainMaxAgePtrOutputWithContext(ctx context.Context) DomainMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMaxAgePtrOutput)
}

type DomainMaxAgeOutput struct{ *pulumi.OutputState }

func (DomainMaxAgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMaxAge)(nil)).Elem()
}

func (o DomainMaxAgeOutput) ToDomainMaxAgeOutput() DomainMaxAgeOutput {
	return o
}

func (o DomainMaxAgeOutput) ToDomainMaxAgeOutputWithContext(ctx context.Context) DomainMaxAgeOutput {
	return o
}

func (o DomainMaxAgeOutput) ToDomainMaxAgePtrOutput() DomainMaxAgePtrOutput {
	return o.ToDomainMaxAgePtrOutputWithContext(context.Background())
}

func (o DomainMaxAgeOutput) ToDomainMaxAgePtrOutputWithContext(ctx context.Context) DomainMaxAgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMaxAge) *DomainMaxAge {
		return &v
	}).(DomainMaxAgePtrOutput)
}

// List of Max Age rule configuration.
func (o DomainMaxAgeOutput) MaxAgeRules() DomainMaxAgeMaxAgeRuleArrayOutput {
	return o.ApplyT(func(v DomainMaxAge) []DomainMaxAgeMaxAgeRule { return v.MaxAgeRules }).(DomainMaxAgeMaxAgeRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainMaxAgeOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMaxAge) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainMaxAgePtrOutput struct{ *pulumi.OutputState }

func (DomainMaxAgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMaxAge)(nil)).Elem()
}

func (o DomainMaxAgePtrOutput) ToDomainMaxAgePtrOutput() DomainMaxAgePtrOutput {
	return o
}

func (o DomainMaxAgePtrOutput) ToDomainMaxAgePtrOutputWithContext(ctx context.Context) DomainMaxAgePtrOutput {
	return o
}

func (o DomainMaxAgePtrOutput) Elem() DomainMaxAgeOutput {
	return o.ApplyT(func(v *DomainMaxAge) DomainMaxAge {
		if v != nil {
			return *v
		}
		var ret DomainMaxAge
		return ret
	}).(DomainMaxAgeOutput)
}

// List of Max Age rule configuration.
func (o DomainMaxAgePtrOutput) MaxAgeRules() DomainMaxAgeMaxAgeRuleArrayOutput {
	return o.ApplyT(func(v *DomainMaxAge) []DomainMaxAgeMaxAgeRule {
		if v == nil {
			return nil
		}
		return v.MaxAgeRules
	}).(DomainMaxAgeMaxAgeRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainMaxAgePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMaxAge) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainMaxAgeMaxAgeRule struct {
	// Whether to follow origin, values: `on`/`off`, if set to `on`, the `maxAgeTime` will be ignored.
	FollowOrigin *string `pulumi:"followOrigin"`
	// List of rule paths for each `maxAgeType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	MaxAgeContents []string `pulumi:"maxAgeContents"`
	// Max Age time in seconds, this can set to `0` that stands for no cache.
	MaxAgeTime int `pulumi:"maxAgeTime"`
	// The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
	MaxAgeType string `pulumi:"maxAgeType"`
}

// DomainMaxAgeMaxAgeRuleInput is an input type that accepts DomainMaxAgeMaxAgeRuleArgs and DomainMaxAgeMaxAgeRuleOutput values.
// You can construct a concrete instance of `DomainMaxAgeMaxAgeRuleInput` via:
//
//	DomainMaxAgeMaxAgeRuleArgs{...}
type DomainMaxAgeMaxAgeRuleInput interface {
	pulumi.Input

	ToDomainMaxAgeMaxAgeRuleOutput() DomainMaxAgeMaxAgeRuleOutput
	ToDomainMaxAgeMaxAgeRuleOutputWithContext(context.Context) DomainMaxAgeMaxAgeRuleOutput
}

type DomainMaxAgeMaxAgeRuleArgs struct {
	// Whether to follow origin, values: `on`/`off`, if set to `on`, the `maxAgeTime` will be ignored.
	FollowOrigin pulumi.StringPtrInput `pulumi:"followOrigin"`
	// List of rule paths for each `maxAgeType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
	MaxAgeContents pulumi.StringArrayInput `pulumi:"maxAgeContents"`
	// Max Age time in seconds, this can set to `0` that stands for no cache.
	MaxAgeTime pulumi.IntInput `pulumi:"maxAgeTime"`
	// The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
	MaxAgeType pulumi.StringInput `pulumi:"maxAgeType"`
}

func (DomainMaxAgeMaxAgeRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMaxAgeMaxAgeRule)(nil)).Elem()
}

func (i DomainMaxAgeMaxAgeRuleArgs) ToDomainMaxAgeMaxAgeRuleOutput() DomainMaxAgeMaxAgeRuleOutput {
	return i.ToDomainMaxAgeMaxAgeRuleOutputWithContext(context.Background())
}

func (i DomainMaxAgeMaxAgeRuleArgs) ToDomainMaxAgeMaxAgeRuleOutputWithContext(ctx context.Context) DomainMaxAgeMaxAgeRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMaxAgeMaxAgeRuleOutput)
}

// DomainMaxAgeMaxAgeRuleArrayInput is an input type that accepts DomainMaxAgeMaxAgeRuleArray and DomainMaxAgeMaxAgeRuleArrayOutput values.
// You can construct a concrete instance of `DomainMaxAgeMaxAgeRuleArrayInput` via:
//
//	DomainMaxAgeMaxAgeRuleArray{ DomainMaxAgeMaxAgeRuleArgs{...} }
type DomainMaxAgeMaxAgeRuleArrayInput interface {
	pulumi.Input

	ToDomainMaxAgeMaxAgeRuleArrayOutput() DomainMaxAgeMaxAgeRuleArrayOutput
	ToDomainMaxAgeMaxAgeRuleArrayOutputWithContext(context.Context) DomainMaxAgeMaxAgeRuleArrayOutput
}

type DomainMaxAgeMaxAgeRuleArray []DomainMaxAgeMaxAgeRuleInput

func (DomainMaxAgeMaxAgeRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainMaxAgeMaxAgeRule)(nil)).Elem()
}

func (i DomainMaxAgeMaxAgeRuleArray) ToDomainMaxAgeMaxAgeRuleArrayOutput() DomainMaxAgeMaxAgeRuleArrayOutput {
	return i.ToDomainMaxAgeMaxAgeRuleArrayOutputWithContext(context.Background())
}

func (i DomainMaxAgeMaxAgeRuleArray) ToDomainMaxAgeMaxAgeRuleArrayOutputWithContext(ctx context.Context) DomainMaxAgeMaxAgeRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMaxAgeMaxAgeRuleArrayOutput)
}

type DomainMaxAgeMaxAgeRuleOutput struct{ *pulumi.OutputState }

func (DomainMaxAgeMaxAgeRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMaxAgeMaxAgeRule)(nil)).Elem()
}

func (o DomainMaxAgeMaxAgeRuleOutput) ToDomainMaxAgeMaxAgeRuleOutput() DomainMaxAgeMaxAgeRuleOutput {
	return o
}

func (o DomainMaxAgeMaxAgeRuleOutput) ToDomainMaxAgeMaxAgeRuleOutputWithContext(ctx context.Context) DomainMaxAgeMaxAgeRuleOutput {
	return o
}

// Whether to follow origin, values: `on`/`off`, if set to `on`, the `maxAgeTime` will be ignored.
func (o DomainMaxAgeMaxAgeRuleOutput) FollowOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMaxAgeMaxAgeRule) *string { return v.FollowOrigin }).(pulumi.StringPtrOutput)
}

// List of rule paths for each `maxAgeType`: `*` for `all`, file ext like `jpg` for `file`, `/dir/like/` for `directory` and `/path/index.html` for `path`.
func (o DomainMaxAgeMaxAgeRuleOutput) MaxAgeContents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainMaxAgeMaxAgeRule) []string { return v.MaxAgeContents }).(pulumi.StringArrayOutput)
}

// Max Age time in seconds, this can set to `0` that stands for no cache.
func (o DomainMaxAgeMaxAgeRuleOutput) MaxAgeTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainMaxAgeMaxAgeRule) int { return v.MaxAgeTime }).(pulumi.IntOutput)
}

// The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
func (o DomainMaxAgeMaxAgeRuleOutput) MaxAgeType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMaxAgeMaxAgeRule) string { return v.MaxAgeType }).(pulumi.StringOutput)
}

type DomainMaxAgeMaxAgeRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainMaxAgeMaxAgeRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainMaxAgeMaxAgeRule)(nil)).Elem()
}

func (o DomainMaxAgeMaxAgeRuleArrayOutput) ToDomainMaxAgeMaxAgeRuleArrayOutput() DomainMaxAgeMaxAgeRuleArrayOutput {
	return o
}

func (o DomainMaxAgeMaxAgeRuleArrayOutput) ToDomainMaxAgeMaxAgeRuleArrayOutputWithContext(ctx context.Context) DomainMaxAgeMaxAgeRuleArrayOutput {
	return o
}

func (o DomainMaxAgeMaxAgeRuleArrayOutput) Index(i pulumi.IntInput) DomainMaxAgeMaxAgeRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainMaxAgeMaxAgeRule {
		return vs[0].([]DomainMaxAgeMaxAgeRule)[vs[1].(int)]
	}).(DomainMaxAgeMaxAgeRuleOutput)
}

type DomainOrigin struct {
	// Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backupOriginType`.
	BackupOriginLists []string `pulumi:"backupOriginLists"`
	// Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name.
	BackupOriginType *string `pulumi:"backupOriginType"`
	// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
	BackupServerName *string `pulumi:"backupServerName"`
	// When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
	CosPrivateAccess *string `pulumi:"cosPrivateAccess"`
	// Object storage back to the source vendor. Required when the source station type is a third-party storage source station (third_party). Optional values include the following: `awsS3`: AWS S3; `aliOss`: Alibaba Cloud OSS; `hwObs`: Huawei OBS; `qiniuKodo`: Qiniu Cloud kodo; `others`: other vendors' object storage, only supports object storage compatible with AWS signature algorithm, such as Tencent Cloud Financial Zone COS. Example value: `hwObs`.
	OriginCompany *string `pulumi:"originCompany"`
	// Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `originType`.
	OriginLists []string `pulumi:"originLists"`
	// Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
	OriginPullProtocol *string `pulumi:"originPullProtocol"`
	// Master origin server type. The following types are supported: `domain`: Domain name, `domainv6`: IPv6 domain name, `cos`: COS bucket address, `thirdParty`: Third-party object storage origin, `igtm`: IGTM origin, `ip`: IP address, `ipv6`: One IPv6 address, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipDomain`: IP addresses and domain names (only available to beta users), `ipDomainv6`: Multiple IPv4 addresses and one IPv6 domain name, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipv6Domainv6`: Multiple IPv6 addresses and one IPv6 domain name, `domainDomainv6`: Multiple IPv4 domain names and one IPv6 domain name, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name, `ipIpv6Domainv6`: Multiple IPv4 and IPv6 addresses and one IPv6 domain name, `ipDomainDomainv6`: Multiple IPv4 addresses and IPv4 domain names and one IPv6 domain name, `ipv6DomainDomainv6`: Multiple IPv4 domain names and IPv6 addresses and one IPv6 domain name, `ipIpv6DomainDomainv6`: Multiple IPv4 and IPv6 addresses and IPv4 domain names and one IPv6 domain name.
	OriginType string `pulumi:"originType"`
	// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
	ServerName *string `pulumi:"serverName"`
}

// DomainOriginInput is an input type that accepts DomainOriginArgs and DomainOriginOutput values.
// You can construct a concrete instance of `DomainOriginInput` via:
//
//	DomainOriginArgs{...}
type DomainOriginInput interface {
	pulumi.Input

	ToDomainOriginOutput() DomainOriginOutput
	ToDomainOriginOutputWithContext(context.Context) DomainOriginOutput
}

type DomainOriginArgs struct {
	// Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backupOriginType`.
	BackupOriginLists pulumi.StringArrayInput `pulumi:"backupOriginLists"`
	// Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name.
	BackupOriginType pulumi.StringPtrInput `pulumi:"backupOriginType"`
	// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
	BackupServerName pulumi.StringPtrInput `pulumi:"backupServerName"`
	// When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
	CosPrivateAccess pulumi.StringPtrInput `pulumi:"cosPrivateAccess"`
	// Object storage back to the source vendor. Required when the source station type is a third-party storage source station (third_party). Optional values include the following: `awsS3`: AWS S3; `aliOss`: Alibaba Cloud OSS; `hwObs`: Huawei OBS; `qiniuKodo`: Qiniu Cloud kodo; `others`: other vendors' object storage, only supports object storage compatible with AWS signature algorithm, such as Tencent Cloud Financial Zone COS. Example value: `hwObs`.
	OriginCompany pulumi.StringPtrInput `pulumi:"originCompany"`
	// Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `originType`.
	OriginLists pulumi.StringArrayInput `pulumi:"originLists"`
	// Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
	OriginPullProtocol pulumi.StringPtrInput `pulumi:"originPullProtocol"`
	// Master origin server type. The following types are supported: `domain`: Domain name, `domainv6`: IPv6 domain name, `cos`: COS bucket address, `thirdParty`: Third-party object storage origin, `igtm`: IGTM origin, `ip`: IP address, `ipv6`: One IPv6 address, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipDomain`: IP addresses and domain names (only available to beta users), `ipDomainv6`: Multiple IPv4 addresses and one IPv6 domain name, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipv6Domainv6`: Multiple IPv6 addresses and one IPv6 domain name, `domainDomainv6`: Multiple IPv4 domain names and one IPv6 domain name, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name, `ipIpv6Domainv6`: Multiple IPv4 and IPv6 addresses and one IPv6 domain name, `ipDomainDomainv6`: Multiple IPv4 addresses and IPv4 domain names and one IPv6 domain name, `ipv6DomainDomainv6`: Multiple IPv4 domain names and IPv6 addresses and one IPv6 domain name, `ipIpv6DomainDomainv6`: Multiple IPv4 and IPv6 addresses and IPv4 domain names and one IPv6 domain name.
	OriginType pulumi.StringInput `pulumi:"originType"`
	// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (DomainOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOrigin)(nil)).Elem()
}

func (i DomainOriginArgs) ToDomainOriginOutput() DomainOriginOutput {
	return i.ToDomainOriginOutputWithContext(context.Background())
}

func (i DomainOriginArgs) ToDomainOriginOutputWithContext(ctx context.Context) DomainOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginOutput)
}

func (i DomainOriginArgs) ToDomainOriginPtrOutput() DomainOriginPtrOutput {
	return i.ToDomainOriginPtrOutputWithContext(context.Background())
}

func (i DomainOriginArgs) ToDomainOriginPtrOutputWithContext(ctx context.Context) DomainOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginOutput).ToDomainOriginPtrOutputWithContext(ctx)
}

// DomainOriginPtrInput is an input type that accepts DomainOriginArgs, DomainOriginPtr and DomainOriginPtrOutput values.
// You can construct a concrete instance of `DomainOriginPtrInput` via:
//
//	        DomainOriginArgs{...}
//
//	or:
//
//	        nil
type DomainOriginPtrInput interface {
	pulumi.Input

	ToDomainOriginPtrOutput() DomainOriginPtrOutput
	ToDomainOriginPtrOutputWithContext(context.Context) DomainOriginPtrOutput
}

type domainOriginPtrType DomainOriginArgs

func DomainOriginPtr(v *DomainOriginArgs) DomainOriginPtrInput {
	return (*domainOriginPtrType)(v)
}

func (*domainOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOrigin)(nil)).Elem()
}

func (i *domainOriginPtrType) ToDomainOriginPtrOutput() DomainOriginPtrOutput {
	return i.ToDomainOriginPtrOutputWithContext(context.Background())
}

func (i *domainOriginPtrType) ToDomainOriginPtrOutputWithContext(ctx context.Context) DomainOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPtrOutput)
}

type DomainOriginOutput struct{ *pulumi.OutputState }

func (DomainOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOrigin)(nil)).Elem()
}

func (o DomainOriginOutput) ToDomainOriginOutput() DomainOriginOutput {
	return o
}

func (o DomainOriginOutput) ToDomainOriginOutputWithContext(ctx context.Context) DomainOriginOutput {
	return o
}

func (o DomainOriginOutput) ToDomainOriginPtrOutput() DomainOriginPtrOutput {
	return o.ToDomainOriginPtrOutputWithContext(context.Background())
}

func (o DomainOriginOutput) ToDomainOriginPtrOutputWithContext(ctx context.Context) DomainOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOrigin) *DomainOrigin {
		return &v
	}).(DomainOriginPtrOutput)
}

// Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backupOriginType`.
func (o DomainOriginOutput) BackupOriginLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainOrigin) []string { return v.BackupOriginLists }).(pulumi.StringArrayOutput)
}

// Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name.
func (o DomainOriginOutput) BackupOriginType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOrigin) *string { return v.BackupOriginType }).(pulumi.StringPtrOutput)
}

// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
func (o DomainOriginOutput) BackupServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOrigin) *string { return v.BackupServerName }).(pulumi.StringPtrOutput)
}

// When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
func (o DomainOriginOutput) CosPrivateAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOrigin) *string { return v.CosPrivateAccess }).(pulumi.StringPtrOutput)
}

// Object storage back to the source vendor. Required when the source station type is a third-party storage source station (third_party). Optional values include the following: `awsS3`: AWS S3; `aliOss`: Alibaba Cloud OSS; `hwObs`: Huawei OBS; `qiniuKodo`: Qiniu Cloud kodo; `others`: other vendors' object storage, only supports object storage compatible with AWS signature algorithm, such as Tencent Cloud Financial Zone COS. Example value: `hwObs`.
func (o DomainOriginOutput) OriginCompany() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOrigin) *string { return v.OriginCompany }).(pulumi.StringPtrOutput)
}

// Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `originType`.
func (o DomainOriginOutput) OriginLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainOrigin) []string { return v.OriginLists }).(pulumi.StringArrayOutput)
}

// Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
func (o DomainOriginOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOrigin) *string { return v.OriginPullProtocol }).(pulumi.StringPtrOutput)
}

// Master origin server type. The following types are supported: `domain`: Domain name, `domainv6`: IPv6 domain name, `cos`: COS bucket address, `thirdParty`: Third-party object storage origin, `igtm`: IGTM origin, `ip`: IP address, `ipv6`: One IPv6 address, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipDomain`: IP addresses and domain names (only available to beta users), `ipDomainv6`: Multiple IPv4 addresses and one IPv6 domain name, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipv6Domainv6`: Multiple IPv6 addresses and one IPv6 domain name, `domainDomainv6`: Multiple IPv4 domain names and one IPv6 domain name, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name, `ipIpv6Domainv6`: Multiple IPv4 and IPv6 addresses and one IPv6 domain name, `ipDomainDomainv6`: Multiple IPv4 addresses and IPv4 domain names and one IPv6 domain name, `ipv6DomainDomainv6`: Multiple IPv4 domain names and IPv6 addresses and one IPv6 domain name, `ipIpv6DomainDomainv6`: Multiple IPv4 and IPv6 addresses and IPv4 domain names and one IPv6 domain name.
func (o DomainOriginOutput) OriginType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainOrigin) string { return v.OriginType }).(pulumi.StringOutput)
}

// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
func (o DomainOriginOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOrigin) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type DomainOriginPtrOutput struct{ *pulumi.OutputState }

func (DomainOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOrigin)(nil)).Elem()
}

func (o DomainOriginPtrOutput) ToDomainOriginPtrOutput() DomainOriginPtrOutput {
	return o
}

func (o DomainOriginPtrOutput) ToDomainOriginPtrOutputWithContext(ctx context.Context) DomainOriginPtrOutput {
	return o
}

func (o DomainOriginPtrOutput) Elem() DomainOriginOutput {
	return o.ApplyT(func(v *DomainOrigin) DomainOrigin {
		if v != nil {
			return *v
		}
		var ret DomainOrigin
		return ret
	}).(DomainOriginOutput)
}

// Backup origin server list. Valid values can be ip or domain name. When modifying the backup origin server, you need to enter the corresponding `backupOriginType`.
func (o DomainOriginPtrOutput) BackupOriginLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainOrigin) []string {
		if v == nil {
			return nil
		}
		return v.BackupOriginLists
	}).(pulumi.StringArrayOutput)
}

// Backup origin server type, which supports the following types: `domain`: domain name type, `ip`: IP list used as origin server, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name.
func (o DomainOriginPtrOutput) BackupOriginType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return v.BackupOriginType
	}).(pulumi.StringPtrOutput)
}

// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
func (o DomainOriginPtrOutput) BackupServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return v.BackupServerName
	}).(pulumi.StringPtrOutput)
}

// When OriginType is COS, you can specify if access to private buckets is allowed. Valid values are `on` and `off`. and default value is `off`.
func (o DomainOriginPtrOutput) CosPrivateAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return v.CosPrivateAccess
	}).(pulumi.StringPtrOutput)
}

// Object storage back to the source vendor. Required when the source station type is a third-party storage source station (third_party). Optional values include the following: `awsS3`: AWS S3; `aliOss`: Alibaba Cloud OSS; `hwObs`: Huawei OBS; `qiniuKodo`: Qiniu Cloud kodo; `others`: other vendors' object storage, only supports object storage compatible with AWS signature algorithm, such as Tencent Cloud Financial Zone COS. Example value: `hwObs`.
func (o DomainOriginPtrOutput) OriginCompany() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return v.OriginCompany
	}).(pulumi.StringPtrOutput)
}

// Master origin server list. Valid values can be ip or domain name. When modifying the origin server, you need to enter the corresponding `originType`.
func (o DomainOriginPtrOutput) OriginLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainOrigin) []string {
		if v == nil {
			return nil
		}
		return v.OriginLists
	}).(pulumi.StringArrayOutput)
}

// Origin-pull protocol configuration. `http`: forced HTTP origin-pull, `follow`: protocol follow origin-pull, `https`: forced HTTPS origin-pull. This only supports origin server port 443 for origin-pull.
func (o DomainOriginPtrOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return v.OriginPullProtocol
	}).(pulumi.StringPtrOutput)
}

// Master origin server type. The following types are supported: `domain`: Domain name, `domainv6`: IPv6 domain name, `cos`: COS bucket address, `thirdParty`: Third-party object storage origin, `igtm`: IGTM origin, `ip`: IP address, `ipv6`: One IPv6 address, `ipIpv6`: Multiple IPv4 addresses and one IPv6 address, `ipDomain`: IP addresses and domain names (only available to beta users), `ipDomainv6`: Multiple IPv4 addresses and one IPv6 domain name, `ipv6Domain`: Multiple IPv6 addresses and one domain name, `ipv6Domainv6`: Multiple IPv6 addresses and one IPv6 domain name, `domainDomainv6`: Multiple IPv4 domain names and one IPv6 domain name, `ipIpv6Domain`: Multiple IPv4 and IPv6 addresses and one domain name, `ipIpv6Domainv6`: Multiple IPv4 and IPv6 addresses and one IPv6 domain name, `ipDomainDomainv6`: Multiple IPv4 addresses and IPv4 domain names and one IPv6 domain name, `ipv6DomainDomainv6`: Multiple IPv4 domain names and IPv6 addresses and one IPv6 domain name, `ipIpv6DomainDomainv6`: Multiple IPv4 and IPv6 addresses and IPv4 domain names and one IPv6 domain name.
func (o DomainOriginPtrOutput) OriginType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.OriginType
	}).(pulumi.StringPtrOutput)
}

// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
func (o DomainOriginPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOrigin) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

type DomainOriginPullOptimization struct {
	// Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
	OptimizationType *string `pulumi:"optimizationType"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainOriginPullOptimizationInput is an input type that accepts DomainOriginPullOptimizationArgs and DomainOriginPullOptimizationOutput values.
// You can construct a concrete instance of `DomainOriginPullOptimizationInput` via:
//
//	DomainOriginPullOptimizationArgs{...}
type DomainOriginPullOptimizationInput interface {
	pulumi.Input

	ToDomainOriginPullOptimizationOutput() DomainOriginPullOptimizationOutput
	ToDomainOriginPullOptimizationOutputWithContext(context.Context) DomainOriginPullOptimizationOutput
}

type DomainOriginPullOptimizationArgs struct {
	// Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
	OptimizationType pulumi.StringPtrInput `pulumi:"optimizationType"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainOriginPullOptimizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOriginPullOptimization)(nil)).Elem()
}

func (i DomainOriginPullOptimizationArgs) ToDomainOriginPullOptimizationOutput() DomainOriginPullOptimizationOutput {
	return i.ToDomainOriginPullOptimizationOutputWithContext(context.Background())
}

func (i DomainOriginPullOptimizationArgs) ToDomainOriginPullOptimizationOutputWithContext(ctx context.Context) DomainOriginPullOptimizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPullOptimizationOutput)
}

func (i DomainOriginPullOptimizationArgs) ToDomainOriginPullOptimizationPtrOutput() DomainOriginPullOptimizationPtrOutput {
	return i.ToDomainOriginPullOptimizationPtrOutputWithContext(context.Background())
}

func (i DomainOriginPullOptimizationArgs) ToDomainOriginPullOptimizationPtrOutputWithContext(ctx context.Context) DomainOriginPullOptimizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPullOptimizationOutput).ToDomainOriginPullOptimizationPtrOutputWithContext(ctx)
}

// DomainOriginPullOptimizationPtrInput is an input type that accepts DomainOriginPullOptimizationArgs, DomainOriginPullOptimizationPtr and DomainOriginPullOptimizationPtrOutput values.
// You can construct a concrete instance of `DomainOriginPullOptimizationPtrInput` via:
//
//	        DomainOriginPullOptimizationArgs{...}
//
//	or:
//
//	        nil
type DomainOriginPullOptimizationPtrInput interface {
	pulumi.Input

	ToDomainOriginPullOptimizationPtrOutput() DomainOriginPullOptimizationPtrOutput
	ToDomainOriginPullOptimizationPtrOutputWithContext(context.Context) DomainOriginPullOptimizationPtrOutput
}

type domainOriginPullOptimizationPtrType DomainOriginPullOptimizationArgs

func DomainOriginPullOptimizationPtr(v *DomainOriginPullOptimizationArgs) DomainOriginPullOptimizationPtrInput {
	return (*domainOriginPullOptimizationPtrType)(v)
}

func (*domainOriginPullOptimizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOriginPullOptimization)(nil)).Elem()
}

func (i *domainOriginPullOptimizationPtrType) ToDomainOriginPullOptimizationPtrOutput() DomainOriginPullOptimizationPtrOutput {
	return i.ToDomainOriginPullOptimizationPtrOutputWithContext(context.Background())
}

func (i *domainOriginPullOptimizationPtrType) ToDomainOriginPullOptimizationPtrOutputWithContext(ctx context.Context) DomainOriginPullOptimizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPullOptimizationPtrOutput)
}

type DomainOriginPullOptimizationOutput struct{ *pulumi.OutputState }

func (DomainOriginPullOptimizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOriginPullOptimization)(nil)).Elem()
}

func (o DomainOriginPullOptimizationOutput) ToDomainOriginPullOptimizationOutput() DomainOriginPullOptimizationOutput {
	return o
}

func (o DomainOriginPullOptimizationOutput) ToDomainOriginPullOptimizationOutputWithContext(ctx context.Context) DomainOriginPullOptimizationOutput {
	return o
}

func (o DomainOriginPullOptimizationOutput) ToDomainOriginPullOptimizationPtrOutput() DomainOriginPullOptimizationPtrOutput {
	return o.ToDomainOriginPullOptimizationPtrOutputWithContext(context.Background())
}

func (o DomainOriginPullOptimizationOutput) ToDomainOriginPullOptimizationPtrOutputWithContext(ctx context.Context) DomainOriginPullOptimizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOriginPullOptimization) *DomainOriginPullOptimization {
		return &v
	}).(DomainOriginPullOptimizationPtrOutput)
}

// Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
func (o DomainOriginPullOptimizationOutput) OptimizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOriginPullOptimization) *string { return v.OptimizationType }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainOriginPullOptimizationOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainOriginPullOptimization) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainOriginPullOptimizationPtrOutput struct{ *pulumi.OutputState }

func (DomainOriginPullOptimizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOriginPullOptimization)(nil)).Elem()
}

func (o DomainOriginPullOptimizationPtrOutput) ToDomainOriginPullOptimizationPtrOutput() DomainOriginPullOptimizationPtrOutput {
	return o
}

func (o DomainOriginPullOptimizationPtrOutput) ToDomainOriginPullOptimizationPtrOutputWithContext(ctx context.Context) DomainOriginPullOptimizationPtrOutput {
	return o
}

func (o DomainOriginPullOptimizationPtrOutput) Elem() DomainOriginPullOptimizationOutput {
	return o.ApplyT(func(v *DomainOriginPullOptimization) DomainOriginPullOptimization {
		if v != nil {
			return *v
		}
		var ret DomainOriginPullOptimization
		return ret
	}).(DomainOriginPullOptimizationOutput)
}

// Optimization type, values: `OVToCN` - Overseas to CN, `CNToOV` CN to Overseas.
func (o DomainOriginPullOptimizationPtrOutput) OptimizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOriginPullOptimization) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationType
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainOriginPullOptimizationPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOriginPullOptimization) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainOriginPullTimeout struct {
	// The origin-pull connection timeout (in seconds). Valid range: 5-60.
	ConnectTimeout int `pulumi:"connectTimeout"`
	// The origin-pull receipt timeout (in seconds). Valid range: 10-60.
	ReceiveTimeout int `pulumi:"receiveTimeout"`
}

// DomainOriginPullTimeoutInput is an input type that accepts DomainOriginPullTimeoutArgs and DomainOriginPullTimeoutOutput values.
// You can construct a concrete instance of `DomainOriginPullTimeoutInput` via:
//
//	DomainOriginPullTimeoutArgs{...}
type DomainOriginPullTimeoutInput interface {
	pulumi.Input

	ToDomainOriginPullTimeoutOutput() DomainOriginPullTimeoutOutput
	ToDomainOriginPullTimeoutOutputWithContext(context.Context) DomainOriginPullTimeoutOutput
}

type DomainOriginPullTimeoutArgs struct {
	// The origin-pull connection timeout (in seconds). Valid range: 5-60.
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// The origin-pull receipt timeout (in seconds). Valid range: 10-60.
	ReceiveTimeout pulumi.IntInput `pulumi:"receiveTimeout"`
}

func (DomainOriginPullTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOriginPullTimeout)(nil)).Elem()
}

func (i DomainOriginPullTimeoutArgs) ToDomainOriginPullTimeoutOutput() DomainOriginPullTimeoutOutput {
	return i.ToDomainOriginPullTimeoutOutputWithContext(context.Background())
}

func (i DomainOriginPullTimeoutArgs) ToDomainOriginPullTimeoutOutputWithContext(ctx context.Context) DomainOriginPullTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPullTimeoutOutput)
}

func (i DomainOriginPullTimeoutArgs) ToDomainOriginPullTimeoutPtrOutput() DomainOriginPullTimeoutPtrOutput {
	return i.ToDomainOriginPullTimeoutPtrOutputWithContext(context.Background())
}

func (i DomainOriginPullTimeoutArgs) ToDomainOriginPullTimeoutPtrOutputWithContext(ctx context.Context) DomainOriginPullTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPullTimeoutOutput).ToDomainOriginPullTimeoutPtrOutputWithContext(ctx)
}

// DomainOriginPullTimeoutPtrInput is an input type that accepts DomainOriginPullTimeoutArgs, DomainOriginPullTimeoutPtr and DomainOriginPullTimeoutPtrOutput values.
// You can construct a concrete instance of `DomainOriginPullTimeoutPtrInput` via:
//
//	        DomainOriginPullTimeoutArgs{...}
//
//	or:
//
//	        nil
type DomainOriginPullTimeoutPtrInput interface {
	pulumi.Input

	ToDomainOriginPullTimeoutPtrOutput() DomainOriginPullTimeoutPtrOutput
	ToDomainOriginPullTimeoutPtrOutputWithContext(context.Context) DomainOriginPullTimeoutPtrOutput
}

type domainOriginPullTimeoutPtrType DomainOriginPullTimeoutArgs

func DomainOriginPullTimeoutPtr(v *DomainOriginPullTimeoutArgs) DomainOriginPullTimeoutPtrInput {
	return (*domainOriginPullTimeoutPtrType)(v)
}

func (*domainOriginPullTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOriginPullTimeout)(nil)).Elem()
}

func (i *domainOriginPullTimeoutPtrType) ToDomainOriginPullTimeoutPtrOutput() DomainOriginPullTimeoutPtrOutput {
	return i.ToDomainOriginPullTimeoutPtrOutputWithContext(context.Background())
}

func (i *domainOriginPullTimeoutPtrType) ToDomainOriginPullTimeoutPtrOutputWithContext(ctx context.Context) DomainOriginPullTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOriginPullTimeoutPtrOutput)
}

type DomainOriginPullTimeoutOutput struct{ *pulumi.OutputState }

func (DomainOriginPullTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOriginPullTimeout)(nil)).Elem()
}

func (o DomainOriginPullTimeoutOutput) ToDomainOriginPullTimeoutOutput() DomainOriginPullTimeoutOutput {
	return o
}

func (o DomainOriginPullTimeoutOutput) ToDomainOriginPullTimeoutOutputWithContext(ctx context.Context) DomainOriginPullTimeoutOutput {
	return o
}

func (o DomainOriginPullTimeoutOutput) ToDomainOriginPullTimeoutPtrOutput() DomainOriginPullTimeoutPtrOutput {
	return o.ToDomainOriginPullTimeoutPtrOutputWithContext(context.Background())
}

func (o DomainOriginPullTimeoutOutput) ToDomainOriginPullTimeoutPtrOutputWithContext(ctx context.Context) DomainOriginPullTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOriginPullTimeout) *DomainOriginPullTimeout {
		return &v
	}).(DomainOriginPullTimeoutPtrOutput)
}

// The origin-pull connection timeout (in seconds). Valid range: 5-60.
func (o DomainOriginPullTimeoutOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v DomainOriginPullTimeout) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// The origin-pull receipt timeout (in seconds). Valid range: 10-60.
func (o DomainOriginPullTimeoutOutput) ReceiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v DomainOriginPullTimeout) int { return v.ReceiveTimeout }).(pulumi.IntOutput)
}

type DomainOriginPullTimeoutPtrOutput struct{ *pulumi.OutputState }

func (DomainOriginPullTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOriginPullTimeout)(nil)).Elem()
}

func (o DomainOriginPullTimeoutPtrOutput) ToDomainOriginPullTimeoutPtrOutput() DomainOriginPullTimeoutPtrOutput {
	return o
}

func (o DomainOriginPullTimeoutPtrOutput) ToDomainOriginPullTimeoutPtrOutputWithContext(ctx context.Context) DomainOriginPullTimeoutPtrOutput {
	return o
}

func (o DomainOriginPullTimeoutPtrOutput) Elem() DomainOriginPullTimeoutOutput {
	return o.ApplyT(func(v *DomainOriginPullTimeout) DomainOriginPullTimeout {
		if v != nil {
			return *v
		}
		var ret DomainOriginPullTimeout
		return ret
	}).(DomainOriginPullTimeoutOutput)
}

// The origin-pull connection timeout (in seconds). Valid range: 5-60.
func (o DomainOriginPullTimeoutPtrOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainOriginPullTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.ConnectTimeout
	}).(pulumi.IntPtrOutput)
}

// The origin-pull receipt timeout (in seconds). Valid range: 10-60.
func (o DomainOriginPullTimeoutPtrOutput) ReceiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainOriginPullTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.ReceiveTimeout
	}).(pulumi.IntPtrOutput)
}

type DomainOssPrivateAccess struct {
	// Access ID.
	AccessKey *string `pulumi:"accessKey"`
	// Bucket.
	Bucket *string `pulumi:"bucket"`
	// Region.
	Region *string `pulumi:"region"`
	// Key.
	SecretKey *string `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainOssPrivateAccessInput is an input type that accepts DomainOssPrivateAccessArgs and DomainOssPrivateAccessOutput values.
// You can construct a concrete instance of `DomainOssPrivateAccessInput` via:
//
//	DomainOssPrivateAccessArgs{...}
type DomainOssPrivateAccessInput interface {
	pulumi.Input

	ToDomainOssPrivateAccessOutput() DomainOssPrivateAccessOutput
	ToDomainOssPrivateAccessOutputWithContext(context.Context) DomainOssPrivateAccessOutput
}

type DomainOssPrivateAccessArgs struct {
	// Access ID.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Key.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainOssPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOssPrivateAccess)(nil)).Elem()
}

func (i DomainOssPrivateAccessArgs) ToDomainOssPrivateAccessOutput() DomainOssPrivateAccessOutput {
	return i.ToDomainOssPrivateAccessOutputWithContext(context.Background())
}

func (i DomainOssPrivateAccessArgs) ToDomainOssPrivateAccessOutputWithContext(ctx context.Context) DomainOssPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOssPrivateAccessOutput)
}

func (i DomainOssPrivateAccessArgs) ToDomainOssPrivateAccessPtrOutput() DomainOssPrivateAccessPtrOutput {
	return i.ToDomainOssPrivateAccessPtrOutputWithContext(context.Background())
}

func (i DomainOssPrivateAccessArgs) ToDomainOssPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOssPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOssPrivateAccessOutput).ToDomainOssPrivateAccessPtrOutputWithContext(ctx)
}

// DomainOssPrivateAccessPtrInput is an input type that accepts DomainOssPrivateAccessArgs, DomainOssPrivateAccessPtr and DomainOssPrivateAccessPtrOutput values.
// You can construct a concrete instance of `DomainOssPrivateAccessPtrInput` via:
//
//	        DomainOssPrivateAccessArgs{...}
//
//	or:
//
//	        nil
type DomainOssPrivateAccessPtrInput interface {
	pulumi.Input

	ToDomainOssPrivateAccessPtrOutput() DomainOssPrivateAccessPtrOutput
	ToDomainOssPrivateAccessPtrOutputWithContext(context.Context) DomainOssPrivateAccessPtrOutput
}

type domainOssPrivateAccessPtrType DomainOssPrivateAccessArgs

func DomainOssPrivateAccessPtr(v *DomainOssPrivateAccessArgs) DomainOssPrivateAccessPtrInput {
	return (*domainOssPrivateAccessPtrType)(v)
}

func (*domainOssPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOssPrivateAccess)(nil)).Elem()
}

func (i *domainOssPrivateAccessPtrType) ToDomainOssPrivateAccessPtrOutput() DomainOssPrivateAccessPtrOutput {
	return i.ToDomainOssPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *domainOssPrivateAccessPtrType) ToDomainOssPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOssPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOssPrivateAccessPtrOutput)
}

type DomainOssPrivateAccessOutput struct{ *pulumi.OutputState }

func (DomainOssPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOssPrivateAccess)(nil)).Elem()
}

func (o DomainOssPrivateAccessOutput) ToDomainOssPrivateAccessOutput() DomainOssPrivateAccessOutput {
	return o
}

func (o DomainOssPrivateAccessOutput) ToDomainOssPrivateAccessOutputWithContext(ctx context.Context) DomainOssPrivateAccessOutput {
	return o
}

func (o DomainOssPrivateAccessOutput) ToDomainOssPrivateAccessPtrOutput() DomainOssPrivateAccessPtrOutput {
	return o.ToDomainOssPrivateAccessPtrOutputWithContext(context.Background())
}

func (o DomainOssPrivateAccessOutput) ToDomainOssPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOssPrivateAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOssPrivateAccess) *DomainOssPrivateAccess {
		return &v
	}).(DomainOssPrivateAccessPtrOutput)
}

// Access ID.
func (o DomainOssPrivateAccessOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOssPrivateAccess) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainOssPrivateAccessOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOssPrivateAccess) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Region.
func (o DomainOssPrivateAccessOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOssPrivateAccess) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainOssPrivateAccessOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOssPrivateAccess) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainOssPrivateAccessOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainOssPrivateAccess) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainOssPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (DomainOssPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOssPrivateAccess)(nil)).Elem()
}

func (o DomainOssPrivateAccessPtrOutput) ToDomainOssPrivateAccessPtrOutput() DomainOssPrivateAccessPtrOutput {
	return o
}

func (o DomainOssPrivateAccessPtrOutput) ToDomainOssPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOssPrivateAccessPtrOutput {
	return o
}

func (o DomainOssPrivateAccessPtrOutput) Elem() DomainOssPrivateAccessOutput {
	return o.ApplyT(func(v *DomainOssPrivateAccess) DomainOssPrivateAccess {
		if v != nil {
			return *v
		}
		var ret DomainOssPrivateAccess
		return ret
	}).(DomainOssPrivateAccessOutput)
}

// Access ID.
func (o DomainOssPrivateAccessPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOssPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainOssPrivateAccessPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOssPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Region.
func (o DomainOssPrivateAccessPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOssPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainOssPrivateAccessPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOssPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainOssPrivateAccessPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOssPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainOthersPrivateAccess struct {
	// Access ID.
	AccessKey *string `pulumi:"accessKey"`
	// Bucket.
	Bucket *string `pulumi:"bucket"`
	// Region.
	Region *string `pulumi:"region"`
	// Key.
	SecretKey *string `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainOthersPrivateAccessInput is an input type that accepts DomainOthersPrivateAccessArgs and DomainOthersPrivateAccessOutput values.
// You can construct a concrete instance of `DomainOthersPrivateAccessInput` via:
//
//	DomainOthersPrivateAccessArgs{...}
type DomainOthersPrivateAccessInput interface {
	pulumi.Input

	ToDomainOthersPrivateAccessOutput() DomainOthersPrivateAccessOutput
	ToDomainOthersPrivateAccessOutputWithContext(context.Context) DomainOthersPrivateAccessOutput
}

type DomainOthersPrivateAccessArgs struct {
	// Access ID.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Key.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainOthersPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOthersPrivateAccess)(nil)).Elem()
}

func (i DomainOthersPrivateAccessArgs) ToDomainOthersPrivateAccessOutput() DomainOthersPrivateAccessOutput {
	return i.ToDomainOthersPrivateAccessOutputWithContext(context.Background())
}

func (i DomainOthersPrivateAccessArgs) ToDomainOthersPrivateAccessOutputWithContext(ctx context.Context) DomainOthersPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOthersPrivateAccessOutput)
}

func (i DomainOthersPrivateAccessArgs) ToDomainOthersPrivateAccessPtrOutput() DomainOthersPrivateAccessPtrOutput {
	return i.ToDomainOthersPrivateAccessPtrOutputWithContext(context.Background())
}

func (i DomainOthersPrivateAccessArgs) ToDomainOthersPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOthersPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOthersPrivateAccessOutput).ToDomainOthersPrivateAccessPtrOutputWithContext(ctx)
}

// DomainOthersPrivateAccessPtrInput is an input type that accepts DomainOthersPrivateAccessArgs, DomainOthersPrivateAccessPtr and DomainOthersPrivateAccessPtrOutput values.
// You can construct a concrete instance of `DomainOthersPrivateAccessPtrInput` via:
//
//	        DomainOthersPrivateAccessArgs{...}
//
//	or:
//
//	        nil
type DomainOthersPrivateAccessPtrInput interface {
	pulumi.Input

	ToDomainOthersPrivateAccessPtrOutput() DomainOthersPrivateAccessPtrOutput
	ToDomainOthersPrivateAccessPtrOutputWithContext(context.Context) DomainOthersPrivateAccessPtrOutput
}

type domainOthersPrivateAccessPtrType DomainOthersPrivateAccessArgs

func DomainOthersPrivateAccessPtr(v *DomainOthersPrivateAccessArgs) DomainOthersPrivateAccessPtrInput {
	return (*domainOthersPrivateAccessPtrType)(v)
}

func (*domainOthersPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOthersPrivateAccess)(nil)).Elem()
}

func (i *domainOthersPrivateAccessPtrType) ToDomainOthersPrivateAccessPtrOutput() DomainOthersPrivateAccessPtrOutput {
	return i.ToDomainOthersPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *domainOthersPrivateAccessPtrType) ToDomainOthersPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOthersPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOthersPrivateAccessPtrOutput)
}

type DomainOthersPrivateAccessOutput struct{ *pulumi.OutputState }

func (DomainOthersPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOthersPrivateAccess)(nil)).Elem()
}

func (o DomainOthersPrivateAccessOutput) ToDomainOthersPrivateAccessOutput() DomainOthersPrivateAccessOutput {
	return o
}

func (o DomainOthersPrivateAccessOutput) ToDomainOthersPrivateAccessOutputWithContext(ctx context.Context) DomainOthersPrivateAccessOutput {
	return o
}

func (o DomainOthersPrivateAccessOutput) ToDomainOthersPrivateAccessPtrOutput() DomainOthersPrivateAccessPtrOutput {
	return o.ToDomainOthersPrivateAccessPtrOutputWithContext(context.Background())
}

func (o DomainOthersPrivateAccessOutput) ToDomainOthersPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOthersPrivateAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOthersPrivateAccess) *DomainOthersPrivateAccess {
		return &v
	}).(DomainOthersPrivateAccessPtrOutput)
}

// Access ID.
func (o DomainOthersPrivateAccessOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOthersPrivateAccess) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainOthersPrivateAccessOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOthersPrivateAccess) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Region.
func (o DomainOthersPrivateAccessOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOthersPrivateAccess) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainOthersPrivateAccessOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainOthersPrivateAccess) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainOthersPrivateAccessOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainOthersPrivateAccess) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainOthersPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (DomainOthersPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOthersPrivateAccess)(nil)).Elem()
}

func (o DomainOthersPrivateAccessPtrOutput) ToDomainOthersPrivateAccessPtrOutput() DomainOthersPrivateAccessPtrOutput {
	return o
}

func (o DomainOthersPrivateAccessPtrOutput) ToDomainOthersPrivateAccessPtrOutputWithContext(ctx context.Context) DomainOthersPrivateAccessPtrOutput {
	return o
}

func (o DomainOthersPrivateAccessPtrOutput) Elem() DomainOthersPrivateAccessOutput {
	return o.ApplyT(func(v *DomainOthersPrivateAccess) DomainOthersPrivateAccess {
		if v != nil {
			return *v
		}
		var ret DomainOthersPrivateAccess
		return ret
	}).(DomainOthersPrivateAccessOutput)
}

// Access ID.
func (o DomainOthersPrivateAccessPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOthersPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket.
func (o DomainOthersPrivateAccessPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOthersPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Region.
func (o DomainOthersPrivateAccessPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOthersPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainOthersPrivateAccessPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOthersPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainOthersPrivateAccessPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainOthersPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainPostMaxSize struct {
	// Maximum size in MB, value range is `[1, 200]`.
	MaxSize *int `pulumi:"maxSize"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainPostMaxSizeInput is an input type that accepts DomainPostMaxSizeArgs and DomainPostMaxSizeOutput values.
// You can construct a concrete instance of `DomainPostMaxSizeInput` via:
//
//	DomainPostMaxSizeArgs{...}
type DomainPostMaxSizeInput interface {
	pulumi.Input

	ToDomainPostMaxSizeOutput() DomainPostMaxSizeOutput
	ToDomainPostMaxSizeOutputWithContext(context.Context) DomainPostMaxSizeOutput
}

type DomainPostMaxSizeArgs struct {
	// Maximum size in MB, value range is `[1, 200]`.
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainPostMaxSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainPostMaxSize)(nil)).Elem()
}

func (i DomainPostMaxSizeArgs) ToDomainPostMaxSizeOutput() DomainPostMaxSizeOutput {
	return i.ToDomainPostMaxSizeOutputWithContext(context.Background())
}

func (i DomainPostMaxSizeArgs) ToDomainPostMaxSizeOutputWithContext(ctx context.Context) DomainPostMaxSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPostMaxSizeOutput)
}

// DomainPostMaxSizeArrayInput is an input type that accepts DomainPostMaxSizeArray and DomainPostMaxSizeArrayOutput values.
// You can construct a concrete instance of `DomainPostMaxSizeArrayInput` via:
//
//	DomainPostMaxSizeArray{ DomainPostMaxSizeArgs{...} }
type DomainPostMaxSizeArrayInput interface {
	pulumi.Input

	ToDomainPostMaxSizeArrayOutput() DomainPostMaxSizeArrayOutput
	ToDomainPostMaxSizeArrayOutputWithContext(context.Context) DomainPostMaxSizeArrayOutput
}

type DomainPostMaxSizeArray []DomainPostMaxSizeInput

func (DomainPostMaxSizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainPostMaxSize)(nil)).Elem()
}

func (i DomainPostMaxSizeArray) ToDomainPostMaxSizeArrayOutput() DomainPostMaxSizeArrayOutput {
	return i.ToDomainPostMaxSizeArrayOutputWithContext(context.Background())
}

func (i DomainPostMaxSizeArray) ToDomainPostMaxSizeArrayOutputWithContext(ctx context.Context) DomainPostMaxSizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainPostMaxSizeArrayOutput)
}

type DomainPostMaxSizeOutput struct{ *pulumi.OutputState }

func (DomainPostMaxSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainPostMaxSize)(nil)).Elem()
}

func (o DomainPostMaxSizeOutput) ToDomainPostMaxSizeOutput() DomainPostMaxSizeOutput {
	return o
}

func (o DomainPostMaxSizeOutput) ToDomainPostMaxSizeOutputWithContext(ctx context.Context) DomainPostMaxSizeOutput {
	return o
}

// Maximum size in MB, value range is `[1, 200]`.
func (o DomainPostMaxSizeOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainPostMaxSize) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainPostMaxSizeOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainPostMaxSize) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainPostMaxSizeArrayOutput struct{ *pulumi.OutputState }

func (DomainPostMaxSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainPostMaxSize)(nil)).Elem()
}

func (o DomainPostMaxSizeArrayOutput) ToDomainPostMaxSizeArrayOutput() DomainPostMaxSizeArrayOutput {
	return o
}

func (o DomainPostMaxSizeArrayOutput) ToDomainPostMaxSizeArrayOutputWithContext(ctx context.Context) DomainPostMaxSizeArrayOutput {
	return o
}

func (o DomainPostMaxSizeArrayOutput) Index(i pulumi.IntInput) DomainPostMaxSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainPostMaxSize {
		return vs[0].([]DomainPostMaxSize)[vs[1].(int)]
	}).(DomainPostMaxSizeOutput)
}

type DomainQnPrivateAccess struct {
	// Access ID.
	AccessKey *string `pulumi:"accessKey"`
	// Key.
	SecretKey *string `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainQnPrivateAccessInput is an input type that accepts DomainQnPrivateAccessArgs and DomainQnPrivateAccessOutput values.
// You can construct a concrete instance of `DomainQnPrivateAccessInput` via:
//
//	DomainQnPrivateAccessArgs{...}
type DomainQnPrivateAccessInput interface {
	pulumi.Input

	ToDomainQnPrivateAccessOutput() DomainQnPrivateAccessOutput
	ToDomainQnPrivateAccessOutputWithContext(context.Context) DomainQnPrivateAccessOutput
}

type DomainQnPrivateAccessArgs struct {
	// Access ID.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Key.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainQnPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainQnPrivateAccess)(nil)).Elem()
}

func (i DomainQnPrivateAccessArgs) ToDomainQnPrivateAccessOutput() DomainQnPrivateAccessOutput {
	return i.ToDomainQnPrivateAccessOutputWithContext(context.Background())
}

func (i DomainQnPrivateAccessArgs) ToDomainQnPrivateAccessOutputWithContext(ctx context.Context) DomainQnPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainQnPrivateAccessOutput)
}

func (i DomainQnPrivateAccessArgs) ToDomainQnPrivateAccessPtrOutput() DomainQnPrivateAccessPtrOutput {
	return i.ToDomainQnPrivateAccessPtrOutputWithContext(context.Background())
}

func (i DomainQnPrivateAccessArgs) ToDomainQnPrivateAccessPtrOutputWithContext(ctx context.Context) DomainQnPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainQnPrivateAccessOutput).ToDomainQnPrivateAccessPtrOutputWithContext(ctx)
}

// DomainQnPrivateAccessPtrInput is an input type that accepts DomainQnPrivateAccessArgs, DomainQnPrivateAccessPtr and DomainQnPrivateAccessPtrOutput values.
// You can construct a concrete instance of `DomainQnPrivateAccessPtrInput` via:
//
//	        DomainQnPrivateAccessArgs{...}
//
//	or:
//
//	        nil
type DomainQnPrivateAccessPtrInput interface {
	pulumi.Input

	ToDomainQnPrivateAccessPtrOutput() DomainQnPrivateAccessPtrOutput
	ToDomainQnPrivateAccessPtrOutputWithContext(context.Context) DomainQnPrivateAccessPtrOutput
}

type domainQnPrivateAccessPtrType DomainQnPrivateAccessArgs

func DomainQnPrivateAccessPtr(v *DomainQnPrivateAccessArgs) DomainQnPrivateAccessPtrInput {
	return (*domainQnPrivateAccessPtrType)(v)
}

func (*domainQnPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainQnPrivateAccess)(nil)).Elem()
}

func (i *domainQnPrivateAccessPtrType) ToDomainQnPrivateAccessPtrOutput() DomainQnPrivateAccessPtrOutput {
	return i.ToDomainQnPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *domainQnPrivateAccessPtrType) ToDomainQnPrivateAccessPtrOutputWithContext(ctx context.Context) DomainQnPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainQnPrivateAccessPtrOutput)
}

type DomainQnPrivateAccessOutput struct{ *pulumi.OutputState }

func (DomainQnPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainQnPrivateAccess)(nil)).Elem()
}

func (o DomainQnPrivateAccessOutput) ToDomainQnPrivateAccessOutput() DomainQnPrivateAccessOutput {
	return o
}

func (o DomainQnPrivateAccessOutput) ToDomainQnPrivateAccessOutputWithContext(ctx context.Context) DomainQnPrivateAccessOutput {
	return o
}

func (o DomainQnPrivateAccessOutput) ToDomainQnPrivateAccessPtrOutput() DomainQnPrivateAccessPtrOutput {
	return o.ToDomainQnPrivateAccessPtrOutputWithContext(context.Background())
}

func (o DomainQnPrivateAccessOutput) ToDomainQnPrivateAccessPtrOutputWithContext(ctx context.Context) DomainQnPrivateAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainQnPrivateAccess) *DomainQnPrivateAccess {
		return &v
	}).(DomainQnPrivateAccessPtrOutput)
}

// Access ID.
func (o DomainQnPrivateAccessOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainQnPrivateAccess) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainQnPrivateAccessOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainQnPrivateAccess) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainQnPrivateAccessOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainQnPrivateAccess) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainQnPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (DomainQnPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainQnPrivateAccess)(nil)).Elem()
}

func (o DomainQnPrivateAccessPtrOutput) ToDomainQnPrivateAccessPtrOutput() DomainQnPrivateAccessPtrOutput {
	return o
}

func (o DomainQnPrivateAccessPtrOutput) ToDomainQnPrivateAccessPtrOutputWithContext(ctx context.Context) DomainQnPrivateAccessPtrOutput {
	return o
}

func (o DomainQnPrivateAccessPtrOutput) Elem() DomainQnPrivateAccessOutput {
	return o.ApplyT(func(v *DomainQnPrivateAccess) DomainQnPrivateAccess {
		if v != nil {
			return *v
		}
		var ret DomainQnPrivateAccess
		return ret
	}).(DomainQnPrivateAccessOutput)
}

// Access ID.
func (o DomainQnPrivateAccessPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainQnPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Key.
func (o DomainQnPrivateAccessPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainQnPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainQnPrivateAccessPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainQnPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainReferer struct {
	// List of referer rules.
	RefererRules []DomainRefererRefererRule `pulumi:"refererRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainRefererInput is an input type that accepts DomainRefererArgs and DomainRefererOutput values.
// You can construct a concrete instance of `DomainRefererInput` via:
//
//	DomainRefererArgs{...}
type DomainRefererInput interface {
	pulumi.Input

	ToDomainRefererOutput() DomainRefererOutput
	ToDomainRefererOutputWithContext(context.Context) DomainRefererOutput
}

type DomainRefererArgs struct {
	// List of referer rules.
	RefererRules DomainRefererRefererRuleArrayInput `pulumi:"refererRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainRefererArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainReferer)(nil)).Elem()
}

func (i DomainRefererArgs) ToDomainRefererOutput() DomainRefererOutput {
	return i.ToDomainRefererOutputWithContext(context.Background())
}

func (i DomainRefererArgs) ToDomainRefererOutputWithContext(ctx context.Context) DomainRefererOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRefererOutput)
}

func (i DomainRefererArgs) ToDomainRefererPtrOutput() DomainRefererPtrOutput {
	return i.ToDomainRefererPtrOutputWithContext(context.Background())
}

func (i DomainRefererArgs) ToDomainRefererPtrOutputWithContext(ctx context.Context) DomainRefererPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRefererOutput).ToDomainRefererPtrOutputWithContext(ctx)
}

// DomainRefererPtrInput is an input type that accepts DomainRefererArgs, DomainRefererPtr and DomainRefererPtrOutput values.
// You can construct a concrete instance of `DomainRefererPtrInput` via:
//
//	        DomainRefererArgs{...}
//
//	or:
//
//	        nil
type DomainRefererPtrInput interface {
	pulumi.Input

	ToDomainRefererPtrOutput() DomainRefererPtrOutput
	ToDomainRefererPtrOutputWithContext(context.Context) DomainRefererPtrOutput
}

type domainRefererPtrType DomainRefererArgs

func DomainRefererPtr(v *DomainRefererArgs) DomainRefererPtrInput {
	return (*domainRefererPtrType)(v)
}

func (*domainRefererPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainReferer)(nil)).Elem()
}

func (i *domainRefererPtrType) ToDomainRefererPtrOutput() DomainRefererPtrOutput {
	return i.ToDomainRefererPtrOutputWithContext(context.Background())
}

func (i *domainRefererPtrType) ToDomainRefererPtrOutputWithContext(ctx context.Context) DomainRefererPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRefererPtrOutput)
}

type DomainRefererOutput struct{ *pulumi.OutputState }

func (DomainRefererOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainReferer)(nil)).Elem()
}

func (o DomainRefererOutput) ToDomainRefererOutput() DomainRefererOutput {
	return o
}

func (o DomainRefererOutput) ToDomainRefererOutputWithContext(ctx context.Context) DomainRefererOutput {
	return o
}

func (o DomainRefererOutput) ToDomainRefererPtrOutput() DomainRefererPtrOutput {
	return o.ToDomainRefererPtrOutputWithContext(context.Background())
}

func (o DomainRefererOutput) ToDomainRefererPtrOutputWithContext(ctx context.Context) DomainRefererPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainReferer) *DomainReferer {
		return &v
	}).(DomainRefererPtrOutput)
}

// List of referer rules.
func (o DomainRefererOutput) RefererRules() DomainRefererRefererRuleArrayOutput {
	return o.ApplyT(func(v DomainReferer) []DomainRefererRefererRule { return v.RefererRules }).(DomainRefererRefererRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainRefererOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainReferer) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainRefererPtrOutput struct{ *pulumi.OutputState }

func (DomainRefererPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainReferer)(nil)).Elem()
}

func (o DomainRefererPtrOutput) ToDomainRefererPtrOutput() DomainRefererPtrOutput {
	return o
}

func (o DomainRefererPtrOutput) ToDomainRefererPtrOutputWithContext(ctx context.Context) DomainRefererPtrOutput {
	return o
}

func (o DomainRefererPtrOutput) Elem() DomainRefererOutput {
	return o.ApplyT(func(v *DomainReferer) DomainReferer {
		if v != nil {
			return *v
		}
		var ret DomainReferer
		return ret
	}).(DomainRefererOutput)
}

// List of referer rules.
func (o DomainRefererPtrOutput) RefererRules() DomainRefererRefererRuleArrayOutput {
	return o.ApplyT(func(v *DomainReferer) []DomainRefererRefererRule {
		if v == nil {
			return nil
		}
		return v.RefererRules
	}).(DomainRefererRefererRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainRefererPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainReferer) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainRefererRefererRule struct {
	// Whether to allow emptpy.
	AllowEmpty bool `pulumi:"allowEmpty"`
	// Referer type.
	RefererType string `pulumi:"refererType"`
	// Referer list.
	Referers []string `pulumi:"referers"`
	// Referer rule path list.
	RulePaths []string `pulumi:"rulePaths"`
	// Referer rule type.
	RuleType string `pulumi:"ruleType"`
}

// DomainRefererRefererRuleInput is an input type that accepts DomainRefererRefererRuleArgs and DomainRefererRefererRuleOutput values.
// You can construct a concrete instance of `DomainRefererRefererRuleInput` via:
//
//	DomainRefererRefererRuleArgs{...}
type DomainRefererRefererRuleInput interface {
	pulumi.Input

	ToDomainRefererRefererRuleOutput() DomainRefererRefererRuleOutput
	ToDomainRefererRefererRuleOutputWithContext(context.Context) DomainRefererRefererRuleOutput
}

type DomainRefererRefererRuleArgs struct {
	// Whether to allow emptpy.
	AllowEmpty pulumi.BoolInput `pulumi:"allowEmpty"`
	// Referer type.
	RefererType pulumi.StringInput `pulumi:"refererType"`
	// Referer list.
	Referers pulumi.StringArrayInput `pulumi:"referers"`
	// Referer rule path list.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Referer rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (DomainRefererRefererRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRefererRefererRule)(nil)).Elem()
}

func (i DomainRefererRefererRuleArgs) ToDomainRefererRefererRuleOutput() DomainRefererRefererRuleOutput {
	return i.ToDomainRefererRefererRuleOutputWithContext(context.Background())
}

func (i DomainRefererRefererRuleArgs) ToDomainRefererRefererRuleOutputWithContext(ctx context.Context) DomainRefererRefererRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRefererRefererRuleOutput)
}

// DomainRefererRefererRuleArrayInput is an input type that accepts DomainRefererRefererRuleArray and DomainRefererRefererRuleArrayOutput values.
// You can construct a concrete instance of `DomainRefererRefererRuleArrayInput` via:
//
//	DomainRefererRefererRuleArray{ DomainRefererRefererRuleArgs{...} }
type DomainRefererRefererRuleArrayInput interface {
	pulumi.Input

	ToDomainRefererRefererRuleArrayOutput() DomainRefererRefererRuleArrayOutput
	ToDomainRefererRefererRuleArrayOutputWithContext(context.Context) DomainRefererRefererRuleArrayOutput
}

type DomainRefererRefererRuleArray []DomainRefererRefererRuleInput

func (DomainRefererRefererRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRefererRefererRule)(nil)).Elem()
}

func (i DomainRefererRefererRuleArray) ToDomainRefererRefererRuleArrayOutput() DomainRefererRefererRuleArrayOutput {
	return i.ToDomainRefererRefererRuleArrayOutputWithContext(context.Background())
}

func (i DomainRefererRefererRuleArray) ToDomainRefererRefererRuleArrayOutputWithContext(ctx context.Context) DomainRefererRefererRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRefererRefererRuleArrayOutput)
}

type DomainRefererRefererRuleOutput struct{ *pulumi.OutputState }

func (DomainRefererRefererRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRefererRefererRule)(nil)).Elem()
}

func (o DomainRefererRefererRuleOutput) ToDomainRefererRefererRuleOutput() DomainRefererRefererRuleOutput {
	return o
}

func (o DomainRefererRefererRuleOutput) ToDomainRefererRefererRuleOutputWithContext(ctx context.Context) DomainRefererRefererRuleOutput {
	return o
}

// Whether to allow emptpy.
func (o DomainRefererRefererRuleOutput) AllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainRefererRefererRule) bool { return v.AllowEmpty }).(pulumi.BoolOutput)
}

// Referer type.
func (o DomainRefererRefererRuleOutput) RefererType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRefererRefererRule) string { return v.RefererType }).(pulumi.StringOutput)
}

// Referer list.
func (o DomainRefererRefererRuleOutput) Referers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRefererRefererRule) []string { return v.Referers }).(pulumi.StringArrayOutput)
}

// Referer rule path list.
func (o DomainRefererRefererRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRefererRefererRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Referer rule type.
func (o DomainRefererRefererRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRefererRefererRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type DomainRefererRefererRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainRefererRefererRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRefererRefererRule)(nil)).Elem()
}

func (o DomainRefererRefererRuleArrayOutput) ToDomainRefererRefererRuleArrayOutput() DomainRefererRefererRuleArrayOutput {
	return o
}

func (o DomainRefererRefererRuleArrayOutput) ToDomainRefererRefererRuleArrayOutputWithContext(ctx context.Context) DomainRefererRefererRuleArrayOutput {
	return o
}

func (o DomainRefererRefererRuleArrayOutput) Index(i pulumi.IntInput) DomainRefererRefererRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRefererRefererRule {
		return vs[0].([]DomainRefererRefererRule)[vs[1].(int)]
	}).(DomainRefererRefererRuleOutput)
}

type DomainRequestHeader struct {
	// Custom request header configuration rules.
	HeaderRules []DomainRequestHeaderHeaderRule `pulumi:"headerRules"`
	// Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
	Switch *string `pulumi:"switch"`
}

// DomainRequestHeaderInput is an input type that accepts DomainRequestHeaderArgs and DomainRequestHeaderOutput values.
// You can construct a concrete instance of `DomainRequestHeaderInput` via:
//
//	DomainRequestHeaderArgs{...}
type DomainRequestHeaderInput interface {
	pulumi.Input

	ToDomainRequestHeaderOutput() DomainRequestHeaderOutput
	ToDomainRequestHeaderOutputWithContext(context.Context) DomainRequestHeaderOutput
}

type DomainRequestHeaderArgs struct {
	// Custom request header configuration rules.
	HeaderRules DomainRequestHeaderHeaderRuleArrayInput `pulumi:"headerRules"`
	// Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (DomainRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRequestHeader)(nil)).Elem()
}

func (i DomainRequestHeaderArgs) ToDomainRequestHeaderOutput() DomainRequestHeaderOutput {
	return i.ToDomainRequestHeaderOutputWithContext(context.Background())
}

func (i DomainRequestHeaderArgs) ToDomainRequestHeaderOutputWithContext(ctx context.Context) DomainRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRequestHeaderOutput)
}

func (i DomainRequestHeaderArgs) ToDomainRequestHeaderPtrOutput() DomainRequestHeaderPtrOutput {
	return i.ToDomainRequestHeaderPtrOutputWithContext(context.Background())
}

func (i DomainRequestHeaderArgs) ToDomainRequestHeaderPtrOutputWithContext(ctx context.Context) DomainRequestHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRequestHeaderOutput).ToDomainRequestHeaderPtrOutputWithContext(ctx)
}

// DomainRequestHeaderPtrInput is an input type that accepts DomainRequestHeaderArgs, DomainRequestHeaderPtr and DomainRequestHeaderPtrOutput values.
// You can construct a concrete instance of `DomainRequestHeaderPtrInput` via:
//
//	        DomainRequestHeaderArgs{...}
//
//	or:
//
//	        nil
type DomainRequestHeaderPtrInput interface {
	pulumi.Input

	ToDomainRequestHeaderPtrOutput() DomainRequestHeaderPtrOutput
	ToDomainRequestHeaderPtrOutputWithContext(context.Context) DomainRequestHeaderPtrOutput
}

type domainRequestHeaderPtrType DomainRequestHeaderArgs

func DomainRequestHeaderPtr(v *DomainRequestHeaderArgs) DomainRequestHeaderPtrInput {
	return (*domainRequestHeaderPtrType)(v)
}

func (*domainRequestHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRequestHeader)(nil)).Elem()
}

func (i *domainRequestHeaderPtrType) ToDomainRequestHeaderPtrOutput() DomainRequestHeaderPtrOutput {
	return i.ToDomainRequestHeaderPtrOutputWithContext(context.Background())
}

func (i *domainRequestHeaderPtrType) ToDomainRequestHeaderPtrOutputWithContext(ctx context.Context) DomainRequestHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRequestHeaderPtrOutput)
}

type DomainRequestHeaderOutput struct{ *pulumi.OutputState }

func (DomainRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRequestHeader)(nil)).Elem()
}

func (o DomainRequestHeaderOutput) ToDomainRequestHeaderOutput() DomainRequestHeaderOutput {
	return o
}

func (o DomainRequestHeaderOutput) ToDomainRequestHeaderOutputWithContext(ctx context.Context) DomainRequestHeaderOutput {
	return o
}

func (o DomainRequestHeaderOutput) ToDomainRequestHeaderPtrOutput() DomainRequestHeaderPtrOutput {
	return o.ToDomainRequestHeaderPtrOutputWithContext(context.Background())
}

func (o DomainRequestHeaderOutput) ToDomainRequestHeaderPtrOutputWithContext(ctx context.Context) DomainRequestHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRequestHeader) *DomainRequestHeader {
		return &v
	}).(DomainRequestHeaderPtrOutput)
}

// Custom request header configuration rules.
func (o DomainRequestHeaderOutput) HeaderRules() DomainRequestHeaderHeaderRuleArrayOutput {
	return o.ApplyT(func(v DomainRequestHeader) []DomainRequestHeaderHeaderRule { return v.HeaderRules }).(DomainRequestHeaderHeaderRuleArrayOutput)
}

// Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
func (o DomainRequestHeaderOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRequestHeader) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type DomainRequestHeaderPtrOutput struct{ *pulumi.OutputState }

func (DomainRequestHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRequestHeader)(nil)).Elem()
}

func (o DomainRequestHeaderPtrOutput) ToDomainRequestHeaderPtrOutput() DomainRequestHeaderPtrOutput {
	return o
}

func (o DomainRequestHeaderPtrOutput) ToDomainRequestHeaderPtrOutputWithContext(ctx context.Context) DomainRequestHeaderPtrOutput {
	return o
}

func (o DomainRequestHeaderPtrOutput) Elem() DomainRequestHeaderOutput {
	return o.ApplyT(func(v *DomainRequestHeader) DomainRequestHeader {
		if v != nil {
			return *v
		}
		var ret DomainRequestHeader
		return ret
	}).(DomainRequestHeaderOutput)
}

// Custom request header configuration rules.
func (o DomainRequestHeaderPtrOutput) HeaderRules() DomainRequestHeaderHeaderRuleArrayOutput {
	return o.ApplyT(func(v *DomainRequestHeader) []DomainRequestHeaderHeaderRule {
		if v == nil {
			return nil
		}
		return v.HeaderRules
	}).(DomainRequestHeaderHeaderRuleArrayOutput)
}

// Custom request header configuration switch. Valid values are `on` and `off`. and default value is `off`.
func (o DomainRequestHeaderPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRequestHeader) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainRequestHeaderHeaderRule struct {
	// Response header mode.
	HeaderMode string `pulumi:"headerMode"`
	// response header name of rule.
	HeaderName string `pulumi:"headerName"`
	// response header value of rule.
	HeaderValue string `pulumi:"headerValue"`
	// response rule paths of rule.
	RulePaths []string `pulumi:"rulePaths"`
	// response rule type of rule.
	RuleType string `pulumi:"ruleType"`
}

// DomainRequestHeaderHeaderRuleInput is an input type that accepts DomainRequestHeaderHeaderRuleArgs and DomainRequestHeaderHeaderRuleOutput values.
// You can construct a concrete instance of `DomainRequestHeaderHeaderRuleInput` via:
//
//	DomainRequestHeaderHeaderRuleArgs{...}
type DomainRequestHeaderHeaderRuleInput interface {
	pulumi.Input

	ToDomainRequestHeaderHeaderRuleOutput() DomainRequestHeaderHeaderRuleOutput
	ToDomainRequestHeaderHeaderRuleOutputWithContext(context.Context) DomainRequestHeaderHeaderRuleOutput
}

type DomainRequestHeaderHeaderRuleArgs struct {
	// Response header mode.
	HeaderMode pulumi.StringInput `pulumi:"headerMode"`
	// response header name of rule.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// response header value of rule.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
	// response rule paths of rule.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// response rule type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (DomainRequestHeaderHeaderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRequestHeaderHeaderRule)(nil)).Elem()
}

func (i DomainRequestHeaderHeaderRuleArgs) ToDomainRequestHeaderHeaderRuleOutput() DomainRequestHeaderHeaderRuleOutput {
	return i.ToDomainRequestHeaderHeaderRuleOutputWithContext(context.Background())
}

func (i DomainRequestHeaderHeaderRuleArgs) ToDomainRequestHeaderHeaderRuleOutputWithContext(ctx context.Context) DomainRequestHeaderHeaderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRequestHeaderHeaderRuleOutput)
}

// DomainRequestHeaderHeaderRuleArrayInput is an input type that accepts DomainRequestHeaderHeaderRuleArray and DomainRequestHeaderHeaderRuleArrayOutput values.
// You can construct a concrete instance of `DomainRequestHeaderHeaderRuleArrayInput` via:
//
//	DomainRequestHeaderHeaderRuleArray{ DomainRequestHeaderHeaderRuleArgs{...} }
type DomainRequestHeaderHeaderRuleArrayInput interface {
	pulumi.Input

	ToDomainRequestHeaderHeaderRuleArrayOutput() DomainRequestHeaderHeaderRuleArrayOutput
	ToDomainRequestHeaderHeaderRuleArrayOutputWithContext(context.Context) DomainRequestHeaderHeaderRuleArrayOutput
}

type DomainRequestHeaderHeaderRuleArray []DomainRequestHeaderHeaderRuleInput

func (DomainRequestHeaderHeaderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRequestHeaderHeaderRule)(nil)).Elem()
}

func (i DomainRequestHeaderHeaderRuleArray) ToDomainRequestHeaderHeaderRuleArrayOutput() DomainRequestHeaderHeaderRuleArrayOutput {
	return i.ToDomainRequestHeaderHeaderRuleArrayOutputWithContext(context.Background())
}

func (i DomainRequestHeaderHeaderRuleArray) ToDomainRequestHeaderHeaderRuleArrayOutputWithContext(ctx context.Context) DomainRequestHeaderHeaderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRequestHeaderHeaderRuleArrayOutput)
}

type DomainRequestHeaderHeaderRuleOutput struct{ *pulumi.OutputState }

func (DomainRequestHeaderHeaderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRequestHeaderHeaderRule)(nil)).Elem()
}

func (o DomainRequestHeaderHeaderRuleOutput) ToDomainRequestHeaderHeaderRuleOutput() DomainRequestHeaderHeaderRuleOutput {
	return o
}

func (o DomainRequestHeaderHeaderRuleOutput) ToDomainRequestHeaderHeaderRuleOutputWithContext(ctx context.Context) DomainRequestHeaderHeaderRuleOutput {
	return o
}

// Response header mode.
func (o DomainRequestHeaderHeaderRuleOutput) HeaderMode() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRequestHeaderHeaderRule) string { return v.HeaderMode }).(pulumi.StringOutput)
}

// response header name of rule.
func (o DomainRequestHeaderHeaderRuleOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRequestHeaderHeaderRule) string { return v.HeaderName }).(pulumi.StringOutput)
}

// response header value of rule.
func (o DomainRequestHeaderHeaderRuleOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRequestHeaderHeaderRule) string { return v.HeaderValue }).(pulumi.StringOutput)
}

// response rule paths of rule.
func (o DomainRequestHeaderHeaderRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRequestHeaderHeaderRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// response rule type of rule.
func (o DomainRequestHeaderHeaderRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRequestHeaderHeaderRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type DomainRequestHeaderHeaderRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainRequestHeaderHeaderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRequestHeaderHeaderRule)(nil)).Elem()
}

func (o DomainRequestHeaderHeaderRuleArrayOutput) ToDomainRequestHeaderHeaderRuleArrayOutput() DomainRequestHeaderHeaderRuleArrayOutput {
	return o
}

func (o DomainRequestHeaderHeaderRuleArrayOutput) ToDomainRequestHeaderHeaderRuleArrayOutputWithContext(ctx context.Context) DomainRequestHeaderHeaderRuleArrayOutput {
	return o
}

func (o DomainRequestHeaderHeaderRuleArrayOutput) Index(i pulumi.IntInput) DomainRequestHeaderHeaderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRequestHeaderHeaderRule {
		return vs[0].([]DomainRequestHeaderHeaderRule)[vs[1].(int)]
	}).(DomainRequestHeaderHeaderRuleOutput)
}

type DomainResponseHeader struct {
	// List of response header rule.
	HeaderRules []DomainResponseHeaderHeaderRule `pulumi:"headerRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainResponseHeaderInput is an input type that accepts DomainResponseHeaderArgs and DomainResponseHeaderOutput values.
// You can construct a concrete instance of `DomainResponseHeaderInput` via:
//
//	DomainResponseHeaderArgs{...}
type DomainResponseHeaderInput interface {
	pulumi.Input

	ToDomainResponseHeaderOutput() DomainResponseHeaderOutput
	ToDomainResponseHeaderOutputWithContext(context.Context) DomainResponseHeaderOutput
}

type DomainResponseHeaderArgs struct {
	// List of response header rule.
	HeaderRules DomainResponseHeaderHeaderRuleArrayInput `pulumi:"headerRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResponseHeader)(nil)).Elem()
}

func (i DomainResponseHeaderArgs) ToDomainResponseHeaderOutput() DomainResponseHeaderOutput {
	return i.ToDomainResponseHeaderOutputWithContext(context.Background())
}

func (i DomainResponseHeaderArgs) ToDomainResponseHeaderOutputWithContext(ctx context.Context) DomainResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResponseHeaderOutput)
}

func (i DomainResponseHeaderArgs) ToDomainResponseHeaderPtrOutput() DomainResponseHeaderPtrOutput {
	return i.ToDomainResponseHeaderPtrOutputWithContext(context.Background())
}

func (i DomainResponseHeaderArgs) ToDomainResponseHeaderPtrOutputWithContext(ctx context.Context) DomainResponseHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResponseHeaderOutput).ToDomainResponseHeaderPtrOutputWithContext(ctx)
}

// DomainResponseHeaderPtrInput is an input type that accepts DomainResponseHeaderArgs, DomainResponseHeaderPtr and DomainResponseHeaderPtrOutput values.
// You can construct a concrete instance of `DomainResponseHeaderPtrInput` via:
//
//	        DomainResponseHeaderArgs{...}
//
//	or:
//
//	        nil
type DomainResponseHeaderPtrInput interface {
	pulumi.Input

	ToDomainResponseHeaderPtrOutput() DomainResponseHeaderPtrOutput
	ToDomainResponseHeaderPtrOutputWithContext(context.Context) DomainResponseHeaderPtrOutput
}

type domainResponseHeaderPtrType DomainResponseHeaderArgs

func DomainResponseHeaderPtr(v *DomainResponseHeaderArgs) DomainResponseHeaderPtrInput {
	return (*domainResponseHeaderPtrType)(v)
}

func (*domainResponseHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainResponseHeader)(nil)).Elem()
}

func (i *domainResponseHeaderPtrType) ToDomainResponseHeaderPtrOutput() DomainResponseHeaderPtrOutput {
	return i.ToDomainResponseHeaderPtrOutputWithContext(context.Background())
}

func (i *domainResponseHeaderPtrType) ToDomainResponseHeaderPtrOutputWithContext(ctx context.Context) DomainResponseHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResponseHeaderPtrOutput)
}

type DomainResponseHeaderOutput struct{ *pulumi.OutputState }

func (DomainResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResponseHeader)(nil)).Elem()
}

func (o DomainResponseHeaderOutput) ToDomainResponseHeaderOutput() DomainResponseHeaderOutput {
	return o
}

func (o DomainResponseHeaderOutput) ToDomainResponseHeaderOutputWithContext(ctx context.Context) DomainResponseHeaderOutput {
	return o
}

func (o DomainResponseHeaderOutput) ToDomainResponseHeaderPtrOutput() DomainResponseHeaderPtrOutput {
	return o.ToDomainResponseHeaderPtrOutputWithContext(context.Background())
}

func (o DomainResponseHeaderOutput) ToDomainResponseHeaderPtrOutputWithContext(ctx context.Context) DomainResponseHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainResponseHeader) *DomainResponseHeader {
		return &v
	}).(DomainResponseHeaderPtrOutput)
}

// List of response header rule.
func (o DomainResponseHeaderOutput) HeaderRules() DomainResponseHeaderHeaderRuleArrayOutput {
	return o.ApplyT(func(v DomainResponseHeader) []DomainResponseHeaderHeaderRule { return v.HeaderRules }).(DomainResponseHeaderHeaderRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainResponseHeaderOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainResponseHeader) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainResponseHeaderPtrOutput struct{ *pulumi.OutputState }

func (DomainResponseHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainResponseHeader)(nil)).Elem()
}

func (o DomainResponseHeaderPtrOutput) ToDomainResponseHeaderPtrOutput() DomainResponseHeaderPtrOutput {
	return o
}

func (o DomainResponseHeaderPtrOutput) ToDomainResponseHeaderPtrOutputWithContext(ctx context.Context) DomainResponseHeaderPtrOutput {
	return o
}

func (o DomainResponseHeaderPtrOutput) Elem() DomainResponseHeaderOutput {
	return o.ApplyT(func(v *DomainResponseHeader) DomainResponseHeader {
		if v != nil {
			return *v
		}
		var ret DomainResponseHeader
		return ret
	}).(DomainResponseHeaderOutput)
}

// List of response header rule.
func (o DomainResponseHeaderPtrOutput) HeaderRules() DomainResponseHeaderHeaderRuleArrayOutput {
	return o.ApplyT(func(v *DomainResponseHeader) []DomainResponseHeaderHeaderRule {
		if v == nil {
			return nil
		}
		return v.HeaderRules
	}).(DomainResponseHeaderHeaderRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainResponseHeaderPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainResponseHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainResponseHeaderHeaderRule struct {
	// Response header mode.
	HeaderMode string `pulumi:"headerMode"`
	// response header name of rule.
	HeaderName string `pulumi:"headerName"`
	// response header value of rule.
	HeaderValue string `pulumi:"headerValue"`
	// response rule paths of rule.
	RulePaths []string `pulumi:"rulePaths"`
	// response rule type of rule.
	RuleType string `pulumi:"ruleType"`
}

// DomainResponseHeaderHeaderRuleInput is an input type that accepts DomainResponseHeaderHeaderRuleArgs and DomainResponseHeaderHeaderRuleOutput values.
// You can construct a concrete instance of `DomainResponseHeaderHeaderRuleInput` via:
//
//	DomainResponseHeaderHeaderRuleArgs{...}
type DomainResponseHeaderHeaderRuleInput interface {
	pulumi.Input

	ToDomainResponseHeaderHeaderRuleOutput() DomainResponseHeaderHeaderRuleOutput
	ToDomainResponseHeaderHeaderRuleOutputWithContext(context.Context) DomainResponseHeaderHeaderRuleOutput
}

type DomainResponseHeaderHeaderRuleArgs struct {
	// Response header mode.
	HeaderMode pulumi.StringInput `pulumi:"headerMode"`
	// response header name of rule.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// response header value of rule.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
	// response rule paths of rule.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// response rule type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (DomainResponseHeaderHeaderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResponseHeaderHeaderRule)(nil)).Elem()
}

func (i DomainResponseHeaderHeaderRuleArgs) ToDomainResponseHeaderHeaderRuleOutput() DomainResponseHeaderHeaderRuleOutput {
	return i.ToDomainResponseHeaderHeaderRuleOutputWithContext(context.Background())
}

func (i DomainResponseHeaderHeaderRuleArgs) ToDomainResponseHeaderHeaderRuleOutputWithContext(ctx context.Context) DomainResponseHeaderHeaderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResponseHeaderHeaderRuleOutput)
}

// DomainResponseHeaderHeaderRuleArrayInput is an input type that accepts DomainResponseHeaderHeaderRuleArray and DomainResponseHeaderHeaderRuleArrayOutput values.
// You can construct a concrete instance of `DomainResponseHeaderHeaderRuleArrayInput` via:
//
//	DomainResponseHeaderHeaderRuleArray{ DomainResponseHeaderHeaderRuleArgs{...} }
type DomainResponseHeaderHeaderRuleArrayInput interface {
	pulumi.Input

	ToDomainResponseHeaderHeaderRuleArrayOutput() DomainResponseHeaderHeaderRuleArrayOutput
	ToDomainResponseHeaderHeaderRuleArrayOutputWithContext(context.Context) DomainResponseHeaderHeaderRuleArrayOutput
}

type DomainResponseHeaderHeaderRuleArray []DomainResponseHeaderHeaderRuleInput

func (DomainResponseHeaderHeaderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainResponseHeaderHeaderRule)(nil)).Elem()
}

func (i DomainResponseHeaderHeaderRuleArray) ToDomainResponseHeaderHeaderRuleArrayOutput() DomainResponseHeaderHeaderRuleArrayOutput {
	return i.ToDomainResponseHeaderHeaderRuleArrayOutputWithContext(context.Background())
}

func (i DomainResponseHeaderHeaderRuleArray) ToDomainResponseHeaderHeaderRuleArrayOutputWithContext(ctx context.Context) DomainResponseHeaderHeaderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResponseHeaderHeaderRuleArrayOutput)
}

type DomainResponseHeaderHeaderRuleOutput struct{ *pulumi.OutputState }

func (DomainResponseHeaderHeaderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResponseHeaderHeaderRule)(nil)).Elem()
}

func (o DomainResponseHeaderHeaderRuleOutput) ToDomainResponseHeaderHeaderRuleOutput() DomainResponseHeaderHeaderRuleOutput {
	return o
}

func (o DomainResponseHeaderHeaderRuleOutput) ToDomainResponseHeaderHeaderRuleOutputWithContext(ctx context.Context) DomainResponseHeaderHeaderRuleOutput {
	return o
}

// Response header mode.
func (o DomainResponseHeaderHeaderRuleOutput) HeaderMode() pulumi.StringOutput {
	return o.ApplyT(func(v DomainResponseHeaderHeaderRule) string { return v.HeaderMode }).(pulumi.StringOutput)
}

// response header name of rule.
func (o DomainResponseHeaderHeaderRuleOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainResponseHeaderHeaderRule) string { return v.HeaderName }).(pulumi.StringOutput)
}

// response header value of rule.
func (o DomainResponseHeaderHeaderRuleOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v DomainResponseHeaderHeaderRule) string { return v.HeaderValue }).(pulumi.StringOutput)
}

// response rule paths of rule.
func (o DomainResponseHeaderHeaderRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainResponseHeaderHeaderRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// response rule type of rule.
func (o DomainResponseHeaderHeaderRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainResponseHeaderHeaderRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type DomainResponseHeaderHeaderRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainResponseHeaderHeaderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainResponseHeaderHeaderRule)(nil)).Elem()
}

func (o DomainResponseHeaderHeaderRuleArrayOutput) ToDomainResponseHeaderHeaderRuleArrayOutput() DomainResponseHeaderHeaderRuleArrayOutput {
	return o
}

func (o DomainResponseHeaderHeaderRuleArrayOutput) ToDomainResponseHeaderHeaderRuleArrayOutputWithContext(ctx context.Context) DomainResponseHeaderHeaderRuleArrayOutput {
	return o
}

func (o DomainResponseHeaderHeaderRuleArrayOutput) Index(i pulumi.IntInput) DomainResponseHeaderHeaderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainResponseHeaderHeaderRule {
		return vs[0].([]DomainResponseHeaderHeaderRule)[vs[1].(int)]
	}).(DomainResponseHeaderHeaderRuleOutput)
}

type DomainRuleCach struct {
	// Cache expiration time setting, the unit is second, the maximum can be set to 365 days.
	CacheTime int `pulumi:"cacheTime"`
	// Advanced cache expiration configuration. When it is turned on, it will compare the max-age value returned by the origin site with the cache expiration time set in CacheRules, and take the minimum value to cache at the node. Valid values are `on` and `off`. Default value is `off`.
	CompareMaxAge *string `pulumi:"compareMaxAge"`
	// Follow the source station configuration switch. Valid values are `on` and `off`.
	FollowOriginSwitch *string `pulumi:"followOriginSwitch"`
	// Specify whether to enable heuristic cache, only available while `followOriginSwitch` enabled, values: `on`, `off` (Default).
	HeuristicCacheSwitch *string `pulumi:"heuristicCacheSwitch"`
	// Specify heuristic cache time in second, only available while `followOriginSwitch` and `heuristicCacheSwitch` enabled.
	HeuristicCacheTime *int `pulumi:"heuristicCacheTime"`
	// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules. Valid values are `on` and `off`. Default value is `off`.
	IgnoreCacheControl *string `pulumi:"ignoreCacheControl"`
	// Ignore the Set-Cookie header of the origin site. Valid values are `on` and `off`. Default value is `off`. This parameter is for white-list customer.
	IgnoreSetCookie *string `pulumi:"ignoreSetCookie"`
	// Cache configuration switch. Valid values are `on` and `off`.
	NoCacheSwitch *string `pulumi:"noCacheSwitch"`
	// Always check back to origin. Valid values are `on` and `off`. Default value is `off`.
	ReValidate *string `pulumi:"reValidate"`
	// Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html, `index`: fill /.
	RulePaths []string `pulumi:"rulePaths"`
	// Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
	RuleType *string `pulumi:"ruleType"`
	// Cache configuration switch. Valid values are `on` and `off`.
	Switch *string `pulumi:"switch"`
}

// DomainRuleCachInput is an input type that accepts DomainRuleCachArgs and DomainRuleCachOutput values.
// You can construct a concrete instance of `DomainRuleCachInput` via:
//
//	DomainRuleCachArgs{...}
type DomainRuleCachInput interface {
	pulumi.Input

	ToDomainRuleCachOutput() DomainRuleCachOutput
	ToDomainRuleCachOutputWithContext(context.Context) DomainRuleCachOutput
}

type DomainRuleCachArgs struct {
	// Cache expiration time setting, the unit is second, the maximum can be set to 365 days.
	CacheTime pulumi.IntInput `pulumi:"cacheTime"`
	// Advanced cache expiration configuration. When it is turned on, it will compare the max-age value returned by the origin site with the cache expiration time set in CacheRules, and take the minimum value to cache at the node. Valid values are `on` and `off`. Default value is `off`.
	CompareMaxAge pulumi.StringPtrInput `pulumi:"compareMaxAge"`
	// Follow the source station configuration switch. Valid values are `on` and `off`.
	FollowOriginSwitch pulumi.StringPtrInput `pulumi:"followOriginSwitch"`
	// Specify whether to enable heuristic cache, only available while `followOriginSwitch` enabled, values: `on`, `off` (Default).
	HeuristicCacheSwitch pulumi.StringPtrInput `pulumi:"heuristicCacheSwitch"`
	// Specify heuristic cache time in second, only available while `followOriginSwitch` and `heuristicCacheSwitch` enabled.
	HeuristicCacheTime pulumi.IntPtrInput `pulumi:"heuristicCacheTime"`
	// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules. Valid values are `on` and `off`. Default value is `off`.
	IgnoreCacheControl pulumi.StringPtrInput `pulumi:"ignoreCacheControl"`
	// Ignore the Set-Cookie header of the origin site. Valid values are `on` and `off`. Default value is `off`. This parameter is for white-list customer.
	IgnoreSetCookie pulumi.StringPtrInput `pulumi:"ignoreSetCookie"`
	// Cache configuration switch. Valid values are `on` and `off`.
	NoCacheSwitch pulumi.StringPtrInput `pulumi:"noCacheSwitch"`
	// Always check back to origin. Valid values are `on` and `off`. Default value is `off`.
	ReValidate pulumi.StringPtrInput `pulumi:"reValidate"`
	// Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html, `index`: fill /.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// Cache configuration switch. Valid values are `on` and `off`.
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (DomainRuleCachArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleCach)(nil)).Elem()
}

func (i DomainRuleCachArgs) ToDomainRuleCachOutput() DomainRuleCachOutput {
	return i.ToDomainRuleCachOutputWithContext(context.Background())
}

func (i DomainRuleCachArgs) ToDomainRuleCachOutputWithContext(ctx context.Context) DomainRuleCachOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleCachOutput)
}

// DomainRuleCachArrayInput is an input type that accepts DomainRuleCachArray and DomainRuleCachArrayOutput values.
// You can construct a concrete instance of `DomainRuleCachArrayInput` via:
//
//	DomainRuleCachArray{ DomainRuleCachArgs{...} }
type DomainRuleCachArrayInput interface {
	pulumi.Input

	ToDomainRuleCachArrayOutput() DomainRuleCachArrayOutput
	ToDomainRuleCachArrayOutputWithContext(context.Context) DomainRuleCachArrayOutput
}

type DomainRuleCachArray []DomainRuleCachInput

func (DomainRuleCachArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRuleCach)(nil)).Elem()
}

func (i DomainRuleCachArray) ToDomainRuleCachArrayOutput() DomainRuleCachArrayOutput {
	return i.ToDomainRuleCachArrayOutputWithContext(context.Background())
}

func (i DomainRuleCachArray) ToDomainRuleCachArrayOutputWithContext(ctx context.Context) DomainRuleCachArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleCachArrayOutput)
}

type DomainRuleCachOutput struct{ *pulumi.OutputState }

func (DomainRuleCachOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleCach)(nil)).Elem()
}

func (o DomainRuleCachOutput) ToDomainRuleCachOutput() DomainRuleCachOutput {
	return o
}

func (o DomainRuleCachOutput) ToDomainRuleCachOutputWithContext(ctx context.Context) DomainRuleCachOutput {
	return o
}

// Cache expiration time setting, the unit is second, the maximum can be set to 365 days.
func (o DomainRuleCachOutput) CacheTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainRuleCach) int { return v.CacheTime }).(pulumi.IntOutput)
}

// Advanced cache expiration configuration. When it is turned on, it will compare the max-age value returned by the origin site with the cache expiration time set in CacheRules, and take the minimum value to cache at the node. Valid values are `on` and `off`. Default value is `off`.
func (o DomainRuleCachOutput) CompareMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.CompareMaxAge }).(pulumi.StringPtrOutput)
}

// Follow the source station configuration switch. Valid values are `on` and `off`.
func (o DomainRuleCachOutput) FollowOriginSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.FollowOriginSwitch }).(pulumi.StringPtrOutput)
}

// Specify whether to enable heuristic cache, only available while `followOriginSwitch` enabled, values: `on`, `off` (Default).
func (o DomainRuleCachOutput) HeuristicCacheSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.HeuristicCacheSwitch }).(pulumi.StringPtrOutput)
}

// Specify heuristic cache time in second, only available while `followOriginSwitch` and `heuristicCacheSwitch` enabled.
func (o DomainRuleCachOutput) HeuristicCacheTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *int { return v.HeuristicCacheTime }).(pulumi.IntPtrOutput)
}

// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules. Valid values are `on` and `off`. Default value is `off`.
func (o DomainRuleCachOutput) IgnoreCacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.IgnoreCacheControl }).(pulumi.StringPtrOutput)
}

// Ignore the Set-Cookie header of the origin site. Valid values are `on` and `off`. Default value is `off`. This parameter is for white-list customer.
func (o DomainRuleCachOutput) IgnoreSetCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.IgnoreSetCookie }).(pulumi.StringPtrOutput)
}

// Cache configuration switch. Valid values are `on` and `off`.
func (o DomainRuleCachOutput) NoCacheSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.NoCacheSwitch }).(pulumi.StringPtrOutput)
}

// Always check back to origin. Valid values are `on` and `off`. Default value is `off`.
func (o DomainRuleCachOutput) ReValidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.ReValidate }).(pulumi.StringPtrOutput)
}

// Matching content under the corresponding type of CacheType: `all`: fill *, `file`: fill in the suffix name, such as jpg, txt, `directory`: fill in the path, such as /xxx/test, `path`: fill in the absolute path, such as /xxx/test.html, `index`: fill /.
func (o DomainRuleCachOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRuleCach) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Rule type. The following types are supported: `all`: all documents take effect, `file`: the specified file suffix takes effect, `directory`: the specified path takes effect, `path`: specify the absolute path to take effect, `index`: home page.
func (o DomainRuleCachOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// Cache configuration switch. Valid values are `on` and `off`.
func (o DomainRuleCachOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleCach) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type DomainRuleCachArrayOutput struct{ *pulumi.OutputState }

func (DomainRuleCachArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRuleCach)(nil)).Elem()
}

func (o DomainRuleCachArrayOutput) ToDomainRuleCachArrayOutput() DomainRuleCachArrayOutput {
	return o
}

func (o DomainRuleCachArrayOutput) ToDomainRuleCachArrayOutputWithContext(ctx context.Context) DomainRuleCachArrayOutput {
	return o
}

func (o DomainRuleCachArrayOutput) Index(i pulumi.IntInput) DomainRuleCachOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRuleCach {
		return vs[0].([]DomainRuleCach)[vs[1].(int)]
	}).(DomainRuleCachOutput)
}

type DomainStatusCodeCache struct {
	// List of cache rule.
	CacheRules []DomainStatusCodeCacheCacheRule `pulumi:"cacheRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch string `pulumi:"switch"`
}

// DomainStatusCodeCacheInput is an input type that accepts DomainStatusCodeCacheArgs and DomainStatusCodeCacheOutput values.
// You can construct a concrete instance of `DomainStatusCodeCacheInput` via:
//
//	DomainStatusCodeCacheArgs{...}
type DomainStatusCodeCacheInput interface {
	pulumi.Input

	ToDomainStatusCodeCacheOutput() DomainStatusCodeCacheOutput
	ToDomainStatusCodeCacheOutputWithContext(context.Context) DomainStatusCodeCacheOutput
}

type DomainStatusCodeCacheArgs struct {
	// List of cache rule.
	CacheRules DomainStatusCodeCacheCacheRuleArrayInput `pulumi:"cacheRules"`
	// Configuration switch, available values: `on`, `off` (default).
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (DomainStatusCodeCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusCodeCache)(nil)).Elem()
}

func (i DomainStatusCodeCacheArgs) ToDomainStatusCodeCacheOutput() DomainStatusCodeCacheOutput {
	return i.ToDomainStatusCodeCacheOutputWithContext(context.Background())
}

func (i DomainStatusCodeCacheArgs) ToDomainStatusCodeCacheOutputWithContext(ctx context.Context) DomainStatusCodeCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusCodeCacheOutput)
}

func (i DomainStatusCodeCacheArgs) ToDomainStatusCodeCachePtrOutput() DomainStatusCodeCachePtrOutput {
	return i.ToDomainStatusCodeCachePtrOutputWithContext(context.Background())
}

func (i DomainStatusCodeCacheArgs) ToDomainStatusCodeCachePtrOutputWithContext(ctx context.Context) DomainStatusCodeCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusCodeCacheOutput).ToDomainStatusCodeCachePtrOutputWithContext(ctx)
}

// DomainStatusCodeCachePtrInput is an input type that accepts DomainStatusCodeCacheArgs, DomainStatusCodeCachePtr and DomainStatusCodeCachePtrOutput values.
// You can construct a concrete instance of `DomainStatusCodeCachePtrInput` via:
//
//	        DomainStatusCodeCacheArgs{...}
//
//	or:
//
//	        nil
type DomainStatusCodeCachePtrInput interface {
	pulumi.Input

	ToDomainStatusCodeCachePtrOutput() DomainStatusCodeCachePtrOutput
	ToDomainStatusCodeCachePtrOutputWithContext(context.Context) DomainStatusCodeCachePtrOutput
}

type domainStatusCodeCachePtrType DomainStatusCodeCacheArgs

func DomainStatusCodeCachePtr(v *DomainStatusCodeCacheArgs) DomainStatusCodeCachePtrInput {
	return (*domainStatusCodeCachePtrType)(v)
}

func (*domainStatusCodeCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainStatusCodeCache)(nil)).Elem()
}

func (i *domainStatusCodeCachePtrType) ToDomainStatusCodeCachePtrOutput() DomainStatusCodeCachePtrOutput {
	return i.ToDomainStatusCodeCachePtrOutputWithContext(context.Background())
}

func (i *domainStatusCodeCachePtrType) ToDomainStatusCodeCachePtrOutputWithContext(ctx context.Context) DomainStatusCodeCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusCodeCachePtrOutput)
}

type DomainStatusCodeCacheOutput struct{ *pulumi.OutputState }

func (DomainStatusCodeCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusCodeCache)(nil)).Elem()
}

func (o DomainStatusCodeCacheOutput) ToDomainStatusCodeCacheOutput() DomainStatusCodeCacheOutput {
	return o
}

func (o DomainStatusCodeCacheOutput) ToDomainStatusCodeCacheOutputWithContext(ctx context.Context) DomainStatusCodeCacheOutput {
	return o
}

func (o DomainStatusCodeCacheOutput) ToDomainStatusCodeCachePtrOutput() DomainStatusCodeCachePtrOutput {
	return o.ToDomainStatusCodeCachePtrOutputWithContext(context.Background())
}

func (o DomainStatusCodeCacheOutput) ToDomainStatusCodeCachePtrOutputWithContext(ctx context.Context) DomainStatusCodeCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainStatusCodeCache) *DomainStatusCodeCache {
		return &v
	}).(DomainStatusCodeCachePtrOutput)
}

// List of cache rule.
func (o DomainStatusCodeCacheOutput) CacheRules() DomainStatusCodeCacheCacheRuleArrayOutput {
	return o.ApplyT(func(v DomainStatusCodeCache) []DomainStatusCodeCacheCacheRule { return v.CacheRules }).(DomainStatusCodeCacheCacheRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainStatusCodeCacheOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v DomainStatusCodeCache) string { return v.Switch }).(pulumi.StringOutput)
}

type DomainStatusCodeCachePtrOutput struct{ *pulumi.OutputState }

func (DomainStatusCodeCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainStatusCodeCache)(nil)).Elem()
}

func (o DomainStatusCodeCachePtrOutput) ToDomainStatusCodeCachePtrOutput() DomainStatusCodeCachePtrOutput {
	return o
}

func (o DomainStatusCodeCachePtrOutput) ToDomainStatusCodeCachePtrOutputWithContext(ctx context.Context) DomainStatusCodeCachePtrOutput {
	return o
}

func (o DomainStatusCodeCachePtrOutput) Elem() DomainStatusCodeCacheOutput {
	return o.ApplyT(func(v *DomainStatusCodeCache) DomainStatusCodeCache {
		if v != nil {
			return *v
		}
		var ret DomainStatusCodeCache
		return ret
	}).(DomainStatusCodeCacheOutput)
}

// List of cache rule.
func (o DomainStatusCodeCachePtrOutput) CacheRules() DomainStatusCodeCacheCacheRuleArrayOutput {
	return o.ApplyT(func(v *DomainStatusCodeCache) []DomainStatusCodeCacheCacheRule {
		if v == nil {
			return nil
		}
		return v.CacheRules
	}).(DomainStatusCodeCacheCacheRuleArrayOutput)
}

// Configuration switch, available values: `on`, `off` (default).
func (o DomainStatusCodeCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainStatusCodeCache) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type DomainStatusCodeCacheCacheRule struct {
	// Status code cache expiration time (in seconds).
	CacheTime int `pulumi:"cacheTime"`
	// Code of status cache. available values: `403`, `404`.
	StatusCode string `pulumi:"statusCode"`
}

// DomainStatusCodeCacheCacheRuleInput is an input type that accepts DomainStatusCodeCacheCacheRuleArgs and DomainStatusCodeCacheCacheRuleOutput values.
// You can construct a concrete instance of `DomainStatusCodeCacheCacheRuleInput` via:
//
//	DomainStatusCodeCacheCacheRuleArgs{...}
type DomainStatusCodeCacheCacheRuleInput interface {
	pulumi.Input

	ToDomainStatusCodeCacheCacheRuleOutput() DomainStatusCodeCacheCacheRuleOutput
	ToDomainStatusCodeCacheCacheRuleOutputWithContext(context.Context) DomainStatusCodeCacheCacheRuleOutput
}

type DomainStatusCodeCacheCacheRuleArgs struct {
	// Status code cache expiration time (in seconds).
	CacheTime pulumi.IntInput `pulumi:"cacheTime"`
	// Code of status cache. available values: `403`, `404`.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (DomainStatusCodeCacheCacheRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusCodeCacheCacheRule)(nil)).Elem()
}

func (i DomainStatusCodeCacheCacheRuleArgs) ToDomainStatusCodeCacheCacheRuleOutput() DomainStatusCodeCacheCacheRuleOutput {
	return i.ToDomainStatusCodeCacheCacheRuleOutputWithContext(context.Background())
}

func (i DomainStatusCodeCacheCacheRuleArgs) ToDomainStatusCodeCacheCacheRuleOutputWithContext(ctx context.Context) DomainStatusCodeCacheCacheRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusCodeCacheCacheRuleOutput)
}

// DomainStatusCodeCacheCacheRuleArrayInput is an input type that accepts DomainStatusCodeCacheCacheRuleArray and DomainStatusCodeCacheCacheRuleArrayOutput values.
// You can construct a concrete instance of `DomainStatusCodeCacheCacheRuleArrayInput` via:
//
//	DomainStatusCodeCacheCacheRuleArray{ DomainStatusCodeCacheCacheRuleArgs{...} }
type DomainStatusCodeCacheCacheRuleArrayInput interface {
	pulumi.Input

	ToDomainStatusCodeCacheCacheRuleArrayOutput() DomainStatusCodeCacheCacheRuleArrayOutput
	ToDomainStatusCodeCacheCacheRuleArrayOutputWithContext(context.Context) DomainStatusCodeCacheCacheRuleArrayOutput
}

type DomainStatusCodeCacheCacheRuleArray []DomainStatusCodeCacheCacheRuleInput

func (DomainStatusCodeCacheCacheRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusCodeCacheCacheRule)(nil)).Elem()
}

func (i DomainStatusCodeCacheCacheRuleArray) ToDomainStatusCodeCacheCacheRuleArrayOutput() DomainStatusCodeCacheCacheRuleArrayOutput {
	return i.ToDomainStatusCodeCacheCacheRuleArrayOutputWithContext(context.Background())
}

func (i DomainStatusCodeCacheCacheRuleArray) ToDomainStatusCodeCacheCacheRuleArrayOutputWithContext(ctx context.Context) DomainStatusCodeCacheCacheRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainStatusCodeCacheCacheRuleArrayOutput)
}

type DomainStatusCodeCacheCacheRuleOutput struct{ *pulumi.OutputState }

func (DomainStatusCodeCacheCacheRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatusCodeCacheCacheRule)(nil)).Elem()
}

func (o DomainStatusCodeCacheCacheRuleOutput) ToDomainStatusCodeCacheCacheRuleOutput() DomainStatusCodeCacheCacheRuleOutput {
	return o
}

func (o DomainStatusCodeCacheCacheRuleOutput) ToDomainStatusCodeCacheCacheRuleOutputWithContext(ctx context.Context) DomainStatusCodeCacheCacheRuleOutput {
	return o
}

// Status code cache expiration time (in seconds).
func (o DomainStatusCodeCacheCacheRuleOutput) CacheTime() pulumi.IntOutput {
	return o.ApplyT(func(v DomainStatusCodeCacheCacheRule) int { return v.CacheTime }).(pulumi.IntOutput)
}

// Code of status cache. available values: `403`, `404`.
func (o DomainStatusCodeCacheCacheRuleOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v DomainStatusCodeCacheCacheRule) string { return v.StatusCode }).(pulumi.StringOutput)
}

type DomainStatusCodeCacheCacheRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainStatusCodeCacheCacheRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainStatusCodeCacheCacheRule)(nil)).Elem()
}

func (o DomainStatusCodeCacheCacheRuleArrayOutput) ToDomainStatusCodeCacheCacheRuleArrayOutput() DomainStatusCodeCacheCacheRuleArrayOutput {
	return o
}

func (o DomainStatusCodeCacheCacheRuleArrayOutput) ToDomainStatusCodeCacheCacheRuleArrayOutputWithContext(ctx context.Context) DomainStatusCodeCacheCacheRuleArrayOutput {
	return o
}

func (o DomainStatusCodeCacheCacheRuleArrayOutput) Index(i pulumi.IntInput) DomainStatusCodeCacheCacheRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainStatusCodeCacheCacheRule {
		return vs[0].([]DomainStatusCodeCacheCacheRule)[vs[1].(int)]
	}).(DomainStatusCodeCacheCacheRuleOutput)
}

type UrlPurgePurgeHistory struct {
	// Purge task create time.
	CreateTime *string `pulumi:"createTime"`
	// Purge flush type of `flush` or `delete`.
	FlushType *string `pulumi:"flushType"`
	// Purge category in of `url` or `path`.
	PurgeType *string `pulumi:"purgeType"`
	// Purge status of `fail`, `done`, `process`.
	Status *string `pulumi:"status"`
	// Task id of last operation.
	TaskId *string `pulumi:"taskId"`
	// Purge url.
	Url *string `pulumi:"url"`
}

// UrlPurgePurgeHistoryInput is an input type that accepts UrlPurgePurgeHistoryArgs and UrlPurgePurgeHistoryOutput values.
// You can construct a concrete instance of `UrlPurgePurgeHistoryInput` via:
//
//	UrlPurgePurgeHistoryArgs{...}
type UrlPurgePurgeHistoryInput interface {
	pulumi.Input

	ToUrlPurgePurgeHistoryOutput() UrlPurgePurgeHistoryOutput
	ToUrlPurgePurgeHistoryOutputWithContext(context.Context) UrlPurgePurgeHistoryOutput
}

type UrlPurgePurgeHistoryArgs struct {
	// Purge task create time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Purge flush type of `flush` or `delete`.
	FlushType pulumi.StringPtrInput `pulumi:"flushType"`
	// Purge category in of `url` or `path`.
	PurgeType pulumi.StringPtrInput `pulumi:"purgeType"`
	// Purge status of `fail`, `done`, `process`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Task id of last operation.
	TaskId pulumi.StringPtrInput `pulumi:"taskId"`
	// Purge url.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (UrlPurgePurgeHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPurgePurgeHistory)(nil)).Elem()
}

func (i UrlPurgePurgeHistoryArgs) ToUrlPurgePurgeHistoryOutput() UrlPurgePurgeHistoryOutput {
	return i.ToUrlPurgePurgeHistoryOutputWithContext(context.Background())
}

func (i UrlPurgePurgeHistoryArgs) ToUrlPurgePurgeHistoryOutputWithContext(ctx context.Context) UrlPurgePurgeHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPurgePurgeHistoryOutput)
}

// UrlPurgePurgeHistoryArrayInput is an input type that accepts UrlPurgePurgeHistoryArray and UrlPurgePurgeHistoryArrayOutput values.
// You can construct a concrete instance of `UrlPurgePurgeHistoryArrayInput` via:
//
//	UrlPurgePurgeHistoryArray{ UrlPurgePurgeHistoryArgs{...} }
type UrlPurgePurgeHistoryArrayInput interface {
	pulumi.Input

	ToUrlPurgePurgeHistoryArrayOutput() UrlPurgePurgeHistoryArrayOutput
	ToUrlPurgePurgeHistoryArrayOutputWithContext(context.Context) UrlPurgePurgeHistoryArrayOutput
}

type UrlPurgePurgeHistoryArray []UrlPurgePurgeHistoryInput

func (UrlPurgePurgeHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlPurgePurgeHistory)(nil)).Elem()
}

func (i UrlPurgePurgeHistoryArray) ToUrlPurgePurgeHistoryArrayOutput() UrlPurgePurgeHistoryArrayOutput {
	return i.ToUrlPurgePurgeHistoryArrayOutputWithContext(context.Background())
}

func (i UrlPurgePurgeHistoryArray) ToUrlPurgePurgeHistoryArrayOutputWithContext(ctx context.Context) UrlPurgePurgeHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPurgePurgeHistoryArrayOutput)
}

type UrlPurgePurgeHistoryOutput struct{ *pulumi.OutputState }

func (UrlPurgePurgeHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPurgePurgeHistory)(nil)).Elem()
}

func (o UrlPurgePurgeHistoryOutput) ToUrlPurgePurgeHistoryOutput() UrlPurgePurgeHistoryOutput {
	return o
}

func (o UrlPurgePurgeHistoryOutput) ToUrlPurgePurgeHistoryOutputWithContext(ctx context.Context) UrlPurgePurgeHistoryOutput {
	return o
}

// Purge task create time.
func (o UrlPurgePurgeHistoryOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPurgePurgeHistory) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Purge flush type of `flush` or `delete`.
func (o UrlPurgePurgeHistoryOutput) FlushType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPurgePurgeHistory) *string { return v.FlushType }).(pulumi.StringPtrOutput)
}

// Purge category in of `url` or `path`.
func (o UrlPurgePurgeHistoryOutput) PurgeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPurgePurgeHistory) *string { return v.PurgeType }).(pulumi.StringPtrOutput)
}

// Purge status of `fail`, `done`, `process`.
func (o UrlPurgePurgeHistoryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPurgePurgeHistory) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Task id of last operation.
func (o UrlPurgePurgeHistoryOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPurgePurgeHistory) *string { return v.TaskId }).(pulumi.StringPtrOutput)
}

// Purge url.
func (o UrlPurgePurgeHistoryOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPurgePurgeHistory) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type UrlPurgePurgeHistoryArrayOutput struct{ *pulumi.OutputState }

func (UrlPurgePurgeHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlPurgePurgeHistory)(nil)).Elem()
}

func (o UrlPurgePurgeHistoryArrayOutput) ToUrlPurgePurgeHistoryArrayOutput() UrlPurgePurgeHistoryArrayOutput {
	return o
}

func (o UrlPurgePurgeHistoryArrayOutput) ToUrlPurgePurgeHistoryArrayOutputWithContext(ctx context.Context) UrlPurgePurgeHistoryArrayOutput {
	return o
}

func (o UrlPurgePurgeHistoryArrayOutput) Index(i pulumi.IntInput) UrlPurgePurgeHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlPurgePurgeHistory {
		return vs[0].([]UrlPurgePurgeHistory)[vs[1].(int)]
	}).(UrlPurgePurgeHistoryOutput)
}

type UrlPushPushHistory struct {
	// Specify push area. NOTE: only push same area cache contents.
	Area *string `pulumi:"area"`
	// Push task create time.
	CreateTime *string `pulumi:"createTime"`
	// Push progress in percent.
	Percent *int `pulumi:"percent"`
	// Push status of `fail`, `done`, `process` or `invalid` (4xx, 5xx response).
	Status *string `pulumi:"status"`
	// Push task id.
	TaskId *string `pulumi:"taskId"`
	// Push task update time.
	UpdateTime *string `pulumi:"updateTime"`
	// Push url.
	Url *string `pulumi:"url"`
}

// UrlPushPushHistoryInput is an input type that accepts UrlPushPushHistoryArgs and UrlPushPushHistoryOutput values.
// You can construct a concrete instance of `UrlPushPushHistoryInput` via:
//
//	UrlPushPushHistoryArgs{...}
type UrlPushPushHistoryInput interface {
	pulumi.Input

	ToUrlPushPushHistoryOutput() UrlPushPushHistoryOutput
	ToUrlPushPushHistoryOutputWithContext(context.Context) UrlPushPushHistoryOutput
}

type UrlPushPushHistoryArgs struct {
	// Specify push area. NOTE: only push same area cache contents.
	Area pulumi.StringPtrInput `pulumi:"area"`
	// Push task create time.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Push progress in percent.
	Percent pulumi.IntPtrInput `pulumi:"percent"`
	// Push status of `fail`, `done`, `process` or `invalid` (4xx, 5xx response).
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Push task id.
	TaskId pulumi.StringPtrInput `pulumi:"taskId"`
	// Push task update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// Push url.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (UrlPushPushHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPushPushHistory)(nil)).Elem()
}

func (i UrlPushPushHistoryArgs) ToUrlPushPushHistoryOutput() UrlPushPushHistoryOutput {
	return i.ToUrlPushPushHistoryOutputWithContext(context.Background())
}

func (i UrlPushPushHistoryArgs) ToUrlPushPushHistoryOutputWithContext(ctx context.Context) UrlPushPushHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPushPushHistoryOutput)
}

// UrlPushPushHistoryArrayInput is an input type that accepts UrlPushPushHistoryArray and UrlPushPushHistoryArrayOutput values.
// You can construct a concrete instance of `UrlPushPushHistoryArrayInput` via:
//
//	UrlPushPushHistoryArray{ UrlPushPushHistoryArgs{...} }
type UrlPushPushHistoryArrayInput interface {
	pulumi.Input

	ToUrlPushPushHistoryArrayOutput() UrlPushPushHistoryArrayOutput
	ToUrlPushPushHistoryArrayOutputWithContext(context.Context) UrlPushPushHistoryArrayOutput
}

type UrlPushPushHistoryArray []UrlPushPushHistoryInput

func (UrlPushPushHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlPushPushHistory)(nil)).Elem()
}

func (i UrlPushPushHistoryArray) ToUrlPushPushHistoryArrayOutput() UrlPushPushHistoryArrayOutput {
	return i.ToUrlPushPushHistoryArrayOutputWithContext(context.Background())
}

func (i UrlPushPushHistoryArray) ToUrlPushPushHistoryArrayOutputWithContext(ctx context.Context) UrlPushPushHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPushPushHistoryArrayOutput)
}

type UrlPushPushHistoryOutput struct{ *pulumi.OutputState }

func (UrlPushPushHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPushPushHistory)(nil)).Elem()
}

func (o UrlPushPushHistoryOutput) ToUrlPushPushHistoryOutput() UrlPushPushHistoryOutput {
	return o
}

func (o UrlPushPushHistoryOutput) ToUrlPushPushHistoryOutputWithContext(ctx context.Context) UrlPushPushHistoryOutput {
	return o
}

// Specify push area. NOTE: only push same area cache contents.
func (o UrlPushPushHistoryOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *string { return v.Area }).(pulumi.StringPtrOutput)
}

// Push task create time.
func (o UrlPushPushHistoryOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Push progress in percent.
func (o UrlPushPushHistoryOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

// Push status of `fail`, `done`, `process` or `invalid` (4xx, 5xx response).
func (o UrlPushPushHistoryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Push task id.
func (o UrlPushPushHistoryOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *string { return v.TaskId }).(pulumi.StringPtrOutput)
}

// Push task update time.
func (o UrlPushPushHistoryOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Push url.
func (o UrlPushPushHistoryOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlPushPushHistory) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type UrlPushPushHistoryArrayOutput struct{ *pulumi.OutputState }

func (UrlPushPushHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlPushPushHistory)(nil)).Elem()
}

func (o UrlPushPushHistoryArrayOutput) ToUrlPushPushHistoryArrayOutput() UrlPushPushHistoryArrayOutput {
	return o
}

func (o UrlPushPushHistoryArrayOutput) ToUrlPushPushHistoryArrayOutputWithContext(ctx context.Context) UrlPushPushHistoryArrayOutput {
	return o
}

func (o UrlPushPushHistoryArrayOutput) Index(i pulumi.IntInput) UrlPushPushHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlPushPushHistory {
		return vs[0].([]UrlPushPushHistory)[vs[1].(int)]
	}).(UrlPushPushHistoryOutput)
}

type GetDomainsDomainList struct {
	// Acceleration region.
	Area string `pulumi:"area"`
	// CNAME address of domain name.
	Cname string `pulumi:"cname"`
	// Domain name creation time.
	CreateTime string `pulumi:"createTime"`
	// Acceleration domain name.
	Domain string `pulumi:"domain"`
	// Whether to enable full-path cache.
	FullUrlCache bool `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfigs []GetDomainsDomainListHttpsConfig `pulumi:"httpsConfigs"`
	// Domain name ID.
	Id string `pulumi:"id"`
	// Origin server configuration.
	Origins []GetDomainsDomainListOrigin `pulumi:"origins"`
	// The project CDN belongs to.
	ProjectId int `pulumi:"projectId"`
	// Sharding back to source configuration switch.
	RangeOriginSwitch string `pulumi:"rangeOriginSwitch"`
	// Request header configuration.
	RequestHeaders []GetDomainsDomainListRequestHeader `pulumi:"requestHeaders"`
	// Advanced path cache configuration.
	RuleCaches []GetDomainsDomainListRuleCach `pulumi:"ruleCaches"`
	// Service type of acceleration domain name. The available value include `web`, `download` and `media`.
	ServiceType string `pulumi:"serviceType"`
	// Acceleration service status.
	Status string `pulumi:"status"`
	// Tags of cdn domain.
	Tags map[string]interface{} `pulumi:"tags"`
	// Last modified time of domain name.
	UpdateTime string `pulumi:"updateTime"`
}

// GetDomainsDomainListInput is an input type that accepts GetDomainsDomainListArgs and GetDomainsDomainListOutput values.
// You can construct a concrete instance of `GetDomainsDomainListInput` via:
//
//	GetDomainsDomainListArgs{...}
type GetDomainsDomainListInput interface {
	pulumi.Input

	ToGetDomainsDomainListOutput() GetDomainsDomainListOutput
	ToGetDomainsDomainListOutputWithContext(context.Context) GetDomainsDomainListOutput
}

type GetDomainsDomainListArgs struct {
	// Acceleration region.
	Area pulumi.StringInput `pulumi:"area"`
	// CNAME address of domain name.
	Cname pulumi.StringInput `pulumi:"cname"`
	// Domain name creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Acceleration domain name.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Whether to enable full-path cache.
	FullUrlCache pulumi.BoolInput `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfigs GetDomainsDomainListHttpsConfigArrayInput `pulumi:"httpsConfigs"`
	// Domain name ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Origin server configuration.
	Origins GetDomainsDomainListOriginArrayInput `pulumi:"origins"`
	// The project CDN belongs to.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Sharding back to source configuration switch.
	RangeOriginSwitch pulumi.StringInput `pulumi:"rangeOriginSwitch"`
	// Request header configuration.
	RequestHeaders GetDomainsDomainListRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Advanced path cache configuration.
	RuleCaches GetDomainsDomainListRuleCachArrayInput `pulumi:"ruleCaches"`
	// Service type of acceleration domain name. The available value include `web`, `download` and `media`.
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// Acceleration service status.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags of cdn domain.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Last modified time of domain name.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetDomainsDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainList)(nil)).Elem()
}

func (i GetDomainsDomainListArgs) ToGetDomainsDomainListOutput() GetDomainsDomainListOutput {
	return i.ToGetDomainsDomainListOutputWithContext(context.Background())
}

func (i GetDomainsDomainListArgs) ToGetDomainsDomainListOutputWithContext(ctx context.Context) GetDomainsDomainListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListOutput)
}

// GetDomainsDomainListArrayInput is an input type that accepts GetDomainsDomainListArray and GetDomainsDomainListArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainListArrayInput` via:
//
//	GetDomainsDomainListArray{ GetDomainsDomainListArgs{...} }
type GetDomainsDomainListArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainListArrayOutput() GetDomainsDomainListArrayOutput
	ToGetDomainsDomainListArrayOutputWithContext(context.Context) GetDomainsDomainListArrayOutput
}

type GetDomainsDomainListArray []GetDomainsDomainListInput

func (GetDomainsDomainListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainList)(nil)).Elem()
}

func (i GetDomainsDomainListArray) ToGetDomainsDomainListArrayOutput() GetDomainsDomainListArrayOutput {
	return i.ToGetDomainsDomainListArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainListArray) ToGetDomainsDomainListArrayOutputWithContext(ctx context.Context) GetDomainsDomainListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListArrayOutput)
}

type GetDomainsDomainListOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainList)(nil)).Elem()
}

func (o GetDomainsDomainListOutput) ToGetDomainsDomainListOutput() GetDomainsDomainListOutput {
	return o
}

func (o GetDomainsDomainListOutput) ToGetDomainsDomainListOutputWithContext(ctx context.Context) GetDomainsDomainListOutput {
	return o
}

// Acceleration region.
func (o GetDomainsDomainListOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.Area }).(pulumi.StringOutput)
}

// CNAME address of domain name.
func (o GetDomainsDomainListOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.Cname }).(pulumi.StringOutput)
}

// Domain name creation time.
func (o GetDomainsDomainListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Acceleration domain name.
func (o GetDomainsDomainListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.Domain }).(pulumi.StringOutput)
}

// Whether to enable full-path cache.
func (o GetDomainsDomainListOutput) FullUrlCache() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomainList) bool { return v.FullUrlCache }).(pulumi.BoolOutput)
}

// HTTPS acceleration configuration. It's a list and consist of at most one item.
func (o GetDomainsDomainListOutput) HttpsConfigs() GetDomainsDomainListHttpsConfigArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainList) []GetDomainsDomainListHttpsConfig { return v.HttpsConfigs }).(GetDomainsDomainListHttpsConfigArrayOutput)
}

// Domain name ID.
func (o GetDomainsDomainListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.Id }).(pulumi.StringOutput)
}

// Origin server configuration.
func (o GetDomainsDomainListOutput) Origins() GetDomainsDomainListOriginArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainList) []GetDomainsDomainListOrigin { return v.Origins }).(GetDomainsDomainListOriginArrayOutput)
}

// The project CDN belongs to.
func (o GetDomainsDomainListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomainList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Sharding back to source configuration switch.
func (o GetDomainsDomainListOutput) RangeOriginSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.RangeOriginSwitch }).(pulumi.StringOutput)
}

// Request header configuration.
func (o GetDomainsDomainListOutput) RequestHeaders() GetDomainsDomainListRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainList) []GetDomainsDomainListRequestHeader { return v.RequestHeaders }).(GetDomainsDomainListRequestHeaderArrayOutput)
}

// Advanced path cache configuration.
func (o GetDomainsDomainListOutput) RuleCaches() GetDomainsDomainListRuleCachArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainList) []GetDomainsDomainListRuleCach { return v.RuleCaches }).(GetDomainsDomainListRuleCachArrayOutput)
}

// Service type of acceleration domain name. The available value include `web`, `download` and `media`.
func (o GetDomainsDomainListOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.ServiceType }).(pulumi.StringOutput)
}

// Acceleration service status.
func (o GetDomainsDomainListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.Status }).(pulumi.StringOutput)
}

// Tags of cdn domain.
func (o GetDomainsDomainListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDomainsDomainList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Last modified time of domain name.
func (o GetDomainsDomainListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetDomainsDomainListArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainList)(nil)).Elem()
}

func (o GetDomainsDomainListArrayOutput) ToGetDomainsDomainListArrayOutput() GetDomainsDomainListArrayOutput {
	return o
}

func (o GetDomainsDomainListArrayOutput) ToGetDomainsDomainListArrayOutputWithContext(ctx context.Context) GetDomainsDomainListArrayOutput {
	return o
}

func (o GetDomainsDomainListArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainList {
		return vs[0].([]GetDomainsDomainList)[vs[1].(int)]
	}).(GetDomainsDomainListOutput)
}

type GetDomainsDomainListHttpsConfig struct {
	// HTTP2 configuration switch.
	Http2Switch string `pulumi:"http2Switch"`
	// HTTPS configuration. Valid values: `on`, `off` and `processing`.
	HttpsSwitch string `pulumi:"httpsSwitch"`
	// OCSP configuration switch.
	OcspStaplingSwitch string `pulumi:"ocspStaplingSwitch"`
	// Spdy configuration switch.
	SpdySwitch string `pulumi:"spdySwitch"`
	// Client certificate authentication feature.
	VerifyClient string `pulumi:"verifyClient"`
}

// GetDomainsDomainListHttpsConfigInput is an input type that accepts GetDomainsDomainListHttpsConfigArgs and GetDomainsDomainListHttpsConfigOutput values.
// You can construct a concrete instance of `GetDomainsDomainListHttpsConfigInput` via:
//
//	GetDomainsDomainListHttpsConfigArgs{...}
type GetDomainsDomainListHttpsConfigInput interface {
	pulumi.Input

	ToGetDomainsDomainListHttpsConfigOutput() GetDomainsDomainListHttpsConfigOutput
	ToGetDomainsDomainListHttpsConfigOutputWithContext(context.Context) GetDomainsDomainListHttpsConfigOutput
}

type GetDomainsDomainListHttpsConfigArgs struct {
	// HTTP2 configuration switch.
	Http2Switch pulumi.StringInput `pulumi:"http2Switch"`
	// HTTPS configuration. Valid values: `on`, `off` and `processing`.
	HttpsSwitch pulumi.StringInput `pulumi:"httpsSwitch"`
	// OCSP configuration switch.
	OcspStaplingSwitch pulumi.StringInput `pulumi:"ocspStaplingSwitch"`
	// Spdy configuration switch.
	SpdySwitch pulumi.StringInput `pulumi:"spdySwitch"`
	// Client certificate authentication feature.
	VerifyClient pulumi.StringInput `pulumi:"verifyClient"`
}

func (GetDomainsDomainListHttpsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListHttpsConfig)(nil)).Elem()
}

func (i GetDomainsDomainListHttpsConfigArgs) ToGetDomainsDomainListHttpsConfigOutput() GetDomainsDomainListHttpsConfigOutput {
	return i.ToGetDomainsDomainListHttpsConfigOutputWithContext(context.Background())
}

func (i GetDomainsDomainListHttpsConfigArgs) ToGetDomainsDomainListHttpsConfigOutputWithContext(ctx context.Context) GetDomainsDomainListHttpsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListHttpsConfigOutput)
}

// GetDomainsDomainListHttpsConfigArrayInput is an input type that accepts GetDomainsDomainListHttpsConfigArray and GetDomainsDomainListHttpsConfigArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainListHttpsConfigArrayInput` via:
//
//	GetDomainsDomainListHttpsConfigArray{ GetDomainsDomainListHttpsConfigArgs{...} }
type GetDomainsDomainListHttpsConfigArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainListHttpsConfigArrayOutput() GetDomainsDomainListHttpsConfigArrayOutput
	ToGetDomainsDomainListHttpsConfigArrayOutputWithContext(context.Context) GetDomainsDomainListHttpsConfigArrayOutput
}

type GetDomainsDomainListHttpsConfigArray []GetDomainsDomainListHttpsConfigInput

func (GetDomainsDomainListHttpsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListHttpsConfig)(nil)).Elem()
}

func (i GetDomainsDomainListHttpsConfigArray) ToGetDomainsDomainListHttpsConfigArrayOutput() GetDomainsDomainListHttpsConfigArrayOutput {
	return i.ToGetDomainsDomainListHttpsConfigArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainListHttpsConfigArray) ToGetDomainsDomainListHttpsConfigArrayOutputWithContext(ctx context.Context) GetDomainsDomainListHttpsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListHttpsConfigArrayOutput)
}

type GetDomainsDomainListHttpsConfigOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListHttpsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListHttpsConfig)(nil)).Elem()
}

func (o GetDomainsDomainListHttpsConfigOutput) ToGetDomainsDomainListHttpsConfigOutput() GetDomainsDomainListHttpsConfigOutput {
	return o
}

func (o GetDomainsDomainListHttpsConfigOutput) ToGetDomainsDomainListHttpsConfigOutputWithContext(ctx context.Context) GetDomainsDomainListHttpsConfigOutput {
	return o
}

// HTTP2 configuration switch.
func (o GetDomainsDomainListHttpsConfigOutput) Http2Switch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListHttpsConfig) string { return v.Http2Switch }).(pulumi.StringOutput)
}

// HTTPS configuration. Valid values: `on`, `off` and `processing`.
func (o GetDomainsDomainListHttpsConfigOutput) HttpsSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListHttpsConfig) string { return v.HttpsSwitch }).(pulumi.StringOutput)
}

// OCSP configuration switch.
func (o GetDomainsDomainListHttpsConfigOutput) OcspStaplingSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListHttpsConfig) string { return v.OcspStaplingSwitch }).(pulumi.StringOutput)
}

// Spdy configuration switch.
func (o GetDomainsDomainListHttpsConfigOutput) SpdySwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListHttpsConfig) string { return v.SpdySwitch }).(pulumi.StringOutput)
}

// Client certificate authentication feature.
func (o GetDomainsDomainListHttpsConfigOutput) VerifyClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListHttpsConfig) string { return v.VerifyClient }).(pulumi.StringOutput)
}

type GetDomainsDomainListHttpsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListHttpsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListHttpsConfig)(nil)).Elem()
}

func (o GetDomainsDomainListHttpsConfigArrayOutput) ToGetDomainsDomainListHttpsConfigArrayOutput() GetDomainsDomainListHttpsConfigArrayOutput {
	return o
}

func (o GetDomainsDomainListHttpsConfigArrayOutput) ToGetDomainsDomainListHttpsConfigArrayOutputWithContext(ctx context.Context) GetDomainsDomainListHttpsConfigArrayOutput {
	return o
}

func (o GetDomainsDomainListHttpsConfigArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainListHttpsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainListHttpsConfig {
		return vs[0].([]GetDomainsDomainListHttpsConfig)[vs[1].(int)]
	}).(GetDomainsDomainListHttpsConfigOutput)
}

type GetDomainsDomainListOrigin struct {
	// Backup origin server list.
	BackupOriginLists []string `pulumi:"backupOriginLists"`
	// Backup origin server type.
	BackupOriginType string `pulumi:"backupOriginType"`
	// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
	BackupServerName string `pulumi:"backupServerName"`
	// When OriginType is COS, you can specify if access to private buckets is allowed.
	CosPrivateAccess string `pulumi:"cosPrivateAccess"`
	// Master origin server list.
	OriginLists []string `pulumi:"originLists"`
	// Origin-pull protocol configuration. Valid values: `http`, `https` and `follow`.
	OriginPullProtocol string `pulumi:"originPullProtocol"`
	// Master origin server type.
	OriginType string `pulumi:"originType"`
	// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
	ServerName string `pulumi:"serverName"`
}

// GetDomainsDomainListOriginInput is an input type that accepts GetDomainsDomainListOriginArgs and GetDomainsDomainListOriginOutput values.
// You can construct a concrete instance of `GetDomainsDomainListOriginInput` via:
//
//	GetDomainsDomainListOriginArgs{...}
type GetDomainsDomainListOriginInput interface {
	pulumi.Input

	ToGetDomainsDomainListOriginOutput() GetDomainsDomainListOriginOutput
	ToGetDomainsDomainListOriginOutputWithContext(context.Context) GetDomainsDomainListOriginOutput
}

type GetDomainsDomainListOriginArgs struct {
	// Backup origin server list.
	BackupOriginLists pulumi.StringArrayInput `pulumi:"backupOriginLists"`
	// Backup origin server type.
	BackupOriginType pulumi.StringInput `pulumi:"backupOriginType"`
	// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
	BackupServerName pulumi.StringInput `pulumi:"backupServerName"`
	// When OriginType is COS, you can specify if access to private buckets is allowed.
	CosPrivateAccess pulumi.StringInput `pulumi:"cosPrivateAccess"`
	// Master origin server list.
	OriginLists pulumi.StringArrayInput `pulumi:"originLists"`
	// Origin-pull protocol configuration. Valid values: `http`, `https` and `follow`.
	OriginPullProtocol pulumi.StringInput `pulumi:"originPullProtocol"`
	// Master origin server type.
	OriginType pulumi.StringInput `pulumi:"originType"`
	// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (GetDomainsDomainListOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListOrigin)(nil)).Elem()
}

func (i GetDomainsDomainListOriginArgs) ToGetDomainsDomainListOriginOutput() GetDomainsDomainListOriginOutput {
	return i.ToGetDomainsDomainListOriginOutputWithContext(context.Background())
}

func (i GetDomainsDomainListOriginArgs) ToGetDomainsDomainListOriginOutputWithContext(ctx context.Context) GetDomainsDomainListOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListOriginOutput)
}

// GetDomainsDomainListOriginArrayInput is an input type that accepts GetDomainsDomainListOriginArray and GetDomainsDomainListOriginArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainListOriginArrayInput` via:
//
//	GetDomainsDomainListOriginArray{ GetDomainsDomainListOriginArgs{...} }
type GetDomainsDomainListOriginArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainListOriginArrayOutput() GetDomainsDomainListOriginArrayOutput
	ToGetDomainsDomainListOriginArrayOutputWithContext(context.Context) GetDomainsDomainListOriginArrayOutput
}

type GetDomainsDomainListOriginArray []GetDomainsDomainListOriginInput

func (GetDomainsDomainListOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListOrigin)(nil)).Elem()
}

func (i GetDomainsDomainListOriginArray) ToGetDomainsDomainListOriginArrayOutput() GetDomainsDomainListOriginArrayOutput {
	return i.ToGetDomainsDomainListOriginArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainListOriginArray) ToGetDomainsDomainListOriginArrayOutputWithContext(ctx context.Context) GetDomainsDomainListOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListOriginArrayOutput)
}

type GetDomainsDomainListOriginOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListOrigin)(nil)).Elem()
}

func (o GetDomainsDomainListOriginOutput) ToGetDomainsDomainListOriginOutput() GetDomainsDomainListOriginOutput {
	return o
}

func (o GetDomainsDomainListOriginOutput) ToGetDomainsDomainListOriginOutputWithContext(ctx context.Context) GetDomainsDomainListOriginOutput {
	return o
}

// Backup origin server list.
func (o GetDomainsDomainListOriginOutput) BackupOriginLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) []string { return v.BackupOriginLists }).(pulumi.StringArrayOutput)
}

// Backup origin server type.
func (o GetDomainsDomainListOriginOutput) BackupOriginType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) string { return v.BackupOriginType }).(pulumi.StringOutput)
}

// Host header used when accessing the backup origin server. If left empty, the ServerName of master origin server will be used by default.
func (o GetDomainsDomainListOriginOutput) BackupServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) string { return v.BackupServerName }).(pulumi.StringOutput)
}

// When OriginType is COS, you can specify if access to private buckets is allowed.
func (o GetDomainsDomainListOriginOutput) CosPrivateAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) string { return v.CosPrivateAccess }).(pulumi.StringOutput)
}

// Master origin server list.
func (o GetDomainsDomainListOriginOutput) OriginLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) []string { return v.OriginLists }).(pulumi.StringArrayOutput)
}

// Origin-pull protocol configuration. Valid values: `http`, `https` and `follow`.
func (o GetDomainsDomainListOriginOutput) OriginPullProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) string { return v.OriginPullProtocol }).(pulumi.StringOutput)
}

// Master origin server type.
func (o GetDomainsDomainListOriginOutput) OriginType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) string { return v.OriginType }).(pulumi.StringOutput)
}

// Host header used when accessing the master origin server. If left empty, the acceleration domain name will be used by default.
func (o GetDomainsDomainListOriginOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListOrigin) string { return v.ServerName }).(pulumi.StringOutput)
}

type GetDomainsDomainListOriginArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListOrigin)(nil)).Elem()
}

func (o GetDomainsDomainListOriginArrayOutput) ToGetDomainsDomainListOriginArrayOutput() GetDomainsDomainListOriginArrayOutput {
	return o
}

func (o GetDomainsDomainListOriginArrayOutput) ToGetDomainsDomainListOriginArrayOutputWithContext(ctx context.Context) GetDomainsDomainListOriginArrayOutput {
	return o
}

func (o GetDomainsDomainListOriginArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainListOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainListOrigin {
		return vs[0].([]GetDomainsDomainListOrigin)[vs[1].(int)]
	}).(GetDomainsDomainListOriginOutput)
}

type GetDomainsDomainListRequestHeader struct {
	// Custom request header configuration rules.
	HeaderRules []GetDomainsDomainListRequestHeaderHeaderRule `pulumi:"headerRules"`
	// Cache configuration switch.
	Switch string `pulumi:"switch"`
}

// GetDomainsDomainListRequestHeaderInput is an input type that accepts GetDomainsDomainListRequestHeaderArgs and GetDomainsDomainListRequestHeaderOutput values.
// You can construct a concrete instance of `GetDomainsDomainListRequestHeaderInput` via:
//
//	GetDomainsDomainListRequestHeaderArgs{...}
type GetDomainsDomainListRequestHeaderInput interface {
	pulumi.Input

	ToGetDomainsDomainListRequestHeaderOutput() GetDomainsDomainListRequestHeaderOutput
	ToGetDomainsDomainListRequestHeaderOutputWithContext(context.Context) GetDomainsDomainListRequestHeaderOutput
}

type GetDomainsDomainListRequestHeaderArgs struct {
	// Custom request header configuration rules.
	HeaderRules GetDomainsDomainListRequestHeaderHeaderRuleArrayInput `pulumi:"headerRules"`
	// Cache configuration switch.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (GetDomainsDomainListRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListRequestHeader)(nil)).Elem()
}

func (i GetDomainsDomainListRequestHeaderArgs) ToGetDomainsDomainListRequestHeaderOutput() GetDomainsDomainListRequestHeaderOutput {
	return i.ToGetDomainsDomainListRequestHeaderOutputWithContext(context.Background())
}

func (i GetDomainsDomainListRequestHeaderArgs) ToGetDomainsDomainListRequestHeaderOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListRequestHeaderOutput)
}

// GetDomainsDomainListRequestHeaderArrayInput is an input type that accepts GetDomainsDomainListRequestHeaderArray and GetDomainsDomainListRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainListRequestHeaderArrayInput` via:
//
//	GetDomainsDomainListRequestHeaderArray{ GetDomainsDomainListRequestHeaderArgs{...} }
type GetDomainsDomainListRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainListRequestHeaderArrayOutput() GetDomainsDomainListRequestHeaderArrayOutput
	ToGetDomainsDomainListRequestHeaderArrayOutputWithContext(context.Context) GetDomainsDomainListRequestHeaderArrayOutput
}

type GetDomainsDomainListRequestHeaderArray []GetDomainsDomainListRequestHeaderInput

func (GetDomainsDomainListRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListRequestHeader)(nil)).Elem()
}

func (i GetDomainsDomainListRequestHeaderArray) ToGetDomainsDomainListRequestHeaderArrayOutput() GetDomainsDomainListRequestHeaderArrayOutput {
	return i.ToGetDomainsDomainListRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainListRequestHeaderArray) ToGetDomainsDomainListRequestHeaderArrayOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListRequestHeaderArrayOutput)
}

type GetDomainsDomainListRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListRequestHeader)(nil)).Elem()
}

func (o GetDomainsDomainListRequestHeaderOutput) ToGetDomainsDomainListRequestHeaderOutput() GetDomainsDomainListRequestHeaderOutput {
	return o
}

func (o GetDomainsDomainListRequestHeaderOutput) ToGetDomainsDomainListRequestHeaderOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderOutput {
	return o
}

// Custom request header configuration rules.
func (o GetDomainsDomainListRequestHeaderOutput) HeaderRules() GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeader) []GetDomainsDomainListRequestHeaderHeaderRule {
		return v.HeaderRules
	}).(GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput)
}

// Cache configuration switch.
func (o GetDomainsDomainListRequestHeaderOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeader) string { return v.Switch }).(pulumi.StringOutput)
}

type GetDomainsDomainListRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListRequestHeader)(nil)).Elem()
}

func (o GetDomainsDomainListRequestHeaderArrayOutput) ToGetDomainsDomainListRequestHeaderArrayOutput() GetDomainsDomainListRequestHeaderArrayOutput {
	return o
}

func (o GetDomainsDomainListRequestHeaderArrayOutput) ToGetDomainsDomainListRequestHeaderArrayOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderArrayOutput {
	return o
}

func (o GetDomainsDomainListRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainListRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainListRequestHeader {
		return vs[0].([]GetDomainsDomainListRequestHeader)[vs[1].(int)]
	}).(GetDomainsDomainListRequestHeaderOutput)
}

type GetDomainsDomainListRequestHeaderHeaderRule struct {
	// Http header setting method.
	HeaderMode string `pulumi:"headerMode"`
	// Http header name.
	HeaderName string `pulumi:"headerName"`
	// Http header value.
	HeaderValue string `pulumi:"headerValue"`
	// Rule paths.
	RulePaths []string `pulumi:"rulePaths"`
	// Rule type.
	RuleType string `pulumi:"ruleType"`
}

// GetDomainsDomainListRequestHeaderHeaderRuleInput is an input type that accepts GetDomainsDomainListRequestHeaderHeaderRuleArgs and GetDomainsDomainListRequestHeaderHeaderRuleOutput values.
// You can construct a concrete instance of `GetDomainsDomainListRequestHeaderHeaderRuleInput` via:
//
//	GetDomainsDomainListRequestHeaderHeaderRuleArgs{...}
type GetDomainsDomainListRequestHeaderHeaderRuleInput interface {
	pulumi.Input

	ToGetDomainsDomainListRequestHeaderHeaderRuleOutput() GetDomainsDomainListRequestHeaderHeaderRuleOutput
	ToGetDomainsDomainListRequestHeaderHeaderRuleOutputWithContext(context.Context) GetDomainsDomainListRequestHeaderHeaderRuleOutput
}

type GetDomainsDomainListRequestHeaderHeaderRuleArgs struct {
	// Http header setting method.
	HeaderMode pulumi.StringInput `pulumi:"headerMode"`
	// Http header name.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Http header value.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
	// Rule paths.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetDomainsDomainListRequestHeaderHeaderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListRequestHeaderHeaderRule)(nil)).Elem()
}

func (i GetDomainsDomainListRequestHeaderHeaderRuleArgs) ToGetDomainsDomainListRequestHeaderHeaderRuleOutput() GetDomainsDomainListRequestHeaderHeaderRuleOutput {
	return i.ToGetDomainsDomainListRequestHeaderHeaderRuleOutputWithContext(context.Background())
}

func (i GetDomainsDomainListRequestHeaderHeaderRuleArgs) ToGetDomainsDomainListRequestHeaderHeaderRuleOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderHeaderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListRequestHeaderHeaderRuleOutput)
}

// GetDomainsDomainListRequestHeaderHeaderRuleArrayInput is an input type that accepts GetDomainsDomainListRequestHeaderHeaderRuleArray and GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainListRequestHeaderHeaderRuleArrayInput` via:
//
//	GetDomainsDomainListRequestHeaderHeaderRuleArray{ GetDomainsDomainListRequestHeaderHeaderRuleArgs{...} }
type GetDomainsDomainListRequestHeaderHeaderRuleArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutput() GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput
	ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutputWithContext(context.Context) GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput
}

type GetDomainsDomainListRequestHeaderHeaderRuleArray []GetDomainsDomainListRequestHeaderHeaderRuleInput

func (GetDomainsDomainListRequestHeaderHeaderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListRequestHeaderHeaderRule)(nil)).Elem()
}

func (i GetDomainsDomainListRequestHeaderHeaderRuleArray) ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutput() GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput {
	return i.ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainListRequestHeaderHeaderRuleArray) ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput)
}

type GetDomainsDomainListRequestHeaderHeaderRuleOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListRequestHeaderHeaderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListRequestHeaderHeaderRule)(nil)).Elem()
}

func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) ToGetDomainsDomainListRequestHeaderHeaderRuleOutput() GetDomainsDomainListRequestHeaderHeaderRuleOutput {
	return o
}

func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) ToGetDomainsDomainListRequestHeaderHeaderRuleOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderHeaderRuleOutput {
	return o
}

// Http header setting method.
func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) HeaderMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeaderHeaderRule) string { return v.HeaderMode }).(pulumi.StringOutput)
}

// Http header name.
func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeaderHeaderRule) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Http header value.
func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeaderHeaderRule) string { return v.HeaderValue }).(pulumi.StringOutput)
}

// Rule paths.
func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeaderHeaderRule) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Rule type.
func (o GetDomainsDomainListRequestHeaderHeaderRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRequestHeaderHeaderRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListRequestHeaderHeaderRule)(nil)).Elem()
}

func (o GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput) ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutput() GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput {
	return o
}

func (o GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput) ToGetDomainsDomainListRequestHeaderHeaderRuleArrayOutputWithContext(ctx context.Context) GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput {
	return o
}

func (o GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainListRequestHeaderHeaderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainListRequestHeaderHeaderRule {
		return vs[0].([]GetDomainsDomainListRequestHeaderHeaderRule)[vs[1].(int)]
	}).(GetDomainsDomainListRequestHeaderHeaderRuleOutput)
}

type GetDomainsDomainListRuleCach struct {
	// Cache expiration time setting, the unit is second.
	CacheTime int `pulumi:"cacheTime"`
	// Advanced cache expiration configuration.
	CompareMaxAge *string `pulumi:"compareMaxAge"`
	// Follow the source station configuration switch.
	FollowOriginSwitch string `pulumi:"followOriginSwitch"`
	// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules.
	IgnoreCacheControl *string `pulumi:"ignoreCacheControl"`
	// Ignore the Set-Cookie header of the origin site.
	IgnoreSetCookie string `pulumi:"ignoreSetCookie"`
	// Cache configuration switch.
	NoCacheSwitch string `pulumi:"noCacheSwitch"`
	// Always check back to origin.
	ReValidate string `pulumi:"reValidate"`
	// Rule paths.
	RulePaths []string `pulumi:"rulePaths"`
	// Rule type.
	RuleType string `pulumi:"ruleType"`
	// Cache configuration switch.
	Switch string `pulumi:"switch"`
}

// GetDomainsDomainListRuleCachInput is an input type that accepts GetDomainsDomainListRuleCachArgs and GetDomainsDomainListRuleCachOutput values.
// You can construct a concrete instance of `GetDomainsDomainListRuleCachInput` via:
//
//	GetDomainsDomainListRuleCachArgs{...}
type GetDomainsDomainListRuleCachInput interface {
	pulumi.Input

	ToGetDomainsDomainListRuleCachOutput() GetDomainsDomainListRuleCachOutput
	ToGetDomainsDomainListRuleCachOutputWithContext(context.Context) GetDomainsDomainListRuleCachOutput
}

type GetDomainsDomainListRuleCachArgs struct {
	// Cache expiration time setting, the unit is second.
	CacheTime pulumi.IntInput `pulumi:"cacheTime"`
	// Advanced cache expiration configuration.
	CompareMaxAge pulumi.StringPtrInput `pulumi:"compareMaxAge"`
	// Follow the source station configuration switch.
	FollowOriginSwitch pulumi.StringInput `pulumi:"followOriginSwitch"`
	// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules.
	IgnoreCacheControl pulumi.StringPtrInput `pulumi:"ignoreCacheControl"`
	// Ignore the Set-Cookie header of the origin site.
	IgnoreSetCookie pulumi.StringInput `pulumi:"ignoreSetCookie"`
	// Cache configuration switch.
	NoCacheSwitch pulumi.StringInput `pulumi:"noCacheSwitch"`
	// Always check back to origin.
	ReValidate pulumi.StringInput `pulumi:"reValidate"`
	// Rule paths.
	RulePaths pulumi.StringArrayInput `pulumi:"rulePaths"`
	// Rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Cache configuration switch.
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (GetDomainsDomainListRuleCachArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListRuleCach)(nil)).Elem()
}

func (i GetDomainsDomainListRuleCachArgs) ToGetDomainsDomainListRuleCachOutput() GetDomainsDomainListRuleCachOutput {
	return i.ToGetDomainsDomainListRuleCachOutputWithContext(context.Background())
}

func (i GetDomainsDomainListRuleCachArgs) ToGetDomainsDomainListRuleCachOutputWithContext(ctx context.Context) GetDomainsDomainListRuleCachOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListRuleCachOutput)
}

// GetDomainsDomainListRuleCachArrayInput is an input type that accepts GetDomainsDomainListRuleCachArray and GetDomainsDomainListRuleCachArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainListRuleCachArrayInput` via:
//
//	GetDomainsDomainListRuleCachArray{ GetDomainsDomainListRuleCachArgs{...} }
type GetDomainsDomainListRuleCachArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainListRuleCachArrayOutput() GetDomainsDomainListRuleCachArrayOutput
	ToGetDomainsDomainListRuleCachArrayOutputWithContext(context.Context) GetDomainsDomainListRuleCachArrayOutput
}

type GetDomainsDomainListRuleCachArray []GetDomainsDomainListRuleCachInput

func (GetDomainsDomainListRuleCachArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListRuleCach)(nil)).Elem()
}

func (i GetDomainsDomainListRuleCachArray) ToGetDomainsDomainListRuleCachArrayOutput() GetDomainsDomainListRuleCachArrayOutput {
	return i.ToGetDomainsDomainListRuleCachArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainListRuleCachArray) ToGetDomainsDomainListRuleCachArrayOutputWithContext(ctx context.Context) GetDomainsDomainListRuleCachArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainListRuleCachArrayOutput)
}

type GetDomainsDomainListRuleCachOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListRuleCachOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainListRuleCach)(nil)).Elem()
}

func (o GetDomainsDomainListRuleCachOutput) ToGetDomainsDomainListRuleCachOutput() GetDomainsDomainListRuleCachOutput {
	return o
}

func (o GetDomainsDomainListRuleCachOutput) ToGetDomainsDomainListRuleCachOutputWithContext(ctx context.Context) GetDomainsDomainListRuleCachOutput {
	return o
}

// Cache expiration time setting, the unit is second.
func (o GetDomainsDomainListRuleCachOutput) CacheTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) int { return v.CacheTime }).(pulumi.IntOutput)
}

// Advanced cache expiration configuration.
func (o GetDomainsDomainListRuleCachOutput) CompareMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) *string { return v.CompareMaxAge }).(pulumi.StringPtrOutput)
}

// Follow the source station configuration switch.
func (o GetDomainsDomainListRuleCachOutput) FollowOriginSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) string { return v.FollowOriginSwitch }).(pulumi.StringOutput)
}

// Force caching. After opening, the no-store and no-cache resources returned by the origin site will also be cached in accordance with the CacheRules rules.
func (o GetDomainsDomainListRuleCachOutput) IgnoreCacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) *string { return v.IgnoreCacheControl }).(pulumi.StringPtrOutput)
}

// Ignore the Set-Cookie header of the origin site.
func (o GetDomainsDomainListRuleCachOutput) IgnoreSetCookie() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) string { return v.IgnoreSetCookie }).(pulumi.StringOutput)
}

// Cache configuration switch.
func (o GetDomainsDomainListRuleCachOutput) NoCacheSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) string { return v.NoCacheSwitch }).(pulumi.StringOutput)
}

// Always check back to origin.
func (o GetDomainsDomainListRuleCachOutput) ReValidate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) string { return v.ReValidate }).(pulumi.StringOutput)
}

// Rule paths.
func (o GetDomainsDomainListRuleCachOutput) RulePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) []string { return v.RulePaths }).(pulumi.StringArrayOutput)
}

// Rule type.
func (o GetDomainsDomainListRuleCachOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) string { return v.RuleType }).(pulumi.StringOutput)
}

// Cache configuration switch.
func (o GetDomainsDomainListRuleCachOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainListRuleCach) string { return v.Switch }).(pulumi.StringOutput)
}

type GetDomainsDomainListRuleCachArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainListRuleCachArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainListRuleCach)(nil)).Elem()
}

func (o GetDomainsDomainListRuleCachArrayOutput) ToGetDomainsDomainListRuleCachArrayOutput() GetDomainsDomainListRuleCachArrayOutput {
	return o
}

func (o GetDomainsDomainListRuleCachArrayOutput) ToGetDomainsDomainListRuleCachArrayOutputWithContext(ctx context.Context) GetDomainsDomainListRuleCachArrayOutput {
	return o
}

func (o GetDomainsDomainListRuleCachArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainListRuleCachOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainListRuleCach {
		return vs[0].([]GetDomainsDomainListRuleCach)[vs[1].(int)]
	}).(GetDomainsDomainListRuleCachOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationInput)(nil)).Elem(), DomainAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationPtrInput)(nil)).Elem(), DomainAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeAInput)(nil)).Elem(), DomainAuthenticationTypeAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeAPtrInput)(nil)).Elem(), DomainAuthenticationTypeAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeBInput)(nil)).Elem(), DomainAuthenticationTypeBArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeBPtrInput)(nil)).Elem(), DomainAuthenticationTypeBArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeCInput)(nil)).Elem(), DomainAuthenticationTypeCArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeCPtrInput)(nil)).Elem(), DomainAuthenticationTypeCArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeDInput)(nil)).Elem(), DomainAuthenticationTypeDArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthenticationTypeDPtrInput)(nil)).Elem(), DomainAuthenticationTypeDArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAwsPrivateAccessInput)(nil)).Elem(), DomainAwsPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAwsPrivateAccessPtrInput)(nil)).Elem(), DomainAwsPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainBandWidthAlertInput)(nil)).Elem(), DomainBandWidthAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainBandWidthAlertPtrInput)(nil)).Elem(), DomainBandWidthAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainBandWidthAlertStatisticItemInput)(nil)).Elem(), DomainBandWidthAlertStatisticItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainBandWidthAlertStatisticItemPtrInput)(nil)).Elem(), DomainBandWidthAlertStatisticItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyInput)(nil)).Elem(), DomainCacheKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyPtrInput)(nil)).Elem(), DomainCacheKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyKeyRuleInput)(nil)).Elem(), DomainCacheKeyKeyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyKeyRuleArrayInput)(nil)).Elem(), DomainCacheKeyKeyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyKeyRuleQueryStringInput)(nil)).Elem(), DomainCacheKeyKeyRuleQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyQueryStringInput)(nil)).Elem(), DomainCacheKeyQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCacheKeyQueryStringPtrInput)(nil)).Elem(), DomainCacheKeyQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCompressionInput)(nil)).Elem(), DomainCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCompressionPtrInput)(nil)).Elem(), DomainCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCompressionCompressionRuleInput)(nil)).Elem(), DomainCompressionCompressionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCompressionCompressionRuleArrayInput)(nil)).Elem(), DomainCompressionCompressionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDownstreamCappingInput)(nil)).Elem(), DomainDownstreamCappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDownstreamCappingPtrInput)(nil)).Elem(), DomainDownstreamCappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDownstreamCappingCappingRuleInput)(nil)).Elem(), DomainDownstreamCappingCappingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDownstreamCappingCappingRuleArrayInput)(nil)).Elem(), DomainDownstreamCappingCappingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPageInput)(nil)).Elem(), DomainErrorPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPagePtrInput)(nil)).Elem(), DomainErrorPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPagePageRuleInput)(nil)).Elem(), DomainErrorPagePageRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPagePageRuleArrayInput)(nil)).Elem(), DomainErrorPagePageRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigInput)(nil)).Elem(), DomainHttpsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigPtrInput)(nil)).Elem(), DomainHttpsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigClientCertificateConfigInput)(nil)).Elem(), DomainHttpsConfigClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigClientCertificateConfigPtrInput)(nil)).Elem(), DomainHttpsConfigClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigForceRedirectInput)(nil)).Elem(), DomainHttpsConfigForceRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigForceRedirectPtrInput)(nil)).Elem(), DomainHttpsConfigForceRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigServerCertificateConfigInput)(nil)).Elem(), DomainHttpsConfigServerCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHttpsConfigServerCertificateConfigPtrInput)(nil)).Elem(), DomainHttpsConfigServerCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHwPrivateAccessInput)(nil)).Elem(), DomainHwPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainHwPrivateAccessPtrInput)(nil)).Elem(), DomainHwPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIpFilterInput)(nil)).Elem(), DomainIpFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIpFilterPtrInput)(nil)).Elem(), DomainIpFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIpFilterFilterRuleInput)(nil)).Elem(), DomainIpFilterFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIpFilterFilterRuleArrayInput)(nil)).Elem(), DomainIpFilterFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIpFreqLimitInput)(nil)).Elem(), DomainIpFreqLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIpFreqLimitPtrInput)(nil)).Elem(), DomainIpFreqLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMaxAgeInput)(nil)).Elem(), DomainMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMaxAgePtrInput)(nil)).Elem(), DomainMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMaxAgeMaxAgeRuleInput)(nil)).Elem(), DomainMaxAgeMaxAgeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMaxAgeMaxAgeRuleArrayInput)(nil)).Elem(), DomainMaxAgeMaxAgeRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOriginInput)(nil)).Elem(), DomainOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOriginPtrInput)(nil)).Elem(), DomainOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOriginPullOptimizationInput)(nil)).Elem(), DomainOriginPullOptimizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOriginPullOptimizationPtrInput)(nil)).Elem(), DomainOriginPullOptimizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOriginPullTimeoutInput)(nil)).Elem(), DomainOriginPullTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOriginPullTimeoutPtrInput)(nil)).Elem(), DomainOriginPullTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOssPrivateAccessInput)(nil)).Elem(), DomainOssPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOssPrivateAccessPtrInput)(nil)).Elem(), DomainOssPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOthersPrivateAccessInput)(nil)).Elem(), DomainOthersPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOthersPrivateAccessPtrInput)(nil)).Elem(), DomainOthersPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainPostMaxSizeInput)(nil)).Elem(), DomainPostMaxSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainPostMaxSizeArrayInput)(nil)).Elem(), DomainPostMaxSizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainQnPrivateAccessInput)(nil)).Elem(), DomainQnPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainQnPrivateAccessPtrInput)(nil)).Elem(), DomainQnPrivateAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRefererInput)(nil)).Elem(), DomainRefererArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRefererPtrInput)(nil)).Elem(), DomainRefererArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRefererRefererRuleInput)(nil)).Elem(), DomainRefererRefererRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRefererRefererRuleArrayInput)(nil)).Elem(), DomainRefererRefererRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRequestHeaderInput)(nil)).Elem(), DomainRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRequestHeaderPtrInput)(nil)).Elem(), DomainRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRequestHeaderHeaderRuleInput)(nil)).Elem(), DomainRequestHeaderHeaderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRequestHeaderHeaderRuleArrayInput)(nil)).Elem(), DomainRequestHeaderHeaderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResponseHeaderInput)(nil)).Elem(), DomainResponseHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResponseHeaderPtrInput)(nil)).Elem(), DomainResponseHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResponseHeaderHeaderRuleInput)(nil)).Elem(), DomainResponseHeaderHeaderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResponseHeaderHeaderRuleArrayInput)(nil)).Elem(), DomainResponseHeaderHeaderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleCachInput)(nil)).Elem(), DomainRuleCachArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleCachArrayInput)(nil)).Elem(), DomainRuleCachArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusCodeCacheInput)(nil)).Elem(), DomainStatusCodeCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusCodeCachePtrInput)(nil)).Elem(), DomainStatusCodeCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusCodeCacheCacheRuleInput)(nil)).Elem(), DomainStatusCodeCacheCacheRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainStatusCodeCacheCacheRuleArrayInput)(nil)).Elem(), DomainStatusCodeCacheCacheRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlPurgePurgeHistoryInput)(nil)).Elem(), UrlPurgePurgeHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlPurgePurgeHistoryArrayInput)(nil)).Elem(), UrlPurgePurgeHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlPushPushHistoryInput)(nil)).Elem(), UrlPushPushHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlPushPushHistoryArrayInput)(nil)).Elem(), UrlPushPushHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListInput)(nil)).Elem(), GetDomainsDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListArrayInput)(nil)).Elem(), GetDomainsDomainListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListHttpsConfigInput)(nil)).Elem(), GetDomainsDomainListHttpsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListHttpsConfigArrayInput)(nil)).Elem(), GetDomainsDomainListHttpsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListOriginInput)(nil)).Elem(), GetDomainsDomainListOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListOriginArrayInput)(nil)).Elem(), GetDomainsDomainListOriginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListRequestHeaderInput)(nil)).Elem(), GetDomainsDomainListRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListRequestHeaderArrayInput)(nil)).Elem(), GetDomainsDomainListRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListRequestHeaderHeaderRuleInput)(nil)).Elem(), GetDomainsDomainListRequestHeaderHeaderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListRequestHeaderHeaderRuleArrayInput)(nil)).Elem(), GetDomainsDomainListRequestHeaderHeaderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListRuleCachInput)(nil)).Elem(), GetDomainsDomainListRuleCachArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainListRuleCachArrayInput)(nil)).Elem(), GetDomainsDomainListRuleCachArray{})
	pulumi.RegisterOutputType(DomainAuthenticationOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeAOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeAPtrOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeBOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeBPtrOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeCOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeCPtrOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeDOutput{})
	pulumi.RegisterOutputType(DomainAuthenticationTypeDPtrOutput{})
	pulumi.RegisterOutputType(DomainAwsPrivateAccessOutput{})
	pulumi.RegisterOutputType(DomainAwsPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(DomainBandWidthAlertOutput{})
	pulumi.RegisterOutputType(DomainBandWidthAlertPtrOutput{})
	pulumi.RegisterOutputType(DomainBandWidthAlertStatisticItemOutput{})
	pulumi.RegisterOutputType(DomainBandWidthAlertStatisticItemPtrOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyPtrOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyKeyRuleOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyKeyRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyKeyRuleQueryStringOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyQueryStringOutput{})
	pulumi.RegisterOutputType(DomainCacheKeyQueryStringPtrOutput{})
	pulumi.RegisterOutputType(DomainCompressionOutput{})
	pulumi.RegisterOutputType(DomainCompressionPtrOutput{})
	pulumi.RegisterOutputType(DomainCompressionCompressionRuleOutput{})
	pulumi.RegisterOutputType(DomainCompressionCompressionRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainDownstreamCappingOutput{})
	pulumi.RegisterOutputType(DomainDownstreamCappingPtrOutput{})
	pulumi.RegisterOutputType(DomainDownstreamCappingCappingRuleOutput{})
	pulumi.RegisterOutputType(DomainDownstreamCappingCappingRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainErrorPageOutput{})
	pulumi.RegisterOutputType(DomainErrorPagePtrOutput{})
	pulumi.RegisterOutputType(DomainErrorPagePageRuleOutput{})
	pulumi.RegisterOutputType(DomainErrorPagePageRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigClientCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigForceRedirectOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigForceRedirectPtrOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigServerCertificateConfigOutput{})
	pulumi.RegisterOutputType(DomainHttpsConfigServerCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainHwPrivateAccessOutput{})
	pulumi.RegisterOutputType(DomainHwPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(DomainIpFilterOutput{})
	pulumi.RegisterOutputType(DomainIpFilterPtrOutput{})
	pulumi.RegisterOutputType(DomainIpFilterFilterRuleOutput{})
	pulumi.RegisterOutputType(DomainIpFilterFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainIpFreqLimitOutput{})
	pulumi.RegisterOutputType(DomainIpFreqLimitPtrOutput{})
	pulumi.RegisterOutputType(DomainMaxAgeOutput{})
	pulumi.RegisterOutputType(DomainMaxAgePtrOutput{})
	pulumi.RegisterOutputType(DomainMaxAgeMaxAgeRuleOutput{})
	pulumi.RegisterOutputType(DomainMaxAgeMaxAgeRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainOriginOutput{})
	pulumi.RegisterOutputType(DomainOriginPtrOutput{})
	pulumi.RegisterOutputType(DomainOriginPullOptimizationOutput{})
	pulumi.RegisterOutputType(DomainOriginPullOptimizationPtrOutput{})
	pulumi.RegisterOutputType(DomainOriginPullTimeoutOutput{})
	pulumi.RegisterOutputType(DomainOriginPullTimeoutPtrOutput{})
	pulumi.RegisterOutputType(DomainOssPrivateAccessOutput{})
	pulumi.RegisterOutputType(DomainOssPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(DomainOthersPrivateAccessOutput{})
	pulumi.RegisterOutputType(DomainOthersPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(DomainPostMaxSizeOutput{})
	pulumi.RegisterOutputType(DomainPostMaxSizeArrayOutput{})
	pulumi.RegisterOutputType(DomainQnPrivateAccessOutput{})
	pulumi.RegisterOutputType(DomainQnPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(DomainRefererOutput{})
	pulumi.RegisterOutputType(DomainRefererPtrOutput{})
	pulumi.RegisterOutputType(DomainRefererRefererRuleOutput{})
	pulumi.RegisterOutputType(DomainRefererRefererRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainRequestHeaderOutput{})
	pulumi.RegisterOutputType(DomainRequestHeaderPtrOutput{})
	pulumi.RegisterOutputType(DomainRequestHeaderHeaderRuleOutput{})
	pulumi.RegisterOutputType(DomainRequestHeaderHeaderRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainResponseHeaderOutput{})
	pulumi.RegisterOutputType(DomainResponseHeaderPtrOutput{})
	pulumi.RegisterOutputType(DomainResponseHeaderHeaderRuleOutput{})
	pulumi.RegisterOutputType(DomainResponseHeaderHeaderRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainRuleCachOutput{})
	pulumi.RegisterOutputType(DomainRuleCachArrayOutput{})
	pulumi.RegisterOutputType(DomainStatusCodeCacheOutput{})
	pulumi.RegisterOutputType(DomainStatusCodeCachePtrOutput{})
	pulumi.RegisterOutputType(DomainStatusCodeCacheCacheRuleOutput{})
	pulumi.RegisterOutputType(DomainStatusCodeCacheCacheRuleArrayOutput{})
	pulumi.RegisterOutputType(UrlPurgePurgeHistoryOutput{})
	pulumi.RegisterOutputType(UrlPurgePurgeHistoryArrayOutput{})
	pulumi.RegisterOutputType(UrlPushPushHistoryOutput{})
	pulumi.RegisterOutputType(UrlPushPushHistoryArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListHttpsConfigOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListHttpsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListOriginOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListOriginArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListRequestHeaderHeaderRuleOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListRequestHeaderHeaderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListRuleCachOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainListRuleCachArrayOutput{})
}
