// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query the detail information of CDN domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cdn.GetDomains(ctx, &cdn.GetDomainsArgs{
//				Domain:             pulumi.StringRef("xxxx.com"),
//				FullUrlCache:       pulumi.BoolRef(false),
//				HttpsSwitch:        pulumi.StringRef("on"),
//				OriginPullProtocol: pulumi.StringRef("follow"),
//				ServiceType:        pulumi.StringRef("web"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomains(ctx *pulumi.Context, args *GetDomainsArgs, opts ...pulumi.InvokeOption) (*GetDomainsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDomainsResult
	err := ctx.Invoke("tencentcloud:Cdn/getDomains:getDomains", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomains.
type GetDomainsArgs struct {
	// Acceleration domain name.
	Domain *string `pulumi:"domain"`
	// Whether to enable full-path cache.
	FullUrlCache *bool `pulumi:"fullUrlCache"`
	// HTTPS configuration. Valid values: `on`, `off` and `processing`.
	HttpsSwitch *string `pulumi:"httpsSwitch"`
	// Origin-pull protocol configuration. Valid values: `http`, `https` and `follow`.
	OriginPullProtocol *string `pulumi:"originPullProtocol"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Service type of acceleration domain name. The available value include `web`, `download` and `media`.
	ServiceType *string `pulumi:"serviceType"`
}

// A collection of values returned by getDomains.
type GetDomainsResult struct {
	// Acceleration domain name.
	Domain *string `pulumi:"domain"`
	// An information list of cdn domain. Each element contains the following attributes:
	DomainLists []GetDomainsDomainList `pulumi:"domainLists"`
	// Whether to enable full-path cache.
	FullUrlCache *bool `pulumi:"fullUrlCache"`
	// HTTPS configuration switch.
	HttpsSwitch *string `pulumi:"httpsSwitch"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Origin-pull protocol configuration.
	OriginPullProtocol *string `pulumi:"originPullProtocol"`
	ResultOutputFile   *string `pulumi:"resultOutputFile"`
	// Service type of acceleration domain name.
	ServiceType *string `pulumi:"serviceType"`
}

func GetDomainsOutput(ctx *pulumi.Context, args GetDomainsOutputArgs, opts ...pulumi.InvokeOption) GetDomainsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainsResult, error) {
			args := v.(GetDomainsArgs)
			r, err := GetDomains(ctx, &args, opts...)
			var s GetDomainsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDomainsResultOutput)
}

// A collection of arguments for invoking getDomains.
type GetDomainsOutputArgs struct {
	// Acceleration domain name.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Whether to enable full-path cache.
	FullUrlCache pulumi.BoolPtrInput `pulumi:"fullUrlCache"`
	// HTTPS configuration. Valid values: `on`, `off` and `processing`.
	HttpsSwitch pulumi.StringPtrInput `pulumi:"httpsSwitch"`
	// Origin-pull protocol configuration. Valid values: `http`, `https` and `follow`.
	OriginPullProtocol pulumi.StringPtrInput `pulumi:"originPullProtocol"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Service type of acceleration domain name. The available value include `web`, `download` and `media`.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (GetDomainsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsArgs)(nil)).Elem()
}

// A collection of values returned by getDomains.
type GetDomainsResultOutput struct{ *pulumi.OutputState }

func (GetDomainsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsResult)(nil)).Elem()
}

func (o GetDomainsResultOutput) ToGetDomainsResultOutput() GetDomainsResultOutput {
	return o
}

func (o GetDomainsResultOutput) ToGetDomainsResultOutputWithContext(ctx context.Context) GetDomainsResultOutput {
	return o
}

// Acceleration domain name.
func (o GetDomainsResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// An information list of cdn domain. Each element contains the following attributes:
func (o GetDomainsResultOutput) DomainLists() GetDomainsDomainListArrayOutput {
	return o.ApplyT(func(v GetDomainsResult) []GetDomainsDomainList { return v.DomainLists }).(GetDomainsDomainListArrayOutput)
}

// Whether to enable full-path cache.
func (o GetDomainsResultOutput) FullUrlCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *bool { return v.FullUrlCache }).(pulumi.BoolPtrOutput)
}

// HTTPS configuration switch.
func (o GetDomainsResultOutput) HttpsSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.HttpsSwitch }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Origin-pull protocol configuration.
func (o GetDomainsResultOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.OriginPullProtocol }).(pulumi.StringPtrOutput)
}

func (o GetDomainsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Service type of acceleration domain name.
func (o GetDomainsResultOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainsResultOutput{})
}
