// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a CDN domain.
//
// > **NOTE:** To disable most of configuration with switch, just modify switch argument to off instead of remove the whole block
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cdn.NewDomain(ctx, "foo", &Cdn.DomainArgs{
//				Area:         pulumi.String("mainland"),
//				Domain:       pulumi.String("xxxx.com"),
//				FullUrlCache: pulumi.Bool(false),
//				HttpsConfig: &cdn.DomainHttpsConfigArgs{
//					ForceRedirect: &cdn.DomainHttpsConfigForceRedirectArgs{
//						RedirectStatusCode: pulumi.Int(302),
//						RedirectType:       pulumi.String("http"),
//						Switch:             pulumi.String("on"),
//					},
//					Http2Switch:        pulumi.String("off"),
//					HttpsSwitch:        pulumi.String("off"),
//					OcspStaplingSwitch: pulumi.String("off"),
//					SpdySwitch:         pulumi.String("off"),
//					VerifyClient:       pulumi.String("off"),
//				},
//				Origin: &cdn.DomainOriginArgs{
//					OriginLists: pulumi.StringArray{
//						pulumi.String("127.0.0.1"),
//					},
//					OriginPullProtocol: pulumi.String("follow"),
//					OriginType:         pulumi.String("ip"),
//				},
//				ServiceType: pulumi.String("web"),
//				Tags: pulumi.AnyMap{
//					"hello": pulumi.Any("world"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example Usage of cdn uses cache and request headers
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cdn.NewDomain(ctx, "foo", &Cdn.DomainArgs{
//				Area: pulumi.String("mainland"),
//				CacheKey: &cdn.DomainCacheKeyArgs{
//					FullUrlCache: pulumi.String("on"),
//				},
//				Domain: pulumi.String("xxxx.com"),
//				HttpsConfig: &cdn.DomainHttpsConfigArgs{
//					ForceRedirect: &cdn.DomainHttpsConfigForceRedirectArgs{
//						RedirectStatusCode: pulumi.Int(302),
//						RedirectType:       pulumi.String("http"),
//						Switch:             pulumi.String("on"),
//					},
//					Http2Switch:        pulumi.String("off"),
//					HttpsSwitch:        pulumi.String("off"),
//					OcspStaplingSwitch: pulumi.String("off"),
//					SpdySwitch:         pulumi.String("off"),
//					VerifyClient:       pulumi.String("off"),
//				},
//				Origin: &cdn.DomainOriginArgs{
//					OriginLists: pulumi.StringArray{
//						pulumi.String("127.0.0.1"),
//					},
//					OriginPullProtocol: pulumi.String("follow"),
//					OriginType:         pulumi.String("ip"),
//				},
//				RangeOriginSwitch: pulumi.String("off"),
//				RequestHeader: &cdn.DomainRequestHeaderArgs{
//					HeaderRules: cdn.DomainRequestHeaderHeaderRuleArray{
//						&cdn.DomainRequestHeaderHeaderRuleArgs{
//							HeaderMode:  pulumi.String("add"),
//							HeaderName:  pulumi.String("tf-header-name"),
//							HeaderValue: pulumi.String("tf-header-value"),
//							RulePaths: pulumi.StringArray{
//								pulumi.String("*"),
//							},
//							RuleType: pulumi.String("all"),
//						},
//					},
//					Switch: pulumi.String("on"),
//				},
//				RuleCaches: cdn.DomainRuleCachArray{
//					&cdn.DomainRuleCachArgs{
//						CacheTime:     pulumi.Int(10000),
//						NoCacheSwitch: pulumi.String("on"),
//						ReValidate:    pulumi.String("on"),
//					},
//				},
//				ServiceType: pulumi.String("web"),
//				Tags: pulumi.AnyMap{
//					"hello": pulumi.Any("world"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example Usage of COS bucket url as origin
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cdn"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			bucket, err := Cos.NewBucket(ctx, "bucket", &Cos.BucketArgs{
//				Bucket: pulumi.String("demo-bucket-1251234567"),
//				Acl:    pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Cdn.NewDomain(ctx, "cdn", &Cdn.DomainArgs{
//				Domain:      pulumi.String("abc.com"),
//				ServiceType: pulumi.String("web"),
//				Area:        pulumi.String("mainland"),
//				CacheKey: &cdn.DomainCacheKeyArgs{
//					FullUrlCache: pulumi.String("off"),
//				},
//				Origin: &cdn.DomainOriginArgs{
//					OriginType: pulumi.String("cos"),
//					OriginLists: pulumi.StringArray{
//						bucket.CosBucketUrl,
//					},
//					ServerName:         bucket.CosBucketUrl,
//					OriginPullProtocol: pulumi.String("follow"),
//					CosPrivateAccess:   pulumi.String("on"),
//				},
//				HttpsConfig: &cdn.DomainHttpsConfigArgs{
//					HttpsSwitch:        pulumi.String("off"),
//					Http2Switch:        pulumi.String("off"),
//					OcspStaplingSwitch: pulumi.String("off"),
//					SpdySwitch:         pulumi.String("off"),
//					VerifyClient:       pulumi.String("off"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CDN domain can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cdn/domain:Domain foo xxxx.com
//
// ```
type Domain struct {
	pulumi.CustomResourceState

	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
	Area pulumi.StringPtrOutput `pulumi:"area"`
	// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
	Authentication DomainAuthenticationPtrOutput `pulumi:"authentication"`
	// Access authentication for S3 origin.
	AwsPrivateAccess DomainAwsPrivateAccessPtrOutput `pulumi:"awsPrivateAccess"`
	// Bandwidth cap configuration.
	BandWidthAlert DomainBandWidthAlertPtrOutput `pulumi:"bandWidthAlert"`
	// Cache key configuration (Ignore Query String configuration). NOTE: All of `fullUrlCache` default value is `on`.
	CacheKey DomainCacheKeyPtrOutput `pulumi:"cacheKey"`
	// CNAME address of domain name.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// Smart compression configurations.
	Compression DomainCompressionPtrOutput `pulumi:"compression"`
	// Creation time of domain name.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Name of the acceleration domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Downstream capping configuration.
	DownstreamCapping DomainDownstreamCappingPtrOutput `pulumi:"downstreamCapping"`
	// Used for store `dryRun` request json.
	DryRunCreateResult pulumi.StringOutput `pulumi:"dryRunCreateResult"`
	// Used for store `dryRun` update request json.
	DryRunUpdateResult pulumi.StringOutput `pulumi:"dryRunUpdateResult"`
	// Error page configurations.
	ErrorPage DomainErrorPagePtrOutput `pulumi:"errorPage"`
	// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
	ExplicitUsingDryRun pulumi.BoolPtrOutput `pulumi:"explicitUsingDryRun"`
	// 301/302 redirect following switch, available values: `on`, `off` (default).
	FollowRedirectSwitch pulumi.StringPtrOutput `pulumi:"followRedirectSwitch"`
	// Use `cacheKey` > `fullUrlCache` instead. Whether to enable full-path cache. Default value is `true`.
	//
	// Deprecated: Use `cache_key` -> `full_url_cache` instead.
	FullUrlCache pulumi.BoolPtrOutput `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig DomainHttpsConfigOutput `pulumi:"httpsConfig"`
	// Access authentication for OBS origin.
	HwPrivateAccess DomainHwPrivateAccessPtrOutput `pulumi:"hwPrivateAccess"`
	// Specify Ip filter configurations.
	IpFilter DomainIpFilterPtrOutput `pulumi:"ipFilter"`
	// Specify Ip frequency limit configurations.
	IpFreqLimit DomainIpFreqLimitPtrOutput `pulumi:"ipFreqLimit"`
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
	Ipv6AccessSwitch pulumi.StringPtrOutput `pulumi:"ipv6AccessSwitch"`
	// Browser cache configuration. (This feature is in beta and not generally available yet).
	MaxAge DomainMaxAgePtrOutput `pulumi:"maxAge"`
	// Offline cache switch, available values: `on`, `off` (default).
	OfflineCacheSwitch pulumi.StringPtrOutput `pulumi:"offlineCacheSwitch"`
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOriginOutput `pulumi:"origin"`
	// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
	OriginPullOptimization DomainOriginPullOptimizationPtrOutput `pulumi:"originPullOptimization"`
	// Cross-border linkage optimization configuration.
	OriginPullTimeout DomainOriginPullTimeoutPtrOutput `pulumi:"originPullTimeout"`
	// Access authentication for OSS origin.
	OssPrivateAccess DomainOssPrivateAccessPtrOutput `pulumi:"ossPrivateAccess"`
	// Maximum post size configuration.
	PostMaxSizes DomainPostMaxSizeArrayOutput `pulumi:"postMaxSizes"`
	// The project CDN belongs to, default to 0.
	ProjectId pulumi.IntPtrOutput `pulumi:"projectId"`
	// Access authentication for OBS origin.
	QnPrivateAccess DomainQnPrivateAccessPtrOutput `pulumi:"qnPrivateAccess"`
	// QUIC switch, available values: `on`, `off` (default).
	QuicSwitch pulumi.StringPtrOutput `pulumi:"quicSwitch"`
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch pulumi.StringPtrOutput `pulumi:"rangeOriginSwitch"`
	// Referer configuration.
	Referer DomainRefererPtrOutput `pulumi:"referer"`
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader DomainRequestHeaderOutput `pulumi:"requestHeader"`
	// Response header configurations.
	ResponseHeader DomainResponseHeaderPtrOutput `pulumi:"responseHeader"`
	// Response header cache switch, available values: `on`, `off` (default).
	ResponseHeaderCacheSwitch pulumi.StringPtrOutput `pulumi:"responseHeaderCacheSwitch"`
	// Advanced path cache configuration.
	RuleCaches DomainRuleCachArrayOutput `pulumi:"ruleCaches"`
	// SEO switch, available values: `on`, `off` (default).
	SeoSwitch pulumi.StringPtrOutput `pulumi:"seoSwitch"`
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration, `hybrid`: hybrid acceleration, `dynamic`: dynamic acceleration.
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
	SpecificConfigMainland pulumi.StringPtrOutput `pulumi:"specificConfigMainland"`
	// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
	SpecificConfigOverseas pulumi.StringPtrOutput `pulumi:"specificConfigOverseas"`
	// Acceleration service status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Status code cache configurations.
	StatusCodeCache DomainStatusCodeCachePtrOutput `pulumi:"statusCodeCache"`
	// Tags of cdn domain.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// Video seek switch, available values: `on`, `off` (default).
	VideoSeekSwitch pulumi.StringPtrOutput `pulumi:"videoSeekSwitch"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Origin == nil {
		return nil, errors.New("invalid value for required argument 'Origin'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("tencentcloud:Cdn/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("tencentcloud:Cdn/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
	Area *string `pulumi:"area"`
	// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
	Authentication *DomainAuthentication `pulumi:"authentication"`
	// Access authentication for S3 origin.
	AwsPrivateAccess *DomainAwsPrivateAccess `pulumi:"awsPrivateAccess"`
	// Bandwidth cap configuration.
	BandWidthAlert *DomainBandWidthAlert `pulumi:"bandWidthAlert"`
	// Cache key configuration (Ignore Query String configuration). NOTE: All of `fullUrlCache` default value is `on`.
	CacheKey *DomainCacheKey `pulumi:"cacheKey"`
	// CNAME address of domain name.
	Cname *string `pulumi:"cname"`
	// Smart compression configurations.
	Compression *DomainCompression `pulumi:"compression"`
	// Creation time of domain name.
	CreateTime *string `pulumi:"createTime"`
	// Name of the acceleration domain.
	Domain *string `pulumi:"domain"`
	// Downstream capping configuration.
	DownstreamCapping *DomainDownstreamCapping `pulumi:"downstreamCapping"`
	// Used for store `dryRun` request json.
	DryRunCreateResult *string `pulumi:"dryRunCreateResult"`
	// Used for store `dryRun` update request json.
	DryRunUpdateResult *string `pulumi:"dryRunUpdateResult"`
	// Error page configurations.
	ErrorPage *DomainErrorPage `pulumi:"errorPage"`
	// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
	ExplicitUsingDryRun *bool `pulumi:"explicitUsingDryRun"`
	// 301/302 redirect following switch, available values: `on`, `off` (default).
	FollowRedirectSwitch *string `pulumi:"followRedirectSwitch"`
	// Use `cacheKey` > `fullUrlCache` instead. Whether to enable full-path cache. Default value is `true`.
	//
	// Deprecated: Use `cache_key` -> `full_url_cache` instead.
	FullUrlCache *bool `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig *DomainHttpsConfig `pulumi:"httpsConfig"`
	// Access authentication for OBS origin.
	HwPrivateAccess *DomainHwPrivateAccess `pulumi:"hwPrivateAccess"`
	// Specify Ip filter configurations.
	IpFilter *DomainIpFilter `pulumi:"ipFilter"`
	// Specify Ip frequency limit configurations.
	IpFreqLimit *DomainIpFreqLimit `pulumi:"ipFreqLimit"`
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
	Ipv6AccessSwitch *string `pulumi:"ipv6AccessSwitch"`
	// Browser cache configuration. (This feature is in beta and not generally available yet).
	MaxAge *DomainMaxAge `pulumi:"maxAge"`
	// Offline cache switch, available values: `on`, `off` (default).
	OfflineCacheSwitch *string `pulumi:"offlineCacheSwitch"`
	// Origin server configuration. It's a list and consist of at most one item.
	Origin *DomainOrigin `pulumi:"origin"`
	// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
	OriginPullOptimization *DomainOriginPullOptimization `pulumi:"originPullOptimization"`
	// Cross-border linkage optimization configuration.
	OriginPullTimeout *DomainOriginPullTimeout `pulumi:"originPullTimeout"`
	// Access authentication for OSS origin.
	OssPrivateAccess *DomainOssPrivateAccess `pulumi:"ossPrivateAccess"`
	// Maximum post size configuration.
	PostMaxSizes []DomainPostMaxSize `pulumi:"postMaxSizes"`
	// The project CDN belongs to, default to 0.
	ProjectId *int `pulumi:"projectId"`
	// Access authentication for OBS origin.
	QnPrivateAccess *DomainQnPrivateAccess `pulumi:"qnPrivateAccess"`
	// QUIC switch, available values: `on`, `off` (default).
	QuicSwitch *string `pulumi:"quicSwitch"`
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch *string `pulumi:"rangeOriginSwitch"`
	// Referer configuration.
	Referer *DomainReferer `pulumi:"referer"`
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader *DomainRequestHeader `pulumi:"requestHeader"`
	// Response header configurations.
	ResponseHeader *DomainResponseHeader `pulumi:"responseHeader"`
	// Response header cache switch, available values: `on`, `off` (default).
	ResponseHeaderCacheSwitch *string `pulumi:"responseHeaderCacheSwitch"`
	// Advanced path cache configuration.
	RuleCaches []DomainRuleCach `pulumi:"ruleCaches"`
	// SEO switch, available values: `on`, `off` (default).
	SeoSwitch *string `pulumi:"seoSwitch"`
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration, `hybrid`: hybrid acceleration, `dynamic`: dynamic acceleration.
	ServiceType *string `pulumi:"serviceType"`
	// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
	SpecificConfigMainland *string `pulumi:"specificConfigMainland"`
	// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
	SpecificConfigOverseas *string `pulumi:"specificConfigOverseas"`
	// Acceleration service status.
	Status *string `pulumi:"status"`
	// Status code cache configurations.
	StatusCodeCache *DomainStatusCodeCache `pulumi:"statusCodeCache"`
	// Tags of cdn domain.
	Tags map[string]interface{} `pulumi:"tags"`
	// Video seek switch, available values: `on`, `off` (default).
	VideoSeekSwitch *string `pulumi:"videoSeekSwitch"`
}

type DomainState struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
	Area pulumi.StringPtrInput
	// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
	Authentication DomainAuthenticationPtrInput
	// Access authentication for S3 origin.
	AwsPrivateAccess DomainAwsPrivateAccessPtrInput
	// Bandwidth cap configuration.
	BandWidthAlert DomainBandWidthAlertPtrInput
	// Cache key configuration (Ignore Query String configuration). NOTE: All of `fullUrlCache` default value is `on`.
	CacheKey DomainCacheKeyPtrInput
	// CNAME address of domain name.
	Cname pulumi.StringPtrInput
	// Smart compression configurations.
	Compression DomainCompressionPtrInput
	// Creation time of domain name.
	CreateTime pulumi.StringPtrInput
	// Name of the acceleration domain.
	Domain pulumi.StringPtrInput
	// Downstream capping configuration.
	DownstreamCapping DomainDownstreamCappingPtrInput
	// Used for store `dryRun` request json.
	DryRunCreateResult pulumi.StringPtrInput
	// Used for store `dryRun` update request json.
	DryRunUpdateResult pulumi.StringPtrInput
	// Error page configurations.
	ErrorPage DomainErrorPagePtrInput
	// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
	ExplicitUsingDryRun pulumi.BoolPtrInput
	// 301/302 redirect following switch, available values: `on`, `off` (default).
	FollowRedirectSwitch pulumi.StringPtrInput
	// Use `cacheKey` > `fullUrlCache` instead. Whether to enable full-path cache. Default value is `true`.
	//
	// Deprecated: Use `cache_key` -> `full_url_cache` instead.
	FullUrlCache pulumi.BoolPtrInput
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig DomainHttpsConfigPtrInput
	// Access authentication for OBS origin.
	HwPrivateAccess DomainHwPrivateAccessPtrInput
	// Specify Ip filter configurations.
	IpFilter DomainIpFilterPtrInput
	// Specify Ip frequency limit configurations.
	IpFreqLimit DomainIpFreqLimitPtrInput
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
	Ipv6AccessSwitch pulumi.StringPtrInput
	// Browser cache configuration. (This feature is in beta and not generally available yet).
	MaxAge DomainMaxAgePtrInput
	// Offline cache switch, available values: `on`, `off` (default).
	OfflineCacheSwitch pulumi.StringPtrInput
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOriginPtrInput
	// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
	OriginPullOptimization DomainOriginPullOptimizationPtrInput
	// Cross-border linkage optimization configuration.
	OriginPullTimeout DomainOriginPullTimeoutPtrInput
	// Access authentication for OSS origin.
	OssPrivateAccess DomainOssPrivateAccessPtrInput
	// Maximum post size configuration.
	PostMaxSizes DomainPostMaxSizeArrayInput
	// The project CDN belongs to, default to 0.
	ProjectId pulumi.IntPtrInput
	// Access authentication for OBS origin.
	QnPrivateAccess DomainQnPrivateAccessPtrInput
	// QUIC switch, available values: `on`, `off` (default).
	QuicSwitch pulumi.StringPtrInput
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch pulumi.StringPtrInput
	// Referer configuration.
	Referer DomainRefererPtrInput
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader DomainRequestHeaderPtrInput
	// Response header configurations.
	ResponseHeader DomainResponseHeaderPtrInput
	// Response header cache switch, available values: `on`, `off` (default).
	ResponseHeaderCacheSwitch pulumi.StringPtrInput
	// Advanced path cache configuration.
	RuleCaches DomainRuleCachArrayInput
	// SEO switch, available values: `on`, `off` (default).
	SeoSwitch pulumi.StringPtrInput
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration, `hybrid`: hybrid acceleration, `dynamic`: dynamic acceleration.
	ServiceType pulumi.StringPtrInput
	// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
	SpecificConfigMainland pulumi.StringPtrInput
	// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
	SpecificConfigOverseas pulumi.StringPtrInput
	// Acceleration service status.
	Status pulumi.StringPtrInput
	// Status code cache configurations.
	StatusCodeCache DomainStatusCodeCachePtrInput
	// Tags of cdn domain.
	Tags pulumi.MapInput
	// Video seek switch, available values: `on`, `off` (default).
	VideoSeekSwitch pulumi.StringPtrInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
	Area *string `pulumi:"area"`
	// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
	Authentication *DomainAuthentication `pulumi:"authentication"`
	// Access authentication for S3 origin.
	AwsPrivateAccess *DomainAwsPrivateAccess `pulumi:"awsPrivateAccess"`
	// Bandwidth cap configuration.
	BandWidthAlert *DomainBandWidthAlert `pulumi:"bandWidthAlert"`
	// Cache key configuration (Ignore Query String configuration). NOTE: All of `fullUrlCache` default value is `on`.
	CacheKey *DomainCacheKey `pulumi:"cacheKey"`
	// Smart compression configurations.
	Compression *DomainCompression `pulumi:"compression"`
	// Name of the acceleration domain.
	Domain string `pulumi:"domain"`
	// Downstream capping configuration.
	DownstreamCapping *DomainDownstreamCapping `pulumi:"downstreamCapping"`
	// Error page configurations.
	ErrorPage *DomainErrorPage `pulumi:"errorPage"`
	// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
	ExplicitUsingDryRun *bool `pulumi:"explicitUsingDryRun"`
	// 301/302 redirect following switch, available values: `on`, `off` (default).
	FollowRedirectSwitch *string `pulumi:"followRedirectSwitch"`
	// Use `cacheKey` > `fullUrlCache` instead. Whether to enable full-path cache. Default value is `true`.
	//
	// Deprecated: Use `cache_key` -> `full_url_cache` instead.
	FullUrlCache *bool `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig *DomainHttpsConfig `pulumi:"httpsConfig"`
	// Access authentication for OBS origin.
	HwPrivateAccess *DomainHwPrivateAccess `pulumi:"hwPrivateAccess"`
	// Specify Ip filter configurations.
	IpFilter *DomainIpFilter `pulumi:"ipFilter"`
	// Specify Ip frequency limit configurations.
	IpFreqLimit *DomainIpFreqLimit `pulumi:"ipFreqLimit"`
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
	Ipv6AccessSwitch *string `pulumi:"ipv6AccessSwitch"`
	// Browser cache configuration. (This feature is in beta and not generally available yet).
	MaxAge *DomainMaxAge `pulumi:"maxAge"`
	// Offline cache switch, available values: `on`, `off` (default).
	OfflineCacheSwitch *string `pulumi:"offlineCacheSwitch"`
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOrigin `pulumi:"origin"`
	// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
	OriginPullOptimization *DomainOriginPullOptimization `pulumi:"originPullOptimization"`
	// Cross-border linkage optimization configuration.
	OriginPullTimeout *DomainOriginPullTimeout `pulumi:"originPullTimeout"`
	// Access authentication for OSS origin.
	OssPrivateAccess *DomainOssPrivateAccess `pulumi:"ossPrivateAccess"`
	// Maximum post size configuration.
	PostMaxSizes []DomainPostMaxSize `pulumi:"postMaxSizes"`
	// The project CDN belongs to, default to 0.
	ProjectId *int `pulumi:"projectId"`
	// Access authentication for OBS origin.
	QnPrivateAccess *DomainQnPrivateAccess `pulumi:"qnPrivateAccess"`
	// QUIC switch, available values: `on`, `off` (default).
	QuicSwitch *string `pulumi:"quicSwitch"`
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch *string `pulumi:"rangeOriginSwitch"`
	// Referer configuration.
	Referer *DomainReferer `pulumi:"referer"`
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader *DomainRequestHeader `pulumi:"requestHeader"`
	// Response header configurations.
	ResponseHeader *DomainResponseHeader `pulumi:"responseHeader"`
	// Response header cache switch, available values: `on`, `off` (default).
	ResponseHeaderCacheSwitch *string `pulumi:"responseHeaderCacheSwitch"`
	// Advanced path cache configuration.
	RuleCaches []DomainRuleCach `pulumi:"ruleCaches"`
	// SEO switch, available values: `on`, `off` (default).
	SeoSwitch *string `pulumi:"seoSwitch"`
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration, `hybrid`: hybrid acceleration, `dynamic`: dynamic acceleration.
	ServiceType string `pulumi:"serviceType"`
	// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
	SpecificConfigMainland *string `pulumi:"specificConfigMainland"`
	// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
	SpecificConfigOverseas *string `pulumi:"specificConfigOverseas"`
	// Status code cache configurations.
	StatusCodeCache *DomainStatusCodeCache `pulumi:"statusCodeCache"`
	// Tags of cdn domain.
	Tags map[string]interface{} `pulumi:"tags"`
	// Video seek switch, available values: `on`, `off` (default).
	VideoSeekSwitch *string `pulumi:"videoSeekSwitch"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
	Area pulumi.StringPtrInput
	// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
	Authentication DomainAuthenticationPtrInput
	// Access authentication for S3 origin.
	AwsPrivateAccess DomainAwsPrivateAccessPtrInput
	// Bandwidth cap configuration.
	BandWidthAlert DomainBandWidthAlertPtrInput
	// Cache key configuration (Ignore Query String configuration). NOTE: All of `fullUrlCache` default value is `on`.
	CacheKey DomainCacheKeyPtrInput
	// Smart compression configurations.
	Compression DomainCompressionPtrInput
	// Name of the acceleration domain.
	Domain pulumi.StringInput
	// Downstream capping configuration.
	DownstreamCapping DomainDownstreamCappingPtrInput
	// Error page configurations.
	ErrorPage DomainErrorPagePtrInput
	// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
	ExplicitUsingDryRun pulumi.BoolPtrInput
	// 301/302 redirect following switch, available values: `on`, `off` (default).
	FollowRedirectSwitch pulumi.StringPtrInput
	// Use `cacheKey` > `fullUrlCache` instead. Whether to enable full-path cache. Default value is `true`.
	//
	// Deprecated: Use `cache_key` -> `full_url_cache` instead.
	FullUrlCache pulumi.BoolPtrInput
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig DomainHttpsConfigPtrInput
	// Access authentication for OBS origin.
	HwPrivateAccess DomainHwPrivateAccessPtrInput
	// Specify Ip filter configurations.
	IpFilter DomainIpFilterPtrInput
	// Specify Ip frequency limit configurations.
	IpFreqLimit DomainIpFreqLimitPtrInput
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
	Ipv6AccessSwitch pulumi.StringPtrInput
	// Browser cache configuration. (This feature is in beta and not generally available yet).
	MaxAge DomainMaxAgePtrInput
	// Offline cache switch, available values: `on`, `off` (default).
	OfflineCacheSwitch pulumi.StringPtrInput
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOriginInput
	// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
	OriginPullOptimization DomainOriginPullOptimizationPtrInput
	// Cross-border linkage optimization configuration.
	OriginPullTimeout DomainOriginPullTimeoutPtrInput
	// Access authentication for OSS origin.
	OssPrivateAccess DomainOssPrivateAccessPtrInput
	// Maximum post size configuration.
	PostMaxSizes DomainPostMaxSizeArrayInput
	// The project CDN belongs to, default to 0.
	ProjectId pulumi.IntPtrInput
	// Access authentication for OBS origin.
	QnPrivateAccess DomainQnPrivateAccessPtrInput
	// QUIC switch, available values: `on`, `off` (default).
	QuicSwitch pulumi.StringPtrInput
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch pulumi.StringPtrInput
	// Referer configuration.
	Referer DomainRefererPtrInput
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader DomainRequestHeaderPtrInput
	// Response header configurations.
	ResponseHeader DomainResponseHeaderPtrInput
	// Response header cache switch, available values: `on`, `off` (default).
	ResponseHeaderCacheSwitch pulumi.StringPtrInput
	// Advanced path cache configuration.
	RuleCaches DomainRuleCachArrayInput
	// SEO switch, available values: `on`, `off` (default).
	SeoSwitch pulumi.StringPtrInput
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration, `hybrid`: hybrid acceleration, `dynamic`: dynamic acceleration.
	ServiceType pulumi.StringInput
	// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
	SpecificConfigMainland pulumi.StringPtrInput
	// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
	SpecificConfigOverseas pulumi.StringPtrInput
	// Status code cache configurations.
	StatusCodeCache DomainStatusCodeCachePtrInput
	// Tags of cdn domain.
	Tags pulumi.MapInput
	// Video seek switch, available values: `on`, `off` (default).
	VideoSeekSwitch pulumi.StringPtrInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainInput interface {
	pulumi.Input

	ToDomainOutput() DomainOutput
	ToDomainOutputWithContext(ctx context.Context) DomainOutput
}

func (*Domain) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (i *Domain) ToDomainOutput() DomainOutput {
	return i.ToDomainOutputWithContext(context.Background())
}

func (i *Domain) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOutput)
}

// DomainArrayInput is an input type that accepts DomainArray and DomainArrayOutput values.
// You can construct a concrete instance of `DomainArrayInput` via:
//
//	DomainArray{ DomainArgs{...} }
type DomainArrayInput interface {
	pulumi.Input

	ToDomainArrayOutput() DomainArrayOutput
	ToDomainArrayOutputWithContext(context.Context) DomainArrayOutput
}

type DomainArray []DomainInput

func (DomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (i DomainArray) ToDomainArrayOutput() DomainArrayOutput {
	return i.ToDomainArrayOutputWithContext(context.Background())
}

func (i DomainArray) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainArrayOutput)
}

// DomainMapInput is an input type that accepts DomainMap and DomainMapOutput values.
// You can construct a concrete instance of `DomainMapInput` via:
//
//	DomainMap{ "key": DomainArgs{...} }
type DomainMapInput interface {
	pulumi.Input

	ToDomainMapOutput() DomainMapOutput
	ToDomainMapOutputWithContext(context.Context) DomainMapOutput
}

type DomainMap map[string]DomainInput

func (DomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (i DomainMap) ToDomainMapOutput() DomainMapOutput {
	return i.ToDomainMapOutputWithContext(context.Background())
}

func (i DomainMap) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMapOutput)
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas acceleration and global acceleration.
func (o DomainOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.Area }).(pulumi.StringPtrOutput)
}

// Specify timestamp hotlink protection configuration, NOTE: only one type can choose for the sub elements.
func (o DomainOutput) Authentication() DomainAuthenticationPtrOutput {
	return o.ApplyT(func(v *Domain) DomainAuthenticationPtrOutput { return v.Authentication }).(DomainAuthenticationPtrOutput)
}

// Access authentication for S3 origin.
func (o DomainOutput) AwsPrivateAccess() DomainAwsPrivateAccessPtrOutput {
	return o.ApplyT(func(v *Domain) DomainAwsPrivateAccessPtrOutput { return v.AwsPrivateAccess }).(DomainAwsPrivateAccessPtrOutput)
}

// Bandwidth cap configuration.
func (o DomainOutput) BandWidthAlert() DomainBandWidthAlertPtrOutput {
	return o.ApplyT(func(v *Domain) DomainBandWidthAlertPtrOutput { return v.BandWidthAlert }).(DomainBandWidthAlertPtrOutput)
}

// Cache key configuration (Ignore Query String configuration). NOTE: All of `fullUrlCache` default value is `on`.
func (o DomainOutput) CacheKey() DomainCacheKeyPtrOutput {
	return o.ApplyT(func(v *Domain) DomainCacheKeyPtrOutput { return v.CacheKey }).(DomainCacheKeyPtrOutput)
}

// CNAME address of domain name.
func (o DomainOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

// Smart compression configurations.
func (o DomainOutput) Compression() DomainCompressionPtrOutput {
	return o.ApplyT(func(v *Domain) DomainCompressionPtrOutput { return v.Compression }).(DomainCompressionPtrOutput)
}

// Creation time of domain name.
func (o DomainOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Name of the acceleration domain.
func (o DomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Downstream capping configuration.
func (o DomainOutput) DownstreamCapping() DomainDownstreamCappingPtrOutput {
	return o.ApplyT(func(v *Domain) DomainDownstreamCappingPtrOutput { return v.DownstreamCapping }).(DomainDownstreamCappingPtrOutput)
}

// Used for store `dryRun` request json.
func (o DomainOutput) DryRunCreateResult() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.DryRunCreateResult }).(pulumi.StringOutput)
}

// Used for store `dryRun` update request json.
func (o DomainOutput) DryRunUpdateResult() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.DryRunUpdateResult }).(pulumi.StringOutput)
}

// Error page configurations.
func (o DomainOutput) ErrorPage() DomainErrorPagePtrOutput {
	return o.ApplyT(func(v *Domain) DomainErrorPagePtrOutput { return v.ErrorPage }).(DomainErrorPagePtrOutput)
}

// Used for validate only by store arguments to request json string as expected, WARNING: if set to `true`, NO Cloud Api will be invoked but store as local data, do not use this argument unless you really know what you are doing.
func (o DomainOutput) ExplicitUsingDryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.BoolPtrOutput { return v.ExplicitUsingDryRun }).(pulumi.BoolPtrOutput)
}

// 301/302 redirect following switch, available values: `on`, `off` (default).
func (o DomainOutput) FollowRedirectSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.FollowRedirectSwitch }).(pulumi.StringPtrOutput)
}

// Use `cacheKey` > `fullUrlCache` instead. Whether to enable full-path cache. Default value is `true`.
//
// Deprecated: Use `cache_key` -> `full_url_cache` instead.
func (o DomainOutput) FullUrlCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.BoolPtrOutput { return v.FullUrlCache }).(pulumi.BoolPtrOutput)
}

// HTTPS acceleration configuration. It's a list and consist of at most one item.
func (o DomainOutput) HttpsConfig() DomainHttpsConfigOutput {
	return o.ApplyT(func(v *Domain) DomainHttpsConfigOutput { return v.HttpsConfig }).(DomainHttpsConfigOutput)
}

// Access authentication for OBS origin.
func (o DomainOutput) HwPrivateAccess() DomainHwPrivateAccessPtrOutput {
	return o.ApplyT(func(v *Domain) DomainHwPrivateAccessPtrOutput { return v.HwPrivateAccess }).(DomainHwPrivateAccessPtrOutput)
}

// Specify Ip filter configurations.
func (o DomainOutput) IpFilter() DomainIpFilterPtrOutput {
	return o.ApplyT(func(v *Domain) DomainIpFilterPtrOutput { return v.IpFilter }).(DomainIpFilterPtrOutput)
}

// Specify Ip frequency limit configurations.
func (o DomainOutput) IpFreqLimit() DomainIpFreqLimitPtrOutput {
	return o.ApplyT(func(v *Domain) DomainIpFreqLimitPtrOutput { return v.IpFreqLimit }).(DomainIpFreqLimitPtrOutput)
}

// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default value is `off`.
func (o DomainOutput) Ipv6AccessSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.Ipv6AccessSwitch }).(pulumi.StringPtrOutput)
}

// Browser cache configuration. (This feature is in beta and not generally available yet).
func (o DomainOutput) MaxAge() DomainMaxAgePtrOutput {
	return o.ApplyT(func(v *Domain) DomainMaxAgePtrOutput { return v.MaxAge }).(DomainMaxAgePtrOutput)
}

// Offline cache switch, available values: `on`, `off` (default).
func (o DomainOutput) OfflineCacheSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.OfflineCacheSwitch }).(pulumi.StringPtrOutput)
}

// Origin server configuration. It's a list and consist of at most one item.
func (o DomainOutput) Origin() DomainOriginOutput {
	return o.ApplyT(func(v *Domain) DomainOriginOutput { return v.Origin }).(DomainOriginOutput)
}

// Cross-border linkage optimization configuration. (This feature is in beta and not generally available yet).
func (o DomainOutput) OriginPullOptimization() DomainOriginPullOptimizationPtrOutput {
	return o.ApplyT(func(v *Domain) DomainOriginPullOptimizationPtrOutput { return v.OriginPullOptimization }).(DomainOriginPullOptimizationPtrOutput)
}

// Cross-border linkage optimization configuration.
func (o DomainOutput) OriginPullTimeout() DomainOriginPullTimeoutPtrOutput {
	return o.ApplyT(func(v *Domain) DomainOriginPullTimeoutPtrOutput { return v.OriginPullTimeout }).(DomainOriginPullTimeoutPtrOutput)
}

// Access authentication for OSS origin.
func (o DomainOutput) OssPrivateAccess() DomainOssPrivateAccessPtrOutput {
	return o.ApplyT(func(v *Domain) DomainOssPrivateAccessPtrOutput { return v.OssPrivateAccess }).(DomainOssPrivateAccessPtrOutput)
}

// Maximum post size configuration.
func (o DomainOutput) PostMaxSizes() DomainPostMaxSizeArrayOutput {
	return o.ApplyT(func(v *Domain) DomainPostMaxSizeArrayOutput { return v.PostMaxSizes }).(DomainPostMaxSizeArrayOutput)
}

// The project CDN belongs to, default to 0.
func (o DomainOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.IntPtrOutput { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// Access authentication for OBS origin.
func (o DomainOutput) QnPrivateAccess() DomainQnPrivateAccessPtrOutput {
	return o.ApplyT(func(v *Domain) DomainQnPrivateAccessPtrOutput { return v.QnPrivateAccess }).(DomainQnPrivateAccessPtrOutput)
}

// QUIC switch, available values: `on`, `off` (default).
func (o DomainOutput) QuicSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.QuicSwitch }).(pulumi.StringPtrOutput)
}

// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
func (o DomainOutput) RangeOriginSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.RangeOriginSwitch }).(pulumi.StringPtrOutput)
}

// Referer configuration.
func (o DomainOutput) Referer() DomainRefererPtrOutput {
	return o.ApplyT(func(v *Domain) DomainRefererPtrOutput { return v.Referer }).(DomainRefererPtrOutput)
}

// Request header configuration. It's a list and consist of at most one item.
func (o DomainOutput) RequestHeader() DomainRequestHeaderOutput {
	return o.ApplyT(func(v *Domain) DomainRequestHeaderOutput { return v.RequestHeader }).(DomainRequestHeaderOutput)
}

// Response header configurations.
func (o DomainOutput) ResponseHeader() DomainResponseHeaderPtrOutput {
	return o.ApplyT(func(v *Domain) DomainResponseHeaderPtrOutput { return v.ResponseHeader }).(DomainResponseHeaderPtrOutput)
}

// Response header cache switch, available values: `on`, `off` (default).
func (o DomainOutput) ResponseHeaderCacheSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.ResponseHeaderCacheSwitch }).(pulumi.StringPtrOutput)
}

// Advanced path cache configuration.
func (o DomainOutput) RuleCaches() DomainRuleCachArrayOutput {
	return o.ApplyT(func(v *Domain) DomainRuleCachArrayOutput { return v.RuleCaches }).(DomainRuleCachArrayOutput)
}

// SEO switch, available values: `on`, `off` (default).
func (o DomainOutput) SeoSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.SeoSwitch }).(pulumi.StringPtrOutput)
}

// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming media VOD acceleration, `hybrid`: hybrid acceleration, `dynamic`: dynamic acceleration.
func (o DomainOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

// Specific configuration for mainland, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#MainlandConfig) for more details.
func (o DomainOutput) SpecificConfigMainland() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.SpecificConfigMainland }).(pulumi.StringPtrOutput)
}

// Specific configuration for oversea, NOTE: Both specifying full schema or using it is superfluous, please use cloud api parameters json passthroughs, check the [Data Types](https://www.tencentcloud.com/document/api/228/31739#OverseaConfig) for more details.
func (o DomainOutput) SpecificConfigOverseas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.SpecificConfigOverseas }).(pulumi.StringPtrOutput)
}

// Acceleration service status.
func (o DomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Status code cache configurations.
func (o DomainOutput) StatusCodeCache() DomainStatusCodeCachePtrOutput {
	return o.ApplyT(func(v *Domain) DomainStatusCodeCachePtrOutput { return v.StatusCodeCache }).(DomainStatusCodeCachePtrOutput)
}

// Tags of cdn domain.
func (o DomainOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Domain) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// Video seek switch, available values: `on`, `off` (default).
func (o DomainOutput) VideoSeekSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.VideoSeekSwitch }).(pulumi.StringPtrOutput)
}

type DomainArrayOutput struct{ *pulumi.OutputState }

func (DomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (o DomainArrayOutput) ToDomainArrayOutput() DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) Index(i pulumi.IntInput) DomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].([]*Domain)[vs[1].(int)]
	}).(DomainOutput)
}

type DomainMapOutput struct{ *pulumi.OutputState }

func (DomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (o DomainMapOutput) ToDomainMapOutput() DomainMapOutput {
	return o
}

func (o DomainMapOutput) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return o
}

func (o DomainMapOutput) MapIndex(k pulumi.StringInput) DomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].(map[string]*Domain)[vs[1].(string)]
	}).(DomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainInput)(nil)).Elem(), &Domain{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainArrayInput)(nil)).Elem(), DomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMapInput)(nil)).Elem(), DomainMap{})
	pulumi.RegisterOutputType(DomainOutput{})
	pulumi.RegisterOutputType(DomainArrayOutput{})
	pulumi.RegisterOutputType(DomainMapOutput{})
}
