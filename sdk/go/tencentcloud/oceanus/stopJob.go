// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oceanus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a oceanus stopJob
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Oceanus"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Oceanus"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Oceanus.NewStopJob(ctx, "example", &Oceanus.StopJobArgs{
//				StopJobDescriptions: oceanus.StopJobStopJobDescriptionArray{
//					&oceanus.StopJobStopJobDescriptionArgs{
//						JobId:    pulumi.String("cql-4xwincyn"),
//						StopType: pulumi.Int(1),
//					},
//				},
//				WorkSpaceId: pulumi.String("space-2idq8wbr"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type StopJob struct {
	pulumi.CustomResourceState

	// The description information for batch job stop.
	StopJobDescriptions StopJobStopJobDescriptionArrayOutput `pulumi:"stopJobDescriptions"`
	// Workspace SerialId.
	WorkSpaceId pulumi.StringPtrOutput `pulumi:"workSpaceId"`
}

// NewStopJob registers a new resource with the given unique name, arguments, and options.
func NewStopJob(ctx *pulumi.Context,
	name string, args *StopJobArgs, opts ...pulumi.ResourceOption) (*StopJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StopJobDescriptions == nil {
		return nil, errors.New("invalid value for required argument 'StopJobDescriptions'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource StopJob
	err := ctx.RegisterResource("tencentcloud:Oceanus/stopJob:StopJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStopJob gets an existing StopJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStopJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StopJobState, opts ...pulumi.ResourceOption) (*StopJob, error) {
	var resource StopJob
	err := ctx.ReadResource("tencentcloud:Oceanus/stopJob:StopJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StopJob resources.
type stopJobState struct {
	// The description information for batch job stop.
	StopJobDescriptions []StopJobStopJobDescription `pulumi:"stopJobDescriptions"`
	// Workspace SerialId.
	WorkSpaceId *string `pulumi:"workSpaceId"`
}

type StopJobState struct {
	// The description information for batch job stop.
	StopJobDescriptions StopJobStopJobDescriptionArrayInput
	// Workspace SerialId.
	WorkSpaceId pulumi.StringPtrInput
}

func (StopJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*stopJobState)(nil)).Elem()
}

type stopJobArgs struct {
	// The description information for batch job stop.
	StopJobDescriptions []StopJobStopJobDescription `pulumi:"stopJobDescriptions"`
	// Workspace SerialId.
	WorkSpaceId *string `pulumi:"workSpaceId"`
}

// The set of arguments for constructing a StopJob resource.
type StopJobArgs struct {
	// The description information for batch job stop.
	StopJobDescriptions StopJobStopJobDescriptionArrayInput
	// Workspace SerialId.
	WorkSpaceId pulumi.StringPtrInput
}

func (StopJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stopJobArgs)(nil)).Elem()
}

type StopJobInput interface {
	pulumi.Input

	ToStopJobOutput() StopJobOutput
	ToStopJobOutputWithContext(ctx context.Context) StopJobOutput
}

func (*StopJob) ElementType() reflect.Type {
	return reflect.TypeOf((**StopJob)(nil)).Elem()
}

func (i *StopJob) ToStopJobOutput() StopJobOutput {
	return i.ToStopJobOutputWithContext(context.Background())
}

func (i *StopJob) ToStopJobOutputWithContext(ctx context.Context) StopJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StopJobOutput)
}

// StopJobArrayInput is an input type that accepts StopJobArray and StopJobArrayOutput values.
// You can construct a concrete instance of `StopJobArrayInput` via:
//
//	StopJobArray{ StopJobArgs{...} }
type StopJobArrayInput interface {
	pulumi.Input

	ToStopJobArrayOutput() StopJobArrayOutput
	ToStopJobArrayOutputWithContext(context.Context) StopJobArrayOutput
}

type StopJobArray []StopJobInput

func (StopJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StopJob)(nil)).Elem()
}

func (i StopJobArray) ToStopJobArrayOutput() StopJobArrayOutput {
	return i.ToStopJobArrayOutputWithContext(context.Background())
}

func (i StopJobArray) ToStopJobArrayOutputWithContext(ctx context.Context) StopJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StopJobArrayOutput)
}

// StopJobMapInput is an input type that accepts StopJobMap and StopJobMapOutput values.
// You can construct a concrete instance of `StopJobMapInput` via:
//
//	StopJobMap{ "key": StopJobArgs{...} }
type StopJobMapInput interface {
	pulumi.Input

	ToStopJobMapOutput() StopJobMapOutput
	ToStopJobMapOutputWithContext(context.Context) StopJobMapOutput
}

type StopJobMap map[string]StopJobInput

func (StopJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StopJob)(nil)).Elem()
}

func (i StopJobMap) ToStopJobMapOutput() StopJobMapOutput {
	return i.ToStopJobMapOutputWithContext(context.Background())
}

func (i StopJobMap) ToStopJobMapOutputWithContext(ctx context.Context) StopJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StopJobMapOutput)
}

type StopJobOutput struct{ *pulumi.OutputState }

func (StopJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StopJob)(nil)).Elem()
}

func (o StopJobOutput) ToStopJobOutput() StopJobOutput {
	return o
}

func (o StopJobOutput) ToStopJobOutputWithContext(ctx context.Context) StopJobOutput {
	return o
}

// The description information for batch job stop.
func (o StopJobOutput) StopJobDescriptions() StopJobStopJobDescriptionArrayOutput {
	return o.ApplyT(func(v *StopJob) StopJobStopJobDescriptionArrayOutput { return v.StopJobDescriptions }).(StopJobStopJobDescriptionArrayOutput)
}

// Workspace SerialId.
func (o StopJobOutput) WorkSpaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StopJob) pulumi.StringPtrOutput { return v.WorkSpaceId }).(pulumi.StringPtrOutput)
}

type StopJobArrayOutput struct{ *pulumi.OutputState }

func (StopJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StopJob)(nil)).Elem()
}

func (o StopJobArrayOutput) ToStopJobArrayOutput() StopJobArrayOutput {
	return o
}

func (o StopJobArrayOutput) ToStopJobArrayOutputWithContext(ctx context.Context) StopJobArrayOutput {
	return o
}

func (o StopJobArrayOutput) Index(i pulumi.IntInput) StopJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StopJob {
		return vs[0].([]*StopJob)[vs[1].(int)]
	}).(StopJobOutput)
}

type StopJobMapOutput struct{ *pulumi.OutputState }

func (StopJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StopJob)(nil)).Elem()
}

func (o StopJobMapOutput) ToStopJobMapOutput() StopJobMapOutput {
	return o
}

func (o StopJobMapOutput) ToStopJobMapOutputWithContext(ctx context.Context) StopJobMapOutput {
	return o
}

func (o StopJobMapOutput) MapIndex(k pulumi.StringInput) StopJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StopJob {
		return vs[0].(map[string]*StopJob)[vs[1].(string)]
	}).(StopJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StopJobInput)(nil)).Elem(), &StopJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*StopJobArrayInput)(nil)).Elem(), StopJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StopJobMapInput)(nil)).Elem(), StopJobMap{})
	pulumi.RegisterOutputType(StopJobOutput{})
	pulumi.RegisterOutputType(StopJobArrayOutput{})
	pulumi.RegisterOutputType(StopJobMapOutput{})
}
