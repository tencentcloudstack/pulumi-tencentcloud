// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mysql backupOverview
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetBackupOverview(ctx, &mysql.GetBackupOverviewArgs{
//				Product: "mysql",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBackupOverview(ctx *pulumi.Context, args *GetBackupOverviewArgs, opts ...pulumi.InvokeOption) (*GetBackupOverviewResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetBackupOverviewResult
	err := ctx.Invoke("tencentcloud:Mysql/getBackupOverview:getBackupOverview", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupOverview.
type GetBackupOverviewArgs struct {
	// The type of cloud database product to be queried, currently only supports `mysql`.
	Product string `pulumi:"product"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getBackupOverview.
type GetBackupOverviewResult struct {
	// Archive backup capacity, including data backup and log backup. Note: This field may return null, indicating that no valid value can be obtained.
	BackupArchiveVolume int `pulumi:"backupArchiveVolume"`
	// The total number of user backups in the current region (including data backups and log backups).
	BackupCount int `pulumi:"backupCount"`
	// Standard storage backup capacity, including data backup and log backup. Note: This field may return null, indicating that no valid value can be obtained.
	BackupStandbyVolume int `pulumi:"backupStandbyVolume"`
	// The total backup capacity of the user in the current region.
	BackupVolume int `pulumi:"backupVolume"`
	// The billable capacity of the user&amp;#39;s backup in the current region, that is, the part that exceeds the gifted capacity.
	BillingVolume int `pulumi:"billingVolume"`
	// The free backup capacity obtained by the user in the current region.
	FreeVolume int `pulumi:"freeVolume"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Product string `pulumi:"product"`
	// The total capacity of off-site backup of the user in the current region. Note: This field may return null, indicating that no valid value can be obtained.
	RemoteBackupVolume int     `pulumi:"remoteBackupVolume"`
	ResultOutputFile   *string `pulumi:"resultOutputFile"`
}

func GetBackupOverviewOutput(ctx *pulumi.Context, args GetBackupOverviewOutputArgs, opts ...pulumi.InvokeOption) GetBackupOverviewResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBackupOverviewResult, error) {
			args := v.(GetBackupOverviewArgs)
			r, err := GetBackupOverview(ctx, &args, opts...)
			var s GetBackupOverviewResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBackupOverviewResultOutput)
}

// A collection of arguments for invoking getBackupOverview.
type GetBackupOverviewOutputArgs struct {
	// The type of cloud database product to be queried, currently only supports `mysql`.
	Product pulumi.StringInput `pulumi:"product"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetBackupOverviewOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupOverviewArgs)(nil)).Elem()
}

// A collection of values returned by getBackupOverview.
type GetBackupOverviewResultOutput struct{ *pulumi.OutputState }

func (GetBackupOverviewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupOverviewResult)(nil)).Elem()
}

func (o GetBackupOverviewResultOutput) ToGetBackupOverviewResultOutput() GetBackupOverviewResultOutput {
	return o
}

func (o GetBackupOverviewResultOutput) ToGetBackupOverviewResultOutputWithContext(ctx context.Context) GetBackupOverviewResultOutput {
	return o
}

// Archive backup capacity, including data backup and log backup. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetBackupOverviewResultOutput) BackupArchiveVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.BackupArchiveVolume }).(pulumi.IntOutput)
}

// The total number of user backups in the current region (including data backups and log backups).
func (o GetBackupOverviewResultOutput) BackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.BackupCount }).(pulumi.IntOutput)
}

// Standard storage backup capacity, including data backup and log backup. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetBackupOverviewResultOutput) BackupStandbyVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.BackupStandbyVolume }).(pulumi.IntOutput)
}

// The total backup capacity of the user in the current region.
func (o GetBackupOverviewResultOutput) BackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.BackupVolume }).(pulumi.IntOutput)
}

// The billable capacity of the user&amp;#39;s backup in the current region, that is, the part that exceeds the gifted capacity.
func (o GetBackupOverviewResultOutput) BillingVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.BillingVolume }).(pulumi.IntOutput)
}

// The free backup capacity obtained by the user in the current region.
func (o GetBackupOverviewResultOutput) FreeVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.FreeVolume }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBackupOverviewResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBackupOverviewResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) string { return v.Product }).(pulumi.StringOutput)
}

// The total capacity of off-site backup of the user in the current region. Note: This field may return null, indicating that no valid value can be obtained.
func (o GetBackupOverviewResultOutput) RemoteBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) int { return v.RemoteBackupVolume }).(pulumi.IntOutput)
}

func (o GetBackupOverviewResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupOverviewResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackupOverviewResultOutput{})
}
