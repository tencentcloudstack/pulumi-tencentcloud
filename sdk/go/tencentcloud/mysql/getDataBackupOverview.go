// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mysql dataBackupOverview
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetDataBackupOverview(ctx, &mysql.GetDataBackupOverviewArgs{
//				Product: "mysql",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDataBackupOverview(ctx *pulumi.Context, args *GetDataBackupOverviewArgs, opts ...pulumi.InvokeOption) (*GetDataBackupOverviewResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDataBackupOverviewResult
	err := ctx.Invoke("tencentcloud:Mysql/getDataBackupOverview:getDataBackupOverview", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataBackupOverview.
type GetDataBackupOverviewArgs struct {
	// The type of cloud database product to be queried, currently only supports `mysql`.
	Product string `pulumi:"product"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDataBackupOverview.
type GetDataBackupOverviewResult struct {
	// The total number of automatic backups in the current region.
	AutoBackupCount int `pulumi:"autoBackupCount"`
	// The total automatic backup capacity of the current region.
	AutoBackupVolume int `pulumi:"autoBackupVolume"`
	// The total number of archive backups in the current region.
	DataBackupArchiveCount int `pulumi:"dataBackupArchiveCount"`
	// The total capacity of the current regional archive backup.
	DataBackupArchiveVolume int `pulumi:"dataBackupArchiveVolume"`
	// The total number of data backups in the current region.
	DataBackupCount int `pulumi:"dataBackupCount"`
	// The total number of standard storage backups in the current region.
	DataBackupStandbyCount int `pulumi:"dataBackupStandbyCount"`
	// The total backup capacity of the current regional standard storage.
	DataBackupStandbyVolume int `pulumi:"dataBackupStandbyVolume"`
	// Total data backup capacity of the current region (including automatic backup and manual backup, in bytes).
	DataBackupVolume int `pulumi:"dataBackupVolume"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The total number of manual backups in the current region.
	ManualBackupCount int `pulumi:"manualBackupCount"`
	// The total manual backup capacity of the current region.
	ManualBackupVolume int    `pulumi:"manualBackupVolume"`
	Product            string `pulumi:"product"`
	// The total number of remote backups.
	RemoteBackupCount int `pulumi:"remoteBackupCount"`
	// The total capacity of remote backup.
	RemoteBackupVolume int     `pulumi:"remoteBackupVolume"`
	ResultOutputFile   *string `pulumi:"resultOutputFile"`
}

func GetDataBackupOverviewOutput(ctx *pulumi.Context, args GetDataBackupOverviewOutputArgs, opts ...pulumi.InvokeOption) GetDataBackupOverviewResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDataBackupOverviewResult, error) {
			args := v.(GetDataBackupOverviewArgs)
			r, err := GetDataBackupOverview(ctx, &args, opts...)
			var s GetDataBackupOverviewResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDataBackupOverviewResultOutput)
}

// A collection of arguments for invoking getDataBackupOverview.
type GetDataBackupOverviewOutputArgs struct {
	// The type of cloud database product to be queried, currently only supports `mysql`.
	Product pulumi.StringInput `pulumi:"product"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDataBackupOverviewOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataBackupOverviewArgs)(nil)).Elem()
}

// A collection of values returned by getDataBackupOverview.
type GetDataBackupOverviewResultOutput struct{ *pulumi.OutputState }

func (GetDataBackupOverviewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataBackupOverviewResult)(nil)).Elem()
}

func (o GetDataBackupOverviewResultOutput) ToGetDataBackupOverviewResultOutput() GetDataBackupOverviewResultOutput {
	return o
}

func (o GetDataBackupOverviewResultOutput) ToGetDataBackupOverviewResultOutputWithContext(ctx context.Context) GetDataBackupOverviewResultOutput {
	return o
}

// The total number of automatic backups in the current region.
func (o GetDataBackupOverviewResultOutput) AutoBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.AutoBackupCount }).(pulumi.IntOutput)
}

// The total automatic backup capacity of the current region.
func (o GetDataBackupOverviewResultOutput) AutoBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.AutoBackupVolume }).(pulumi.IntOutput)
}

// The total number of archive backups in the current region.
func (o GetDataBackupOverviewResultOutput) DataBackupArchiveCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.DataBackupArchiveCount }).(pulumi.IntOutput)
}

// The total capacity of the current regional archive backup.
func (o GetDataBackupOverviewResultOutput) DataBackupArchiveVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.DataBackupArchiveVolume }).(pulumi.IntOutput)
}

// The total number of data backups in the current region.
func (o GetDataBackupOverviewResultOutput) DataBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.DataBackupCount }).(pulumi.IntOutput)
}

// The total number of standard storage backups in the current region.
func (o GetDataBackupOverviewResultOutput) DataBackupStandbyCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.DataBackupStandbyCount }).(pulumi.IntOutput)
}

// The total backup capacity of the current regional standard storage.
func (o GetDataBackupOverviewResultOutput) DataBackupStandbyVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.DataBackupStandbyVolume }).(pulumi.IntOutput)
}

// Total data backup capacity of the current region (including automatic backup and manual backup, in bytes).
func (o GetDataBackupOverviewResultOutput) DataBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.DataBackupVolume }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDataBackupOverviewResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) string { return v.Id }).(pulumi.StringOutput)
}

// The total number of manual backups in the current region.
func (o GetDataBackupOverviewResultOutput) ManualBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.ManualBackupCount }).(pulumi.IntOutput)
}

// The total manual backup capacity of the current region.
func (o GetDataBackupOverviewResultOutput) ManualBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.ManualBackupVolume }).(pulumi.IntOutput)
}

func (o GetDataBackupOverviewResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) string { return v.Product }).(pulumi.StringOutput)
}

// The total number of remote backups.
func (o GetDataBackupOverviewResultOutput) RemoteBackupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.RemoteBackupCount }).(pulumi.IntOutput)
}

// The total capacity of remote backup.
func (o GetDataBackupOverviewResultOutput) RemoteBackupVolume() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) int { return v.RemoteBackupVolume }).(pulumi.IntOutput)
}

func (o GetDataBackupOverviewResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDataBackupOverviewResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataBackupOverviewResultOutput{})
}
