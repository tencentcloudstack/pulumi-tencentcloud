// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mysql userTask
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetUserTask(ctx, &mysql.GetUserTaskArgs{
//				AsyncRequestId: pulumi.StringRef("f2fe828c-773af816-0a08f542-94bb2a9c"),
//				InstanceId:     pulumi.StringRef("cdb-fitq5t9h"),
//				StartTimeBegin: pulumi.StringRef("2017-12-31 10:40:01"),
//				StartTimeEnd:   pulumi.StringRef("2017-12-31 10:40:01"),
//				TaskStatuses: []string{
//					"2",
//				},
//				TaskTypes: []string{
//					"5",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserTask(ctx *pulumi.Context, args *GetUserTaskArgs, opts ...pulumi.InvokeOption) (*GetUserTaskResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetUserTaskResult
	err := ctx.Invoke("tencentcloud:Mysql/getUserTask:getUserTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserTask.
type GetUserTaskArgs struct {
	// Asynchronous task request ID, the AsyncRequestId returned by executing cloud database-related operations.
	AsyncRequestId *string `pulumi:"asyncRequestId"`
	// Instance ID, the format is: cdb-c1nl9rpv, which is the same as the instance ID displayed on the cloud database console page, and you can use the [query instance list] (https://cloud.tencent.com/document/api/236/15872) interface Gets the value of the field InstanceId in the output parameter.
	InstanceId *string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// The start time of the first task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
	StartTimeBegin *string `pulumi:"startTimeBegin"`
	// The start time of the last task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
	StartTimeEnd *string `pulumi:"startTimeEnd"`
	// Task status. If no value is passed, all task statuses will be queried. Supported values include: `UNDEFINED` - undefined; `INITIAL` - initialization; `RUNNING` - running; `SUCCEED` - the execution was successful; `FAILED` - execution failed; `KILLED` - terminated; `REMOVED` - removed; `PAUSED` - Paused.
	TaskStatuses []string `pulumi:"taskStatuses"`
	// Task type. If no value is passed, all task types will be queried. Supported values include: `ROLLBACK` - database rollback; `SQL OPERATION` - SQL operation; `IMPORT DATA` - data import; `MODIFY PARAM` - parameter setting; `INITIAL` - initialize the cloud database instance; `REBOOT` - restarts the cloud database instance; `OPEN GTID` - open the cloud database instance GTID; `UPGRADE RO` - read-only instance upgrade; `BATCH ROLLBACK` - database batch rollback; `UPGRADE MASTER` - master upgrade; `DROP TABLES` - delete cloud database tables; `SWITCH DR TO MASTER` - The disaster recovery instance.
	TaskTypes []string `pulumi:"taskTypes"`
}

// A collection of values returned by getUserTask.
type GetUserTaskResult struct {
	// The request ID of the asynchronous task.
	AsyncRequestId *string `pulumi:"asyncRequestId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId *string `pulumi:"instanceId"`
	// The returned instance task information.
	Items            []GetUserTaskItem `pulumi:"items"`
	ResultOutputFile *string           `pulumi:"resultOutputFile"`
	StartTimeBegin   *string           `pulumi:"startTimeBegin"`
	StartTimeEnd     *string           `pulumi:"startTimeEnd"`
	// Instance task status, possible values include:UNDEFINED - undefined;INITIAL - initialization;RUNNING - running;SUCCEED - the execution was successful;FAILED - execution failed;KILLED - terminated;REMOVED - removed;PAUSED - Paused.WAITING - waiting (cancellable).
	TaskStatuses []string `pulumi:"taskStatuses"`
	TaskTypes    []string `pulumi:"taskTypes"`
}

func GetUserTaskOutput(ctx *pulumi.Context, args GetUserTaskOutputArgs, opts ...pulumi.InvokeOption) GetUserTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserTaskResult, error) {
			args := v.(GetUserTaskArgs)
			r, err := GetUserTask(ctx, &args, opts...)
			var s GetUserTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserTaskResultOutput)
}

// A collection of arguments for invoking getUserTask.
type GetUserTaskOutputArgs struct {
	// Asynchronous task request ID, the AsyncRequestId returned by executing cloud database-related operations.
	AsyncRequestId pulumi.StringPtrInput `pulumi:"asyncRequestId"`
	// Instance ID, the format is: cdb-c1nl9rpv, which is the same as the instance ID displayed on the cloud database console page, and you can use the [query instance list] (https://cloud.tencent.com/document/api/236/15872) interface Gets the value of the field InstanceId in the output parameter.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// The start time of the first task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
	StartTimeBegin pulumi.StringPtrInput `pulumi:"startTimeBegin"`
	// The start time of the last task, used for range query, the time format is as follows: 2017-12-31 10:40:01.
	StartTimeEnd pulumi.StringPtrInput `pulumi:"startTimeEnd"`
	// Task status. If no value is passed, all task statuses will be queried. Supported values include: `UNDEFINED` - undefined; `INITIAL` - initialization; `RUNNING` - running; `SUCCEED` - the execution was successful; `FAILED` - execution failed; `KILLED` - terminated; `REMOVED` - removed; `PAUSED` - Paused.
	TaskStatuses pulumi.StringArrayInput `pulumi:"taskStatuses"`
	// Task type. If no value is passed, all task types will be queried. Supported values include: `ROLLBACK` - database rollback; `SQL OPERATION` - SQL operation; `IMPORT DATA` - data import; `MODIFY PARAM` - parameter setting; `INITIAL` - initialize the cloud database instance; `REBOOT` - restarts the cloud database instance; `OPEN GTID` - open the cloud database instance GTID; `UPGRADE RO` - read-only instance upgrade; `BATCH ROLLBACK` - database batch rollback; `UPGRADE MASTER` - master upgrade; `DROP TABLES` - delete cloud database tables; `SWITCH DR TO MASTER` - The disaster recovery instance.
	TaskTypes pulumi.StringArrayInput `pulumi:"taskTypes"`
}

func (GetUserTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTaskArgs)(nil)).Elem()
}

// A collection of values returned by getUserTask.
type GetUserTaskResultOutput struct{ *pulumi.OutputState }

func (GetUserTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTaskResult)(nil)).Elem()
}

func (o GetUserTaskResultOutput) ToGetUserTaskResultOutput() GetUserTaskResultOutput {
	return o
}

func (o GetUserTaskResultOutput) ToGetUserTaskResultOutputWithContext(ctx context.Context) GetUserTaskResultOutput {
	return o
}

// The request ID of the asynchronous task.
func (o GetUserTaskResultOutput) AsyncRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserTaskResult) *string { return v.AsyncRequestId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserTaskResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserTaskResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The returned instance task information.
func (o GetUserTaskResultOutput) Items() GetUserTaskItemArrayOutput {
	return o.ApplyT(func(v GetUserTaskResult) []GetUserTaskItem { return v.Items }).(GetUserTaskItemArrayOutput)
}

func (o GetUserTaskResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserTaskResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetUserTaskResultOutput) StartTimeBegin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserTaskResult) *string { return v.StartTimeBegin }).(pulumi.StringPtrOutput)
}

func (o GetUserTaskResultOutput) StartTimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserTaskResult) *string { return v.StartTimeEnd }).(pulumi.StringPtrOutput)
}

// Instance task status, possible values include:UNDEFINED - undefined;INITIAL - initialization;RUNNING - running;SUCCEED - the execution was successful;FAILED - execution failed;KILLED - terminated;REMOVED - removed;PAUSED - Paused.WAITING - waiting (cancellable).
func (o GetUserTaskResultOutput) TaskStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTaskResult) []string { return v.TaskStatuses }).(pulumi.StringArrayOutput)
}

func (o GetUserTaskResultOutput) TaskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTaskResult) []string { return v.TaskTypes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserTaskResultOutput{})
}
