// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mysql dbFeatures
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetDbFeatures(ctx, &mysql.GetDbFeaturesArgs{
//				InstanceId: "cdb-fitq5t9h",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDbFeatures(ctx *pulumi.Context, args *GetDbFeaturesArgs, opts ...pulumi.InvokeOption) (*GetDbFeaturesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDbFeaturesResult
	err := ctx.Invoke("tencentcloud:Mysql/getDbFeatures:getDbFeatures", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbFeatures.
type GetDbFeaturesArgs struct {
	// Instance ID, the format is: cdb-c1nl9rpv or cdbro-c1nl9rpv, which is the same as the instance ID displayed on the cloud database console page.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDbFeatures.
type GetDbFeaturesResult struct {
	// Whether to enable auditing needs to upgrade the kernel version.
	AuditNeedUpgrade bool `pulumi:"auditNeedUpgrade"`
	// Current kernel version.
	CurrentSubVersion string `pulumi:"currentSubVersion"`
	// Whether to enable encryption needs to upgrade the kernel version.
	EncryptionNeedUpgrade bool `pulumi:"encryptionNeedUpgrade"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Whether it is a remote read-only instance.
	IsRemoteRo bool `pulumi:"isRemoteRo"`
	// Whether to support the database audit function.
	IsSupportAudit bool `pulumi:"isSupportAudit"`
	// Whether to support the database encryption function.
	IsSupportEncryption bool `pulumi:"isSupportEncryption"`
	// Whether to support minor version upgrades.
	IsSupportUpdateSubVersion bool `pulumi:"isSupportUpdateSubVersion"`
	// The region where the master instance is located.
	MasterRegion     string  `pulumi:"masterRegion"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Available kernel versions for upgrade.
	TargetSubVersion string `pulumi:"targetSubVersion"`
}

func GetDbFeaturesOutput(ctx *pulumi.Context, args GetDbFeaturesOutputArgs, opts ...pulumi.InvokeOption) GetDbFeaturesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDbFeaturesResult, error) {
			args := v.(GetDbFeaturesArgs)
			r, err := GetDbFeatures(ctx, &args, opts...)
			var s GetDbFeaturesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDbFeaturesResultOutput)
}

// A collection of arguments for invoking getDbFeatures.
type GetDbFeaturesOutputArgs struct {
	// Instance ID, the format is: cdb-c1nl9rpv or cdbro-c1nl9rpv, which is the same as the instance ID displayed on the cloud database console page.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDbFeaturesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbFeaturesArgs)(nil)).Elem()
}

// A collection of values returned by getDbFeatures.
type GetDbFeaturesResultOutput struct{ *pulumi.OutputState }

func (GetDbFeaturesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbFeaturesResult)(nil)).Elem()
}

func (o GetDbFeaturesResultOutput) ToGetDbFeaturesResultOutput() GetDbFeaturesResultOutput {
	return o
}

func (o GetDbFeaturesResultOutput) ToGetDbFeaturesResultOutputWithContext(ctx context.Context) GetDbFeaturesResultOutput {
	return o
}

// Whether to enable auditing needs to upgrade the kernel version.
func (o GetDbFeaturesResultOutput) AuditNeedUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.AuditNeedUpgrade }).(pulumi.BoolOutput)
}

// Current kernel version.
func (o GetDbFeaturesResultOutput) CurrentSubVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.CurrentSubVersion }).(pulumi.StringOutput)
}

// Whether to enable encryption needs to upgrade the kernel version.
func (o GetDbFeaturesResultOutput) EncryptionNeedUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.EncryptionNeedUpgrade }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDbFeaturesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDbFeaturesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Whether it is a remote read-only instance.
func (o GetDbFeaturesResultOutput) IsRemoteRo() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsRemoteRo }).(pulumi.BoolOutput)
}

// Whether to support the database audit function.
func (o GetDbFeaturesResultOutput) IsSupportAudit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsSupportAudit }).(pulumi.BoolOutput)
}

// Whether to support the database encryption function.
func (o GetDbFeaturesResultOutput) IsSupportEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsSupportEncryption }).(pulumi.BoolOutput)
}

// Whether to support minor version upgrades.
func (o GetDbFeaturesResultOutput) IsSupportUpdateSubVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsSupportUpdateSubVersion }).(pulumi.BoolOutput)
}

// The region where the master instance is located.
func (o GetDbFeaturesResultOutput) MasterRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.MasterRegion }).(pulumi.StringOutput)
}

func (o GetDbFeaturesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Available kernel versions for upgrade.
func (o GetDbFeaturesResultOutput) TargetSubVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.TargetSubVersion }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbFeaturesResultOutput{})
}
