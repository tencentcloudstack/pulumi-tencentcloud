// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mysql databases
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetDatabases(ctx, &mysql.GetDatabasesArgs{
//				DatabaseRegexp: pulumi.StringRef(""),
//				InstanceId:     "cdb-c1nl9rpv",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabases(ctx *pulumi.Context, args *GetDatabasesArgs, opts ...pulumi.InvokeOption) (*GetDatabasesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDatabasesResult
	err := ctx.Invoke("tencentcloud:Mysql/getDatabases:getDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabases.
type GetDatabasesArgs struct {
	// Regular expression to match database library names.
	DatabaseRegexp *string `pulumi:"databaseRegexp"`
	// The ID of instance.
	InstanceId string `pulumi:"instanceId"`
	// The number of single requests, the default value is 20, the minimum value is 1, and the maximum value is 100.
	Limit *int `pulumi:"limit"`
	// Page offset.
	Offset *int `pulumi:"offset"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDatabases.
type GetDatabasesResult struct {
	// Database name and character set.
	DatabaseLists  []GetDatabasesDatabaseList `pulumi:"databaseLists"`
	DatabaseRegexp *string                    `pulumi:"databaseRegexp"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Returned instance information.
	Items            []string `pulumi:"items"`
	Limit            *int     `pulumi:"limit"`
	Offset           *int     `pulumi:"offset"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

func GetDatabasesOutput(ctx *pulumi.Context, args GetDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabasesResult, error) {
			args := v.(GetDatabasesArgs)
			r, err := GetDatabases(ctx, &args, opts...)
			var s GetDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabasesResultOutput)
}

// A collection of arguments for invoking getDatabases.
type GetDatabasesOutputArgs struct {
	// Regular expression to match database library names.
	DatabaseRegexp pulumi.StringPtrInput `pulumi:"databaseRegexp"`
	// The ID of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The number of single requests, the default value is 20, the minimum value is 1, and the maximum value is 100.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Page offset.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabases.
type GetDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesResult)(nil)).Elem()
}

func (o GetDatabasesResultOutput) ToGetDatabasesResultOutput() GetDatabasesResultOutput {
	return o
}

func (o GetDatabasesResultOutput) ToGetDatabasesResultOutputWithContext(ctx context.Context) GetDatabasesResultOutput {
	return o
}

// Database name and character set.
func (o GetDatabasesResultOutput) DatabaseLists() GetDatabasesDatabaseListArrayOutput {
	return o.ApplyT(func(v GetDatabasesResult) []GetDatabasesDatabaseList { return v.DatabaseLists }).(GetDatabasesDatabaseListArrayOutput)
}

func (o GetDatabasesResultOutput) DatabaseRegexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *string { return v.DatabaseRegexp }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabasesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Returned instance information.
func (o GetDatabasesResultOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesResult) []string { return v.Items }).(pulumi.StringArrayOutput)
}

func (o GetDatabasesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetDatabasesResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o GetDatabasesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabasesResultOutput{})
}
