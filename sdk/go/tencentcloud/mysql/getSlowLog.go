// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of mysql slowLog
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetSlowLog(ctx, &mysql.GetSlowLogArgs{
//				InstanceId: "cdb-fitq5t9h",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSlowLog(ctx *pulumi.Context, args *GetSlowLogArgs, opts ...pulumi.InvokeOption) (*GetSlowLogResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSlowLogResult
	err := ctx.Invoke("tencentcloud:Mysql/getSlowLog:getSlowLog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSlowLog.
type GetSlowLogArgs struct {
	// Instance ID, in the format: cdb-c1nl9rpv. Same instance ID as displayed in the ApsaraDB for Console page.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getSlowLog.
type GetSlowLogResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Details of slow query logs that meet the query conditions.
	Items            []GetSlowLogItem `pulumi:"items"`
	ResultOutputFile *string          `pulumi:"resultOutputFile"`
}

func GetSlowLogOutput(ctx *pulumi.Context, args GetSlowLogOutputArgs, opts ...pulumi.InvokeOption) GetSlowLogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSlowLogResult, error) {
			args := v.(GetSlowLogArgs)
			r, err := GetSlowLog(ctx, &args, opts...)
			var s GetSlowLogResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSlowLogResultOutput)
}

// A collection of arguments for invoking getSlowLog.
type GetSlowLogOutputArgs struct {
	// Instance ID, in the format: cdb-c1nl9rpv. Same instance ID as displayed in the ApsaraDB for Console page.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetSlowLogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogArgs)(nil)).Elem()
}

// A collection of values returned by getSlowLog.
type GetSlowLogResultOutput struct{ *pulumi.OutputState }

func (GetSlowLogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogResult)(nil)).Elem()
}

func (o GetSlowLogResultOutput) ToGetSlowLogResultOutput() GetSlowLogResultOutput {
	return o
}

func (o GetSlowLogResultOutput) ToGetSlowLogResultOutputWithContext(ctx context.Context) GetSlowLogResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSlowLogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSlowLogResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Details of slow query logs that meet the query conditions.
func (o GetSlowLogResultOutput) Items() GetSlowLogItemArrayOutput {
	return o.ApplyT(func(v GetSlowLogResult) []GetSlowLogItem { return v.Items }).(GetSlowLogItemArrayOutput)
}

func (o GetSlowLogResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSlowLogResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSlowLogResultOutput{})
}
