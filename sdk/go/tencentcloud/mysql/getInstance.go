// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a MySQL instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetInstance(ctx, &mysql.GetInstanceArgs{
//				MysqlId: pulumi.StringRef("cdb-fitq5t9h"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("tencentcloud:Mysql/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// Pay type of instance, valid values are `PREPAID` and `POSTPAID`.
	ChargeType *string `pulumi:"chargeType"`
	// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
	EngineVersion *string `pulumi:"engineVersion"`
	// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
	InitFlag *int `pulumi:"initFlag"`
	// Name of mysql instance.
	InstanceName *string `pulumi:"instanceName"`
	// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
	InstanceRole *string `pulumi:"instanceRole"`
	// Number of results returned for a single request. Default is `20`, and maximum is 2000.
	Limit *int `pulumi:"limit"`
	// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
	MysqlId *string `pulumi:"mysqlId"`
	// Record offset. Default is 0.
	Offset *int `pulumi:"offset"`
	// It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance, `0`: prepay, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType *int `pulumi:"payType"`
	// Used to store results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Security groups ID of instance.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
	Status *int `pulumi:"status"`
	// Indicates whether to query disaster recovery instances.
	WithDr *int `pulumi:"withDr"`
	// Indicates whether to query master instances.
	WithMaster *int `pulumi:"withMaster"`
	// Indicates whether to query read-only instances.
	WithRo *int `pulumi:"withRo"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	// Pay type of instance.
	ChargeType *string `pulumi:"chargeType"`
	// The version number of the database engine to use. Supported versions include `5.5`/`5.6`/`5.7`/`8.0`.
	EngineVersion *string `pulumi:"engineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
	InitFlag *int `pulumi:"initFlag"`
	// A list of instances. Each element contains the following attributes:
	InstanceLists []GetInstanceInstanceList `pulumi:"instanceLists"`
	// Name of mysql instance.
	InstanceName *string `pulumi:"instanceName"`
	// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
	InstanceRole *string `pulumi:"instanceRole"`
	Limit        *int    `pulumi:"limit"`
	// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
	MysqlId *string `pulumi:"mysqlId"`
	Offset  *int    `pulumi:"offset"`
	// Pay type of instance, `0`: prepaid, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType          *int    `pulumi:"payType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SecurityGroupId  *string `pulumi:"securityGroupId"`
	// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
	Status     *int `pulumi:"status"`
	WithDr     *int `pulumi:"withDr"`
	WithMaster *int `pulumi:"withMaster"`
	WithRo     *int `pulumi:"withRo"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// Pay type of instance, valid values are `PREPAID` and `POSTPAID`.
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// The version number of the database engine to use. Supported versions include 5.5/5.6/5.7/8.0.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
	InitFlag pulumi.IntPtrInput `pulumi:"initFlag"`
	// Name of mysql instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
	InstanceRole pulumi.StringPtrInput `pulumi:"instanceRole"`
	// Number of results returned for a single request. Default is `20`, and maximum is 2000.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
	MysqlId pulumi.StringPtrInput `pulumi:"mysqlId"`
	// Record offset. Default is 0.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// It has been deprecated from version 1.36.0. Please use `chargeType` instead. Pay type of instance, `0`: prepay, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType pulumi.IntPtrInput `pulumi:"payType"`
	// Used to store results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Security groups ID of instance.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Indicates whether to query disaster recovery instances.
	WithDr pulumi.IntPtrInput `pulumi:"withDr"`
	// Indicates whether to query master instances.
	WithMaster pulumi.IntPtrInput `pulumi:"withMaster"`
	// Indicates whether to query read-only instances.
	WithRo pulumi.IntPtrInput `pulumi:"withRo"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

// Pay type of instance.
func (o LookupInstanceResultOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// The version number of the database engine to use. Supported versions include `5.5`/`5.6`/`5.7`/`8.0`.
func (o LookupInstanceResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Initialization mark. Available values: `0` - Uninitialized; `1` - Initialized.
func (o LookupInstanceResultOutput) InitFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.InitFlag }).(pulumi.IntPtrOutput)
}

// A list of instances. Each element contains the following attributes:
func (o LookupInstanceResultOutput) InstanceLists() GetInstanceInstanceListArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceInstanceList { return v.InstanceLists }).(GetInstanceInstanceListArrayOutput)
}

// Name of mysql instance.
func (o LookupInstanceResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Instance type. Supported values include: `master` - master instance, `dr` - disaster recovery instance, and `ro` - read-only instance.
func (o LookupInstanceResultOutput) InstanceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.InstanceRole }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Instance ID, such as `cdb-c1nl9rpv`. It is identical to the instance ID displayed in the database console page.
func (o LookupInstanceResultOutput) MysqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.MysqlId }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// Pay type of instance, `0`: prepaid, `1`: postpaid.
//
// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
func (o LookupInstanceResultOutput) PayType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.PayType }).(pulumi.IntPtrOutput)
}

func (o LookupInstanceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// Instance status. Available values: `0` - Creating; `1` - Running; `4` - Isolating; `5` - Isolated.
func (o LookupInstanceResultOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.Status }).(pulumi.IntPtrOutput)
}

func (o LookupInstanceResultOutput) WithDr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.WithDr }).(pulumi.IntPtrOutput)
}

func (o LookupInstanceResultOutput) WithMaster() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.WithMaster }).(pulumi.IntPtrOutput)
}

func (o LookupInstanceResultOutput) WithRo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *int { return v.WithRo }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
