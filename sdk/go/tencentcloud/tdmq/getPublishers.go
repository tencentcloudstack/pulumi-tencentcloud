// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tdmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of tdmq publishers
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tdmq"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tdmq"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tdmq.GetPublishers(ctx, &tdmq.GetPublishersArgs{
//				ClusterId: "pulsar-9n95ax58b9vn",
//				Filters: []tdmq.GetPublishersFilter{
//					tdmq.GetPublishersFilter{
//						Name: pulumi.StringRef("ProducerName"),
//						Values: []string{
//							"test",
//						},
//					},
//				},
//				Namespace: "keep-ns",
//				Sort: tdmq.GetPublishersSort{
//					Name:  "ProducerName",
//					Order: "DESC",
//				},
//				Topic: "keep-topic",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPublishers(ctx *pulumi.Context, args *GetPublishersArgs, opts ...pulumi.InvokeOption) (*GetPublishersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPublishersResult
	err := ctx.Invoke("tencentcloud:Tdmq/getPublishers:getPublishers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPublishers.
type GetPublishersArgs struct {
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Parameter filter, support ProducerName, Address field.
	Filters []GetPublishersFilter `pulumi:"filters"`
	// namespace name.
	Namespace string `pulumi:"namespace"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// sorter.
	Sort *GetPublishersSort `pulumi:"sort"`
	// topic name.
	Topic string `pulumi:"topic"`
}

// A collection of values returned by getPublishers.
type GetPublishersResult struct {
	ClusterId string                `pulumi:"clusterId"`
	Filters   []GetPublishersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Namespace string `pulumi:"namespace"`
	// Producer Information ListNote: This field may return null, indicating that no valid value can be obtained.
	Publishers       []GetPublishersPublisher `pulumi:"publishers"`
	ResultOutputFile *string                  `pulumi:"resultOutputFile"`
	Sort             *GetPublishersSort       `pulumi:"sort"`
	Topic            string                   `pulumi:"topic"`
}

func GetPublishersOutput(ctx *pulumi.Context, args GetPublishersOutputArgs, opts ...pulumi.InvokeOption) GetPublishersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPublishersResult, error) {
			args := v.(GetPublishersArgs)
			r, err := GetPublishers(ctx, &args, opts...)
			var s GetPublishersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPublishersResultOutput)
}

// A collection of arguments for invoking getPublishers.
type GetPublishersOutputArgs struct {
	// Cluster ID.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Parameter filter, support ProducerName, Address field.
	Filters GetPublishersFilterArrayInput `pulumi:"filters"`
	// namespace name.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// sorter.
	Sort GetPublishersSortPtrInput `pulumi:"sort"`
	// topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetPublishersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishersArgs)(nil)).Elem()
}

// A collection of values returned by getPublishers.
type GetPublishersResultOutput struct{ *pulumi.OutputState }

func (GetPublishersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishersResult)(nil)).Elem()
}

func (o GetPublishersResultOutput) ToGetPublishersResultOutput() GetPublishersResultOutput {
	return o
}

func (o GetPublishersResultOutput) ToGetPublishersResultOutputWithContext(ctx context.Context) GetPublishersResultOutput {
	return o
}

func (o GetPublishersResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishersResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetPublishersResultOutput) Filters() GetPublishersFilterArrayOutput {
	return o.ApplyT(func(v GetPublishersResult) []GetPublishersFilter { return v.Filters }).(GetPublishersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPublishersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPublishersResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishersResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// Producer Information ListNote: This field may return null, indicating that no valid value can be obtained.
func (o GetPublishersResultOutput) Publishers() GetPublishersPublisherArrayOutput {
	return o.ApplyT(func(v GetPublishersResult) []GetPublishersPublisher { return v.Publishers }).(GetPublishersPublisherArrayOutput)
}

func (o GetPublishersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPublishersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetPublishersResultOutput) Sort() GetPublishersSortPtrOutput {
	return o.ApplyT(func(v GetPublishersResult) *GetPublishersSort { return v.Sort }).(GetPublishersSortPtrOutput)
}

func (o GetPublishersResultOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishersResult) string { return v.Topic }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPublishersResultOutput{})
}
