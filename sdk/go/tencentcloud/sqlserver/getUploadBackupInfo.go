// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of sqlserver uploadBackupInfo
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Sqlserver.GetUploadBackupInfo(ctx, &sqlserver.GetUploadBackupInfoArgs{
//				BackupMigrationId: "mssql-backup-migration-8a0f3eht",
//				InstanceId:        "mssql-qelbzgwf",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUploadBackupInfo(ctx *pulumi.Context, args *GetUploadBackupInfoArgs, opts ...pulumi.InvokeOption) (*GetUploadBackupInfoResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetUploadBackupInfoResult
	err := ctx.Invoke("tencentcloud:Sqlserver/getUploadBackupInfo:getUploadBackupInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUploadBackupInfo.
type GetUploadBackupInfoArgs struct {
	// Backup import task ID, which is returned through the API CreateBackupMigration.
	BackupMigrationId string `pulumi:"backupMigrationId"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getUploadBackupInfo.
type GetUploadBackupInfoResult struct {
	BackupMigrationId string `pulumi:"backupMigrationId"`
	// Bucket name.
	BucketName string `pulumi:"bucketName"`
	// Temporary key expiration time.
	ExpiredTime string `pulumi:"expiredTime"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Storage path.
	Path string `pulumi:"path"`
	// Bucket location information.
	Region           string  `pulumi:"region"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Temporary key start time.
	StartTime string `pulumi:"startTime"`
	// Temporary key ID.
	TmpSecretId string `pulumi:"tmpSecretId"`
	// Temporary key (Key).
	TmpSecretKey string `pulumi:"tmpSecretKey"`
	// Temporary key (Token).
	XCosSecurityToken string `pulumi:"xCosSecurityToken"`
}

func GetUploadBackupInfoOutput(ctx *pulumi.Context, args GetUploadBackupInfoOutputArgs, opts ...pulumi.InvokeOption) GetUploadBackupInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUploadBackupInfoResult, error) {
			args := v.(GetUploadBackupInfoArgs)
			r, err := GetUploadBackupInfo(ctx, &args, opts...)
			var s GetUploadBackupInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUploadBackupInfoResultOutput)
}

// A collection of arguments for invoking getUploadBackupInfo.
type GetUploadBackupInfoOutputArgs struct {
	// Backup import task ID, which is returned through the API CreateBackupMigration.
	BackupMigrationId pulumi.StringInput `pulumi:"backupMigrationId"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetUploadBackupInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUploadBackupInfoArgs)(nil)).Elem()
}

// A collection of values returned by getUploadBackupInfo.
type GetUploadBackupInfoResultOutput struct{ *pulumi.OutputState }

func (GetUploadBackupInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUploadBackupInfoResult)(nil)).Elem()
}

func (o GetUploadBackupInfoResultOutput) ToGetUploadBackupInfoResultOutput() GetUploadBackupInfoResultOutput {
	return o
}

func (o GetUploadBackupInfoResultOutput) ToGetUploadBackupInfoResultOutputWithContext(ctx context.Context) GetUploadBackupInfoResultOutput {
	return o
}

func (o GetUploadBackupInfoResultOutput) BackupMigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.BackupMigrationId }).(pulumi.StringOutput)
}

// Bucket name.
func (o GetUploadBackupInfoResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// Temporary key expiration time.
func (o GetUploadBackupInfoResultOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUploadBackupInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUploadBackupInfoResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Storage path.
func (o GetUploadBackupInfoResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.Path }).(pulumi.StringOutput)
}

// Bucket location information.
func (o GetUploadBackupInfoResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetUploadBackupInfoResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Temporary key start time.
func (o GetUploadBackupInfoResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// Temporary key ID.
func (o GetUploadBackupInfoResultOutput) TmpSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.TmpSecretId }).(pulumi.StringOutput)
}

// Temporary key (Key).
func (o GetUploadBackupInfoResultOutput) TmpSecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.TmpSecretKey }).(pulumi.StringOutput)
}

// Temporary key (Token).
func (o GetUploadBackupInfoResultOutput) XCosSecurityToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetUploadBackupInfoResult) string { return v.XCosSecurityToken }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUploadBackupInfoResultOutput{})
}
