// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BusinessIntelligenceInstanceResourceTag struct {
	// Tag key.
	TagKey *string `pulumi:"tagKey"`
	// Tag value.
	TagValue *string `pulumi:"tagValue"`
}

// BusinessIntelligenceInstanceResourceTagInput is an input type that accepts BusinessIntelligenceInstanceResourceTagArgs and BusinessIntelligenceInstanceResourceTagOutput values.
// You can construct a concrete instance of `BusinessIntelligenceInstanceResourceTagInput` via:
//
//	BusinessIntelligenceInstanceResourceTagArgs{...}
type BusinessIntelligenceInstanceResourceTagInput interface {
	pulumi.Input

	ToBusinessIntelligenceInstanceResourceTagOutput() BusinessIntelligenceInstanceResourceTagOutput
	ToBusinessIntelligenceInstanceResourceTagOutputWithContext(context.Context) BusinessIntelligenceInstanceResourceTagOutput
}

type BusinessIntelligenceInstanceResourceTagArgs struct {
	// Tag key.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
	// Tag value.
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (BusinessIntelligenceInstanceResourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessIntelligenceInstanceResourceTag)(nil)).Elem()
}

func (i BusinessIntelligenceInstanceResourceTagArgs) ToBusinessIntelligenceInstanceResourceTagOutput() BusinessIntelligenceInstanceResourceTagOutput {
	return i.ToBusinessIntelligenceInstanceResourceTagOutputWithContext(context.Background())
}

func (i BusinessIntelligenceInstanceResourceTagArgs) ToBusinessIntelligenceInstanceResourceTagOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceResourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIntelligenceInstanceResourceTagOutput)
}

// BusinessIntelligenceInstanceResourceTagArrayInput is an input type that accepts BusinessIntelligenceInstanceResourceTagArray and BusinessIntelligenceInstanceResourceTagArrayOutput values.
// You can construct a concrete instance of `BusinessIntelligenceInstanceResourceTagArrayInput` via:
//
//	BusinessIntelligenceInstanceResourceTagArray{ BusinessIntelligenceInstanceResourceTagArgs{...} }
type BusinessIntelligenceInstanceResourceTagArrayInput interface {
	pulumi.Input

	ToBusinessIntelligenceInstanceResourceTagArrayOutput() BusinessIntelligenceInstanceResourceTagArrayOutput
	ToBusinessIntelligenceInstanceResourceTagArrayOutputWithContext(context.Context) BusinessIntelligenceInstanceResourceTagArrayOutput
}

type BusinessIntelligenceInstanceResourceTagArray []BusinessIntelligenceInstanceResourceTagInput

func (BusinessIntelligenceInstanceResourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BusinessIntelligenceInstanceResourceTag)(nil)).Elem()
}

func (i BusinessIntelligenceInstanceResourceTagArray) ToBusinessIntelligenceInstanceResourceTagArrayOutput() BusinessIntelligenceInstanceResourceTagArrayOutput {
	return i.ToBusinessIntelligenceInstanceResourceTagArrayOutputWithContext(context.Background())
}

func (i BusinessIntelligenceInstanceResourceTagArray) ToBusinessIntelligenceInstanceResourceTagArrayOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceResourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIntelligenceInstanceResourceTagArrayOutput)
}

type BusinessIntelligenceInstanceResourceTagOutput struct{ *pulumi.OutputState }

func (BusinessIntelligenceInstanceResourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessIntelligenceInstanceResourceTag)(nil)).Elem()
}

func (o BusinessIntelligenceInstanceResourceTagOutput) ToBusinessIntelligenceInstanceResourceTagOutput() BusinessIntelligenceInstanceResourceTagOutput {
	return o
}

func (o BusinessIntelligenceInstanceResourceTagOutput) ToBusinessIntelligenceInstanceResourceTagOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceResourceTagOutput {
	return o
}

// Tag key.
func (o BusinessIntelligenceInstanceResourceTagOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BusinessIntelligenceInstanceResourceTag) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o BusinessIntelligenceInstanceResourceTagOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BusinessIntelligenceInstanceResourceTag) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type BusinessIntelligenceInstanceResourceTagArrayOutput struct{ *pulumi.OutputState }

func (BusinessIntelligenceInstanceResourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BusinessIntelligenceInstanceResourceTag)(nil)).Elem()
}

func (o BusinessIntelligenceInstanceResourceTagArrayOutput) ToBusinessIntelligenceInstanceResourceTagArrayOutput() BusinessIntelligenceInstanceResourceTagArrayOutput {
	return o
}

func (o BusinessIntelligenceInstanceResourceTagArrayOutput) ToBusinessIntelligenceInstanceResourceTagArrayOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceResourceTagArrayOutput {
	return o
}

func (o BusinessIntelligenceInstanceResourceTagArrayOutput) Index(i pulumi.IntInput) BusinessIntelligenceInstanceResourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BusinessIntelligenceInstanceResourceTag {
		return vs[0].([]BusinessIntelligenceInstanceResourceTag)[vs[1].(int)]
	}).(BusinessIntelligenceInstanceResourceTagOutput)
}

type ConfigInstanceParamParamList struct {
	// Parameter value.
	CurrentValue *string `pulumi:"currentValue"`
	// Parameter name.
	Name *string `pulumi:"name"`
}

// ConfigInstanceParamParamListInput is an input type that accepts ConfigInstanceParamParamListArgs and ConfigInstanceParamParamListOutput values.
// You can construct a concrete instance of `ConfigInstanceParamParamListInput` via:
//
//	ConfigInstanceParamParamListArgs{...}
type ConfigInstanceParamParamListInput interface {
	pulumi.Input

	ToConfigInstanceParamParamListOutput() ConfigInstanceParamParamListOutput
	ToConfigInstanceParamParamListOutputWithContext(context.Context) ConfigInstanceParamParamListOutput
}

type ConfigInstanceParamParamListArgs struct {
	// Parameter value.
	CurrentValue pulumi.StringPtrInput `pulumi:"currentValue"`
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ConfigInstanceParamParamListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigInstanceParamParamList)(nil)).Elem()
}

func (i ConfigInstanceParamParamListArgs) ToConfigInstanceParamParamListOutput() ConfigInstanceParamParamListOutput {
	return i.ToConfigInstanceParamParamListOutputWithContext(context.Background())
}

func (i ConfigInstanceParamParamListArgs) ToConfigInstanceParamParamListOutputWithContext(ctx context.Context) ConfigInstanceParamParamListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceParamParamListOutput)
}

// ConfigInstanceParamParamListArrayInput is an input type that accepts ConfigInstanceParamParamListArray and ConfigInstanceParamParamListArrayOutput values.
// You can construct a concrete instance of `ConfigInstanceParamParamListArrayInput` via:
//
//	ConfigInstanceParamParamListArray{ ConfigInstanceParamParamListArgs{...} }
type ConfigInstanceParamParamListArrayInput interface {
	pulumi.Input

	ToConfigInstanceParamParamListArrayOutput() ConfigInstanceParamParamListArrayOutput
	ToConfigInstanceParamParamListArrayOutputWithContext(context.Context) ConfigInstanceParamParamListArrayOutput
}

type ConfigInstanceParamParamListArray []ConfigInstanceParamParamListInput

func (ConfigInstanceParamParamListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigInstanceParamParamList)(nil)).Elem()
}

func (i ConfigInstanceParamParamListArray) ToConfigInstanceParamParamListArrayOutput() ConfigInstanceParamParamListArrayOutput {
	return i.ToConfigInstanceParamParamListArrayOutputWithContext(context.Background())
}

func (i ConfigInstanceParamParamListArray) ToConfigInstanceParamParamListArrayOutputWithContext(ctx context.Context) ConfigInstanceParamParamListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceParamParamListArrayOutput)
}

type ConfigInstanceParamParamListOutput struct{ *pulumi.OutputState }

func (ConfigInstanceParamParamListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigInstanceParamParamList)(nil)).Elem()
}

func (o ConfigInstanceParamParamListOutput) ToConfigInstanceParamParamListOutput() ConfigInstanceParamParamListOutput {
	return o
}

func (o ConfigInstanceParamParamListOutput) ToConfigInstanceParamParamListOutputWithContext(ctx context.Context) ConfigInstanceParamParamListOutput {
	return o
}

// Parameter value.
func (o ConfigInstanceParamParamListOutput) CurrentValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigInstanceParamParamList) *string { return v.CurrentValue }).(pulumi.StringPtrOutput)
}

// Parameter name.
func (o ConfigInstanceParamParamListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigInstanceParamParamList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ConfigInstanceParamParamListArrayOutput struct{ *pulumi.OutputState }

func (ConfigInstanceParamParamListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigInstanceParamParamList)(nil)).Elem()
}

func (o ConfigInstanceParamParamListArrayOutput) ToConfigInstanceParamParamListArrayOutput() ConfigInstanceParamParamListArrayOutput {
	return o
}

func (o ConfigInstanceParamParamListArrayOutput) ToConfigInstanceParamParamListArrayOutputWithContext(ctx context.Context) ConfigInstanceParamParamListArrayOutput {
	return o
}

func (o ConfigInstanceParamParamListArrayOutput) Index(i pulumi.IntInput) ConfigInstanceParamParamListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigInstanceParamParamList {
		return vs[0].([]ConfigInstanceParamParamList)[vs[1].(int)]
	}).(ConfigInstanceParamParamListOutput)
}

type ConfigInstanceRoGroupWeightPair struct {
	// Read-only instance ID, in the format: mssqlro-3l3fgqn7.
	ReadOnlyInstanceId string `pulumi:"readOnlyInstanceId"`
	// Read-only instance weight, the range is 0-100.
	ReadOnlyWeight int `pulumi:"readOnlyWeight"`
}

// ConfigInstanceRoGroupWeightPairInput is an input type that accepts ConfigInstanceRoGroupWeightPairArgs and ConfigInstanceRoGroupWeightPairOutput values.
// You can construct a concrete instance of `ConfigInstanceRoGroupWeightPairInput` via:
//
//	ConfigInstanceRoGroupWeightPairArgs{...}
type ConfigInstanceRoGroupWeightPairInput interface {
	pulumi.Input

	ToConfigInstanceRoGroupWeightPairOutput() ConfigInstanceRoGroupWeightPairOutput
	ToConfigInstanceRoGroupWeightPairOutputWithContext(context.Context) ConfigInstanceRoGroupWeightPairOutput
}

type ConfigInstanceRoGroupWeightPairArgs struct {
	// Read-only instance ID, in the format: mssqlro-3l3fgqn7.
	ReadOnlyInstanceId pulumi.StringInput `pulumi:"readOnlyInstanceId"`
	// Read-only instance weight, the range is 0-100.
	ReadOnlyWeight pulumi.IntInput `pulumi:"readOnlyWeight"`
}

func (ConfigInstanceRoGroupWeightPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigInstanceRoGroupWeightPair)(nil)).Elem()
}

func (i ConfigInstanceRoGroupWeightPairArgs) ToConfigInstanceRoGroupWeightPairOutput() ConfigInstanceRoGroupWeightPairOutput {
	return i.ToConfigInstanceRoGroupWeightPairOutputWithContext(context.Background())
}

func (i ConfigInstanceRoGroupWeightPairArgs) ToConfigInstanceRoGroupWeightPairOutputWithContext(ctx context.Context) ConfigInstanceRoGroupWeightPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceRoGroupWeightPairOutput)
}

// ConfigInstanceRoGroupWeightPairArrayInput is an input type that accepts ConfigInstanceRoGroupWeightPairArray and ConfigInstanceRoGroupWeightPairArrayOutput values.
// You can construct a concrete instance of `ConfigInstanceRoGroupWeightPairArrayInput` via:
//
//	ConfigInstanceRoGroupWeightPairArray{ ConfigInstanceRoGroupWeightPairArgs{...} }
type ConfigInstanceRoGroupWeightPairArrayInput interface {
	pulumi.Input

	ToConfigInstanceRoGroupWeightPairArrayOutput() ConfigInstanceRoGroupWeightPairArrayOutput
	ToConfigInstanceRoGroupWeightPairArrayOutputWithContext(context.Context) ConfigInstanceRoGroupWeightPairArrayOutput
}

type ConfigInstanceRoGroupWeightPairArray []ConfigInstanceRoGroupWeightPairInput

func (ConfigInstanceRoGroupWeightPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigInstanceRoGroupWeightPair)(nil)).Elem()
}

func (i ConfigInstanceRoGroupWeightPairArray) ToConfigInstanceRoGroupWeightPairArrayOutput() ConfigInstanceRoGroupWeightPairArrayOutput {
	return i.ToConfigInstanceRoGroupWeightPairArrayOutputWithContext(context.Background())
}

func (i ConfigInstanceRoGroupWeightPairArray) ToConfigInstanceRoGroupWeightPairArrayOutputWithContext(ctx context.Context) ConfigInstanceRoGroupWeightPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceRoGroupWeightPairArrayOutput)
}

type ConfigInstanceRoGroupWeightPairOutput struct{ *pulumi.OutputState }

func (ConfigInstanceRoGroupWeightPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigInstanceRoGroupWeightPair)(nil)).Elem()
}

func (o ConfigInstanceRoGroupWeightPairOutput) ToConfigInstanceRoGroupWeightPairOutput() ConfigInstanceRoGroupWeightPairOutput {
	return o
}

func (o ConfigInstanceRoGroupWeightPairOutput) ToConfigInstanceRoGroupWeightPairOutputWithContext(ctx context.Context) ConfigInstanceRoGroupWeightPairOutput {
	return o
}

// Read-only instance ID, in the format: mssqlro-3l3fgqn7.
func (o ConfigInstanceRoGroupWeightPairOutput) ReadOnlyInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigInstanceRoGroupWeightPair) string { return v.ReadOnlyInstanceId }).(pulumi.StringOutput)
}

// Read-only instance weight, the range is 0-100.
func (o ConfigInstanceRoGroupWeightPairOutput) ReadOnlyWeight() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigInstanceRoGroupWeightPair) int { return v.ReadOnlyWeight }).(pulumi.IntOutput)
}

type ConfigInstanceRoGroupWeightPairArrayOutput struct{ *pulumi.OutputState }

func (ConfigInstanceRoGroupWeightPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigInstanceRoGroupWeightPair)(nil)).Elem()
}

func (o ConfigInstanceRoGroupWeightPairArrayOutput) ToConfigInstanceRoGroupWeightPairArrayOutput() ConfigInstanceRoGroupWeightPairArrayOutput {
	return o
}

func (o ConfigInstanceRoGroupWeightPairArrayOutput) ToConfigInstanceRoGroupWeightPairArrayOutputWithContext(ctx context.Context) ConfigInstanceRoGroupWeightPairArrayOutput {
	return o
}

func (o ConfigInstanceRoGroupWeightPairArrayOutput) Index(i pulumi.IntInput) ConfigInstanceRoGroupWeightPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigInstanceRoGroupWeightPair {
		return vs[0].([]ConfigInstanceRoGroupWeightPair)[vs[1].(int)]
	}).(ConfigInstanceRoGroupWeightPairOutput)
}

type GeneralCloudInstanceResourceTag struct {
	// tag key.
	TagKey *string `pulumi:"tagKey"`
	// tag value.
	TagValue *string `pulumi:"tagValue"`
}

// GeneralCloudInstanceResourceTagInput is an input type that accepts GeneralCloudInstanceResourceTagArgs and GeneralCloudInstanceResourceTagOutput values.
// You can construct a concrete instance of `GeneralCloudInstanceResourceTagInput` via:
//
//	GeneralCloudInstanceResourceTagArgs{...}
type GeneralCloudInstanceResourceTagInput interface {
	pulumi.Input

	ToGeneralCloudInstanceResourceTagOutput() GeneralCloudInstanceResourceTagOutput
	ToGeneralCloudInstanceResourceTagOutputWithContext(context.Context) GeneralCloudInstanceResourceTagOutput
}

type GeneralCloudInstanceResourceTagArgs struct {
	// tag key.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
	// tag value.
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (GeneralCloudInstanceResourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeneralCloudInstanceResourceTag)(nil)).Elem()
}

func (i GeneralCloudInstanceResourceTagArgs) ToGeneralCloudInstanceResourceTagOutput() GeneralCloudInstanceResourceTagOutput {
	return i.ToGeneralCloudInstanceResourceTagOutputWithContext(context.Background())
}

func (i GeneralCloudInstanceResourceTagArgs) ToGeneralCloudInstanceResourceTagOutputWithContext(ctx context.Context) GeneralCloudInstanceResourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudInstanceResourceTagOutput)
}

// GeneralCloudInstanceResourceTagArrayInput is an input type that accepts GeneralCloudInstanceResourceTagArray and GeneralCloudInstanceResourceTagArrayOutput values.
// You can construct a concrete instance of `GeneralCloudInstanceResourceTagArrayInput` via:
//
//	GeneralCloudInstanceResourceTagArray{ GeneralCloudInstanceResourceTagArgs{...} }
type GeneralCloudInstanceResourceTagArrayInput interface {
	pulumi.Input

	ToGeneralCloudInstanceResourceTagArrayOutput() GeneralCloudInstanceResourceTagArrayOutput
	ToGeneralCloudInstanceResourceTagArrayOutputWithContext(context.Context) GeneralCloudInstanceResourceTagArrayOutput
}

type GeneralCloudInstanceResourceTagArray []GeneralCloudInstanceResourceTagInput

func (GeneralCloudInstanceResourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeneralCloudInstanceResourceTag)(nil)).Elem()
}

func (i GeneralCloudInstanceResourceTagArray) ToGeneralCloudInstanceResourceTagArrayOutput() GeneralCloudInstanceResourceTagArrayOutput {
	return i.ToGeneralCloudInstanceResourceTagArrayOutputWithContext(context.Background())
}

func (i GeneralCloudInstanceResourceTagArray) ToGeneralCloudInstanceResourceTagArrayOutputWithContext(ctx context.Context) GeneralCloudInstanceResourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudInstanceResourceTagArrayOutput)
}

type GeneralCloudInstanceResourceTagOutput struct{ *pulumi.OutputState }

func (GeneralCloudInstanceResourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeneralCloudInstanceResourceTag)(nil)).Elem()
}

func (o GeneralCloudInstanceResourceTagOutput) ToGeneralCloudInstanceResourceTagOutput() GeneralCloudInstanceResourceTagOutput {
	return o
}

func (o GeneralCloudInstanceResourceTagOutput) ToGeneralCloudInstanceResourceTagOutputWithContext(ctx context.Context) GeneralCloudInstanceResourceTagOutput {
	return o
}

// tag key.
func (o GeneralCloudInstanceResourceTagOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeneralCloudInstanceResourceTag) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// tag value.
func (o GeneralCloudInstanceResourceTagOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeneralCloudInstanceResourceTag) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type GeneralCloudInstanceResourceTagArrayOutput struct{ *pulumi.OutputState }

func (GeneralCloudInstanceResourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeneralCloudInstanceResourceTag)(nil)).Elem()
}

func (o GeneralCloudInstanceResourceTagArrayOutput) ToGeneralCloudInstanceResourceTagArrayOutput() GeneralCloudInstanceResourceTagArrayOutput {
	return o
}

func (o GeneralCloudInstanceResourceTagArrayOutput) ToGeneralCloudInstanceResourceTagArrayOutputWithContext(ctx context.Context) GeneralCloudInstanceResourceTagArrayOutput {
	return o
}

func (o GeneralCloudInstanceResourceTagArrayOutput) Index(i pulumi.IntInput) GeneralCloudInstanceResourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeneralCloudInstanceResourceTag {
		return vs[0].([]GeneralCloudInstanceResourceTag)[vs[1].(int)]
	}).(GeneralCloudInstanceResourceTagOutput)
}

type MigrationMigrateDbSet struct {
	// Name of the migration database.
	DbName *string `pulumi:"dbName"`
}

// MigrationMigrateDbSetInput is an input type that accepts MigrationMigrateDbSetArgs and MigrationMigrateDbSetOutput values.
// You can construct a concrete instance of `MigrationMigrateDbSetInput` via:
//
//	MigrationMigrateDbSetArgs{...}
type MigrationMigrateDbSetInput interface {
	pulumi.Input

	ToMigrationMigrateDbSetOutput() MigrationMigrateDbSetOutput
	ToMigrationMigrateDbSetOutputWithContext(context.Context) MigrationMigrateDbSetOutput
}

type MigrationMigrateDbSetArgs struct {
	// Name of the migration database.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
}

func (MigrationMigrateDbSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationMigrateDbSet)(nil)).Elem()
}

func (i MigrationMigrateDbSetArgs) ToMigrationMigrateDbSetOutput() MigrationMigrateDbSetOutput {
	return i.ToMigrationMigrateDbSetOutputWithContext(context.Background())
}

func (i MigrationMigrateDbSetArgs) ToMigrationMigrateDbSetOutputWithContext(ctx context.Context) MigrationMigrateDbSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationMigrateDbSetOutput)
}

// MigrationMigrateDbSetArrayInput is an input type that accepts MigrationMigrateDbSetArray and MigrationMigrateDbSetArrayOutput values.
// You can construct a concrete instance of `MigrationMigrateDbSetArrayInput` via:
//
//	MigrationMigrateDbSetArray{ MigrationMigrateDbSetArgs{...} }
type MigrationMigrateDbSetArrayInput interface {
	pulumi.Input

	ToMigrationMigrateDbSetArrayOutput() MigrationMigrateDbSetArrayOutput
	ToMigrationMigrateDbSetArrayOutputWithContext(context.Context) MigrationMigrateDbSetArrayOutput
}

type MigrationMigrateDbSetArray []MigrationMigrateDbSetInput

func (MigrationMigrateDbSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationMigrateDbSet)(nil)).Elem()
}

func (i MigrationMigrateDbSetArray) ToMigrationMigrateDbSetArrayOutput() MigrationMigrateDbSetArrayOutput {
	return i.ToMigrationMigrateDbSetArrayOutputWithContext(context.Background())
}

func (i MigrationMigrateDbSetArray) ToMigrationMigrateDbSetArrayOutputWithContext(ctx context.Context) MigrationMigrateDbSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationMigrateDbSetArrayOutput)
}

type MigrationMigrateDbSetOutput struct{ *pulumi.OutputState }

func (MigrationMigrateDbSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationMigrateDbSet)(nil)).Elem()
}

func (o MigrationMigrateDbSetOutput) ToMigrationMigrateDbSetOutput() MigrationMigrateDbSetOutput {
	return o
}

func (o MigrationMigrateDbSetOutput) ToMigrationMigrateDbSetOutputWithContext(ctx context.Context) MigrationMigrateDbSetOutput {
	return o
}

// Name of the migration database.
func (o MigrationMigrateDbSetOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationMigrateDbSet) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

type MigrationMigrateDbSetArrayOutput struct{ *pulumi.OutputState }

func (MigrationMigrateDbSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationMigrateDbSet)(nil)).Elem()
}

func (o MigrationMigrateDbSetArrayOutput) ToMigrationMigrateDbSetArrayOutput() MigrationMigrateDbSetArrayOutput {
	return o
}

func (o MigrationMigrateDbSetArrayOutput) ToMigrationMigrateDbSetArrayOutputWithContext(ctx context.Context) MigrationMigrateDbSetArrayOutput {
	return o
}

func (o MigrationMigrateDbSetArrayOutput) Index(i pulumi.IntInput) MigrationMigrateDbSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrationMigrateDbSet {
		return vs[0].([]MigrationMigrateDbSet)[vs[1].(int)]
	}).(MigrationMigrateDbSetOutput)
}

type MigrationRenameRestore struct {
	// When the new name of the library is used for offline migration, if it is not filled in, it will be named according to OldName. OldName and NewName cannot be filled in at the same time. OldName and NewName must be filled in and cannot be duplicate when used for cloning database.
	NewName *string `pulumi:"newName"`
	// The name of the library. If oldName does not exist, a failure is returned.It can be left blank when used for offline migration tasks.
	OldName *string `pulumi:"oldName"`
}

// MigrationRenameRestoreInput is an input type that accepts MigrationRenameRestoreArgs and MigrationRenameRestoreOutput values.
// You can construct a concrete instance of `MigrationRenameRestoreInput` via:
//
//	MigrationRenameRestoreArgs{...}
type MigrationRenameRestoreInput interface {
	pulumi.Input

	ToMigrationRenameRestoreOutput() MigrationRenameRestoreOutput
	ToMigrationRenameRestoreOutputWithContext(context.Context) MigrationRenameRestoreOutput
}

type MigrationRenameRestoreArgs struct {
	// When the new name of the library is used for offline migration, if it is not filled in, it will be named according to OldName. OldName and NewName cannot be filled in at the same time. OldName and NewName must be filled in and cannot be duplicate when used for cloning database.
	NewName pulumi.StringPtrInput `pulumi:"newName"`
	// The name of the library. If oldName does not exist, a failure is returned.It can be left blank when used for offline migration tasks.
	OldName pulumi.StringPtrInput `pulumi:"oldName"`
}

func (MigrationRenameRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationRenameRestore)(nil)).Elem()
}

func (i MigrationRenameRestoreArgs) ToMigrationRenameRestoreOutput() MigrationRenameRestoreOutput {
	return i.ToMigrationRenameRestoreOutputWithContext(context.Background())
}

func (i MigrationRenameRestoreArgs) ToMigrationRenameRestoreOutputWithContext(ctx context.Context) MigrationRenameRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationRenameRestoreOutput)
}

// MigrationRenameRestoreArrayInput is an input type that accepts MigrationRenameRestoreArray and MigrationRenameRestoreArrayOutput values.
// You can construct a concrete instance of `MigrationRenameRestoreArrayInput` via:
//
//	MigrationRenameRestoreArray{ MigrationRenameRestoreArgs{...} }
type MigrationRenameRestoreArrayInput interface {
	pulumi.Input

	ToMigrationRenameRestoreArrayOutput() MigrationRenameRestoreArrayOutput
	ToMigrationRenameRestoreArrayOutputWithContext(context.Context) MigrationRenameRestoreArrayOutput
}

type MigrationRenameRestoreArray []MigrationRenameRestoreInput

func (MigrationRenameRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationRenameRestore)(nil)).Elem()
}

func (i MigrationRenameRestoreArray) ToMigrationRenameRestoreArrayOutput() MigrationRenameRestoreArrayOutput {
	return i.ToMigrationRenameRestoreArrayOutputWithContext(context.Background())
}

func (i MigrationRenameRestoreArray) ToMigrationRenameRestoreArrayOutputWithContext(ctx context.Context) MigrationRenameRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationRenameRestoreArrayOutput)
}

type MigrationRenameRestoreOutput struct{ *pulumi.OutputState }

func (MigrationRenameRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationRenameRestore)(nil)).Elem()
}

func (o MigrationRenameRestoreOutput) ToMigrationRenameRestoreOutput() MigrationRenameRestoreOutput {
	return o
}

func (o MigrationRenameRestoreOutput) ToMigrationRenameRestoreOutputWithContext(ctx context.Context) MigrationRenameRestoreOutput {
	return o
}

// When the new name of the library is used for offline migration, if it is not filled in, it will be named according to OldName. OldName and NewName cannot be filled in at the same time. OldName and NewName must be filled in and cannot be duplicate when used for cloning database.
func (o MigrationRenameRestoreOutput) NewName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationRenameRestore) *string { return v.NewName }).(pulumi.StringPtrOutput)
}

// The name of the library. If oldName does not exist, a failure is returned.It can be left blank when used for offline migration tasks.
func (o MigrationRenameRestoreOutput) OldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationRenameRestore) *string { return v.OldName }).(pulumi.StringPtrOutput)
}

type MigrationRenameRestoreArrayOutput struct{ *pulumi.OutputState }

func (MigrationRenameRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationRenameRestore)(nil)).Elem()
}

func (o MigrationRenameRestoreArrayOutput) ToMigrationRenameRestoreArrayOutput() MigrationRenameRestoreArrayOutput {
	return o
}

func (o MigrationRenameRestoreArrayOutput) ToMigrationRenameRestoreArrayOutputWithContext(ctx context.Context) MigrationRenameRestoreArrayOutput {
	return o
}

func (o MigrationRenameRestoreArrayOutput) Index(i pulumi.IntInput) MigrationRenameRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrationRenameRestore {
		return vs[0].([]MigrationRenameRestore)[vs[1].(int)]
	}).(MigrationRenameRestoreOutput)
}

type MigrationSource struct {
	// ID of the migration source Cvm, used when MigrateType=2 (cloud server self-built SQL Server database).
	CvmId *string `pulumi:"cvmId"`
	// The ID of the migration source instance, which is used when MigrateType=1 (TencentDB for SQLServers). The format is mssql-si2823jyl.
	InstanceId *string `pulumi:"instanceId"`
	// Migrate the intranet IP of the self-built database of the source Cvm, and use it when MigrateType=2 (self-built SQL Server database of the cloud server).
	Ip *string `pulumi:"ip"`
	// Password, MigrateType=1 or MigrateType=2.
	Password *string `pulumi:"password"`
	// The port number of the self-built database of the migration source Cvm, which is used when MigrateType=2 (self-built SQL Server database of the cloud server).
	Port *int `pulumi:"port"`
	// The subnet ID under the Vpc of the source Cvm is used when MigrateType=2 (ECS self-built SQL Server database). The format is as follows subnet-h9extioi.
	SubnetId *string `pulumi:"subnetId"`
	// The source backup password for offline migration, MigrateType=4 or MigrateType=5.
	UrlPassword *string `pulumi:"urlPassword"`
	// The source backup address for offline migration. MigrateType=4 or MigrateType=5.
	Urls []string `pulumi:"urls"`
	// User name, MigrateType=1 or MigrateType=2.
	UserName *string `pulumi:"userName"`
	// The Vpc network ID of the migration source Cvm is used when MigrateType=2 (cloud server self-built SQL Server database). The format is as follows vpc-6ys9ont9.
	VpcId *string `pulumi:"vpcId"`
}

// MigrationSourceInput is an input type that accepts MigrationSourceArgs and MigrationSourceOutput values.
// You can construct a concrete instance of `MigrationSourceInput` via:
//
//	MigrationSourceArgs{...}
type MigrationSourceInput interface {
	pulumi.Input

	ToMigrationSourceOutput() MigrationSourceOutput
	ToMigrationSourceOutputWithContext(context.Context) MigrationSourceOutput
}

type MigrationSourceArgs struct {
	// ID of the migration source Cvm, used when MigrateType=2 (cloud server self-built SQL Server database).
	CvmId pulumi.StringPtrInput `pulumi:"cvmId"`
	// The ID of the migration source instance, which is used when MigrateType=1 (TencentDB for SQLServers). The format is mssql-si2823jyl.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Migrate the intranet IP of the self-built database of the source Cvm, and use it when MigrateType=2 (self-built SQL Server database of the cloud server).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Password, MigrateType=1 or MigrateType=2.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The port number of the self-built database of the migration source Cvm, which is used when MigrateType=2 (self-built SQL Server database of the cloud server).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The subnet ID under the Vpc of the source Cvm is used when MigrateType=2 (ECS self-built SQL Server database). The format is as follows subnet-h9extioi.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The source backup password for offline migration, MigrateType=4 or MigrateType=5.
	UrlPassword pulumi.StringPtrInput `pulumi:"urlPassword"`
	// The source backup address for offline migration. MigrateType=4 or MigrateType=5.
	Urls pulumi.StringArrayInput `pulumi:"urls"`
	// User name, MigrateType=1 or MigrateType=2.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// The Vpc network ID of the migration source Cvm is used when MigrateType=2 (cloud server self-built SQL Server database). The format is as follows vpc-6ys9ont9.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (MigrationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationSource)(nil)).Elem()
}

func (i MigrationSourceArgs) ToMigrationSourceOutput() MigrationSourceOutput {
	return i.ToMigrationSourceOutputWithContext(context.Background())
}

func (i MigrationSourceArgs) ToMigrationSourceOutputWithContext(ctx context.Context) MigrationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationSourceOutput)
}

func (i MigrationSourceArgs) ToMigrationSourcePtrOutput() MigrationSourcePtrOutput {
	return i.ToMigrationSourcePtrOutputWithContext(context.Background())
}

func (i MigrationSourceArgs) ToMigrationSourcePtrOutputWithContext(ctx context.Context) MigrationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationSourceOutput).ToMigrationSourcePtrOutputWithContext(ctx)
}

// MigrationSourcePtrInput is an input type that accepts MigrationSourceArgs, MigrationSourcePtr and MigrationSourcePtrOutput values.
// You can construct a concrete instance of `MigrationSourcePtrInput` via:
//
//	        MigrationSourceArgs{...}
//
//	or:
//
//	        nil
type MigrationSourcePtrInput interface {
	pulumi.Input

	ToMigrationSourcePtrOutput() MigrationSourcePtrOutput
	ToMigrationSourcePtrOutputWithContext(context.Context) MigrationSourcePtrOutput
}

type migrationSourcePtrType MigrationSourceArgs

func MigrationSourcePtr(v *MigrationSourceArgs) MigrationSourcePtrInput {
	return (*migrationSourcePtrType)(v)
}

func (*migrationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationSource)(nil)).Elem()
}

func (i *migrationSourcePtrType) ToMigrationSourcePtrOutput() MigrationSourcePtrOutput {
	return i.ToMigrationSourcePtrOutputWithContext(context.Background())
}

func (i *migrationSourcePtrType) ToMigrationSourcePtrOutputWithContext(ctx context.Context) MigrationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationSourcePtrOutput)
}

type MigrationSourceOutput struct{ *pulumi.OutputState }

func (MigrationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationSource)(nil)).Elem()
}

func (o MigrationSourceOutput) ToMigrationSourceOutput() MigrationSourceOutput {
	return o
}

func (o MigrationSourceOutput) ToMigrationSourceOutputWithContext(ctx context.Context) MigrationSourceOutput {
	return o
}

func (o MigrationSourceOutput) ToMigrationSourcePtrOutput() MigrationSourcePtrOutput {
	return o.ToMigrationSourcePtrOutputWithContext(context.Background())
}

func (o MigrationSourceOutput) ToMigrationSourcePtrOutputWithContext(ctx context.Context) MigrationSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationSource) *MigrationSource {
		return &v
	}).(MigrationSourcePtrOutput)
}

// ID of the migration source Cvm, used when MigrateType=2 (cloud server self-built SQL Server database).
func (o MigrationSourceOutput) CvmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.CvmId }).(pulumi.StringPtrOutput)
}

// The ID of the migration source instance, which is used when MigrateType=1 (TencentDB for SQLServers). The format is mssql-si2823jyl.
func (o MigrationSourceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Migrate the intranet IP of the self-built database of the source Cvm, and use it when MigrateType=2 (self-built SQL Server database of the cloud server).
func (o MigrationSourceOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Password, MigrateType=1 or MigrateType=2.
func (o MigrationSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The port number of the self-built database of the migration source Cvm, which is used when MigrateType=2 (self-built SQL Server database of the cloud server).
func (o MigrationSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MigrationSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The subnet ID under the Vpc of the source Cvm is used when MigrateType=2 (ECS self-built SQL Server database). The format is as follows subnet-h9extioi.
func (o MigrationSourceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The source backup password for offline migration, MigrateType=4 or MigrateType=5.
func (o MigrationSourceOutput) UrlPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.UrlPassword }).(pulumi.StringPtrOutput)
}

// The source backup address for offline migration. MigrateType=4 or MigrateType=5.
func (o MigrationSourceOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationSource) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

// User name, MigrateType=1 or MigrateType=2.
func (o MigrationSourceOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// The Vpc network ID of the migration source Cvm is used when MigrateType=2 (cloud server self-built SQL Server database). The format is as follows vpc-6ys9ont9.
func (o MigrationSourceOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSource) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type MigrationSourcePtrOutput struct{ *pulumi.OutputState }

func (MigrationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationSource)(nil)).Elem()
}

func (o MigrationSourcePtrOutput) ToMigrationSourcePtrOutput() MigrationSourcePtrOutput {
	return o
}

func (o MigrationSourcePtrOutput) ToMigrationSourcePtrOutputWithContext(ctx context.Context) MigrationSourcePtrOutput {
	return o
}

func (o MigrationSourcePtrOutput) Elem() MigrationSourceOutput {
	return o.ApplyT(func(v *MigrationSource) MigrationSource {
		if v != nil {
			return *v
		}
		var ret MigrationSource
		return ret
	}).(MigrationSourceOutput)
}

// ID of the migration source Cvm, used when MigrateType=2 (cloud server self-built SQL Server database).
func (o MigrationSourcePtrOutput) CvmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.CvmId
	}).(pulumi.StringPtrOutput)
}

// The ID of the migration source instance, which is used when MigrateType=1 (TencentDB for SQLServers). The format is mssql-si2823jyl.
func (o MigrationSourcePtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// Migrate the intranet IP of the self-built database of the source Cvm, and use it when MigrateType=2 (self-built SQL Server database of the cloud server).
func (o MigrationSourcePtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Password, MigrateType=1 or MigrateType=2.
func (o MigrationSourcePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The port number of the self-built database of the migration source Cvm, which is used when MigrateType=2 (self-built SQL Server database of the cloud server).
func (o MigrationSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The subnet ID under the Vpc of the source Cvm is used when MigrateType=2 (ECS self-built SQL Server database). The format is as follows subnet-h9extioi.
func (o MigrationSourcePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The source backup password for offline migration, MigrateType=4 or MigrateType=5.
func (o MigrationSourcePtrOutput) UrlPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.UrlPassword
	}).(pulumi.StringPtrOutput)
}

// The source backup address for offline migration. MigrateType=4 or MigrateType=5.
func (o MigrationSourcePtrOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrationSource) []string {
		if v == nil {
			return nil
		}
		return v.Urls
	}).(pulumi.StringArrayOutput)
}

// User name, MigrateType=1 or MigrateType=2.
func (o MigrationSourcePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// The Vpc network ID of the migration source Cvm is used when MigrateType=2 (cloud server self-built SQL Server database). The format is as follows vpc-6ys9ont9.
func (o MigrationSourcePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSource) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type MigrationTarget struct {
	// The ID of the migration target instance, in the format mssql-si2823jyl.
	InstanceId *string `pulumi:"instanceId"`
	// Password of the migration target instance.
	Password *string `pulumi:"password"`
	// User name of the migration target instance.
	UserName *string `pulumi:"userName"`
}

// MigrationTargetInput is an input type that accepts MigrationTargetArgs and MigrationTargetOutput values.
// You can construct a concrete instance of `MigrationTargetInput` via:
//
//	MigrationTargetArgs{...}
type MigrationTargetInput interface {
	pulumi.Input

	ToMigrationTargetOutput() MigrationTargetOutput
	ToMigrationTargetOutputWithContext(context.Context) MigrationTargetOutput
}

type MigrationTargetArgs struct {
	// The ID of the migration target instance, in the format mssql-si2823jyl.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Password of the migration target instance.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// User name of the migration target instance.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MigrationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationTarget)(nil)).Elem()
}

func (i MigrationTargetArgs) ToMigrationTargetOutput() MigrationTargetOutput {
	return i.ToMigrationTargetOutputWithContext(context.Background())
}

func (i MigrationTargetArgs) ToMigrationTargetOutputWithContext(ctx context.Context) MigrationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationTargetOutput)
}

func (i MigrationTargetArgs) ToMigrationTargetPtrOutput() MigrationTargetPtrOutput {
	return i.ToMigrationTargetPtrOutputWithContext(context.Background())
}

func (i MigrationTargetArgs) ToMigrationTargetPtrOutputWithContext(ctx context.Context) MigrationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationTargetOutput).ToMigrationTargetPtrOutputWithContext(ctx)
}

// MigrationTargetPtrInput is an input type that accepts MigrationTargetArgs, MigrationTargetPtr and MigrationTargetPtrOutput values.
// You can construct a concrete instance of `MigrationTargetPtrInput` via:
//
//	        MigrationTargetArgs{...}
//
//	or:
//
//	        nil
type MigrationTargetPtrInput interface {
	pulumi.Input

	ToMigrationTargetPtrOutput() MigrationTargetPtrOutput
	ToMigrationTargetPtrOutputWithContext(context.Context) MigrationTargetPtrOutput
}

type migrationTargetPtrType MigrationTargetArgs

func MigrationTargetPtr(v *MigrationTargetArgs) MigrationTargetPtrInput {
	return (*migrationTargetPtrType)(v)
}

func (*migrationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationTarget)(nil)).Elem()
}

func (i *migrationTargetPtrType) ToMigrationTargetPtrOutput() MigrationTargetPtrOutput {
	return i.ToMigrationTargetPtrOutputWithContext(context.Background())
}

func (i *migrationTargetPtrType) ToMigrationTargetPtrOutputWithContext(ctx context.Context) MigrationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationTargetPtrOutput)
}

type MigrationTargetOutput struct{ *pulumi.OutputState }

func (MigrationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationTarget)(nil)).Elem()
}

func (o MigrationTargetOutput) ToMigrationTargetOutput() MigrationTargetOutput {
	return o
}

func (o MigrationTargetOutput) ToMigrationTargetOutputWithContext(ctx context.Context) MigrationTargetOutput {
	return o
}

func (o MigrationTargetOutput) ToMigrationTargetPtrOutput() MigrationTargetPtrOutput {
	return o.ToMigrationTargetPtrOutputWithContext(context.Background())
}

func (o MigrationTargetOutput) ToMigrationTargetPtrOutputWithContext(ctx context.Context) MigrationTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationTarget) *MigrationTarget {
		return &v
	}).(MigrationTargetPtrOutput)
}

// The ID of the migration target instance, in the format mssql-si2823jyl.
func (o MigrationTargetOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationTarget) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Password of the migration target instance.
func (o MigrationTargetOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationTarget) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// User name of the migration target instance.
func (o MigrationTargetOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationTarget) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MigrationTargetPtrOutput struct{ *pulumi.OutputState }

func (MigrationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationTarget)(nil)).Elem()
}

func (o MigrationTargetPtrOutput) ToMigrationTargetPtrOutput() MigrationTargetPtrOutput {
	return o
}

func (o MigrationTargetPtrOutput) ToMigrationTargetPtrOutputWithContext(ctx context.Context) MigrationTargetPtrOutput {
	return o
}

func (o MigrationTargetPtrOutput) Elem() MigrationTargetOutput {
	return o.ApplyT(func(v *MigrationTarget) MigrationTarget {
		if v != nil {
			return *v
		}
		var ret MigrationTarget
		return ret
	}).(MigrationTargetOutput)
}

// The ID of the migration target instance, in the format mssql-si2823jyl.
func (o MigrationTargetPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationTarget) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// Password of the migration target instance.
func (o MigrationTargetPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationTarget) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// User name of the migration target instance.
func (o MigrationTargetPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationTarget) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type PublishSubscribeDatabaseTuple struct {
	// Publish the database.
	PublishDatabase string `pulumi:"publishDatabase"`
	// Subscribe the database.
	SubscribeDatabase string `pulumi:"subscribeDatabase"`
}

// PublishSubscribeDatabaseTupleInput is an input type that accepts PublishSubscribeDatabaseTupleArgs and PublishSubscribeDatabaseTupleOutput values.
// You can construct a concrete instance of `PublishSubscribeDatabaseTupleInput` via:
//
//	PublishSubscribeDatabaseTupleArgs{...}
type PublishSubscribeDatabaseTupleInput interface {
	pulumi.Input

	ToPublishSubscribeDatabaseTupleOutput() PublishSubscribeDatabaseTupleOutput
	ToPublishSubscribeDatabaseTupleOutputWithContext(context.Context) PublishSubscribeDatabaseTupleOutput
}

type PublishSubscribeDatabaseTupleArgs struct {
	// Publish the database.
	PublishDatabase pulumi.StringInput `pulumi:"publishDatabase"`
	// Subscribe the database.
	SubscribeDatabase pulumi.StringInput `pulumi:"subscribeDatabase"`
}

func (PublishSubscribeDatabaseTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishSubscribeDatabaseTuple)(nil)).Elem()
}

func (i PublishSubscribeDatabaseTupleArgs) ToPublishSubscribeDatabaseTupleOutput() PublishSubscribeDatabaseTupleOutput {
	return i.ToPublishSubscribeDatabaseTupleOutputWithContext(context.Background())
}

func (i PublishSubscribeDatabaseTupleArgs) ToPublishSubscribeDatabaseTupleOutputWithContext(ctx context.Context) PublishSubscribeDatabaseTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublishSubscribeDatabaseTupleOutput)
}

// PublishSubscribeDatabaseTupleArrayInput is an input type that accepts PublishSubscribeDatabaseTupleArray and PublishSubscribeDatabaseTupleArrayOutput values.
// You can construct a concrete instance of `PublishSubscribeDatabaseTupleArrayInput` via:
//
//	PublishSubscribeDatabaseTupleArray{ PublishSubscribeDatabaseTupleArgs{...} }
type PublishSubscribeDatabaseTupleArrayInput interface {
	pulumi.Input

	ToPublishSubscribeDatabaseTupleArrayOutput() PublishSubscribeDatabaseTupleArrayOutput
	ToPublishSubscribeDatabaseTupleArrayOutputWithContext(context.Context) PublishSubscribeDatabaseTupleArrayOutput
}

type PublishSubscribeDatabaseTupleArray []PublishSubscribeDatabaseTupleInput

func (PublishSubscribeDatabaseTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublishSubscribeDatabaseTuple)(nil)).Elem()
}

func (i PublishSubscribeDatabaseTupleArray) ToPublishSubscribeDatabaseTupleArrayOutput() PublishSubscribeDatabaseTupleArrayOutput {
	return i.ToPublishSubscribeDatabaseTupleArrayOutputWithContext(context.Background())
}

func (i PublishSubscribeDatabaseTupleArray) ToPublishSubscribeDatabaseTupleArrayOutputWithContext(ctx context.Context) PublishSubscribeDatabaseTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublishSubscribeDatabaseTupleArrayOutput)
}

type PublishSubscribeDatabaseTupleOutput struct{ *pulumi.OutputState }

func (PublishSubscribeDatabaseTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishSubscribeDatabaseTuple)(nil)).Elem()
}

func (o PublishSubscribeDatabaseTupleOutput) ToPublishSubscribeDatabaseTupleOutput() PublishSubscribeDatabaseTupleOutput {
	return o
}

func (o PublishSubscribeDatabaseTupleOutput) ToPublishSubscribeDatabaseTupleOutputWithContext(ctx context.Context) PublishSubscribeDatabaseTupleOutput {
	return o
}

// Publish the database.
func (o PublishSubscribeDatabaseTupleOutput) PublishDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v PublishSubscribeDatabaseTuple) string { return v.PublishDatabase }).(pulumi.StringOutput)
}

// Subscribe the database.
func (o PublishSubscribeDatabaseTupleOutput) SubscribeDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v PublishSubscribeDatabaseTuple) string { return v.SubscribeDatabase }).(pulumi.StringOutput)
}

type PublishSubscribeDatabaseTupleArrayOutput struct{ *pulumi.OutputState }

func (PublishSubscribeDatabaseTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublishSubscribeDatabaseTuple)(nil)).Elem()
}

func (o PublishSubscribeDatabaseTupleArrayOutput) ToPublishSubscribeDatabaseTupleArrayOutput() PublishSubscribeDatabaseTupleArrayOutput {
	return o
}

func (o PublishSubscribeDatabaseTupleArrayOutput) ToPublishSubscribeDatabaseTupleArrayOutputWithContext(ctx context.Context) PublishSubscribeDatabaseTupleArrayOutput {
	return o
}

func (o PublishSubscribeDatabaseTupleArrayOutput) Index(i pulumi.IntInput) PublishSubscribeDatabaseTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublishSubscribeDatabaseTuple {
		return vs[0].([]PublishSubscribeDatabaseTuple)[vs[1].(int)]
	}).(PublishSubscribeDatabaseTupleOutput)
}

type RestoreInstanceEncryption struct {
	// Database name.
	DbName *string `pulumi:"dbName"`
	// encryption, `enable` encrypted, `disable` unencrypted.
	Status *string `pulumi:"status"`
}

// RestoreInstanceEncryptionInput is an input type that accepts RestoreInstanceEncryptionArgs and RestoreInstanceEncryptionOutput values.
// You can construct a concrete instance of `RestoreInstanceEncryptionInput` via:
//
//	RestoreInstanceEncryptionArgs{...}
type RestoreInstanceEncryptionInput interface {
	pulumi.Input

	ToRestoreInstanceEncryptionOutput() RestoreInstanceEncryptionOutput
	ToRestoreInstanceEncryptionOutputWithContext(context.Context) RestoreInstanceEncryptionOutput
}

type RestoreInstanceEncryptionArgs struct {
	// Database name.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
	// encryption, `enable` encrypted, `disable` unencrypted.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RestoreInstanceEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreInstanceEncryption)(nil)).Elem()
}

func (i RestoreInstanceEncryptionArgs) ToRestoreInstanceEncryptionOutput() RestoreInstanceEncryptionOutput {
	return i.ToRestoreInstanceEncryptionOutputWithContext(context.Background())
}

func (i RestoreInstanceEncryptionArgs) ToRestoreInstanceEncryptionOutputWithContext(ctx context.Context) RestoreInstanceEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceEncryptionOutput)
}

// RestoreInstanceEncryptionArrayInput is an input type that accepts RestoreInstanceEncryptionArray and RestoreInstanceEncryptionArrayOutput values.
// You can construct a concrete instance of `RestoreInstanceEncryptionArrayInput` via:
//
//	RestoreInstanceEncryptionArray{ RestoreInstanceEncryptionArgs{...} }
type RestoreInstanceEncryptionArrayInput interface {
	pulumi.Input

	ToRestoreInstanceEncryptionArrayOutput() RestoreInstanceEncryptionArrayOutput
	ToRestoreInstanceEncryptionArrayOutputWithContext(context.Context) RestoreInstanceEncryptionArrayOutput
}

type RestoreInstanceEncryptionArray []RestoreInstanceEncryptionInput

func (RestoreInstanceEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreInstanceEncryption)(nil)).Elem()
}

func (i RestoreInstanceEncryptionArray) ToRestoreInstanceEncryptionArrayOutput() RestoreInstanceEncryptionArrayOutput {
	return i.ToRestoreInstanceEncryptionArrayOutputWithContext(context.Background())
}

func (i RestoreInstanceEncryptionArray) ToRestoreInstanceEncryptionArrayOutputWithContext(ctx context.Context) RestoreInstanceEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceEncryptionArrayOutput)
}

type RestoreInstanceEncryptionOutput struct{ *pulumi.OutputState }

func (RestoreInstanceEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreInstanceEncryption)(nil)).Elem()
}

func (o RestoreInstanceEncryptionOutput) ToRestoreInstanceEncryptionOutput() RestoreInstanceEncryptionOutput {
	return o
}

func (o RestoreInstanceEncryptionOutput) ToRestoreInstanceEncryptionOutputWithContext(ctx context.Context) RestoreInstanceEncryptionOutput {
	return o
}

// Database name.
func (o RestoreInstanceEncryptionOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreInstanceEncryption) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

// encryption, `enable` encrypted, `disable` unencrypted.
func (o RestoreInstanceEncryptionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreInstanceEncryption) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RestoreInstanceEncryptionArrayOutput struct{ *pulumi.OutputState }

func (RestoreInstanceEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreInstanceEncryption)(nil)).Elem()
}

func (o RestoreInstanceEncryptionArrayOutput) ToRestoreInstanceEncryptionArrayOutput() RestoreInstanceEncryptionArrayOutput {
	return o
}

func (o RestoreInstanceEncryptionArrayOutput) ToRestoreInstanceEncryptionArrayOutputWithContext(ctx context.Context) RestoreInstanceEncryptionArrayOutput {
	return o
}

func (o RestoreInstanceEncryptionArrayOutput) Index(i pulumi.IntInput) RestoreInstanceEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestoreInstanceEncryption {
		return vs[0].([]RestoreInstanceEncryption)[vs[1].(int)]
	}).(RestoreInstanceEncryptionOutput)
}

type RestoreInstanceRenameRestore struct {
	// New database name. In offline migration, OldName will be used if NewName is left empty (OldName and NewName cannot be both empty). In database cloning, OldName and NewName must be both specified and cannot have the same value.
	NewName string `pulumi:"newName"`
	// Database name. If the OldName database does not exist, a failure will be returned.It can be left empty in offline migration tasks.
	OldName string `pulumi:"oldName"`
}

// RestoreInstanceRenameRestoreInput is an input type that accepts RestoreInstanceRenameRestoreArgs and RestoreInstanceRenameRestoreOutput values.
// You can construct a concrete instance of `RestoreInstanceRenameRestoreInput` via:
//
//	RestoreInstanceRenameRestoreArgs{...}
type RestoreInstanceRenameRestoreInput interface {
	pulumi.Input

	ToRestoreInstanceRenameRestoreOutput() RestoreInstanceRenameRestoreOutput
	ToRestoreInstanceRenameRestoreOutputWithContext(context.Context) RestoreInstanceRenameRestoreOutput
}

type RestoreInstanceRenameRestoreArgs struct {
	// New database name. In offline migration, OldName will be used if NewName is left empty (OldName and NewName cannot be both empty). In database cloning, OldName and NewName must be both specified and cannot have the same value.
	NewName pulumi.StringInput `pulumi:"newName"`
	// Database name. If the OldName database does not exist, a failure will be returned.It can be left empty in offline migration tasks.
	OldName pulumi.StringInput `pulumi:"oldName"`
}

func (RestoreInstanceRenameRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreInstanceRenameRestore)(nil)).Elem()
}

func (i RestoreInstanceRenameRestoreArgs) ToRestoreInstanceRenameRestoreOutput() RestoreInstanceRenameRestoreOutput {
	return i.ToRestoreInstanceRenameRestoreOutputWithContext(context.Background())
}

func (i RestoreInstanceRenameRestoreArgs) ToRestoreInstanceRenameRestoreOutputWithContext(ctx context.Context) RestoreInstanceRenameRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceRenameRestoreOutput)
}

// RestoreInstanceRenameRestoreArrayInput is an input type that accepts RestoreInstanceRenameRestoreArray and RestoreInstanceRenameRestoreArrayOutput values.
// You can construct a concrete instance of `RestoreInstanceRenameRestoreArrayInput` via:
//
//	RestoreInstanceRenameRestoreArray{ RestoreInstanceRenameRestoreArgs{...} }
type RestoreInstanceRenameRestoreArrayInput interface {
	pulumi.Input

	ToRestoreInstanceRenameRestoreArrayOutput() RestoreInstanceRenameRestoreArrayOutput
	ToRestoreInstanceRenameRestoreArrayOutputWithContext(context.Context) RestoreInstanceRenameRestoreArrayOutput
}

type RestoreInstanceRenameRestoreArray []RestoreInstanceRenameRestoreInput

func (RestoreInstanceRenameRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreInstanceRenameRestore)(nil)).Elem()
}

func (i RestoreInstanceRenameRestoreArray) ToRestoreInstanceRenameRestoreArrayOutput() RestoreInstanceRenameRestoreArrayOutput {
	return i.ToRestoreInstanceRenameRestoreArrayOutputWithContext(context.Background())
}

func (i RestoreInstanceRenameRestoreArray) ToRestoreInstanceRenameRestoreArrayOutputWithContext(ctx context.Context) RestoreInstanceRenameRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceRenameRestoreArrayOutput)
}

type RestoreInstanceRenameRestoreOutput struct{ *pulumi.OutputState }

func (RestoreInstanceRenameRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreInstanceRenameRestore)(nil)).Elem()
}

func (o RestoreInstanceRenameRestoreOutput) ToRestoreInstanceRenameRestoreOutput() RestoreInstanceRenameRestoreOutput {
	return o
}

func (o RestoreInstanceRenameRestoreOutput) ToRestoreInstanceRenameRestoreOutputWithContext(ctx context.Context) RestoreInstanceRenameRestoreOutput {
	return o
}

// New database name. In offline migration, OldName will be used if NewName is left empty (OldName and NewName cannot be both empty). In database cloning, OldName and NewName must be both specified and cannot have the same value.
func (o RestoreInstanceRenameRestoreOutput) NewName() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreInstanceRenameRestore) string { return v.NewName }).(pulumi.StringOutput)
}

// Database name. If the OldName database does not exist, a failure will be returned.It can be left empty in offline migration tasks.
func (o RestoreInstanceRenameRestoreOutput) OldName() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreInstanceRenameRestore) string { return v.OldName }).(pulumi.StringOutput)
}

type RestoreInstanceRenameRestoreArrayOutput struct{ *pulumi.OutputState }

func (RestoreInstanceRenameRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreInstanceRenameRestore)(nil)).Elem()
}

func (o RestoreInstanceRenameRestoreArrayOutput) ToRestoreInstanceRenameRestoreArrayOutput() RestoreInstanceRenameRestoreArrayOutput {
	return o
}

func (o RestoreInstanceRenameRestoreArrayOutput) ToRestoreInstanceRenameRestoreArrayOutputWithContext(ctx context.Context) RestoreInstanceRenameRestoreArrayOutput {
	return o
}

func (o RestoreInstanceRenameRestoreArrayOutput) Index(i pulumi.IntInput) RestoreInstanceRenameRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestoreInstanceRenameRestore {
		return vs[0].([]RestoreInstanceRenameRestore)[vs[1].(int)]
	}).(RestoreInstanceRenameRestoreOutput)
}

type RollbackInstanceEncryption struct {
	// Database name.
	DbName *string `pulumi:"dbName"`
	// encryption, `enable` encrypted, `disable` unencrypted.
	Status *string `pulumi:"status"`
}

// RollbackInstanceEncryptionInput is an input type that accepts RollbackInstanceEncryptionArgs and RollbackInstanceEncryptionOutput values.
// You can construct a concrete instance of `RollbackInstanceEncryptionInput` via:
//
//	RollbackInstanceEncryptionArgs{...}
type RollbackInstanceEncryptionInput interface {
	pulumi.Input

	ToRollbackInstanceEncryptionOutput() RollbackInstanceEncryptionOutput
	ToRollbackInstanceEncryptionOutputWithContext(context.Context) RollbackInstanceEncryptionOutput
}

type RollbackInstanceEncryptionArgs struct {
	// Database name.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
	// encryption, `enable` encrypted, `disable` unencrypted.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RollbackInstanceEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RollbackInstanceEncryption)(nil)).Elem()
}

func (i RollbackInstanceEncryptionArgs) ToRollbackInstanceEncryptionOutput() RollbackInstanceEncryptionOutput {
	return i.ToRollbackInstanceEncryptionOutputWithContext(context.Background())
}

func (i RollbackInstanceEncryptionArgs) ToRollbackInstanceEncryptionOutputWithContext(ctx context.Context) RollbackInstanceEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceEncryptionOutput)
}

// RollbackInstanceEncryptionArrayInput is an input type that accepts RollbackInstanceEncryptionArray and RollbackInstanceEncryptionArrayOutput values.
// You can construct a concrete instance of `RollbackInstanceEncryptionArrayInput` via:
//
//	RollbackInstanceEncryptionArray{ RollbackInstanceEncryptionArgs{...} }
type RollbackInstanceEncryptionArrayInput interface {
	pulumi.Input

	ToRollbackInstanceEncryptionArrayOutput() RollbackInstanceEncryptionArrayOutput
	ToRollbackInstanceEncryptionArrayOutputWithContext(context.Context) RollbackInstanceEncryptionArrayOutput
}

type RollbackInstanceEncryptionArray []RollbackInstanceEncryptionInput

func (RollbackInstanceEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RollbackInstanceEncryption)(nil)).Elem()
}

func (i RollbackInstanceEncryptionArray) ToRollbackInstanceEncryptionArrayOutput() RollbackInstanceEncryptionArrayOutput {
	return i.ToRollbackInstanceEncryptionArrayOutputWithContext(context.Background())
}

func (i RollbackInstanceEncryptionArray) ToRollbackInstanceEncryptionArrayOutputWithContext(ctx context.Context) RollbackInstanceEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceEncryptionArrayOutput)
}

type RollbackInstanceEncryptionOutput struct{ *pulumi.OutputState }

func (RollbackInstanceEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RollbackInstanceEncryption)(nil)).Elem()
}

func (o RollbackInstanceEncryptionOutput) ToRollbackInstanceEncryptionOutput() RollbackInstanceEncryptionOutput {
	return o
}

func (o RollbackInstanceEncryptionOutput) ToRollbackInstanceEncryptionOutputWithContext(ctx context.Context) RollbackInstanceEncryptionOutput {
	return o
}

// Database name.
func (o RollbackInstanceEncryptionOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RollbackInstanceEncryption) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

// encryption, `enable` encrypted, `disable` unencrypted.
func (o RollbackInstanceEncryptionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RollbackInstanceEncryption) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RollbackInstanceEncryptionArrayOutput struct{ *pulumi.OutputState }

func (RollbackInstanceEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RollbackInstanceEncryption)(nil)).Elem()
}

func (o RollbackInstanceEncryptionArrayOutput) ToRollbackInstanceEncryptionArrayOutput() RollbackInstanceEncryptionArrayOutput {
	return o
}

func (o RollbackInstanceEncryptionArrayOutput) ToRollbackInstanceEncryptionArrayOutputWithContext(ctx context.Context) RollbackInstanceEncryptionArrayOutput {
	return o
}

func (o RollbackInstanceEncryptionArrayOutput) Index(i pulumi.IntInput) RollbackInstanceEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RollbackInstanceEncryption {
		return vs[0].([]RollbackInstanceEncryption)[vs[1].(int)]
	}).(RollbackInstanceEncryptionOutput)
}

type RollbackInstanceRenameRestore struct {
	// New database name.
	NewName string `pulumi:"newName"`
	// Database name. If the OldName database does not exist, a failure will be returned. It can be left empty in offline migration tasks.
	OldName string `pulumi:"oldName"`
}

// RollbackInstanceRenameRestoreInput is an input type that accepts RollbackInstanceRenameRestoreArgs and RollbackInstanceRenameRestoreOutput values.
// You can construct a concrete instance of `RollbackInstanceRenameRestoreInput` via:
//
//	RollbackInstanceRenameRestoreArgs{...}
type RollbackInstanceRenameRestoreInput interface {
	pulumi.Input

	ToRollbackInstanceRenameRestoreOutput() RollbackInstanceRenameRestoreOutput
	ToRollbackInstanceRenameRestoreOutputWithContext(context.Context) RollbackInstanceRenameRestoreOutput
}

type RollbackInstanceRenameRestoreArgs struct {
	// New database name.
	NewName pulumi.StringInput `pulumi:"newName"`
	// Database name. If the OldName database does not exist, a failure will be returned. It can be left empty in offline migration tasks.
	OldName pulumi.StringInput `pulumi:"oldName"`
}

func (RollbackInstanceRenameRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RollbackInstanceRenameRestore)(nil)).Elem()
}

func (i RollbackInstanceRenameRestoreArgs) ToRollbackInstanceRenameRestoreOutput() RollbackInstanceRenameRestoreOutput {
	return i.ToRollbackInstanceRenameRestoreOutputWithContext(context.Background())
}

func (i RollbackInstanceRenameRestoreArgs) ToRollbackInstanceRenameRestoreOutputWithContext(ctx context.Context) RollbackInstanceRenameRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceRenameRestoreOutput)
}

// RollbackInstanceRenameRestoreArrayInput is an input type that accepts RollbackInstanceRenameRestoreArray and RollbackInstanceRenameRestoreArrayOutput values.
// You can construct a concrete instance of `RollbackInstanceRenameRestoreArrayInput` via:
//
//	RollbackInstanceRenameRestoreArray{ RollbackInstanceRenameRestoreArgs{...} }
type RollbackInstanceRenameRestoreArrayInput interface {
	pulumi.Input

	ToRollbackInstanceRenameRestoreArrayOutput() RollbackInstanceRenameRestoreArrayOutput
	ToRollbackInstanceRenameRestoreArrayOutputWithContext(context.Context) RollbackInstanceRenameRestoreArrayOutput
}

type RollbackInstanceRenameRestoreArray []RollbackInstanceRenameRestoreInput

func (RollbackInstanceRenameRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RollbackInstanceRenameRestore)(nil)).Elem()
}

func (i RollbackInstanceRenameRestoreArray) ToRollbackInstanceRenameRestoreArrayOutput() RollbackInstanceRenameRestoreArrayOutput {
	return i.ToRollbackInstanceRenameRestoreArrayOutputWithContext(context.Background())
}

func (i RollbackInstanceRenameRestoreArray) ToRollbackInstanceRenameRestoreArrayOutputWithContext(ctx context.Context) RollbackInstanceRenameRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceRenameRestoreArrayOutput)
}

type RollbackInstanceRenameRestoreOutput struct{ *pulumi.OutputState }

func (RollbackInstanceRenameRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RollbackInstanceRenameRestore)(nil)).Elem()
}

func (o RollbackInstanceRenameRestoreOutput) ToRollbackInstanceRenameRestoreOutput() RollbackInstanceRenameRestoreOutput {
	return o
}

func (o RollbackInstanceRenameRestoreOutput) ToRollbackInstanceRenameRestoreOutputWithContext(ctx context.Context) RollbackInstanceRenameRestoreOutput {
	return o
}

// New database name.
func (o RollbackInstanceRenameRestoreOutput) NewName() pulumi.StringOutput {
	return o.ApplyT(func(v RollbackInstanceRenameRestore) string { return v.NewName }).(pulumi.StringOutput)
}

// Database name. If the OldName database does not exist, a failure will be returned. It can be left empty in offline migration tasks.
func (o RollbackInstanceRenameRestoreOutput) OldName() pulumi.StringOutput {
	return o.ApplyT(func(v RollbackInstanceRenameRestore) string { return v.OldName }).(pulumi.StringOutput)
}

type RollbackInstanceRenameRestoreArrayOutput struct{ *pulumi.OutputState }

func (RollbackInstanceRenameRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RollbackInstanceRenameRestore)(nil)).Elem()
}

func (o RollbackInstanceRenameRestoreArrayOutput) ToRollbackInstanceRenameRestoreArrayOutput() RollbackInstanceRenameRestoreArrayOutput {
	return o
}

func (o RollbackInstanceRenameRestoreArrayOutput) ToRollbackInstanceRenameRestoreArrayOutputWithContext(ctx context.Context) RollbackInstanceRenameRestoreArrayOutput {
	return o
}

func (o RollbackInstanceRenameRestoreArrayOutput) Index(i pulumi.IntInput) RollbackInstanceRenameRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RollbackInstanceRenameRestore {
		return vs[0].([]RollbackInstanceRenameRestore)[vs[1].(int)]
	}).(RollbackInstanceRenameRestoreOutput)
}

type StartXeventEventConfig struct {
	// Event type. Valid values: slow (set threshold for slow SQL ), blocked (set threshold for the blocking and deadlock).
	EventType string `pulumi:"eventType"`
	// Threshold in milliseconds. Valid values: 0(disable), non-zero (enable).
	Threshold int `pulumi:"threshold"`
}

// StartXeventEventConfigInput is an input type that accepts StartXeventEventConfigArgs and StartXeventEventConfigOutput values.
// You can construct a concrete instance of `StartXeventEventConfigInput` via:
//
//	StartXeventEventConfigArgs{...}
type StartXeventEventConfigInput interface {
	pulumi.Input

	ToStartXeventEventConfigOutput() StartXeventEventConfigOutput
	ToStartXeventEventConfigOutputWithContext(context.Context) StartXeventEventConfigOutput
}

type StartXeventEventConfigArgs struct {
	// Event type. Valid values: slow (set threshold for slow SQL ), blocked (set threshold for the blocking and deadlock).
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Threshold in milliseconds. Valid values: 0(disable), non-zero (enable).
	Threshold pulumi.IntInput `pulumi:"threshold"`
}

func (StartXeventEventConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StartXeventEventConfig)(nil)).Elem()
}

func (i StartXeventEventConfigArgs) ToStartXeventEventConfigOutput() StartXeventEventConfigOutput {
	return i.ToStartXeventEventConfigOutputWithContext(context.Background())
}

func (i StartXeventEventConfigArgs) ToStartXeventEventConfigOutputWithContext(ctx context.Context) StartXeventEventConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartXeventEventConfigOutput)
}

// StartXeventEventConfigArrayInput is an input type that accepts StartXeventEventConfigArray and StartXeventEventConfigArrayOutput values.
// You can construct a concrete instance of `StartXeventEventConfigArrayInput` via:
//
//	StartXeventEventConfigArray{ StartXeventEventConfigArgs{...} }
type StartXeventEventConfigArrayInput interface {
	pulumi.Input

	ToStartXeventEventConfigArrayOutput() StartXeventEventConfigArrayOutput
	ToStartXeventEventConfigArrayOutputWithContext(context.Context) StartXeventEventConfigArrayOutput
}

type StartXeventEventConfigArray []StartXeventEventConfigInput

func (StartXeventEventConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StartXeventEventConfig)(nil)).Elem()
}

func (i StartXeventEventConfigArray) ToStartXeventEventConfigArrayOutput() StartXeventEventConfigArrayOutput {
	return i.ToStartXeventEventConfigArrayOutputWithContext(context.Background())
}

func (i StartXeventEventConfigArray) ToStartXeventEventConfigArrayOutputWithContext(ctx context.Context) StartXeventEventConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartXeventEventConfigArrayOutput)
}

type StartXeventEventConfigOutput struct{ *pulumi.OutputState }

func (StartXeventEventConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StartXeventEventConfig)(nil)).Elem()
}

func (o StartXeventEventConfigOutput) ToStartXeventEventConfigOutput() StartXeventEventConfigOutput {
	return o
}

func (o StartXeventEventConfigOutput) ToStartXeventEventConfigOutputWithContext(ctx context.Context) StartXeventEventConfigOutput {
	return o
}

// Event type. Valid values: slow (set threshold for slow SQL ), blocked (set threshold for the blocking and deadlock).
func (o StartXeventEventConfigOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v StartXeventEventConfig) string { return v.EventType }).(pulumi.StringOutput)
}

// Threshold in milliseconds. Valid values: 0(disable), non-zero (enable).
func (o StartXeventEventConfigOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v StartXeventEventConfig) int { return v.Threshold }).(pulumi.IntOutput)
}

type StartXeventEventConfigArrayOutput struct{ *pulumi.OutputState }

func (StartXeventEventConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StartXeventEventConfig)(nil)).Elem()
}

func (o StartXeventEventConfigArrayOutput) ToStartXeventEventConfigArrayOutput() StartXeventEventConfigArrayOutput {
	return o
}

func (o StartXeventEventConfigArrayOutput) ToStartXeventEventConfigArrayOutputWithContext(ctx context.Context) StartXeventEventConfigArrayOutput {
	return o
}

func (o StartXeventEventConfigArrayOutput) Index(i pulumi.IntInput) StartXeventEventConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StartXeventEventConfig {
		return vs[0].([]StartXeventEventConfig)[vs[1].(int)]
	}).(StartXeventEventConfigOutput)
}

type GetAccountDbAttachmentsList struct {
	// Name of the SQL Server account to be queried.
	AccountName string `pulumi:"accountName"`
	// Name of the DB to be queried.
	DbName string `pulumi:"dbName"`
	// SQL Server instance ID that the account belongs to.
	InstanceId string `pulumi:"instanceId"`
	// Privilege of the account on DB. Valid value are `ReadOnly`, `ReadWrite`.
	Privilege string `pulumi:"privilege"`
}

// GetAccountDbAttachmentsListInput is an input type that accepts GetAccountDbAttachmentsListArgs and GetAccountDbAttachmentsListOutput values.
// You can construct a concrete instance of `GetAccountDbAttachmentsListInput` via:
//
//	GetAccountDbAttachmentsListArgs{...}
type GetAccountDbAttachmentsListInput interface {
	pulumi.Input

	ToGetAccountDbAttachmentsListOutput() GetAccountDbAttachmentsListOutput
	ToGetAccountDbAttachmentsListOutputWithContext(context.Context) GetAccountDbAttachmentsListOutput
}

type GetAccountDbAttachmentsListArgs struct {
	// Name of the SQL Server account to be queried.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Name of the DB to be queried.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// SQL Server instance ID that the account belongs to.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Privilege of the account on DB. Valid value are `ReadOnly`, `ReadWrite`.
	Privilege pulumi.StringInput `pulumi:"privilege"`
}

func (GetAccountDbAttachmentsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountDbAttachmentsList)(nil)).Elem()
}

func (i GetAccountDbAttachmentsListArgs) ToGetAccountDbAttachmentsListOutput() GetAccountDbAttachmentsListOutput {
	return i.ToGetAccountDbAttachmentsListOutputWithContext(context.Background())
}

func (i GetAccountDbAttachmentsListArgs) ToGetAccountDbAttachmentsListOutputWithContext(ctx context.Context) GetAccountDbAttachmentsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountDbAttachmentsListOutput)
}

// GetAccountDbAttachmentsListArrayInput is an input type that accepts GetAccountDbAttachmentsListArray and GetAccountDbAttachmentsListArrayOutput values.
// You can construct a concrete instance of `GetAccountDbAttachmentsListArrayInput` via:
//
//	GetAccountDbAttachmentsListArray{ GetAccountDbAttachmentsListArgs{...} }
type GetAccountDbAttachmentsListArrayInput interface {
	pulumi.Input

	ToGetAccountDbAttachmentsListArrayOutput() GetAccountDbAttachmentsListArrayOutput
	ToGetAccountDbAttachmentsListArrayOutputWithContext(context.Context) GetAccountDbAttachmentsListArrayOutput
}

type GetAccountDbAttachmentsListArray []GetAccountDbAttachmentsListInput

func (GetAccountDbAttachmentsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountDbAttachmentsList)(nil)).Elem()
}

func (i GetAccountDbAttachmentsListArray) ToGetAccountDbAttachmentsListArrayOutput() GetAccountDbAttachmentsListArrayOutput {
	return i.ToGetAccountDbAttachmentsListArrayOutputWithContext(context.Background())
}

func (i GetAccountDbAttachmentsListArray) ToGetAccountDbAttachmentsListArrayOutputWithContext(ctx context.Context) GetAccountDbAttachmentsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountDbAttachmentsListArrayOutput)
}

type GetAccountDbAttachmentsListOutput struct{ *pulumi.OutputState }

func (GetAccountDbAttachmentsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountDbAttachmentsList)(nil)).Elem()
}

func (o GetAccountDbAttachmentsListOutput) ToGetAccountDbAttachmentsListOutput() GetAccountDbAttachmentsListOutput {
	return o
}

func (o GetAccountDbAttachmentsListOutput) ToGetAccountDbAttachmentsListOutputWithContext(ctx context.Context) GetAccountDbAttachmentsListOutput {
	return o
}

// Name of the SQL Server account to be queried.
func (o GetAccountDbAttachmentsListOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountDbAttachmentsList) string { return v.AccountName }).(pulumi.StringOutput)
}

// Name of the DB to be queried.
func (o GetAccountDbAttachmentsListOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountDbAttachmentsList) string { return v.DbName }).(pulumi.StringOutput)
}

// SQL Server instance ID that the account belongs to.
func (o GetAccountDbAttachmentsListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountDbAttachmentsList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Privilege of the account on DB. Valid value are `ReadOnly`, `ReadWrite`.
func (o GetAccountDbAttachmentsListOutput) Privilege() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountDbAttachmentsList) string { return v.Privilege }).(pulumi.StringOutput)
}

type GetAccountDbAttachmentsListArrayOutput struct{ *pulumi.OutputState }

func (GetAccountDbAttachmentsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountDbAttachmentsList)(nil)).Elem()
}

func (o GetAccountDbAttachmentsListArrayOutput) ToGetAccountDbAttachmentsListArrayOutput() GetAccountDbAttachmentsListArrayOutput {
	return o
}

func (o GetAccountDbAttachmentsListArrayOutput) ToGetAccountDbAttachmentsListArrayOutputWithContext(ctx context.Context) GetAccountDbAttachmentsListArrayOutput {
	return o
}

func (o GetAccountDbAttachmentsListArrayOutput) Index(i pulumi.IntInput) GetAccountDbAttachmentsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountDbAttachmentsList {
		return vs[0].([]GetAccountDbAttachmentsList)[vs[1].(int)]
	}).(GetAccountDbAttachmentsListOutput)
}

type GetAccountsList struct {
	// Create time of the SQL Server account.
	CreateTime string `pulumi:"createTime"`
	// SQL server instance ID that the account belongs to.
	InstanceId string `pulumi:"instanceId"`
	// Name of the SQL server account to be queried.
	Name string `pulumi:"name"`
	// Remark of the SQL Server account.
	Remark string `pulumi:"remark"`
	// Status of the SQL Server account. `1` for creating, `2` for running, `3` for modifying, 4 for resetting password, -1 for deleting.
	Status int `pulumi:"status"`
	// Last updated time of the SQL Server account.
	UpdateTime string `pulumi:"updateTime"`
}

// GetAccountsListInput is an input type that accepts GetAccountsListArgs and GetAccountsListOutput values.
// You can construct a concrete instance of `GetAccountsListInput` via:
//
//	GetAccountsListArgs{...}
type GetAccountsListInput interface {
	pulumi.Input

	ToGetAccountsListOutput() GetAccountsListOutput
	ToGetAccountsListOutputWithContext(context.Context) GetAccountsListOutput
}

type GetAccountsListArgs struct {
	// Create time of the SQL Server account.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// SQL server instance ID that the account belongs to.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of the SQL server account to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// Remark of the SQL Server account.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Status of the SQL Server account. `1` for creating, `2` for running, `3` for modifying, 4 for resetting password, -1 for deleting.
	Status pulumi.IntInput `pulumi:"status"`
	// Last updated time of the SQL Server account.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetAccountsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsList)(nil)).Elem()
}

func (i GetAccountsListArgs) ToGetAccountsListOutput() GetAccountsListOutput {
	return i.ToGetAccountsListOutputWithContext(context.Background())
}

func (i GetAccountsListArgs) ToGetAccountsListOutputWithContext(ctx context.Context) GetAccountsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsListOutput)
}

// GetAccountsListArrayInput is an input type that accepts GetAccountsListArray and GetAccountsListArrayOutput values.
// You can construct a concrete instance of `GetAccountsListArrayInput` via:
//
//	GetAccountsListArray{ GetAccountsListArgs{...} }
type GetAccountsListArrayInput interface {
	pulumi.Input

	ToGetAccountsListArrayOutput() GetAccountsListArrayOutput
	ToGetAccountsListArrayOutputWithContext(context.Context) GetAccountsListArrayOutput
}

type GetAccountsListArray []GetAccountsListInput

func (GetAccountsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsList)(nil)).Elem()
}

func (i GetAccountsListArray) ToGetAccountsListArrayOutput() GetAccountsListArrayOutput {
	return i.ToGetAccountsListArrayOutputWithContext(context.Background())
}

func (i GetAccountsListArray) ToGetAccountsListArrayOutputWithContext(ctx context.Context) GetAccountsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsListArrayOutput)
}

type GetAccountsListOutput struct{ *pulumi.OutputState }

func (GetAccountsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsList)(nil)).Elem()
}

func (o GetAccountsListOutput) ToGetAccountsListOutput() GetAccountsListOutput {
	return o
}

func (o GetAccountsListOutput) ToGetAccountsListOutputWithContext(ctx context.Context) GetAccountsListOutput {
	return o
}

// Create time of the SQL Server account.
func (o GetAccountsListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// SQL server instance ID that the account belongs to.
func (o GetAccountsListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of the SQL server account to be queried.
func (o GetAccountsListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsList) string { return v.Name }).(pulumi.StringOutput)
}

// Remark of the SQL Server account.
func (o GetAccountsListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsList) string { return v.Remark }).(pulumi.StringOutput)
}

// Status of the SQL Server account. `1` for creating, `2` for running, `3` for modifying, 4 for resetting password, -1 for deleting.
func (o GetAccountsListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountsList) int { return v.Status }).(pulumi.IntOutput)
}

// Last updated time of the SQL Server account.
func (o GetAccountsListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetAccountsListArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsList)(nil)).Elem()
}

func (o GetAccountsListArrayOutput) ToGetAccountsListArrayOutput() GetAccountsListArrayOutput {
	return o
}

func (o GetAccountsListArrayOutput) ToGetAccountsListArrayOutputWithContext(ctx context.Context) GetAccountsListArrayOutput {
	return o
}

func (o GetAccountsListArrayOutput) Index(i pulumi.IntInput) GetAccountsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsList {
		return vs[0].([]GetAccountsList)[vs[1].(int)]
	}).(GetAccountsListOutput)
}

type GetBackupCommandsList struct {
	// Create backup command.
	Command string `pulumi:"command"`
	// Request ID.
	RequestId string `pulumi:"requestId"`
}

// GetBackupCommandsListInput is an input type that accepts GetBackupCommandsListArgs and GetBackupCommandsListOutput values.
// You can construct a concrete instance of `GetBackupCommandsListInput` via:
//
//	GetBackupCommandsListArgs{...}
type GetBackupCommandsListInput interface {
	pulumi.Input

	ToGetBackupCommandsListOutput() GetBackupCommandsListOutput
	ToGetBackupCommandsListOutputWithContext(context.Context) GetBackupCommandsListOutput
}

type GetBackupCommandsListArgs struct {
	// Create backup command.
	Command pulumi.StringInput `pulumi:"command"`
	// Request ID.
	RequestId pulumi.StringInput `pulumi:"requestId"`
}

func (GetBackupCommandsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCommandsList)(nil)).Elem()
}

func (i GetBackupCommandsListArgs) ToGetBackupCommandsListOutput() GetBackupCommandsListOutput {
	return i.ToGetBackupCommandsListOutputWithContext(context.Background())
}

func (i GetBackupCommandsListArgs) ToGetBackupCommandsListOutputWithContext(ctx context.Context) GetBackupCommandsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCommandsListOutput)
}

// GetBackupCommandsListArrayInput is an input type that accepts GetBackupCommandsListArray and GetBackupCommandsListArrayOutput values.
// You can construct a concrete instance of `GetBackupCommandsListArrayInput` via:
//
//	GetBackupCommandsListArray{ GetBackupCommandsListArgs{...} }
type GetBackupCommandsListArrayInput interface {
	pulumi.Input

	ToGetBackupCommandsListArrayOutput() GetBackupCommandsListArrayOutput
	ToGetBackupCommandsListArrayOutputWithContext(context.Context) GetBackupCommandsListArrayOutput
}

type GetBackupCommandsListArray []GetBackupCommandsListInput

func (GetBackupCommandsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCommandsList)(nil)).Elem()
}

func (i GetBackupCommandsListArray) ToGetBackupCommandsListArrayOutput() GetBackupCommandsListArrayOutput {
	return i.ToGetBackupCommandsListArrayOutputWithContext(context.Background())
}

func (i GetBackupCommandsListArray) ToGetBackupCommandsListArrayOutputWithContext(ctx context.Context) GetBackupCommandsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCommandsListArrayOutput)
}

type GetBackupCommandsListOutput struct{ *pulumi.OutputState }

func (GetBackupCommandsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCommandsList)(nil)).Elem()
}

func (o GetBackupCommandsListOutput) ToGetBackupCommandsListOutput() GetBackupCommandsListOutput {
	return o
}

func (o GetBackupCommandsListOutput) ToGetBackupCommandsListOutputWithContext(ctx context.Context) GetBackupCommandsListOutput {
	return o
}

// Create backup command.
func (o GetBackupCommandsListOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCommandsList) string { return v.Command }).(pulumi.StringOutput)
}

// Request ID.
func (o GetBackupCommandsListOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCommandsList) string { return v.RequestId }).(pulumi.StringOutput)
}

type GetBackupCommandsListArrayOutput struct{ *pulumi.OutputState }

func (GetBackupCommandsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCommandsList)(nil)).Elem()
}

func (o GetBackupCommandsListArrayOutput) ToGetBackupCommandsListArrayOutput() GetBackupCommandsListArrayOutput {
	return o
}

func (o GetBackupCommandsListArrayOutput) ToGetBackupCommandsListArrayOutputWithContext(ctx context.Context) GetBackupCommandsListArrayOutput {
	return o
}

func (o GetBackupCommandsListArrayOutput) Index(i pulumi.IntInput) GetBackupCommandsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupCommandsList {
		return vs[0].([]GetBackupCommandsList)[vs[1].(int)]
	}).(GetBackupCommandsListOutput)
}

type GetBackupUploadSizeCosUploadBackupFileSet struct {
	// Backup name.
	FileName string `pulumi:"fileName"`
	// Backup size.
	Size int `pulumi:"size"`
}

// GetBackupUploadSizeCosUploadBackupFileSetInput is an input type that accepts GetBackupUploadSizeCosUploadBackupFileSetArgs and GetBackupUploadSizeCosUploadBackupFileSetOutput values.
// You can construct a concrete instance of `GetBackupUploadSizeCosUploadBackupFileSetInput` via:
//
//	GetBackupUploadSizeCosUploadBackupFileSetArgs{...}
type GetBackupUploadSizeCosUploadBackupFileSetInput interface {
	pulumi.Input

	ToGetBackupUploadSizeCosUploadBackupFileSetOutput() GetBackupUploadSizeCosUploadBackupFileSetOutput
	ToGetBackupUploadSizeCosUploadBackupFileSetOutputWithContext(context.Context) GetBackupUploadSizeCosUploadBackupFileSetOutput
}

type GetBackupUploadSizeCosUploadBackupFileSetArgs struct {
	// Backup name.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// Backup size.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetBackupUploadSizeCosUploadBackupFileSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupUploadSizeCosUploadBackupFileSet)(nil)).Elem()
}

func (i GetBackupUploadSizeCosUploadBackupFileSetArgs) ToGetBackupUploadSizeCosUploadBackupFileSetOutput() GetBackupUploadSizeCosUploadBackupFileSetOutput {
	return i.ToGetBackupUploadSizeCosUploadBackupFileSetOutputWithContext(context.Background())
}

func (i GetBackupUploadSizeCosUploadBackupFileSetArgs) ToGetBackupUploadSizeCosUploadBackupFileSetOutputWithContext(ctx context.Context) GetBackupUploadSizeCosUploadBackupFileSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupUploadSizeCosUploadBackupFileSetOutput)
}

// GetBackupUploadSizeCosUploadBackupFileSetArrayInput is an input type that accepts GetBackupUploadSizeCosUploadBackupFileSetArray and GetBackupUploadSizeCosUploadBackupFileSetArrayOutput values.
// You can construct a concrete instance of `GetBackupUploadSizeCosUploadBackupFileSetArrayInput` via:
//
//	GetBackupUploadSizeCosUploadBackupFileSetArray{ GetBackupUploadSizeCosUploadBackupFileSetArgs{...} }
type GetBackupUploadSizeCosUploadBackupFileSetArrayInput interface {
	pulumi.Input

	ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutput() GetBackupUploadSizeCosUploadBackupFileSetArrayOutput
	ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutputWithContext(context.Context) GetBackupUploadSizeCosUploadBackupFileSetArrayOutput
}

type GetBackupUploadSizeCosUploadBackupFileSetArray []GetBackupUploadSizeCosUploadBackupFileSetInput

func (GetBackupUploadSizeCosUploadBackupFileSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupUploadSizeCosUploadBackupFileSet)(nil)).Elem()
}

func (i GetBackupUploadSizeCosUploadBackupFileSetArray) ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutput() GetBackupUploadSizeCosUploadBackupFileSetArrayOutput {
	return i.ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutputWithContext(context.Background())
}

func (i GetBackupUploadSizeCosUploadBackupFileSetArray) ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutputWithContext(ctx context.Context) GetBackupUploadSizeCosUploadBackupFileSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupUploadSizeCosUploadBackupFileSetArrayOutput)
}

type GetBackupUploadSizeCosUploadBackupFileSetOutput struct{ *pulumi.OutputState }

func (GetBackupUploadSizeCosUploadBackupFileSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupUploadSizeCosUploadBackupFileSet)(nil)).Elem()
}

func (o GetBackupUploadSizeCosUploadBackupFileSetOutput) ToGetBackupUploadSizeCosUploadBackupFileSetOutput() GetBackupUploadSizeCosUploadBackupFileSetOutput {
	return o
}

func (o GetBackupUploadSizeCosUploadBackupFileSetOutput) ToGetBackupUploadSizeCosUploadBackupFileSetOutputWithContext(ctx context.Context) GetBackupUploadSizeCosUploadBackupFileSetOutput {
	return o
}

// Backup name.
func (o GetBackupUploadSizeCosUploadBackupFileSetOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupUploadSizeCosUploadBackupFileSet) string { return v.FileName }).(pulumi.StringOutput)
}

// Backup size.
func (o GetBackupUploadSizeCosUploadBackupFileSetOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupUploadSizeCosUploadBackupFileSet) int { return v.Size }).(pulumi.IntOutput)
}

type GetBackupUploadSizeCosUploadBackupFileSetArrayOutput struct{ *pulumi.OutputState }

func (GetBackupUploadSizeCosUploadBackupFileSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupUploadSizeCosUploadBackupFileSet)(nil)).Elem()
}

func (o GetBackupUploadSizeCosUploadBackupFileSetArrayOutput) ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutput() GetBackupUploadSizeCosUploadBackupFileSetArrayOutput {
	return o
}

func (o GetBackupUploadSizeCosUploadBackupFileSetArrayOutput) ToGetBackupUploadSizeCosUploadBackupFileSetArrayOutputWithContext(ctx context.Context) GetBackupUploadSizeCosUploadBackupFileSetArrayOutput {
	return o
}

func (o GetBackupUploadSizeCosUploadBackupFileSetArrayOutput) Index(i pulumi.IntInput) GetBackupUploadSizeCosUploadBackupFileSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupUploadSizeCosUploadBackupFileSet {
		return vs[0].([]GetBackupUploadSizeCosUploadBackupFileSet)[vs[1].(int)]
	}).(GetBackupUploadSizeCosUploadBackupFileSetOutput)
}

type GetBackupsList struct {
	// Database name list of the backup.
	DbLists []string `pulumi:"dbLists"`
	// End time of the instance list, like yyyy-MM-dd HH:mm:ss.
	EndTime string `pulumi:"endTime"`
	// File name of the backup.
	FileName string `pulumi:"fileName"`
	// ID of the backup.
	Id string `pulumi:"id"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// URL for downloads externally.
	InternetUrl string `pulumi:"internetUrl"`
	// URL for downloads internally.
	IntranetUrl string `pulumi:"intranetUrl"`
	// The size of backup file. Unit is KB.
	Size int `pulumi:"size"`
	// Start time of the instance list, like yyyy-MM-dd HH:mm:ss.
	StartTime string `pulumi:"startTime"`
	// Status of the backup. `1` for creating, `2` for successfully created, 3 for failed.
	Status int `pulumi:"status"`
	// Strategy of the backup. `0` for instance backup, `1` for multi-databases backup.
	Strategy int `pulumi:"strategy"`
	// The way to trigger backup. `0` for timed trigger, `1` for manual trigger.
	TriggerModel int `pulumi:"triggerModel"`
}

// GetBackupsListInput is an input type that accepts GetBackupsListArgs and GetBackupsListOutput values.
// You can construct a concrete instance of `GetBackupsListInput` via:
//
//	GetBackupsListArgs{...}
type GetBackupsListInput interface {
	pulumi.Input

	ToGetBackupsListOutput() GetBackupsListOutput
	ToGetBackupsListOutputWithContext(context.Context) GetBackupsListOutput
}

type GetBackupsListArgs struct {
	// Database name list of the backup.
	DbLists pulumi.StringArrayInput `pulumi:"dbLists"`
	// End time of the instance list, like yyyy-MM-dd HH:mm:ss.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// File name of the backup.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// ID of the backup.
	Id pulumi.StringInput `pulumi:"id"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// URL for downloads externally.
	InternetUrl pulumi.StringInput `pulumi:"internetUrl"`
	// URL for downloads internally.
	IntranetUrl pulumi.StringInput `pulumi:"intranetUrl"`
	// The size of backup file. Unit is KB.
	Size pulumi.IntInput `pulumi:"size"`
	// Start time of the instance list, like yyyy-MM-dd HH:mm:ss.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Status of the backup. `1` for creating, `2` for successfully created, 3 for failed.
	Status pulumi.IntInput `pulumi:"status"`
	// Strategy of the backup. `0` for instance backup, `1` for multi-databases backup.
	Strategy pulumi.IntInput `pulumi:"strategy"`
	// The way to trigger backup. `0` for timed trigger, `1` for manual trigger.
	TriggerModel pulumi.IntInput `pulumi:"triggerModel"`
}

func (GetBackupsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsList)(nil)).Elem()
}

func (i GetBackupsListArgs) ToGetBackupsListOutput() GetBackupsListOutput {
	return i.ToGetBackupsListOutputWithContext(context.Background())
}

func (i GetBackupsListArgs) ToGetBackupsListOutputWithContext(ctx context.Context) GetBackupsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsListOutput)
}

// GetBackupsListArrayInput is an input type that accepts GetBackupsListArray and GetBackupsListArrayOutput values.
// You can construct a concrete instance of `GetBackupsListArrayInput` via:
//
//	GetBackupsListArray{ GetBackupsListArgs{...} }
type GetBackupsListArrayInput interface {
	pulumi.Input

	ToGetBackupsListArrayOutput() GetBackupsListArrayOutput
	ToGetBackupsListArrayOutputWithContext(context.Context) GetBackupsListArrayOutput
}

type GetBackupsListArray []GetBackupsListInput

func (GetBackupsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsList)(nil)).Elem()
}

func (i GetBackupsListArray) ToGetBackupsListArrayOutput() GetBackupsListArrayOutput {
	return i.ToGetBackupsListArrayOutputWithContext(context.Background())
}

func (i GetBackupsListArray) ToGetBackupsListArrayOutputWithContext(ctx context.Context) GetBackupsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsListArrayOutput)
}

type GetBackupsListOutput struct{ *pulumi.OutputState }

func (GetBackupsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsList)(nil)).Elem()
}

func (o GetBackupsListOutput) ToGetBackupsListOutput() GetBackupsListOutput {
	return o
}

func (o GetBackupsListOutput) ToGetBackupsListOutputWithContext(ctx context.Context) GetBackupsListOutput {
	return o
}

// Database name list of the backup.
func (o GetBackupsListOutput) DbLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupsList) []string { return v.DbLists }).(pulumi.StringArrayOutput)
}

// End time of the instance list, like yyyy-MM-dd HH:mm:ss.
func (o GetBackupsListOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.EndTime }).(pulumi.StringOutput)
}

// File name of the backup.
func (o GetBackupsListOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.FileName }).(pulumi.StringOutput)
}

// ID of the backup.
func (o GetBackupsListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.Id }).(pulumi.StringOutput)
}

// Instance ID.
func (o GetBackupsListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// URL for downloads externally.
func (o GetBackupsListOutput) InternetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.InternetUrl }).(pulumi.StringOutput)
}

// URL for downloads internally.
func (o GetBackupsListOutput) IntranetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.IntranetUrl }).(pulumi.StringOutput)
}

// The size of backup file. Unit is KB.
func (o GetBackupsListOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsList) int { return v.Size }).(pulumi.IntOutput)
}

// Start time of the instance list, like yyyy-MM-dd HH:mm:ss.
func (o GetBackupsListOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsList) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status of the backup. `1` for creating, `2` for successfully created, 3 for failed.
func (o GetBackupsListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsList) int { return v.Status }).(pulumi.IntOutput)
}

// Strategy of the backup. `0` for instance backup, `1` for multi-databases backup.
func (o GetBackupsListOutput) Strategy() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsList) int { return v.Strategy }).(pulumi.IntOutput)
}

// The way to trigger backup. `0` for timed trigger, `1` for manual trigger.
func (o GetBackupsListOutput) TriggerModel() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsList) int { return v.TriggerModel }).(pulumi.IntOutput)
}

type GetBackupsListArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsList)(nil)).Elem()
}

func (o GetBackupsListArrayOutput) ToGetBackupsListArrayOutput() GetBackupsListArrayOutput {
	return o
}

func (o GetBackupsListArrayOutput) ToGetBackupsListArrayOutputWithContext(ctx context.Context) GetBackupsListArrayOutput {
	return o
}

func (o GetBackupsListArrayOutput) Index(i pulumi.IntInput) GetBackupsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsList {
		return vs[0].([]GetBackupsList)[vs[1].(int)]
	}).(GetBackupsListOutput)
}

type GetBasicInstancesInstanceList struct {
	// Availability zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Pay type of the SQL Server basic instance. For now, only `POSTPAID_BY_HOUR` is valid.
	ChargeType string `pulumi:"chargeType"`
	// The CPU number of the SQL Server basic instance.
	Cpu int `pulumi:"cpu"`
	// Create time of the SQL Server basic instance.
	CreateTime string `pulumi:"createTime"`
	// Version of the SQL Server basic database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	EngineVersion string `pulumi:"engineVersion"`
	// ID of the SQL Server basic instance to be query.
	Id string `pulumi:"id"`
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloudSqlserverSpecinfos` provides.
	Memory int `pulumi:"memory"`
	// Name of the SQL Server basic instance to be query.
	Name string `pulumi:"name"`
	// Project ID of the SQL Server basic instance to be query.
	ProjectId int `pulumi:"projectId"`
	// Status of the SQL Server basic instance. `1` for applying, `2` for running, `3` for running with limit, `4` for isolated, `5` for recycling, `6` for recycled, `7` for running with task, `8` for off-line, `9` for expanding, `10` for migrating, `11` for readonly, `12` for rebooting.
	Status int `pulumi:"status"`
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storageMin` and `storageMax` which data source `tencentcloudSqlserverSpecinfos` provides.
	Storage int `pulumi:"storage"`
	// Subnet ID of the SQL Server basic instance to be query.
	SubnetId string `pulumi:"subnetId"`
	// Tags of the SQL Server basic instance.
	Tags map[string]interface{} `pulumi:"tags"`
	// Used storage.
	UsedStorage int `pulumi:"usedStorage"`
	// IP for private access.
	Vip string `pulumi:"vip"`
	// Vpc ID of the SQL Server basic instance to be query.
	VpcId string `pulumi:"vpcId"`
	// Port for private access.
	Vport int `pulumi:"vport"`
}

// GetBasicInstancesInstanceListInput is an input type that accepts GetBasicInstancesInstanceListArgs and GetBasicInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetBasicInstancesInstanceListInput` via:
//
//	GetBasicInstancesInstanceListArgs{...}
type GetBasicInstancesInstanceListInput interface {
	pulumi.Input

	ToGetBasicInstancesInstanceListOutput() GetBasicInstancesInstanceListOutput
	ToGetBasicInstancesInstanceListOutputWithContext(context.Context) GetBasicInstancesInstanceListOutput
}

type GetBasicInstancesInstanceListArgs struct {
	// Availability zone.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Pay type of the SQL Server basic instance. For now, only `POSTPAID_BY_HOUR` is valid.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The CPU number of the SQL Server basic instance.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Create time of the SQL Server basic instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Version of the SQL Server basic database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// ID of the SQL Server basic instance to be query.
	Id pulumi.StringInput `pulumi:"id"`
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloudSqlserverSpecinfos` provides.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Name of the SQL Server basic instance to be query.
	Name pulumi.StringInput `pulumi:"name"`
	// Project ID of the SQL Server basic instance to be query.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Status of the SQL Server basic instance. `1` for applying, `2` for running, `3` for running with limit, `4` for isolated, `5` for recycling, `6` for recycled, `7` for running with task, `8` for off-line, `9` for expanding, `10` for migrating, `11` for readonly, `12` for rebooting.
	Status pulumi.IntInput `pulumi:"status"`
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storageMin` and `storageMax` which data source `tencentcloudSqlserverSpecinfos` provides.
	Storage pulumi.IntInput `pulumi:"storage"`
	// Subnet ID of the SQL Server basic instance to be query.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of the SQL Server basic instance.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Used storage.
	UsedStorage pulumi.IntInput `pulumi:"usedStorage"`
	// IP for private access.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Vpc ID of the SQL Server basic instance to be query.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Port for private access.
	Vport pulumi.IntInput `pulumi:"vport"`
}

func (GetBasicInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicInstancesInstanceList)(nil)).Elem()
}

func (i GetBasicInstancesInstanceListArgs) ToGetBasicInstancesInstanceListOutput() GetBasicInstancesInstanceListOutput {
	return i.ToGetBasicInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetBasicInstancesInstanceListArgs) ToGetBasicInstancesInstanceListOutputWithContext(ctx context.Context) GetBasicInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicInstancesInstanceListOutput)
}

// GetBasicInstancesInstanceListArrayInput is an input type that accepts GetBasicInstancesInstanceListArray and GetBasicInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetBasicInstancesInstanceListArrayInput` via:
//
//	GetBasicInstancesInstanceListArray{ GetBasicInstancesInstanceListArgs{...} }
type GetBasicInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetBasicInstancesInstanceListArrayOutput() GetBasicInstancesInstanceListArrayOutput
	ToGetBasicInstancesInstanceListArrayOutputWithContext(context.Context) GetBasicInstancesInstanceListArrayOutput
}

type GetBasicInstancesInstanceListArray []GetBasicInstancesInstanceListInput

func (GetBasicInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicInstancesInstanceList)(nil)).Elem()
}

func (i GetBasicInstancesInstanceListArray) ToGetBasicInstancesInstanceListArrayOutput() GetBasicInstancesInstanceListArrayOutput {
	return i.ToGetBasicInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetBasicInstancesInstanceListArray) ToGetBasicInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetBasicInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicInstancesInstanceListArrayOutput)
}

type GetBasicInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetBasicInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicInstancesInstanceList)(nil)).Elem()
}

func (o GetBasicInstancesInstanceListOutput) ToGetBasicInstancesInstanceListOutput() GetBasicInstancesInstanceListOutput {
	return o
}

func (o GetBasicInstancesInstanceListOutput) ToGetBasicInstancesInstanceListOutputWithContext(ctx context.Context) GetBasicInstancesInstanceListOutput {
	return o
}

// Availability zone.
func (o GetBasicInstancesInstanceListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Pay type of the SQL Server basic instance. For now, only `POSTPAID_BY_HOUR` is valid.
func (o GetBasicInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The CPU number of the SQL Server basic instance.
func (o GetBasicInstancesInstanceListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.Cpu }).(pulumi.IntOutput)
}

// Create time of the SQL Server basic instance.
func (o GetBasicInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Version of the SQL Server basic database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
func (o GetBasicInstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// ID of the SQL Server basic instance to be query.
func (o GetBasicInstancesInstanceListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.Id }).(pulumi.StringOutput)
}

// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloudSqlserverSpecinfos` provides.
func (o GetBasicInstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

// Name of the SQL Server basic instance to be query.
func (o GetBasicInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// Project ID of the SQL Server basic instance to be query.
func (o GetBasicInstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Status of the SQL Server basic instance. `1` for applying, `2` for running, `3` for running with limit, `4` for isolated, `5` for recycling, `6` for recycled, `7` for running with task, `8` for off-line, `9` for expanding, `10` for migrating, `11` for readonly, `12` for rebooting.
func (o GetBasicInstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storageMin` and `storageMax` which data source `tencentcloudSqlserverSpecinfos` provides.
func (o GetBasicInstancesInstanceListOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.Storage }).(pulumi.IntOutput)
}

// Subnet ID of the SQL Server basic instance to be query.
func (o GetBasicInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of the SQL Server basic instance.
func (o GetBasicInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Used storage.
func (o GetBasicInstancesInstanceListOutput) UsedStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.UsedStorage }).(pulumi.IntOutput)
}

// IP for private access.
func (o GetBasicInstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

// Vpc ID of the SQL Server basic instance to be query.
func (o GetBasicInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// Port for private access.
func (o GetBasicInstancesInstanceListOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicInstancesInstanceList) int { return v.Vport }).(pulumi.IntOutput)
}

type GetBasicInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetBasicInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicInstancesInstanceList)(nil)).Elem()
}

func (o GetBasicInstancesInstanceListArrayOutput) ToGetBasicInstancesInstanceListArrayOutput() GetBasicInstancesInstanceListArrayOutput {
	return o
}

func (o GetBasicInstancesInstanceListArrayOutput) ToGetBasicInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetBasicInstancesInstanceListArrayOutput {
	return o
}

func (o GetBasicInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetBasicInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicInstancesInstanceList {
		return vs[0].([]GetBasicInstancesInstanceList)[vs[1].(int)]
	}).(GetBasicInstancesInstanceListOutput)
}

type GetDbsDbList struct {
	// Character set DB uses, could be `Chinese_PRC_CI_AS`, `Chinese_PRC_CS_AS`, `Chinese_PRC_BIN`, `Chinese_Taiwan_Stroke_CI_AS`, `SQL_Latin1_General_CP1_CI_AS`, and `SQL_Latin1_General_CP1_CS_AS`.
	Charset string `pulumi:"charset"`
	// Database creation time.
	CreateTime string `pulumi:"createTime"`
	// SQL Server instance ID which DB belongs to.
	InstanceId string `pulumi:"instanceId"`
	// Name of DB.
	Name string `pulumi:"name"`
	// Remark of the DB.
	Remark string `pulumi:"remark"`
	// Database status. Valid values are `creating`, `running`, `modifying`, `dropping`.
	Status string `pulumi:"status"`
}

// GetDbsDbListInput is an input type that accepts GetDbsDbListArgs and GetDbsDbListOutput values.
// You can construct a concrete instance of `GetDbsDbListInput` via:
//
//	GetDbsDbListArgs{...}
type GetDbsDbListInput interface {
	pulumi.Input

	ToGetDbsDbListOutput() GetDbsDbListOutput
	ToGetDbsDbListOutputWithContext(context.Context) GetDbsDbListOutput
}

type GetDbsDbListArgs struct {
	// Character set DB uses, could be `Chinese_PRC_CI_AS`, `Chinese_PRC_CS_AS`, `Chinese_PRC_BIN`, `Chinese_Taiwan_Stroke_CI_AS`, `SQL_Latin1_General_CP1_CI_AS`, and `SQL_Latin1_General_CP1_CS_AS`.
	Charset pulumi.StringInput `pulumi:"charset"`
	// Database creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// SQL Server instance ID which DB belongs to.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of DB.
	Name pulumi.StringInput `pulumi:"name"`
	// Remark of the DB.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Database status. Valid values are `creating`, `running`, `modifying`, `dropping`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDbsDbListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbsDbList)(nil)).Elem()
}

func (i GetDbsDbListArgs) ToGetDbsDbListOutput() GetDbsDbListOutput {
	return i.ToGetDbsDbListOutputWithContext(context.Background())
}

func (i GetDbsDbListArgs) ToGetDbsDbListOutputWithContext(ctx context.Context) GetDbsDbListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbsDbListOutput)
}

// GetDbsDbListArrayInput is an input type that accepts GetDbsDbListArray and GetDbsDbListArrayOutput values.
// You can construct a concrete instance of `GetDbsDbListArrayInput` via:
//
//	GetDbsDbListArray{ GetDbsDbListArgs{...} }
type GetDbsDbListArrayInput interface {
	pulumi.Input

	ToGetDbsDbListArrayOutput() GetDbsDbListArrayOutput
	ToGetDbsDbListArrayOutputWithContext(context.Context) GetDbsDbListArrayOutput
}

type GetDbsDbListArray []GetDbsDbListInput

func (GetDbsDbListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbsDbList)(nil)).Elem()
}

func (i GetDbsDbListArray) ToGetDbsDbListArrayOutput() GetDbsDbListArrayOutput {
	return i.ToGetDbsDbListArrayOutputWithContext(context.Background())
}

func (i GetDbsDbListArray) ToGetDbsDbListArrayOutputWithContext(ctx context.Context) GetDbsDbListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbsDbListArrayOutput)
}

type GetDbsDbListOutput struct{ *pulumi.OutputState }

func (GetDbsDbListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbsDbList)(nil)).Elem()
}

func (o GetDbsDbListOutput) ToGetDbsDbListOutput() GetDbsDbListOutput {
	return o
}

func (o GetDbsDbListOutput) ToGetDbsDbListOutputWithContext(ctx context.Context) GetDbsDbListOutput {
	return o
}

// Character set DB uses, could be `Chinese_PRC_CI_AS`, `Chinese_PRC_CS_AS`, `Chinese_PRC_BIN`, `Chinese_Taiwan_Stroke_CI_AS`, `SQL_Latin1_General_CP1_CI_AS`, and `SQL_Latin1_General_CP1_CS_AS`.
func (o GetDbsDbListOutput) Charset() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbsDbList) string { return v.Charset }).(pulumi.StringOutput)
}

// Database creation time.
func (o GetDbsDbListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbsDbList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// SQL Server instance ID which DB belongs to.
func (o GetDbsDbListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbsDbList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of DB.
func (o GetDbsDbListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbsDbList) string { return v.Name }).(pulumi.StringOutput)
}

// Remark of the DB.
func (o GetDbsDbListOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbsDbList) string { return v.Remark }).(pulumi.StringOutput)
}

// Database status. Valid values are `creating`, `running`, `modifying`, `dropping`.
func (o GetDbsDbListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbsDbList) string { return v.Status }).(pulumi.StringOutput)
}

type GetDbsDbListArrayOutput struct{ *pulumi.OutputState }

func (GetDbsDbListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbsDbList)(nil)).Elem()
}

func (o GetDbsDbListArrayOutput) ToGetDbsDbListArrayOutput() GetDbsDbListArrayOutput {
	return o
}

func (o GetDbsDbListArrayOutput) ToGetDbsDbListArrayOutputWithContext(ctx context.Context) GetDbsDbListArrayOutput {
	return o
}

func (o GetDbsDbListArrayOutput) Index(i pulumi.IntInput) GetDbsDbListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbsDbList {
		return vs[0].([]GetDbsDbList)[vs[1].(int)]
	}).(GetDbsDbListOutput)
}

type GetDescHaLogSwitchLog struct {
	EndTime    string `pulumi:"endTime"`
	EventId    string `pulumi:"eventId"`
	Reason     string `pulumi:"reason"`
	StartTime  string `pulumi:"startTime"`
	SwitchType int    `pulumi:"switchType"`
}

// GetDescHaLogSwitchLogInput is an input type that accepts GetDescHaLogSwitchLogArgs and GetDescHaLogSwitchLogOutput values.
// You can construct a concrete instance of `GetDescHaLogSwitchLogInput` via:
//
//	GetDescHaLogSwitchLogArgs{...}
type GetDescHaLogSwitchLogInput interface {
	pulumi.Input

	ToGetDescHaLogSwitchLogOutput() GetDescHaLogSwitchLogOutput
	ToGetDescHaLogSwitchLogOutputWithContext(context.Context) GetDescHaLogSwitchLogOutput
}

type GetDescHaLogSwitchLogArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	EventId    pulumi.StringInput `pulumi:"eventId"`
	Reason     pulumi.StringInput `pulumi:"reason"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
	SwitchType pulumi.IntInput    `pulumi:"switchType"`
}

func (GetDescHaLogSwitchLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescHaLogSwitchLog)(nil)).Elem()
}

func (i GetDescHaLogSwitchLogArgs) ToGetDescHaLogSwitchLogOutput() GetDescHaLogSwitchLogOutput {
	return i.ToGetDescHaLogSwitchLogOutputWithContext(context.Background())
}

func (i GetDescHaLogSwitchLogArgs) ToGetDescHaLogSwitchLogOutputWithContext(ctx context.Context) GetDescHaLogSwitchLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescHaLogSwitchLogOutput)
}

// GetDescHaLogSwitchLogArrayInput is an input type that accepts GetDescHaLogSwitchLogArray and GetDescHaLogSwitchLogArrayOutput values.
// You can construct a concrete instance of `GetDescHaLogSwitchLogArrayInput` via:
//
//	GetDescHaLogSwitchLogArray{ GetDescHaLogSwitchLogArgs{...} }
type GetDescHaLogSwitchLogArrayInput interface {
	pulumi.Input

	ToGetDescHaLogSwitchLogArrayOutput() GetDescHaLogSwitchLogArrayOutput
	ToGetDescHaLogSwitchLogArrayOutputWithContext(context.Context) GetDescHaLogSwitchLogArrayOutput
}

type GetDescHaLogSwitchLogArray []GetDescHaLogSwitchLogInput

func (GetDescHaLogSwitchLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescHaLogSwitchLog)(nil)).Elem()
}

func (i GetDescHaLogSwitchLogArray) ToGetDescHaLogSwitchLogArrayOutput() GetDescHaLogSwitchLogArrayOutput {
	return i.ToGetDescHaLogSwitchLogArrayOutputWithContext(context.Background())
}

func (i GetDescHaLogSwitchLogArray) ToGetDescHaLogSwitchLogArrayOutputWithContext(ctx context.Context) GetDescHaLogSwitchLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescHaLogSwitchLogArrayOutput)
}

type GetDescHaLogSwitchLogOutput struct{ *pulumi.OutputState }

func (GetDescHaLogSwitchLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescHaLogSwitchLog)(nil)).Elem()
}

func (o GetDescHaLogSwitchLogOutput) ToGetDescHaLogSwitchLogOutput() GetDescHaLogSwitchLogOutput {
	return o
}

func (o GetDescHaLogSwitchLogOutput) ToGetDescHaLogSwitchLogOutputWithContext(ctx context.Context) GetDescHaLogSwitchLogOutput {
	return o
}

func (o GetDescHaLogSwitchLogOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescHaLogSwitchLog) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetDescHaLogSwitchLogOutput) EventId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescHaLogSwitchLog) string { return v.EventId }).(pulumi.StringOutput)
}

func (o GetDescHaLogSwitchLogOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescHaLogSwitchLog) string { return v.Reason }).(pulumi.StringOutput)
}

func (o GetDescHaLogSwitchLogOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescHaLogSwitchLog) string { return v.StartTime }).(pulumi.StringOutput)
}

func (o GetDescHaLogSwitchLogOutput) SwitchType() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescHaLogSwitchLog) int { return v.SwitchType }).(pulumi.IntOutput)
}

type GetDescHaLogSwitchLogArrayOutput struct{ *pulumi.OutputState }

func (GetDescHaLogSwitchLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescHaLogSwitchLog)(nil)).Elem()
}

func (o GetDescHaLogSwitchLogArrayOutput) ToGetDescHaLogSwitchLogArrayOutput() GetDescHaLogSwitchLogArrayOutput {
	return o
}

func (o GetDescHaLogSwitchLogArrayOutput) ToGetDescHaLogSwitchLogArrayOutputWithContext(ctx context.Context) GetDescHaLogSwitchLogArrayOutput {
	return o
}

func (o GetDescHaLogSwitchLogArrayOutput) Index(i pulumi.IntInput) GetDescHaLogSwitchLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescHaLogSwitchLog {
		return vs[0].([]GetDescHaLogSwitchLog)[vs[1].(int)]
	}).(GetDescHaLogSwitchLogOutput)
}

type GetInsAttributeSslConfig struct {
	// TDE encryption, 'enable' - enabled, 'disable' - not enabled.
	Encryption string `pulumi:"encryption"`
	// SSL certificate validity, 0-invalid, 1-valid Note: This field may return null, indicating that no valid value can be obtained.
	SslValidity int `pulumi:"sslValidity"`
	// SSL certificate validity period, time format YYYY-MM-DD HH:MM:SS Note: This field may return null, indicating that no valid value can be obtained.
	SslValidityPeriod string `pulumi:"sslValidityPeriod"`
}

// GetInsAttributeSslConfigInput is an input type that accepts GetInsAttributeSslConfigArgs and GetInsAttributeSslConfigOutput values.
// You can construct a concrete instance of `GetInsAttributeSslConfigInput` via:
//
//	GetInsAttributeSslConfigArgs{...}
type GetInsAttributeSslConfigInput interface {
	pulumi.Input

	ToGetInsAttributeSslConfigOutput() GetInsAttributeSslConfigOutput
	ToGetInsAttributeSslConfigOutputWithContext(context.Context) GetInsAttributeSslConfigOutput
}

type GetInsAttributeSslConfigArgs struct {
	// TDE encryption, 'enable' - enabled, 'disable' - not enabled.
	Encryption pulumi.StringInput `pulumi:"encryption"`
	// SSL certificate validity, 0-invalid, 1-valid Note: This field may return null, indicating that no valid value can be obtained.
	SslValidity pulumi.IntInput `pulumi:"sslValidity"`
	// SSL certificate validity period, time format YYYY-MM-DD HH:MM:SS Note: This field may return null, indicating that no valid value can be obtained.
	SslValidityPeriod pulumi.StringInput `pulumi:"sslValidityPeriod"`
}

func (GetInsAttributeSslConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsAttributeSslConfig)(nil)).Elem()
}

func (i GetInsAttributeSslConfigArgs) ToGetInsAttributeSslConfigOutput() GetInsAttributeSslConfigOutput {
	return i.ToGetInsAttributeSslConfigOutputWithContext(context.Background())
}

func (i GetInsAttributeSslConfigArgs) ToGetInsAttributeSslConfigOutputWithContext(ctx context.Context) GetInsAttributeSslConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsAttributeSslConfigOutput)
}

// GetInsAttributeSslConfigArrayInput is an input type that accepts GetInsAttributeSslConfigArray and GetInsAttributeSslConfigArrayOutput values.
// You can construct a concrete instance of `GetInsAttributeSslConfigArrayInput` via:
//
//	GetInsAttributeSslConfigArray{ GetInsAttributeSslConfigArgs{...} }
type GetInsAttributeSslConfigArrayInput interface {
	pulumi.Input

	ToGetInsAttributeSslConfigArrayOutput() GetInsAttributeSslConfigArrayOutput
	ToGetInsAttributeSslConfigArrayOutputWithContext(context.Context) GetInsAttributeSslConfigArrayOutput
}

type GetInsAttributeSslConfigArray []GetInsAttributeSslConfigInput

func (GetInsAttributeSslConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsAttributeSslConfig)(nil)).Elem()
}

func (i GetInsAttributeSslConfigArray) ToGetInsAttributeSslConfigArrayOutput() GetInsAttributeSslConfigArrayOutput {
	return i.ToGetInsAttributeSslConfigArrayOutputWithContext(context.Background())
}

func (i GetInsAttributeSslConfigArray) ToGetInsAttributeSslConfigArrayOutputWithContext(ctx context.Context) GetInsAttributeSslConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsAttributeSslConfigArrayOutput)
}

type GetInsAttributeSslConfigOutput struct{ *pulumi.OutputState }

func (GetInsAttributeSslConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsAttributeSslConfig)(nil)).Elem()
}

func (o GetInsAttributeSslConfigOutput) ToGetInsAttributeSslConfigOutput() GetInsAttributeSslConfigOutput {
	return o
}

func (o GetInsAttributeSslConfigOutput) ToGetInsAttributeSslConfigOutputWithContext(ctx context.Context) GetInsAttributeSslConfigOutput {
	return o
}

// TDE encryption, 'enable' - enabled, 'disable' - not enabled.
func (o GetInsAttributeSslConfigOutput) Encryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsAttributeSslConfig) string { return v.Encryption }).(pulumi.StringOutput)
}

// SSL certificate validity, 0-invalid, 1-valid Note: This field may return null, indicating that no valid value can be obtained.
func (o GetInsAttributeSslConfigOutput) SslValidity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsAttributeSslConfig) int { return v.SslValidity }).(pulumi.IntOutput)
}

// SSL certificate validity period, time format YYYY-MM-DD HH:MM:SS Note: This field may return null, indicating that no valid value can be obtained.
func (o GetInsAttributeSslConfigOutput) SslValidityPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsAttributeSslConfig) string { return v.SslValidityPeriod }).(pulumi.StringOutput)
}

type GetInsAttributeSslConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInsAttributeSslConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsAttributeSslConfig)(nil)).Elem()
}

func (o GetInsAttributeSslConfigArrayOutput) ToGetInsAttributeSslConfigArrayOutput() GetInsAttributeSslConfigArrayOutput {
	return o
}

func (o GetInsAttributeSslConfigArrayOutput) ToGetInsAttributeSslConfigArrayOutputWithContext(ctx context.Context) GetInsAttributeSslConfigArrayOutput {
	return o
}

func (o GetInsAttributeSslConfigArrayOutput) Index(i pulumi.IntInput) GetInsAttributeSslConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsAttributeSslConfig {
		return vs[0].([]GetInsAttributeSslConfig)[vs[1].(int)]
	}).(GetInsAttributeSslConfigOutput)
}

type GetInsAttributeTdeConfig struct {
	// Certificate ownership. Self - indicates using the account's own certificate, others - indicates referencing certificates from other accounts, and none - indicates no certificate.
	CertificateAttribution string `pulumi:"certificateAttribution"`
	// TDE encryption, 'enable' - enabled, 'disable' - not enabled.
	Encryption string `pulumi:"encryption"`
	// Other primary account IDs referenced when activating TDE encryption
	// Note: This field may return null, indicating that a valid value cannot be obtained.
	QuoteUin string `pulumi:"quoteUin"`
}

// GetInsAttributeTdeConfigInput is an input type that accepts GetInsAttributeTdeConfigArgs and GetInsAttributeTdeConfigOutput values.
// You can construct a concrete instance of `GetInsAttributeTdeConfigInput` via:
//
//	GetInsAttributeTdeConfigArgs{...}
type GetInsAttributeTdeConfigInput interface {
	pulumi.Input

	ToGetInsAttributeTdeConfigOutput() GetInsAttributeTdeConfigOutput
	ToGetInsAttributeTdeConfigOutputWithContext(context.Context) GetInsAttributeTdeConfigOutput
}

type GetInsAttributeTdeConfigArgs struct {
	// Certificate ownership. Self - indicates using the account's own certificate, others - indicates referencing certificates from other accounts, and none - indicates no certificate.
	CertificateAttribution pulumi.StringInput `pulumi:"certificateAttribution"`
	// TDE encryption, 'enable' - enabled, 'disable' - not enabled.
	Encryption pulumi.StringInput `pulumi:"encryption"`
	// Other primary account IDs referenced when activating TDE encryption
	// Note: This field may return null, indicating that a valid value cannot be obtained.
	QuoteUin pulumi.StringInput `pulumi:"quoteUin"`
}

func (GetInsAttributeTdeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsAttributeTdeConfig)(nil)).Elem()
}

func (i GetInsAttributeTdeConfigArgs) ToGetInsAttributeTdeConfigOutput() GetInsAttributeTdeConfigOutput {
	return i.ToGetInsAttributeTdeConfigOutputWithContext(context.Background())
}

func (i GetInsAttributeTdeConfigArgs) ToGetInsAttributeTdeConfigOutputWithContext(ctx context.Context) GetInsAttributeTdeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsAttributeTdeConfigOutput)
}

// GetInsAttributeTdeConfigArrayInput is an input type that accepts GetInsAttributeTdeConfigArray and GetInsAttributeTdeConfigArrayOutput values.
// You can construct a concrete instance of `GetInsAttributeTdeConfigArrayInput` via:
//
//	GetInsAttributeTdeConfigArray{ GetInsAttributeTdeConfigArgs{...} }
type GetInsAttributeTdeConfigArrayInput interface {
	pulumi.Input

	ToGetInsAttributeTdeConfigArrayOutput() GetInsAttributeTdeConfigArrayOutput
	ToGetInsAttributeTdeConfigArrayOutputWithContext(context.Context) GetInsAttributeTdeConfigArrayOutput
}

type GetInsAttributeTdeConfigArray []GetInsAttributeTdeConfigInput

func (GetInsAttributeTdeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsAttributeTdeConfig)(nil)).Elem()
}

func (i GetInsAttributeTdeConfigArray) ToGetInsAttributeTdeConfigArrayOutput() GetInsAttributeTdeConfigArrayOutput {
	return i.ToGetInsAttributeTdeConfigArrayOutputWithContext(context.Background())
}

func (i GetInsAttributeTdeConfigArray) ToGetInsAttributeTdeConfigArrayOutputWithContext(ctx context.Context) GetInsAttributeTdeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsAttributeTdeConfigArrayOutput)
}

type GetInsAttributeTdeConfigOutput struct{ *pulumi.OutputState }

func (GetInsAttributeTdeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsAttributeTdeConfig)(nil)).Elem()
}

func (o GetInsAttributeTdeConfigOutput) ToGetInsAttributeTdeConfigOutput() GetInsAttributeTdeConfigOutput {
	return o
}

func (o GetInsAttributeTdeConfigOutput) ToGetInsAttributeTdeConfigOutputWithContext(ctx context.Context) GetInsAttributeTdeConfigOutput {
	return o
}

// Certificate ownership. Self - indicates using the account's own certificate, others - indicates referencing certificates from other accounts, and none - indicates no certificate.
func (o GetInsAttributeTdeConfigOutput) CertificateAttribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsAttributeTdeConfig) string { return v.CertificateAttribution }).(pulumi.StringOutput)
}

// TDE encryption, 'enable' - enabled, 'disable' - not enabled.
func (o GetInsAttributeTdeConfigOutput) Encryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsAttributeTdeConfig) string { return v.Encryption }).(pulumi.StringOutput)
}

// Other primary account IDs referenced when activating TDE encryption
// Note: This field may return null, indicating that a valid value cannot be obtained.
func (o GetInsAttributeTdeConfigOutput) QuoteUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsAttributeTdeConfig) string { return v.QuoteUin }).(pulumi.StringOutput)
}

type GetInsAttributeTdeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInsAttributeTdeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsAttributeTdeConfig)(nil)).Elem()
}

func (o GetInsAttributeTdeConfigArrayOutput) ToGetInsAttributeTdeConfigArrayOutput() GetInsAttributeTdeConfigArrayOutput {
	return o
}

func (o GetInsAttributeTdeConfigArrayOutput) ToGetInsAttributeTdeConfigArrayOutputWithContext(ctx context.Context) GetInsAttributeTdeConfigArrayOutput {
	return o
}

func (o GetInsAttributeTdeConfigArrayOutput) Index(i pulumi.IntInput) GetInsAttributeTdeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsAttributeTdeConfig {
		return vs[0].([]GetInsAttributeTdeConfig)[vs[1].(int)]
	}).(GetInsAttributeTdeConfigOutput)
}

type GetInstanceParamRecordsItem struct {
	// Instance ID in the format of mssql-dj5i29c5n. It is the same as the instance ID displayed in the TencentDB console and the response parameter InstanceId of the DescribeDBInstances API.
	InstanceId string `pulumi:"instanceId"`
	// Modification time.
	ModifyTime string `pulumi:"modifyTime"`
	// Parameter value after modification.
	NewValue string `pulumi:"newValue"`
	// Parameter value before modification.
	OldValue string `pulumi:"oldValue"`
	// Parameter name.
	ParamName string `pulumi:"paramName"`
	// Parameter modification status. Valid values: 1 (initializing and waiting for modification), 2 (modification succeed), 3 (modification failed), 4 (modifying).
	Status int `pulumi:"status"`
}

// GetInstanceParamRecordsItemInput is an input type that accepts GetInstanceParamRecordsItemArgs and GetInstanceParamRecordsItemOutput values.
// You can construct a concrete instance of `GetInstanceParamRecordsItemInput` via:
//
//	GetInstanceParamRecordsItemArgs{...}
type GetInstanceParamRecordsItemInput interface {
	pulumi.Input

	ToGetInstanceParamRecordsItemOutput() GetInstanceParamRecordsItemOutput
	ToGetInstanceParamRecordsItemOutputWithContext(context.Context) GetInstanceParamRecordsItemOutput
}

type GetInstanceParamRecordsItemArgs struct {
	// Instance ID in the format of mssql-dj5i29c5n. It is the same as the instance ID displayed in the TencentDB console and the response parameter InstanceId of the DescribeDBInstances API.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Modification time.
	ModifyTime pulumi.StringInput `pulumi:"modifyTime"`
	// Parameter value after modification.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// Parameter value before modification.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
	// Parameter name.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Parameter modification status. Valid values: 1 (initializing and waiting for modification), 2 (modification succeed), 3 (modification failed), 4 (modifying).
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetInstanceParamRecordsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamRecordsItem)(nil)).Elem()
}

func (i GetInstanceParamRecordsItemArgs) ToGetInstanceParamRecordsItemOutput() GetInstanceParamRecordsItemOutput {
	return i.ToGetInstanceParamRecordsItemOutputWithContext(context.Background())
}

func (i GetInstanceParamRecordsItemArgs) ToGetInstanceParamRecordsItemOutputWithContext(ctx context.Context) GetInstanceParamRecordsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamRecordsItemOutput)
}

// GetInstanceParamRecordsItemArrayInput is an input type that accepts GetInstanceParamRecordsItemArray and GetInstanceParamRecordsItemArrayOutput values.
// You can construct a concrete instance of `GetInstanceParamRecordsItemArrayInput` via:
//
//	GetInstanceParamRecordsItemArray{ GetInstanceParamRecordsItemArgs{...} }
type GetInstanceParamRecordsItemArrayInput interface {
	pulumi.Input

	ToGetInstanceParamRecordsItemArrayOutput() GetInstanceParamRecordsItemArrayOutput
	ToGetInstanceParamRecordsItemArrayOutputWithContext(context.Context) GetInstanceParamRecordsItemArrayOutput
}

type GetInstanceParamRecordsItemArray []GetInstanceParamRecordsItemInput

func (GetInstanceParamRecordsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamRecordsItem)(nil)).Elem()
}

func (i GetInstanceParamRecordsItemArray) ToGetInstanceParamRecordsItemArrayOutput() GetInstanceParamRecordsItemArrayOutput {
	return i.ToGetInstanceParamRecordsItemArrayOutputWithContext(context.Background())
}

func (i GetInstanceParamRecordsItemArray) ToGetInstanceParamRecordsItemArrayOutputWithContext(ctx context.Context) GetInstanceParamRecordsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParamRecordsItemArrayOutput)
}

type GetInstanceParamRecordsItemOutput struct{ *pulumi.OutputState }

func (GetInstanceParamRecordsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParamRecordsItem)(nil)).Elem()
}

func (o GetInstanceParamRecordsItemOutput) ToGetInstanceParamRecordsItemOutput() GetInstanceParamRecordsItemOutput {
	return o
}

func (o GetInstanceParamRecordsItemOutput) ToGetInstanceParamRecordsItemOutputWithContext(ctx context.Context) GetInstanceParamRecordsItemOutput {
	return o
}

// Instance ID in the format of mssql-dj5i29c5n. It is the same as the instance ID displayed in the TencentDB console and the response parameter InstanceId of the DescribeDBInstances API.
func (o GetInstanceParamRecordsItemOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamRecordsItem) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Modification time.
func (o GetInstanceParamRecordsItemOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamRecordsItem) string { return v.ModifyTime }).(pulumi.StringOutput)
}

// Parameter value after modification.
func (o GetInstanceParamRecordsItemOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamRecordsItem) string { return v.NewValue }).(pulumi.StringOutput)
}

// Parameter value before modification.
func (o GetInstanceParamRecordsItemOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamRecordsItem) string { return v.OldValue }).(pulumi.StringOutput)
}

// Parameter name.
func (o GetInstanceParamRecordsItemOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParamRecordsItem) string { return v.ParamName }).(pulumi.StringOutput)
}

// Parameter modification status. Valid values: 1 (initializing and waiting for modification), 2 (modification succeed), 3 (modification failed), 4 (modifying).
func (o GetInstanceParamRecordsItemOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceParamRecordsItem) int { return v.Status }).(pulumi.IntOutput)
}

type GetInstanceParamRecordsItemArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceParamRecordsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceParamRecordsItem)(nil)).Elem()
}

func (o GetInstanceParamRecordsItemArrayOutput) ToGetInstanceParamRecordsItemArrayOutput() GetInstanceParamRecordsItemArrayOutput {
	return o
}

func (o GetInstanceParamRecordsItemArrayOutput) ToGetInstanceParamRecordsItemArrayOutputWithContext(ctx context.Context) GetInstanceParamRecordsItemArrayOutput {
	return o
}

func (o GetInstanceParamRecordsItemArrayOutput) Index(i pulumi.IntInput) GetInstanceParamRecordsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceParamRecordsItem {
		return vs[0].([]GetInstanceParamRecordsItem)[vs[1].(int)]
	}).(GetInstanceParamRecordsItemOutput)
}

type GetInstancesInstanceList struct {
	// Availability zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Pay type of the SQL Server instance. For now, only `POSTPAID_BY_HOUR` is valid.
	ChargeType string `pulumi:"chargeType"`
	// Create time of the SQL Server instance.
	CreateTime string `pulumi:"createTime"`
	// Version of the SQL Server database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	EngineVersion string `pulumi:"engineVersion"`
	// Instance type. `DUAL` (dual-server high availability), `CLUSTER` (cluster).
	HaType string `pulumi:"haType"`
	// ID of the SQL Server instance to be query.
	Id string `pulumi:"id"`
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloudSqlserverSpecinfos` provides.
	Memory int `pulumi:"memory"`
	// Name of the SQL Server instance to be query.
	Name string `pulumi:"name"`
	// Project ID of the SQL Server instance to be query.
	ProjectId int `pulumi:"projectId"`
	// Readonly flag. `RO` (read-only instance), `MASTER` (primary instance with read-only instances). If it is left empty, it refers to an instance which is not read-only and has no RO group.
	RoFlag string `pulumi:"roFlag"`
	// Status of the SQL Server instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
	Status int `pulumi:"status"`
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storageMin` and `storageMax` which data source `tencentcloudSqlserverSpecinfos` provides.
	Storage int `pulumi:"storage"`
	// Subnet ID of the SQL Server instance to be query.
	SubnetId string `pulumi:"subnetId"`
	// Tags of the SQL Server instance.
	Tags map[string]interface{} `pulumi:"tags"`
	// Used storage.
	UsedStorage int `pulumi:"usedStorage"`
	// IP for private access.
	Vip string `pulumi:"vip"`
	// Vpc ID of the SQL Server instance to be query.
	VpcId string `pulumi:"vpcId"`
	// Port for private access.
	Vport int `pulumi:"vport"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//	GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Availability zone.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Pay type of the SQL Server instance. For now, only `POSTPAID_BY_HOUR` is valid.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Create time of the SQL Server instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Version of the SQL Server database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Instance type. `DUAL` (dual-server high availability), `CLUSTER` (cluster).
	HaType pulumi.StringInput `pulumi:"haType"`
	// ID of the SQL Server instance to be query.
	Id pulumi.StringInput `pulumi:"id"`
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloudSqlserverSpecinfos` provides.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Name of the SQL Server instance to be query.
	Name pulumi.StringInput `pulumi:"name"`
	// Project ID of the SQL Server instance to be query.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Readonly flag. `RO` (read-only instance), `MASTER` (primary instance with read-only instances). If it is left empty, it refers to an instance which is not read-only and has no RO group.
	RoFlag pulumi.StringInput `pulumi:"roFlag"`
	// Status of the SQL Server instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
	Status pulumi.IntInput `pulumi:"status"`
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storageMin` and `storageMax` which data source `tencentcloudSqlserverSpecinfos` provides.
	Storage pulumi.IntInput `pulumi:"storage"`
	// Subnet ID of the SQL Server instance to be query.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of the SQL Server instance.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Used storage.
	UsedStorage pulumi.IntInput `pulumi:"usedStorage"`
	// IP for private access.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Vpc ID of the SQL Server instance to be query.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Port for private access.
	Vport pulumi.IntInput `pulumi:"vport"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//	GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Availability zone.
func (o GetInstancesInstanceListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Pay type of the SQL Server instance. For now, only `POSTPAID_BY_HOUR` is valid.
func (o GetInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Create time of the SQL Server instance.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Version of the SQL Server database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
func (o GetInstancesInstanceListOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Instance type. `DUAL` (dual-server high availability), `CLUSTER` (cluster).
func (o GetInstancesInstanceListOutput) HaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.HaType }).(pulumi.StringOutput)
}

// ID of the SQL Server instance to be query.
func (o GetInstancesInstanceListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Id }).(pulumi.StringOutput)
}

// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloudSqlserverSpecinfos` provides.
func (o GetInstancesInstanceListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Memory }).(pulumi.IntOutput)
}

// Name of the SQL Server instance to be query.
func (o GetInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// Project ID of the SQL Server instance to be query.
func (o GetInstancesInstanceListOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Readonly flag. `RO` (read-only instance), `MASTER` (primary instance with read-only instances). If it is left empty, it refers to an instance which is not read-only and has no RO group.
func (o GetInstancesInstanceListOutput) RoFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.RoFlag }).(pulumi.StringOutput)
}

// Status of the SQL Server instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
func (o GetInstancesInstanceListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Status }).(pulumi.IntOutput)
}

// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storageMin` and `storageMax` which data source `tencentcloudSqlserverSpecinfos` provides.
func (o GetInstancesInstanceListOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Storage }).(pulumi.IntOutput)
}

// Subnet ID of the SQL Server instance to be query.
func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of the SQL Server instance.
func (o GetInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Used storage.
func (o GetInstancesInstanceListOutput) UsedStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.UsedStorage }).(pulumi.IntOutput)
}

// IP for private access.
func (o GetInstancesInstanceListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Vip }).(pulumi.StringOutput)
}

// Vpc ID of the SQL Server instance to be query.
func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

// Port for private access.
func (o GetInstancesInstanceListOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.Vport }).(pulumi.IntOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetProjectSecurityGroupsSecurityGroupSet struct {
	// Creation time, time format: yyyy-mm-dd hh:mm:ss.
	CreateTime string `pulumi:"createTime"`
	// inbound rules.
	InboundSets []GetProjectSecurityGroupsSecurityGroupSetInboundSet `pulumi:"inboundSets"`
	// outbound rules.
	OutboundSets []GetProjectSecurityGroupsSecurityGroupSetOutboundSet `pulumi:"outboundSets"`
	// Project ID, which can be viewed through the console project management.
	ProjectId int `pulumi:"projectId"`
	// Security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// security group name.
	SecurityGroupName string `pulumi:"securityGroupName"`
	// Security Group Remarks.
	SecurityGroupRemark string `pulumi:"securityGroupRemark"`
}

// GetProjectSecurityGroupsSecurityGroupSetInput is an input type that accepts GetProjectSecurityGroupsSecurityGroupSetArgs and GetProjectSecurityGroupsSecurityGroupSetOutput values.
// You can construct a concrete instance of `GetProjectSecurityGroupsSecurityGroupSetInput` via:
//
//	GetProjectSecurityGroupsSecurityGroupSetArgs{...}
type GetProjectSecurityGroupsSecurityGroupSetInput interface {
	pulumi.Input

	ToGetProjectSecurityGroupsSecurityGroupSetOutput() GetProjectSecurityGroupsSecurityGroupSetOutput
	ToGetProjectSecurityGroupsSecurityGroupSetOutputWithContext(context.Context) GetProjectSecurityGroupsSecurityGroupSetOutput
}

type GetProjectSecurityGroupsSecurityGroupSetArgs struct {
	// Creation time, time format: yyyy-mm-dd hh:mm:ss.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// inbound rules.
	InboundSets GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayInput `pulumi:"inboundSets"`
	// outbound rules.
	OutboundSets GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayInput `pulumi:"outboundSets"`
	// Project ID, which can be viewed through the console project management.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// Security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// security group name.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
	// Security Group Remarks.
	SecurityGroupRemark pulumi.StringInput `pulumi:"securityGroupRemark"`
}

func (GetProjectSecurityGroupsSecurityGroupSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSet)(nil)).Elem()
}

func (i GetProjectSecurityGroupsSecurityGroupSetArgs) ToGetProjectSecurityGroupsSecurityGroupSetOutput() GetProjectSecurityGroupsSecurityGroupSetOutput {
	return i.ToGetProjectSecurityGroupsSecurityGroupSetOutputWithContext(context.Background())
}

func (i GetProjectSecurityGroupsSecurityGroupSetArgs) ToGetProjectSecurityGroupsSecurityGroupSetOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecurityGroupsSecurityGroupSetOutput)
}

// GetProjectSecurityGroupsSecurityGroupSetArrayInput is an input type that accepts GetProjectSecurityGroupsSecurityGroupSetArray and GetProjectSecurityGroupsSecurityGroupSetArrayOutput values.
// You can construct a concrete instance of `GetProjectSecurityGroupsSecurityGroupSetArrayInput` via:
//
//	GetProjectSecurityGroupsSecurityGroupSetArray{ GetProjectSecurityGroupsSecurityGroupSetArgs{...} }
type GetProjectSecurityGroupsSecurityGroupSetArrayInput interface {
	pulumi.Input

	ToGetProjectSecurityGroupsSecurityGroupSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetArrayOutput
	ToGetProjectSecurityGroupsSecurityGroupSetArrayOutputWithContext(context.Context) GetProjectSecurityGroupsSecurityGroupSetArrayOutput
}

type GetProjectSecurityGroupsSecurityGroupSetArray []GetProjectSecurityGroupsSecurityGroupSetInput

func (GetProjectSecurityGroupsSecurityGroupSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecurityGroupsSecurityGroupSet)(nil)).Elem()
}

func (i GetProjectSecurityGroupsSecurityGroupSetArray) ToGetProjectSecurityGroupsSecurityGroupSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetArrayOutput {
	return i.ToGetProjectSecurityGroupsSecurityGroupSetArrayOutputWithContext(context.Background())
}

func (i GetProjectSecurityGroupsSecurityGroupSetArray) ToGetProjectSecurityGroupsSecurityGroupSetArrayOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecurityGroupsSecurityGroupSetArrayOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetOutput struct{ *pulumi.OutputState }

func (GetProjectSecurityGroupsSecurityGroupSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSet)(nil)).Elem()
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutput) ToGetProjectSecurityGroupsSecurityGroupSetOutput() GetProjectSecurityGroupsSecurityGroupSetOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutput) ToGetProjectSecurityGroupsSecurityGroupSetOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetOutput {
	return o
}

// Creation time, time format: yyyy-mm-dd hh:mm:ss.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// inbound rules.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) InboundSets() GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) []GetProjectSecurityGroupsSecurityGroupSetInboundSet {
		return v.InboundSets
	}).(GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput)
}

// outbound rules.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) OutboundSets() GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) []GetProjectSecurityGroupsSecurityGroupSetOutboundSet {
		return v.OutboundSets
	}).(GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput)
}

// Project ID, which can be viewed through the console project management.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Security group ID.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// security group name.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// Security Group Remarks.
func (o GetProjectSecurityGroupsSecurityGroupSetOutput) SecurityGroupRemark() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSet) string { return v.SecurityGroupRemark }).(pulumi.StringOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetArrayOutput struct{ *pulumi.OutputState }

func (GetProjectSecurityGroupsSecurityGroupSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecurityGroupsSecurityGroupSet)(nil)).Elem()
}

func (o GetProjectSecurityGroupsSecurityGroupSetArrayOutput) ToGetProjectSecurityGroupsSecurityGroupSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetArrayOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetArrayOutput) ToGetProjectSecurityGroupsSecurityGroupSetArrayOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetArrayOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetArrayOutput) Index(i pulumi.IntInput) GetProjectSecurityGroupsSecurityGroupSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectSecurityGroupsSecurityGroupSet {
		return vs[0].([]GetProjectSecurityGroupsSecurityGroupSet)[vs[1].(int)]
	}).(GetProjectSecurityGroupsSecurityGroupSetOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetInboundSet struct {
	// Policy, ACCEPT or DROP.
	Action string `pulumi:"action"`
	// Destination IP or IP segment, such as 172.16.0.0/12.
	CidrIp string `pulumi:"cidrIp"`
	// The direction defined by the rules, OUTPUT-outgoing rules INPUT-inbound rules.
	Dir string `pulumi:"dir"`
	// Network protocol, support UDP, TCP, etc.
	IpProtocol string `pulumi:"ipProtocol"`
	// port or port range.
	PortRange string `pulumi:"portRange"`
}

// GetProjectSecurityGroupsSecurityGroupSetInboundSetInput is an input type that accepts GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs and GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput values.
// You can construct a concrete instance of `GetProjectSecurityGroupsSecurityGroupSetInboundSetInput` via:
//
//	GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs{...}
type GetProjectSecurityGroupsSecurityGroupSetInboundSetInput interface {
	pulumi.Input

	ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutput() GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput
	ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutputWithContext(context.Context) GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput
}

type GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs struct {
	// Policy, ACCEPT or DROP.
	Action pulumi.StringInput `pulumi:"action"`
	// Destination IP or IP segment, such as 172.16.0.0/12.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The direction defined by the rules, OUTPUT-outgoing rules INPUT-inbound rules.
	Dir pulumi.StringInput `pulumi:"dir"`
	// Network protocol, support UDP, TCP, etc.
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// port or port range.
	PortRange pulumi.StringInput `pulumi:"portRange"`
}

func (GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetInboundSet)(nil)).Elem()
}

func (i GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutput() GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput {
	return i.ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutputWithContext(context.Background())
}

func (i GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput)
}

// GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayInput is an input type that accepts GetProjectSecurityGroupsSecurityGroupSetInboundSetArray and GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput values.
// You can construct a concrete instance of `GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayInput` via:
//
//	GetProjectSecurityGroupsSecurityGroupSetInboundSetArray{ GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs{...} }
type GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayInput interface {
	pulumi.Input

	ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput
	ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutputWithContext(context.Context) GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput
}

type GetProjectSecurityGroupsSecurityGroupSetInboundSetArray []GetProjectSecurityGroupsSecurityGroupSetInboundSetInput

func (GetProjectSecurityGroupsSecurityGroupSetInboundSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecurityGroupsSecurityGroupSetInboundSet)(nil)).Elem()
}

func (i GetProjectSecurityGroupsSecurityGroupSetInboundSetArray) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput {
	return i.ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutputWithContext(context.Background())
}

func (i GetProjectSecurityGroupsSecurityGroupSetInboundSetArray) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput struct{ *pulumi.OutputState }

func (GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetInboundSet)(nil)).Elem()
}

func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutput() GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput {
	return o
}

// Policy, ACCEPT or DROP.
func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetInboundSet) string { return v.Action }).(pulumi.StringOutput)
}

// Destination IP or IP segment, such as 172.16.0.0/12.
func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetInboundSet) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The direction defined by the rules, OUTPUT-outgoing rules INPUT-inbound rules.
func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) Dir() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetInboundSet) string { return v.Dir }).(pulumi.StringOutput)
}

// Network protocol, support UDP, TCP, etc.
func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetInboundSet) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// port or port range.
func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetInboundSet) string { return v.PortRange }).(pulumi.StringOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput struct{ *pulumi.OutputState }

func (GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecurityGroupsSecurityGroupSetInboundSet)(nil)).Elem()
}

func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput) ToGetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput) Index(i pulumi.IntInput) GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectSecurityGroupsSecurityGroupSetInboundSet {
		return vs[0].([]GetProjectSecurityGroupsSecurityGroupSetInboundSet)[vs[1].(int)]
	}).(GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetOutboundSet struct {
	// Policy, ACCEPT or DROP.
	Action string `pulumi:"action"`
	// Destination IP or IP segment, such as 172.16.0.0/12.
	CidrIp string `pulumi:"cidrIp"`
	// The direction defined by the rules, OUTPUT-outgoing rules INPUT-inbound rules.
	Dir string `pulumi:"dir"`
	// Network protocol, support UDP, TCP, etc.
	IpProtocol string `pulumi:"ipProtocol"`
	// port or port range.
	PortRange string `pulumi:"portRange"`
}

// GetProjectSecurityGroupsSecurityGroupSetOutboundSetInput is an input type that accepts GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs and GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput values.
// You can construct a concrete instance of `GetProjectSecurityGroupsSecurityGroupSetOutboundSetInput` via:
//
//	GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs{...}
type GetProjectSecurityGroupsSecurityGroupSetOutboundSetInput interface {
	pulumi.Input

	ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput() GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput
	ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutputWithContext(context.Context) GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput
}

type GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs struct {
	// Policy, ACCEPT or DROP.
	Action pulumi.StringInput `pulumi:"action"`
	// Destination IP or IP segment, such as 172.16.0.0/12.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The direction defined by the rules, OUTPUT-outgoing rules INPUT-inbound rules.
	Dir pulumi.StringInput `pulumi:"dir"`
	// Network protocol, support UDP, TCP, etc.
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// port or port range.
	PortRange pulumi.StringInput `pulumi:"portRange"`
}

func (GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetOutboundSet)(nil)).Elem()
}

func (i GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput() GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput {
	return i.ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutputWithContext(context.Background())
}

func (i GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput)
}

// GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayInput is an input type that accepts GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray and GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput values.
// You can construct a concrete instance of `GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayInput` via:
//
//	GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray{ GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs{...} }
type GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayInput interface {
	pulumi.Input

	ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput
	ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutputWithContext(context.Context) GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput
}

type GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray []GetProjectSecurityGroupsSecurityGroupSetOutboundSetInput

func (GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecurityGroupsSecurityGroupSetOutboundSet)(nil)).Elem()
}

func (i GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput {
	return i.ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutputWithContext(context.Background())
}

func (i GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput struct{ *pulumi.OutputState }

func (GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetOutboundSet)(nil)).Elem()
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput() GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput {
	return o
}

// Policy, ACCEPT or DROP.
func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetOutboundSet) string { return v.Action }).(pulumi.StringOutput)
}

// Destination IP or IP segment, such as 172.16.0.0/12.
func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetOutboundSet) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The direction defined by the rules, OUTPUT-outgoing rules INPUT-inbound rules.
func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) Dir() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetOutboundSet) string { return v.Dir }).(pulumi.StringOutput)
}

// Network protocol, support UDP, TCP, etc.
func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetOutboundSet) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// port or port range.
func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecurityGroupsSecurityGroupSetOutboundSet) string { return v.PortRange }).(pulumi.StringOutput)
}

type GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput struct{ *pulumi.OutputState }

func (GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecurityGroupsSecurityGroupSetOutboundSet)(nil)).Elem()
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput() GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput) ToGetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutputWithContext(ctx context.Context) GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput {
	return o
}

func (o GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput) Index(i pulumi.IntInput) GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectSecurityGroupsSecurityGroupSetOutboundSet {
		return vs[0].([]GetProjectSecurityGroupsSecurityGroupSetOutboundSet)[vs[1].(int)]
	}).(GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput)
}

type GetPublishSubscribesPublishSubscribeList struct {
	// Database Publish and Publish relationship list.
	DatabaseTuples []GetPublishSubscribesPublishSubscribeListDatabaseTuple `pulumi:"databaseTuples"`
	// ID of the SQL Server instance which publish.
	PublishInstanceId string `pulumi:"publishInstanceId"`
	// IP of the the SQL Server instance which publish.
	PublishInstanceIp string `pulumi:"publishInstanceIp"`
	// Name of the SQL Server instance which publish.
	PublishInstanceName string `pulumi:"publishInstanceName"`
	// The id of the Publish and Subscribe.
	PublishSubscribeId int `pulumi:"publishSubscribeId"`
	// The name of the Publish and Subscribe.
	PublishSubscribeName string `pulumi:"publishSubscribeName"`
	// ID of the SQL Server instance which subscribe.
	SubscribeInstanceId string `pulumi:"subscribeInstanceId"`
	// IP of the SQL Server instance which subscribe.
	SubscribeInstanceIp string `pulumi:"subscribeInstanceIp"`
	// Name of the SQL Server instance which subscribe.
	SubscribeInstanceName string `pulumi:"subscribeInstanceName"`
}

// GetPublishSubscribesPublishSubscribeListInput is an input type that accepts GetPublishSubscribesPublishSubscribeListArgs and GetPublishSubscribesPublishSubscribeListOutput values.
// You can construct a concrete instance of `GetPublishSubscribesPublishSubscribeListInput` via:
//
//	GetPublishSubscribesPublishSubscribeListArgs{...}
type GetPublishSubscribesPublishSubscribeListInput interface {
	pulumi.Input

	ToGetPublishSubscribesPublishSubscribeListOutput() GetPublishSubscribesPublishSubscribeListOutput
	ToGetPublishSubscribesPublishSubscribeListOutputWithContext(context.Context) GetPublishSubscribesPublishSubscribeListOutput
}

type GetPublishSubscribesPublishSubscribeListArgs struct {
	// Database Publish and Publish relationship list.
	DatabaseTuples GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayInput `pulumi:"databaseTuples"`
	// ID of the SQL Server instance which publish.
	PublishInstanceId pulumi.StringInput `pulumi:"publishInstanceId"`
	// IP of the the SQL Server instance which publish.
	PublishInstanceIp pulumi.StringInput `pulumi:"publishInstanceIp"`
	// Name of the SQL Server instance which publish.
	PublishInstanceName pulumi.StringInput `pulumi:"publishInstanceName"`
	// The id of the Publish and Subscribe.
	PublishSubscribeId pulumi.IntInput `pulumi:"publishSubscribeId"`
	// The name of the Publish and Subscribe.
	PublishSubscribeName pulumi.StringInput `pulumi:"publishSubscribeName"`
	// ID of the SQL Server instance which subscribe.
	SubscribeInstanceId pulumi.StringInput `pulumi:"subscribeInstanceId"`
	// IP of the SQL Server instance which subscribe.
	SubscribeInstanceIp pulumi.StringInput `pulumi:"subscribeInstanceIp"`
	// Name of the SQL Server instance which subscribe.
	SubscribeInstanceName pulumi.StringInput `pulumi:"subscribeInstanceName"`
}

func (GetPublishSubscribesPublishSubscribeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishSubscribesPublishSubscribeList)(nil)).Elem()
}

func (i GetPublishSubscribesPublishSubscribeListArgs) ToGetPublishSubscribesPublishSubscribeListOutput() GetPublishSubscribesPublishSubscribeListOutput {
	return i.ToGetPublishSubscribesPublishSubscribeListOutputWithContext(context.Background())
}

func (i GetPublishSubscribesPublishSubscribeListArgs) ToGetPublishSubscribesPublishSubscribeListOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublishSubscribesPublishSubscribeListOutput)
}

// GetPublishSubscribesPublishSubscribeListArrayInput is an input type that accepts GetPublishSubscribesPublishSubscribeListArray and GetPublishSubscribesPublishSubscribeListArrayOutput values.
// You can construct a concrete instance of `GetPublishSubscribesPublishSubscribeListArrayInput` via:
//
//	GetPublishSubscribesPublishSubscribeListArray{ GetPublishSubscribesPublishSubscribeListArgs{...} }
type GetPublishSubscribesPublishSubscribeListArrayInput interface {
	pulumi.Input

	ToGetPublishSubscribesPublishSubscribeListArrayOutput() GetPublishSubscribesPublishSubscribeListArrayOutput
	ToGetPublishSubscribesPublishSubscribeListArrayOutputWithContext(context.Context) GetPublishSubscribesPublishSubscribeListArrayOutput
}

type GetPublishSubscribesPublishSubscribeListArray []GetPublishSubscribesPublishSubscribeListInput

func (GetPublishSubscribesPublishSubscribeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublishSubscribesPublishSubscribeList)(nil)).Elem()
}

func (i GetPublishSubscribesPublishSubscribeListArray) ToGetPublishSubscribesPublishSubscribeListArrayOutput() GetPublishSubscribesPublishSubscribeListArrayOutput {
	return i.ToGetPublishSubscribesPublishSubscribeListArrayOutputWithContext(context.Background())
}

func (i GetPublishSubscribesPublishSubscribeListArray) ToGetPublishSubscribesPublishSubscribeListArrayOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublishSubscribesPublishSubscribeListArrayOutput)
}

type GetPublishSubscribesPublishSubscribeListOutput struct{ *pulumi.OutputState }

func (GetPublishSubscribesPublishSubscribeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishSubscribesPublishSubscribeList)(nil)).Elem()
}

func (o GetPublishSubscribesPublishSubscribeListOutput) ToGetPublishSubscribesPublishSubscribeListOutput() GetPublishSubscribesPublishSubscribeListOutput {
	return o
}

func (o GetPublishSubscribesPublishSubscribeListOutput) ToGetPublishSubscribesPublishSubscribeListOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListOutput {
	return o
}

// Database Publish and Publish relationship list.
func (o GetPublishSubscribesPublishSubscribeListOutput) DatabaseTuples() GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) []GetPublishSubscribesPublishSubscribeListDatabaseTuple {
		return v.DatabaseTuples
	}).(GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput)
}

// ID of the SQL Server instance which publish.
func (o GetPublishSubscribesPublishSubscribeListOutput) PublishInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.PublishInstanceId }).(pulumi.StringOutput)
}

// IP of the the SQL Server instance which publish.
func (o GetPublishSubscribesPublishSubscribeListOutput) PublishInstanceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.PublishInstanceIp }).(pulumi.StringOutput)
}

// Name of the SQL Server instance which publish.
func (o GetPublishSubscribesPublishSubscribeListOutput) PublishInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.PublishInstanceName }).(pulumi.StringOutput)
}

// The id of the Publish and Subscribe.
func (o GetPublishSubscribesPublishSubscribeListOutput) PublishSubscribeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) int { return v.PublishSubscribeId }).(pulumi.IntOutput)
}

// The name of the Publish and Subscribe.
func (o GetPublishSubscribesPublishSubscribeListOutput) PublishSubscribeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.PublishSubscribeName }).(pulumi.StringOutput)
}

// ID of the SQL Server instance which subscribe.
func (o GetPublishSubscribesPublishSubscribeListOutput) SubscribeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.SubscribeInstanceId }).(pulumi.StringOutput)
}

// IP of the SQL Server instance which subscribe.
func (o GetPublishSubscribesPublishSubscribeListOutput) SubscribeInstanceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.SubscribeInstanceIp }).(pulumi.StringOutput)
}

// Name of the SQL Server instance which subscribe.
func (o GetPublishSubscribesPublishSubscribeListOutput) SubscribeInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeList) string { return v.SubscribeInstanceName }).(pulumi.StringOutput)
}

type GetPublishSubscribesPublishSubscribeListArrayOutput struct{ *pulumi.OutputState }

func (GetPublishSubscribesPublishSubscribeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublishSubscribesPublishSubscribeList)(nil)).Elem()
}

func (o GetPublishSubscribesPublishSubscribeListArrayOutput) ToGetPublishSubscribesPublishSubscribeListArrayOutput() GetPublishSubscribesPublishSubscribeListArrayOutput {
	return o
}

func (o GetPublishSubscribesPublishSubscribeListArrayOutput) ToGetPublishSubscribesPublishSubscribeListArrayOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListArrayOutput {
	return o
}

func (o GetPublishSubscribesPublishSubscribeListArrayOutput) Index(i pulumi.IntInput) GetPublishSubscribesPublishSubscribeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublishSubscribesPublishSubscribeList {
		return vs[0].([]GetPublishSubscribesPublishSubscribeList)[vs[1].(int)]
	}).(GetPublishSubscribesPublishSubscribeListOutput)
}

type GetPublishSubscribesPublishSubscribeListDatabaseTuple struct {
	// Last sync time.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// Name of publish database.
	PublishDatabase string `pulumi:"publishDatabase"`
	// Publish and subscribe status between databases, valid values are `running`, `success`, `fail`, `unknow`.
	Status string `pulumi:"status"`
	// Name of subscribe database.
	SubscribeDatabase string `pulumi:"subscribeDatabase"`
}

// GetPublishSubscribesPublishSubscribeListDatabaseTupleInput is an input type that accepts GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs and GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput values.
// You can construct a concrete instance of `GetPublishSubscribesPublishSubscribeListDatabaseTupleInput` via:
//
//	GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs{...}
type GetPublishSubscribesPublishSubscribeListDatabaseTupleInput interface {
	pulumi.Input

	ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutput() GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput
	ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutputWithContext(context.Context) GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput
}

type GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs struct {
	// Last sync time.
	LastSyncTime pulumi.StringInput `pulumi:"lastSyncTime"`
	// Name of publish database.
	PublishDatabase pulumi.StringInput `pulumi:"publishDatabase"`
	// Publish and subscribe status between databases, valid values are `running`, `success`, `fail`, `unknow`.
	Status pulumi.StringInput `pulumi:"status"`
	// Name of subscribe database.
	SubscribeDatabase pulumi.StringInput `pulumi:"subscribeDatabase"`
}

func (GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishSubscribesPublishSubscribeListDatabaseTuple)(nil)).Elem()
}

func (i GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutput() GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput {
	return i.ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutputWithContext(context.Background())
}

func (i GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput)
}

// GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayInput is an input type that accepts GetPublishSubscribesPublishSubscribeListDatabaseTupleArray and GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput values.
// You can construct a concrete instance of `GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayInput` via:
//
//	GetPublishSubscribesPublishSubscribeListDatabaseTupleArray{ GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs{...} }
type GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayInput interface {
	pulumi.Input

	ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput() GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput
	ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutputWithContext(context.Context) GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput
}

type GetPublishSubscribesPublishSubscribeListDatabaseTupleArray []GetPublishSubscribesPublishSubscribeListDatabaseTupleInput

func (GetPublishSubscribesPublishSubscribeListDatabaseTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublishSubscribesPublishSubscribeListDatabaseTuple)(nil)).Elem()
}

func (i GetPublishSubscribesPublishSubscribeListDatabaseTupleArray) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput() GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput {
	return i.ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutputWithContext(context.Background())
}

func (i GetPublishSubscribesPublishSubscribeListDatabaseTupleArray) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput)
}

type GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput struct{ *pulumi.OutputState }

func (GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublishSubscribesPublishSubscribeListDatabaseTuple)(nil)).Elem()
}

func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutput() GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput {
	return o
}

func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput {
	return o
}

// Last sync time.
func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeListDatabaseTuple) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// Name of publish database.
func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) PublishDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeListDatabaseTuple) string { return v.PublishDatabase }).(pulumi.StringOutput)
}

// Publish and subscribe status between databases, valid values are `running`, `success`, `fail`, `unknow`.
func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeListDatabaseTuple) string { return v.Status }).(pulumi.StringOutput)
}

// Name of subscribe database.
func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput) SubscribeDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublishSubscribesPublishSubscribeListDatabaseTuple) string { return v.SubscribeDatabase }).(pulumi.StringOutput)
}

type GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput struct{ *pulumi.OutputState }

func (GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublishSubscribesPublishSubscribeListDatabaseTuple)(nil)).Elem()
}

func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput() GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput {
	return o
}

func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput) ToGetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutputWithContext(ctx context.Context) GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput {
	return o
}

func (o GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput) Index(i pulumi.IntInput) GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublishSubscribesPublishSubscribeListDatabaseTuple {
		return vs[0].([]GetPublishSubscribesPublishSubscribeListDatabaseTuple)[vs[1].(int)]
	}).(GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput)
}

type GetQueryXeventEvent struct {
	// Generation end time of an extended file.
	EndTime string `pulumi:"endTime"`
	// Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
	EventType string `pulumi:"eventType"`
	// Download address on the public network.
	ExternalAddr string `pulumi:"externalAddr"`
	// File name of an extended event.
	FileName string `pulumi:"fileName"`
	// ID.
	Id int `pulumi:"id"`
	// Download address on the private network.
	InternalAddr string `pulumi:"internalAddr"`
	// File size of an extended event.
	Size int `pulumi:"size"`
	// Generation start time of an extended file.
	StartTime string `pulumi:"startTime"`
	// Event record status. Valid values: 1 (succeeded), 2 (failed).
	Status int `pulumi:"status"`
}

// GetQueryXeventEventInput is an input type that accepts GetQueryXeventEventArgs and GetQueryXeventEventOutput values.
// You can construct a concrete instance of `GetQueryXeventEventInput` via:
//
//	GetQueryXeventEventArgs{...}
type GetQueryXeventEventInput interface {
	pulumi.Input

	ToGetQueryXeventEventOutput() GetQueryXeventEventOutput
	ToGetQueryXeventEventOutputWithContext(context.Context) GetQueryXeventEventOutput
}

type GetQueryXeventEventArgs struct {
	// Generation end time of an extended file.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Download address on the public network.
	ExternalAddr pulumi.StringInput `pulumi:"externalAddr"`
	// File name of an extended event.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Download address on the private network.
	InternalAddr pulumi.StringInput `pulumi:"internalAddr"`
	// File size of an extended event.
	Size pulumi.IntInput `pulumi:"size"`
	// Generation start time of an extended file.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Event record status. Valid values: 1 (succeeded), 2 (failed).
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetQueryXeventEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryXeventEvent)(nil)).Elem()
}

func (i GetQueryXeventEventArgs) ToGetQueryXeventEventOutput() GetQueryXeventEventOutput {
	return i.ToGetQueryXeventEventOutputWithContext(context.Background())
}

func (i GetQueryXeventEventArgs) ToGetQueryXeventEventOutputWithContext(ctx context.Context) GetQueryXeventEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryXeventEventOutput)
}

// GetQueryXeventEventArrayInput is an input type that accepts GetQueryXeventEventArray and GetQueryXeventEventArrayOutput values.
// You can construct a concrete instance of `GetQueryXeventEventArrayInput` via:
//
//	GetQueryXeventEventArray{ GetQueryXeventEventArgs{...} }
type GetQueryXeventEventArrayInput interface {
	pulumi.Input

	ToGetQueryXeventEventArrayOutput() GetQueryXeventEventArrayOutput
	ToGetQueryXeventEventArrayOutputWithContext(context.Context) GetQueryXeventEventArrayOutput
}

type GetQueryXeventEventArray []GetQueryXeventEventInput

func (GetQueryXeventEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryXeventEvent)(nil)).Elem()
}

func (i GetQueryXeventEventArray) ToGetQueryXeventEventArrayOutput() GetQueryXeventEventArrayOutput {
	return i.ToGetQueryXeventEventArrayOutputWithContext(context.Background())
}

func (i GetQueryXeventEventArray) ToGetQueryXeventEventArrayOutputWithContext(ctx context.Context) GetQueryXeventEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryXeventEventArrayOutput)
}

type GetQueryXeventEventOutput struct{ *pulumi.OutputState }

func (GetQueryXeventEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryXeventEvent)(nil)).Elem()
}

func (o GetQueryXeventEventOutput) ToGetQueryXeventEventOutput() GetQueryXeventEventOutput {
	return o
}

func (o GetQueryXeventEventOutput) ToGetQueryXeventEventOutputWithContext(ctx context.Context) GetQueryXeventEventOutput {
	return o
}

// Generation end time of an extended file.
func (o GetQueryXeventEventOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) string { return v.EndTime }).(pulumi.StringOutput)
}

// Event type. Valid values: slow (Slow SQL event), blocked (blocking event), deadlock` (deadlock event).
func (o GetQueryXeventEventOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) string { return v.EventType }).(pulumi.StringOutput)
}

// Download address on the public network.
func (o GetQueryXeventEventOutput) ExternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) string { return v.ExternalAddr }).(pulumi.StringOutput)
}

// File name of an extended event.
func (o GetQueryXeventEventOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) string { return v.FileName }).(pulumi.StringOutput)
}

// ID.
func (o GetQueryXeventEventOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) int { return v.Id }).(pulumi.IntOutput)
}

// Download address on the private network.
func (o GetQueryXeventEventOutput) InternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) string { return v.InternalAddr }).(pulumi.StringOutput)
}

// File size of an extended event.
func (o GetQueryXeventEventOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) int { return v.Size }).(pulumi.IntOutput)
}

// Generation start time of an extended file.
func (o GetQueryXeventEventOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) string { return v.StartTime }).(pulumi.StringOutput)
}

// Event record status. Valid values: 1 (succeeded), 2 (failed).
func (o GetQueryXeventEventOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetQueryXeventEvent) int { return v.Status }).(pulumi.IntOutput)
}

type GetQueryXeventEventArrayOutput struct{ *pulumi.OutputState }

func (GetQueryXeventEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryXeventEvent)(nil)).Elem()
}

func (o GetQueryXeventEventArrayOutput) ToGetQueryXeventEventArrayOutput() GetQueryXeventEventArrayOutput {
	return o
}

func (o GetQueryXeventEventArrayOutput) ToGetQueryXeventEventArrayOutputWithContext(ctx context.Context) GetQueryXeventEventArrayOutput {
	return o
}

func (o GetQueryXeventEventArrayOutput) Index(i pulumi.IntInput) GetQueryXeventEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueryXeventEvent {
		return vs[0].([]GetQueryXeventEvent)[vs[1].(int)]
	}).(GetQueryXeventEventOutput)
}

type GetReadonlyGroupsList struct {
	// ID of the readonly group.
	Id string `pulumi:"id"`
	// Indicate whether to offline delayed readonly instances.
	IsOfflineDelay int `pulumi:"isOfflineDelay"`
	// Master SQL Server instance ID.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// Maximum delay time of the readonly instances.
	MaxDelayTime int `pulumi:"maxDelayTime"`
	// Minimum readonly instances that stays in the group.
	MinInstances int `pulumi:"minInstances"`
	// Name of the readonly group.
	Name string `pulumi:"name"`
	// Readonly instance ID set of the readonly group.
	ReadonlyInstanceSets []string `pulumi:"readonlyInstanceSets"`
	// Status of the readonly group. `1` for running, `5` for applying.
	Status int `pulumi:"status"`
	// Virtual IP address of the readonly group.
	Vip string `pulumi:"vip"`
	// Virtual port of the readonly group.
	Vport int `pulumi:"vport"`
}

// GetReadonlyGroupsListInput is an input type that accepts GetReadonlyGroupsListArgs and GetReadonlyGroupsListOutput values.
// You can construct a concrete instance of `GetReadonlyGroupsListInput` via:
//
//	GetReadonlyGroupsListArgs{...}
type GetReadonlyGroupsListInput interface {
	pulumi.Input

	ToGetReadonlyGroupsListOutput() GetReadonlyGroupsListOutput
	ToGetReadonlyGroupsListOutputWithContext(context.Context) GetReadonlyGroupsListOutput
}

type GetReadonlyGroupsListArgs struct {
	// ID of the readonly group.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicate whether to offline delayed readonly instances.
	IsOfflineDelay pulumi.IntInput `pulumi:"isOfflineDelay"`
	// Master SQL Server instance ID.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// Maximum delay time of the readonly instances.
	MaxDelayTime pulumi.IntInput `pulumi:"maxDelayTime"`
	// Minimum readonly instances that stays in the group.
	MinInstances pulumi.IntInput `pulumi:"minInstances"`
	// Name of the readonly group.
	Name pulumi.StringInput `pulumi:"name"`
	// Readonly instance ID set of the readonly group.
	ReadonlyInstanceSets pulumi.StringArrayInput `pulumi:"readonlyInstanceSets"`
	// Status of the readonly group. `1` for running, `5` for applying.
	Status pulumi.IntInput `pulumi:"status"`
	// Virtual IP address of the readonly group.
	Vip pulumi.StringInput `pulumi:"vip"`
	// Virtual port of the readonly group.
	Vport pulumi.IntInput `pulumi:"vport"`
}

func (GetReadonlyGroupsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReadonlyGroupsList)(nil)).Elem()
}

func (i GetReadonlyGroupsListArgs) ToGetReadonlyGroupsListOutput() GetReadonlyGroupsListOutput {
	return i.ToGetReadonlyGroupsListOutputWithContext(context.Background())
}

func (i GetReadonlyGroupsListArgs) ToGetReadonlyGroupsListOutputWithContext(ctx context.Context) GetReadonlyGroupsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReadonlyGroupsListOutput)
}

// GetReadonlyGroupsListArrayInput is an input type that accepts GetReadonlyGroupsListArray and GetReadonlyGroupsListArrayOutput values.
// You can construct a concrete instance of `GetReadonlyGroupsListArrayInput` via:
//
//	GetReadonlyGroupsListArray{ GetReadonlyGroupsListArgs{...} }
type GetReadonlyGroupsListArrayInput interface {
	pulumi.Input

	ToGetReadonlyGroupsListArrayOutput() GetReadonlyGroupsListArrayOutput
	ToGetReadonlyGroupsListArrayOutputWithContext(context.Context) GetReadonlyGroupsListArrayOutput
}

type GetReadonlyGroupsListArray []GetReadonlyGroupsListInput

func (GetReadonlyGroupsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReadonlyGroupsList)(nil)).Elem()
}

func (i GetReadonlyGroupsListArray) ToGetReadonlyGroupsListArrayOutput() GetReadonlyGroupsListArrayOutput {
	return i.ToGetReadonlyGroupsListArrayOutputWithContext(context.Background())
}

func (i GetReadonlyGroupsListArray) ToGetReadonlyGroupsListArrayOutputWithContext(ctx context.Context) GetReadonlyGroupsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReadonlyGroupsListArrayOutput)
}

type GetReadonlyGroupsListOutput struct{ *pulumi.OutputState }

func (GetReadonlyGroupsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReadonlyGroupsList)(nil)).Elem()
}

func (o GetReadonlyGroupsListOutput) ToGetReadonlyGroupsListOutput() GetReadonlyGroupsListOutput {
	return o
}

func (o GetReadonlyGroupsListOutput) ToGetReadonlyGroupsListOutputWithContext(ctx context.Context) GetReadonlyGroupsListOutput {
	return o
}

// ID of the readonly group.
func (o GetReadonlyGroupsListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) string { return v.Id }).(pulumi.StringOutput)
}

// Indicate whether to offline delayed readonly instances.
func (o GetReadonlyGroupsListOutput) IsOfflineDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) int { return v.IsOfflineDelay }).(pulumi.IntOutput)
}

// Master SQL Server instance ID.
func (o GetReadonlyGroupsListOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// Maximum delay time of the readonly instances.
func (o GetReadonlyGroupsListOutput) MaxDelayTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) int { return v.MaxDelayTime }).(pulumi.IntOutput)
}

// Minimum readonly instances that stays in the group.
func (o GetReadonlyGroupsListOutput) MinInstances() pulumi.IntOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) int { return v.MinInstances }).(pulumi.IntOutput)
}

// Name of the readonly group.
func (o GetReadonlyGroupsListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) string { return v.Name }).(pulumi.StringOutput)
}

// Readonly instance ID set of the readonly group.
func (o GetReadonlyGroupsListOutput) ReadonlyInstanceSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) []string { return v.ReadonlyInstanceSets }).(pulumi.StringArrayOutput)
}

// Status of the readonly group. `1` for running, `5` for applying.
func (o GetReadonlyGroupsListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) int { return v.Status }).(pulumi.IntOutput)
}

// Virtual IP address of the readonly group.
func (o GetReadonlyGroupsListOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) string { return v.Vip }).(pulumi.StringOutput)
}

// Virtual port of the readonly group.
func (o GetReadonlyGroupsListOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetReadonlyGroupsList) int { return v.Vport }).(pulumi.IntOutput)
}

type GetReadonlyGroupsListArrayOutput struct{ *pulumi.OutputState }

func (GetReadonlyGroupsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReadonlyGroupsList)(nil)).Elem()
}

func (o GetReadonlyGroupsListArrayOutput) ToGetReadonlyGroupsListArrayOutput() GetReadonlyGroupsListArrayOutput {
	return o
}

func (o GetReadonlyGroupsListArrayOutput) ToGetReadonlyGroupsListArrayOutputWithContext(ctx context.Context) GetReadonlyGroupsListArrayOutput {
	return o
}

func (o GetReadonlyGroupsListArrayOutput) Index(i pulumi.IntInput) GetReadonlyGroupsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReadonlyGroupsList {
		return vs[0].([]GetReadonlyGroupsList)[vs[1].(int)]
	}).(GetReadonlyGroupsListOutput)
}

type GetRegionsRegionSet struct {
	// Region ID in the format of ap-guangzhou.
	Region string `pulumi:"region"`
	// Numeric ID of region.
	RegionId int `pulumi:"regionId"`
	// Region name.
	RegionName string `pulumi:"regionName"`
	// Current purchasability of this region. UNAVAILABLE: not purchasable, AVAILABLE: purchasable.
	RegionState string `pulumi:"regionState"`
}

// GetRegionsRegionSetInput is an input type that accepts GetRegionsRegionSetArgs and GetRegionsRegionSetOutput values.
// You can construct a concrete instance of `GetRegionsRegionSetInput` via:
//
//	GetRegionsRegionSetArgs{...}
type GetRegionsRegionSetInput interface {
	pulumi.Input

	ToGetRegionsRegionSetOutput() GetRegionsRegionSetOutput
	ToGetRegionsRegionSetOutputWithContext(context.Context) GetRegionsRegionSetOutput
}

type GetRegionsRegionSetArgs struct {
	// Region ID in the format of ap-guangzhou.
	Region pulumi.StringInput `pulumi:"region"`
	// Numeric ID of region.
	RegionId pulumi.IntInput `pulumi:"regionId"`
	// Region name.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Current purchasability of this region. UNAVAILABLE: not purchasable, AVAILABLE: purchasable.
	RegionState pulumi.StringInput `pulumi:"regionState"`
}

func (GetRegionsRegionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionSet)(nil)).Elem()
}

func (i GetRegionsRegionSetArgs) ToGetRegionsRegionSetOutput() GetRegionsRegionSetOutput {
	return i.ToGetRegionsRegionSetOutputWithContext(context.Background())
}

func (i GetRegionsRegionSetArgs) ToGetRegionsRegionSetOutputWithContext(ctx context.Context) GetRegionsRegionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionSetOutput)
}

// GetRegionsRegionSetArrayInput is an input type that accepts GetRegionsRegionSetArray and GetRegionsRegionSetArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionSetArrayInput` via:
//
//	GetRegionsRegionSetArray{ GetRegionsRegionSetArgs{...} }
type GetRegionsRegionSetArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionSetArrayOutput() GetRegionsRegionSetArrayOutput
	ToGetRegionsRegionSetArrayOutputWithContext(context.Context) GetRegionsRegionSetArrayOutput
}

type GetRegionsRegionSetArray []GetRegionsRegionSetInput

func (GetRegionsRegionSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionSet)(nil)).Elem()
}

func (i GetRegionsRegionSetArray) ToGetRegionsRegionSetArrayOutput() GetRegionsRegionSetArrayOutput {
	return i.ToGetRegionsRegionSetArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionSetArray) ToGetRegionsRegionSetArrayOutputWithContext(ctx context.Context) GetRegionsRegionSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionSetArrayOutput)
}

type GetRegionsRegionSetOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionSet)(nil)).Elem()
}

func (o GetRegionsRegionSetOutput) ToGetRegionsRegionSetOutput() GetRegionsRegionSetOutput {
	return o
}

func (o GetRegionsRegionSetOutput) ToGetRegionsRegionSetOutputWithContext(ctx context.Context) GetRegionsRegionSetOutput {
	return o
}

// Region ID in the format of ap-guangzhou.
func (o GetRegionsRegionSetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionSet) string { return v.Region }).(pulumi.StringOutput)
}

// Numeric ID of region.
func (o GetRegionsRegionSetOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRegionsRegionSet) int { return v.RegionId }).(pulumi.IntOutput)
}

// Region name.
func (o GetRegionsRegionSetOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionSet) string { return v.RegionName }).(pulumi.StringOutput)
}

// Current purchasability of this region. UNAVAILABLE: not purchasable, AVAILABLE: purchasable.
func (o GetRegionsRegionSetOutput) RegionState() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionSet) string { return v.RegionState }).(pulumi.StringOutput)
}

type GetRegionsRegionSetArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionSet)(nil)).Elem()
}

func (o GetRegionsRegionSetArrayOutput) ToGetRegionsRegionSetArrayOutput() GetRegionsRegionSetArrayOutput {
	return o
}

func (o GetRegionsRegionSetArrayOutput) ToGetRegionsRegionSetArrayOutputWithContext(ctx context.Context) GetRegionsRegionSetArrayOutput {
	return o
}

func (o GetRegionsRegionSetArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegionSet {
		return vs[0].([]GetRegionsRegionSet)[vs[1].(int)]
	}).(GetRegionsRegionSetOutput)
}

type GetRollbackTimeDetail struct {
	// Database name.
	DbName string `pulumi:"dbName"`
	// End time of time range available for rollback.
	EndTime string `pulumi:"endTime"`
	// Start time of time range available for rollback.
	StartTime string `pulumi:"startTime"`
}

// GetRollbackTimeDetailInput is an input type that accepts GetRollbackTimeDetailArgs and GetRollbackTimeDetailOutput values.
// You can construct a concrete instance of `GetRollbackTimeDetailInput` via:
//
//	GetRollbackTimeDetailArgs{...}
type GetRollbackTimeDetailInput interface {
	pulumi.Input

	ToGetRollbackTimeDetailOutput() GetRollbackTimeDetailOutput
	ToGetRollbackTimeDetailOutputWithContext(context.Context) GetRollbackTimeDetailOutput
}

type GetRollbackTimeDetailArgs struct {
	// Database name.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// End time of time range available for rollback.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Start time of time range available for rollback.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetRollbackTimeDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRollbackTimeDetail)(nil)).Elem()
}

func (i GetRollbackTimeDetailArgs) ToGetRollbackTimeDetailOutput() GetRollbackTimeDetailOutput {
	return i.ToGetRollbackTimeDetailOutputWithContext(context.Background())
}

func (i GetRollbackTimeDetailArgs) ToGetRollbackTimeDetailOutputWithContext(ctx context.Context) GetRollbackTimeDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRollbackTimeDetailOutput)
}

// GetRollbackTimeDetailArrayInput is an input type that accepts GetRollbackTimeDetailArray and GetRollbackTimeDetailArrayOutput values.
// You can construct a concrete instance of `GetRollbackTimeDetailArrayInput` via:
//
//	GetRollbackTimeDetailArray{ GetRollbackTimeDetailArgs{...} }
type GetRollbackTimeDetailArrayInput interface {
	pulumi.Input

	ToGetRollbackTimeDetailArrayOutput() GetRollbackTimeDetailArrayOutput
	ToGetRollbackTimeDetailArrayOutputWithContext(context.Context) GetRollbackTimeDetailArrayOutput
}

type GetRollbackTimeDetailArray []GetRollbackTimeDetailInput

func (GetRollbackTimeDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRollbackTimeDetail)(nil)).Elem()
}

func (i GetRollbackTimeDetailArray) ToGetRollbackTimeDetailArrayOutput() GetRollbackTimeDetailArrayOutput {
	return i.ToGetRollbackTimeDetailArrayOutputWithContext(context.Background())
}

func (i GetRollbackTimeDetailArray) ToGetRollbackTimeDetailArrayOutputWithContext(ctx context.Context) GetRollbackTimeDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRollbackTimeDetailArrayOutput)
}

type GetRollbackTimeDetailOutput struct{ *pulumi.OutputState }

func (GetRollbackTimeDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRollbackTimeDetail)(nil)).Elem()
}

func (o GetRollbackTimeDetailOutput) ToGetRollbackTimeDetailOutput() GetRollbackTimeDetailOutput {
	return o
}

func (o GetRollbackTimeDetailOutput) ToGetRollbackTimeDetailOutputWithContext(ctx context.Context) GetRollbackTimeDetailOutput {
	return o
}

// Database name.
func (o GetRollbackTimeDetailOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRollbackTimeDetail) string { return v.DbName }).(pulumi.StringOutput)
}

// End time of time range available for rollback.
func (o GetRollbackTimeDetailOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRollbackTimeDetail) string { return v.EndTime }).(pulumi.StringOutput)
}

// Start time of time range available for rollback.
func (o GetRollbackTimeDetailOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRollbackTimeDetail) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetRollbackTimeDetailArrayOutput struct{ *pulumi.OutputState }

func (GetRollbackTimeDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRollbackTimeDetail)(nil)).Elem()
}

func (o GetRollbackTimeDetailArrayOutput) ToGetRollbackTimeDetailArrayOutput() GetRollbackTimeDetailArrayOutput {
	return o
}

func (o GetRollbackTimeDetailArrayOutput) ToGetRollbackTimeDetailArrayOutputWithContext(ctx context.Context) GetRollbackTimeDetailArrayOutput {
	return o
}

func (o GetRollbackTimeDetailArrayOutput) Index(i pulumi.IntInput) GetRollbackTimeDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRollbackTimeDetail {
		return vs[0].([]GetRollbackTimeDetail)[vs[1].(int)]
	}).(GetRollbackTimeDetailOutput)
}

type GetSlowlogsSlowlog struct {
	// Number of logs in file.
	Count int `pulumi:"count"`
	// Query end time.
	EndTime string `pulumi:"endTime"`
	// Download address for public network.
	ExternalAddr string `pulumi:"externalAddr"`
	// Unique ID of slow query log file.
	Id int `pulumi:"id"`
	// Download address for private network.
	InternalAddr string `pulumi:"internalAddr"`
	// File size in KB.
	Size int `pulumi:"size"`
	// Query start time.
	StartTime string `pulumi:"startTime"`
	// Status (1: success, 2: failure) Note: this field may return null, indicating that no valid values can be obtained.
	Status int `pulumi:"status"`
}

// GetSlowlogsSlowlogInput is an input type that accepts GetSlowlogsSlowlogArgs and GetSlowlogsSlowlogOutput values.
// You can construct a concrete instance of `GetSlowlogsSlowlogInput` via:
//
//	GetSlowlogsSlowlogArgs{...}
type GetSlowlogsSlowlogInput interface {
	pulumi.Input

	ToGetSlowlogsSlowlogOutput() GetSlowlogsSlowlogOutput
	ToGetSlowlogsSlowlogOutputWithContext(context.Context) GetSlowlogsSlowlogOutput
}

type GetSlowlogsSlowlogArgs struct {
	// Number of logs in file.
	Count pulumi.IntInput `pulumi:"count"`
	// Query end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Download address for public network.
	ExternalAddr pulumi.StringInput `pulumi:"externalAddr"`
	// Unique ID of slow query log file.
	Id pulumi.IntInput `pulumi:"id"`
	// Download address for private network.
	InternalAddr pulumi.StringInput `pulumi:"internalAddr"`
	// File size in KB.
	Size pulumi.IntInput `pulumi:"size"`
	// Query start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Status (1: success, 2: failure) Note: this field may return null, indicating that no valid values can be obtained.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetSlowlogsSlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowlogsSlowlog)(nil)).Elem()
}

func (i GetSlowlogsSlowlogArgs) ToGetSlowlogsSlowlogOutput() GetSlowlogsSlowlogOutput {
	return i.ToGetSlowlogsSlowlogOutputWithContext(context.Background())
}

func (i GetSlowlogsSlowlogArgs) ToGetSlowlogsSlowlogOutputWithContext(ctx context.Context) GetSlowlogsSlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowlogsSlowlogOutput)
}

// GetSlowlogsSlowlogArrayInput is an input type that accepts GetSlowlogsSlowlogArray and GetSlowlogsSlowlogArrayOutput values.
// You can construct a concrete instance of `GetSlowlogsSlowlogArrayInput` via:
//
//	GetSlowlogsSlowlogArray{ GetSlowlogsSlowlogArgs{...} }
type GetSlowlogsSlowlogArrayInput interface {
	pulumi.Input

	ToGetSlowlogsSlowlogArrayOutput() GetSlowlogsSlowlogArrayOutput
	ToGetSlowlogsSlowlogArrayOutputWithContext(context.Context) GetSlowlogsSlowlogArrayOutput
}

type GetSlowlogsSlowlogArray []GetSlowlogsSlowlogInput

func (GetSlowlogsSlowlogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowlogsSlowlog)(nil)).Elem()
}

func (i GetSlowlogsSlowlogArray) ToGetSlowlogsSlowlogArrayOutput() GetSlowlogsSlowlogArrayOutput {
	return i.ToGetSlowlogsSlowlogArrayOutputWithContext(context.Background())
}

func (i GetSlowlogsSlowlogArray) ToGetSlowlogsSlowlogArrayOutputWithContext(ctx context.Context) GetSlowlogsSlowlogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlowlogsSlowlogArrayOutput)
}

type GetSlowlogsSlowlogOutput struct{ *pulumi.OutputState }

func (GetSlowlogsSlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowlogsSlowlog)(nil)).Elem()
}

func (o GetSlowlogsSlowlogOutput) ToGetSlowlogsSlowlogOutput() GetSlowlogsSlowlogOutput {
	return o
}

func (o GetSlowlogsSlowlogOutput) ToGetSlowlogsSlowlogOutputWithContext(ctx context.Context) GetSlowlogsSlowlogOutput {
	return o
}

// Number of logs in file.
func (o GetSlowlogsSlowlogOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) int { return v.Count }).(pulumi.IntOutput)
}

// Query end time.
func (o GetSlowlogsSlowlogOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) string { return v.EndTime }).(pulumi.StringOutput)
}

// Download address for public network.
func (o GetSlowlogsSlowlogOutput) ExternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) string { return v.ExternalAddr }).(pulumi.StringOutput)
}

// Unique ID of slow query log file.
func (o GetSlowlogsSlowlogOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) int { return v.Id }).(pulumi.IntOutput)
}

// Download address for private network.
func (o GetSlowlogsSlowlogOutput) InternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) string { return v.InternalAddr }).(pulumi.StringOutput)
}

// File size in KB.
func (o GetSlowlogsSlowlogOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) int { return v.Size }).(pulumi.IntOutput)
}

// Query start time.
func (o GetSlowlogsSlowlogOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status (1: success, 2: failure) Note: this field may return null, indicating that no valid values can be obtained.
func (o GetSlowlogsSlowlogOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetSlowlogsSlowlog) int { return v.Status }).(pulumi.IntOutput)
}

type GetSlowlogsSlowlogArrayOutput struct{ *pulumi.OutputState }

func (GetSlowlogsSlowlogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlowlogsSlowlog)(nil)).Elem()
}

func (o GetSlowlogsSlowlogArrayOutput) ToGetSlowlogsSlowlogArrayOutput() GetSlowlogsSlowlogArrayOutput {
	return o
}

func (o GetSlowlogsSlowlogArrayOutput) ToGetSlowlogsSlowlogArrayOutputWithContext(ctx context.Context) GetSlowlogsSlowlogArrayOutput {
	return o
}

func (o GetSlowlogsSlowlogArrayOutput) Index(i pulumi.IntInput) GetSlowlogsSlowlogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlowlogsSlowlog {
		return vs[0].([]GetSlowlogsSlowlog)[vs[1].(int)]
	}).(GetSlowlogsSlowlogOutput)
}

type GetZoneConfigZoneList struct {
	// Alphabet ID of availability zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// A list of specinfo configurations for the specific availability zone. Each element contains the following attributes:
	SpecinfoLists []GetZoneConfigZoneListSpecinfoList `pulumi:"specinfoLists"`
	// Number ID of availability zone.
	ZoneId int `pulumi:"zoneId"`
}

// GetZoneConfigZoneListInput is an input type that accepts GetZoneConfigZoneListArgs and GetZoneConfigZoneListOutput values.
// You can construct a concrete instance of `GetZoneConfigZoneListInput` via:
//
//	GetZoneConfigZoneListArgs{...}
type GetZoneConfigZoneListInput interface {
	pulumi.Input

	ToGetZoneConfigZoneListOutput() GetZoneConfigZoneListOutput
	ToGetZoneConfigZoneListOutputWithContext(context.Context) GetZoneConfigZoneListOutput
}

type GetZoneConfigZoneListArgs struct {
	// Alphabet ID of availability zone.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// A list of specinfo configurations for the specific availability zone. Each element contains the following attributes:
	SpecinfoLists GetZoneConfigZoneListSpecinfoListArrayInput `pulumi:"specinfoLists"`
	// Number ID of availability zone.
	ZoneId pulumi.IntInput `pulumi:"zoneId"`
}

func (GetZoneConfigZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigZoneList)(nil)).Elem()
}

func (i GetZoneConfigZoneListArgs) ToGetZoneConfigZoneListOutput() GetZoneConfigZoneListOutput {
	return i.ToGetZoneConfigZoneListOutputWithContext(context.Background())
}

func (i GetZoneConfigZoneListArgs) ToGetZoneConfigZoneListOutputWithContext(ctx context.Context) GetZoneConfigZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigZoneListOutput)
}

// GetZoneConfigZoneListArrayInput is an input type that accepts GetZoneConfigZoneListArray and GetZoneConfigZoneListArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigZoneListArrayInput` via:
//
//	GetZoneConfigZoneListArray{ GetZoneConfigZoneListArgs{...} }
type GetZoneConfigZoneListArrayInput interface {
	pulumi.Input

	ToGetZoneConfigZoneListArrayOutput() GetZoneConfigZoneListArrayOutput
	ToGetZoneConfigZoneListArrayOutputWithContext(context.Context) GetZoneConfigZoneListArrayOutput
}

type GetZoneConfigZoneListArray []GetZoneConfigZoneListInput

func (GetZoneConfigZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigZoneList)(nil)).Elem()
}

func (i GetZoneConfigZoneListArray) ToGetZoneConfigZoneListArrayOutput() GetZoneConfigZoneListArrayOutput {
	return i.ToGetZoneConfigZoneListArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigZoneListArray) ToGetZoneConfigZoneListArrayOutputWithContext(ctx context.Context) GetZoneConfigZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigZoneListArrayOutput)
}

type GetZoneConfigZoneListOutput struct{ *pulumi.OutputState }

func (GetZoneConfigZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigZoneList)(nil)).Elem()
}

func (o GetZoneConfigZoneListOutput) ToGetZoneConfigZoneListOutput() GetZoneConfigZoneListOutput {
	return o
}

func (o GetZoneConfigZoneListOutput) ToGetZoneConfigZoneListOutputWithContext(ctx context.Context) GetZoneConfigZoneListOutput {
	return o
}

// Alphabet ID of availability zone.
func (o GetZoneConfigZoneListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigZoneList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// A list of specinfo configurations for the specific availability zone. Each element contains the following attributes:
func (o GetZoneConfigZoneListOutput) SpecinfoLists() GetZoneConfigZoneListSpecinfoListArrayOutput {
	return o.ApplyT(func(v GetZoneConfigZoneList) []GetZoneConfigZoneListSpecinfoList { return v.SpecinfoLists }).(GetZoneConfigZoneListSpecinfoListArrayOutput)
}

// Number ID of availability zone.
func (o GetZoneConfigZoneListOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneList) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetZoneConfigZoneListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigZoneList)(nil)).Elem()
}

func (o GetZoneConfigZoneListArrayOutput) ToGetZoneConfigZoneListArrayOutput() GetZoneConfigZoneListArrayOutput {
	return o
}

func (o GetZoneConfigZoneListArrayOutput) ToGetZoneConfigZoneListArrayOutputWithContext(ctx context.Context) GetZoneConfigZoneListArrayOutput {
	return o
}

func (o GetZoneConfigZoneListArrayOutput) Index(i pulumi.IntInput) GetZoneConfigZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigZoneList {
		return vs[0].([]GetZoneConfigZoneList)[vs[1].(int)]
	}).(GetZoneConfigZoneListOutput)
}

type GetZoneConfigZoneListSpecinfoList struct {
	// Billing mode under this specification. Valid values are `POSTPAID_BY_HOUR`, `PREPAID` and `ALL`. `ALL` means both POSTPAID_BY_HOUR and PREPAID.
	ChargeType string `pulumi:"chargeType"`
	// Number of CPU cores.
	Cpu int `pulumi:"cpu"`
	// Database version information. Valid values: `2008R2 (SQL Server 2008 Enterprise)`, `2012SP3 (SQL Server 2012 Enterprise)`, `2016SP1 (SQL Server 2016 Enterprise)`, `201602 (SQL Server 2016 Standard)`, `2017 (SQL Server 2017 Enterprise)`.
	DbVersion string `pulumi:"dbVersion"`
	// Version name corresponding to the `dbVersion` field.
	DbVersionName string `pulumi:"dbVersionName"`
	// Model ID.
	MachineType string `pulumi:"machineType"`
	// Maximum disk size under this specification in GB.
	MaxStorageSize int `pulumi:"maxStorageSize"`
	// Memory size in GB.
	Memory int `pulumi:"memory"`
	// Minimum disk size under this specification in GB.
	MinStorageSize int `pulumi:"minStorageSize"`
	// QPS of this specification.
	Qps int `pulumi:"qps"`
	// Instance specification ID.
	SpecId int `pulumi:"specId"`
}

// GetZoneConfigZoneListSpecinfoListInput is an input type that accepts GetZoneConfigZoneListSpecinfoListArgs and GetZoneConfigZoneListSpecinfoListOutput values.
// You can construct a concrete instance of `GetZoneConfigZoneListSpecinfoListInput` via:
//
//	GetZoneConfigZoneListSpecinfoListArgs{...}
type GetZoneConfigZoneListSpecinfoListInput interface {
	pulumi.Input

	ToGetZoneConfigZoneListSpecinfoListOutput() GetZoneConfigZoneListSpecinfoListOutput
	ToGetZoneConfigZoneListSpecinfoListOutputWithContext(context.Context) GetZoneConfigZoneListSpecinfoListOutput
}

type GetZoneConfigZoneListSpecinfoListArgs struct {
	// Billing mode under this specification. Valid values are `POSTPAID_BY_HOUR`, `PREPAID` and `ALL`. `ALL` means both POSTPAID_BY_HOUR and PREPAID.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Number of CPU cores.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// Database version information. Valid values: `2008R2 (SQL Server 2008 Enterprise)`, `2012SP3 (SQL Server 2012 Enterprise)`, `2016SP1 (SQL Server 2016 Enterprise)`, `201602 (SQL Server 2016 Standard)`, `2017 (SQL Server 2017 Enterprise)`.
	DbVersion pulumi.StringInput `pulumi:"dbVersion"`
	// Version name corresponding to the `dbVersion` field.
	DbVersionName pulumi.StringInput `pulumi:"dbVersionName"`
	// Model ID.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Maximum disk size under this specification in GB.
	MaxStorageSize pulumi.IntInput `pulumi:"maxStorageSize"`
	// Memory size in GB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Minimum disk size under this specification in GB.
	MinStorageSize pulumi.IntInput `pulumi:"minStorageSize"`
	// QPS of this specification.
	Qps pulumi.IntInput `pulumi:"qps"`
	// Instance specification ID.
	SpecId pulumi.IntInput `pulumi:"specId"`
}

func (GetZoneConfigZoneListSpecinfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigZoneListSpecinfoList)(nil)).Elem()
}

func (i GetZoneConfigZoneListSpecinfoListArgs) ToGetZoneConfigZoneListSpecinfoListOutput() GetZoneConfigZoneListSpecinfoListOutput {
	return i.ToGetZoneConfigZoneListSpecinfoListOutputWithContext(context.Background())
}

func (i GetZoneConfigZoneListSpecinfoListArgs) ToGetZoneConfigZoneListSpecinfoListOutputWithContext(ctx context.Context) GetZoneConfigZoneListSpecinfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigZoneListSpecinfoListOutput)
}

// GetZoneConfigZoneListSpecinfoListArrayInput is an input type that accepts GetZoneConfigZoneListSpecinfoListArray and GetZoneConfigZoneListSpecinfoListArrayOutput values.
// You can construct a concrete instance of `GetZoneConfigZoneListSpecinfoListArrayInput` via:
//
//	GetZoneConfigZoneListSpecinfoListArray{ GetZoneConfigZoneListSpecinfoListArgs{...} }
type GetZoneConfigZoneListSpecinfoListArrayInput interface {
	pulumi.Input

	ToGetZoneConfigZoneListSpecinfoListArrayOutput() GetZoneConfigZoneListSpecinfoListArrayOutput
	ToGetZoneConfigZoneListSpecinfoListArrayOutputWithContext(context.Context) GetZoneConfigZoneListSpecinfoListArrayOutput
}

type GetZoneConfigZoneListSpecinfoListArray []GetZoneConfigZoneListSpecinfoListInput

func (GetZoneConfigZoneListSpecinfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigZoneListSpecinfoList)(nil)).Elem()
}

func (i GetZoneConfigZoneListSpecinfoListArray) ToGetZoneConfigZoneListSpecinfoListArrayOutput() GetZoneConfigZoneListSpecinfoListArrayOutput {
	return i.ToGetZoneConfigZoneListSpecinfoListArrayOutputWithContext(context.Background())
}

func (i GetZoneConfigZoneListSpecinfoListArray) ToGetZoneConfigZoneListSpecinfoListArrayOutputWithContext(ctx context.Context) GetZoneConfigZoneListSpecinfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneConfigZoneListSpecinfoListArrayOutput)
}

type GetZoneConfigZoneListSpecinfoListOutput struct{ *pulumi.OutputState }

func (GetZoneConfigZoneListSpecinfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneConfigZoneListSpecinfoList)(nil)).Elem()
}

func (o GetZoneConfigZoneListSpecinfoListOutput) ToGetZoneConfigZoneListSpecinfoListOutput() GetZoneConfigZoneListSpecinfoListOutput {
	return o
}

func (o GetZoneConfigZoneListSpecinfoListOutput) ToGetZoneConfigZoneListSpecinfoListOutputWithContext(ctx context.Context) GetZoneConfigZoneListSpecinfoListOutput {
	return o
}

// Billing mode under this specification. Valid values are `POSTPAID_BY_HOUR`, `PREPAID` and `ALL`. `ALL` means both POSTPAID_BY_HOUR and PREPAID.
func (o GetZoneConfigZoneListSpecinfoListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Number of CPU cores.
func (o GetZoneConfigZoneListSpecinfoListOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) int { return v.Cpu }).(pulumi.IntOutput)
}

// Database version information. Valid values: `2008R2 (SQL Server 2008 Enterprise)`, `2012SP3 (SQL Server 2012 Enterprise)`, `2016SP1 (SQL Server 2016 Enterprise)`, `201602 (SQL Server 2016 Standard)`, `2017 (SQL Server 2017 Enterprise)`.
func (o GetZoneConfigZoneListSpecinfoListOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) string { return v.DbVersion }).(pulumi.StringOutput)
}

// Version name corresponding to the `dbVersion` field.
func (o GetZoneConfigZoneListSpecinfoListOutput) DbVersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) string { return v.DbVersionName }).(pulumi.StringOutput)
}

// Model ID.
func (o GetZoneConfigZoneListSpecinfoListOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) string { return v.MachineType }).(pulumi.StringOutput)
}

// Maximum disk size under this specification in GB.
func (o GetZoneConfigZoneListSpecinfoListOutput) MaxStorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) int { return v.MaxStorageSize }).(pulumi.IntOutput)
}

// Memory size in GB.
func (o GetZoneConfigZoneListSpecinfoListOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) int { return v.Memory }).(pulumi.IntOutput)
}

// Minimum disk size under this specification in GB.
func (o GetZoneConfigZoneListSpecinfoListOutput) MinStorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) int { return v.MinStorageSize }).(pulumi.IntOutput)
}

// QPS of this specification.
func (o GetZoneConfigZoneListSpecinfoListOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) int { return v.Qps }).(pulumi.IntOutput)
}

// Instance specification ID.
func (o GetZoneConfigZoneListSpecinfoListOutput) SpecId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneConfigZoneListSpecinfoList) int { return v.SpecId }).(pulumi.IntOutput)
}

type GetZoneConfigZoneListSpecinfoListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneConfigZoneListSpecinfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneConfigZoneListSpecinfoList)(nil)).Elem()
}

func (o GetZoneConfigZoneListSpecinfoListArrayOutput) ToGetZoneConfigZoneListSpecinfoListArrayOutput() GetZoneConfigZoneListSpecinfoListArrayOutput {
	return o
}

func (o GetZoneConfigZoneListSpecinfoListArrayOutput) ToGetZoneConfigZoneListSpecinfoListArrayOutputWithContext(ctx context.Context) GetZoneConfigZoneListSpecinfoListArrayOutput {
	return o
}

func (o GetZoneConfigZoneListSpecinfoListArrayOutput) Index(i pulumi.IntInput) GetZoneConfigZoneListSpecinfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneConfigZoneListSpecinfoList {
		return vs[0].([]GetZoneConfigZoneListSpecinfoList)[vs[1].(int)]
	}).(GetZoneConfigZoneListSpecinfoListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessIntelligenceInstanceResourceTagInput)(nil)).Elem(), BusinessIntelligenceInstanceResourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessIntelligenceInstanceResourceTagArrayInput)(nil)).Elem(), BusinessIntelligenceInstanceResourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceParamParamListInput)(nil)).Elem(), ConfigInstanceParamParamListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceParamParamListArrayInput)(nil)).Elem(), ConfigInstanceParamParamListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceRoGroupWeightPairInput)(nil)).Elem(), ConfigInstanceRoGroupWeightPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceRoGroupWeightPairArrayInput)(nil)).Elem(), ConfigInstanceRoGroupWeightPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudInstanceResourceTagInput)(nil)).Elem(), GeneralCloudInstanceResourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudInstanceResourceTagArrayInput)(nil)).Elem(), GeneralCloudInstanceResourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationMigrateDbSetInput)(nil)).Elem(), MigrationMigrateDbSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationMigrateDbSetArrayInput)(nil)).Elem(), MigrationMigrateDbSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationRenameRestoreInput)(nil)).Elem(), MigrationRenameRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationRenameRestoreArrayInput)(nil)).Elem(), MigrationRenameRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationSourceInput)(nil)).Elem(), MigrationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationSourcePtrInput)(nil)).Elem(), MigrationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationTargetInput)(nil)).Elem(), MigrationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationTargetPtrInput)(nil)).Elem(), MigrationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublishSubscribeDatabaseTupleInput)(nil)).Elem(), PublishSubscribeDatabaseTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublishSubscribeDatabaseTupleArrayInput)(nil)).Elem(), PublishSubscribeDatabaseTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceEncryptionInput)(nil)).Elem(), RestoreInstanceEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceEncryptionArrayInput)(nil)).Elem(), RestoreInstanceEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceRenameRestoreInput)(nil)).Elem(), RestoreInstanceRenameRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceRenameRestoreArrayInput)(nil)).Elem(), RestoreInstanceRenameRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceEncryptionInput)(nil)).Elem(), RollbackInstanceEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceEncryptionArrayInput)(nil)).Elem(), RollbackInstanceEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceRenameRestoreInput)(nil)).Elem(), RollbackInstanceRenameRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceRenameRestoreArrayInput)(nil)).Elem(), RollbackInstanceRenameRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StartXeventEventConfigInput)(nil)).Elem(), StartXeventEventConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StartXeventEventConfigArrayInput)(nil)).Elem(), StartXeventEventConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountDbAttachmentsListInput)(nil)).Elem(), GetAccountDbAttachmentsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountDbAttachmentsListArrayInput)(nil)).Elem(), GetAccountDbAttachmentsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsListInput)(nil)).Elem(), GetAccountsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsListArrayInput)(nil)).Elem(), GetAccountsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCommandsListInput)(nil)).Elem(), GetBackupCommandsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCommandsListArrayInput)(nil)).Elem(), GetBackupCommandsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupUploadSizeCosUploadBackupFileSetInput)(nil)).Elem(), GetBackupUploadSizeCosUploadBackupFileSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupUploadSizeCosUploadBackupFileSetArrayInput)(nil)).Elem(), GetBackupUploadSizeCosUploadBackupFileSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsListInput)(nil)).Elem(), GetBackupsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsListArrayInput)(nil)).Elem(), GetBackupsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicInstancesInstanceListInput)(nil)).Elem(), GetBasicInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicInstancesInstanceListArrayInput)(nil)).Elem(), GetBasicInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbsDbListInput)(nil)).Elem(), GetDbsDbListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbsDbListArrayInput)(nil)).Elem(), GetDbsDbListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescHaLogSwitchLogInput)(nil)).Elem(), GetDescHaLogSwitchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescHaLogSwitchLogArrayInput)(nil)).Elem(), GetDescHaLogSwitchLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsAttributeSslConfigInput)(nil)).Elem(), GetInsAttributeSslConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsAttributeSslConfigArrayInput)(nil)).Elem(), GetInsAttributeSslConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsAttributeTdeConfigInput)(nil)).Elem(), GetInsAttributeTdeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInsAttributeTdeConfigArrayInput)(nil)).Elem(), GetInsAttributeTdeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamRecordsItemInput)(nil)).Elem(), GetInstanceParamRecordsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParamRecordsItemArrayInput)(nil)).Elem(), GetInstanceParamRecordsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetInput)(nil)).Elem(), GetProjectSecurityGroupsSecurityGroupSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetArrayInput)(nil)).Elem(), GetProjectSecurityGroupsSecurityGroupSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetInboundSetInput)(nil)).Elem(), GetProjectSecurityGroupsSecurityGroupSetInboundSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayInput)(nil)).Elem(), GetProjectSecurityGroupsSecurityGroupSetInboundSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetOutboundSetInput)(nil)).Elem(), GetProjectSecurityGroupsSecurityGroupSetOutboundSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayInput)(nil)).Elem(), GetProjectSecurityGroupsSecurityGroupSetOutboundSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublishSubscribesPublishSubscribeListInput)(nil)).Elem(), GetPublishSubscribesPublishSubscribeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublishSubscribesPublishSubscribeListArrayInput)(nil)).Elem(), GetPublishSubscribesPublishSubscribeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublishSubscribesPublishSubscribeListDatabaseTupleInput)(nil)).Elem(), GetPublishSubscribesPublishSubscribeListDatabaseTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayInput)(nil)).Elem(), GetPublishSubscribesPublishSubscribeListDatabaseTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryXeventEventInput)(nil)).Elem(), GetQueryXeventEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryXeventEventArrayInput)(nil)).Elem(), GetQueryXeventEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReadonlyGroupsListInput)(nil)).Elem(), GetReadonlyGroupsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReadonlyGroupsListArrayInput)(nil)).Elem(), GetReadonlyGroupsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionSetInput)(nil)).Elem(), GetRegionsRegionSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionSetArrayInput)(nil)).Elem(), GetRegionsRegionSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRollbackTimeDetailInput)(nil)).Elem(), GetRollbackTimeDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRollbackTimeDetailArrayInput)(nil)).Elem(), GetRollbackTimeDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowlogsSlowlogInput)(nil)).Elem(), GetSlowlogsSlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlowlogsSlowlogArrayInput)(nil)).Elem(), GetSlowlogsSlowlogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigZoneListInput)(nil)).Elem(), GetZoneConfigZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigZoneListArrayInput)(nil)).Elem(), GetZoneConfigZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigZoneListSpecinfoListInput)(nil)).Elem(), GetZoneConfigZoneListSpecinfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneConfigZoneListSpecinfoListArrayInput)(nil)).Elem(), GetZoneConfigZoneListSpecinfoListArray{})
	pulumi.RegisterOutputType(BusinessIntelligenceInstanceResourceTagOutput{})
	pulumi.RegisterOutputType(BusinessIntelligenceInstanceResourceTagArrayOutput{})
	pulumi.RegisterOutputType(ConfigInstanceParamParamListOutput{})
	pulumi.RegisterOutputType(ConfigInstanceParamParamListArrayOutput{})
	pulumi.RegisterOutputType(ConfigInstanceRoGroupWeightPairOutput{})
	pulumi.RegisterOutputType(ConfigInstanceRoGroupWeightPairArrayOutput{})
	pulumi.RegisterOutputType(GeneralCloudInstanceResourceTagOutput{})
	pulumi.RegisterOutputType(GeneralCloudInstanceResourceTagArrayOutput{})
	pulumi.RegisterOutputType(MigrationMigrateDbSetOutput{})
	pulumi.RegisterOutputType(MigrationMigrateDbSetArrayOutput{})
	pulumi.RegisterOutputType(MigrationRenameRestoreOutput{})
	pulumi.RegisterOutputType(MigrationRenameRestoreArrayOutput{})
	pulumi.RegisterOutputType(MigrationSourceOutput{})
	pulumi.RegisterOutputType(MigrationSourcePtrOutput{})
	pulumi.RegisterOutputType(MigrationTargetOutput{})
	pulumi.RegisterOutputType(MigrationTargetPtrOutput{})
	pulumi.RegisterOutputType(PublishSubscribeDatabaseTupleOutput{})
	pulumi.RegisterOutputType(PublishSubscribeDatabaseTupleArrayOutput{})
	pulumi.RegisterOutputType(RestoreInstanceEncryptionOutput{})
	pulumi.RegisterOutputType(RestoreInstanceEncryptionArrayOutput{})
	pulumi.RegisterOutputType(RestoreInstanceRenameRestoreOutput{})
	pulumi.RegisterOutputType(RestoreInstanceRenameRestoreArrayOutput{})
	pulumi.RegisterOutputType(RollbackInstanceEncryptionOutput{})
	pulumi.RegisterOutputType(RollbackInstanceEncryptionArrayOutput{})
	pulumi.RegisterOutputType(RollbackInstanceRenameRestoreOutput{})
	pulumi.RegisterOutputType(RollbackInstanceRenameRestoreArrayOutput{})
	pulumi.RegisterOutputType(StartXeventEventConfigOutput{})
	pulumi.RegisterOutputType(StartXeventEventConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAccountDbAttachmentsListOutput{})
	pulumi.RegisterOutputType(GetAccountDbAttachmentsListArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsListOutput{})
	pulumi.RegisterOutputType(GetAccountsListArrayOutput{})
	pulumi.RegisterOutputType(GetBackupCommandsListOutput{})
	pulumi.RegisterOutputType(GetBackupCommandsListArrayOutput{})
	pulumi.RegisterOutputType(GetBackupUploadSizeCosUploadBackupFileSetOutput{})
	pulumi.RegisterOutputType(GetBackupUploadSizeCosUploadBackupFileSetArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsListOutput{})
	pulumi.RegisterOutputType(GetBackupsListArrayOutput{})
	pulumi.RegisterOutputType(GetBasicInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetBasicInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetDbsDbListOutput{})
	pulumi.RegisterOutputType(GetDbsDbListArrayOutput{})
	pulumi.RegisterOutputType(GetDescHaLogSwitchLogOutput{})
	pulumi.RegisterOutputType(GetDescHaLogSwitchLogArrayOutput{})
	pulumi.RegisterOutputType(GetInsAttributeSslConfigOutput{})
	pulumi.RegisterOutputType(GetInsAttributeSslConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInsAttributeTdeConfigOutput{})
	pulumi.RegisterOutputType(GetInsAttributeTdeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceParamRecordsItemOutput{})
	pulumi.RegisterOutputType(GetInstanceParamRecordsItemArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetProjectSecurityGroupsSecurityGroupSetOutput{})
	pulumi.RegisterOutputType(GetProjectSecurityGroupsSecurityGroupSetArrayOutput{})
	pulumi.RegisterOutputType(GetProjectSecurityGroupsSecurityGroupSetInboundSetOutput{})
	pulumi.RegisterOutputType(GetProjectSecurityGroupsSecurityGroupSetInboundSetArrayOutput{})
	pulumi.RegisterOutputType(GetProjectSecurityGroupsSecurityGroupSetOutboundSetOutput{})
	pulumi.RegisterOutputType(GetProjectSecurityGroupsSecurityGroupSetOutboundSetArrayOutput{})
	pulumi.RegisterOutputType(GetPublishSubscribesPublishSubscribeListOutput{})
	pulumi.RegisterOutputType(GetPublishSubscribesPublishSubscribeListArrayOutput{})
	pulumi.RegisterOutputType(GetPublishSubscribesPublishSubscribeListDatabaseTupleOutput{})
	pulumi.RegisterOutputType(GetPublishSubscribesPublishSubscribeListDatabaseTupleArrayOutput{})
	pulumi.RegisterOutputType(GetQueryXeventEventOutput{})
	pulumi.RegisterOutputType(GetQueryXeventEventArrayOutput{})
	pulumi.RegisterOutputType(GetReadonlyGroupsListOutput{})
	pulumi.RegisterOutputType(GetReadonlyGroupsListArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionSetOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionSetArrayOutput{})
	pulumi.RegisterOutputType(GetRollbackTimeDetailOutput{})
	pulumi.RegisterOutputType(GetRollbackTimeDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSlowlogsSlowlogOutput{})
	pulumi.RegisterOutputType(GetSlowlogsSlowlogArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigZoneListOutput{})
	pulumi.RegisterOutputType(GetZoneConfigZoneListArrayOutput{})
	pulumi.RegisterOutputType(GetZoneConfigZoneListSpecinfoListOutput{})
	pulumi.RegisterOutputType(GetZoneConfigZoneListSpecinfoListArrayOutput{})
}
