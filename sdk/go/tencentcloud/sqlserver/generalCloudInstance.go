// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a sqlserver generalCloudInstance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "sqlserver",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(zones.Zones[4].Name),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			securityGroup, err := Security.NewGroup(ctx, "securityGroup", &Security.GroupArgs{
//				Description: pulumi.String("desc."),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Sqlserver.NewGeneralCloudInstance(ctx, "example", &Sqlserver.GeneralCloudInstanceArgs{
//				Zone:               pulumi.String(zones.Zones[4].Name),
//				Memory:             pulumi.Int(4),
//				Storage:            pulumi.Int(100),
//				Cpu:                pulumi.Int(2),
//				MachineType:        pulumi.String("CLOUD_HSSD"),
//				InstanceChargeType: pulumi.String("POSTPAID"),
//				ProjectId:          pulumi.Int(0),
//				SubnetId:           subnet.ID(),
//				VpcId:              vpc.ID(),
//				DbVersion:          pulumi.String("2008R2"),
//				SecurityGroupLists: pulumi.StringArray{
//					securityGroup.ID(),
//				},
//				Weeklies: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//					pulumi.Int(5),
//					pulumi.Int(6),
//					pulumi.Int(7),
//				},
//				StartTime: pulumi.String("00:00"),
//				Span:      pulumi.Int(6),
//				ResourceTags: sqlserver.GeneralCloudInstanceResourceTagArray{
//					&sqlserver.GeneralCloudInstanceResourceTagArgs{
//						TagKey:   pulumi.String("test"),
//						TagValue: pulumi.String("test"),
//					},
//				},
//				Collation: pulumi.String("Chinese_PRC_CI_AS"),
//				TimeZone:  pulumi.String("China Standard Time"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// sqlserver general_cloud_instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Sqlserver/generalCloudInstance:GeneralCloudInstance example mssql-i9ma6oy7
//
// ```
type GeneralCloudInstance struct {
	pulumi.CustomResourceState

	// Automatic renewal flag: 0-normal renewal 1-automatic renewal, the default is 1 automatic renewal. Valid only when purchasing a prepaid instance. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	AutoRenewFlag pulumi.IntPtrOutput `pulumi:"autoRenewFlag"`
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation pulumi.StringPtrOutput `pulumi:"collation"`
	// Cpu, unit: CORE.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// sqlserver version, currently all supported versions are: 2008R2 (SQL Server 2008 R2 Enterprise), 2012SP3 (SQL Server 2012 Enterprise), 201202 (SQL Server 2012 Standard), 2014SP2 (SQL Server 2014 Enterprise), 201402 (SQL Server 2014 Standard), 2016SP1 (SQL Server 2016 Enterprise), 201602 (SQL Server 2016 Standard), 2017 (SQL Server 2017 Enterprise), 201702 (SQL Server 2017 Standard), 2019 (SQL Server 2019 Enterprise), 201902 (SQL Server 2019 Standard). Each region supports different versions for sale, and the version information that can be sold in each region can be pulled through the DescribeProductConfig interface. If left blank, the default version is 2008R2.
	DbVersion pulumi.StringPtrOutput `pulumi:"dbVersion"`
	// It has been deprecated from version 1.81.2. Upgrade the high-availability architecture of sqlserver, upgrade from mirror disaster recovery to always on cluster disaster recovery, only support 2017 and above and support always on high-availability instances, do not support downgrading to mirror disaster recovery, CLUSTER-upgrade to always on capacity Disaster, if not filled, the high-availability architecture will not be modified.
	//
	// Deprecated: It has been deprecated from version 1.81.2.
	HaType pulumi.StringPtrOutput `pulumi:"haType"`
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType pulumi.StringPtrOutput `pulumi:"instanceChargeType"`
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType pulumi.StringOutput `pulumi:"machineType"`
	// Memory, unit: GB.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Name of the SQL Server instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// project ID.
	ProjectId pulumi.IntPtrOutput `pulumi:"projectId"`
	// A collection of tags bound to the new instance.
	ResourceTags GeneralCloudInstanceResourceTagArrayOutput `pulumi:"resourceTags"`
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists pulumi.StringArrayOutput `pulumi:"securityGroupLists"`
	// Maintainable time window configuration, duration, unit: hour.
	Span pulumi.IntPtrOutput `pulumi:"span"`
	// Maintainable time window configuration, daily maintainable start time.
	StartTime pulumi.StringPtrOutput `pulumi:"startTime"`
	// instance disk storage, unit: GB.
	Storage pulumi.IntOutput `pulumi:"storage"`
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// System time zone, default: China Standard Time.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
	// Maintainable time window configuration, in weeks, indicates the days of the week that allow maintenance, 1-7 represent Monday to weekend respectively.
	Weeklies pulumi.IntArrayOutput `pulumi:"weeklies"`
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through the DescribeZones API.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewGeneralCloudInstance registers a new resource with the given unique name, arguments, and options.
func NewGeneralCloudInstance(ctx *pulumi.Context,
	name string, args *GeneralCloudInstanceArgs, opts ...pulumi.ResourceOption) (*GeneralCloudInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cpu == nil {
		return nil, errors.New("invalid value for required argument 'Cpu'")
	}
	if args.MachineType == nil {
		return nil, errors.New("invalid value for required argument 'MachineType'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource GeneralCloudInstance
	err := ctx.RegisterResource("tencentcloud:Sqlserver/generalCloudInstance:GeneralCloudInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGeneralCloudInstance gets an existing GeneralCloudInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGeneralCloudInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GeneralCloudInstanceState, opts ...pulumi.ResourceOption) (*GeneralCloudInstance, error) {
	var resource GeneralCloudInstance
	err := ctx.ReadResource("tencentcloud:Sqlserver/generalCloudInstance:GeneralCloudInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GeneralCloudInstance resources.
type generalCloudInstanceState struct {
	// Automatic renewal flag: 0-normal renewal 1-automatic renewal, the default is 1 automatic renewal. Valid only when purchasing a prepaid instance. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation *string `pulumi:"collation"`
	// Cpu, unit: CORE.
	Cpu *int `pulumi:"cpu"`
	// sqlserver version, currently all supported versions are: 2008R2 (SQL Server 2008 R2 Enterprise), 2012SP3 (SQL Server 2012 Enterprise), 201202 (SQL Server 2012 Standard), 2014SP2 (SQL Server 2014 Enterprise), 201402 (SQL Server 2014 Standard), 2016SP1 (SQL Server 2016 Enterprise), 201602 (SQL Server 2016 Standard), 2017 (SQL Server 2017 Enterprise), 201702 (SQL Server 2017 Standard), 2019 (SQL Server 2019 Enterprise), 201902 (SQL Server 2019 Standard). Each region supports different versions for sale, and the version information that can be sold in each region can be pulled through the DescribeProductConfig interface. If left blank, the default version is 2008R2.
	DbVersion *string `pulumi:"dbVersion"`
	// It has been deprecated from version 1.81.2. Upgrade the high-availability architecture of sqlserver, upgrade from mirror disaster recovery to always on cluster disaster recovery, only support 2017 and above and support always on high-availability instances, do not support downgrading to mirror disaster recovery, CLUSTER-upgrade to always on capacity Disaster, if not filled, the high-availability architecture will not be modified.
	//
	// Deprecated: It has been deprecated from version 1.81.2.
	HaType *string `pulumi:"haType"`
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType *string `pulumi:"machineType"`
	// Memory, unit: GB.
	Memory *int `pulumi:"memory"`
	// Name of the SQL Server instance.
	Name *string `pulumi:"name"`
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	Period *int `pulumi:"period"`
	// project ID.
	ProjectId *int `pulumi:"projectId"`
	// A collection of tags bound to the new instance.
	ResourceTags []GeneralCloudInstanceResourceTag `pulumi:"resourceTags"`
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists []string `pulumi:"securityGroupLists"`
	// Maintainable time window configuration, duration, unit: hour.
	Span *int `pulumi:"span"`
	// Maintainable time window configuration, daily maintainable start time.
	StartTime *string `pulumi:"startTime"`
	// instance disk storage, unit: GB.
	Storage *int `pulumi:"storage"`
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId *string `pulumi:"subnetId"`
	// System time zone, default: China Standard Time.
	TimeZone *string `pulumi:"timeZone"`
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId *string `pulumi:"vpcId"`
	// Maintainable time window configuration, in weeks, indicates the days of the week that allow maintenance, 1-7 represent Monday to weekend respectively.
	Weeklies []int `pulumi:"weeklies"`
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through the DescribeZones API.
	Zone *string `pulumi:"zone"`
}

type GeneralCloudInstanceState struct {
	// Automatic renewal flag: 0-normal renewal 1-automatic renewal, the default is 1 automatic renewal. Valid only when purchasing a prepaid instance. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	AutoRenewFlag pulumi.IntPtrInput
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation pulumi.StringPtrInput
	// Cpu, unit: CORE.
	Cpu pulumi.IntPtrInput
	// sqlserver version, currently all supported versions are: 2008R2 (SQL Server 2008 R2 Enterprise), 2012SP3 (SQL Server 2012 Enterprise), 201202 (SQL Server 2012 Standard), 2014SP2 (SQL Server 2014 Enterprise), 201402 (SQL Server 2014 Standard), 2016SP1 (SQL Server 2016 Enterprise), 201602 (SQL Server 2016 Standard), 2017 (SQL Server 2017 Enterprise), 201702 (SQL Server 2017 Standard), 2019 (SQL Server 2019 Enterprise), 201902 (SQL Server 2019 Standard). Each region supports different versions for sale, and the version information that can be sold in each region can be pulled through the DescribeProductConfig interface. If left blank, the default version is 2008R2.
	DbVersion pulumi.StringPtrInput
	// It has been deprecated from version 1.81.2. Upgrade the high-availability architecture of sqlserver, upgrade from mirror disaster recovery to always on cluster disaster recovery, only support 2017 and above and support always on high-availability instances, do not support downgrading to mirror disaster recovery, CLUSTER-upgrade to always on capacity Disaster, if not filled, the high-availability architecture will not be modified.
	//
	// Deprecated: It has been deprecated from version 1.81.2.
	HaType pulumi.StringPtrInput
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType pulumi.StringPtrInput
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType pulumi.StringPtrInput
	// Memory, unit: GB.
	Memory pulumi.IntPtrInput
	// Name of the SQL Server instance.
	Name pulumi.StringPtrInput
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	Period pulumi.IntPtrInput
	// project ID.
	ProjectId pulumi.IntPtrInput
	// A collection of tags bound to the new instance.
	ResourceTags GeneralCloudInstanceResourceTagArrayInput
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists pulumi.StringArrayInput
	// Maintainable time window configuration, duration, unit: hour.
	Span pulumi.IntPtrInput
	// Maintainable time window configuration, daily maintainable start time.
	StartTime pulumi.StringPtrInput
	// instance disk storage, unit: GB.
	Storage pulumi.IntPtrInput
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId pulumi.StringPtrInput
	// System time zone, default: China Standard Time.
	TimeZone pulumi.StringPtrInput
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId pulumi.StringPtrInput
	// Maintainable time window configuration, in weeks, indicates the days of the week that allow maintenance, 1-7 represent Monday to weekend respectively.
	Weeklies pulumi.IntArrayInput
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through the DescribeZones API.
	Zone pulumi.StringPtrInput
}

func (GeneralCloudInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*generalCloudInstanceState)(nil)).Elem()
}

type generalCloudInstanceArgs struct {
	// Automatic renewal flag: 0-normal renewal 1-automatic renewal, the default is 1 automatic renewal. Valid only when purchasing a prepaid instance. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation *string `pulumi:"collation"`
	// Cpu, unit: CORE.
	Cpu int `pulumi:"cpu"`
	// sqlserver version, currently all supported versions are: 2008R2 (SQL Server 2008 R2 Enterprise), 2012SP3 (SQL Server 2012 Enterprise), 201202 (SQL Server 2012 Standard), 2014SP2 (SQL Server 2014 Enterprise), 201402 (SQL Server 2014 Standard), 2016SP1 (SQL Server 2016 Enterprise), 201602 (SQL Server 2016 Standard), 2017 (SQL Server 2017 Enterprise), 201702 (SQL Server 2017 Standard), 2019 (SQL Server 2019 Enterprise), 201902 (SQL Server 2019 Standard). Each region supports different versions for sale, and the version information that can be sold in each region can be pulled through the DescribeProductConfig interface. If left blank, the default version is 2008R2.
	DbVersion *string `pulumi:"dbVersion"`
	// It has been deprecated from version 1.81.2. Upgrade the high-availability architecture of sqlserver, upgrade from mirror disaster recovery to always on cluster disaster recovery, only support 2017 and above and support always on high-availability instances, do not support downgrading to mirror disaster recovery, CLUSTER-upgrade to always on capacity Disaster, if not filled, the high-availability architecture will not be modified.
	//
	// Deprecated: It has been deprecated from version 1.81.2.
	HaType *string `pulumi:"haType"`
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType string `pulumi:"machineType"`
	// Memory, unit: GB.
	Memory int `pulumi:"memory"`
	// Name of the SQL Server instance.
	Name *string `pulumi:"name"`
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	Period *int `pulumi:"period"`
	// project ID.
	ProjectId *int `pulumi:"projectId"`
	// A collection of tags bound to the new instance.
	ResourceTags []GeneralCloudInstanceResourceTag `pulumi:"resourceTags"`
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists []string `pulumi:"securityGroupLists"`
	// Maintainable time window configuration, duration, unit: hour.
	Span *int `pulumi:"span"`
	// Maintainable time window configuration, daily maintainable start time.
	StartTime *string `pulumi:"startTime"`
	// instance disk storage, unit: GB.
	Storage int `pulumi:"storage"`
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId *string `pulumi:"subnetId"`
	// System time zone, default: China Standard Time.
	TimeZone *string `pulumi:"timeZone"`
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId *string `pulumi:"vpcId"`
	// Maintainable time window configuration, in weeks, indicates the days of the week that allow maintenance, 1-7 represent Monday to weekend respectively.
	Weeklies []int `pulumi:"weeklies"`
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through the DescribeZones API.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a GeneralCloudInstance resource.
type GeneralCloudInstanceArgs struct {
	// Automatic renewal flag: 0-normal renewal 1-automatic renewal, the default is 1 automatic renewal. Valid only when purchasing a prepaid instance. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	AutoRenewFlag pulumi.IntPtrInput
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation pulumi.StringPtrInput
	// Cpu, unit: CORE.
	Cpu pulumi.IntInput
	// sqlserver version, currently all supported versions are: 2008R2 (SQL Server 2008 R2 Enterprise), 2012SP3 (SQL Server 2012 Enterprise), 201202 (SQL Server 2012 Standard), 2014SP2 (SQL Server 2014 Enterprise), 201402 (SQL Server 2014 Standard), 2016SP1 (SQL Server 2016 Enterprise), 201602 (SQL Server 2016 Standard), 2017 (SQL Server 2017 Enterprise), 201702 (SQL Server 2017 Standard), 2019 (SQL Server 2019 Enterprise), 201902 (SQL Server 2019 Standard). Each region supports different versions for sale, and the version information that can be sold in each region can be pulled through the DescribeProductConfig interface. If left blank, the default version is 2008R2.
	DbVersion pulumi.StringPtrInput
	// It has been deprecated from version 1.81.2. Upgrade the high-availability architecture of sqlserver, upgrade from mirror disaster recovery to always on cluster disaster recovery, only support 2017 and above and support always on high-availability instances, do not support downgrading to mirror disaster recovery, CLUSTER-upgrade to always on capacity Disaster, if not filled, the high-availability architecture will not be modified.
	//
	// Deprecated: It has been deprecated from version 1.81.2.
	HaType pulumi.StringPtrInput
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType pulumi.StringPtrInput
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType pulumi.StringInput
	// Memory, unit: GB.
	Memory pulumi.IntInput
	// Name of the SQL Server instance.
	Name pulumi.StringPtrInput
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
	Period pulumi.IntPtrInput
	// project ID.
	ProjectId pulumi.IntPtrInput
	// A collection of tags bound to the new instance.
	ResourceTags GeneralCloudInstanceResourceTagArrayInput
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists pulumi.StringArrayInput
	// Maintainable time window configuration, duration, unit: hour.
	Span pulumi.IntPtrInput
	// Maintainable time window configuration, daily maintainable start time.
	StartTime pulumi.StringPtrInput
	// instance disk storage, unit: GB.
	Storage pulumi.IntInput
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId pulumi.StringPtrInput
	// System time zone, default: China Standard Time.
	TimeZone pulumi.StringPtrInput
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId pulumi.StringPtrInput
	// Maintainable time window configuration, in weeks, indicates the days of the week that allow maintenance, 1-7 represent Monday to weekend respectively.
	Weeklies pulumi.IntArrayInput
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through the DescribeZones API.
	Zone pulumi.StringInput
}

func (GeneralCloudInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*generalCloudInstanceArgs)(nil)).Elem()
}

type GeneralCloudInstanceInput interface {
	pulumi.Input

	ToGeneralCloudInstanceOutput() GeneralCloudInstanceOutput
	ToGeneralCloudInstanceOutputWithContext(ctx context.Context) GeneralCloudInstanceOutput
}

func (*GeneralCloudInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneralCloudInstance)(nil)).Elem()
}

func (i *GeneralCloudInstance) ToGeneralCloudInstanceOutput() GeneralCloudInstanceOutput {
	return i.ToGeneralCloudInstanceOutputWithContext(context.Background())
}

func (i *GeneralCloudInstance) ToGeneralCloudInstanceOutputWithContext(ctx context.Context) GeneralCloudInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudInstanceOutput)
}

// GeneralCloudInstanceArrayInput is an input type that accepts GeneralCloudInstanceArray and GeneralCloudInstanceArrayOutput values.
// You can construct a concrete instance of `GeneralCloudInstanceArrayInput` via:
//
//	GeneralCloudInstanceArray{ GeneralCloudInstanceArgs{...} }
type GeneralCloudInstanceArrayInput interface {
	pulumi.Input

	ToGeneralCloudInstanceArrayOutput() GeneralCloudInstanceArrayOutput
	ToGeneralCloudInstanceArrayOutputWithContext(context.Context) GeneralCloudInstanceArrayOutput
}

type GeneralCloudInstanceArray []GeneralCloudInstanceInput

func (GeneralCloudInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GeneralCloudInstance)(nil)).Elem()
}

func (i GeneralCloudInstanceArray) ToGeneralCloudInstanceArrayOutput() GeneralCloudInstanceArrayOutput {
	return i.ToGeneralCloudInstanceArrayOutputWithContext(context.Background())
}

func (i GeneralCloudInstanceArray) ToGeneralCloudInstanceArrayOutputWithContext(ctx context.Context) GeneralCloudInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudInstanceArrayOutput)
}

// GeneralCloudInstanceMapInput is an input type that accepts GeneralCloudInstanceMap and GeneralCloudInstanceMapOutput values.
// You can construct a concrete instance of `GeneralCloudInstanceMapInput` via:
//
//	GeneralCloudInstanceMap{ "key": GeneralCloudInstanceArgs{...} }
type GeneralCloudInstanceMapInput interface {
	pulumi.Input

	ToGeneralCloudInstanceMapOutput() GeneralCloudInstanceMapOutput
	ToGeneralCloudInstanceMapOutputWithContext(context.Context) GeneralCloudInstanceMapOutput
}

type GeneralCloudInstanceMap map[string]GeneralCloudInstanceInput

func (GeneralCloudInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GeneralCloudInstance)(nil)).Elem()
}

func (i GeneralCloudInstanceMap) ToGeneralCloudInstanceMapOutput() GeneralCloudInstanceMapOutput {
	return i.ToGeneralCloudInstanceMapOutputWithContext(context.Background())
}

func (i GeneralCloudInstanceMap) ToGeneralCloudInstanceMapOutputWithContext(ctx context.Context) GeneralCloudInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudInstanceMapOutput)
}

type GeneralCloudInstanceOutput struct{ *pulumi.OutputState }

func (GeneralCloudInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneralCloudInstance)(nil)).Elem()
}

func (o GeneralCloudInstanceOutput) ToGeneralCloudInstanceOutput() GeneralCloudInstanceOutput {
	return o
}

func (o GeneralCloudInstanceOutput) ToGeneralCloudInstanceOutputWithContext(ctx context.Context) GeneralCloudInstanceOutput {
	return o
}

// Automatic renewal flag: 0-normal renewal 1-automatic renewal, the default is 1 automatic renewal. Valid only when purchasing a prepaid instance. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
func (o GeneralCloudInstanceOutput) AutoRenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntPtrOutput { return v.AutoRenewFlag }).(pulumi.IntPtrOutput)
}

// System character set collation, default: Chinese_PRC_CI_AS.
func (o GeneralCloudInstanceOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.Collation }).(pulumi.StringPtrOutput)
}

// Cpu, unit: CORE.
func (o GeneralCloudInstanceOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// sqlserver version, currently all supported versions are: 2008R2 (SQL Server 2008 R2 Enterprise), 2012SP3 (SQL Server 2012 Enterprise), 201202 (SQL Server 2012 Standard), 2014SP2 (SQL Server 2014 Enterprise), 201402 (SQL Server 2014 Standard), 2016SP1 (SQL Server 2016 Enterprise), 201602 (SQL Server 2016 Standard), 2017 (SQL Server 2017 Enterprise), 201702 (SQL Server 2017 Standard), 2019 (SQL Server 2019 Enterprise), 201902 (SQL Server 2019 Standard). Each region supports different versions for sale, and the version information that can be sold in each region can be pulled through the DescribeProductConfig interface. If left blank, the default version is 2008R2.
func (o GeneralCloudInstanceOutput) DbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.DbVersion }).(pulumi.StringPtrOutput)
}

// It has been deprecated from version 1.81.2. Upgrade the high-availability architecture of sqlserver, upgrade from mirror disaster recovery to always on cluster disaster recovery, only support 2017 and above and support always on high-availability instances, do not support downgrading to mirror disaster recovery, CLUSTER-upgrade to always on capacity Disaster, if not filled, the high-availability architecture will not be modified.
//
// Deprecated: It has been deprecated from version 1.81.2.
func (o GeneralCloudInstanceOutput) HaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.HaType }).(pulumi.StringPtrOutput)
}

// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
func (o GeneralCloudInstanceOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
func (o GeneralCloudInstanceOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringOutput { return v.MachineType }).(pulumi.StringOutput)
}

// Memory, unit: GB.
func (o GeneralCloudInstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Name of the SQL Server instance.
func (o GeneralCloudInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48. Valid only when the 'instance_charge_type' parameter value is 'PREPAID'.
func (o GeneralCloudInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// project ID.
func (o GeneralCloudInstanceOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntPtrOutput { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// A collection of tags bound to the new instance.
func (o GeneralCloudInstanceOutput) ResourceTags() GeneralCloudInstanceResourceTagArrayOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) GeneralCloudInstanceResourceTagArrayOutput { return v.ResourceTags }).(GeneralCloudInstanceResourceTagArrayOutput)
}

// Security group list, fill in the security group ID in the form of sg-xxx.
func (o GeneralCloudInstanceOutput) SecurityGroupLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringArrayOutput { return v.SecurityGroupLists }).(pulumi.StringArrayOutput)
}

// Maintainable time window configuration, duration, unit: hour.
func (o GeneralCloudInstanceOutput) Span() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntPtrOutput { return v.Span }).(pulumi.IntPtrOutput)
}

// Maintainable time window configuration, daily maintainable start time.
func (o GeneralCloudInstanceOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.StartTime }).(pulumi.StringPtrOutput)
}

// instance disk storage, unit: GB.
func (o GeneralCloudInstanceOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntOutput { return v.Storage }).(pulumi.IntOutput)
}

// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
func (o GeneralCloudInstanceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// System time zone, default: China Standard Time.
func (o GeneralCloudInstanceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
func (o GeneralCloudInstanceOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

// Maintainable time window configuration, in weeks, indicates the days of the week that allow maintenance, 1-7 represent Monday to weekend respectively.
func (o GeneralCloudInstanceOutput) Weeklies() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.IntArrayOutput { return v.Weeklies }).(pulumi.IntArrayOutput)
}

// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through the DescribeZones API.
func (o GeneralCloudInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudInstance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type GeneralCloudInstanceArrayOutput struct{ *pulumi.OutputState }

func (GeneralCloudInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GeneralCloudInstance)(nil)).Elem()
}

func (o GeneralCloudInstanceArrayOutput) ToGeneralCloudInstanceArrayOutput() GeneralCloudInstanceArrayOutput {
	return o
}

func (o GeneralCloudInstanceArrayOutput) ToGeneralCloudInstanceArrayOutputWithContext(ctx context.Context) GeneralCloudInstanceArrayOutput {
	return o
}

func (o GeneralCloudInstanceArrayOutput) Index(i pulumi.IntInput) GeneralCloudInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GeneralCloudInstance {
		return vs[0].([]*GeneralCloudInstance)[vs[1].(int)]
	}).(GeneralCloudInstanceOutput)
}

type GeneralCloudInstanceMapOutput struct{ *pulumi.OutputState }

func (GeneralCloudInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GeneralCloudInstance)(nil)).Elem()
}

func (o GeneralCloudInstanceMapOutput) ToGeneralCloudInstanceMapOutput() GeneralCloudInstanceMapOutput {
	return o
}

func (o GeneralCloudInstanceMapOutput) ToGeneralCloudInstanceMapOutputWithContext(ctx context.Context) GeneralCloudInstanceMapOutput {
	return o
}

func (o GeneralCloudInstanceMapOutput) MapIndex(k pulumi.StringInput) GeneralCloudInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GeneralCloudInstance {
		return vs[0].(map[string]*GeneralCloudInstance)[vs[1].(string)]
	}).(GeneralCloudInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudInstanceInput)(nil)).Elem(), &GeneralCloudInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudInstanceArrayInput)(nil)).Elem(), GeneralCloudInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudInstanceMapInput)(nil)).Elem(), GeneralCloudInstanceMap{})
	pulumi.RegisterOutputType(GeneralCloudInstanceOutput{})
	pulumi.RegisterOutputType(GeneralCloudInstanceArrayOutput{})
	pulumi.RegisterOutputType(GeneralCloudInstanceMapOutput{})
}
