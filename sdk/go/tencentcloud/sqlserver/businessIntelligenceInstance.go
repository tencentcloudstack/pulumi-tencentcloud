// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a sqlserver businessIntelligenceInstance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "sqlserver",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(zones.Zones[4].Name),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			securityGroup, err := Security.NewGroup(ctx, "securityGroup", &Security.GroupArgs{
//				Description: pulumi.String("desc."),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Sqlserver.NewBusinessIntelligenceInstance(ctx, "example", &Sqlserver.BusinessIntelligenceInstanceArgs{
//				Zone:        pulumi.String(zones.Zones[4].Name),
//				Memory:      pulumi.Int(4),
//				Storage:     pulumi.Int(100),
//				Cpu:         pulumi.Int(2),
//				MachineType: pulumi.String("CLOUD_PREMIUM"),
//				ProjectId:   pulumi.Int(0),
//				SubnetId:    subnet.ID(),
//				VpcId:       vpc.ID(),
//				DbVersion:   pulumi.String("201603"),
//				SecurityGroupLists: pulumi.StringArray{
//					securityGroup.ID(),
//				},
//				Weeklies: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//					pulumi.Int(4),
//					pulumi.Int(5),
//					pulumi.Int(6),
//					pulumi.Int(7),
//				},
//				StartTime:    pulumi.String("00:00"),
//				Span:         pulumi.Int(6),
//				InstanceName: pulumi.String("tf_example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// sqlserver business_intelligence_instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Sqlserver/businessIntelligenceInstance:BusinessIntelligenceInstance example mssqlbi-fo2dwujt
//
// ```
type BusinessIntelligenceInstance struct {
	pulumi.CustomResourceState

	// The number of CPU cores of the instance you want to purchase.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703 (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of purchasable versions in each region.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// Instance Name.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD (virtual machine with SSD).
	MachineType pulumi.StringOutput `pulumi:"machineType"`
	// Instance memory size in GB.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Project ID.
	ProjectId pulumi.IntOutput `pulumi:"projectId"`
	// Tags associated with the instances to be created.
	ResourceTags BusinessIntelligenceInstanceResourceTagArrayOutput `pulumi:"resourceTags"`
	// Security group list, which contains security group IDs in the format of sg-xxx.
	SecurityGroupLists pulumi.StringArrayOutput `pulumi:"securityGroupLists"`
	// Configuration of the maintenance window, which specifies the maintenance duration in hours.
	Span pulumi.IntOutput `pulumi:"span"`
	// Configuration of the maintenance window, which specifies the start time of daily maintenance.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// Instance disk size in GB.
	Storage pulumi.IntOutput `pulumi:"storage"`
	// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
	Weeklies pulumi.IntArrayOutput `pulumi:"weeklies"`
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through theDescribeZones API.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewBusinessIntelligenceInstance registers a new resource with the given unique name, arguments, and options.
func NewBusinessIntelligenceInstance(ctx *pulumi.Context,
	name string, args *BusinessIntelligenceInstanceArgs, opts ...pulumi.ResourceOption) (*BusinessIntelligenceInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cpu == nil {
		return nil, errors.New("invalid value for required argument 'Cpu'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.MachineType == nil {
		return nil, errors.New("invalid value for required argument 'MachineType'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BusinessIntelligenceInstance
	err := ctx.RegisterResource("tencentcloud:Sqlserver/businessIntelligenceInstance:BusinessIntelligenceInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBusinessIntelligenceInstance gets an existing BusinessIntelligenceInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBusinessIntelligenceInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BusinessIntelligenceInstanceState, opts ...pulumi.ResourceOption) (*BusinessIntelligenceInstance, error) {
	var resource BusinessIntelligenceInstance
	err := ctx.ReadResource("tencentcloud:Sqlserver/businessIntelligenceInstance:BusinessIntelligenceInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BusinessIntelligenceInstance resources.
type businessIntelligenceInstanceState struct {
	// The number of CPU cores of the instance you want to purchase.
	Cpu *int `pulumi:"cpu"`
	// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703 (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of purchasable versions in each region.
	DbVersion *string `pulumi:"dbVersion"`
	// Instance Name.
	InstanceName *string `pulumi:"instanceName"`
	// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD (virtual machine with SSD).
	MachineType *string `pulumi:"machineType"`
	// Instance memory size in GB.
	Memory *int `pulumi:"memory"`
	// Project ID.
	ProjectId *int `pulumi:"projectId"`
	// Tags associated with the instances to be created.
	ResourceTags []BusinessIntelligenceInstanceResourceTag `pulumi:"resourceTags"`
	// Security group list, which contains security group IDs in the format of sg-xxx.
	SecurityGroupLists []string `pulumi:"securityGroupLists"`
	// Configuration of the maintenance window, which specifies the maintenance duration in hours.
	Span *int `pulumi:"span"`
	// Configuration of the maintenance window, which specifies the start time of daily maintenance.
	StartTime *string `pulumi:"startTime"`
	// Instance disk size in GB.
	Storage *int `pulumi:"storage"`
	// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
	SubnetId *string `pulumi:"subnetId"`
	// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
	VpcId *string `pulumi:"vpcId"`
	// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
	Weeklies []int `pulumi:"weeklies"`
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through theDescribeZones API.
	Zone *string `pulumi:"zone"`
}

type BusinessIntelligenceInstanceState struct {
	// The number of CPU cores of the instance you want to purchase.
	Cpu pulumi.IntPtrInput
	// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703 (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of purchasable versions in each region.
	DbVersion pulumi.StringPtrInput
	// Instance Name.
	InstanceName pulumi.StringPtrInput
	// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD (virtual machine with SSD).
	MachineType pulumi.StringPtrInput
	// Instance memory size in GB.
	Memory pulumi.IntPtrInput
	// Project ID.
	ProjectId pulumi.IntPtrInput
	// Tags associated with the instances to be created.
	ResourceTags BusinessIntelligenceInstanceResourceTagArrayInput
	// Security group list, which contains security group IDs in the format of sg-xxx.
	SecurityGroupLists pulumi.StringArrayInput
	// Configuration of the maintenance window, which specifies the maintenance duration in hours.
	Span pulumi.IntPtrInput
	// Configuration of the maintenance window, which specifies the start time of daily maintenance.
	StartTime pulumi.StringPtrInput
	// Instance disk size in GB.
	Storage pulumi.IntPtrInput
	// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
	SubnetId pulumi.StringPtrInput
	// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
	VpcId pulumi.StringPtrInput
	// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
	Weeklies pulumi.IntArrayInput
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through theDescribeZones API.
	Zone pulumi.StringPtrInput
}

func (BusinessIntelligenceInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*businessIntelligenceInstanceState)(nil)).Elem()
}

type businessIntelligenceInstanceArgs struct {
	// The number of CPU cores of the instance you want to purchase.
	Cpu int `pulumi:"cpu"`
	// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703 (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of purchasable versions in each region.
	DbVersion *string `pulumi:"dbVersion"`
	// Instance Name.
	InstanceName string `pulumi:"instanceName"`
	// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD (virtual machine with SSD).
	MachineType string `pulumi:"machineType"`
	// Instance memory size in GB.
	Memory int `pulumi:"memory"`
	// Project ID.
	ProjectId *int `pulumi:"projectId"`
	// Tags associated with the instances to be created.
	ResourceTags []BusinessIntelligenceInstanceResourceTag `pulumi:"resourceTags"`
	// Security group list, which contains security group IDs in the format of sg-xxx.
	SecurityGroupLists []string `pulumi:"securityGroupLists"`
	// Configuration of the maintenance window, which specifies the maintenance duration in hours.
	Span *int `pulumi:"span"`
	// Configuration of the maintenance window, which specifies the start time of daily maintenance.
	StartTime *string `pulumi:"startTime"`
	// Instance disk size in GB.
	Storage int `pulumi:"storage"`
	// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
	SubnetId *string `pulumi:"subnetId"`
	// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
	VpcId *string `pulumi:"vpcId"`
	// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
	Weeklies []int `pulumi:"weeklies"`
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through theDescribeZones API.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a BusinessIntelligenceInstance resource.
type BusinessIntelligenceInstanceArgs struct {
	// The number of CPU cores of the instance you want to purchase.
	Cpu pulumi.IntInput
	// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703 (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of purchasable versions in each region.
	DbVersion pulumi.StringPtrInput
	// Instance Name.
	InstanceName pulumi.StringInput
	// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD (virtual machine with SSD).
	MachineType pulumi.StringInput
	// Instance memory size in GB.
	Memory pulumi.IntInput
	// Project ID.
	ProjectId pulumi.IntPtrInput
	// Tags associated with the instances to be created.
	ResourceTags BusinessIntelligenceInstanceResourceTagArrayInput
	// Security group list, which contains security group IDs in the format of sg-xxx.
	SecurityGroupLists pulumi.StringArrayInput
	// Configuration of the maintenance window, which specifies the maintenance duration in hours.
	Span pulumi.IntPtrInput
	// Configuration of the maintenance window, which specifies the start time of daily maintenance.
	StartTime pulumi.StringPtrInput
	// Instance disk size in GB.
	Storage pulumi.IntInput
	// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
	SubnetId pulumi.StringPtrInput
	// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
	VpcId pulumi.StringPtrInput
	// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
	Weeklies pulumi.IntArrayInput
	// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through theDescribeZones API.
	Zone pulumi.StringInput
}

func (BusinessIntelligenceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*businessIntelligenceInstanceArgs)(nil)).Elem()
}

type BusinessIntelligenceInstanceInput interface {
	pulumi.Input

	ToBusinessIntelligenceInstanceOutput() BusinessIntelligenceInstanceOutput
	ToBusinessIntelligenceInstanceOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceOutput
}

func (*BusinessIntelligenceInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessIntelligenceInstance)(nil)).Elem()
}

func (i *BusinessIntelligenceInstance) ToBusinessIntelligenceInstanceOutput() BusinessIntelligenceInstanceOutput {
	return i.ToBusinessIntelligenceInstanceOutputWithContext(context.Background())
}

func (i *BusinessIntelligenceInstance) ToBusinessIntelligenceInstanceOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIntelligenceInstanceOutput)
}

// BusinessIntelligenceInstanceArrayInput is an input type that accepts BusinessIntelligenceInstanceArray and BusinessIntelligenceInstanceArrayOutput values.
// You can construct a concrete instance of `BusinessIntelligenceInstanceArrayInput` via:
//
//	BusinessIntelligenceInstanceArray{ BusinessIntelligenceInstanceArgs{...} }
type BusinessIntelligenceInstanceArrayInput interface {
	pulumi.Input

	ToBusinessIntelligenceInstanceArrayOutput() BusinessIntelligenceInstanceArrayOutput
	ToBusinessIntelligenceInstanceArrayOutputWithContext(context.Context) BusinessIntelligenceInstanceArrayOutput
}

type BusinessIntelligenceInstanceArray []BusinessIntelligenceInstanceInput

func (BusinessIntelligenceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BusinessIntelligenceInstance)(nil)).Elem()
}

func (i BusinessIntelligenceInstanceArray) ToBusinessIntelligenceInstanceArrayOutput() BusinessIntelligenceInstanceArrayOutput {
	return i.ToBusinessIntelligenceInstanceArrayOutputWithContext(context.Background())
}

func (i BusinessIntelligenceInstanceArray) ToBusinessIntelligenceInstanceArrayOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIntelligenceInstanceArrayOutput)
}

// BusinessIntelligenceInstanceMapInput is an input type that accepts BusinessIntelligenceInstanceMap and BusinessIntelligenceInstanceMapOutput values.
// You can construct a concrete instance of `BusinessIntelligenceInstanceMapInput` via:
//
//	BusinessIntelligenceInstanceMap{ "key": BusinessIntelligenceInstanceArgs{...} }
type BusinessIntelligenceInstanceMapInput interface {
	pulumi.Input

	ToBusinessIntelligenceInstanceMapOutput() BusinessIntelligenceInstanceMapOutput
	ToBusinessIntelligenceInstanceMapOutputWithContext(context.Context) BusinessIntelligenceInstanceMapOutput
}

type BusinessIntelligenceInstanceMap map[string]BusinessIntelligenceInstanceInput

func (BusinessIntelligenceInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BusinessIntelligenceInstance)(nil)).Elem()
}

func (i BusinessIntelligenceInstanceMap) ToBusinessIntelligenceInstanceMapOutput() BusinessIntelligenceInstanceMapOutput {
	return i.ToBusinessIntelligenceInstanceMapOutputWithContext(context.Background())
}

func (i BusinessIntelligenceInstanceMap) ToBusinessIntelligenceInstanceMapOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIntelligenceInstanceMapOutput)
}

type BusinessIntelligenceInstanceOutput struct{ *pulumi.OutputState }

func (BusinessIntelligenceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessIntelligenceInstance)(nil)).Elem()
}

func (o BusinessIntelligenceInstanceOutput) ToBusinessIntelligenceInstanceOutput() BusinessIntelligenceInstanceOutput {
	return o
}

func (o BusinessIntelligenceInstanceOutput) ToBusinessIntelligenceInstanceOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceOutput {
	return o
}

// The number of CPU cores of the instance you want to purchase.
func (o BusinessIntelligenceInstanceOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703 (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of purchasable versions in each region.
func (o BusinessIntelligenceInstanceOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// Instance Name.
func (o BusinessIntelligenceInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD (virtual machine with SSD).
func (o BusinessIntelligenceInstanceOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.MachineType }).(pulumi.StringOutput)
}

// Instance memory size in GB.
func (o BusinessIntelligenceInstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Project ID.
func (o BusinessIntelligenceInstanceOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.IntOutput { return v.ProjectId }).(pulumi.IntOutput)
}

// Tags associated with the instances to be created.
func (o BusinessIntelligenceInstanceOutput) ResourceTags() BusinessIntelligenceInstanceResourceTagArrayOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) BusinessIntelligenceInstanceResourceTagArrayOutput {
		return v.ResourceTags
	}).(BusinessIntelligenceInstanceResourceTagArrayOutput)
}

// Security group list, which contains security group IDs in the format of sg-xxx.
func (o BusinessIntelligenceInstanceOutput) SecurityGroupLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringArrayOutput { return v.SecurityGroupLists }).(pulumi.StringArrayOutput)
}

// Configuration of the maintenance window, which specifies the maintenance duration in hours.
func (o BusinessIntelligenceInstanceOutput) Span() pulumi.IntOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.IntOutput { return v.Span }).(pulumi.IntOutput)
}

// Configuration of the maintenance window, which specifies the start time of daily maintenance.
func (o BusinessIntelligenceInstanceOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// Instance disk size in GB.
func (o BusinessIntelligenceInstanceOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.IntOutput { return v.Storage }).(pulumi.IntOutput)
}

// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
func (o BusinessIntelligenceInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
func (o BusinessIntelligenceInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
func (o BusinessIntelligenceInstanceOutput) Weeklies() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.IntArrayOutput { return v.Weeklies }).(pulumi.IntArrayOutput)
}

// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through theDescribeZones API.
func (o BusinessIntelligenceInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessIntelligenceInstance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type BusinessIntelligenceInstanceArrayOutput struct{ *pulumi.OutputState }

func (BusinessIntelligenceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BusinessIntelligenceInstance)(nil)).Elem()
}

func (o BusinessIntelligenceInstanceArrayOutput) ToBusinessIntelligenceInstanceArrayOutput() BusinessIntelligenceInstanceArrayOutput {
	return o
}

func (o BusinessIntelligenceInstanceArrayOutput) ToBusinessIntelligenceInstanceArrayOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceArrayOutput {
	return o
}

func (o BusinessIntelligenceInstanceArrayOutput) Index(i pulumi.IntInput) BusinessIntelligenceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BusinessIntelligenceInstance {
		return vs[0].([]*BusinessIntelligenceInstance)[vs[1].(int)]
	}).(BusinessIntelligenceInstanceOutput)
}

type BusinessIntelligenceInstanceMapOutput struct{ *pulumi.OutputState }

func (BusinessIntelligenceInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BusinessIntelligenceInstance)(nil)).Elem()
}

func (o BusinessIntelligenceInstanceMapOutput) ToBusinessIntelligenceInstanceMapOutput() BusinessIntelligenceInstanceMapOutput {
	return o
}

func (o BusinessIntelligenceInstanceMapOutput) ToBusinessIntelligenceInstanceMapOutputWithContext(ctx context.Context) BusinessIntelligenceInstanceMapOutput {
	return o
}

func (o BusinessIntelligenceInstanceMapOutput) MapIndex(k pulumi.StringInput) BusinessIntelligenceInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BusinessIntelligenceInstance {
		return vs[0].(map[string]*BusinessIntelligenceInstance)[vs[1].(string)]
	}).(BusinessIntelligenceInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessIntelligenceInstanceInput)(nil)).Elem(), &BusinessIntelligenceInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessIntelligenceInstanceArrayInput)(nil)).Elem(), BusinessIntelligenceInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessIntelligenceInstanceMapInput)(nil)).Elem(), BusinessIntelligenceInstanceMap{})
	pulumi.RegisterOutputType(BusinessIntelligenceInstanceOutput{})
	pulumi.RegisterOutputType(BusinessIntelligenceInstanceArrayOutput{})
	pulumi.RegisterOutputType(BusinessIntelligenceInstanceMapOutput{})
}
