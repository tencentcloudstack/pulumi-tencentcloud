// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a sqlserver generalCloudRoInstance
//
// ## Example Usage
// ### If readOnlyGroupType value is 1 - Ship according to one instance and one read-only group:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "sqlserver",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(zones.Zones[4].Name),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			securityGroup, err := Security.NewGroup(ctx, "securityGroup", &Security.GroupArgs{
//				Description: pulumi.String("desc."),
//			})
//			if err != nil {
//				return err
//			}
//			exampleGeneralCloudInstance, err := Sqlserver.NewGeneralCloudInstance(ctx, "exampleGeneralCloudInstance", &Sqlserver.GeneralCloudInstanceArgs{
//				Zone:               pulumi.String(zones.Zones[4].Name),
//				Memory:             pulumi.Int(4),
//				Storage:            pulumi.Int(100),
//				Cpu:                pulumi.Int(2),
//				MachineType:        pulumi.String("CLOUD_HSSD"),
//				InstanceChargeType: pulumi.String("POSTPAID"),
//				ProjectId:          pulumi.Int(0),
//				SubnetId:           subnet.ID(),
//				VpcId:              vpc.ID(),
//				DbVersion:          pulumi.String("2008R2"),
//				SecurityGroupLists: pulumi.StringArray{
//					securityGroup.ID(),
//				},
//				Weeklies: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//					pulumi.Int(5),
//					pulumi.Int(6),
//					pulumi.Int(7),
//				},
//				StartTime: pulumi.String("00:00"),
//				Span:      pulumi.Int(6),
//				ResourceTags: sqlserver.GeneralCloudInstanceResourceTagArray{
//					&sqlserver.GeneralCloudInstanceResourceTagArgs{
//						TagKey:   pulumi.String("test"),
//						TagValue: pulumi.String("test"),
//					},
//				},
//				Collation: pulumi.String("Chinese_PRC_CI_AS"),
//				TimeZone:  pulumi.String("China Standard Time"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Sqlserver.NewGeneralCloudRoInstance(ctx, "exampleGeneralCloudRoInstance", &Sqlserver.GeneralCloudRoInstanceArgs{
//				InstanceId:         exampleGeneralCloudInstance.ID(),
//				Zone:               pulumi.String(zones.Zones[4].Name),
//				ReadOnlyGroupType:  pulumi.Int(1),
//				Memory:             pulumi.Int(4),
//				Storage:            pulumi.Int(100),
//				Cpu:                pulumi.Int(2),
//				MachineType:        pulumi.String("CLOUD_BSSD"),
//				InstanceChargeType: pulumi.String("POSTPAID"),
//				SubnetId:           subnet.ID(),
//				VpcId:              vpc.ID(),
//				SecurityGroupLists: pulumi.StringArray{
//					securityGroup.ID(),
//				},
//				Collation: pulumi.String("Chinese_PRC_CI_AS"),
//				TimeZone:  pulumi.String("China Standard Time"),
//				ResourceTags: pulumi.AnyMap{
//					"test-key1": pulumi.Any("test-value1"),
//					"test-key2": pulumi.Any("test-value2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### If readOnlyGroupType value is 2 - Ship after creating a read-only group, all instances are under this read-only group:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Sqlserver.NewGeneralCloudRoInstance(ctx, "example", &Sqlserver.GeneralCloudRoInstanceArgs{
//				InstanceId:                  pulumi.Any(tencentcloud_sqlserver_general_cloud_instance.Example.Id),
//				Zone:                        pulumi.Any(data.Tencentcloud_availability_zones_by_product.Zones.Zones[4].Name),
//				ReadOnlyGroupType:           pulumi.Int(2),
//				ReadOnlyGroupName:           pulumi.String("test-ro-group"),
//				ReadOnlyGroupIsOfflineDelay: pulumi.Int(1),
//				ReadOnlyGroupMaxDelayTime:   pulumi.Int(10),
//				ReadOnlyGroupMinInGroup:     pulumi.Int(1),
//				Memory:                      pulumi.Int(4),
//				Storage:                     pulumi.Int(100),
//				Cpu:                         pulumi.Int(2),
//				MachineType:                 pulumi.String("CLOUD_BSSD"),
//				InstanceChargeType:          pulumi.String("POSTPAID"),
//				SubnetId:                    pulumi.Any(tencentcloud_subnet.Subnet.Id),
//				VpcId:                       pulumi.Any(tencentcloud_vpc.Vpc.Id),
//				SecurityGroupLists: pulumi.StringArray{
//					pulumi.Any(tencentcloud_security_group.Security_group.Id),
//				},
//				Collation: pulumi.String("Chinese_PRC_CI_AS"),
//				TimeZone:  pulumi.String("China Standard Time"),
//				ResourceTags: pulumi.AnyMap{
//					"test-key1": pulumi.Any("test-value1"),
//					"test-key2": pulumi.Any("test-value2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### If readOnlyGroupType value is 3 - All instances shipped are in the existing Some read-only groups below:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Sqlserver.NewGeneralCloudRoInstance(ctx, "example", &Sqlserver.GeneralCloudRoInstanceArgs{
//				InstanceId:         pulumi.Any(tencentcloud_sqlserver_general_cloud_instance.Example.Id),
//				Zone:               pulumi.Any(data.Tencentcloud_availability_zones_by_product.Zones.Zones[4].Name),
//				ReadOnlyGroupType:  pulumi.Int(3),
//				Memory:             pulumi.Int(4),
//				Storage:            pulumi.Int(100),
//				Cpu:                pulumi.Int(2),
//				MachineType:        pulumi.String("CLOUD_BSSD"),
//				ReadOnlyGroupId:    pulumi.String("mssqlrg-clboghrj"),
//				InstanceChargeType: pulumi.String("POSTPAID"),
//				SubnetId:           pulumi.Any(tencentcloud_subnet.Subnet.Id),
//				VpcId:              pulumi.Any(tencentcloud_vpc.Vpc.Id),
//				SecurityGroupLists: pulumi.StringArray{
//					pulumi.Any(tencentcloud_security_group.Security_group.Id),
//				},
//				Collation: pulumi.String("Chinese_PRC_CI_AS"),
//				TimeZone:  pulumi.String("China Standard Time"),
//				ResourceTags: pulumi.AnyMap{
//					"test-key1": pulumi.Any("test-value1"),
//					"test-key2": pulumi.Any("test-value2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type GeneralCloudRoInstance struct {
	pulumi.CustomResourceState

	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation pulumi.StringPtrOutput `pulumi:"collation"`
	// Number of instance cores.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType pulumi.StringPtrOutput `pulumi:"instanceChargeType"`
	// Primary instance ID, in the format: mssql-3l3fgqn7.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType pulumi.StringOutput `pulumi:"machineType"`
	// Instance memory size, in GB.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Required when ReadOnlyGroupType=3, existing read-only group ID.
	ReadOnlyGroupId pulumi.StringOutput `pulumi:"readOnlyGroupId"`
	// Required when ReadOnlyGroupType=2, whether to enable the delayed elimination function for the newly created read-only group, 1-on, 0-off. When the delay between the read-only replica and the primary instance is greater than the threshold, it will be automatically removed.
	ReadOnlyGroupIsOfflineDelay pulumi.IntOutput `pulumi:"readOnlyGroupIsOfflineDelay"`
	// Mandatory when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the threshold for delay culling of newly created read-only groups.
	ReadOnlyGroupMaxDelayTime pulumi.IntOutput `pulumi:"readOnlyGroupMaxDelayTime"`
	// Required when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the newly created read-only group retains at least the number of read-only replicas after delay elimination.
	ReadOnlyGroupMinInGroup pulumi.IntOutput `pulumi:"readOnlyGroupMinInGroup"`
	// Required when ReadOnlyGroupType=2, the name of the newly created read-only group.
	ReadOnlyGroupName pulumi.StringOutput `pulumi:"readOnlyGroupName"`
	// Read-only group type option, 1- Ship according to one instance and one read-only group, 2 - Ship after creating a read-only group, all instances are under this read-only group, 3 - All instances shipped are in the existing Some read-only groups below.
	ReadOnlyGroupType pulumi.IntOutput `pulumi:"readOnlyGroupType"`
	// Tag description list.
	ResourceTags pulumi.MapOutput `pulumi:"resourceTags"`
	// Primary read only instance ID, in the format: mssqlro-lbljc5qd.
	RoInstanceId pulumi.StringOutput `pulumi:"roInstanceId"`
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists pulumi.StringArrayOutput `pulumi:"securityGroupLists"`
	// Instance disk size, in GB.
	Storage pulumi.IntOutput `pulumi:"storage"`
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// System time zone, default: China Standard Time.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
	// Instance Availability Zone, similar to ap-guangzhou-1 (Guangzhou District 1); the instance sales area can be obtained through the interface DescribeZones.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewGeneralCloudRoInstance registers a new resource with the given unique name, arguments, and options.
func NewGeneralCloudRoInstance(ctx *pulumi.Context,
	name string, args *GeneralCloudRoInstanceArgs, opts ...pulumi.ResourceOption) (*GeneralCloudRoInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cpu == nil {
		return nil, errors.New("invalid value for required argument 'Cpu'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.MachineType == nil {
		return nil, errors.New("invalid value for required argument 'MachineType'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	if args.ReadOnlyGroupType == nil {
		return nil, errors.New("invalid value for required argument 'ReadOnlyGroupType'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource GeneralCloudRoInstance
	err := ctx.RegisterResource("tencentcloud:Sqlserver/generalCloudRoInstance:GeneralCloudRoInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGeneralCloudRoInstance gets an existing GeneralCloudRoInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGeneralCloudRoInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GeneralCloudRoInstanceState, opts ...pulumi.ResourceOption) (*GeneralCloudRoInstance, error) {
	var resource GeneralCloudRoInstance
	err := ctx.ReadResource("tencentcloud:Sqlserver/generalCloudRoInstance:GeneralCloudRoInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GeneralCloudRoInstance resources.
type generalCloudRoInstanceState struct {
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation *string `pulumi:"collation"`
	// Number of instance cores.
	Cpu *int `pulumi:"cpu"`
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// Primary instance ID, in the format: mssql-3l3fgqn7.
	InstanceId *string `pulumi:"instanceId"`
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType *string `pulumi:"machineType"`
	// Instance memory size, in GB.
	Memory *int `pulumi:"memory"`
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48.
	Period *int `pulumi:"period"`
	// Required when ReadOnlyGroupType=3, existing read-only group ID.
	ReadOnlyGroupId *string `pulumi:"readOnlyGroupId"`
	// Required when ReadOnlyGroupType=2, whether to enable the delayed elimination function for the newly created read-only group, 1-on, 0-off. When the delay between the read-only replica and the primary instance is greater than the threshold, it will be automatically removed.
	ReadOnlyGroupIsOfflineDelay *int `pulumi:"readOnlyGroupIsOfflineDelay"`
	// Mandatory when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the threshold for delay culling of newly created read-only groups.
	ReadOnlyGroupMaxDelayTime *int `pulumi:"readOnlyGroupMaxDelayTime"`
	// Required when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the newly created read-only group retains at least the number of read-only replicas after delay elimination.
	ReadOnlyGroupMinInGroup *int `pulumi:"readOnlyGroupMinInGroup"`
	// Required when ReadOnlyGroupType=2, the name of the newly created read-only group.
	ReadOnlyGroupName *string `pulumi:"readOnlyGroupName"`
	// Read-only group type option, 1- Ship according to one instance and one read-only group, 2 - Ship after creating a read-only group, all instances are under this read-only group, 3 - All instances shipped are in the existing Some read-only groups below.
	ReadOnlyGroupType *int `pulumi:"readOnlyGroupType"`
	// Tag description list.
	ResourceTags map[string]interface{} `pulumi:"resourceTags"`
	// Primary read only instance ID, in the format: mssqlro-lbljc5qd.
	RoInstanceId *string `pulumi:"roInstanceId"`
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists []string `pulumi:"securityGroupLists"`
	// Instance disk size, in GB.
	Storage *int `pulumi:"storage"`
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId *string `pulumi:"subnetId"`
	// System time zone, default: China Standard Time.
	TimeZone *string `pulumi:"timeZone"`
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId *string `pulumi:"vpcId"`
	// Instance Availability Zone, similar to ap-guangzhou-1 (Guangzhou District 1); the instance sales area can be obtained through the interface DescribeZones.
	Zone *string `pulumi:"zone"`
}

type GeneralCloudRoInstanceState struct {
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation pulumi.StringPtrInput
	// Number of instance cores.
	Cpu pulumi.IntPtrInput
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType pulumi.StringPtrInput
	// Primary instance ID, in the format: mssql-3l3fgqn7.
	InstanceId pulumi.StringPtrInput
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType pulumi.StringPtrInput
	// Instance memory size, in GB.
	Memory pulumi.IntPtrInput
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48.
	Period pulumi.IntPtrInput
	// Required when ReadOnlyGroupType=3, existing read-only group ID.
	ReadOnlyGroupId pulumi.StringPtrInput
	// Required when ReadOnlyGroupType=2, whether to enable the delayed elimination function for the newly created read-only group, 1-on, 0-off. When the delay between the read-only replica and the primary instance is greater than the threshold, it will be automatically removed.
	ReadOnlyGroupIsOfflineDelay pulumi.IntPtrInput
	// Mandatory when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the threshold for delay culling of newly created read-only groups.
	ReadOnlyGroupMaxDelayTime pulumi.IntPtrInput
	// Required when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the newly created read-only group retains at least the number of read-only replicas after delay elimination.
	ReadOnlyGroupMinInGroup pulumi.IntPtrInput
	// Required when ReadOnlyGroupType=2, the name of the newly created read-only group.
	ReadOnlyGroupName pulumi.StringPtrInput
	// Read-only group type option, 1- Ship according to one instance and one read-only group, 2 - Ship after creating a read-only group, all instances are under this read-only group, 3 - All instances shipped are in the existing Some read-only groups below.
	ReadOnlyGroupType pulumi.IntPtrInput
	// Tag description list.
	ResourceTags pulumi.MapInput
	// Primary read only instance ID, in the format: mssqlro-lbljc5qd.
	RoInstanceId pulumi.StringPtrInput
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists pulumi.StringArrayInput
	// Instance disk size, in GB.
	Storage pulumi.IntPtrInput
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId pulumi.StringPtrInput
	// System time zone, default: China Standard Time.
	TimeZone pulumi.StringPtrInput
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId pulumi.StringPtrInput
	// Instance Availability Zone, similar to ap-guangzhou-1 (Guangzhou District 1); the instance sales area can be obtained through the interface DescribeZones.
	Zone pulumi.StringPtrInput
}

func (GeneralCloudRoInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*generalCloudRoInstanceState)(nil)).Elem()
}

type generalCloudRoInstanceArgs struct {
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation *string `pulumi:"collation"`
	// Number of instance cores.
	Cpu int `pulumi:"cpu"`
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// Primary instance ID, in the format: mssql-3l3fgqn7.
	InstanceId string `pulumi:"instanceId"`
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType string `pulumi:"machineType"`
	// Instance memory size, in GB.
	Memory int `pulumi:"memory"`
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48.
	Period *int `pulumi:"period"`
	// Required when ReadOnlyGroupType=3, existing read-only group ID.
	ReadOnlyGroupId *string `pulumi:"readOnlyGroupId"`
	// Required when ReadOnlyGroupType=2, whether to enable the delayed elimination function for the newly created read-only group, 1-on, 0-off. When the delay between the read-only replica and the primary instance is greater than the threshold, it will be automatically removed.
	ReadOnlyGroupIsOfflineDelay *int `pulumi:"readOnlyGroupIsOfflineDelay"`
	// Mandatory when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the threshold for delay culling of newly created read-only groups.
	ReadOnlyGroupMaxDelayTime *int `pulumi:"readOnlyGroupMaxDelayTime"`
	// Required when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the newly created read-only group retains at least the number of read-only replicas after delay elimination.
	ReadOnlyGroupMinInGroup *int `pulumi:"readOnlyGroupMinInGroup"`
	// Required when ReadOnlyGroupType=2, the name of the newly created read-only group.
	ReadOnlyGroupName *string `pulumi:"readOnlyGroupName"`
	// Read-only group type option, 1- Ship according to one instance and one read-only group, 2 - Ship after creating a read-only group, all instances are under this read-only group, 3 - All instances shipped are in the existing Some read-only groups below.
	ReadOnlyGroupType int `pulumi:"readOnlyGroupType"`
	// Tag description list.
	ResourceTags map[string]interface{} `pulumi:"resourceTags"`
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists []string `pulumi:"securityGroupLists"`
	// Instance disk size, in GB.
	Storage int `pulumi:"storage"`
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId *string `pulumi:"subnetId"`
	// System time zone, default: China Standard Time.
	TimeZone *string `pulumi:"timeZone"`
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId *string `pulumi:"vpcId"`
	// Instance Availability Zone, similar to ap-guangzhou-1 (Guangzhou District 1); the instance sales area can be obtained through the interface DescribeZones.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a GeneralCloudRoInstance resource.
type GeneralCloudRoInstanceArgs struct {
	// System character set collation, default: Chinese_PRC_CI_AS.
	Collation pulumi.StringPtrInput
	// Number of instance cores.
	Cpu pulumi.IntInput
	// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
	InstanceChargeType pulumi.StringPtrInput
	// Primary instance ID, in the format: mssql-3l3fgqn7.
	InstanceId pulumi.StringInput
	// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
	MachineType pulumi.StringInput
	// Instance memory size, in GB.
	Memory pulumi.IntInput
	// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48.
	Period pulumi.IntPtrInput
	// Required when ReadOnlyGroupType=3, existing read-only group ID.
	ReadOnlyGroupId pulumi.StringPtrInput
	// Required when ReadOnlyGroupType=2, whether to enable the delayed elimination function for the newly created read-only group, 1-on, 0-off. When the delay between the read-only replica and the primary instance is greater than the threshold, it will be automatically removed.
	ReadOnlyGroupIsOfflineDelay pulumi.IntPtrInput
	// Mandatory when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the threshold for delay culling of newly created read-only groups.
	ReadOnlyGroupMaxDelayTime pulumi.IntPtrInput
	// Required when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the newly created read-only group retains at least the number of read-only replicas after delay elimination.
	ReadOnlyGroupMinInGroup pulumi.IntPtrInput
	// Required when ReadOnlyGroupType=2, the name of the newly created read-only group.
	ReadOnlyGroupName pulumi.StringPtrInput
	// Read-only group type option, 1- Ship according to one instance and one read-only group, 2 - Ship after creating a read-only group, all instances are under this read-only group, 3 - All instances shipped are in the existing Some read-only groups below.
	ReadOnlyGroupType pulumi.IntInput
	// Tag description list.
	ResourceTags pulumi.MapInput
	// Security group list, fill in the security group ID in the form of sg-xxx.
	SecurityGroupLists pulumi.StringArrayInput
	// Instance disk size, in GB.
	Storage pulumi.IntInput
	// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
	SubnetId pulumi.StringPtrInput
	// System time zone, default: China Standard Time.
	TimeZone pulumi.StringPtrInput
	// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
	VpcId pulumi.StringPtrInput
	// Instance Availability Zone, similar to ap-guangzhou-1 (Guangzhou District 1); the instance sales area can be obtained through the interface DescribeZones.
	Zone pulumi.StringInput
}

func (GeneralCloudRoInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*generalCloudRoInstanceArgs)(nil)).Elem()
}

type GeneralCloudRoInstanceInput interface {
	pulumi.Input

	ToGeneralCloudRoInstanceOutput() GeneralCloudRoInstanceOutput
	ToGeneralCloudRoInstanceOutputWithContext(ctx context.Context) GeneralCloudRoInstanceOutput
}

func (*GeneralCloudRoInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneralCloudRoInstance)(nil)).Elem()
}

func (i *GeneralCloudRoInstance) ToGeneralCloudRoInstanceOutput() GeneralCloudRoInstanceOutput {
	return i.ToGeneralCloudRoInstanceOutputWithContext(context.Background())
}

func (i *GeneralCloudRoInstance) ToGeneralCloudRoInstanceOutputWithContext(ctx context.Context) GeneralCloudRoInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudRoInstanceOutput)
}

// GeneralCloudRoInstanceArrayInput is an input type that accepts GeneralCloudRoInstanceArray and GeneralCloudRoInstanceArrayOutput values.
// You can construct a concrete instance of `GeneralCloudRoInstanceArrayInput` via:
//
//	GeneralCloudRoInstanceArray{ GeneralCloudRoInstanceArgs{...} }
type GeneralCloudRoInstanceArrayInput interface {
	pulumi.Input

	ToGeneralCloudRoInstanceArrayOutput() GeneralCloudRoInstanceArrayOutput
	ToGeneralCloudRoInstanceArrayOutputWithContext(context.Context) GeneralCloudRoInstanceArrayOutput
}

type GeneralCloudRoInstanceArray []GeneralCloudRoInstanceInput

func (GeneralCloudRoInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GeneralCloudRoInstance)(nil)).Elem()
}

func (i GeneralCloudRoInstanceArray) ToGeneralCloudRoInstanceArrayOutput() GeneralCloudRoInstanceArrayOutput {
	return i.ToGeneralCloudRoInstanceArrayOutputWithContext(context.Background())
}

func (i GeneralCloudRoInstanceArray) ToGeneralCloudRoInstanceArrayOutputWithContext(ctx context.Context) GeneralCloudRoInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudRoInstanceArrayOutput)
}

// GeneralCloudRoInstanceMapInput is an input type that accepts GeneralCloudRoInstanceMap and GeneralCloudRoInstanceMapOutput values.
// You can construct a concrete instance of `GeneralCloudRoInstanceMapInput` via:
//
//	GeneralCloudRoInstanceMap{ "key": GeneralCloudRoInstanceArgs{...} }
type GeneralCloudRoInstanceMapInput interface {
	pulumi.Input

	ToGeneralCloudRoInstanceMapOutput() GeneralCloudRoInstanceMapOutput
	ToGeneralCloudRoInstanceMapOutputWithContext(context.Context) GeneralCloudRoInstanceMapOutput
}

type GeneralCloudRoInstanceMap map[string]GeneralCloudRoInstanceInput

func (GeneralCloudRoInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GeneralCloudRoInstance)(nil)).Elem()
}

func (i GeneralCloudRoInstanceMap) ToGeneralCloudRoInstanceMapOutput() GeneralCloudRoInstanceMapOutput {
	return i.ToGeneralCloudRoInstanceMapOutputWithContext(context.Background())
}

func (i GeneralCloudRoInstanceMap) ToGeneralCloudRoInstanceMapOutputWithContext(ctx context.Context) GeneralCloudRoInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneralCloudRoInstanceMapOutput)
}

type GeneralCloudRoInstanceOutput struct{ *pulumi.OutputState }

func (GeneralCloudRoInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneralCloudRoInstance)(nil)).Elem()
}

func (o GeneralCloudRoInstanceOutput) ToGeneralCloudRoInstanceOutput() GeneralCloudRoInstanceOutput {
	return o
}

func (o GeneralCloudRoInstanceOutput) ToGeneralCloudRoInstanceOutputWithContext(ctx context.Context) GeneralCloudRoInstanceOutput {
	return o
}

// System character set collation, default: Chinese_PRC_CI_AS.
func (o GeneralCloudRoInstanceOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringPtrOutput { return v.Collation }).(pulumi.StringPtrOutput)
}

// Number of instance cores.
func (o GeneralCloudRoInstanceOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// Payment mode, the value supports PREPAID (prepaid), POSTPAID (postpaid).
func (o GeneralCloudRoInstanceOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringPtrOutput { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// Primary instance ID, in the format: mssql-3l3fgqn7.
func (o GeneralCloudRoInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The host disk type of the purchased instance, CLOUD_HSSD-enhanced SSD cloud disk for virtual machines, CLOUD_TSSD-extremely fast SSD cloud disk for virtual machines, CLOUD_BSSD-universal SSD cloud disk for virtual machines.
func (o GeneralCloudRoInstanceOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringOutput { return v.MachineType }).(pulumi.StringOutput)
}

// Instance memory size, in GB.
func (o GeneralCloudRoInstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Purchase instance period, the default value is 1, which means one month. The value cannot exceed 48.
func (o GeneralCloudRoInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Required when ReadOnlyGroupType=3, existing read-only group ID.
func (o GeneralCloudRoInstanceOutput) ReadOnlyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringOutput { return v.ReadOnlyGroupId }).(pulumi.StringOutput)
}

// Required when ReadOnlyGroupType=2, whether to enable the delayed elimination function for the newly created read-only group, 1-on, 0-off. When the delay between the read-only replica and the primary instance is greater than the threshold, it will be automatically removed.
func (o GeneralCloudRoInstanceOutput) ReadOnlyGroupIsOfflineDelay() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.ReadOnlyGroupIsOfflineDelay }).(pulumi.IntOutput)
}

// Mandatory when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the threshold for delay culling of newly created read-only groups.
func (o GeneralCloudRoInstanceOutput) ReadOnlyGroupMaxDelayTime() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.ReadOnlyGroupMaxDelayTime }).(pulumi.IntOutput)
}

// Required when ReadOnlyGroupType=2 and ReadOnlyGroupIsOfflineDelay=1, the newly created read-only group retains at least the number of read-only replicas after delay elimination.
func (o GeneralCloudRoInstanceOutput) ReadOnlyGroupMinInGroup() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.ReadOnlyGroupMinInGroup }).(pulumi.IntOutput)
}

// Required when ReadOnlyGroupType=2, the name of the newly created read-only group.
func (o GeneralCloudRoInstanceOutput) ReadOnlyGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringOutput { return v.ReadOnlyGroupName }).(pulumi.StringOutput)
}

// Read-only group type option, 1- Ship according to one instance and one read-only group, 2 - Ship after creating a read-only group, all instances are under this read-only group, 3 - All instances shipped are in the existing Some read-only groups below.
func (o GeneralCloudRoInstanceOutput) ReadOnlyGroupType() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.ReadOnlyGroupType }).(pulumi.IntOutput)
}

// Tag description list.
func (o GeneralCloudRoInstanceOutput) ResourceTags() pulumi.MapOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.MapOutput { return v.ResourceTags }).(pulumi.MapOutput)
}

// Primary read only instance ID, in the format: mssqlro-lbljc5qd.
func (o GeneralCloudRoInstanceOutput) RoInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringOutput { return v.RoInstanceId }).(pulumi.StringOutput)
}

// Security group list, fill in the security group ID in the form of sg-xxx.
func (o GeneralCloudRoInstanceOutput) SecurityGroupLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringArrayOutput { return v.SecurityGroupLists }).(pulumi.StringArrayOutput)
}

// Instance disk size, in GB.
func (o GeneralCloudRoInstanceOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.IntOutput { return v.Storage }).(pulumi.IntOutput)
}

// VPC subnet ID, in the form of subnet-bdoe83fa; SubnetId and VpcId need to be set at the same time or not set at the same time.
func (o GeneralCloudRoInstanceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// System time zone, default: China Standard Time.
func (o GeneralCloudRoInstanceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// VPC network ID, in the form of vpc-dsp338hz; SubnetId and VpcId need to be set at the same time or not set at the same time.
func (o GeneralCloudRoInstanceOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

// Instance Availability Zone, similar to ap-guangzhou-1 (Guangzhou District 1); the instance sales area can be obtained through the interface DescribeZones.
func (o GeneralCloudRoInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *GeneralCloudRoInstance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type GeneralCloudRoInstanceArrayOutput struct{ *pulumi.OutputState }

func (GeneralCloudRoInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GeneralCloudRoInstance)(nil)).Elem()
}

func (o GeneralCloudRoInstanceArrayOutput) ToGeneralCloudRoInstanceArrayOutput() GeneralCloudRoInstanceArrayOutput {
	return o
}

func (o GeneralCloudRoInstanceArrayOutput) ToGeneralCloudRoInstanceArrayOutputWithContext(ctx context.Context) GeneralCloudRoInstanceArrayOutput {
	return o
}

func (o GeneralCloudRoInstanceArrayOutput) Index(i pulumi.IntInput) GeneralCloudRoInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GeneralCloudRoInstance {
		return vs[0].([]*GeneralCloudRoInstance)[vs[1].(int)]
	}).(GeneralCloudRoInstanceOutput)
}

type GeneralCloudRoInstanceMapOutput struct{ *pulumi.OutputState }

func (GeneralCloudRoInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GeneralCloudRoInstance)(nil)).Elem()
}

func (o GeneralCloudRoInstanceMapOutput) ToGeneralCloudRoInstanceMapOutput() GeneralCloudRoInstanceMapOutput {
	return o
}

func (o GeneralCloudRoInstanceMapOutput) ToGeneralCloudRoInstanceMapOutputWithContext(ctx context.Context) GeneralCloudRoInstanceMapOutput {
	return o
}

func (o GeneralCloudRoInstanceMapOutput) MapIndex(k pulumi.StringInput) GeneralCloudRoInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GeneralCloudRoInstance {
		return vs[0].(map[string]*GeneralCloudRoInstance)[vs[1].(string)]
	}).(GeneralCloudRoInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudRoInstanceInput)(nil)).Elem(), &GeneralCloudRoInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudRoInstanceArrayInput)(nil)).Elem(), GeneralCloudRoInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneralCloudRoInstanceMapInput)(nil)).Elem(), GeneralCloudRoInstanceMap{})
	pulumi.RegisterOutputType(GeneralCloudRoInstanceOutput{})
	pulumi.RegisterOutputType(GeneralCloudRoInstanceArrayOutput{})
	pulumi.RegisterOutputType(GeneralCloudRoInstanceMapOutput{})
}
