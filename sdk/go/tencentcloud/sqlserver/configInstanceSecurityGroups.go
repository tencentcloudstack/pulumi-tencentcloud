// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a sqlserver configInstanceSecurityGroups
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Sqlserver.NewConfigInstanceSecurityGroups(ctx, "configInstanceSecurityGroups", &Sqlserver.ConfigInstanceSecurityGroupsArgs{
//				InstanceId: pulumi.String("mssql-qelbzgwf"),
//				SecurityGroupIdSets: pulumi.StringArray{
//					pulumi.String("sg-mayqdlt1"),
//					pulumi.String("sg-5aubsf8n"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// sqlserver config_instance_security_groups can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Sqlserver/configInstanceSecurityGroups:ConfigInstanceSecurityGroups config_instance_security_groups config_instance_security_groups_id
//
// ```
type ConfigInstanceSecurityGroups struct {
	pulumi.CustomResourceState

	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// A list of security group IDs to modify, an array of one or more security group IDs.
	SecurityGroupIdSets pulumi.StringArrayOutput `pulumi:"securityGroupIdSets"`
}

// NewConfigInstanceSecurityGroups registers a new resource with the given unique name, arguments, and options.
func NewConfigInstanceSecurityGroups(ctx *pulumi.Context,
	name string, args *ConfigInstanceSecurityGroupsArgs, opts ...pulumi.ResourceOption) (*ConfigInstanceSecurityGroups, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.SecurityGroupIdSets == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIdSets'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConfigInstanceSecurityGroups
	err := ctx.RegisterResource("tencentcloud:Sqlserver/configInstanceSecurityGroups:ConfigInstanceSecurityGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigInstanceSecurityGroups gets an existing ConfigInstanceSecurityGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigInstanceSecurityGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigInstanceSecurityGroupsState, opts ...pulumi.ResourceOption) (*ConfigInstanceSecurityGroups, error) {
	var resource ConfigInstanceSecurityGroups
	err := ctx.ReadResource("tencentcloud:Sqlserver/configInstanceSecurityGroups:ConfigInstanceSecurityGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigInstanceSecurityGroups resources.
type configInstanceSecurityGroupsState struct {
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// A list of security group IDs to modify, an array of one or more security group IDs.
	SecurityGroupIdSets []string `pulumi:"securityGroupIdSets"`
}

type ConfigInstanceSecurityGroupsState struct {
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// A list of security group IDs to modify, an array of one or more security group IDs.
	SecurityGroupIdSets pulumi.StringArrayInput
}

func (ConfigInstanceSecurityGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*configInstanceSecurityGroupsState)(nil)).Elem()
}

type configInstanceSecurityGroupsArgs struct {
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// A list of security group IDs to modify, an array of one or more security group IDs.
	SecurityGroupIdSets []string `pulumi:"securityGroupIdSets"`
}

// The set of arguments for constructing a ConfigInstanceSecurityGroups resource.
type ConfigInstanceSecurityGroupsArgs struct {
	// Instance ID.
	InstanceId pulumi.StringInput
	// A list of security group IDs to modify, an array of one or more security group IDs.
	SecurityGroupIdSets pulumi.StringArrayInput
}

func (ConfigInstanceSecurityGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configInstanceSecurityGroupsArgs)(nil)).Elem()
}

type ConfigInstanceSecurityGroupsInput interface {
	pulumi.Input

	ToConfigInstanceSecurityGroupsOutput() ConfigInstanceSecurityGroupsOutput
	ToConfigInstanceSecurityGroupsOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsOutput
}

func (*ConfigInstanceSecurityGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigInstanceSecurityGroups)(nil)).Elem()
}

func (i *ConfigInstanceSecurityGroups) ToConfigInstanceSecurityGroupsOutput() ConfigInstanceSecurityGroupsOutput {
	return i.ToConfigInstanceSecurityGroupsOutputWithContext(context.Background())
}

func (i *ConfigInstanceSecurityGroups) ToConfigInstanceSecurityGroupsOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceSecurityGroupsOutput)
}

// ConfigInstanceSecurityGroupsArrayInput is an input type that accepts ConfigInstanceSecurityGroupsArray and ConfigInstanceSecurityGroupsArrayOutput values.
// You can construct a concrete instance of `ConfigInstanceSecurityGroupsArrayInput` via:
//
//	ConfigInstanceSecurityGroupsArray{ ConfigInstanceSecurityGroupsArgs{...} }
type ConfigInstanceSecurityGroupsArrayInput interface {
	pulumi.Input

	ToConfigInstanceSecurityGroupsArrayOutput() ConfigInstanceSecurityGroupsArrayOutput
	ToConfigInstanceSecurityGroupsArrayOutputWithContext(context.Context) ConfigInstanceSecurityGroupsArrayOutput
}

type ConfigInstanceSecurityGroupsArray []ConfigInstanceSecurityGroupsInput

func (ConfigInstanceSecurityGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigInstanceSecurityGroups)(nil)).Elem()
}

func (i ConfigInstanceSecurityGroupsArray) ToConfigInstanceSecurityGroupsArrayOutput() ConfigInstanceSecurityGroupsArrayOutput {
	return i.ToConfigInstanceSecurityGroupsArrayOutputWithContext(context.Background())
}

func (i ConfigInstanceSecurityGroupsArray) ToConfigInstanceSecurityGroupsArrayOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceSecurityGroupsArrayOutput)
}

// ConfigInstanceSecurityGroupsMapInput is an input type that accepts ConfigInstanceSecurityGroupsMap and ConfigInstanceSecurityGroupsMapOutput values.
// You can construct a concrete instance of `ConfigInstanceSecurityGroupsMapInput` via:
//
//	ConfigInstanceSecurityGroupsMap{ "key": ConfigInstanceSecurityGroupsArgs{...} }
type ConfigInstanceSecurityGroupsMapInput interface {
	pulumi.Input

	ToConfigInstanceSecurityGroupsMapOutput() ConfigInstanceSecurityGroupsMapOutput
	ToConfigInstanceSecurityGroupsMapOutputWithContext(context.Context) ConfigInstanceSecurityGroupsMapOutput
}

type ConfigInstanceSecurityGroupsMap map[string]ConfigInstanceSecurityGroupsInput

func (ConfigInstanceSecurityGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigInstanceSecurityGroups)(nil)).Elem()
}

func (i ConfigInstanceSecurityGroupsMap) ToConfigInstanceSecurityGroupsMapOutput() ConfigInstanceSecurityGroupsMapOutput {
	return i.ToConfigInstanceSecurityGroupsMapOutputWithContext(context.Background())
}

func (i ConfigInstanceSecurityGroupsMap) ToConfigInstanceSecurityGroupsMapOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceSecurityGroupsMapOutput)
}

type ConfigInstanceSecurityGroupsOutput struct{ *pulumi.OutputState }

func (ConfigInstanceSecurityGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigInstanceSecurityGroups)(nil)).Elem()
}

func (o ConfigInstanceSecurityGroupsOutput) ToConfigInstanceSecurityGroupsOutput() ConfigInstanceSecurityGroupsOutput {
	return o
}

func (o ConfigInstanceSecurityGroupsOutput) ToConfigInstanceSecurityGroupsOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsOutput {
	return o
}

// Instance ID.
func (o ConfigInstanceSecurityGroupsOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigInstanceSecurityGroups) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// A list of security group IDs to modify, an array of one or more security group IDs.
func (o ConfigInstanceSecurityGroupsOutput) SecurityGroupIdSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigInstanceSecurityGroups) pulumi.StringArrayOutput { return v.SecurityGroupIdSets }).(pulumi.StringArrayOutput)
}

type ConfigInstanceSecurityGroupsArrayOutput struct{ *pulumi.OutputState }

func (ConfigInstanceSecurityGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigInstanceSecurityGroups)(nil)).Elem()
}

func (o ConfigInstanceSecurityGroupsArrayOutput) ToConfigInstanceSecurityGroupsArrayOutput() ConfigInstanceSecurityGroupsArrayOutput {
	return o
}

func (o ConfigInstanceSecurityGroupsArrayOutput) ToConfigInstanceSecurityGroupsArrayOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsArrayOutput {
	return o
}

func (o ConfigInstanceSecurityGroupsArrayOutput) Index(i pulumi.IntInput) ConfigInstanceSecurityGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigInstanceSecurityGroups {
		return vs[0].([]*ConfigInstanceSecurityGroups)[vs[1].(int)]
	}).(ConfigInstanceSecurityGroupsOutput)
}

type ConfigInstanceSecurityGroupsMapOutput struct{ *pulumi.OutputState }

func (ConfigInstanceSecurityGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigInstanceSecurityGroups)(nil)).Elem()
}

func (o ConfigInstanceSecurityGroupsMapOutput) ToConfigInstanceSecurityGroupsMapOutput() ConfigInstanceSecurityGroupsMapOutput {
	return o
}

func (o ConfigInstanceSecurityGroupsMapOutput) ToConfigInstanceSecurityGroupsMapOutputWithContext(ctx context.Context) ConfigInstanceSecurityGroupsMapOutput {
	return o
}

func (o ConfigInstanceSecurityGroupsMapOutput) MapIndex(k pulumi.StringInput) ConfigInstanceSecurityGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigInstanceSecurityGroups {
		return vs[0].(map[string]*ConfigInstanceSecurityGroups)[vs[1].(string)]
	}).(ConfigInstanceSecurityGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceSecurityGroupsInput)(nil)).Elem(), &ConfigInstanceSecurityGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceSecurityGroupsArrayInput)(nil)).Elem(), ConfigInstanceSecurityGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceSecurityGroupsMapInput)(nil)).Elem(), ConfigInstanceSecurityGroupsMap{})
	pulumi.RegisterOutputType(ConfigInstanceSecurityGroupsOutput{})
	pulumi.RegisterOutputType(ConfigInstanceSecurityGroupsArrayOutput{})
	pulumi.RegisterOutputType(ConfigInstanceSecurityGroupsMapOutput{})
}
