// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a sqlserver configInstanceRoGroup
//
// ## Import
//
// sqlserver config_instance_ro_group can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Sqlserver/configInstanceRoGroup:ConfigInstanceRoGroup example mssql-ds1xhnt9#mssqlro-o6dv2ugx#0#0
//
// ```
type ConfigInstanceRoGroup struct {
	pulumi.CustomResourceState

	// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is invalid), the default is 0.
	AutoWeight pulumi.IntPtrOutput `pulumi:"autoWeight"`
	// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
	BalanceWeight pulumi.IntPtrOutput `pulumi:"balanceWeight"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
	IsOfflineDelay pulumi.IntPtrOutput `pulumi:"isOfflineDelay"`
	// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least, if this parameter is not filled, it will not be modified.
	MinReadOnlyInGroup pulumi.IntPtrOutput `pulumi:"minReadOnlyInGroup"`
	// Read-only group ID.
	ReadOnlyGroupId pulumi.StringOutput `pulumi:"readOnlyGroupId"`
	// Read-only group name. If this parameter is not specified, it is not modified.
	ReadOnlyGroupName pulumi.StringPtrOutput `pulumi:"readOnlyGroupName"`
	// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will not be modified.
	ReadOnlyMaxDelayTime pulumi.IntPtrOutput `pulumi:"readOnlyMaxDelayTime"`
	// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
	WeightPairs ConfigInstanceRoGroupWeightPairArrayOutput `pulumi:"weightPairs"`
}

// NewConfigInstanceRoGroup registers a new resource with the given unique name, arguments, and options.
func NewConfigInstanceRoGroup(ctx *pulumi.Context,
	name string, args *ConfigInstanceRoGroupArgs, opts ...pulumi.ResourceOption) (*ConfigInstanceRoGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.ReadOnlyGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ReadOnlyGroupId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConfigInstanceRoGroup
	err := ctx.RegisterResource("tencentcloud:Sqlserver/configInstanceRoGroup:ConfigInstanceRoGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigInstanceRoGroup gets an existing ConfigInstanceRoGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigInstanceRoGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigInstanceRoGroupState, opts ...pulumi.ResourceOption) (*ConfigInstanceRoGroup, error) {
	var resource ConfigInstanceRoGroup
	err := ctx.ReadResource("tencentcloud:Sqlserver/configInstanceRoGroup:ConfigInstanceRoGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigInstanceRoGroup resources.
type configInstanceRoGroupState struct {
	// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is invalid), the default is 0.
	AutoWeight *int `pulumi:"autoWeight"`
	// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
	BalanceWeight *int `pulumi:"balanceWeight"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
	IsOfflineDelay *int `pulumi:"isOfflineDelay"`
	// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least, if this parameter is not filled, it will not be modified.
	MinReadOnlyInGroup *int `pulumi:"minReadOnlyInGroup"`
	// Read-only group ID.
	ReadOnlyGroupId *string `pulumi:"readOnlyGroupId"`
	// Read-only group name. If this parameter is not specified, it is not modified.
	ReadOnlyGroupName *string `pulumi:"readOnlyGroupName"`
	// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will not be modified.
	ReadOnlyMaxDelayTime *int `pulumi:"readOnlyMaxDelayTime"`
	// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
	WeightPairs []ConfigInstanceRoGroupWeightPair `pulumi:"weightPairs"`
}

type ConfigInstanceRoGroupState struct {
	// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is invalid), the default is 0.
	AutoWeight pulumi.IntPtrInput
	// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
	BalanceWeight pulumi.IntPtrInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
	IsOfflineDelay pulumi.IntPtrInput
	// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least, if this parameter is not filled, it will not be modified.
	MinReadOnlyInGroup pulumi.IntPtrInput
	// Read-only group ID.
	ReadOnlyGroupId pulumi.StringPtrInput
	// Read-only group name. If this parameter is not specified, it is not modified.
	ReadOnlyGroupName pulumi.StringPtrInput
	// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will not be modified.
	ReadOnlyMaxDelayTime pulumi.IntPtrInput
	// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
	WeightPairs ConfigInstanceRoGroupWeightPairArrayInput
}

func (ConfigInstanceRoGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*configInstanceRoGroupState)(nil)).Elem()
}

type configInstanceRoGroupArgs struct {
	// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is invalid), the default is 0.
	AutoWeight *int `pulumi:"autoWeight"`
	// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
	BalanceWeight *int `pulumi:"balanceWeight"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
	IsOfflineDelay *int `pulumi:"isOfflineDelay"`
	// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least, if this parameter is not filled, it will not be modified.
	MinReadOnlyInGroup *int `pulumi:"minReadOnlyInGroup"`
	// Read-only group ID.
	ReadOnlyGroupId string `pulumi:"readOnlyGroupId"`
	// Read-only group name. If this parameter is not specified, it is not modified.
	ReadOnlyGroupName *string `pulumi:"readOnlyGroupName"`
	// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will not be modified.
	ReadOnlyMaxDelayTime *int `pulumi:"readOnlyMaxDelayTime"`
	// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
	WeightPairs []ConfigInstanceRoGroupWeightPair `pulumi:"weightPairs"`
}

// The set of arguments for constructing a ConfigInstanceRoGroup resource.
type ConfigInstanceRoGroupArgs struct {
	// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is invalid), the default is 0.
	AutoWeight pulumi.IntPtrInput
	// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
	BalanceWeight pulumi.IntPtrInput
	// Instance ID.
	InstanceId pulumi.StringInput
	// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
	IsOfflineDelay pulumi.IntPtrInput
	// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least, if this parameter is not filled, it will not be modified.
	MinReadOnlyInGroup pulumi.IntPtrInput
	// Read-only group ID.
	ReadOnlyGroupId pulumi.StringInput
	// Read-only group name. If this parameter is not specified, it is not modified.
	ReadOnlyGroupName pulumi.StringPtrInput
	// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will not be modified.
	ReadOnlyMaxDelayTime pulumi.IntPtrInput
	// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
	WeightPairs ConfigInstanceRoGroupWeightPairArrayInput
}

func (ConfigInstanceRoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configInstanceRoGroupArgs)(nil)).Elem()
}

type ConfigInstanceRoGroupInput interface {
	pulumi.Input

	ToConfigInstanceRoGroupOutput() ConfigInstanceRoGroupOutput
	ToConfigInstanceRoGroupOutputWithContext(ctx context.Context) ConfigInstanceRoGroupOutput
}

func (*ConfigInstanceRoGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigInstanceRoGroup)(nil)).Elem()
}

func (i *ConfigInstanceRoGroup) ToConfigInstanceRoGroupOutput() ConfigInstanceRoGroupOutput {
	return i.ToConfigInstanceRoGroupOutputWithContext(context.Background())
}

func (i *ConfigInstanceRoGroup) ToConfigInstanceRoGroupOutputWithContext(ctx context.Context) ConfigInstanceRoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceRoGroupOutput)
}

// ConfigInstanceRoGroupArrayInput is an input type that accepts ConfigInstanceRoGroupArray and ConfigInstanceRoGroupArrayOutput values.
// You can construct a concrete instance of `ConfigInstanceRoGroupArrayInput` via:
//
//	ConfigInstanceRoGroupArray{ ConfigInstanceRoGroupArgs{...} }
type ConfigInstanceRoGroupArrayInput interface {
	pulumi.Input

	ToConfigInstanceRoGroupArrayOutput() ConfigInstanceRoGroupArrayOutput
	ToConfigInstanceRoGroupArrayOutputWithContext(context.Context) ConfigInstanceRoGroupArrayOutput
}

type ConfigInstanceRoGroupArray []ConfigInstanceRoGroupInput

func (ConfigInstanceRoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigInstanceRoGroup)(nil)).Elem()
}

func (i ConfigInstanceRoGroupArray) ToConfigInstanceRoGroupArrayOutput() ConfigInstanceRoGroupArrayOutput {
	return i.ToConfigInstanceRoGroupArrayOutputWithContext(context.Background())
}

func (i ConfigInstanceRoGroupArray) ToConfigInstanceRoGroupArrayOutputWithContext(ctx context.Context) ConfigInstanceRoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceRoGroupArrayOutput)
}

// ConfigInstanceRoGroupMapInput is an input type that accepts ConfigInstanceRoGroupMap and ConfigInstanceRoGroupMapOutput values.
// You can construct a concrete instance of `ConfigInstanceRoGroupMapInput` via:
//
//	ConfigInstanceRoGroupMap{ "key": ConfigInstanceRoGroupArgs{...} }
type ConfigInstanceRoGroupMapInput interface {
	pulumi.Input

	ToConfigInstanceRoGroupMapOutput() ConfigInstanceRoGroupMapOutput
	ToConfigInstanceRoGroupMapOutputWithContext(context.Context) ConfigInstanceRoGroupMapOutput
}

type ConfigInstanceRoGroupMap map[string]ConfigInstanceRoGroupInput

func (ConfigInstanceRoGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigInstanceRoGroup)(nil)).Elem()
}

func (i ConfigInstanceRoGroupMap) ToConfigInstanceRoGroupMapOutput() ConfigInstanceRoGroupMapOutput {
	return i.ToConfigInstanceRoGroupMapOutputWithContext(context.Background())
}

func (i ConfigInstanceRoGroupMap) ToConfigInstanceRoGroupMapOutputWithContext(ctx context.Context) ConfigInstanceRoGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInstanceRoGroupMapOutput)
}

type ConfigInstanceRoGroupOutput struct{ *pulumi.OutputState }

func (ConfigInstanceRoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigInstanceRoGroup)(nil)).Elem()
}

func (o ConfigInstanceRoGroupOutput) ToConfigInstanceRoGroupOutput() ConfigInstanceRoGroupOutput {
	return o
}

func (o ConfigInstanceRoGroupOutput) ToConfigInstanceRoGroupOutputWithContext(ctx context.Context) ConfigInstanceRoGroupOutput {
	return o
}

// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is invalid), the default is 0.
func (o ConfigInstanceRoGroupOutput) AutoWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.IntPtrOutput { return v.AutoWeight }).(pulumi.IntPtrOutput)
}

// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
func (o ConfigInstanceRoGroupOutput) BalanceWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.IntPtrOutput { return v.BalanceWeight }).(pulumi.IntPtrOutput)
}

// Instance ID.
func (o ConfigInstanceRoGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
func (o ConfigInstanceRoGroupOutput) IsOfflineDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.IntPtrOutput { return v.IsOfflineDelay }).(pulumi.IntPtrOutput)
}

// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least, if this parameter is not filled, it will not be modified.
func (o ConfigInstanceRoGroupOutput) MinReadOnlyInGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.IntPtrOutput { return v.MinReadOnlyInGroup }).(pulumi.IntPtrOutput)
}

// Read-only group ID.
func (o ConfigInstanceRoGroupOutput) ReadOnlyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.StringOutput { return v.ReadOnlyGroupId }).(pulumi.StringOutput)
}

// Read-only group name. If this parameter is not specified, it is not modified.
func (o ConfigInstanceRoGroupOutput) ReadOnlyGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.StringPtrOutput { return v.ReadOnlyGroupName }).(pulumi.StringPtrOutput)
}

// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will not be modified.
func (o ConfigInstanceRoGroupOutput) ReadOnlyMaxDelayTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) pulumi.IntPtrOutput { return v.ReadOnlyMaxDelayTime }).(pulumi.IntPtrOutput)
}

// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
func (o ConfigInstanceRoGroupOutput) WeightPairs() ConfigInstanceRoGroupWeightPairArrayOutput {
	return o.ApplyT(func(v *ConfigInstanceRoGroup) ConfigInstanceRoGroupWeightPairArrayOutput { return v.WeightPairs }).(ConfigInstanceRoGroupWeightPairArrayOutput)
}

type ConfigInstanceRoGroupArrayOutput struct{ *pulumi.OutputState }

func (ConfigInstanceRoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigInstanceRoGroup)(nil)).Elem()
}

func (o ConfigInstanceRoGroupArrayOutput) ToConfigInstanceRoGroupArrayOutput() ConfigInstanceRoGroupArrayOutput {
	return o
}

func (o ConfigInstanceRoGroupArrayOutput) ToConfigInstanceRoGroupArrayOutputWithContext(ctx context.Context) ConfigInstanceRoGroupArrayOutput {
	return o
}

func (o ConfigInstanceRoGroupArrayOutput) Index(i pulumi.IntInput) ConfigInstanceRoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigInstanceRoGroup {
		return vs[0].([]*ConfigInstanceRoGroup)[vs[1].(int)]
	}).(ConfigInstanceRoGroupOutput)
}

type ConfigInstanceRoGroupMapOutput struct{ *pulumi.OutputState }

func (ConfigInstanceRoGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigInstanceRoGroup)(nil)).Elem()
}

func (o ConfigInstanceRoGroupMapOutput) ToConfigInstanceRoGroupMapOutput() ConfigInstanceRoGroupMapOutput {
	return o
}

func (o ConfigInstanceRoGroupMapOutput) ToConfigInstanceRoGroupMapOutputWithContext(ctx context.Context) ConfigInstanceRoGroupMapOutput {
	return o
}

func (o ConfigInstanceRoGroupMapOutput) MapIndex(k pulumi.StringInput) ConfigInstanceRoGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigInstanceRoGroup {
		return vs[0].(map[string]*ConfigInstanceRoGroup)[vs[1].(string)]
	}).(ConfigInstanceRoGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceRoGroupInput)(nil)).Elem(), &ConfigInstanceRoGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceRoGroupArrayInput)(nil)).Elem(), ConfigInstanceRoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInstanceRoGroupMapInput)(nil)).Elem(), ConfigInstanceRoGroupMap{})
	pulumi.RegisterOutputType(ConfigInstanceRoGroupOutput{})
	pulumi.RegisterOutputType(ConfigInstanceRoGroupArrayOutput{})
	pulumi.RegisterOutputType(ConfigInstanceRoGroupMapOutput{})
}
