// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of sqlserver datasourceBackupByFlowId
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Sqlserver"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "sqlserver",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(zones.Zones[4].Name),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			securityGroup, err := Security.NewGroup(ctx, "securityGroup", &Security.GroupArgs{
//				Description: pulumi.String("desc."),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBasicInstance, err := Sqlserver.NewBasicInstance(ctx, "exampleBasicInstance", &Sqlserver.BasicInstanceArgs{
//				AvailabilityZone: pulumi.String(zones.Zones[4].Name),
//				ChargeType:       pulumi.String("POSTPAID_BY_HOUR"),
//				VpcId:            vpc.ID(),
//				SubnetId:         subnet.ID(),
//				ProjectId:        pulumi.Int(0),
//				Memory:           pulumi.Int(4),
//				Storage:          pulumi.Int(100),
//				Cpu:              pulumi.Int(2),
//				MachineType:      pulumi.String("CLOUD_PREMIUM"),
//				MaintenanceWeekSets: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//				},
//				MaintenanceStartTime: pulumi.String("09:00"),
//				MaintenanceTimeSpan:  pulumi.Int(3),
//				SecurityGroups: pulumi.StringArray{
//					securityGroup.ID(),
//				},
//				Tags: pulumi.AnyMap{
//					"test": pulumi.Any("test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleDb, err := Sqlserver.NewDb(ctx, "exampleDb", &Sqlserver.DbArgs{
//				InstanceId: exampleBasicInstance.ID(),
//				Charset:    pulumi.String("Chinese_PRC_BIN"),
//				Remark:     pulumi.String("test-remark"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleGeneralBackup, err := Sqlserver.NewGeneralBackup(ctx, "exampleGeneralBackup", &Sqlserver.GeneralBackupArgs{
//				InstanceId: exampleDb.ID(),
//				BackupName: pulumi.String("tf_example_backup"),
//				Strategy:   pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			_ = Sqlserver.GetBackupByFlowIdOutput(ctx, sqlserver.GetBackupByFlowIdOutputArgs{
//				InstanceId: exampleGeneralBackup.InstanceId,
//				FlowId:     exampleGeneralBackup.FlowId,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetBackupByFlowId(ctx *pulumi.Context, args *GetBackupByFlowIdArgs, opts ...pulumi.InvokeOption) (*GetBackupByFlowIdResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetBackupByFlowIdResult
	err := ctx.Invoke("tencentcloud:Sqlserver/getBackupByFlowId:getBackupByFlowId", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupByFlowId.
type GetBackupByFlowIdArgs struct {
	// Create a backup process ID, which can be obtained through the [CreateBackup](https://cloud.tencent.com/document/product/238/19946) interface.
	FlowId string `pulumi:"flowId"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getBackupByFlowId.
type GetBackupByFlowIdResult struct {
	// Backup task name, customizable.
	BackupName string `pulumi:"backupName"`
	// Backup method, 0-scheduled backup; 1-manual temporary backup; instance status is 0-creating, this field is the default value 0, meaningless.
	BackupWay int `pulumi:"backupWay"`
	// For the DB list, only the library name contained in the first record is returned for a single-database backup file; for a single-database backup file, the library names of all records need to be obtained through the DescribeBackupFiles interface.
	Dbs []string `pulumi:"dbs"`
	// backup end time.
	EndTime string `pulumi:"endTime"`
	// External network download address, for a single database backup file, only the external network download address of the first record is returned; single database backup files need to obtain the download addresses of all records through the DescribeBackupFiles interface.
	ExternalAddr string `pulumi:"externalAddr"`
	// File name. For a single-database backup file, only the file name of the first record is returned; for a single-database backup file, the file names of all records need to be obtained through the DescribeBackupFiles interface.
	FileName string `pulumi:"fileName"`
	FlowId   string `pulumi:"flowId"`
	// Aggregate Id, this value is not returned for packaged backup files. Use this value to call the DescribeBackupFiles interface to obtain the detailed information of a single database backup file.
	GroupId string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Intranet download address, for a single database backup file, only the intranet download address of the first record is returned; single database backup files need to obtain the download addresses of all records through the DescribeBackupFiles interface.
	InternalAddr     string  `pulumi:"internalAddr"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// backup start time.
	StartTime string `pulumi:"startTime"`
	// Backup file status, 0-creating; 1-success; 2-failure.
	Status int `pulumi:"status"`
	// Backup strategy, 0-instance backup; 1-multi-database backup; when the instance status is 0-creating, this field is the default value 0, meaningless.
	Strategy int `pulumi:"strategy"`
}

func GetBackupByFlowIdOutput(ctx *pulumi.Context, args GetBackupByFlowIdOutputArgs, opts ...pulumi.InvokeOption) GetBackupByFlowIdResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBackupByFlowIdResult, error) {
			args := v.(GetBackupByFlowIdArgs)
			r, err := GetBackupByFlowId(ctx, &args, opts...)
			var s GetBackupByFlowIdResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBackupByFlowIdResultOutput)
}

// A collection of arguments for invoking getBackupByFlowId.
type GetBackupByFlowIdOutputArgs struct {
	// Create a backup process ID, which can be obtained through the [CreateBackup](https://cloud.tencent.com/document/product/238/19946) interface.
	FlowId pulumi.StringInput `pulumi:"flowId"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetBackupByFlowIdOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupByFlowIdArgs)(nil)).Elem()
}

// A collection of values returned by getBackupByFlowId.
type GetBackupByFlowIdResultOutput struct{ *pulumi.OutputState }

func (GetBackupByFlowIdResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupByFlowIdResult)(nil)).Elem()
}

func (o GetBackupByFlowIdResultOutput) ToGetBackupByFlowIdResultOutput() GetBackupByFlowIdResultOutput {
	return o
}

func (o GetBackupByFlowIdResultOutput) ToGetBackupByFlowIdResultOutputWithContext(ctx context.Context) GetBackupByFlowIdResultOutput {
	return o
}

// Backup task name, customizable.
func (o GetBackupByFlowIdResultOutput) BackupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.BackupName }).(pulumi.StringOutput)
}

// Backup method, 0-scheduled backup; 1-manual temporary backup; instance status is 0-creating, this field is the default value 0, meaningless.
func (o GetBackupByFlowIdResultOutput) BackupWay() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) int { return v.BackupWay }).(pulumi.IntOutput)
}

// For the DB list, only the library name contained in the first record is returned for a single-database backup file; for a single-database backup file, the library names of all records need to be obtained through the DescribeBackupFiles interface.
func (o GetBackupByFlowIdResultOutput) Dbs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) []string { return v.Dbs }).(pulumi.StringArrayOutput)
}

// backup end time.
func (o GetBackupByFlowIdResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// External network download address, for a single database backup file, only the external network download address of the first record is returned; single database backup files need to obtain the download addresses of all records through the DescribeBackupFiles interface.
func (o GetBackupByFlowIdResultOutput) ExternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.ExternalAddr }).(pulumi.StringOutput)
}

// File name. For a single-database backup file, only the file name of the first record is returned; for a single-database backup file, the file names of all records need to be obtained through the DescribeBackupFiles interface.
func (o GetBackupByFlowIdResultOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.FileName }).(pulumi.StringOutput)
}

func (o GetBackupByFlowIdResultOutput) FlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.FlowId }).(pulumi.StringOutput)
}

// Aggregate Id, this value is not returned for packaged backup files. Use this value to call the DescribeBackupFiles interface to obtain the detailed information of a single database backup file.
func (o GetBackupByFlowIdResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBackupByFlowIdResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBackupByFlowIdResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Intranet download address, for a single database backup file, only the intranet download address of the first record is returned; single database backup files need to obtain the download addresses of all records through the DescribeBackupFiles interface.
func (o GetBackupByFlowIdResultOutput) InternalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.InternalAddr }).(pulumi.StringOutput)
}

func (o GetBackupByFlowIdResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// backup start time.
func (o GetBackupByFlowIdResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// Backup file status, 0-creating; 1-success; 2-failure.
func (o GetBackupByFlowIdResultOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) int { return v.Status }).(pulumi.IntOutput)
}

// Backup strategy, 0-instance backup; 1-multi-database backup; when the instance status is 0-creating, this field is the default value 0, meaningless.
func (o GetBackupByFlowIdResultOutput) Strategy() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupByFlowIdResult) int { return v.Strategy }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackupByFlowIdResultOutput{})
}
