// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tdcpg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of tdcpg clusters.
//
// > **NOTE:** This data source is still in internal testing. To experience its functions, you need to apply for a whitelist from Tencent Cloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tdcpg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tdcpg"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tdcpg.GetClusters(ctx, &tdcpg.GetClustersArgs{
//				ClusterId:   pulumi.StringRef(""),
//				ClusterName: pulumi.StringRef(""),
//				PayMode:     pulumi.StringRef(""),
//				ProjectId:   pulumi.IntRef(""),
//				Status:      pulumi.StringRef(""),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClusters(ctx *pulumi.Context, args *GetClustersArgs, opts ...pulumi.InvokeOption) (*GetClustersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetClustersResult
	err := ctx.Invoke("tencentcloud:Tdcpg/getClusters:getClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusters.
type GetClustersArgs struct {
	// cluster id.
	ClusterId *string `pulumi:"clusterId"`
	// cluster name.
	ClusterName *string `pulumi:"clusterName"`
	// pay mode.
	PayMode *string `pulumi:"payMode"`
	// project id, default to 0, means default project.
	ProjectId *int `pulumi:"projectId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// cluster status.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getClusters.
type GetClustersResult struct {
	// cluster id.
	ClusterId *string `pulumi:"clusterId"`
	// cluster name.
	ClusterName *string `pulumi:"clusterName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// cluster list.
	Lists []GetClustersList `pulumi:"lists"`
	// pay mode.
	PayMode *string `pulumi:"payMode"`
	// project id.
	ProjectId        *int    `pulumi:"projectId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// status.
	Status *string `pulumi:"status"`
}

func GetClustersOutput(ctx *pulumi.Context, args GetClustersOutputArgs, opts ...pulumi.InvokeOption) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClustersResult, error) {
			args := v.(GetClustersArgs)
			r, err := GetClusters(ctx, &args, opts...)
			var s GetClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClustersResultOutput)
}

// A collection of arguments for invoking getClusters.
type GetClustersOutputArgs struct {
	// cluster id.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// cluster name.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// pay mode.
	PayMode pulumi.StringPtrInput `pulumi:"payMode"`
	// project id, default to 0, means default project.
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// cluster status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersArgs)(nil)).Elem()
}

// A collection of values returned by getClusters.
type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

// cluster id.
func (o GetClustersResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// cluster name.
func (o GetClustersResultOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

// cluster list.
func (o GetClustersResultOutput) Lists() GetClustersListArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersList { return v.Lists }).(GetClustersListArrayOutput)
}

// pay mode.
func (o GetClustersResultOutput) PayMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.PayMode }).(pulumi.StringPtrOutput)
}

// project id.
func (o GetClustersResultOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

func (o GetClustersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// status.
func (o GetClustersResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersResultOutput{})
}
