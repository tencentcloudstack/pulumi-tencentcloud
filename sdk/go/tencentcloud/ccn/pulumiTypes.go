// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ccn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

type InstancesAcceptAttachInstance struct {
	// Description.
	Description *string `pulumi:"description"`
	// Attachment Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Instance Region.
	InstanceRegion string `pulumi:"instanceRegion"`
	// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
	InstanceType *string `pulumi:"instanceType"`
	// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
	RouteTableId *string `pulumi:"routeTableId"`
}

// InstancesAcceptAttachInstanceInput is an input type that accepts InstancesAcceptAttachInstanceArgs and InstancesAcceptAttachInstanceOutput values.
// You can construct a concrete instance of `InstancesAcceptAttachInstanceInput` via:
//
//	InstancesAcceptAttachInstanceArgs{...}
type InstancesAcceptAttachInstanceInput interface {
	pulumi.Input

	ToInstancesAcceptAttachInstanceOutput() InstancesAcceptAttachInstanceOutput
	ToInstancesAcceptAttachInstanceOutputWithContext(context.Context) InstancesAcceptAttachInstanceOutput
}

type InstancesAcceptAttachInstanceArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Attachment Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Instance Region.
	InstanceRegion pulumi.StringInput `pulumi:"instanceRegion"`
	// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
}

func (InstancesAcceptAttachInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesAcceptAttachInstance)(nil)).Elem()
}

func (i InstancesAcceptAttachInstanceArgs) ToInstancesAcceptAttachInstanceOutput() InstancesAcceptAttachInstanceOutput {
	return i.ToInstancesAcceptAttachInstanceOutputWithContext(context.Background())
}

func (i InstancesAcceptAttachInstanceArgs) ToInstancesAcceptAttachInstanceOutputWithContext(ctx context.Context) InstancesAcceptAttachInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesAcceptAttachInstanceOutput)
}

// InstancesAcceptAttachInstanceArrayInput is an input type that accepts InstancesAcceptAttachInstanceArray and InstancesAcceptAttachInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesAcceptAttachInstanceArrayInput` via:
//
//	InstancesAcceptAttachInstanceArray{ InstancesAcceptAttachInstanceArgs{...} }
type InstancesAcceptAttachInstanceArrayInput interface {
	pulumi.Input

	ToInstancesAcceptAttachInstanceArrayOutput() InstancesAcceptAttachInstanceArrayOutput
	ToInstancesAcceptAttachInstanceArrayOutputWithContext(context.Context) InstancesAcceptAttachInstanceArrayOutput
}

type InstancesAcceptAttachInstanceArray []InstancesAcceptAttachInstanceInput

func (InstancesAcceptAttachInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesAcceptAttachInstance)(nil)).Elem()
}

func (i InstancesAcceptAttachInstanceArray) ToInstancesAcceptAttachInstanceArrayOutput() InstancesAcceptAttachInstanceArrayOutput {
	return i.ToInstancesAcceptAttachInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesAcceptAttachInstanceArray) ToInstancesAcceptAttachInstanceArrayOutputWithContext(ctx context.Context) InstancesAcceptAttachInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesAcceptAttachInstanceArrayOutput)
}

type InstancesAcceptAttachInstanceOutput struct{ *pulumi.OutputState }

func (InstancesAcceptAttachInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesAcceptAttachInstance)(nil)).Elem()
}

func (o InstancesAcceptAttachInstanceOutput) ToInstancesAcceptAttachInstanceOutput() InstancesAcceptAttachInstanceOutput {
	return o
}

func (o InstancesAcceptAttachInstanceOutput) ToInstancesAcceptAttachInstanceOutputWithContext(ctx context.Context) InstancesAcceptAttachInstanceOutput {
	return o
}

// Description.
func (o InstancesAcceptAttachInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesAcceptAttachInstance) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Attachment Instance ID.
func (o InstancesAcceptAttachInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesAcceptAttachInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance Region.
func (o InstancesAcceptAttachInstanceOutput) InstanceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesAcceptAttachInstance) string { return v.InstanceRegion }).(pulumi.StringOutput)
}

// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
func (o InstancesAcceptAttachInstanceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesAcceptAttachInstance) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
func (o InstancesAcceptAttachInstanceOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesAcceptAttachInstance) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

type InstancesAcceptAttachInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesAcceptAttachInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesAcceptAttachInstance)(nil)).Elem()
}

func (o InstancesAcceptAttachInstanceArrayOutput) ToInstancesAcceptAttachInstanceArrayOutput() InstancesAcceptAttachInstanceArrayOutput {
	return o
}

func (o InstancesAcceptAttachInstanceArrayOutput) ToInstancesAcceptAttachInstanceArrayOutputWithContext(ctx context.Context) InstancesAcceptAttachInstanceArrayOutput {
	return o
}

func (o InstancesAcceptAttachInstanceArrayOutput) Index(i pulumi.IntInput) InstancesAcceptAttachInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesAcceptAttachInstance {
		return vs[0].([]InstancesAcceptAttachInstance)[vs[1].(int)]
	}).(InstancesAcceptAttachInstanceOutput)
}

type InstancesRejectAttachInstance struct {
	// Description.
	Description *string `pulumi:"description"`
	// Attachment Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Instance Region.
	InstanceRegion string `pulumi:"instanceRegion"`
	// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
	InstanceType *string `pulumi:"instanceType"`
	// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
	RouteTableId *string `pulumi:"routeTableId"`
}

// InstancesRejectAttachInstanceInput is an input type that accepts InstancesRejectAttachInstanceArgs and InstancesRejectAttachInstanceOutput values.
// You can construct a concrete instance of `InstancesRejectAttachInstanceInput` via:
//
//	InstancesRejectAttachInstanceArgs{...}
type InstancesRejectAttachInstanceInput interface {
	pulumi.Input

	ToInstancesRejectAttachInstanceOutput() InstancesRejectAttachInstanceOutput
	ToInstancesRejectAttachInstanceOutputWithContext(context.Context) InstancesRejectAttachInstanceOutput
}

type InstancesRejectAttachInstanceArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Attachment Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Instance Region.
	InstanceRegion pulumi.StringInput `pulumi:"instanceRegion"`
	// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
}

func (InstancesRejectAttachInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRejectAttachInstance)(nil)).Elem()
}

func (i InstancesRejectAttachInstanceArgs) ToInstancesRejectAttachInstanceOutput() InstancesRejectAttachInstanceOutput {
	return i.ToInstancesRejectAttachInstanceOutputWithContext(context.Background())
}

func (i InstancesRejectAttachInstanceArgs) ToInstancesRejectAttachInstanceOutputWithContext(ctx context.Context) InstancesRejectAttachInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRejectAttachInstanceOutput)
}

// InstancesRejectAttachInstanceArrayInput is an input type that accepts InstancesRejectAttachInstanceArray and InstancesRejectAttachInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesRejectAttachInstanceArrayInput` via:
//
//	InstancesRejectAttachInstanceArray{ InstancesRejectAttachInstanceArgs{...} }
type InstancesRejectAttachInstanceArrayInput interface {
	pulumi.Input

	ToInstancesRejectAttachInstanceArrayOutput() InstancesRejectAttachInstanceArrayOutput
	ToInstancesRejectAttachInstanceArrayOutputWithContext(context.Context) InstancesRejectAttachInstanceArrayOutput
}

type InstancesRejectAttachInstanceArray []InstancesRejectAttachInstanceInput

func (InstancesRejectAttachInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesRejectAttachInstance)(nil)).Elem()
}

func (i InstancesRejectAttachInstanceArray) ToInstancesRejectAttachInstanceArrayOutput() InstancesRejectAttachInstanceArrayOutput {
	return i.ToInstancesRejectAttachInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesRejectAttachInstanceArray) ToInstancesRejectAttachInstanceArrayOutputWithContext(ctx context.Context) InstancesRejectAttachInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRejectAttachInstanceArrayOutput)
}

type InstancesRejectAttachInstanceOutput struct{ *pulumi.OutputState }

func (InstancesRejectAttachInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRejectAttachInstance)(nil)).Elem()
}

func (o InstancesRejectAttachInstanceOutput) ToInstancesRejectAttachInstanceOutput() InstancesRejectAttachInstanceOutput {
	return o
}

func (o InstancesRejectAttachInstanceOutput) ToInstancesRejectAttachInstanceOutputWithContext(ctx context.Context) InstancesRejectAttachInstanceOutput {
	return o
}

// Description.
func (o InstancesRejectAttachInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesRejectAttachInstance) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Attachment Instance ID.
func (o InstancesRejectAttachInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRejectAttachInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance Region.
func (o InstancesRejectAttachInstanceOutput) InstanceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRejectAttachInstance) string { return v.InstanceRegion }).(pulumi.StringOutput)
}

// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
func (o InstancesRejectAttachInstanceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesRejectAttachInstance) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
func (o InstancesRejectAttachInstanceOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesRejectAttachInstance) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

type InstancesRejectAttachInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesRejectAttachInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesRejectAttachInstance)(nil)).Elem()
}

func (o InstancesRejectAttachInstanceArrayOutput) ToInstancesRejectAttachInstanceArrayOutput() InstancesRejectAttachInstanceArrayOutput {
	return o
}

func (o InstancesRejectAttachInstanceArrayOutput) ToInstancesRejectAttachInstanceArrayOutputWithContext(ctx context.Context) InstancesRejectAttachInstanceArrayOutput {
	return o
}

func (o InstancesRejectAttachInstanceArrayOutput) Index(i pulumi.IntInput) InstancesRejectAttachInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesRejectAttachInstance {
		return vs[0].([]InstancesRejectAttachInstance)[vs[1].(int)]
	}).(InstancesRejectAttachInstanceOutput)
}

type InstancesResetAttachInstance struct {
	// Description.
	Description *string `pulumi:"description"`
	// Attachment Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Instance Region.
	InstanceRegion string `pulumi:"instanceRegion"`
	// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
	InstanceType *string `pulumi:"instanceType"`
	// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
	RouteTableId *string `pulumi:"routeTableId"`
}

// InstancesResetAttachInstanceInput is an input type that accepts InstancesResetAttachInstanceArgs and InstancesResetAttachInstanceOutput values.
// You can construct a concrete instance of `InstancesResetAttachInstanceInput` via:
//
//	InstancesResetAttachInstanceArgs{...}
type InstancesResetAttachInstanceInput interface {
	pulumi.Input

	ToInstancesResetAttachInstanceOutput() InstancesResetAttachInstanceOutput
	ToInstancesResetAttachInstanceOutputWithContext(context.Context) InstancesResetAttachInstanceOutput
}

type InstancesResetAttachInstanceArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Attachment Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Instance Region.
	InstanceRegion pulumi.StringInput `pulumi:"instanceRegion"`
	// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
}

func (InstancesResetAttachInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesResetAttachInstance)(nil)).Elem()
}

func (i InstancesResetAttachInstanceArgs) ToInstancesResetAttachInstanceOutput() InstancesResetAttachInstanceOutput {
	return i.ToInstancesResetAttachInstanceOutputWithContext(context.Background())
}

func (i InstancesResetAttachInstanceArgs) ToInstancesResetAttachInstanceOutputWithContext(ctx context.Context) InstancesResetAttachInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesResetAttachInstanceOutput)
}

// InstancesResetAttachInstanceArrayInput is an input type that accepts InstancesResetAttachInstanceArray and InstancesResetAttachInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesResetAttachInstanceArrayInput` via:
//
//	InstancesResetAttachInstanceArray{ InstancesResetAttachInstanceArgs{...} }
type InstancesResetAttachInstanceArrayInput interface {
	pulumi.Input

	ToInstancesResetAttachInstanceArrayOutput() InstancesResetAttachInstanceArrayOutput
	ToInstancesResetAttachInstanceArrayOutputWithContext(context.Context) InstancesResetAttachInstanceArrayOutput
}

type InstancesResetAttachInstanceArray []InstancesResetAttachInstanceInput

func (InstancesResetAttachInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesResetAttachInstance)(nil)).Elem()
}

func (i InstancesResetAttachInstanceArray) ToInstancesResetAttachInstanceArrayOutput() InstancesResetAttachInstanceArrayOutput {
	return i.ToInstancesResetAttachInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesResetAttachInstanceArray) ToInstancesResetAttachInstanceArrayOutputWithContext(ctx context.Context) InstancesResetAttachInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesResetAttachInstanceArrayOutput)
}

type InstancesResetAttachInstanceOutput struct{ *pulumi.OutputState }

func (InstancesResetAttachInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesResetAttachInstance)(nil)).Elem()
}

func (o InstancesResetAttachInstanceOutput) ToInstancesResetAttachInstanceOutput() InstancesResetAttachInstanceOutput {
	return o
}

func (o InstancesResetAttachInstanceOutput) ToInstancesResetAttachInstanceOutputWithContext(ctx context.Context) InstancesResetAttachInstanceOutput {
	return o
}

// Description.
func (o InstancesResetAttachInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResetAttachInstance) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Attachment Instance ID.
func (o InstancesResetAttachInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesResetAttachInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance Region.
func (o InstancesResetAttachInstanceOutput) InstanceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesResetAttachInstance) string { return v.InstanceRegion }).(pulumi.StringOutput)
}

// InstanceType: `VPC`, `DIRECTCONNECT`, `BMVPC`, `VPNGW`.
func (o InstancesResetAttachInstanceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResetAttachInstance) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// ID of the routing table associated with the instance. Note: This field may return null, indicating that no valid value can be obtained.
func (o InstancesResetAttachInstanceOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResetAttachInstance) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

type InstancesResetAttachInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesResetAttachInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesResetAttachInstance)(nil)).Elem()
}

func (o InstancesResetAttachInstanceArrayOutput) ToInstancesResetAttachInstanceArrayOutput() InstancesResetAttachInstanceArrayOutput {
	return o
}

func (o InstancesResetAttachInstanceArrayOutput) ToInstancesResetAttachInstanceArrayOutputWithContext(ctx context.Context) InstancesResetAttachInstanceArrayOutput {
	return o
}

func (o InstancesResetAttachInstanceArrayOutput) Index(i pulumi.IntInput) InstancesResetAttachInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesResetAttachInstance {
		return vs[0].([]InstancesResetAttachInstance)[vs[1].(int)]
	}).(InstancesResetAttachInstanceOutput)
}

type RouteTableAssociateInstanceConfigInstance struct {
	// Instances ID.
	InstanceId string `pulumi:"instanceId"`
	// Cloud networking supports instance types: VPC, DIRECTCONNECT, BMVPC, EDGE, EDGE_TUNNEL, EDGE_VPNGW, VPNGW.
	InstanceType string `pulumi:"instanceType"`
}

// RouteTableAssociateInstanceConfigInstanceInput is an input type that accepts RouteTableAssociateInstanceConfigInstanceArgs and RouteTableAssociateInstanceConfigInstanceOutput values.
// You can construct a concrete instance of `RouteTableAssociateInstanceConfigInstanceInput` via:
//
//	RouteTableAssociateInstanceConfigInstanceArgs{...}
type RouteTableAssociateInstanceConfigInstanceInput interface {
	pulumi.Input

	ToRouteTableAssociateInstanceConfigInstanceOutput() RouteTableAssociateInstanceConfigInstanceOutput
	ToRouteTableAssociateInstanceConfigInstanceOutputWithContext(context.Context) RouteTableAssociateInstanceConfigInstanceOutput
}

type RouteTableAssociateInstanceConfigInstanceArgs struct {
	// Instances ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Cloud networking supports instance types: VPC, DIRECTCONNECT, BMVPC, EDGE, EDGE_TUNNEL, EDGE_VPNGW, VPNGW.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (RouteTableAssociateInstanceConfigInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociateInstanceConfigInstance)(nil)).Elem()
}

func (i RouteTableAssociateInstanceConfigInstanceArgs) ToRouteTableAssociateInstanceConfigInstanceOutput() RouteTableAssociateInstanceConfigInstanceOutput {
	return i.ToRouteTableAssociateInstanceConfigInstanceOutputWithContext(context.Background())
}

func (i RouteTableAssociateInstanceConfigInstanceArgs) ToRouteTableAssociateInstanceConfigInstanceOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociateInstanceConfigInstanceOutput)
}

// RouteTableAssociateInstanceConfigInstanceArrayInput is an input type that accepts RouteTableAssociateInstanceConfigInstanceArray and RouteTableAssociateInstanceConfigInstanceArrayOutput values.
// You can construct a concrete instance of `RouteTableAssociateInstanceConfigInstanceArrayInput` via:
//
//	RouteTableAssociateInstanceConfigInstanceArray{ RouteTableAssociateInstanceConfigInstanceArgs{...} }
type RouteTableAssociateInstanceConfigInstanceArrayInput interface {
	pulumi.Input

	ToRouteTableAssociateInstanceConfigInstanceArrayOutput() RouteTableAssociateInstanceConfigInstanceArrayOutput
	ToRouteTableAssociateInstanceConfigInstanceArrayOutputWithContext(context.Context) RouteTableAssociateInstanceConfigInstanceArrayOutput
}

type RouteTableAssociateInstanceConfigInstanceArray []RouteTableAssociateInstanceConfigInstanceInput

func (RouteTableAssociateInstanceConfigInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableAssociateInstanceConfigInstance)(nil)).Elem()
}

func (i RouteTableAssociateInstanceConfigInstanceArray) ToRouteTableAssociateInstanceConfigInstanceArrayOutput() RouteTableAssociateInstanceConfigInstanceArrayOutput {
	return i.ToRouteTableAssociateInstanceConfigInstanceArrayOutputWithContext(context.Background())
}

func (i RouteTableAssociateInstanceConfigInstanceArray) ToRouteTableAssociateInstanceConfigInstanceArrayOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociateInstanceConfigInstanceArrayOutput)
}

type RouteTableAssociateInstanceConfigInstanceOutput struct{ *pulumi.OutputState }

func (RouteTableAssociateInstanceConfigInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociateInstanceConfigInstance)(nil)).Elem()
}

func (o RouteTableAssociateInstanceConfigInstanceOutput) ToRouteTableAssociateInstanceConfigInstanceOutput() RouteTableAssociateInstanceConfigInstanceOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigInstanceOutput) ToRouteTableAssociateInstanceConfigInstanceOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigInstanceOutput {
	return o
}

// Instances ID.
func (o RouteTableAssociateInstanceConfigInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociateInstanceConfigInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Cloud networking supports instance types: VPC, DIRECTCONNECT, BMVPC, EDGE, EDGE_TUNNEL, EDGE_VPNGW, VPNGW.
func (o RouteTableAssociateInstanceConfigInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociateInstanceConfigInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

type RouteTableAssociateInstanceConfigInstanceArrayOutput struct{ *pulumi.OutputState }

func (RouteTableAssociateInstanceConfigInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableAssociateInstanceConfigInstance)(nil)).Elem()
}

func (o RouteTableAssociateInstanceConfigInstanceArrayOutput) ToRouteTableAssociateInstanceConfigInstanceArrayOutput() RouteTableAssociateInstanceConfigInstanceArrayOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigInstanceArrayOutput) ToRouteTableAssociateInstanceConfigInstanceArrayOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigInstanceArrayOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigInstanceArrayOutput) Index(i pulumi.IntInput) RouteTableAssociateInstanceConfigInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableAssociateInstanceConfigInstance {
		return vs[0].([]RouteTableAssociateInstanceConfigInstance)[vs[1].(int)]
	}).(RouteTableAssociateInstanceConfigInstanceOutput)
}

type RouteTableBroadcastPoliciesPolicy struct {
	// Routing behavior, `accept` allows, `drop` rejects.
	Action string `pulumi:"action"`
	// propagation conditions.
	BroadcastConditions []RouteTableBroadcastPoliciesPolicyBroadcastCondition `pulumi:"broadcastConditions"`
	// Policy description.
	Description string `pulumi:"description"`
	// Routing conditions.
	RouteConditions []RouteTableBroadcastPoliciesPolicyRouteCondition `pulumi:"routeConditions"`
}

// RouteTableBroadcastPoliciesPolicyInput is an input type that accepts RouteTableBroadcastPoliciesPolicyArgs and RouteTableBroadcastPoliciesPolicyOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesPolicyInput` via:
//
//	RouteTableBroadcastPoliciesPolicyArgs{...}
type RouteTableBroadcastPoliciesPolicyInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesPolicyOutput() RouteTableBroadcastPoliciesPolicyOutput
	ToRouteTableBroadcastPoliciesPolicyOutputWithContext(context.Context) RouteTableBroadcastPoliciesPolicyOutput
}

type RouteTableBroadcastPoliciesPolicyArgs struct {
	// Routing behavior, `accept` allows, `drop` rejects.
	Action pulumi.StringInput `pulumi:"action"`
	// propagation conditions.
	BroadcastConditions RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayInput `pulumi:"broadcastConditions"`
	// Policy description.
	Description pulumi.StringInput `pulumi:"description"`
	// Routing conditions.
	RouteConditions RouteTableBroadcastPoliciesPolicyRouteConditionArrayInput `pulumi:"routeConditions"`
}

func (RouteTableBroadcastPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableBroadcastPoliciesPolicy)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesPolicyArgs) ToRouteTableBroadcastPoliciesPolicyOutput() RouteTableBroadcastPoliciesPolicyOutput {
	return i.ToRouteTableBroadcastPoliciesPolicyOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesPolicyArgs) ToRouteTableBroadcastPoliciesPolicyOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesPolicyOutput)
}

// RouteTableBroadcastPoliciesPolicyArrayInput is an input type that accepts RouteTableBroadcastPoliciesPolicyArray and RouteTableBroadcastPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesPolicyArrayInput` via:
//
//	RouteTableBroadcastPoliciesPolicyArray{ RouteTableBroadcastPoliciesPolicyArgs{...} }
type RouteTableBroadcastPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesPolicyArrayOutput() RouteTableBroadcastPoliciesPolicyArrayOutput
	ToRouteTableBroadcastPoliciesPolicyArrayOutputWithContext(context.Context) RouteTableBroadcastPoliciesPolicyArrayOutput
}

type RouteTableBroadcastPoliciesPolicyArray []RouteTableBroadcastPoliciesPolicyInput

func (RouteTableBroadcastPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableBroadcastPoliciesPolicy)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesPolicyArray) ToRouteTableBroadcastPoliciesPolicyArrayOutput() RouteTableBroadcastPoliciesPolicyArrayOutput {
	return i.ToRouteTableBroadcastPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesPolicyArray) ToRouteTableBroadcastPoliciesPolicyArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesPolicyArrayOutput)
}

type RouteTableBroadcastPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableBroadcastPoliciesPolicy)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesPolicyOutput) ToRouteTableBroadcastPoliciesPolicyOutput() RouteTableBroadcastPoliciesPolicyOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyOutput) ToRouteTableBroadcastPoliciesPolicyOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyOutput {
	return o
}

// Routing behavior, `accept` allows, `drop` rejects.
func (o RouteTableBroadcastPoliciesPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicy) string { return v.Action }).(pulumi.StringOutput)
}

// propagation conditions.
func (o RouteTableBroadcastPoliciesPolicyOutput) BroadcastConditions() RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicy) []RouteTableBroadcastPoliciesPolicyBroadcastCondition {
		return v.BroadcastConditions
	}).(RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput)
}

// Policy description.
func (o RouteTableBroadcastPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Routing conditions.
func (o RouteTableBroadcastPoliciesPolicyOutput) RouteConditions() RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicy) []RouteTableBroadcastPoliciesPolicyRouteCondition {
		return v.RouteConditions
	}).(RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput)
}

type RouteTableBroadcastPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableBroadcastPoliciesPolicy)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesPolicyArrayOutput) ToRouteTableBroadcastPoliciesPolicyArrayOutput() RouteTableBroadcastPoliciesPolicyArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyArrayOutput) ToRouteTableBroadcastPoliciesPolicyArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) RouteTableBroadcastPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableBroadcastPoliciesPolicy {
		return vs[0].([]RouteTableBroadcastPoliciesPolicy)[vs[1].(int)]
	}).(RouteTableBroadcastPoliciesPolicyOutput)
}

type RouteTableBroadcastPoliciesPolicyBroadcastCondition struct {
	// Matching mode, `1` precise matching, `0` fuzzy matching.
	MatchPattern int `pulumi:"matchPattern"`
	// condition type.
	Name string `pulumi:"name"`
	// List of conditional values.
	Values []string `pulumi:"values"`
}

// RouteTableBroadcastPoliciesPolicyBroadcastConditionInput is an input type that accepts RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs and RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesPolicyBroadcastConditionInput` via:
//
//	RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs{...}
type RouteTableBroadcastPoliciesPolicyBroadcastConditionInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutput() RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput
	ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutputWithContext(context.Context) RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput
}

type RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs struct {
	// Matching mode, `1` precise matching, `0` fuzzy matching.
	MatchPattern pulumi.IntInput `pulumi:"matchPattern"`
	// condition type.
	Name pulumi.StringInput `pulumi:"name"`
	// List of conditional values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyBroadcastCondition)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutput() RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput {
	return i.ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput)
}

// RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayInput is an input type that accepts RouteTableBroadcastPoliciesPolicyBroadcastConditionArray and RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayInput` via:
//
//	RouteTableBroadcastPoliciesPolicyBroadcastConditionArray{ RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs{...} }
type RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput() RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput
	ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutputWithContext(context.Context) RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput
}

type RouteTableBroadcastPoliciesPolicyBroadcastConditionArray []RouteTableBroadcastPoliciesPolicyBroadcastConditionInput

func (RouteTableBroadcastPoliciesPolicyBroadcastConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableBroadcastPoliciesPolicyBroadcastCondition)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesPolicyBroadcastConditionArray) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput() RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput {
	return i.ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesPolicyBroadcastConditionArray) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput)
}

type RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyBroadcastCondition)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutput() RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput {
	return o
}

// Matching mode, `1` precise matching, `0` fuzzy matching.
func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput) MatchPattern() pulumi.IntOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicyBroadcastCondition) int { return v.MatchPattern }).(pulumi.IntOutput)
}

// condition type.
func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicyBroadcastCondition) string { return v.Name }).(pulumi.StringOutput)
}

// List of conditional values.
func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicyBroadcastCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableBroadcastPoliciesPolicyBroadcastCondition)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput() RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput) ToRouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput) Index(i pulumi.IntInput) RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableBroadcastPoliciesPolicyBroadcastCondition {
		return vs[0].([]RouteTableBroadcastPoliciesPolicyBroadcastCondition)[vs[1].(int)]
	}).(RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput)
}

type RouteTableBroadcastPoliciesPolicyRouteCondition struct {
	// Matching mode, `1` precise matching, `0` fuzzy matching.
	MatchPattern int `pulumi:"matchPattern"`
	// condition type.
	Name string `pulumi:"name"`
	// List of conditional values.
	Values []string `pulumi:"values"`
}

// RouteTableBroadcastPoliciesPolicyRouteConditionInput is an input type that accepts RouteTableBroadcastPoliciesPolicyRouteConditionArgs and RouteTableBroadcastPoliciesPolicyRouteConditionOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesPolicyRouteConditionInput` via:
//
//	RouteTableBroadcastPoliciesPolicyRouteConditionArgs{...}
type RouteTableBroadcastPoliciesPolicyRouteConditionInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesPolicyRouteConditionOutput() RouteTableBroadcastPoliciesPolicyRouteConditionOutput
	ToRouteTableBroadcastPoliciesPolicyRouteConditionOutputWithContext(context.Context) RouteTableBroadcastPoliciesPolicyRouteConditionOutput
}

type RouteTableBroadcastPoliciesPolicyRouteConditionArgs struct {
	// Matching mode, `1` precise matching, `0` fuzzy matching.
	MatchPattern pulumi.IntInput `pulumi:"matchPattern"`
	// condition type.
	Name pulumi.StringInput `pulumi:"name"`
	// List of conditional values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RouteTableBroadcastPoliciesPolicyRouteConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesPolicyRouteConditionArgs) ToRouteTableBroadcastPoliciesPolicyRouteConditionOutput() RouteTableBroadcastPoliciesPolicyRouteConditionOutput {
	return i.ToRouteTableBroadcastPoliciesPolicyRouteConditionOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesPolicyRouteConditionArgs) ToRouteTableBroadcastPoliciesPolicyRouteConditionOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyRouteConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesPolicyRouteConditionOutput)
}

// RouteTableBroadcastPoliciesPolicyRouteConditionArrayInput is an input type that accepts RouteTableBroadcastPoliciesPolicyRouteConditionArray and RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesPolicyRouteConditionArrayInput` via:
//
//	RouteTableBroadcastPoliciesPolicyRouteConditionArray{ RouteTableBroadcastPoliciesPolicyRouteConditionArgs{...} }
type RouteTableBroadcastPoliciesPolicyRouteConditionArrayInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput() RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput
	ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutputWithContext(context.Context) RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput
}

type RouteTableBroadcastPoliciesPolicyRouteConditionArray []RouteTableBroadcastPoliciesPolicyRouteConditionInput

func (RouteTableBroadcastPoliciesPolicyRouteConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableBroadcastPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesPolicyRouteConditionArray) ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput() RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput {
	return i.ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesPolicyRouteConditionArray) ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput)
}

type RouteTableBroadcastPoliciesPolicyRouteConditionOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesPolicyRouteConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesPolicyRouteConditionOutput) ToRouteTableBroadcastPoliciesPolicyRouteConditionOutput() RouteTableBroadcastPoliciesPolicyRouteConditionOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyRouteConditionOutput) ToRouteTableBroadcastPoliciesPolicyRouteConditionOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyRouteConditionOutput {
	return o
}

// Matching mode, `1` precise matching, `0` fuzzy matching.
func (o RouteTableBroadcastPoliciesPolicyRouteConditionOutput) MatchPattern() pulumi.IntOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicyRouteCondition) int { return v.MatchPattern }).(pulumi.IntOutput)
}

// condition type.
func (o RouteTableBroadcastPoliciesPolicyRouteConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicyRouteCondition) string { return v.Name }).(pulumi.StringOutput)
}

// List of conditional values.
func (o RouteTableBroadcastPoliciesPolicyRouteConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteTableBroadcastPoliciesPolicyRouteCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableBroadcastPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput) ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput() RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput) ToRouteTableBroadcastPoliciesPolicyRouteConditionArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput) Index(i pulumi.IntInput) RouteTableBroadcastPoliciesPolicyRouteConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableBroadcastPoliciesPolicyRouteCondition {
		return vs[0].([]RouteTableBroadcastPoliciesPolicyRouteCondition)[vs[1].(int)]
	}).(RouteTableBroadcastPoliciesPolicyRouteConditionOutput)
}

type RouteTableInputPoliciesPolicy struct {
	// Routing behavior, `accept` allows, `drop` rejects.
	Action string `pulumi:"action"`
	// Policy description.
	Description string `pulumi:"description"`
	// Routing conditions.
	RouteConditions []RouteTableInputPoliciesPolicyRouteCondition `pulumi:"routeConditions"`
}

// RouteTableInputPoliciesPolicyInput is an input type that accepts RouteTableInputPoliciesPolicyArgs and RouteTableInputPoliciesPolicyOutput values.
// You can construct a concrete instance of `RouteTableInputPoliciesPolicyInput` via:
//
//	RouteTableInputPoliciesPolicyArgs{...}
type RouteTableInputPoliciesPolicyInput interface {
	pulumi.Input

	ToRouteTableInputPoliciesPolicyOutput() RouteTableInputPoliciesPolicyOutput
	ToRouteTableInputPoliciesPolicyOutputWithContext(context.Context) RouteTableInputPoliciesPolicyOutput
}

type RouteTableInputPoliciesPolicyArgs struct {
	// Routing behavior, `accept` allows, `drop` rejects.
	Action pulumi.StringInput `pulumi:"action"`
	// Policy description.
	Description pulumi.StringInput `pulumi:"description"`
	// Routing conditions.
	RouteConditions RouteTableInputPoliciesPolicyRouteConditionArrayInput `pulumi:"routeConditions"`
}

func (RouteTableInputPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableInputPoliciesPolicy)(nil)).Elem()
}

func (i RouteTableInputPoliciesPolicyArgs) ToRouteTableInputPoliciesPolicyOutput() RouteTableInputPoliciesPolicyOutput {
	return i.ToRouteTableInputPoliciesPolicyOutputWithContext(context.Background())
}

func (i RouteTableInputPoliciesPolicyArgs) ToRouteTableInputPoliciesPolicyOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInputPoliciesPolicyOutput)
}

// RouteTableInputPoliciesPolicyArrayInput is an input type that accepts RouteTableInputPoliciesPolicyArray and RouteTableInputPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `RouteTableInputPoliciesPolicyArrayInput` via:
//
//	RouteTableInputPoliciesPolicyArray{ RouteTableInputPoliciesPolicyArgs{...} }
type RouteTableInputPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToRouteTableInputPoliciesPolicyArrayOutput() RouteTableInputPoliciesPolicyArrayOutput
	ToRouteTableInputPoliciesPolicyArrayOutputWithContext(context.Context) RouteTableInputPoliciesPolicyArrayOutput
}

type RouteTableInputPoliciesPolicyArray []RouteTableInputPoliciesPolicyInput

func (RouteTableInputPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableInputPoliciesPolicy)(nil)).Elem()
}

func (i RouteTableInputPoliciesPolicyArray) ToRouteTableInputPoliciesPolicyArrayOutput() RouteTableInputPoliciesPolicyArrayOutput {
	return i.ToRouteTableInputPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i RouteTableInputPoliciesPolicyArray) ToRouteTableInputPoliciesPolicyArrayOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInputPoliciesPolicyArrayOutput)
}

type RouteTableInputPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (RouteTableInputPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableInputPoliciesPolicy)(nil)).Elem()
}

func (o RouteTableInputPoliciesPolicyOutput) ToRouteTableInputPoliciesPolicyOutput() RouteTableInputPoliciesPolicyOutput {
	return o
}

func (o RouteTableInputPoliciesPolicyOutput) ToRouteTableInputPoliciesPolicyOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyOutput {
	return o
}

// Routing behavior, `accept` allows, `drop` rejects.
func (o RouteTableInputPoliciesPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableInputPoliciesPolicy) string { return v.Action }).(pulumi.StringOutput)
}

// Policy description.
func (o RouteTableInputPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableInputPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Routing conditions.
func (o RouteTableInputPoliciesPolicyOutput) RouteConditions() RouteTableInputPoliciesPolicyRouteConditionArrayOutput {
	return o.ApplyT(func(v RouteTableInputPoliciesPolicy) []RouteTableInputPoliciesPolicyRouteCondition {
		return v.RouteConditions
	}).(RouteTableInputPoliciesPolicyRouteConditionArrayOutput)
}

type RouteTableInputPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (RouteTableInputPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableInputPoliciesPolicy)(nil)).Elem()
}

func (o RouteTableInputPoliciesPolicyArrayOutput) ToRouteTableInputPoliciesPolicyArrayOutput() RouteTableInputPoliciesPolicyArrayOutput {
	return o
}

func (o RouteTableInputPoliciesPolicyArrayOutput) ToRouteTableInputPoliciesPolicyArrayOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyArrayOutput {
	return o
}

func (o RouteTableInputPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) RouteTableInputPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableInputPoliciesPolicy {
		return vs[0].([]RouteTableInputPoliciesPolicy)[vs[1].(int)]
	}).(RouteTableInputPoliciesPolicyOutput)
}

type RouteTableInputPoliciesPolicyRouteCondition struct {
	// Matching mode, `1` precise matching, `0` fuzzy matching.
	MatchPattern int `pulumi:"matchPattern"`
	// condition type.
	Name string `pulumi:"name"`
	// List of conditional values.
	Values []string `pulumi:"values"`
}

// RouteTableInputPoliciesPolicyRouteConditionInput is an input type that accepts RouteTableInputPoliciesPolicyRouteConditionArgs and RouteTableInputPoliciesPolicyRouteConditionOutput values.
// You can construct a concrete instance of `RouteTableInputPoliciesPolicyRouteConditionInput` via:
//
//	RouteTableInputPoliciesPolicyRouteConditionArgs{...}
type RouteTableInputPoliciesPolicyRouteConditionInput interface {
	pulumi.Input

	ToRouteTableInputPoliciesPolicyRouteConditionOutput() RouteTableInputPoliciesPolicyRouteConditionOutput
	ToRouteTableInputPoliciesPolicyRouteConditionOutputWithContext(context.Context) RouteTableInputPoliciesPolicyRouteConditionOutput
}

type RouteTableInputPoliciesPolicyRouteConditionArgs struct {
	// Matching mode, `1` precise matching, `0` fuzzy matching.
	MatchPattern pulumi.IntInput `pulumi:"matchPattern"`
	// condition type.
	Name pulumi.StringInput `pulumi:"name"`
	// List of conditional values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RouteTableInputPoliciesPolicyRouteConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableInputPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (i RouteTableInputPoliciesPolicyRouteConditionArgs) ToRouteTableInputPoliciesPolicyRouteConditionOutput() RouteTableInputPoliciesPolicyRouteConditionOutput {
	return i.ToRouteTableInputPoliciesPolicyRouteConditionOutputWithContext(context.Background())
}

func (i RouteTableInputPoliciesPolicyRouteConditionArgs) ToRouteTableInputPoliciesPolicyRouteConditionOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyRouteConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInputPoliciesPolicyRouteConditionOutput)
}

// RouteTableInputPoliciesPolicyRouteConditionArrayInput is an input type that accepts RouteTableInputPoliciesPolicyRouteConditionArray and RouteTableInputPoliciesPolicyRouteConditionArrayOutput values.
// You can construct a concrete instance of `RouteTableInputPoliciesPolicyRouteConditionArrayInput` via:
//
//	RouteTableInputPoliciesPolicyRouteConditionArray{ RouteTableInputPoliciesPolicyRouteConditionArgs{...} }
type RouteTableInputPoliciesPolicyRouteConditionArrayInput interface {
	pulumi.Input

	ToRouteTableInputPoliciesPolicyRouteConditionArrayOutput() RouteTableInputPoliciesPolicyRouteConditionArrayOutput
	ToRouteTableInputPoliciesPolicyRouteConditionArrayOutputWithContext(context.Context) RouteTableInputPoliciesPolicyRouteConditionArrayOutput
}

type RouteTableInputPoliciesPolicyRouteConditionArray []RouteTableInputPoliciesPolicyRouteConditionInput

func (RouteTableInputPoliciesPolicyRouteConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableInputPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (i RouteTableInputPoliciesPolicyRouteConditionArray) ToRouteTableInputPoliciesPolicyRouteConditionArrayOutput() RouteTableInputPoliciesPolicyRouteConditionArrayOutput {
	return i.ToRouteTableInputPoliciesPolicyRouteConditionArrayOutputWithContext(context.Background())
}

func (i RouteTableInputPoliciesPolicyRouteConditionArray) ToRouteTableInputPoliciesPolicyRouteConditionArrayOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyRouteConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInputPoliciesPolicyRouteConditionArrayOutput)
}

type RouteTableInputPoliciesPolicyRouteConditionOutput struct{ *pulumi.OutputState }

func (RouteTableInputPoliciesPolicyRouteConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableInputPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (o RouteTableInputPoliciesPolicyRouteConditionOutput) ToRouteTableInputPoliciesPolicyRouteConditionOutput() RouteTableInputPoliciesPolicyRouteConditionOutput {
	return o
}

func (o RouteTableInputPoliciesPolicyRouteConditionOutput) ToRouteTableInputPoliciesPolicyRouteConditionOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyRouteConditionOutput {
	return o
}

// Matching mode, `1` precise matching, `0` fuzzy matching.
func (o RouteTableInputPoliciesPolicyRouteConditionOutput) MatchPattern() pulumi.IntOutput {
	return o.ApplyT(func(v RouteTableInputPoliciesPolicyRouteCondition) int { return v.MatchPattern }).(pulumi.IntOutput)
}

// condition type.
func (o RouteTableInputPoliciesPolicyRouteConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableInputPoliciesPolicyRouteCondition) string { return v.Name }).(pulumi.StringOutput)
}

// List of conditional values.
func (o RouteTableInputPoliciesPolicyRouteConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteTableInputPoliciesPolicyRouteCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RouteTableInputPoliciesPolicyRouteConditionArrayOutput struct{ *pulumi.OutputState }

func (RouteTableInputPoliciesPolicyRouteConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableInputPoliciesPolicyRouteCondition)(nil)).Elem()
}

func (o RouteTableInputPoliciesPolicyRouteConditionArrayOutput) ToRouteTableInputPoliciesPolicyRouteConditionArrayOutput() RouteTableInputPoliciesPolicyRouteConditionArrayOutput {
	return o
}

func (o RouteTableInputPoliciesPolicyRouteConditionArrayOutput) ToRouteTableInputPoliciesPolicyRouteConditionArrayOutputWithContext(ctx context.Context) RouteTableInputPoliciesPolicyRouteConditionArrayOutput {
	return o
}

func (o RouteTableInputPoliciesPolicyRouteConditionArrayOutput) Index(i pulumi.IntInput) RouteTableInputPoliciesPolicyRouteConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableInputPoliciesPolicyRouteCondition {
		return vs[0].([]RouteTableInputPoliciesPolicyRouteCondition)[vs[1].(int)]
	}).(RouteTableInputPoliciesPolicyRouteConditionOutput)
}

type RouteTableSelectionPoliciesSelectionPolicy struct {
	// description.
	Description string `pulumi:"description"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Instance Type: Private Network: VPC, Dedicated Gateway: DIRECTCONNECT, Blackstone Private Network: BMVPC, EDGE Device: EDGE, EDGE Tunnel: EDGE_TUNNEL, EDGE Gateway: EDGE_VPNGW, VPN Gateway: VPNGW.
	InstanceType string `pulumi:"instanceType"`
	// route table ID.
	RouteTableId string `pulumi:"routeTableId"`
	// Source CIDR.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
}

// RouteTableSelectionPoliciesSelectionPolicyInput is an input type that accepts RouteTableSelectionPoliciesSelectionPolicyArgs and RouteTableSelectionPoliciesSelectionPolicyOutput values.
// You can construct a concrete instance of `RouteTableSelectionPoliciesSelectionPolicyInput` via:
//
//	RouteTableSelectionPoliciesSelectionPolicyArgs{...}
type RouteTableSelectionPoliciesSelectionPolicyInput interface {
	pulumi.Input

	ToRouteTableSelectionPoliciesSelectionPolicyOutput() RouteTableSelectionPoliciesSelectionPolicyOutput
	ToRouteTableSelectionPoliciesSelectionPolicyOutputWithContext(context.Context) RouteTableSelectionPoliciesSelectionPolicyOutput
}

type RouteTableSelectionPoliciesSelectionPolicyArgs struct {
	// description.
	Description pulumi.StringInput `pulumi:"description"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Instance Type: Private Network: VPC, Dedicated Gateway: DIRECTCONNECT, Blackstone Private Network: BMVPC, EDGE Device: EDGE, EDGE Tunnel: EDGE_TUNNEL, EDGE Gateway: EDGE_VPNGW, VPN Gateway: VPNGW.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// route table ID.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Source CIDR.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
}

func (RouteTableSelectionPoliciesSelectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableSelectionPoliciesSelectionPolicy)(nil)).Elem()
}

func (i RouteTableSelectionPoliciesSelectionPolicyArgs) ToRouteTableSelectionPoliciesSelectionPolicyOutput() RouteTableSelectionPoliciesSelectionPolicyOutput {
	return i.ToRouteTableSelectionPoliciesSelectionPolicyOutputWithContext(context.Background())
}

func (i RouteTableSelectionPoliciesSelectionPolicyArgs) ToRouteTableSelectionPoliciesSelectionPolicyOutputWithContext(ctx context.Context) RouteTableSelectionPoliciesSelectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableSelectionPoliciesSelectionPolicyOutput)
}

// RouteTableSelectionPoliciesSelectionPolicyArrayInput is an input type that accepts RouteTableSelectionPoliciesSelectionPolicyArray and RouteTableSelectionPoliciesSelectionPolicyArrayOutput values.
// You can construct a concrete instance of `RouteTableSelectionPoliciesSelectionPolicyArrayInput` via:
//
//	RouteTableSelectionPoliciesSelectionPolicyArray{ RouteTableSelectionPoliciesSelectionPolicyArgs{...} }
type RouteTableSelectionPoliciesSelectionPolicyArrayInput interface {
	pulumi.Input

	ToRouteTableSelectionPoliciesSelectionPolicyArrayOutput() RouteTableSelectionPoliciesSelectionPolicyArrayOutput
	ToRouteTableSelectionPoliciesSelectionPolicyArrayOutputWithContext(context.Context) RouteTableSelectionPoliciesSelectionPolicyArrayOutput
}

type RouteTableSelectionPoliciesSelectionPolicyArray []RouteTableSelectionPoliciesSelectionPolicyInput

func (RouteTableSelectionPoliciesSelectionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableSelectionPoliciesSelectionPolicy)(nil)).Elem()
}

func (i RouteTableSelectionPoliciesSelectionPolicyArray) ToRouteTableSelectionPoliciesSelectionPolicyArrayOutput() RouteTableSelectionPoliciesSelectionPolicyArrayOutput {
	return i.ToRouteTableSelectionPoliciesSelectionPolicyArrayOutputWithContext(context.Background())
}

func (i RouteTableSelectionPoliciesSelectionPolicyArray) ToRouteTableSelectionPoliciesSelectionPolicyArrayOutputWithContext(ctx context.Context) RouteTableSelectionPoliciesSelectionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableSelectionPoliciesSelectionPolicyArrayOutput)
}

type RouteTableSelectionPoliciesSelectionPolicyOutput struct{ *pulumi.OutputState }

func (RouteTableSelectionPoliciesSelectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableSelectionPoliciesSelectionPolicy)(nil)).Elem()
}

func (o RouteTableSelectionPoliciesSelectionPolicyOutput) ToRouteTableSelectionPoliciesSelectionPolicyOutput() RouteTableSelectionPoliciesSelectionPolicyOutput {
	return o
}

func (o RouteTableSelectionPoliciesSelectionPolicyOutput) ToRouteTableSelectionPoliciesSelectionPolicyOutputWithContext(ctx context.Context) RouteTableSelectionPoliciesSelectionPolicyOutput {
	return o
}

// description.
func (o RouteTableSelectionPoliciesSelectionPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableSelectionPoliciesSelectionPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Instance ID.
func (o RouteTableSelectionPoliciesSelectionPolicyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableSelectionPoliciesSelectionPolicy) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance Type: Private Network: VPC, Dedicated Gateway: DIRECTCONNECT, Blackstone Private Network: BMVPC, EDGE Device: EDGE, EDGE Tunnel: EDGE_TUNNEL, EDGE Gateway: EDGE_VPNGW, VPN Gateway: VPNGW.
func (o RouteTableSelectionPoliciesSelectionPolicyOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableSelectionPoliciesSelectionPolicy) string { return v.InstanceType }).(pulumi.StringOutput)
}

// route table ID.
func (o RouteTableSelectionPoliciesSelectionPolicyOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableSelectionPoliciesSelectionPolicy) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// Source CIDR.
func (o RouteTableSelectionPoliciesSelectionPolicyOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableSelectionPoliciesSelectionPolicy) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

type RouteTableSelectionPoliciesSelectionPolicyArrayOutput struct{ *pulumi.OutputState }

func (RouteTableSelectionPoliciesSelectionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableSelectionPoliciesSelectionPolicy)(nil)).Elem()
}

func (o RouteTableSelectionPoliciesSelectionPolicyArrayOutput) ToRouteTableSelectionPoliciesSelectionPolicyArrayOutput() RouteTableSelectionPoliciesSelectionPolicyArrayOutput {
	return o
}

func (o RouteTableSelectionPoliciesSelectionPolicyArrayOutput) ToRouteTableSelectionPoliciesSelectionPolicyArrayOutputWithContext(ctx context.Context) RouteTableSelectionPoliciesSelectionPolicyArrayOutput {
	return o
}

func (o RouteTableSelectionPoliciesSelectionPolicyArrayOutput) Index(i pulumi.IntInput) RouteTableSelectionPoliciesSelectionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableSelectionPoliciesSelectionPolicy {
		return vs[0].([]RouteTableSelectionPoliciesSelectionPolicy)[vs[1].(int)]
	}).(RouteTableSelectionPoliciesSelectionPolicyOutput)
}

type GetBandwidthLimitsLimit struct {
	// Limitation of bandwidth.
	BandwidthLimit int `pulumi:"bandwidthLimit"`
	// Destination area restriction.
	DstRegion string `pulumi:"dstRegion"`
	// Limitation of region.
	Region string `pulumi:"region"`
}

// GetBandwidthLimitsLimitInput is an input type that accepts GetBandwidthLimitsLimitArgs and GetBandwidthLimitsLimitOutput values.
// You can construct a concrete instance of `GetBandwidthLimitsLimitInput` via:
//
//	GetBandwidthLimitsLimitArgs{...}
type GetBandwidthLimitsLimitInput interface {
	pulumi.Input

	ToGetBandwidthLimitsLimitOutput() GetBandwidthLimitsLimitOutput
	ToGetBandwidthLimitsLimitOutputWithContext(context.Context) GetBandwidthLimitsLimitOutput
}

type GetBandwidthLimitsLimitArgs struct {
	// Limitation of bandwidth.
	BandwidthLimit pulumi.IntInput `pulumi:"bandwidthLimit"`
	// Destination area restriction.
	DstRegion pulumi.StringInput `pulumi:"dstRegion"`
	// Limitation of region.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetBandwidthLimitsLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthLimitsLimit)(nil)).Elem()
}

func (i GetBandwidthLimitsLimitArgs) ToGetBandwidthLimitsLimitOutput() GetBandwidthLimitsLimitOutput {
	return i.ToGetBandwidthLimitsLimitOutputWithContext(context.Background())
}

func (i GetBandwidthLimitsLimitArgs) ToGetBandwidthLimitsLimitOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthLimitsLimitOutput)
}

// GetBandwidthLimitsLimitArrayInput is an input type that accepts GetBandwidthLimitsLimitArray and GetBandwidthLimitsLimitArrayOutput values.
// You can construct a concrete instance of `GetBandwidthLimitsLimitArrayInput` via:
//
//	GetBandwidthLimitsLimitArray{ GetBandwidthLimitsLimitArgs{...} }
type GetBandwidthLimitsLimitArrayInput interface {
	pulumi.Input

	ToGetBandwidthLimitsLimitArrayOutput() GetBandwidthLimitsLimitArrayOutput
	ToGetBandwidthLimitsLimitArrayOutputWithContext(context.Context) GetBandwidthLimitsLimitArrayOutput
}

type GetBandwidthLimitsLimitArray []GetBandwidthLimitsLimitInput

func (GetBandwidthLimitsLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthLimitsLimit)(nil)).Elem()
}

func (i GetBandwidthLimitsLimitArray) ToGetBandwidthLimitsLimitArrayOutput() GetBandwidthLimitsLimitArrayOutput {
	return i.ToGetBandwidthLimitsLimitArrayOutputWithContext(context.Background())
}

func (i GetBandwidthLimitsLimitArray) ToGetBandwidthLimitsLimitArrayOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthLimitsLimitArrayOutput)
}

type GetBandwidthLimitsLimitOutput struct{ *pulumi.OutputState }

func (GetBandwidthLimitsLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthLimitsLimit)(nil)).Elem()
}

func (o GetBandwidthLimitsLimitOutput) ToGetBandwidthLimitsLimitOutput() GetBandwidthLimitsLimitOutput {
	return o
}

func (o GetBandwidthLimitsLimitOutput) ToGetBandwidthLimitsLimitOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitOutput {
	return o
}

// Limitation of bandwidth.
func (o GetBandwidthLimitsLimitOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) int { return v.BandwidthLimit }).(pulumi.IntOutput)
}

// Destination area restriction.
func (o GetBandwidthLimitsLimitOutput) DstRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) string { return v.DstRegion }).(pulumi.StringOutput)
}

// Limitation of region.
func (o GetBandwidthLimitsLimitOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) string { return v.Region }).(pulumi.StringOutput)
}

type GetBandwidthLimitsLimitArrayOutput struct{ *pulumi.OutputState }

func (GetBandwidthLimitsLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthLimitsLimit)(nil)).Elem()
}

func (o GetBandwidthLimitsLimitArrayOutput) ToGetBandwidthLimitsLimitArrayOutput() GetBandwidthLimitsLimitArrayOutput {
	return o
}

func (o GetBandwidthLimitsLimitArrayOutput) ToGetBandwidthLimitsLimitArrayOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitArrayOutput {
	return o
}

func (o GetBandwidthLimitsLimitArrayOutput) Index(i pulumi.IntInput) GetBandwidthLimitsLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBandwidthLimitsLimit {
		return vs[0].([]GetBandwidthLimitsLimit)[vs[1].(int)]
	}).(GetBandwidthLimitsLimitOutput)
}

type GetCrossBorderFlowMonitorCrossBorderFlowMonitorData struct {
	// in bandwidth, `bps`.
	InBandwidths []int `pulumi:"inBandwidths"`
	// in pkg, `pps`.
	InPkgs []int `pulumi:"inPkgs"`
	// out bandwidth, `bps`.
	OutBandwidths []int `pulumi:"outBandwidths"`
	// out pkg, `pps`.
	OutPkgs []int `pulumi:"outPkgs"`
}

// GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataInput is an input type that accepts GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs and GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput values.
// You can construct a concrete instance of `GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataInput` via:
//
//	GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs{...}
type GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataInput interface {
	pulumi.Input

	ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput() GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput
	ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutputWithContext(context.Context) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput
}

type GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs struct {
	// in bandwidth, `bps`.
	InBandwidths pulumi.IntArrayInput `pulumi:"inBandwidths"`
	// in pkg, `pps`.
	InPkgs pulumi.IntArrayInput `pulumi:"inPkgs"`
	// out bandwidth, `bps`.
	OutBandwidths pulumi.IntArrayInput `pulumi:"outBandwidths"`
	// out pkg, `pps`.
	OutPkgs pulumi.IntArrayInput `pulumi:"outPkgs"`
}

func (GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderFlowMonitorCrossBorderFlowMonitorData)(nil)).Elem()
}

func (i GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput() GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput {
	return i.ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutputWithContext(context.Background())
}

func (i GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutputWithContext(ctx context.Context) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput)
}

// GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayInput is an input type that accepts GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray and GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput values.
// You can construct a concrete instance of `GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayInput` via:
//
//	GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray{ GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs{...} }
type GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayInput interface {
	pulumi.Input

	ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput() GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput
	ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutputWithContext(context.Context) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput
}

type GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray []GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataInput

func (GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderFlowMonitorCrossBorderFlowMonitorData)(nil)).Elem()
}

func (i GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput() GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput {
	return i.ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutputWithContext(context.Background())
}

func (i GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutputWithContext(ctx context.Context) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput)
}

type GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput struct{ *pulumi.OutputState }

func (GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderFlowMonitorCrossBorderFlowMonitorData)(nil)).Elem()
}

func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput() GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput {
	return o
}

func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutputWithContext(ctx context.Context) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput {
	return o
}

// in bandwidth, `bps`.
func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) InBandwidths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetCrossBorderFlowMonitorCrossBorderFlowMonitorData) []int { return v.InBandwidths }).(pulumi.IntArrayOutput)
}

// in pkg, `pps`.
func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) InPkgs() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetCrossBorderFlowMonitorCrossBorderFlowMonitorData) []int { return v.InPkgs }).(pulumi.IntArrayOutput)
}

// out bandwidth, `bps`.
func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) OutBandwidths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetCrossBorderFlowMonitorCrossBorderFlowMonitorData) []int { return v.OutBandwidths }).(pulumi.IntArrayOutput)
}

// out pkg, `pps`.
func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput) OutPkgs() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetCrossBorderFlowMonitorCrossBorderFlowMonitorData) []int { return v.OutPkgs }).(pulumi.IntArrayOutput)
}

type GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput struct{ *pulumi.OutputState }

func (GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderFlowMonitorCrossBorderFlowMonitorData)(nil)).Elem()
}

func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput() GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput {
	return o
}

func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput) ToGetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutputWithContext(ctx context.Context) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput {
	return o
}

func (o GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput) Index(i pulumi.IntInput) GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCrossBorderFlowMonitorCrossBorderFlowMonitorData {
		return vs[0].([]GetCrossBorderFlowMonitorCrossBorderFlowMonitorData)[vs[1].(int)]
	}).(GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput)
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet struct {
	// ccn id.
	CcnId string `pulumi:"ccnId"`
	// bandwidth limit of cross region.
	CcnRegionBandwidthLimits []GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit `pulumi:"ccnRegionBandwidthLimits"`
	// create time.
	CreatedTime string `pulumi:"createdTime"`
	// expired time.
	ExpiredTime string `pulumi:"expiredTime"`
	// `POSTPAID` or `PREPAID`.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// if cross region.
	IsCrossBorder bool `pulumi:"isCrossBorder"`
	// `true` means locked.
	IsSecurityLock bool `pulumi:"isSecurityLock"`
	// market id.
	MarketId string `pulumi:"marketId"`
	// Id of RegionFlowControl.
	RegionFlowControlId string `pulumi:"regionFlowControlId"`
	// renew flag.
	RenewFlag string `pulumi:"renewFlag"`
	// update time.
	UpdateTime string `pulumi:"updateTime"`
	// user account id.
	UserAccountId string `pulumi:"userAccountId"`
}

// GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetInput is an input type that accepts GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs and GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput values.
// You can construct a concrete instance of `GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetInput` via:
//
//	GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs{...}
type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetInput interface {
	pulumi.Input

	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput
	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutputWithContext(context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs struct {
	// ccn id.
	CcnId pulumi.StringInput `pulumi:"ccnId"`
	// bandwidth limit of cross region.
	CcnRegionBandwidthLimits GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayInput `pulumi:"ccnRegionBandwidthLimits"`
	// create time.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// expired time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// `POSTPAID` or `PREPAID`.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// if cross region.
	IsCrossBorder pulumi.BoolInput `pulumi:"isCrossBorder"`
	// `true` means locked.
	IsSecurityLock pulumi.BoolInput `pulumi:"isSecurityLock"`
	// market id.
	MarketId pulumi.StringInput `pulumi:"marketId"`
	// Id of RegionFlowControl.
	RegionFlowControlId pulumi.StringInput `pulumi:"regionFlowControlId"`
	// renew flag.
	RenewFlag pulumi.StringInput `pulumi:"renewFlag"`
	// update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// user account id.
	UserAccountId pulumi.StringInput `pulumi:"userAccountId"`
}

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet)(nil)).Elem()
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput {
	return i.ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutputWithContext(context.Background())
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput)
}

// GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayInput is an input type that accepts GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray and GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput values.
// You can construct a concrete instance of `GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayInput` via:
//
//	GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray{ GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs{...} }
type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayInput interface {
	pulumi.Input

	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput
	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutputWithContext(context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray []GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetInput

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet)(nil)).Elem()
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput {
	return i.ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutputWithContext(context.Background())
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput)
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput struct{ *pulumi.OutputState }

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet)(nil)).Elem()
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput {
	return o
}

// ccn id.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.CcnId }).(pulumi.StringOutput)
}

// bandwidth limit of cross region.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) CcnRegionBandwidthLimits() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) []GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit {
		return v.CcnRegionBandwidthLimits
	}).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput)
}

// create time.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// expired time.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// `POSTPAID` or `PREPAID`.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// if cross region.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) IsCrossBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) bool { return v.IsCrossBorder }).(pulumi.BoolOutput)
}

// `true` means locked.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) IsSecurityLock() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) bool { return v.IsSecurityLock }).(pulumi.BoolOutput)
}

// market id.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) MarketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.MarketId }).(pulumi.StringOutput)
}

// Id of RegionFlowControl.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) RegionFlowControlId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.RegionFlowControlId }).(pulumi.StringOutput)
}

// renew flag.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) RenewFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.RenewFlag }).(pulumi.StringOutput)
}

// update time.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// user account id.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput) UserAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet) string { return v.UserAccountId }).(pulumi.StringOutput)
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput struct{ *pulumi.OutputState }

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet)(nil)).Elem()
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput) Index(i pulumi.IntInput) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet {
		return vs[0].([]GetCrossBorderRegionBandwidthLimitsCcnBandwidthSet)[vs[1].(int)]
	}).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput)
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit struct {
	// bandwidth list(Mbps).
	BandwidthLimit int `pulumi:"bandwidthLimit"`
	// destination region, such as.
	DestinationRegion string `pulumi:"destinationRegion"`
	// source region, such as &#39;ap-shanghai&#39;.
	SourceRegion string `pulumi:"sourceRegion"`
}

// GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitInput is an input type that accepts GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs and GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput values.
// You can construct a concrete instance of `GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitInput` via:
//
//	GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs{...}
type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitInput interface {
	pulumi.Input

	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput
	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutputWithContext(context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs struct {
	// bandwidth list(Mbps).
	BandwidthLimit pulumi.IntInput `pulumi:"bandwidthLimit"`
	// destination region, such as.
	DestinationRegion pulumi.StringInput `pulumi:"destinationRegion"`
	// source region, such as &#39;ap-shanghai&#39;.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
}

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit)(nil)).Elem()
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput {
	return i.ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutputWithContext(context.Background())
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput)
}

// GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayInput is an input type that accepts GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray and GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput values.
// You can construct a concrete instance of `GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayInput` via:
//
//	GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray{ GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs{...} }
type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayInput interface {
	pulumi.Input

	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput
	ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutputWithContext(context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray []GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitInput

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit)(nil)).Elem()
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput {
	return i.ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutputWithContext(context.Background())
}

func (i GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput)
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput struct{ *pulumi.OutputState }

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit)(nil)).Elem()
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput {
	return o
}

// bandwidth list(Mbps).
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit) int {
		return v.BandwidthLimit
	}).(pulumi.IntOutput)
}

// destination region, such as.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput) DestinationRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit) string {
		return v.DestinationRegion
	}).(pulumi.StringOutput)
}

// source region, such as &#39;ap-shanghai&#39;.
func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit) string {
		return v.SourceRegion
	}).(pulumi.StringOutput)
}

type GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput struct{ *pulumi.OutputState }

func (GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit)(nil)).Elem()
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput() GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput) ToGetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput) Index(i pulumi.IntInput) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit {
		return vs[0].([]GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimit)[vs[1].(int)]
	}).(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput)
}

type GetCrossBorderRegionBandwidthLimitsFilter struct {
	// attribute name.
	Name string `pulumi:"name"`
	// Value of the field.
	Values []string `pulumi:"values"`
}

// GetCrossBorderRegionBandwidthLimitsFilterInput is an input type that accepts GetCrossBorderRegionBandwidthLimitsFilterArgs and GetCrossBorderRegionBandwidthLimitsFilterOutput values.
// You can construct a concrete instance of `GetCrossBorderRegionBandwidthLimitsFilterInput` via:
//
//	GetCrossBorderRegionBandwidthLimitsFilterArgs{...}
type GetCrossBorderRegionBandwidthLimitsFilterInput interface {
	pulumi.Input

	ToGetCrossBorderRegionBandwidthLimitsFilterOutput() GetCrossBorderRegionBandwidthLimitsFilterOutput
	ToGetCrossBorderRegionBandwidthLimitsFilterOutputWithContext(context.Context) GetCrossBorderRegionBandwidthLimitsFilterOutput
}

type GetCrossBorderRegionBandwidthLimitsFilterArgs struct {
	// attribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCrossBorderRegionBandwidthLimitsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsFilter)(nil)).Elem()
}

func (i GetCrossBorderRegionBandwidthLimitsFilterArgs) ToGetCrossBorderRegionBandwidthLimitsFilterOutput() GetCrossBorderRegionBandwidthLimitsFilterOutput {
	return i.ToGetCrossBorderRegionBandwidthLimitsFilterOutputWithContext(context.Background())
}

func (i GetCrossBorderRegionBandwidthLimitsFilterArgs) ToGetCrossBorderRegionBandwidthLimitsFilterOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderRegionBandwidthLimitsFilterOutput)
}

// GetCrossBorderRegionBandwidthLimitsFilterArrayInput is an input type that accepts GetCrossBorderRegionBandwidthLimitsFilterArray and GetCrossBorderRegionBandwidthLimitsFilterArrayOutput values.
// You can construct a concrete instance of `GetCrossBorderRegionBandwidthLimitsFilterArrayInput` via:
//
//	GetCrossBorderRegionBandwidthLimitsFilterArray{ GetCrossBorderRegionBandwidthLimitsFilterArgs{...} }
type GetCrossBorderRegionBandwidthLimitsFilterArrayInput interface {
	pulumi.Input

	ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutput() GetCrossBorderRegionBandwidthLimitsFilterArrayOutput
	ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutputWithContext(context.Context) GetCrossBorderRegionBandwidthLimitsFilterArrayOutput
}

type GetCrossBorderRegionBandwidthLimitsFilterArray []GetCrossBorderRegionBandwidthLimitsFilterInput

func (GetCrossBorderRegionBandwidthLimitsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderRegionBandwidthLimitsFilter)(nil)).Elem()
}

func (i GetCrossBorderRegionBandwidthLimitsFilterArray) ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutput() GetCrossBorderRegionBandwidthLimitsFilterArrayOutput {
	return i.ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutputWithContext(context.Background())
}

func (i GetCrossBorderRegionBandwidthLimitsFilterArray) ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCrossBorderRegionBandwidthLimitsFilterArrayOutput)
}

type GetCrossBorderRegionBandwidthLimitsFilterOutput struct{ *pulumi.OutputState }

func (GetCrossBorderRegionBandwidthLimitsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsFilter)(nil)).Elem()
}

func (o GetCrossBorderRegionBandwidthLimitsFilterOutput) ToGetCrossBorderRegionBandwidthLimitsFilterOutput() GetCrossBorderRegionBandwidthLimitsFilterOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsFilterOutput) ToGetCrossBorderRegionBandwidthLimitsFilterOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsFilterOutput {
	return o
}

// attribute name.
func (o GetCrossBorderRegionBandwidthLimitsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the field.
func (o GetCrossBorderRegionBandwidthLimitsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCrossBorderRegionBandwidthLimitsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCrossBorderRegionBandwidthLimitsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCrossBorderRegionBandwidthLimitsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCrossBorderRegionBandwidthLimitsFilter)(nil)).Elem()
}

func (o GetCrossBorderRegionBandwidthLimitsFilterArrayOutput) ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutput() GetCrossBorderRegionBandwidthLimitsFilterArrayOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsFilterArrayOutput) ToGetCrossBorderRegionBandwidthLimitsFilterArrayOutputWithContext(ctx context.Context) GetCrossBorderRegionBandwidthLimitsFilterArrayOutput {
	return o
}

func (o GetCrossBorderRegionBandwidthLimitsFilterArrayOutput) Index(i pulumi.IntInput) GetCrossBorderRegionBandwidthLimitsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCrossBorderRegionBandwidthLimitsFilter {
		return vs[0].([]GetCrossBorderRegionBandwidthLimitsFilter)[vs[1].(int)]
	}).(GetCrossBorderRegionBandwidthLimitsFilterOutput)
}

type GetInstancesInstanceList struct {
	// Information list of instance is attached.
	AttachmentLists []GetInstancesInstanceListAttachmentList `pulumi:"attachmentLists"`
	// The speed limit type.
	BandwidthLimitType string `pulumi:"bandwidthLimitType"`
	// ID of the CCN to be queried.
	CcnId string `pulumi:"ccnId"`
	// Billing mode.
	ChargeType string `pulumi:"chargeType"`
	// Creation time of resource.
	CreateTime string `pulumi:"createTime"`
	// Description of the CCN.
	Description string `pulumi:"description"`
	// Name of the CCN to be queried.
	Name string `pulumi:"name"`
	// Service quality of CCN, and the available value include 'PT', 'AU', 'AG'. The default is 'AU'.
	Qos string `pulumi:"qos"`
	// States of instance. The available value include 'ISOLATED'(arrears) and 'AVAILABLE'.
	State string `pulumi:"state"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//	GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	// Information list of instance is attached.
	AttachmentLists GetInstancesInstanceListAttachmentListArrayInput `pulumi:"attachmentLists"`
	// The speed limit type.
	BandwidthLimitType pulumi.StringInput `pulumi:"bandwidthLimitType"`
	// ID of the CCN to be queried.
	CcnId pulumi.StringInput `pulumi:"ccnId"`
	// Billing mode.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Creation time of resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of the CCN.
	Description pulumi.StringInput `pulumi:"description"`
	// Name of the CCN to be queried.
	Name pulumi.StringInput `pulumi:"name"`
	// Service quality of CCN, and the available value include 'PT', 'AU', 'AG'. The default is 'AU'.
	Qos pulumi.StringInput `pulumi:"qos"`
	// States of instance. The available value include 'ISOLATED'(arrears) and 'AVAILABLE'.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//	GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

// Information list of instance is attached.
func (o GetInstancesInstanceListOutput) AttachmentLists() GetInstancesInstanceListAttachmentListArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []GetInstancesInstanceListAttachmentList { return v.AttachmentLists }).(GetInstancesInstanceListAttachmentListArrayOutput)
}

// The speed limit type.
func (o GetInstancesInstanceListOutput) BandwidthLimitType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.BandwidthLimitType }).(pulumi.StringOutput)
}

// ID of the CCN to be queried.
func (o GetInstancesInstanceListOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CcnId }).(pulumi.StringOutput)
}

// Billing mode.
func (o GetInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Creation time of resource.
func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the CCN.
func (o GetInstancesInstanceListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Description }).(pulumi.StringOutput)
}

// Name of the CCN to be queried.
func (o GetInstancesInstanceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Name }).(pulumi.StringOutput)
}

// Service quality of CCN, and the available value include 'PT', 'AU', 'AG'. The default is 'AU'.
func (o GetInstancesInstanceListOutput) Qos() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Qos }).(pulumi.StringOutput)
}

// States of instance. The available value include 'ISOLATED'(arrears) and 'AVAILABLE'.
func (o GetInstancesInstanceListOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.State }).(pulumi.StringOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetInstancesInstanceListAttachmentList struct {
	// Time of attaching.
	AttachedTime string `pulumi:"attachedTime"`
	// A network address block of the instance that is attached.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// ID of instance is attached.
	InstanceId string `pulumi:"instanceId"`
	// The region that the instance locates at.
	InstanceRegion string `pulumi:"instanceRegion"`
	// Type of attached instance network, and available values include VPC, DIRECTCONNECT, BMVPC and VPNGW.
	InstanceType string `pulumi:"instanceType"`
	// States of instance. The available value include 'ISOLATED'(arrears) and 'AVAILABLE'.
	State string `pulumi:"state"`
}

// GetInstancesInstanceListAttachmentListInput is an input type that accepts GetInstancesInstanceListAttachmentListArgs and GetInstancesInstanceListAttachmentListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListAttachmentListInput` via:
//
//	GetInstancesInstanceListAttachmentListArgs{...}
type GetInstancesInstanceListAttachmentListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListAttachmentListOutput() GetInstancesInstanceListAttachmentListOutput
	ToGetInstancesInstanceListAttachmentListOutputWithContext(context.Context) GetInstancesInstanceListAttachmentListOutput
}

type GetInstancesInstanceListAttachmentListArgs struct {
	// Time of attaching.
	AttachedTime pulumi.StringInput `pulumi:"attachedTime"`
	// A network address block of the instance that is attached.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// ID of instance is attached.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The region that the instance locates at.
	InstanceRegion pulumi.StringInput `pulumi:"instanceRegion"`
	// Type of attached instance network, and available values include VPC, DIRECTCONNECT, BMVPC and VPNGW.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// States of instance. The available value include 'ISOLATED'(arrears) and 'AVAILABLE'.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetInstancesInstanceListAttachmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListAttachmentList)(nil)).Elem()
}

func (i GetInstancesInstanceListAttachmentListArgs) ToGetInstancesInstanceListAttachmentListOutput() GetInstancesInstanceListAttachmentListOutput {
	return i.ToGetInstancesInstanceListAttachmentListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListAttachmentListArgs) ToGetInstancesInstanceListAttachmentListOutputWithContext(ctx context.Context) GetInstancesInstanceListAttachmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListAttachmentListOutput)
}

// GetInstancesInstanceListAttachmentListArrayInput is an input type that accepts GetInstancesInstanceListAttachmentListArray and GetInstancesInstanceListAttachmentListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListAttachmentListArrayInput` via:
//
//	GetInstancesInstanceListAttachmentListArray{ GetInstancesInstanceListAttachmentListArgs{...} }
type GetInstancesInstanceListAttachmentListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListAttachmentListArrayOutput() GetInstancesInstanceListAttachmentListArrayOutput
	ToGetInstancesInstanceListAttachmentListArrayOutputWithContext(context.Context) GetInstancesInstanceListAttachmentListArrayOutput
}

type GetInstancesInstanceListAttachmentListArray []GetInstancesInstanceListAttachmentListInput

func (GetInstancesInstanceListAttachmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListAttachmentList)(nil)).Elem()
}

func (i GetInstancesInstanceListAttachmentListArray) ToGetInstancesInstanceListAttachmentListArrayOutput() GetInstancesInstanceListAttachmentListArrayOutput {
	return i.ToGetInstancesInstanceListAttachmentListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListAttachmentListArray) ToGetInstancesInstanceListAttachmentListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListAttachmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListAttachmentListArrayOutput)
}

type GetInstancesInstanceListAttachmentListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListAttachmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListAttachmentList)(nil)).Elem()
}

func (o GetInstancesInstanceListAttachmentListOutput) ToGetInstancesInstanceListAttachmentListOutput() GetInstancesInstanceListAttachmentListOutput {
	return o
}

func (o GetInstancesInstanceListAttachmentListOutput) ToGetInstancesInstanceListAttachmentListOutputWithContext(ctx context.Context) GetInstancesInstanceListAttachmentListOutput {
	return o
}

// Time of attaching.
func (o GetInstancesInstanceListAttachmentListOutput) AttachedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListAttachmentList) string { return v.AttachedTime }).(pulumi.StringOutput)
}

// A network address block of the instance that is attached.
func (o GetInstancesInstanceListAttachmentListOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceListAttachmentList) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// ID of instance is attached.
func (o GetInstancesInstanceListAttachmentListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListAttachmentList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The region that the instance locates at.
func (o GetInstancesInstanceListAttachmentListOutput) InstanceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListAttachmentList) string { return v.InstanceRegion }).(pulumi.StringOutput)
}

// Type of attached instance network, and available values include VPC, DIRECTCONNECT, BMVPC and VPNGW.
func (o GetInstancesInstanceListAttachmentListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListAttachmentList) string { return v.InstanceType }).(pulumi.StringOutput)
}

// States of instance. The available value include 'ISOLATED'(arrears) and 'AVAILABLE'.
func (o GetInstancesInstanceListAttachmentListOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListAttachmentList) string { return v.State }).(pulumi.StringOutput)
}

type GetInstancesInstanceListAttachmentListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListAttachmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListAttachmentList)(nil)).Elem()
}

func (o GetInstancesInstanceListAttachmentListArrayOutput) ToGetInstancesInstanceListAttachmentListArrayOutput() GetInstancesInstanceListAttachmentListArrayOutput {
	return o
}

func (o GetInstancesInstanceListAttachmentListArrayOutput) ToGetInstancesInstanceListAttachmentListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListAttachmentListArrayOutput {
	return o
}

func (o GetInstancesInstanceListAttachmentListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListAttachmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceListAttachmentList {
		return vs[0].([]GetInstancesInstanceListAttachmentList)[vs[1].(int)]
	}).(GetInstancesInstanceListAttachmentListOutput)
}

type GetRoutesFilter struct {
	// Field to be filtered. Support `route-id`, `cidr-block`, `instance-type`, `instance-region`, `instance-id`, `route-table-id`.
	Name string `pulumi:"name"`
	// Filter value of the field.
	Values []string `pulumi:"values"`
}

// GetRoutesFilterInput is an input type that accepts GetRoutesFilterArgs and GetRoutesFilterOutput values.
// You can construct a concrete instance of `GetRoutesFilterInput` via:
//
//	GetRoutesFilterArgs{...}
type GetRoutesFilterInput interface {
	pulumi.Input

	ToGetRoutesFilterOutput() GetRoutesFilterOutput
	ToGetRoutesFilterOutputWithContext(context.Context) GetRoutesFilterOutput
}

type GetRoutesFilterArgs struct {
	// Field to be filtered. Support `route-id`, `cidr-block`, `instance-type`, `instance-region`, `instance-id`, `route-table-id`.
	Name pulumi.StringInput `pulumi:"name"`
	// Filter value of the field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRoutesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesFilter)(nil)).Elem()
}

func (i GetRoutesFilterArgs) ToGetRoutesFilterOutput() GetRoutesFilterOutput {
	return i.ToGetRoutesFilterOutputWithContext(context.Background())
}

func (i GetRoutesFilterArgs) ToGetRoutesFilterOutputWithContext(ctx context.Context) GetRoutesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesFilterOutput)
}

// GetRoutesFilterArrayInput is an input type that accepts GetRoutesFilterArray and GetRoutesFilterArrayOutput values.
// You can construct a concrete instance of `GetRoutesFilterArrayInput` via:
//
//	GetRoutesFilterArray{ GetRoutesFilterArgs{...} }
type GetRoutesFilterArrayInput interface {
	pulumi.Input

	ToGetRoutesFilterArrayOutput() GetRoutesFilterArrayOutput
	ToGetRoutesFilterArrayOutputWithContext(context.Context) GetRoutesFilterArrayOutput
}

type GetRoutesFilterArray []GetRoutesFilterInput

func (GetRoutesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesFilter)(nil)).Elem()
}

func (i GetRoutesFilterArray) ToGetRoutesFilterArrayOutput() GetRoutesFilterArrayOutput {
	return i.ToGetRoutesFilterArrayOutputWithContext(context.Background())
}

func (i GetRoutesFilterArray) ToGetRoutesFilterArrayOutputWithContext(ctx context.Context) GetRoutesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesFilterArrayOutput)
}

type GetRoutesFilterOutput struct{ *pulumi.OutputState }

func (GetRoutesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesFilter)(nil)).Elem()
}

func (o GetRoutesFilterOutput) ToGetRoutesFilterOutput() GetRoutesFilterOutput {
	return o
}

func (o GetRoutesFilterOutput) ToGetRoutesFilterOutputWithContext(ctx context.Context) GetRoutesFilterOutput {
	return o
}

// Field to be filtered. Support `route-id`, `cidr-block`, `instance-type`, `instance-region`, `instance-id`, `route-table-id`.
func (o GetRoutesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Filter value of the field.
func (o GetRoutesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRoutesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRoutesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRoutesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesFilter)(nil)).Elem()
}

func (o GetRoutesFilterArrayOutput) ToGetRoutesFilterArrayOutput() GetRoutesFilterArrayOutput {
	return o
}

func (o GetRoutesFilterArrayOutput) ToGetRoutesFilterArrayOutputWithContext(ctx context.Context) GetRoutesFilterArrayOutput {
	return o
}

func (o GetRoutesFilterArrayOutput) Index(i pulumi.IntInput) GetRoutesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutesFilter {
		return vs[0].([]GetRoutesFilter)[vs[1].(int)]
	}).(GetRoutesFilterOutput)
}

type GetRoutesRouteList struct {
	// Destination.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// Is routing enabled.
	Enabled bool `pulumi:"enabled"`
	// Extension status of routing.
	ExtraState string `pulumi:"extraState"`
	// Next hop extension name (associated instance extension name).
	InstanceExtraName string `pulumi:"instanceExtraName"`
	// Next jump (associated instance ID).
	InstanceId string `pulumi:"instanceId"`
	// Next jump (associated instance name).
	InstanceName string `pulumi:"instanceName"`
	// Next jump (associated instance region).
	InstanceRegion string `pulumi:"instanceRegion"`
	// Next hop type (associated instance type), all types: VPC, DIRECTCONNECT.
	InstanceType string `pulumi:"instanceType"`
	// The UIN (root account) to which the associated instance belongs.
	InstanceUin string `pulumi:"instanceUin"`
	// Is it dynamic routing.
	IsBgp bool `pulumi:"isBgp"`
	// route ID.
	RouteId string `pulumi:"routeId"`
	// Routing priority.
	RoutePriority int `pulumi:"routePriority"`
	// update time.
	UpdateTime string `pulumi:"updateTime"`
}

// GetRoutesRouteListInput is an input type that accepts GetRoutesRouteListArgs and GetRoutesRouteListOutput values.
// You can construct a concrete instance of `GetRoutesRouteListInput` via:
//
//	GetRoutesRouteListArgs{...}
type GetRoutesRouteListInput interface {
	pulumi.Input

	ToGetRoutesRouteListOutput() GetRoutesRouteListOutput
	ToGetRoutesRouteListOutputWithContext(context.Context) GetRoutesRouteListOutput
}

type GetRoutesRouteListArgs struct {
	// Destination.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// Is routing enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Extension status of routing.
	ExtraState pulumi.StringInput `pulumi:"extraState"`
	// Next hop extension name (associated instance extension name).
	InstanceExtraName pulumi.StringInput `pulumi:"instanceExtraName"`
	// Next jump (associated instance ID).
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Next jump (associated instance name).
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Next jump (associated instance region).
	InstanceRegion pulumi.StringInput `pulumi:"instanceRegion"`
	// Next hop type (associated instance type), all types: VPC, DIRECTCONNECT.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The UIN (root account) to which the associated instance belongs.
	InstanceUin pulumi.StringInput `pulumi:"instanceUin"`
	// Is it dynamic routing.
	IsBgp pulumi.BoolInput `pulumi:"isBgp"`
	// route ID.
	RouteId pulumi.StringInput `pulumi:"routeId"`
	// Routing priority.
	RoutePriority pulumi.IntInput `pulumi:"routePriority"`
	// update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetRoutesRouteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesRouteList)(nil)).Elem()
}

func (i GetRoutesRouteListArgs) ToGetRoutesRouteListOutput() GetRoutesRouteListOutput {
	return i.ToGetRoutesRouteListOutputWithContext(context.Background())
}

func (i GetRoutesRouteListArgs) ToGetRoutesRouteListOutputWithContext(ctx context.Context) GetRoutesRouteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesRouteListOutput)
}

// GetRoutesRouteListArrayInput is an input type that accepts GetRoutesRouteListArray and GetRoutesRouteListArrayOutput values.
// You can construct a concrete instance of `GetRoutesRouteListArrayInput` via:
//
//	GetRoutesRouteListArray{ GetRoutesRouteListArgs{...} }
type GetRoutesRouteListArrayInput interface {
	pulumi.Input

	ToGetRoutesRouteListArrayOutput() GetRoutesRouteListArrayOutput
	ToGetRoutesRouteListArrayOutputWithContext(context.Context) GetRoutesRouteListArrayOutput
}

type GetRoutesRouteListArray []GetRoutesRouteListInput

func (GetRoutesRouteListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesRouteList)(nil)).Elem()
}

func (i GetRoutesRouteListArray) ToGetRoutesRouteListArrayOutput() GetRoutesRouteListArrayOutput {
	return i.ToGetRoutesRouteListArrayOutputWithContext(context.Background())
}

func (i GetRoutesRouteListArray) ToGetRoutesRouteListArrayOutputWithContext(ctx context.Context) GetRoutesRouteListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesRouteListArrayOutput)
}

type GetRoutesRouteListOutput struct{ *pulumi.OutputState }

func (GetRoutesRouteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesRouteList)(nil)).Elem()
}

func (o GetRoutesRouteListOutput) ToGetRoutesRouteListOutput() GetRoutesRouteListOutput {
	return o
}

func (o GetRoutesRouteListOutput) ToGetRoutesRouteListOutputWithContext(ctx context.Context) GetRoutesRouteListOutput {
	return o
}

// Destination.
func (o GetRoutesRouteListOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// Is routing enabled.
func (o GetRoutesRouteListOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRouteList) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Extension status of routing.
func (o GetRoutesRouteListOutput) ExtraState() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.ExtraState }).(pulumi.StringOutput)
}

// Next hop extension name (associated instance extension name).
func (o GetRoutesRouteListOutput) InstanceExtraName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.InstanceExtraName }).(pulumi.StringOutput)
}

// Next jump (associated instance ID).
func (o GetRoutesRouteListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Next jump (associated instance name).
func (o GetRoutesRouteListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Next jump (associated instance region).
func (o GetRoutesRouteListOutput) InstanceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.InstanceRegion }).(pulumi.StringOutput)
}

// Next hop type (associated instance type), all types: VPC, DIRECTCONNECT.
func (o GetRoutesRouteListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The UIN (root account) to which the associated instance belongs.
func (o GetRoutesRouteListOutput) InstanceUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.InstanceUin }).(pulumi.StringOutput)
}

// Is it dynamic routing.
func (o GetRoutesRouteListOutput) IsBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRouteList) bool { return v.IsBgp }).(pulumi.BoolOutput)
}

// route ID.
func (o GetRoutesRouteListOutput) RouteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.RouteId }).(pulumi.StringOutput)
}

// Routing priority.
func (o GetRoutesRouteListOutput) RoutePriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutesRouteList) int { return v.RoutePriority }).(pulumi.IntOutput)
}

// update time.
func (o GetRoutesRouteListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRouteList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetRoutesRouteListArrayOutput struct{ *pulumi.OutputState }

func (GetRoutesRouteListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesRouteList)(nil)).Elem()
}

func (o GetRoutesRouteListArrayOutput) ToGetRoutesRouteListArrayOutput() GetRoutesRouteListArrayOutput {
	return o
}

func (o GetRoutesRouteListArrayOutput) ToGetRoutesRouteListArrayOutputWithContext(ctx context.Context) GetRoutesRouteListArrayOutput {
	return o
}

func (o GetRoutesRouteListArrayOutput) Index(i pulumi.IntInput) GetRoutesRouteListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutesRouteList {
		return vs[0].([]GetRoutesRouteList)[vs[1].(int)]
	}).(GetRoutesRouteListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesAcceptAttachInstanceInput)(nil)).Elem(), InstancesAcceptAttachInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesAcceptAttachInstanceArrayInput)(nil)).Elem(), InstancesAcceptAttachInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRejectAttachInstanceInput)(nil)).Elem(), InstancesRejectAttachInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRejectAttachInstanceArrayInput)(nil)).Elem(), InstancesRejectAttachInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesResetAttachInstanceInput)(nil)).Elem(), InstancesResetAttachInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesResetAttachInstanceArrayInput)(nil)).Elem(), InstancesResetAttachInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociateInstanceConfigInstanceInput)(nil)).Elem(), RouteTableAssociateInstanceConfigInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociateInstanceConfigInstanceArrayInput)(nil)).Elem(), RouteTableAssociateInstanceConfigInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyInput)(nil)).Elem(), RouteTableBroadcastPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyArrayInput)(nil)).Elem(), RouteTableBroadcastPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyBroadcastConditionInput)(nil)).Elem(), RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayInput)(nil)).Elem(), RouteTableBroadcastPoliciesPolicyBroadcastConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyRouteConditionInput)(nil)).Elem(), RouteTableBroadcastPoliciesPolicyRouteConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesPolicyRouteConditionArrayInput)(nil)).Elem(), RouteTableBroadcastPoliciesPolicyRouteConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableInputPoliciesPolicyInput)(nil)).Elem(), RouteTableInputPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableInputPoliciesPolicyArrayInput)(nil)).Elem(), RouteTableInputPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableInputPoliciesPolicyRouteConditionInput)(nil)).Elem(), RouteTableInputPoliciesPolicyRouteConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableInputPoliciesPolicyRouteConditionArrayInput)(nil)).Elem(), RouteTableInputPoliciesPolicyRouteConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableSelectionPoliciesSelectionPolicyInput)(nil)).Elem(), RouteTableSelectionPoliciesSelectionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableSelectionPoliciesSelectionPolicyArrayInput)(nil)).Elem(), RouteTableSelectionPoliciesSelectionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthLimitsLimitInput)(nil)).Elem(), GetBandwidthLimitsLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthLimitsLimitArrayInput)(nil)).Elem(), GetBandwidthLimitsLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataInput)(nil)).Elem(), GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayInput)(nil)).Elem(), GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetInput)(nil)).Elem(), GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayInput)(nil)).Elem(), GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitInput)(nil)).Elem(), GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayInput)(nil)).Elem(), GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsFilterInput)(nil)).Elem(), GetCrossBorderRegionBandwidthLimitsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCrossBorderRegionBandwidthLimitsFilterArrayInput)(nil)).Elem(), GetCrossBorderRegionBandwidthLimitsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListAttachmentListInput)(nil)).Elem(), GetInstancesInstanceListAttachmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListAttachmentListArrayInput)(nil)).Elem(), GetInstancesInstanceListAttachmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesFilterInput)(nil)).Elem(), GetRoutesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesFilterArrayInput)(nil)).Elem(), GetRoutesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesRouteListInput)(nil)).Elem(), GetRoutesRouteListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesRouteListArrayInput)(nil)).Elem(), GetRoutesRouteListArray{})
	pulumi.RegisterOutputType(InstancesAcceptAttachInstanceOutput{})
	pulumi.RegisterOutputType(InstancesAcceptAttachInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesRejectAttachInstanceOutput{})
	pulumi.RegisterOutputType(InstancesRejectAttachInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesResetAttachInstanceOutput{})
	pulumi.RegisterOutputType(InstancesResetAttachInstanceArrayOutput{})
	pulumi.RegisterOutputType(RouteTableAssociateInstanceConfigInstanceOutput{})
	pulumi.RegisterOutputType(RouteTableAssociateInstanceConfigInstanceArrayOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesPolicyBroadcastConditionOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesPolicyBroadcastConditionArrayOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesPolicyRouteConditionOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesPolicyRouteConditionArrayOutput{})
	pulumi.RegisterOutputType(RouteTableInputPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(RouteTableInputPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(RouteTableInputPoliciesPolicyRouteConditionOutput{})
	pulumi.RegisterOutputType(RouteTableInputPoliciesPolicyRouteConditionArrayOutput{})
	pulumi.RegisterOutputType(RouteTableSelectionPoliciesSelectionPolicyOutput{})
	pulumi.RegisterOutputType(RouteTableSelectionPoliciesSelectionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetBandwidthLimitsLimitOutput{})
	pulumi.RegisterOutputType(GetBandwidthLimitsLimitArrayOutput{})
	pulumi.RegisterOutputType(GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataOutput{})
	pulumi.RegisterOutputType(GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataArrayOutput{})
	pulumi.RegisterOutputType(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetOutput{})
	pulumi.RegisterOutputType(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetArrayOutput{})
	pulumi.RegisterOutputType(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitOutput{})
	pulumi.RegisterOutputType(GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetCcnRegionBandwidthLimitArrayOutput{})
	pulumi.RegisterOutputType(GetCrossBorderRegionBandwidthLimitsFilterOutput{})
	pulumi.RegisterOutputType(GetCrossBorderRegionBandwidthLimitsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListAttachmentListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListAttachmentListArrayOutput{})
	pulumi.RegisterOutputType(GetRoutesFilterOutput{})
	pulumi.RegisterOutputType(GetRoutesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRoutesRouteListOutput{})
	pulumi.RegisterOutputType(GetRoutesRouteListArrayOutput{})
}
