// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ccn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a vpc ccn_instances_reject_attach, you can use this resource to approve cross-region attachment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ccn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ccn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ccn.NewInstancesRejectAttach(ctx, "ccnInstancesRejectAttach", &Ccn.InstancesRejectAttachArgs{
//				CcnId: pulumi.String("ccn-39lqkygf"),
//				Instances: ccn.InstancesRejectAttachInstanceArray{
//					&ccn.InstancesRejectAttachInstanceArgs{
//						InstanceId:     pulumi.String("vpc-j9yhbzpn"),
//						InstanceRegion: pulumi.String("ap-guangzhou"),
//						InstanceType:   pulumi.String("VPC"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type InstancesRejectAttach struct {
	pulumi.CustomResourceState

	// CCN Instance ID.
	CcnId pulumi.StringOutput `pulumi:"ccnId"`
	// Reject List Of Attachment Instances.
	Instances InstancesRejectAttachInstanceArrayOutput `pulumi:"instances"`
}

// NewInstancesRejectAttach registers a new resource with the given unique name, arguments, and options.
func NewInstancesRejectAttach(ctx *pulumi.Context,
	name string, args *InstancesRejectAttachArgs, opts ...pulumi.ResourceOption) (*InstancesRejectAttach, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CcnId == nil {
		return nil, errors.New("invalid value for required argument 'CcnId'")
	}
	if args.Instances == nil {
		return nil, errors.New("invalid value for required argument 'Instances'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InstancesRejectAttach
	err := ctx.RegisterResource("tencentcloud:Ccn/instancesRejectAttach:InstancesRejectAttach", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstancesRejectAttach gets an existing InstancesRejectAttach resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstancesRejectAttach(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstancesRejectAttachState, opts ...pulumi.ResourceOption) (*InstancesRejectAttach, error) {
	var resource InstancesRejectAttach
	err := ctx.ReadResource("tencentcloud:Ccn/instancesRejectAttach:InstancesRejectAttach", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstancesRejectAttach resources.
type instancesRejectAttachState struct {
	// CCN Instance ID.
	CcnId *string `pulumi:"ccnId"`
	// Reject List Of Attachment Instances.
	Instances []InstancesRejectAttachInstance `pulumi:"instances"`
}

type InstancesRejectAttachState struct {
	// CCN Instance ID.
	CcnId pulumi.StringPtrInput
	// Reject List Of Attachment Instances.
	Instances InstancesRejectAttachInstanceArrayInput
}

func (InstancesRejectAttachState) ElementType() reflect.Type {
	return reflect.TypeOf((*instancesRejectAttachState)(nil)).Elem()
}

type instancesRejectAttachArgs struct {
	// CCN Instance ID.
	CcnId string `pulumi:"ccnId"`
	// Reject List Of Attachment Instances.
	Instances []InstancesRejectAttachInstance `pulumi:"instances"`
}

// The set of arguments for constructing a InstancesRejectAttach resource.
type InstancesRejectAttachArgs struct {
	// CCN Instance ID.
	CcnId pulumi.StringInput
	// Reject List Of Attachment Instances.
	Instances InstancesRejectAttachInstanceArrayInput
}

func (InstancesRejectAttachArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instancesRejectAttachArgs)(nil)).Elem()
}

type InstancesRejectAttachInput interface {
	pulumi.Input

	ToInstancesRejectAttachOutput() InstancesRejectAttachOutput
	ToInstancesRejectAttachOutputWithContext(ctx context.Context) InstancesRejectAttachOutput
}

func (*InstancesRejectAttach) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancesRejectAttach)(nil)).Elem()
}

func (i *InstancesRejectAttach) ToInstancesRejectAttachOutput() InstancesRejectAttachOutput {
	return i.ToInstancesRejectAttachOutputWithContext(context.Background())
}

func (i *InstancesRejectAttach) ToInstancesRejectAttachOutputWithContext(ctx context.Context) InstancesRejectAttachOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRejectAttachOutput)
}

// InstancesRejectAttachArrayInput is an input type that accepts InstancesRejectAttachArray and InstancesRejectAttachArrayOutput values.
// You can construct a concrete instance of `InstancesRejectAttachArrayInput` via:
//
//	InstancesRejectAttachArray{ InstancesRejectAttachArgs{...} }
type InstancesRejectAttachArrayInput interface {
	pulumi.Input

	ToInstancesRejectAttachArrayOutput() InstancesRejectAttachArrayOutput
	ToInstancesRejectAttachArrayOutputWithContext(context.Context) InstancesRejectAttachArrayOutput
}

type InstancesRejectAttachArray []InstancesRejectAttachInput

func (InstancesRejectAttachArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstancesRejectAttach)(nil)).Elem()
}

func (i InstancesRejectAttachArray) ToInstancesRejectAttachArrayOutput() InstancesRejectAttachArrayOutput {
	return i.ToInstancesRejectAttachArrayOutputWithContext(context.Background())
}

func (i InstancesRejectAttachArray) ToInstancesRejectAttachArrayOutputWithContext(ctx context.Context) InstancesRejectAttachArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRejectAttachArrayOutput)
}

// InstancesRejectAttachMapInput is an input type that accepts InstancesRejectAttachMap and InstancesRejectAttachMapOutput values.
// You can construct a concrete instance of `InstancesRejectAttachMapInput` via:
//
//	InstancesRejectAttachMap{ "key": InstancesRejectAttachArgs{...} }
type InstancesRejectAttachMapInput interface {
	pulumi.Input

	ToInstancesRejectAttachMapOutput() InstancesRejectAttachMapOutput
	ToInstancesRejectAttachMapOutputWithContext(context.Context) InstancesRejectAttachMapOutput
}

type InstancesRejectAttachMap map[string]InstancesRejectAttachInput

func (InstancesRejectAttachMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstancesRejectAttach)(nil)).Elem()
}

func (i InstancesRejectAttachMap) ToInstancesRejectAttachMapOutput() InstancesRejectAttachMapOutput {
	return i.ToInstancesRejectAttachMapOutputWithContext(context.Background())
}

func (i InstancesRejectAttachMap) ToInstancesRejectAttachMapOutputWithContext(ctx context.Context) InstancesRejectAttachMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRejectAttachMapOutput)
}

type InstancesRejectAttachOutput struct{ *pulumi.OutputState }

func (InstancesRejectAttachOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancesRejectAttach)(nil)).Elem()
}

func (o InstancesRejectAttachOutput) ToInstancesRejectAttachOutput() InstancesRejectAttachOutput {
	return o
}

func (o InstancesRejectAttachOutput) ToInstancesRejectAttachOutputWithContext(ctx context.Context) InstancesRejectAttachOutput {
	return o
}

// CCN Instance ID.
func (o InstancesRejectAttachOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstancesRejectAttach) pulumi.StringOutput { return v.CcnId }).(pulumi.StringOutput)
}

// Reject List Of Attachment Instances.
func (o InstancesRejectAttachOutput) Instances() InstancesRejectAttachInstanceArrayOutput {
	return o.ApplyT(func(v *InstancesRejectAttach) InstancesRejectAttachInstanceArrayOutput { return v.Instances }).(InstancesRejectAttachInstanceArrayOutput)
}

type InstancesRejectAttachArrayOutput struct{ *pulumi.OutputState }

func (InstancesRejectAttachArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstancesRejectAttach)(nil)).Elem()
}

func (o InstancesRejectAttachArrayOutput) ToInstancesRejectAttachArrayOutput() InstancesRejectAttachArrayOutput {
	return o
}

func (o InstancesRejectAttachArrayOutput) ToInstancesRejectAttachArrayOutputWithContext(ctx context.Context) InstancesRejectAttachArrayOutput {
	return o
}

func (o InstancesRejectAttachArrayOutput) Index(i pulumi.IntInput) InstancesRejectAttachOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstancesRejectAttach {
		return vs[0].([]*InstancesRejectAttach)[vs[1].(int)]
	}).(InstancesRejectAttachOutput)
}

type InstancesRejectAttachMapOutput struct{ *pulumi.OutputState }

func (InstancesRejectAttachMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstancesRejectAttach)(nil)).Elem()
}

func (o InstancesRejectAttachMapOutput) ToInstancesRejectAttachMapOutput() InstancesRejectAttachMapOutput {
	return o
}

func (o InstancesRejectAttachMapOutput) ToInstancesRejectAttachMapOutputWithContext(ctx context.Context) InstancesRejectAttachMapOutput {
	return o
}

func (o InstancesRejectAttachMapOutput) MapIndex(k pulumi.StringInput) InstancesRejectAttachOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstancesRejectAttach {
		return vs[0].(map[string]*InstancesRejectAttach)[vs[1].(string)]
	}).(InstancesRejectAttachOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRejectAttachInput)(nil)).Elem(), &InstancesRejectAttach{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRejectAttachArrayInput)(nil)).Elem(), InstancesRejectAttachArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRejectAttachMapInput)(nil)).Elem(), InstancesRejectAttachMap{})
	pulumi.RegisterOutputType(InstancesRejectAttachOutput{})
	pulumi.RegisterOutputType(InstancesRejectAttachArrayOutput{})
	pulumi.RegisterOutputType(InstancesRejectAttachMapOutput{})
}
