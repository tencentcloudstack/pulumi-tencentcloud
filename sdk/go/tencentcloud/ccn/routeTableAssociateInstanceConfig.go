// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ccn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a CCN Route table associate instance config.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ccn"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := "ap-guangzhou"
//			if param := cfg.Get("region"); param != "" {
//				region = param
//			}
//			availabilityZone := "ap-guangzhou-4"
//			if param := cfg.Get("availabilityZone"); param != "" {
//				availabilityZone = param
//			}
//			// create vpc
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			// create subnet
//			_, err = Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(availabilityZone),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("172.16.0.0/24"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			// create ccn
//			exampleInstance, err := Ccn.NewInstance(ctx, "exampleInstance", &Ccn.InstanceArgs{
//				Description:        pulumi.String("desc."),
//				Qos:                pulumi.String("AG"),
//				ChargeType:         pulumi.String("PREPAID"),
//				BandwidthLimitType: pulumi.String("INTER_REGION_LIMIT"),
//				Tags: pulumi.Map{
//					"createBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// create ccn route table
//			exampleRouteTable, err := Ccn.NewRouteTable(ctx, "exampleRouteTable", &Ccn.RouteTableArgs{
//				CcnId:       exampleInstance.ID(),
//				Description: pulumi.String("desc."),
//			})
//			if err != nil {
//				return err
//			}
//			// attachment instance
//			attachment, err := Ccn.NewAttachment(ctx, "attachment", &Ccn.AttachmentArgs{
//				CcnId:          exampleInstance.ID(),
//				InstanceId:     vpc.ID(),
//				InstanceType:   pulumi.String("VPC"),
//				InstanceRegion: pulumi.String(region),
//				RouteTableId:   exampleRouteTable.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// route table associate instance
//			_, err = Ccn.NewRouteTableAssociateInstanceConfig(ctx, "exampleRouteTableAssociateInstanceConfig", &Ccn.RouteTableAssociateInstanceConfigArgs{
//				CcnId:        exampleInstance.ID(),
//				RouteTableId: exampleRouteTable.ID(),
//				Instances: ccn.RouteTableAssociateInstanceConfigInstanceArray{
//					&ccn.RouteTableAssociateInstanceConfigInstanceArgs{
//						InstanceId:   vpc.ID(),
//						InstanceType: pulumi.String("VPC"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				attachment,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Ccn instance can be imported, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Ccn/routeTableAssociateInstanceConfig:RouteTableAssociateInstanceConfig example ccn-gr7nynbd#ccnrtb-jpf7bzn3
// ```
type RouteTableAssociateInstanceConfig struct {
	pulumi.CustomResourceState

	// ID of the CCN.
	CcnId pulumi.StringOutput `pulumi:"ccnId"`
	// Instances list.
	Instances RouteTableAssociateInstanceConfigInstanceArrayOutput `pulumi:"instances"`
	// Ccn instance route table ID.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`
}

// NewRouteTableAssociateInstanceConfig registers a new resource with the given unique name, arguments, and options.
func NewRouteTableAssociateInstanceConfig(ctx *pulumi.Context,
	name string, args *RouteTableAssociateInstanceConfigArgs, opts ...pulumi.ResourceOption) (*RouteTableAssociateInstanceConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CcnId == nil {
		return nil, errors.New("invalid value for required argument 'CcnId'")
	}
	if args.Instances == nil {
		return nil, errors.New("invalid value for required argument 'Instances'")
	}
	if args.RouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'RouteTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteTableAssociateInstanceConfig
	err := ctx.RegisterResource("tencentcloud:Ccn/routeTableAssociateInstanceConfig:RouteTableAssociateInstanceConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteTableAssociateInstanceConfig gets an existing RouteTableAssociateInstanceConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTableAssociateInstanceConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteTableAssociateInstanceConfigState, opts ...pulumi.ResourceOption) (*RouteTableAssociateInstanceConfig, error) {
	var resource RouteTableAssociateInstanceConfig
	err := ctx.ReadResource("tencentcloud:Ccn/routeTableAssociateInstanceConfig:RouteTableAssociateInstanceConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteTableAssociateInstanceConfig resources.
type routeTableAssociateInstanceConfigState struct {
	// ID of the CCN.
	CcnId *string `pulumi:"ccnId"`
	// Instances list.
	Instances []RouteTableAssociateInstanceConfigInstance `pulumi:"instances"`
	// Ccn instance route table ID.
	RouteTableId *string `pulumi:"routeTableId"`
}

type RouteTableAssociateInstanceConfigState struct {
	// ID of the CCN.
	CcnId pulumi.StringPtrInput
	// Instances list.
	Instances RouteTableAssociateInstanceConfigInstanceArrayInput
	// Ccn instance route table ID.
	RouteTableId pulumi.StringPtrInput
}

func (RouteTableAssociateInstanceConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableAssociateInstanceConfigState)(nil)).Elem()
}

type routeTableAssociateInstanceConfigArgs struct {
	// ID of the CCN.
	CcnId string `pulumi:"ccnId"`
	// Instances list.
	Instances []RouteTableAssociateInstanceConfigInstance `pulumi:"instances"`
	// Ccn instance route table ID.
	RouteTableId string `pulumi:"routeTableId"`
}

// The set of arguments for constructing a RouteTableAssociateInstanceConfig resource.
type RouteTableAssociateInstanceConfigArgs struct {
	// ID of the CCN.
	CcnId pulumi.StringInput
	// Instances list.
	Instances RouteTableAssociateInstanceConfigInstanceArrayInput
	// Ccn instance route table ID.
	RouteTableId pulumi.StringInput
}

func (RouteTableAssociateInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableAssociateInstanceConfigArgs)(nil)).Elem()
}

type RouteTableAssociateInstanceConfigInput interface {
	pulumi.Input

	ToRouteTableAssociateInstanceConfigOutput() RouteTableAssociateInstanceConfigOutput
	ToRouteTableAssociateInstanceConfigOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigOutput
}

func (*RouteTableAssociateInstanceConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableAssociateInstanceConfig)(nil)).Elem()
}

func (i *RouteTableAssociateInstanceConfig) ToRouteTableAssociateInstanceConfigOutput() RouteTableAssociateInstanceConfigOutput {
	return i.ToRouteTableAssociateInstanceConfigOutputWithContext(context.Background())
}

func (i *RouteTableAssociateInstanceConfig) ToRouteTableAssociateInstanceConfigOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociateInstanceConfigOutput)
}

// RouteTableAssociateInstanceConfigArrayInput is an input type that accepts RouteTableAssociateInstanceConfigArray and RouteTableAssociateInstanceConfigArrayOutput values.
// You can construct a concrete instance of `RouteTableAssociateInstanceConfigArrayInput` via:
//
//	RouteTableAssociateInstanceConfigArray{ RouteTableAssociateInstanceConfigArgs{...} }
type RouteTableAssociateInstanceConfigArrayInput interface {
	pulumi.Input

	ToRouteTableAssociateInstanceConfigArrayOutput() RouteTableAssociateInstanceConfigArrayOutput
	ToRouteTableAssociateInstanceConfigArrayOutputWithContext(context.Context) RouteTableAssociateInstanceConfigArrayOutput
}

type RouteTableAssociateInstanceConfigArray []RouteTableAssociateInstanceConfigInput

func (RouteTableAssociateInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteTableAssociateInstanceConfig)(nil)).Elem()
}

func (i RouteTableAssociateInstanceConfigArray) ToRouteTableAssociateInstanceConfigArrayOutput() RouteTableAssociateInstanceConfigArrayOutput {
	return i.ToRouteTableAssociateInstanceConfigArrayOutputWithContext(context.Background())
}

func (i RouteTableAssociateInstanceConfigArray) ToRouteTableAssociateInstanceConfigArrayOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociateInstanceConfigArrayOutput)
}

// RouteTableAssociateInstanceConfigMapInput is an input type that accepts RouteTableAssociateInstanceConfigMap and RouteTableAssociateInstanceConfigMapOutput values.
// You can construct a concrete instance of `RouteTableAssociateInstanceConfigMapInput` via:
//
//	RouteTableAssociateInstanceConfigMap{ "key": RouteTableAssociateInstanceConfigArgs{...} }
type RouteTableAssociateInstanceConfigMapInput interface {
	pulumi.Input

	ToRouteTableAssociateInstanceConfigMapOutput() RouteTableAssociateInstanceConfigMapOutput
	ToRouteTableAssociateInstanceConfigMapOutputWithContext(context.Context) RouteTableAssociateInstanceConfigMapOutput
}

type RouteTableAssociateInstanceConfigMap map[string]RouteTableAssociateInstanceConfigInput

func (RouteTableAssociateInstanceConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteTableAssociateInstanceConfig)(nil)).Elem()
}

func (i RouteTableAssociateInstanceConfigMap) ToRouteTableAssociateInstanceConfigMapOutput() RouteTableAssociateInstanceConfigMapOutput {
	return i.ToRouteTableAssociateInstanceConfigMapOutputWithContext(context.Background())
}

func (i RouteTableAssociateInstanceConfigMap) ToRouteTableAssociateInstanceConfigMapOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociateInstanceConfigMapOutput)
}

type RouteTableAssociateInstanceConfigOutput struct{ *pulumi.OutputState }

func (RouteTableAssociateInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableAssociateInstanceConfig)(nil)).Elem()
}

func (o RouteTableAssociateInstanceConfigOutput) ToRouteTableAssociateInstanceConfigOutput() RouteTableAssociateInstanceConfigOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigOutput) ToRouteTableAssociateInstanceConfigOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigOutput {
	return o
}

// ID of the CCN.
func (o RouteTableAssociateInstanceConfigOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteTableAssociateInstanceConfig) pulumi.StringOutput { return v.CcnId }).(pulumi.StringOutput)
}

// Instances list.
func (o RouteTableAssociateInstanceConfigOutput) Instances() RouteTableAssociateInstanceConfigInstanceArrayOutput {
	return o.ApplyT(func(v *RouteTableAssociateInstanceConfig) RouteTableAssociateInstanceConfigInstanceArrayOutput {
		return v.Instances
	}).(RouteTableAssociateInstanceConfigInstanceArrayOutput)
}

// Ccn instance route table ID.
func (o RouteTableAssociateInstanceConfigOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteTableAssociateInstanceConfig) pulumi.StringOutput { return v.RouteTableId }).(pulumi.StringOutput)
}

type RouteTableAssociateInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (RouteTableAssociateInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteTableAssociateInstanceConfig)(nil)).Elem()
}

func (o RouteTableAssociateInstanceConfigArrayOutput) ToRouteTableAssociateInstanceConfigArrayOutput() RouteTableAssociateInstanceConfigArrayOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigArrayOutput) ToRouteTableAssociateInstanceConfigArrayOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigArrayOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigArrayOutput) Index(i pulumi.IntInput) RouteTableAssociateInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouteTableAssociateInstanceConfig {
		return vs[0].([]*RouteTableAssociateInstanceConfig)[vs[1].(int)]
	}).(RouteTableAssociateInstanceConfigOutput)
}

type RouteTableAssociateInstanceConfigMapOutput struct{ *pulumi.OutputState }

func (RouteTableAssociateInstanceConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteTableAssociateInstanceConfig)(nil)).Elem()
}

func (o RouteTableAssociateInstanceConfigMapOutput) ToRouteTableAssociateInstanceConfigMapOutput() RouteTableAssociateInstanceConfigMapOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigMapOutput) ToRouteTableAssociateInstanceConfigMapOutputWithContext(ctx context.Context) RouteTableAssociateInstanceConfigMapOutput {
	return o
}

func (o RouteTableAssociateInstanceConfigMapOutput) MapIndex(k pulumi.StringInput) RouteTableAssociateInstanceConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouteTableAssociateInstanceConfig {
		return vs[0].(map[string]*RouteTableAssociateInstanceConfig)[vs[1].(string)]
	}).(RouteTableAssociateInstanceConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociateInstanceConfigInput)(nil)).Elem(), &RouteTableAssociateInstanceConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociateInstanceConfigArrayInput)(nil)).Elem(), RouteTableAssociateInstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociateInstanceConfigMapInput)(nil)).Elem(), RouteTableAssociateInstanceConfigMap{})
	pulumi.RegisterOutputType(RouteTableAssociateInstanceConfigOutput{})
	pulumi.RegisterOutputType(RouteTableAssociateInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(RouteTableAssociateInstanceConfigMapOutput{})
}
