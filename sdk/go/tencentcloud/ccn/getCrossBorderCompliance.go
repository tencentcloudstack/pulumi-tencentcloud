// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ccn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of ccn crossBorderCompliance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ccn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ccn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ccn.GetCrossBorderCompliance(ctx, &ccn.GetCrossBorderComplianceArgs{
//				ComplianceId:     pulumi.IntRef(10002),
//				Email:            pulumi.StringRef("test@tencent.com"),
//				ServiceEndDate:   pulumi.StringRef("2021-07-29"),
//				ServiceProvider:  pulumi.StringRef("UNICOM"),
//				ServiceStartDate: pulumi.StringRef("2020-07-29"),
//				State:            pulumi.StringRef("APPROVED"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCrossBorderCompliance(ctx *pulumi.Context, args *GetCrossBorderComplianceArgs, opts ...pulumi.InvokeOption) (*GetCrossBorderComplianceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCrossBorderComplianceResult
	err := ctx.Invoke("tencentcloud:Ccn/getCrossBorderCompliance:getCrossBorderCompliance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCrossBorderCompliance.
type GetCrossBorderComplianceArgs struct {
	// (Fuzzy query) business license address.
	BusinessAddress *string `pulumi:"businessAddress"`
	// (Fuzzy query) Company name.
	Company *string `pulumi:"company"`
	// (Exact match) compliance approval form: 'ID'.
	ComplianceId *int `pulumi:"complianceId"`
	// (Exact match) email.
	Email *string `pulumi:"email"`
	// (Fuzzy query) Issuing authority.
	IssuingAuthority *string `pulumi:"issuingAuthority"`
	// (Fuzzy query) legal representative.
	LegalPerson *string `pulumi:"legalPerson"`
	// (Fuzzy query) Person in charge.
	Manager *string `pulumi:"manager"`
	// (Fuzzy query) ID card address of the person in charge.
	ManagerAddress *string `pulumi:"managerAddress"`
	// (Exact query) ID number of the person in charge.
	ManagerId *string `pulumi:"managerId"`
	// (Exact match) contact number of the person in charge.
	ManagerTelephone *string `pulumi:"managerTelephone"`
	// (Exact match) post code.
	PostCode *int `pulumi:"postCode"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// (Exact match) service end date, such as: '2020-07-28'.
	ServiceEndDate *string `pulumi:"serviceEndDate"`
	// (Exact match) service provider, optional value: 'UNICOM'.
	ServiceProvider *string `pulumi:"serviceProvider"`
	// (Exact match) service start date, such as: '2020-07-28'.
	ServiceStartDate *string `pulumi:"serviceStartDate"`
	// (Exact match) status. Pending: PENDING, Passed: APPROVED, Denied: DENY.
	State *string `pulumi:"state"`
	// (Exact match) Uniform Social Credit Code.
	UniformSocialCreditCode *string `pulumi:"uniformSocialCreditCode"`
}

// A collection of values returned by getCrossBorderCompliance.
type GetCrossBorderComplianceResult struct {
	BusinessAddress *string `pulumi:"businessAddress"`
	Company         *string `pulumi:"company"`
	ComplianceId    *int    `pulumi:"complianceId"`
	Email           *string `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string  `pulumi:"id"`
	IssuingAuthority        *string `pulumi:"issuingAuthority"`
	LegalPerson             *string `pulumi:"legalPerson"`
	Manager                 *string `pulumi:"manager"`
	ManagerAddress          *string `pulumi:"managerAddress"`
	ManagerId               *string `pulumi:"managerId"`
	ManagerTelephone        *string `pulumi:"managerTelephone"`
	PostCode                *int    `pulumi:"postCode"`
	ResultOutputFile        *string `pulumi:"resultOutputFile"`
	ServiceEndDate          *string `pulumi:"serviceEndDate"`
	ServiceProvider         *string `pulumi:"serviceProvider"`
	ServiceStartDate        *string `pulumi:"serviceStartDate"`
	State                   *string `pulumi:"state"`
	UniformSocialCreditCode *string `pulumi:"uniformSocialCreditCode"`
}

func GetCrossBorderComplianceOutput(ctx *pulumi.Context, args GetCrossBorderComplianceOutputArgs, opts ...pulumi.InvokeOption) GetCrossBorderComplianceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCrossBorderComplianceResult, error) {
			args := v.(GetCrossBorderComplianceArgs)
			r, err := GetCrossBorderCompliance(ctx, &args, opts...)
			var s GetCrossBorderComplianceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCrossBorderComplianceResultOutput)
}

// A collection of arguments for invoking getCrossBorderCompliance.
type GetCrossBorderComplianceOutputArgs struct {
	// (Fuzzy query) business license address.
	BusinessAddress pulumi.StringPtrInput `pulumi:"businessAddress"`
	// (Fuzzy query) Company name.
	Company pulumi.StringPtrInput `pulumi:"company"`
	// (Exact match) compliance approval form: 'ID'.
	ComplianceId pulumi.IntPtrInput `pulumi:"complianceId"`
	// (Exact match) email.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// (Fuzzy query) Issuing authority.
	IssuingAuthority pulumi.StringPtrInput `pulumi:"issuingAuthority"`
	// (Fuzzy query) legal representative.
	LegalPerson pulumi.StringPtrInput `pulumi:"legalPerson"`
	// (Fuzzy query) Person in charge.
	Manager pulumi.StringPtrInput `pulumi:"manager"`
	// (Fuzzy query) ID card address of the person in charge.
	ManagerAddress pulumi.StringPtrInput `pulumi:"managerAddress"`
	// (Exact query) ID number of the person in charge.
	ManagerId pulumi.StringPtrInput `pulumi:"managerId"`
	// (Exact match) contact number of the person in charge.
	ManagerTelephone pulumi.StringPtrInput `pulumi:"managerTelephone"`
	// (Exact match) post code.
	PostCode pulumi.IntPtrInput `pulumi:"postCode"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// (Exact match) service end date, such as: '2020-07-28'.
	ServiceEndDate pulumi.StringPtrInput `pulumi:"serviceEndDate"`
	// (Exact match) service provider, optional value: 'UNICOM'.
	ServiceProvider pulumi.StringPtrInput `pulumi:"serviceProvider"`
	// (Exact match) service start date, such as: '2020-07-28'.
	ServiceStartDate pulumi.StringPtrInput `pulumi:"serviceStartDate"`
	// (Exact match) status. Pending: PENDING, Passed: APPROVED, Denied: DENY.
	State pulumi.StringPtrInput `pulumi:"state"`
	// (Exact match) Uniform Social Credit Code.
	UniformSocialCreditCode pulumi.StringPtrInput `pulumi:"uniformSocialCreditCode"`
}

func (GetCrossBorderComplianceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderComplianceArgs)(nil)).Elem()
}

// A collection of values returned by getCrossBorderCompliance.
type GetCrossBorderComplianceResultOutput struct{ *pulumi.OutputState }

func (GetCrossBorderComplianceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossBorderComplianceResult)(nil)).Elem()
}

func (o GetCrossBorderComplianceResultOutput) ToGetCrossBorderComplianceResultOutput() GetCrossBorderComplianceResultOutput {
	return o
}

func (o GetCrossBorderComplianceResultOutput) ToGetCrossBorderComplianceResultOutputWithContext(ctx context.Context) GetCrossBorderComplianceResultOutput {
	return o
}

func (o GetCrossBorderComplianceResultOutput) BusinessAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.BusinessAddress }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.Company }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ComplianceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *int { return v.ComplianceId }).(pulumi.IntPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCrossBorderComplianceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCrossBorderComplianceResultOutput) IssuingAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.IssuingAuthority }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) LegalPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.LegalPerson }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) Manager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.Manager }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ManagerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ManagerAddress }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ManagerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ManagerId }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ManagerTelephone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ManagerTelephone }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) PostCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *int { return v.PostCode }).(pulumi.IntPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ServiceEndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ServiceEndDate }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ServiceProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ServiceProvider }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) ServiceStartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.ServiceStartDate }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetCrossBorderComplianceResultOutput) UniformSocialCreditCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossBorderComplianceResult) *string { return v.UniformSocialCreditCode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCrossBorderComplianceResultOutput{})
}
