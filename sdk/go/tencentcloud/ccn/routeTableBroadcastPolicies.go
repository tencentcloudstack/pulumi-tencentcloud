// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ccn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a CCN Route table broadcast policies.
//
// > **NOTE:** Use this resource to manage all broadcast policies under the routing table of CCN instances.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ccn"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := "ap-guangzhou"
//			if param := cfg.Get("region"); param != "" {
//				region = param
//			}
//			availabilityZone := "ap-guangzhou-4"
//			if param := cfg.Get("availabilityZone"); param != "" {
//				availabilityZone = param
//			}
//			// create vpc
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			// create subnet
//			_, err = Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(availabilityZone),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("172.16.0.0/24"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			// create ccn
//			exampleInstance, err := Ccn.NewInstance(ctx, "exampleInstance", &Ccn.InstanceArgs{
//				Description:        pulumi.String("desc."),
//				Qos:                pulumi.String("AG"),
//				ChargeType:         pulumi.String("PREPAID"),
//				BandwidthLimitType: pulumi.String("INTER_REGION_LIMIT"),
//				Tags: pulumi.Map{
//					"createBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// create ccn route table
//			exampleRouteTable, err := Ccn.NewRouteTable(ctx, "exampleRouteTable", &Ccn.RouteTableArgs{
//				CcnId:       exampleInstance.ID(),
//				Description: pulumi.String("desc."),
//			})
//			if err != nil {
//				return err
//			}
//			// attachment instance
//			_, err = Ccn.NewAttachment(ctx, "attachment", &Ccn.AttachmentArgs{
//				CcnId:          exampleInstance.ID(),
//				InstanceId:     vpc.ID(),
//				InstanceType:   pulumi.String("VPC"),
//				InstanceRegion: pulumi.String(region),
//				RouteTableId:   exampleRouteTable.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// create route table broadcast policy
//			_, err = Ccn.NewRouteTableBroadcastPolicies(ctx, "exampleRouteTableBroadcastPolicies", &Ccn.RouteTableBroadcastPoliciesArgs{
//				CcnId:        exampleInstance.ID(),
//				RouteTableId: exampleRouteTable.ID(),
//				Policies: ccn.RouteTableBroadcastPoliciesPolicyArray{
//					&ccn.RouteTableBroadcastPoliciesPolicyArgs{
//						Action:      pulumi.String("accept"),
//						Description: pulumi.String("desc."),
//						RouteConditions: ccn.RouteTableBroadcastPoliciesPolicyRouteConditionArray{
//							&ccn.RouteTableBroadcastPoliciesPolicyRouteConditionArgs{
//								Name: pulumi.String("instance-region"),
//								Values: pulumi.StringArray{
//									pulumi.String("ap-guangzhou"),
//								},
//								MatchPattern: pulumi.Int(1),
//							},
//						},
//						BroadcastConditions: ccn.RouteTableBroadcastPoliciesPolicyBroadcastConditionArray{
//							&ccn.RouteTableBroadcastPoliciesPolicyBroadcastConditionArgs{
//								Name: pulumi.String("instance-region"),
//								Values: pulumi.StringArray{
//									pulumi.String("ap-shanghai"),
//								},
//								MatchPattern: pulumi.Int(1),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Ccn instance can be imported, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Ccn/routeTableBroadcastPolicies:RouteTableBroadcastPolicies example ccn-gr7nynbd#ccnrtb-jpf7bzn3
// ```
type RouteTableBroadcastPolicies struct {
	pulumi.CustomResourceState

	// CCN Instance ID.
	CcnId pulumi.StringOutput `pulumi:"ccnId"`
	// Routing propagation strategy.
	Policies RouteTableBroadcastPoliciesPolicyArrayOutput `pulumi:"policies"`
	// CCN Route table ID.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`
}

// NewRouteTableBroadcastPolicies registers a new resource with the given unique name, arguments, and options.
func NewRouteTableBroadcastPolicies(ctx *pulumi.Context,
	name string, args *RouteTableBroadcastPoliciesArgs, opts ...pulumi.ResourceOption) (*RouteTableBroadcastPolicies, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CcnId == nil {
		return nil, errors.New("invalid value for required argument 'CcnId'")
	}
	if args.Policies == nil {
		return nil, errors.New("invalid value for required argument 'Policies'")
	}
	if args.RouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'RouteTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteTableBroadcastPolicies
	err := ctx.RegisterResource("tencentcloud:Ccn/routeTableBroadcastPolicies:RouteTableBroadcastPolicies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteTableBroadcastPolicies gets an existing RouteTableBroadcastPolicies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTableBroadcastPolicies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteTableBroadcastPoliciesState, opts ...pulumi.ResourceOption) (*RouteTableBroadcastPolicies, error) {
	var resource RouteTableBroadcastPolicies
	err := ctx.ReadResource("tencentcloud:Ccn/routeTableBroadcastPolicies:RouteTableBroadcastPolicies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteTableBroadcastPolicies resources.
type routeTableBroadcastPoliciesState struct {
	// CCN Instance ID.
	CcnId *string `pulumi:"ccnId"`
	// Routing propagation strategy.
	Policies []RouteTableBroadcastPoliciesPolicy `pulumi:"policies"`
	// CCN Route table ID.
	RouteTableId *string `pulumi:"routeTableId"`
}

type RouteTableBroadcastPoliciesState struct {
	// CCN Instance ID.
	CcnId pulumi.StringPtrInput
	// Routing propagation strategy.
	Policies RouteTableBroadcastPoliciesPolicyArrayInput
	// CCN Route table ID.
	RouteTableId pulumi.StringPtrInput
}

func (RouteTableBroadcastPoliciesState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableBroadcastPoliciesState)(nil)).Elem()
}

type routeTableBroadcastPoliciesArgs struct {
	// CCN Instance ID.
	CcnId string `pulumi:"ccnId"`
	// Routing propagation strategy.
	Policies []RouteTableBroadcastPoliciesPolicy `pulumi:"policies"`
	// CCN Route table ID.
	RouteTableId string `pulumi:"routeTableId"`
}

// The set of arguments for constructing a RouteTableBroadcastPolicies resource.
type RouteTableBroadcastPoliciesArgs struct {
	// CCN Instance ID.
	CcnId pulumi.StringInput
	// Routing propagation strategy.
	Policies RouteTableBroadcastPoliciesPolicyArrayInput
	// CCN Route table ID.
	RouteTableId pulumi.StringInput
}

func (RouteTableBroadcastPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableBroadcastPoliciesArgs)(nil)).Elem()
}

type RouteTableBroadcastPoliciesInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesOutput() RouteTableBroadcastPoliciesOutput
	ToRouteTableBroadcastPoliciesOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesOutput
}

func (*RouteTableBroadcastPolicies) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableBroadcastPolicies)(nil)).Elem()
}

func (i *RouteTableBroadcastPolicies) ToRouteTableBroadcastPoliciesOutput() RouteTableBroadcastPoliciesOutput {
	return i.ToRouteTableBroadcastPoliciesOutputWithContext(context.Background())
}

func (i *RouteTableBroadcastPolicies) ToRouteTableBroadcastPoliciesOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesOutput)
}

// RouteTableBroadcastPoliciesArrayInput is an input type that accepts RouteTableBroadcastPoliciesArray and RouteTableBroadcastPoliciesArrayOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesArrayInput` via:
//
//	RouteTableBroadcastPoliciesArray{ RouteTableBroadcastPoliciesArgs{...} }
type RouteTableBroadcastPoliciesArrayInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesArrayOutput() RouteTableBroadcastPoliciesArrayOutput
	ToRouteTableBroadcastPoliciesArrayOutputWithContext(context.Context) RouteTableBroadcastPoliciesArrayOutput
}

type RouteTableBroadcastPoliciesArray []RouteTableBroadcastPoliciesInput

func (RouteTableBroadcastPoliciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteTableBroadcastPolicies)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesArray) ToRouteTableBroadcastPoliciesArrayOutput() RouteTableBroadcastPoliciesArrayOutput {
	return i.ToRouteTableBroadcastPoliciesArrayOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesArray) ToRouteTableBroadcastPoliciesArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesArrayOutput)
}

// RouteTableBroadcastPoliciesMapInput is an input type that accepts RouteTableBroadcastPoliciesMap and RouteTableBroadcastPoliciesMapOutput values.
// You can construct a concrete instance of `RouteTableBroadcastPoliciesMapInput` via:
//
//	RouteTableBroadcastPoliciesMap{ "key": RouteTableBroadcastPoliciesArgs{...} }
type RouteTableBroadcastPoliciesMapInput interface {
	pulumi.Input

	ToRouteTableBroadcastPoliciesMapOutput() RouteTableBroadcastPoliciesMapOutput
	ToRouteTableBroadcastPoliciesMapOutputWithContext(context.Context) RouteTableBroadcastPoliciesMapOutput
}

type RouteTableBroadcastPoliciesMap map[string]RouteTableBroadcastPoliciesInput

func (RouteTableBroadcastPoliciesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteTableBroadcastPolicies)(nil)).Elem()
}

func (i RouteTableBroadcastPoliciesMap) ToRouteTableBroadcastPoliciesMapOutput() RouteTableBroadcastPoliciesMapOutput {
	return i.ToRouteTableBroadcastPoliciesMapOutputWithContext(context.Background())
}

func (i RouteTableBroadcastPoliciesMap) ToRouteTableBroadcastPoliciesMapOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableBroadcastPoliciesMapOutput)
}

type RouteTableBroadcastPoliciesOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableBroadcastPolicies)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesOutput) ToRouteTableBroadcastPoliciesOutput() RouteTableBroadcastPoliciesOutput {
	return o
}

func (o RouteTableBroadcastPoliciesOutput) ToRouteTableBroadcastPoliciesOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesOutput {
	return o
}

// CCN Instance ID.
func (o RouteTableBroadcastPoliciesOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteTableBroadcastPolicies) pulumi.StringOutput { return v.CcnId }).(pulumi.StringOutput)
}

// Routing propagation strategy.
func (o RouteTableBroadcastPoliciesOutput) Policies() RouteTableBroadcastPoliciesPolicyArrayOutput {
	return o.ApplyT(func(v *RouteTableBroadcastPolicies) RouteTableBroadcastPoliciesPolicyArrayOutput { return v.Policies }).(RouteTableBroadcastPoliciesPolicyArrayOutput)
}

// CCN Route table ID.
func (o RouteTableBroadcastPoliciesOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteTableBroadcastPolicies) pulumi.StringOutput { return v.RouteTableId }).(pulumi.StringOutput)
}

type RouteTableBroadcastPoliciesArrayOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteTableBroadcastPolicies)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesArrayOutput) ToRouteTableBroadcastPoliciesArrayOutput() RouteTableBroadcastPoliciesArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesArrayOutput) ToRouteTableBroadcastPoliciesArrayOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesArrayOutput {
	return o
}

func (o RouteTableBroadcastPoliciesArrayOutput) Index(i pulumi.IntInput) RouteTableBroadcastPoliciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouteTableBroadcastPolicies {
		return vs[0].([]*RouteTableBroadcastPolicies)[vs[1].(int)]
	}).(RouteTableBroadcastPoliciesOutput)
}

type RouteTableBroadcastPoliciesMapOutput struct{ *pulumi.OutputState }

func (RouteTableBroadcastPoliciesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteTableBroadcastPolicies)(nil)).Elem()
}

func (o RouteTableBroadcastPoliciesMapOutput) ToRouteTableBroadcastPoliciesMapOutput() RouteTableBroadcastPoliciesMapOutput {
	return o
}

func (o RouteTableBroadcastPoliciesMapOutput) ToRouteTableBroadcastPoliciesMapOutputWithContext(ctx context.Context) RouteTableBroadcastPoliciesMapOutput {
	return o
}

func (o RouteTableBroadcastPoliciesMapOutput) MapIndex(k pulumi.StringInput) RouteTableBroadcastPoliciesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouteTableBroadcastPolicies {
		return vs[0].(map[string]*RouteTableBroadcastPolicies)[vs[1].(string)]
	}).(RouteTableBroadcastPoliciesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesInput)(nil)).Elem(), &RouteTableBroadcastPolicies{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesArrayInput)(nil)).Elem(), RouteTableBroadcastPoliciesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableBroadcastPoliciesMapInput)(nil)).Elem(), RouteTableBroadcastPoliciesMap{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesArrayOutput{})
	pulumi.RegisterOutputType(RouteTableBroadcastPoliciesMapOutput{})
}
