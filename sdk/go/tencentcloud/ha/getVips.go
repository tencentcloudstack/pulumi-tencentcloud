// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of HA VIPs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ha"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ha"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ha.GetVips(ctx, &ha.GetVipsArgs{
//				AddressIp: pulumi.StringRef("10.0.4.16"),
//				Id:        pulumi.StringRef("havip-kjqwe4ba"),
//				Name:      pulumi.StringRef("test"),
//				SubnetId:  pulumi.StringRef("subnet-4d4m4cd4"),
//				VpcId:     pulumi.StringRef("vpc-gzea3dd7"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVips(ctx *pulumi.Context, args *GetVipsArgs, opts ...pulumi.InvokeOption) (*GetVipsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetVipsResult
	err := ctx.Invoke("tencentcloud:Ha/getVips:getVips", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVips.
type GetVipsArgs struct {
	// EIP of the HA VIP to be queried.
	AddressIp *string `pulumi:"addressIp"`
	// ID of the HA VIP to be queried.
	Id *string `pulumi:"id"`
	// Name of the HA VIP. The length of character is limited to 1-60.
	Name *string `pulumi:"name"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Subnet id of the HA VIP to be queried.
	SubnetId *string `pulumi:"subnetId"`
	// VPC id of the HA VIP to be queried.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getVips.
type GetVipsResult struct {
	// EIP that is associated.
	AddressIp *string `pulumi:"addressIp"`
	// Information list of the dedicated HA VIPs.
	HaVipLists []GetVipsHaVipList `pulumi:"haVipLists"`
	// ID of the HA VIP.
	Id *string `pulumi:"id"`
	// Name of the HA VIP.
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Subnet id.
	SubnetId *string `pulumi:"subnetId"`
	// VPC id.
	VpcId *string `pulumi:"vpcId"`
}

func GetVipsOutput(ctx *pulumi.Context, args GetVipsOutputArgs, opts ...pulumi.InvokeOption) GetVipsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVipsResult, error) {
			args := v.(GetVipsArgs)
			r, err := GetVips(ctx, &args, opts...)
			var s GetVipsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVipsResultOutput)
}

// A collection of arguments for invoking getVips.
type GetVipsOutputArgs struct {
	// EIP of the HA VIP to be queried.
	AddressIp pulumi.StringPtrInput `pulumi:"addressIp"`
	// ID of the HA VIP to be queried.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HA VIP. The length of character is limited to 1-60.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Subnet id of the HA VIP to be queried.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// VPC id of the HA VIP to be queried.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetVipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVipsArgs)(nil)).Elem()
}

// A collection of values returned by getVips.
type GetVipsResultOutput struct{ *pulumi.OutputState }

func (GetVipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVipsResult)(nil)).Elem()
}

func (o GetVipsResultOutput) ToGetVipsResultOutput() GetVipsResultOutput {
	return o
}

func (o GetVipsResultOutput) ToGetVipsResultOutputWithContext(ctx context.Context) GetVipsResultOutput {
	return o
}

// EIP that is associated.
func (o GetVipsResultOutput) AddressIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipsResult) *string { return v.AddressIp }).(pulumi.StringPtrOutput)
}

// Information list of the dedicated HA VIPs.
func (o GetVipsResultOutput) HaVipLists() GetVipsHaVipListArrayOutput {
	return o.ApplyT(func(v GetVipsResult) []GetVipsHaVipList { return v.HaVipLists }).(GetVipsHaVipListArrayOutput)
}

// ID of the HA VIP.
func (o GetVipsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HA VIP.
func (o GetVipsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetVipsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Subnet id.
func (o GetVipsResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipsResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// VPC id.
func (o GetVipsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVipsResultOutput{})
}
