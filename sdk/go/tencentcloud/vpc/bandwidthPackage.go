// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a vpc bandwidthPackage
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewBandwidthPackage(ctx, "example", &Vpc.BandwidthPackageArgs{
//				BandwidthPackageName: pulumi.String("tf-example"),
//				ChargeType:           pulumi.String("TOP5_POSTPAID_BY_MONTH"),
//				NetworkType:          pulumi.String("BGP"),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### PrePaid Bandwidth Package
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewBandwidthPackage(ctx, "bandwidthPackage", &Vpc.BandwidthPackageArgs{
//				BandwidthPackageName: pulumi.String("test-001"),
//				ChargeType:           pulumi.String("FIXED_PREPAID_BY_MONTH"),
//				InternetMaxBandwidth: pulumi.Int(100),
//				NetworkType:          pulumi.String("BGP"),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//				TimeSpan: pulumi.Int(3),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Bandwidth Package With Egress
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewBandwidthPackage(ctx, "example", &Vpc.BandwidthPackageArgs{
//				BandwidthPackageName: pulumi.String("tf-example"),
//				ChargeType:           pulumi.String("ENHANCED95_POSTPAID_BY_MONTH"),
//				Egress:               pulumi.String("center_egress2"),
//				InternetMaxBandwidth: pulumi.Int(400),
//				NetworkType:          pulumi.String("SINGLEISP_CMCC"),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// vpc bandwidth_package can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Vpc/bandwidthPackage:BandwidthPackage bandwidth_package bandwidthPackage_id
//
// ```
type BandwidthPackage struct {
	pulumi.CustomResourceState

	// Bandwidth package name.
	BandwidthPackageName pulumi.StringPtrOutput `pulumi:"bandwidthPackageName"`
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType pulumi.StringPtrOutput `pulumi:"chargeType"`
	// Network egress. It defaults to `centerEgress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress pulumi.StringOutput `pulumi:"egress"`
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth pulumi.IntPtrOutput `pulumi:"internetMaxBandwidth"`
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType pulumi.StringPtrOutput `pulumi:"networkType"`
	// Tag description list.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan pulumi.IntPtrOutput `pulumi:"timeSpan"`
}

// NewBandwidthPackage registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackage(ctx *pulumi.Context,
	name string, args *BandwidthPackageArgs, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	if args == nil {
		args = &BandwidthPackageArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource BandwidthPackage
	err := ctx.RegisterResource("tencentcloud:Vpc/bandwidthPackage:BandwidthPackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPackage gets an existing BandwidthPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPackageState, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	var resource BandwidthPackage
	err := ctx.ReadResource("tencentcloud:Vpc/bandwidthPackage:BandwidthPackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPackage resources.
type bandwidthPackageState struct {
	// Bandwidth package name.
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType *string `pulumi:"chargeType"`
	// Network egress. It defaults to `centerEgress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress *string `pulumi:"egress"`
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth *int `pulumi:"internetMaxBandwidth"`
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType *string `pulumi:"networkType"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan *int `pulumi:"timeSpan"`
}

type BandwidthPackageState struct {
	// Bandwidth package name.
	BandwidthPackageName pulumi.StringPtrInput
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType pulumi.StringPtrInput
	// Network egress. It defaults to `centerEgress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress pulumi.StringPtrInput
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth pulumi.IntPtrInput
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan pulumi.IntPtrInput
}

func (BandwidthPackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageState)(nil)).Elem()
}

type bandwidthPackageArgs struct {
	// Bandwidth package name.
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType *string `pulumi:"chargeType"`
	// Network egress. It defaults to `centerEgress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress *string `pulumi:"egress"`
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth *int `pulumi:"internetMaxBandwidth"`
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType *string `pulumi:"networkType"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan *int `pulumi:"timeSpan"`
}

// The set of arguments for constructing a BandwidthPackage resource.
type BandwidthPackageArgs struct {
	// Bandwidth package name.
	BandwidthPackageName pulumi.StringPtrInput
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType pulumi.StringPtrInput
	// Network egress. It defaults to `centerEgress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress pulumi.StringPtrInput
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth pulumi.IntPtrInput
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan pulumi.IntPtrInput
}

func (BandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageArgs)(nil)).Elem()
}

type BandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackageOutput() BandwidthPackageOutput
	ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput
}

func (*BandwidthPackage) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPackage)(nil)).Elem()
}

func (i *BandwidthPackage) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return i.ToBandwidthPackageOutputWithContext(context.Background())
}

func (i *BandwidthPackage) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageOutput)
}

// BandwidthPackageArrayInput is an input type that accepts BandwidthPackageArray and BandwidthPackageArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageArrayInput` via:
//
//	BandwidthPackageArray{ BandwidthPackageArgs{...} }
type BandwidthPackageArrayInput interface {
	pulumi.Input

	ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput
	ToBandwidthPackageArrayOutputWithContext(context.Context) BandwidthPackageArrayOutput
}

type BandwidthPackageArray []BandwidthPackageInput

func (BandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackageArray) ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput {
	return i.ToBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageArray) ToBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageArrayOutput)
}

// BandwidthPackageMapInput is an input type that accepts BandwidthPackageMap and BandwidthPackageMapOutput values.
// You can construct a concrete instance of `BandwidthPackageMapInput` via:
//
//	BandwidthPackageMap{ "key": BandwidthPackageArgs{...} }
type BandwidthPackageMapInput interface {
	pulumi.Input

	ToBandwidthPackageMapOutput() BandwidthPackageMapOutput
	ToBandwidthPackageMapOutputWithContext(context.Context) BandwidthPackageMapOutput
}

type BandwidthPackageMap map[string]BandwidthPackageInput

func (BandwidthPackageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackageMap) ToBandwidthPackageMapOutput() BandwidthPackageMapOutput {
	return i.ToBandwidthPackageMapOutputWithContext(context.Background())
}

func (i BandwidthPackageMap) ToBandwidthPackageMapOutputWithContext(ctx context.Context) BandwidthPackageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageMapOutput)
}

type BandwidthPackageOutput struct{ *pulumi.OutputState }

func (BandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return o
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return o
}

// Bandwidth package name.
func (o BandwidthPackageOutput) BandwidthPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringPtrOutput { return v.BandwidthPackageName }).(pulumi.StringPtrOutput)
}

// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
func (o BandwidthPackageOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringPtrOutput { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// Network egress. It defaults to `centerEgress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
func (o BandwidthPackageOutput) Egress() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Egress }).(pulumi.StringOutput)
}

// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
func (o BandwidthPackageOutput) InternetMaxBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntPtrOutput { return v.InternetMaxBandwidth }).(pulumi.IntPtrOutput)
}

// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
func (o BandwidthPackageOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringPtrOutput { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Tag description list.
func (o BandwidthPackageOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
func (o BandwidthPackageOutput) TimeSpan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntPtrOutput { return v.TimeSpan }).(pulumi.IntPtrOutput)
}

type BandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageArrayOutput) ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackageArrayOutput) ToBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackageArrayOutput) Index(i pulumi.IntInput) BandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BandwidthPackage {
		return vs[0].([]*BandwidthPackage)[vs[1].(int)]
	}).(BandwidthPackageOutput)
}

type BandwidthPackageMapOutput struct{ *pulumi.OutputState }

func (BandwidthPackageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageMapOutput) ToBandwidthPackageMapOutput() BandwidthPackageMapOutput {
	return o
}

func (o BandwidthPackageMapOutput) ToBandwidthPackageMapOutputWithContext(ctx context.Context) BandwidthPackageMapOutput {
	return o
}

func (o BandwidthPackageMapOutput) MapIndex(k pulumi.StringInput) BandwidthPackageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BandwidthPackage {
		return vs[0].(map[string]*BandwidthPackage)[vs[1].(string)]
	}).(BandwidthPackageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageInput)(nil)).Elem(), &BandwidthPackage{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageArrayInput)(nil)).Elem(), BandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageMapInput)(nil)).Elem(), BandwidthPackageMap{})
	pulumi.RegisterOutputType(BandwidthPackageOutput{})
	pulumi.RegisterOutputType(BandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackageMapOutput{})
}
