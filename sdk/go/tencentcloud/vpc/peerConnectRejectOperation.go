// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a vpc peerConnectRejectOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewPeerConnectRejectOperation(ctx, "peerConnectRejectOperation", &Vpc.PeerConnectRejectOperationArgs{
//				PeeringConnectionId: pulumi.String("pcx-abced"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PeerConnectRejectOperation struct {
	pulumi.CustomResourceState

	// Peer connection unique ID.
	PeeringConnectionId pulumi.StringOutput `pulumi:"peeringConnectionId"`
}

// NewPeerConnectRejectOperation registers a new resource with the given unique name, arguments, and options.
func NewPeerConnectRejectOperation(ctx *pulumi.Context,
	name string, args *PeerConnectRejectOperationArgs, opts ...pulumi.ResourceOption) (*PeerConnectRejectOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PeeringConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'PeeringConnectionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource PeerConnectRejectOperation
	err := ctx.RegisterResource("tencentcloud:Vpc/peerConnectRejectOperation:PeerConnectRejectOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeerConnectRejectOperation gets an existing PeerConnectRejectOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeerConnectRejectOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeerConnectRejectOperationState, opts ...pulumi.ResourceOption) (*PeerConnectRejectOperation, error) {
	var resource PeerConnectRejectOperation
	err := ctx.ReadResource("tencentcloud:Vpc/peerConnectRejectOperation:PeerConnectRejectOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PeerConnectRejectOperation resources.
type peerConnectRejectOperationState struct {
	// Peer connection unique ID.
	PeeringConnectionId *string `pulumi:"peeringConnectionId"`
}

type PeerConnectRejectOperationState struct {
	// Peer connection unique ID.
	PeeringConnectionId pulumi.StringPtrInput
}

func (PeerConnectRejectOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*peerConnectRejectOperationState)(nil)).Elem()
}

type peerConnectRejectOperationArgs struct {
	// Peer connection unique ID.
	PeeringConnectionId string `pulumi:"peeringConnectionId"`
}

// The set of arguments for constructing a PeerConnectRejectOperation resource.
type PeerConnectRejectOperationArgs struct {
	// Peer connection unique ID.
	PeeringConnectionId pulumi.StringInput
}

func (PeerConnectRejectOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peerConnectRejectOperationArgs)(nil)).Elem()
}

type PeerConnectRejectOperationInput interface {
	pulumi.Input

	ToPeerConnectRejectOperationOutput() PeerConnectRejectOperationOutput
	ToPeerConnectRejectOperationOutputWithContext(ctx context.Context) PeerConnectRejectOperationOutput
}

func (*PeerConnectRejectOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerConnectRejectOperation)(nil)).Elem()
}

func (i *PeerConnectRejectOperation) ToPeerConnectRejectOperationOutput() PeerConnectRejectOperationOutput {
	return i.ToPeerConnectRejectOperationOutputWithContext(context.Background())
}

func (i *PeerConnectRejectOperation) ToPeerConnectRejectOperationOutputWithContext(ctx context.Context) PeerConnectRejectOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerConnectRejectOperationOutput)
}

// PeerConnectRejectOperationArrayInput is an input type that accepts PeerConnectRejectOperationArray and PeerConnectRejectOperationArrayOutput values.
// You can construct a concrete instance of `PeerConnectRejectOperationArrayInput` via:
//
//	PeerConnectRejectOperationArray{ PeerConnectRejectOperationArgs{...} }
type PeerConnectRejectOperationArrayInput interface {
	pulumi.Input

	ToPeerConnectRejectOperationArrayOutput() PeerConnectRejectOperationArrayOutput
	ToPeerConnectRejectOperationArrayOutputWithContext(context.Context) PeerConnectRejectOperationArrayOutput
}

type PeerConnectRejectOperationArray []PeerConnectRejectOperationInput

func (PeerConnectRejectOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PeerConnectRejectOperation)(nil)).Elem()
}

func (i PeerConnectRejectOperationArray) ToPeerConnectRejectOperationArrayOutput() PeerConnectRejectOperationArrayOutput {
	return i.ToPeerConnectRejectOperationArrayOutputWithContext(context.Background())
}

func (i PeerConnectRejectOperationArray) ToPeerConnectRejectOperationArrayOutputWithContext(ctx context.Context) PeerConnectRejectOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerConnectRejectOperationArrayOutput)
}

// PeerConnectRejectOperationMapInput is an input type that accepts PeerConnectRejectOperationMap and PeerConnectRejectOperationMapOutput values.
// You can construct a concrete instance of `PeerConnectRejectOperationMapInput` via:
//
//	PeerConnectRejectOperationMap{ "key": PeerConnectRejectOperationArgs{...} }
type PeerConnectRejectOperationMapInput interface {
	pulumi.Input

	ToPeerConnectRejectOperationMapOutput() PeerConnectRejectOperationMapOutput
	ToPeerConnectRejectOperationMapOutputWithContext(context.Context) PeerConnectRejectOperationMapOutput
}

type PeerConnectRejectOperationMap map[string]PeerConnectRejectOperationInput

func (PeerConnectRejectOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PeerConnectRejectOperation)(nil)).Elem()
}

func (i PeerConnectRejectOperationMap) ToPeerConnectRejectOperationMapOutput() PeerConnectRejectOperationMapOutput {
	return i.ToPeerConnectRejectOperationMapOutputWithContext(context.Background())
}

func (i PeerConnectRejectOperationMap) ToPeerConnectRejectOperationMapOutputWithContext(ctx context.Context) PeerConnectRejectOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerConnectRejectOperationMapOutput)
}

type PeerConnectRejectOperationOutput struct{ *pulumi.OutputState }

func (PeerConnectRejectOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerConnectRejectOperation)(nil)).Elem()
}

func (o PeerConnectRejectOperationOutput) ToPeerConnectRejectOperationOutput() PeerConnectRejectOperationOutput {
	return o
}

func (o PeerConnectRejectOperationOutput) ToPeerConnectRejectOperationOutputWithContext(ctx context.Context) PeerConnectRejectOperationOutput {
	return o
}

// Peer connection unique ID.
func (o PeerConnectRejectOperationOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectRejectOperation) pulumi.StringOutput { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

type PeerConnectRejectOperationArrayOutput struct{ *pulumi.OutputState }

func (PeerConnectRejectOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PeerConnectRejectOperation)(nil)).Elem()
}

func (o PeerConnectRejectOperationArrayOutput) ToPeerConnectRejectOperationArrayOutput() PeerConnectRejectOperationArrayOutput {
	return o
}

func (o PeerConnectRejectOperationArrayOutput) ToPeerConnectRejectOperationArrayOutputWithContext(ctx context.Context) PeerConnectRejectOperationArrayOutput {
	return o
}

func (o PeerConnectRejectOperationArrayOutput) Index(i pulumi.IntInput) PeerConnectRejectOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PeerConnectRejectOperation {
		return vs[0].([]*PeerConnectRejectOperation)[vs[1].(int)]
	}).(PeerConnectRejectOperationOutput)
}

type PeerConnectRejectOperationMapOutput struct{ *pulumi.OutputState }

func (PeerConnectRejectOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PeerConnectRejectOperation)(nil)).Elem()
}

func (o PeerConnectRejectOperationMapOutput) ToPeerConnectRejectOperationMapOutput() PeerConnectRejectOperationMapOutput {
	return o
}

func (o PeerConnectRejectOperationMapOutput) ToPeerConnectRejectOperationMapOutputWithContext(ctx context.Context) PeerConnectRejectOperationMapOutput {
	return o
}

func (o PeerConnectRejectOperationMapOutput) MapIndex(k pulumi.StringInput) PeerConnectRejectOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PeerConnectRejectOperation {
		return vs[0].(map[string]*PeerConnectRejectOperation)[vs[1].(string)]
	}).(PeerConnectRejectOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeerConnectRejectOperationInput)(nil)).Elem(), &PeerConnectRejectOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerConnectRejectOperationArrayInput)(nil)).Elem(), PeerConnectRejectOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerConnectRejectOperationMapInput)(nil)).Elem(), PeerConnectRejectOperationMap{})
	pulumi.RegisterOutputType(PeerConnectRejectOperationOutput{})
	pulumi.RegisterOutputType(PeerConnectRejectOperationArrayOutput{})
	pulumi.RegisterOutputType(PeerConnectRejectOperationMapOutput{})
}
