// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of vpc securityGroupLimits
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.GetSecurityGroupLimits(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityGroupLimits(ctx *pulumi.Context, args *GetSecurityGroupLimitsArgs, opts ...pulumi.InvokeOption) (*GetSecurityGroupLimitsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecurityGroupLimitsResult
	err := ctx.Invoke("tencentcloud:Vpc/getSecurityGroupLimits:getSecurityGroupLimits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroupLimits.
type GetSecurityGroupLimitsArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getSecurityGroupLimits.
type GetSecurityGroupLimitsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// sg limit set.
	SecurityGroupLimitSets []GetSecurityGroupLimitsSecurityGroupLimitSet `pulumi:"securityGroupLimitSets"`
}

func GetSecurityGroupLimitsOutput(ctx *pulumi.Context, args GetSecurityGroupLimitsOutputArgs, opts ...pulumi.InvokeOption) GetSecurityGroupLimitsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityGroupLimitsResult, error) {
			args := v.(GetSecurityGroupLimitsArgs)
			r, err := GetSecurityGroupLimits(ctx, &args, opts...)
			var s GetSecurityGroupLimitsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityGroupLimitsResultOutput)
}

// A collection of arguments for invoking getSecurityGroupLimits.
type GetSecurityGroupLimitsOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetSecurityGroupLimitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupLimitsArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityGroupLimits.
type GetSecurityGroupLimitsResultOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupLimitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupLimitsResult)(nil)).Elem()
}

func (o GetSecurityGroupLimitsResultOutput) ToGetSecurityGroupLimitsResultOutput() GetSecurityGroupLimitsResultOutput {
	return o
}

func (o GetSecurityGroupLimitsResultOutput) ToGetSecurityGroupLimitsResultOutputWithContext(ctx context.Context) GetSecurityGroupLimitsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityGroupLimitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupLimitsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecurityGroupLimitsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityGroupLimitsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// sg limit set.
func (o GetSecurityGroupLimitsResultOutput) SecurityGroupLimitSets() GetSecurityGroupLimitsSecurityGroupLimitSetArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupLimitsResult) []GetSecurityGroupLimitsSecurityGroupLimitSet {
		return v.SecurityGroupLimitSets
	}).(GetSecurityGroupLimitsSecurityGroupLimitSetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityGroupLimitsResultOutput{})
}
