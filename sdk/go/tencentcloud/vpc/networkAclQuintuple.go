// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkAclQuintuple struct {
	pulumi.CustomResourceState

	// Network ACL instance ID. For example:acl-12345678.
	NetworkAclId pulumi.StringOutput `pulumi:"networkAclId"`
	// Network quintuple ACL rule set.
	NetworkAclQuintupleSet NetworkAclQuintupleNetworkAclQuintupleSetOutput `pulumi:"networkAclQuintupleSet"`
}

// NewNetworkAclQuintuple registers a new resource with the given unique name, arguments, and options.
func NewNetworkAclQuintuple(ctx *pulumi.Context,
	name string, args *NetworkAclQuintupleArgs, opts ...pulumi.ResourceOption) (*NetworkAclQuintuple, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkAclId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkAclId'")
	}
	if args.NetworkAclQuintupleSet == nil {
		return nil, errors.New("invalid value for required argument 'NetworkAclQuintupleSet'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NetworkAclQuintuple
	err := ctx.RegisterResource("tencentcloud:Vpc/networkAclQuintuple:NetworkAclQuintuple", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAclQuintuple gets an existing NetworkAclQuintuple resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAclQuintuple(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclQuintupleState, opts ...pulumi.ResourceOption) (*NetworkAclQuintuple, error) {
	var resource NetworkAclQuintuple
	err := ctx.ReadResource("tencentcloud:Vpc/networkAclQuintuple:NetworkAclQuintuple", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAclQuintuple resources.
type networkAclQuintupleState struct {
	// Network ACL instance ID. For example:acl-12345678.
	NetworkAclId *string `pulumi:"networkAclId"`
	// Network quintuple ACL rule set.
	NetworkAclQuintupleSet *NetworkAclQuintupleNetworkAclQuintupleSet `pulumi:"networkAclQuintupleSet"`
}

type NetworkAclQuintupleState struct {
	// Network ACL instance ID. For example:acl-12345678.
	NetworkAclId pulumi.StringPtrInput
	// Network quintuple ACL rule set.
	NetworkAclQuintupleSet NetworkAclQuintupleNetworkAclQuintupleSetPtrInput
}

func (NetworkAclQuintupleState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclQuintupleState)(nil)).Elem()
}

type networkAclQuintupleArgs struct {
	// Network ACL instance ID. For example:acl-12345678.
	NetworkAclId string `pulumi:"networkAclId"`
	// Network quintuple ACL rule set.
	NetworkAclQuintupleSet NetworkAclQuintupleNetworkAclQuintupleSet `pulumi:"networkAclQuintupleSet"`
}

// The set of arguments for constructing a NetworkAclQuintuple resource.
type NetworkAclQuintupleArgs struct {
	// Network ACL instance ID. For example:acl-12345678.
	NetworkAclId pulumi.StringInput
	// Network quintuple ACL rule set.
	NetworkAclQuintupleSet NetworkAclQuintupleNetworkAclQuintupleSetInput
}

func (NetworkAclQuintupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclQuintupleArgs)(nil)).Elem()
}

type NetworkAclQuintupleInput interface {
	pulumi.Input

	ToNetworkAclQuintupleOutput() NetworkAclQuintupleOutput
	ToNetworkAclQuintupleOutputWithContext(ctx context.Context) NetworkAclQuintupleOutput
}

func (*NetworkAclQuintuple) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclQuintuple)(nil)).Elem()
}

func (i *NetworkAclQuintuple) ToNetworkAclQuintupleOutput() NetworkAclQuintupleOutput {
	return i.ToNetworkAclQuintupleOutputWithContext(context.Background())
}

func (i *NetworkAclQuintuple) ToNetworkAclQuintupleOutputWithContext(ctx context.Context) NetworkAclQuintupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclQuintupleOutput)
}

// NetworkAclQuintupleArrayInput is an input type that accepts NetworkAclQuintupleArray and NetworkAclQuintupleArrayOutput values.
// You can construct a concrete instance of `NetworkAclQuintupleArrayInput` via:
//
//	NetworkAclQuintupleArray{ NetworkAclQuintupleArgs{...} }
type NetworkAclQuintupleArrayInput interface {
	pulumi.Input

	ToNetworkAclQuintupleArrayOutput() NetworkAclQuintupleArrayOutput
	ToNetworkAclQuintupleArrayOutputWithContext(context.Context) NetworkAclQuintupleArrayOutput
}

type NetworkAclQuintupleArray []NetworkAclQuintupleInput

func (NetworkAclQuintupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclQuintuple)(nil)).Elem()
}

func (i NetworkAclQuintupleArray) ToNetworkAclQuintupleArrayOutput() NetworkAclQuintupleArrayOutput {
	return i.ToNetworkAclQuintupleArrayOutputWithContext(context.Background())
}

func (i NetworkAclQuintupleArray) ToNetworkAclQuintupleArrayOutputWithContext(ctx context.Context) NetworkAclQuintupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclQuintupleArrayOutput)
}

// NetworkAclQuintupleMapInput is an input type that accepts NetworkAclQuintupleMap and NetworkAclQuintupleMapOutput values.
// You can construct a concrete instance of `NetworkAclQuintupleMapInput` via:
//
//	NetworkAclQuintupleMap{ "key": NetworkAclQuintupleArgs{...} }
type NetworkAclQuintupleMapInput interface {
	pulumi.Input

	ToNetworkAclQuintupleMapOutput() NetworkAclQuintupleMapOutput
	ToNetworkAclQuintupleMapOutputWithContext(context.Context) NetworkAclQuintupleMapOutput
}

type NetworkAclQuintupleMap map[string]NetworkAclQuintupleInput

func (NetworkAclQuintupleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclQuintuple)(nil)).Elem()
}

func (i NetworkAclQuintupleMap) ToNetworkAclQuintupleMapOutput() NetworkAclQuintupleMapOutput {
	return i.ToNetworkAclQuintupleMapOutputWithContext(context.Background())
}

func (i NetworkAclQuintupleMap) ToNetworkAclQuintupleMapOutputWithContext(ctx context.Context) NetworkAclQuintupleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclQuintupleMapOutput)
}

type NetworkAclQuintupleOutput struct{ *pulumi.OutputState }

func (NetworkAclQuintupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclQuintuple)(nil)).Elem()
}

func (o NetworkAclQuintupleOutput) ToNetworkAclQuintupleOutput() NetworkAclQuintupleOutput {
	return o
}

func (o NetworkAclQuintupleOutput) ToNetworkAclQuintupleOutputWithContext(ctx context.Context) NetworkAclQuintupleOutput {
	return o
}

// Network ACL instance ID. For example:acl-12345678.
func (o NetworkAclQuintupleOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAclQuintuple) pulumi.StringOutput { return v.NetworkAclId }).(pulumi.StringOutput)
}

// Network quintuple ACL rule set.
func (o NetworkAclQuintupleOutput) NetworkAclQuintupleSet() NetworkAclQuintupleNetworkAclQuintupleSetOutput {
	return o.ApplyT(func(v *NetworkAclQuintuple) NetworkAclQuintupleNetworkAclQuintupleSetOutput {
		return v.NetworkAclQuintupleSet
	}).(NetworkAclQuintupleNetworkAclQuintupleSetOutput)
}

type NetworkAclQuintupleArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclQuintupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclQuintuple)(nil)).Elem()
}

func (o NetworkAclQuintupleArrayOutput) ToNetworkAclQuintupleArrayOutput() NetworkAclQuintupleArrayOutput {
	return o
}

func (o NetworkAclQuintupleArrayOutput) ToNetworkAclQuintupleArrayOutputWithContext(ctx context.Context) NetworkAclQuintupleArrayOutput {
	return o
}

func (o NetworkAclQuintupleArrayOutput) Index(i pulumi.IntInput) NetworkAclQuintupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkAclQuintuple {
		return vs[0].([]*NetworkAclQuintuple)[vs[1].(int)]
	}).(NetworkAclQuintupleOutput)
}

type NetworkAclQuintupleMapOutput struct{ *pulumi.OutputState }

func (NetworkAclQuintupleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclQuintuple)(nil)).Elem()
}

func (o NetworkAclQuintupleMapOutput) ToNetworkAclQuintupleMapOutput() NetworkAclQuintupleMapOutput {
	return o
}

func (o NetworkAclQuintupleMapOutput) ToNetworkAclQuintupleMapOutputWithContext(ctx context.Context) NetworkAclQuintupleMapOutput {
	return o
}

func (o NetworkAclQuintupleMapOutput) MapIndex(k pulumi.StringInput) NetworkAclQuintupleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkAclQuintuple {
		return vs[0].(map[string]*NetworkAclQuintuple)[vs[1].(string)]
	}).(NetworkAclQuintupleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclQuintupleInput)(nil)).Elem(), &NetworkAclQuintuple{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclQuintupleArrayInput)(nil)).Elem(), NetworkAclQuintupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclQuintupleMapInput)(nil)).Elem(), NetworkAclQuintupleMap{})
	pulumi.RegisterOutputType(NetworkAclQuintupleOutput{})
	pulumi.RegisterOutputType(NetworkAclQuintupleArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclQuintupleMapOutput{})
}
