// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cfw addressTemplate
//
// ## Example Usage
// ### If type is 1
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cfw.NewAddressTemplate(ctx, "example", &Cfw.AddressTemplateArgs{
//				Detail:   pulumi.String("test template"),
//				IpString: pulumi.String("1.1.1.1,2.2.2.2"),
//				Type:     pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### If type is 5
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cfw.NewAddressTemplate(ctx, "example", &Cfw.AddressTemplateArgs{
//				Detail:   pulumi.String("test template"),
//				IpString: pulumi.String("www.qq.com,www.tencent.com"),
//				Type:     pulumi.Int(5),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cfw address_template can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cfw/addressTemplate:AddressTemplate example mb_1300846651_1695611353900
//
// ```
type AddressTemplate struct {
	pulumi.CustomResourceState

	// Template Detail.
	Detail pulumi.StringOutput `pulumi:"detail"`
	// Type is 1, ip template eg: 1.1.1.1,2.2.2.2; Type is 5, domain name template eg: www.qq.com, www.tencent.com.
	IpString pulumi.StringOutput `pulumi:"ipString"`
	// Template name.
	Name pulumi.StringOutput `pulumi:"name"`
	// 1: ip template; 5: domain name templates.
	Type pulumi.IntOutput `pulumi:"type"`
}

// NewAddressTemplate registers a new resource with the given unique name, arguments, and options.
func NewAddressTemplate(ctx *pulumi.Context,
	name string, args *AddressTemplateArgs, opts ...pulumi.ResourceOption) (*AddressTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Detail == nil {
		return nil, errors.New("invalid value for required argument 'Detail'")
	}
	if args.IpString == nil {
		return nil, errors.New("invalid value for required argument 'IpString'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AddressTemplate
	err := ctx.RegisterResource("tencentcloud:Cfw/addressTemplate:AddressTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddressTemplate gets an existing AddressTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddressTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddressTemplateState, opts ...pulumi.ResourceOption) (*AddressTemplate, error) {
	var resource AddressTemplate
	err := ctx.ReadResource("tencentcloud:Cfw/addressTemplate:AddressTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddressTemplate resources.
type addressTemplateState struct {
	// Template Detail.
	Detail *string `pulumi:"detail"`
	// Type is 1, ip template eg: 1.1.1.1,2.2.2.2; Type is 5, domain name template eg: www.qq.com, www.tencent.com.
	IpString *string `pulumi:"ipString"`
	// Template name.
	Name *string `pulumi:"name"`
	// 1: ip template; 5: domain name templates.
	Type *int `pulumi:"type"`
}

type AddressTemplateState struct {
	// Template Detail.
	Detail pulumi.StringPtrInput
	// Type is 1, ip template eg: 1.1.1.1,2.2.2.2; Type is 5, domain name template eg: www.qq.com, www.tencent.com.
	IpString pulumi.StringPtrInput
	// Template name.
	Name pulumi.StringPtrInput
	// 1: ip template; 5: domain name templates.
	Type pulumi.IntPtrInput
}

func (AddressTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*addressTemplateState)(nil)).Elem()
}

type addressTemplateArgs struct {
	// Template Detail.
	Detail string `pulumi:"detail"`
	// Type is 1, ip template eg: 1.1.1.1,2.2.2.2; Type is 5, domain name template eg: www.qq.com, www.tencent.com.
	IpString string `pulumi:"ipString"`
	// Template name.
	Name *string `pulumi:"name"`
	// 1: ip template; 5: domain name templates.
	Type int `pulumi:"type"`
}

// The set of arguments for constructing a AddressTemplate resource.
type AddressTemplateArgs struct {
	// Template Detail.
	Detail pulumi.StringInput
	// Type is 1, ip template eg: 1.1.1.1,2.2.2.2; Type is 5, domain name template eg: www.qq.com, www.tencent.com.
	IpString pulumi.StringInput
	// Template name.
	Name pulumi.StringPtrInput
	// 1: ip template; 5: domain name templates.
	Type pulumi.IntInput
}

func (AddressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addressTemplateArgs)(nil)).Elem()
}

type AddressTemplateInput interface {
	pulumi.Input

	ToAddressTemplateOutput() AddressTemplateOutput
	ToAddressTemplateOutputWithContext(ctx context.Context) AddressTemplateOutput
}

func (*AddressTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressTemplate)(nil)).Elem()
}

func (i *AddressTemplate) ToAddressTemplateOutput() AddressTemplateOutput {
	return i.ToAddressTemplateOutputWithContext(context.Background())
}

func (i *AddressTemplate) ToAddressTemplateOutputWithContext(ctx context.Context) AddressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTemplateOutput)
}

// AddressTemplateArrayInput is an input type that accepts AddressTemplateArray and AddressTemplateArrayOutput values.
// You can construct a concrete instance of `AddressTemplateArrayInput` via:
//
//	AddressTemplateArray{ AddressTemplateArgs{...} }
type AddressTemplateArrayInput interface {
	pulumi.Input

	ToAddressTemplateArrayOutput() AddressTemplateArrayOutput
	ToAddressTemplateArrayOutputWithContext(context.Context) AddressTemplateArrayOutput
}

type AddressTemplateArray []AddressTemplateInput

func (AddressTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressTemplate)(nil)).Elem()
}

func (i AddressTemplateArray) ToAddressTemplateArrayOutput() AddressTemplateArrayOutput {
	return i.ToAddressTemplateArrayOutputWithContext(context.Background())
}

func (i AddressTemplateArray) ToAddressTemplateArrayOutputWithContext(ctx context.Context) AddressTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTemplateArrayOutput)
}

// AddressTemplateMapInput is an input type that accepts AddressTemplateMap and AddressTemplateMapOutput values.
// You can construct a concrete instance of `AddressTemplateMapInput` via:
//
//	AddressTemplateMap{ "key": AddressTemplateArgs{...} }
type AddressTemplateMapInput interface {
	pulumi.Input

	ToAddressTemplateMapOutput() AddressTemplateMapOutput
	ToAddressTemplateMapOutputWithContext(context.Context) AddressTemplateMapOutput
}

type AddressTemplateMap map[string]AddressTemplateInput

func (AddressTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressTemplate)(nil)).Elem()
}

func (i AddressTemplateMap) ToAddressTemplateMapOutput() AddressTemplateMapOutput {
	return i.ToAddressTemplateMapOutputWithContext(context.Background())
}

func (i AddressTemplateMap) ToAddressTemplateMapOutputWithContext(ctx context.Context) AddressTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTemplateMapOutput)
}

type AddressTemplateOutput struct{ *pulumi.OutputState }

func (AddressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressTemplate)(nil)).Elem()
}

func (o AddressTemplateOutput) ToAddressTemplateOutput() AddressTemplateOutput {
	return o
}

func (o AddressTemplateOutput) ToAddressTemplateOutputWithContext(ctx context.Context) AddressTemplateOutput {
	return o
}

// Template Detail.
func (o AddressTemplateOutput) Detail() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressTemplate) pulumi.StringOutput { return v.Detail }).(pulumi.StringOutput)
}

// Type is 1, ip template eg: 1.1.1.1,2.2.2.2; Type is 5, domain name template eg: www.qq.com, www.tencent.com.
func (o AddressTemplateOutput) IpString() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressTemplate) pulumi.StringOutput { return v.IpString }).(pulumi.StringOutput)
}

// Template name.
func (o AddressTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// 1: ip template; 5: domain name templates.
func (o AddressTemplateOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v *AddressTemplate) pulumi.IntOutput { return v.Type }).(pulumi.IntOutput)
}

type AddressTemplateArrayOutput struct{ *pulumi.OutputState }

func (AddressTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressTemplate)(nil)).Elem()
}

func (o AddressTemplateArrayOutput) ToAddressTemplateArrayOutput() AddressTemplateArrayOutput {
	return o
}

func (o AddressTemplateArrayOutput) ToAddressTemplateArrayOutputWithContext(ctx context.Context) AddressTemplateArrayOutput {
	return o
}

func (o AddressTemplateArrayOutput) Index(i pulumi.IntInput) AddressTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AddressTemplate {
		return vs[0].([]*AddressTemplate)[vs[1].(int)]
	}).(AddressTemplateOutput)
}

type AddressTemplateMapOutput struct{ *pulumi.OutputState }

func (AddressTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressTemplate)(nil)).Elem()
}

func (o AddressTemplateMapOutput) ToAddressTemplateMapOutput() AddressTemplateMapOutput {
	return o
}

func (o AddressTemplateMapOutput) ToAddressTemplateMapOutputWithContext(ctx context.Context) AddressTemplateMapOutput {
	return o
}

func (o AddressTemplateMapOutput) MapIndex(k pulumi.StringInput) AddressTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AddressTemplate {
		return vs[0].(map[string]*AddressTemplate)[vs[1].(string)]
	}).(AddressTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTemplateInput)(nil)).Elem(), &AddressTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTemplateArrayInput)(nil)).Elem(), AddressTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTemplateMapInput)(nil)).Elem(), AddressTemplateMap{})
	pulumi.RegisterOutputType(AddressTemplateOutput{})
	pulumi.RegisterOutputType(AddressTemplateArrayOutput{})
	pulumi.RegisterOutputType(AddressTemplateMapOutput{})
}
