// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cfw natFwSwitches
//
// ## Example Usage
// ### Query Nat instance'switch by instance id
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cfw.GetNatFwSwitches(ctx, &cfw.GetNatFwSwitchesArgs{
//				NatInsId: pulumi.StringRef("cfwnat-18d2ba18"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Or filter by switch status
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cfw.GetNatFwSwitches(ctx, &cfw.GetNatFwSwitchesArgs{
//				NatInsId: pulumi.StringRef("cfwnat-18d2ba18"),
//				Status:   pulumi.IntRef(1),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNatFwSwitches(ctx *pulumi.Context, args *GetNatFwSwitchesArgs, opts ...pulumi.InvokeOption) (*GetNatFwSwitchesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetNatFwSwitchesResult
	err := ctx.Invoke("tencentcloud:Cfw/getNatFwSwitches:getNatFwSwitches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNatFwSwitches.
type GetNatFwSwitchesArgs struct {
	// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
	NatInsId *string `pulumi:"natInsId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Switch status, 1 open; 0 close.
	Status *int `pulumi:"status"`
}

// A collection of values returned by getNatFwSwitches.
type GetNatFwSwitchesResult struct {
	// NAT border firewall switch list data.
	Datas []GetNatFwSwitchesData `pulumi:"datas"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// NAT firewall instance Id.
	NatInsId         *string `pulumi:"natInsId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Switch status.
	Status *int `pulumi:"status"`
}

func GetNatFwSwitchesOutput(ctx *pulumi.Context, args GetNatFwSwitchesOutputArgs, opts ...pulumi.InvokeOption) GetNatFwSwitchesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNatFwSwitchesResult, error) {
			args := v.(GetNatFwSwitchesArgs)
			r, err := GetNatFwSwitches(ctx, &args, opts...)
			var s GetNatFwSwitchesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNatFwSwitchesResultOutput)
}

// A collection of arguments for invoking getNatFwSwitches.
type GetNatFwSwitchesOutputArgs struct {
	// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
	NatInsId pulumi.StringPtrInput `pulumi:"natInsId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Switch status, 1 open; 0 close.
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (GetNatFwSwitchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatFwSwitchesArgs)(nil)).Elem()
}

// A collection of values returned by getNatFwSwitches.
type GetNatFwSwitchesResultOutput struct{ *pulumi.OutputState }

func (GetNatFwSwitchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatFwSwitchesResult)(nil)).Elem()
}

func (o GetNatFwSwitchesResultOutput) ToGetNatFwSwitchesResultOutput() GetNatFwSwitchesResultOutput {
	return o
}

func (o GetNatFwSwitchesResultOutput) ToGetNatFwSwitchesResultOutputWithContext(ctx context.Context) GetNatFwSwitchesResultOutput {
	return o
}

// NAT border firewall switch list data.
func (o GetNatFwSwitchesResultOutput) Datas() GetNatFwSwitchesDataArrayOutput {
	return o.ApplyT(func(v GetNatFwSwitchesResult) []GetNatFwSwitchesData { return v.Datas }).(GetNatFwSwitchesDataArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNatFwSwitchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesResult) string { return v.Id }).(pulumi.StringOutput)
}

// NAT firewall instance Id.
func (o GetNatFwSwitchesResultOutput) NatInsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNatFwSwitchesResult) *string { return v.NatInsId }).(pulumi.StringPtrOutput)
}

func (o GetNatFwSwitchesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNatFwSwitchesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Switch status.
func (o GetNatFwSwitchesResultOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNatFwSwitchesResult) *int { return v.Status }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNatFwSwitchesResultOutput{})
}
