// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cfw vpcFirewallSwitch
//
// ## Example Usage
// ### Turn off switch
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpcFwSwitches, err := Cfw.GetVpcFwSwitches(ctx, &cfw.GetVpcFwSwitchesArgs{
//				VpcInsId: "cfwg-c8c2de41",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Cfw.NewVpcFirewallSwitch(ctx, "exampleVpcFirewallSwitch", &Cfw.VpcFirewallSwitchArgs{
//				VpcInsId: pulumi.String(exampleVpcFwSwitches.Id),
//				SwitchId: pulumi.String(exampleVpcFwSwitches.SwitchLists[0].SwitchId),
//				Enable:   pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Or turn on switch
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpcFwSwitches, err := Cfw.GetVpcFwSwitches(ctx, &cfw.GetVpcFwSwitchesArgs{
//				VpcInsId: "cfwg-c8c2de41",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Cfw.NewVpcFirewallSwitch(ctx, "exampleVpcFirewallSwitch", &Cfw.VpcFirewallSwitchArgs{
//				VpcInsId: pulumi.String(exampleVpcFwSwitches.Id),
//				SwitchId: pulumi.String(exampleVpcFwSwitches.SwitchLists[0].SwitchId),
//				Enable:   pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cfw vpc_firewall_switch can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cfw/vpcFirewallSwitch:VpcFirewallSwitch example cfwg-c8c2de41#cfws-f2c63ded84
//
// ```
type VpcFirewallSwitch struct {
	pulumi.CustomResourceState

	// Turn the switch on or off. 0: turn off the switch; 1: Turn on the switch.
	Enable pulumi.IntOutput `pulumi:"enable"`
	// Firewall switch ID.
	SwitchId pulumi.StringOutput `pulumi:"switchId"`
	// Firewall instance id.
	VpcInsId pulumi.StringOutput `pulumi:"vpcInsId"`
}

// NewVpcFirewallSwitch registers a new resource with the given unique name, arguments, and options.
func NewVpcFirewallSwitch(ctx *pulumi.Context,
	name string, args *VpcFirewallSwitchArgs, opts ...pulumi.ResourceOption) (*VpcFirewallSwitch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enable == nil {
		return nil, errors.New("invalid value for required argument 'Enable'")
	}
	if args.SwitchId == nil {
		return nil, errors.New("invalid value for required argument 'SwitchId'")
	}
	if args.VpcInsId == nil {
		return nil, errors.New("invalid value for required argument 'VpcInsId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource VpcFirewallSwitch
	err := ctx.RegisterResource("tencentcloud:Cfw/vpcFirewallSwitch:VpcFirewallSwitch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcFirewallSwitch gets an existing VpcFirewallSwitch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcFirewallSwitch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcFirewallSwitchState, opts ...pulumi.ResourceOption) (*VpcFirewallSwitch, error) {
	var resource VpcFirewallSwitch
	err := ctx.ReadResource("tencentcloud:Cfw/vpcFirewallSwitch:VpcFirewallSwitch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcFirewallSwitch resources.
type vpcFirewallSwitchState struct {
	// Turn the switch on or off. 0: turn off the switch; 1: Turn on the switch.
	Enable *int `pulumi:"enable"`
	// Firewall switch ID.
	SwitchId *string `pulumi:"switchId"`
	// Firewall instance id.
	VpcInsId *string `pulumi:"vpcInsId"`
}

type VpcFirewallSwitchState struct {
	// Turn the switch on or off. 0: turn off the switch; 1: Turn on the switch.
	Enable pulumi.IntPtrInput
	// Firewall switch ID.
	SwitchId pulumi.StringPtrInput
	// Firewall instance id.
	VpcInsId pulumi.StringPtrInput
}

func (VpcFirewallSwitchState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcFirewallSwitchState)(nil)).Elem()
}

type vpcFirewallSwitchArgs struct {
	// Turn the switch on or off. 0: turn off the switch; 1: Turn on the switch.
	Enable int `pulumi:"enable"`
	// Firewall switch ID.
	SwitchId string `pulumi:"switchId"`
	// Firewall instance id.
	VpcInsId string `pulumi:"vpcInsId"`
}

// The set of arguments for constructing a VpcFirewallSwitch resource.
type VpcFirewallSwitchArgs struct {
	// Turn the switch on or off. 0: turn off the switch; 1: Turn on the switch.
	Enable pulumi.IntInput
	// Firewall switch ID.
	SwitchId pulumi.StringInput
	// Firewall instance id.
	VpcInsId pulumi.StringInput
}

func (VpcFirewallSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcFirewallSwitchArgs)(nil)).Elem()
}

type VpcFirewallSwitchInput interface {
	pulumi.Input

	ToVpcFirewallSwitchOutput() VpcFirewallSwitchOutput
	ToVpcFirewallSwitchOutputWithContext(ctx context.Context) VpcFirewallSwitchOutput
}

func (*VpcFirewallSwitch) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcFirewallSwitch)(nil)).Elem()
}

func (i *VpcFirewallSwitch) ToVpcFirewallSwitchOutput() VpcFirewallSwitchOutput {
	return i.ToVpcFirewallSwitchOutputWithContext(context.Background())
}

func (i *VpcFirewallSwitch) ToVpcFirewallSwitchOutputWithContext(ctx context.Context) VpcFirewallSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcFirewallSwitchOutput)
}

// VpcFirewallSwitchArrayInput is an input type that accepts VpcFirewallSwitchArray and VpcFirewallSwitchArrayOutput values.
// You can construct a concrete instance of `VpcFirewallSwitchArrayInput` via:
//
//	VpcFirewallSwitchArray{ VpcFirewallSwitchArgs{...} }
type VpcFirewallSwitchArrayInput interface {
	pulumi.Input

	ToVpcFirewallSwitchArrayOutput() VpcFirewallSwitchArrayOutput
	ToVpcFirewallSwitchArrayOutputWithContext(context.Context) VpcFirewallSwitchArrayOutput
}

type VpcFirewallSwitchArray []VpcFirewallSwitchInput

func (VpcFirewallSwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcFirewallSwitch)(nil)).Elem()
}

func (i VpcFirewallSwitchArray) ToVpcFirewallSwitchArrayOutput() VpcFirewallSwitchArrayOutput {
	return i.ToVpcFirewallSwitchArrayOutputWithContext(context.Background())
}

func (i VpcFirewallSwitchArray) ToVpcFirewallSwitchArrayOutputWithContext(ctx context.Context) VpcFirewallSwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcFirewallSwitchArrayOutput)
}

// VpcFirewallSwitchMapInput is an input type that accepts VpcFirewallSwitchMap and VpcFirewallSwitchMapOutput values.
// You can construct a concrete instance of `VpcFirewallSwitchMapInput` via:
//
//	VpcFirewallSwitchMap{ "key": VpcFirewallSwitchArgs{...} }
type VpcFirewallSwitchMapInput interface {
	pulumi.Input

	ToVpcFirewallSwitchMapOutput() VpcFirewallSwitchMapOutput
	ToVpcFirewallSwitchMapOutputWithContext(context.Context) VpcFirewallSwitchMapOutput
}

type VpcFirewallSwitchMap map[string]VpcFirewallSwitchInput

func (VpcFirewallSwitchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcFirewallSwitch)(nil)).Elem()
}

func (i VpcFirewallSwitchMap) ToVpcFirewallSwitchMapOutput() VpcFirewallSwitchMapOutput {
	return i.ToVpcFirewallSwitchMapOutputWithContext(context.Background())
}

func (i VpcFirewallSwitchMap) ToVpcFirewallSwitchMapOutputWithContext(ctx context.Context) VpcFirewallSwitchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcFirewallSwitchMapOutput)
}

type VpcFirewallSwitchOutput struct{ *pulumi.OutputState }

func (VpcFirewallSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcFirewallSwitch)(nil)).Elem()
}

func (o VpcFirewallSwitchOutput) ToVpcFirewallSwitchOutput() VpcFirewallSwitchOutput {
	return o
}

func (o VpcFirewallSwitchOutput) ToVpcFirewallSwitchOutputWithContext(ctx context.Context) VpcFirewallSwitchOutput {
	return o
}

// Turn the switch on or off. 0: turn off the switch; 1: Turn on the switch.
func (o VpcFirewallSwitchOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcFirewallSwitch) pulumi.IntOutput { return v.Enable }).(pulumi.IntOutput)
}

// Firewall switch ID.
func (o VpcFirewallSwitchOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcFirewallSwitch) pulumi.StringOutput { return v.SwitchId }).(pulumi.StringOutput)
}

// Firewall instance id.
func (o VpcFirewallSwitchOutput) VpcInsId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcFirewallSwitch) pulumi.StringOutput { return v.VpcInsId }).(pulumi.StringOutput)
}

type VpcFirewallSwitchArrayOutput struct{ *pulumi.OutputState }

func (VpcFirewallSwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcFirewallSwitch)(nil)).Elem()
}

func (o VpcFirewallSwitchArrayOutput) ToVpcFirewallSwitchArrayOutput() VpcFirewallSwitchArrayOutput {
	return o
}

func (o VpcFirewallSwitchArrayOutput) ToVpcFirewallSwitchArrayOutputWithContext(ctx context.Context) VpcFirewallSwitchArrayOutput {
	return o
}

func (o VpcFirewallSwitchArrayOutput) Index(i pulumi.IntInput) VpcFirewallSwitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcFirewallSwitch {
		return vs[0].([]*VpcFirewallSwitch)[vs[1].(int)]
	}).(VpcFirewallSwitchOutput)
}

type VpcFirewallSwitchMapOutput struct{ *pulumi.OutputState }

func (VpcFirewallSwitchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcFirewallSwitch)(nil)).Elem()
}

func (o VpcFirewallSwitchMapOutput) ToVpcFirewallSwitchMapOutput() VpcFirewallSwitchMapOutput {
	return o
}

func (o VpcFirewallSwitchMapOutput) ToVpcFirewallSwitchMapOutputWithContext(ctx context.Context) VpcFirewallSwitchMapOutput {
	return o
}

func (o VpcFirewallSwitchMapOutput) MapIndex(k pulumi.StringInput) VpcFirewallSwitchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcFirewallSwitch {
		return vs[0].(map[string]*VpcFirewallSwitch)[vs[1].(string)]
	}).(VpcFirewallSwitchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcFirewallSwitchInput)(nil)).Elem(), &VpcFirewallSwitch{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcFirewallSwitchArrayInput)(nil)).Elem(), VpcFirewallSwitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcFirewallSwitchMapInput)(nil)).Elem(), VpcFirewallSwitchMap{})
	pulumi.RegisterOutputType(VpcFirewallSwitchOutput{})
	pulumi.RegisterOutputType(VpcFirewallSwitchArrayOutput{})
	pulumi.RegisterOutputType(VpcFirewallSwitchMapOutput{})
}
