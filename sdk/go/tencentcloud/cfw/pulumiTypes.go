// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NatInstanceNewModeItems struct {
	// List of egress elastic public network IPs bound in the new mode.
	Eips []string `pulumi:"eips"`
	// List of vpcs connected in new mode.
	VpcLists []string `pulumi:"vpcLists"`
}

// NatInstanceNewModeItemsInput is an input type that accepts NatInstanceNewModeItemsArgs and NatInstanceNewModeItemsOutput values.
// You can construct a concrete instance of `NatInstanceNewModeItemsInput` via:
//
//	NatInstanceNewModeItemsArgs{...}
type NatInstanceNewModeItemsInput interface {
	pulumi.Input

	ToNatInstanceNewModeItemsOutput() NatInstanceNewModeItemsOutput
	ToNatInstanceNewModeItemsOutputWithContext(context.Context) NatInstanceNewModeItemsOutput
}

type NatInstanceNewModeItemsArgs struct {
	// List of egress elastic public network IPs bound in the new mode.
	Eips pulumi.StringArrayInput `pulumi:"eips"`
	// List of vpcs connected in new mode.
	VpcLists pulumi.StringArrayInput `pulumi:"vpcLists"`
}

func (NatInstanceNewModeItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatInstanceNewModeItems)(nil)).Elem()
}

func (i NatInstanceNewModeItemsArgs) ToNatInstanceNewModeItemsOutput() NatInstanceNewModeItemsOutput {
	return i.ToNatInstanceNewModeItemsOutputWithContext(context.Background())
}

func (i NatInstanceNewModeItemsArgs) ToNatInstanceNewModeItemsOutputWithContext(ctx context.Context) NatInstanceNewModeItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatInstanceNewModeItemsOutput)
}

func (i NatInstanceNewModeItemsArgs) ToNatInstanceNewModeItemsPtrOutput() NatInstanceNewModeItemsPtrOutput {
	return i.ToNatInstanceNewModeItemsPtrOutputWithContext(context.Background())
}

func (i NatInstanceNewModeItemsArgs) ToNatInstanceNewModeItemsPtrOutputWithContext(ctx context.Context) NatInstanceNewModeItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatInstanceNewModeItemsOutput).ToNatInstanceNewModeItemsPtrOutputWithContext(ctx)
}

// NatInstanceNewModeItemsPtrInput is an input type that accepts NatInstanceNewModeItemsArgs, NatInstanceNewModeItemsPtr and NatInstanceNewModeItemsPtrOutput values.
// You can construct a concrete instance of `NatInstanceNewModeItemsPtrInput` via:
//
//	        NatInstanceNewModeItemsArgs{...}
//
//	or:
//
//	        nil
type NatInstanceNewModeItemsPtrInput interface {
	pulumi.Input

	ToNatInstanceNewModeItemsPtrOutput() NatInstanceNewModeItemsPtrOutput
	ToNatInstanceNewModeItemsPtrOutputWithContext(context.Context) NatInstanceNewModeItemsPtrOutput
}

type natInstanceNewModeItemsPtrType NatInstanceNewModeItemsArgs

func NatInstanceNewModeItemsPtr(v *NatInstanceNewModeItemsArgs) NatInstanceNewModeItemsPtrInput {
	return (*natInstanceNewModeItemsPtrType)(v)
}

func (*natInstanceNewModeItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatInstanceNewModeItems)(nil)).Elem()
}

func (i *natInstanceNewModeItemsPtrType) ToNatInstanceNewModeItemsPtrOutput() NatInstanceNewModeItemsPtrOutput {
	return i.ToNatInstanceNewModeItemsPtrOutputWithContext(context.Background())
}

func (i *natInstanceNewModeItemsPtrType) ToNatInstanceNewModeItemsPtrOutputWithContext(ctx context.Context) NatInstanceNewModeItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatInstanceNewModeItemsPtrOutput)
}

type NatInstanceNewModeItemsOutput struct{ *pulumi.OutputState }

func (NatInstanceNewModeItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatInstanceNewModeItems)(nil)).Elem()
}

func (o NatInstanceNewModeItemsOutput) ToNatInstanceNewModeItemsOutput() NatInstanceNewModeItemsOutput {
	return o
}

func (o NatInstanceNewModeItemsOutput) ToNatInstanceNewModeItemsOutputWithContext(ctx context.Context) NatInstanceNewModeItemsOutput {
	return o
}

func (o NatInstanceNewModeItemsOutput) ToNatInstanceNewModeItemsPtrOutput() NatInstanceNewModeItemsPtrOutput {
	return o.ToNatInstanceNewModeItemsPtrOutputWithContext(context.Background())
}

func (o NatInstanceNewModeItemsOutput) ToNatInstanceNewModeItemsPtrOutputWithContext(ctx context.Context) NatInstanceNewModeItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatInstanceNewModeItems) *NatInstanceNewModeItems {
		return &v
	}).(NatInstanceNewModeItemsPtrOutput)
}

// List of egress elastic public network IPs bound in the new mode.
func (o NatInstanceNewModeItemsOutput) Eips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatInstanceNewModeItems) []string { return v.Eips }).(pulumi.StringArrayOutput)
}

// List of vpcs connected in new mode.
func (o NatInstanceNewModeItemsOutput) VpcLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatInstanceNewModeItems) []string { return v.VpcLists }).(pulumi.StringArrayOutput)
}

type NatInstanceNewModeItemsPtrOutput struct{ *pulumi.OutputState }

func (NatInstanceNewModeItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatInstanceNewModeItems)(nil)).Elem()
}

func (o NatInstanceNewModeItemsPtrOutput) ToNatInstanceNewModeItemsPtrOutput() NatInstanceNewModeItemsPtrOutput {
	return o
}

func (o NatInstanceNewModeItemsPtrOutput) ToNatInstanceNewModeItemsPtrOutputWithContext(ctx context.Context) NatInstanceNewModeItemsPtrOutput {
	return o
}

func (o NatInstanceNewModeItemsPtrOutput) Elem() NatInstanceNewModeItemsOutput {
	return o.ApplyT(func(v *NatInstanceNewModeItems) NatInstanceNewModeItems {
		if v != nil {
			return *v
		}
		var ret NatInstanceNewModeItems
		return ret
	}).(NatInstanceNewModeItemsOutput)
}

// List of egress elastic public network IPs bound in the new mode.
func (o NatInstanceNewModeItemsPtrOutput) Eips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatInstanceNewModeItems) []string {
		if v == nil {
			return nil
		}
		return v.Eips
	}).(pulumi.StringArrayOutput)
}

// List of vpcs connected in new mode.
func (o NatInstanceNewModeItemsPtrOutput) VpcLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatInstanceNewModeItems) []string {
		if v == nil {
			return nil
		}
		return v.VpcLists
	}).(pulumi.StringArrayOutput)
}

type VpcInstanceVpcFwInstance struct {
	// Deploy regional information.
	FwDeploy VpcInstanceVpcFwInstanceFwDeploy `pulumi:"fwDeploy"`
	FwInsId  *string                          `pulumi:"fwInsId"`
	// Firewall instance name.
	Name string `pulumi:"name"`
	// List of VpcIds accessed in private network mode; only used in private network mode.
	VpcIds []string `pulumi:"vpcIds"`
}

// VpcInstanceVpcFwInstanceInput is an input type that accepts VpcInstanceVpcFwInstanceArgs and VpcInstanceVpcFwInstanceOutput values.
// You can construct a concrete instance of `VpcInstanceVpcFwInstanceInput` via:
//
//	VpcInstanceVpcFwInstanceArgs{...}
type VpcInstanceVpcFwInstanceInput interface {
	pulumi.Input

	ToVpcInstanceVpcFwInstanceOutput() VpcInstanceVpcFwInstanceOutput
	ToVpcInstanceVpcFwInstanceOutputWithContext(context.Context) VpcInstanceVpcFwInstanceOutput
}

type VpcInstanceVpcFwInstanceArgs struct {
	// Deploy regional information.
	FwDeploy VpcInstanceVpcFwInstanceFwDeployInput `pulumi:"fwDeploy"`
	FwInsId  pulumi.StringPtrInput                 `pulumi:"fwInsId"`
	// Firewall instance name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of VpcIds accessed in private network mode; only used in private network mode.
	VpcIds pulumi.StringArrayInput `pulumi:"vpcIds"`
}

func (VpcInstanceVpcFwInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcInstanceVpcFwInstance)(nil)).Elem()
}

func (i VpcInstanceVpcFwInstanceArgs) ToVpcInstanceVpcFwInstanceOutput() VpcInstanceVpcFwInstanceOutput {
	return i.ToVpcInstanceVpcFwInstanceOutputWithContext(context.Background())
}

func (i VpcInstanceVpcFwInstanceArgs) ToVpcInstanceVpcFwInstanceOutputWithContext(ctx context.Context) VpcInstanceVpcFwInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcInstanceVpcFwInstanceOutput)
}

// VpcInstanceVpcFwInstanceArrayInput is an input type that accepts VpcInstanceVpcFwInstanceArray and VpcInstanceVpcFwInstanceArrayOutput values.
// You can construct a concrete instance of `VpcInstanceVpcFwInstanceArrayInput` via:
//
//	VpcInstanceVpcFwInstanceArray{ VpcInstanceVpcFwInstanceArgs{...} }
type VpcInstanceVpcFwInstanceArrayInput interface {
	pulumi.Input

	ToVpcInstanceVpcFwInstanceArrayOutput() VpcInstanceVpcFwInstanceArrayOutput
	ToVpcInstanceVpcFwInstanceArrayOutputWithContext(context.Context) VpcInstanceVpcFwInstanceArrayOutput
}

type VpcInstanceVpcFwInstanceArray []VpcInstanceVpcFwInstanceInput

func (VpcInstanceVpcFwInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcInstanceVpcFwInstance)(nil)).Elem()
}

func (i VpcInstanceVpcFwInstanceArray) ToVpcInstanceVpcFwInstanceArrayOutput() VpcInstanceVpcFwInstanceArrayOutput {
	return i.ToVpcInstanceVpcFwInstanceArrayOutputWithContext(context.Background())
}

func (i VpcInstanceVpcFwInstanceArray) ToVpcInstanceVpcFwInstanceArrayOutputWithContext(ctx context.Context) VpcInstanceVpcFwInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcInstanceVpcFwInstanceArrayOutput)
}

type VpcInstanceVpcFwInstanceOutput struct{ *pulumi.OutputState }

func (VpcInstanceVpcFwInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcInstanceVpcFwInstance)(nil)).Elem()
}

func (o VpcInstanceVpcFwInstanceOutput) ToVpcInstanceVpcFwInstanceOutput() VpcInstanceVpcFwInstanceOutput {
	return o
}

func (o VpcInstanceVpcFwInstanceOutput) ToVpcInstanceVpcFwInstanceOutputWithContext(ctx context.Context) VpcInstanceVpcFwInstanceOutput {
	return o
}

// Deploy regional information.
func (o VpcInstanceVpcFwInstanceOutput) FwDeploy() VpcInstanceVpcFwInstanceFwDeployOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstance) VpcInstanceVpcFwInstanceFwDeploy { return v.FwDeploy }).(VpcInstanceVpcFwInstanceFwDeployOutput)
}

func (o VpcInstanceVpcFwInstanceOutput) FwInsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstance) *string { return v.FwInsId }).(pulumi.StringPtrOutput)
}

// Firewall instance name.
func (o VpcInstanceVpcFwInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstance) string { return v.Name }).(pulumi.StringOutput)
}

// List of VpcIds accessed in private network mode; only used in private network mode.
func (o VpcInstanceVpcFwInstanceOutput) VpcIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstance) []string { return v.VpcIds }).(pulumi.StringArrayOutput)
}

type VpcInstanceVpcFwInstanceArrayOutput struct{ *pulumi.OutputState }

func (VpcInstanceVpcFwInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcInstanceVpcFwInstance)(nil)).Elem()
}

func (o VpcInstanceVpcFwInstanceArrayOutput) ToVpcInstanceVpcFwInstanceArrayOutput() VpcInstanceVpcFwInstanceArrayOutput {
	return o
}

func (o VpcInstanceVpcFwInstanceArrayOutput) ToVpcInstanceVpcFwInstanceArrayOutputWithContext(ctx context.Context) VpcInstanceVpcFwInstanceArrayOutput {
	return o
}

func (o VpcInstanceVpcFwInstanceArrayOutput) Index(i pulumi.IntInput) VpcInstanceVpcFwInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcInstanceVpcFwInstance {
		return vs[0].([]VpcInstanceVpcFwInstance)[vs[1].(int)]
	}).(VpcInstanceVpcFwInstanceOutput)
}

type VpcInstanceVpcFwInstanceFwDeploy struct {
	// Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if it is empty, off-site disaster recovery will not be used by default.
	CrossAZone *int `pulumi:"crossAZone"`
	// Firewall Deployment Region.
	DeployRegion string `pulumi:"deployRegion"`
	// Bandwidth, unit: Mbps.
	Width int `pulumi:"width"`
	// Zone list.
	ZoneSets []string `pulumi:"zoneSets"`
}

// VpcInstanceVpcFwInstanceFwDeployInput is an input type that accepts VpcInstanceVpcFwInstanceFwDeployArgs and VpcInstanceVpcFwInstanceFwDeployOutput values.
// You can construct a concrete instance of `VpcInstanceVpcFwInstanceFwDeployInput` via:
//
//	VpcInstanceVpcFwInstanceFwDeployArgs{...}
type VpcInstanceVpcFwInstanceFwDeployInput interface {
	pulumi.Input

	ToVpcInstanceVpcFwInstanceFwDeployOutput() VpcInstanceVpcFwInstanceFwDeployOutput
	ToVpcInstanceVpcFwInstanceFwDeployOutputWithContext(context.Context) VpcInstanceVpcFwInstanceFwDeployOutput
}

type VpcInstanceVpcFwInstanceFwDeployArgs struct {
	// Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if it is empty, off-site disaster recovery will not be used by default.
	CrossAZone pulumi.IntPtrInput `pulumi:"crossAZone"`
	// Firewall Deployment Region.
	DeployRegion pulumi.StringInput `pulumi:"deployRegion"`
	// Bandwidth, unit: Mbps.
	Width pulumi.IntInput `pulumi:"width"`
	// Zone list.
	ZoneSets pulumi.StringArrayInput `pulumi:"zoneSets"`
}

func (VpcInstanceVpcFwInstanceFwDeployArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcInstanceVpcFwInstanceFwDeploy)(nil)).Elem()
}

func (i VpcInstanceVpcFwInstanceFwDeployArgs) ToVpcInstanceVpcFwInstanceFwDeployOutput() VpcInstanceVpcFwInstanceFwDeployOutput {
	return i.ToVpcInstanceVpcFwInstanceFwDeployOutputWithContext(context.Background())
}

func (i VpcInstanceVpcFwInstanceFwDeployArgs) ToVpcInstanceVpcFwInstanceFwDeployOutputWithContext(ctx context.Context) VpcInstanceVpcFwInstanceFwDeployOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcInstanceVpcFwInstanceFwDeployOutput)
}

type VpcInstanceVpcFwInstanceFwDeployOutput struct{ *pulumi.OutputState }

func (VpcInstanceVpcFwInstanceFwDeployOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcInstanceVpcFwInstanceFwDeploy)(nil)).Elem()
}

func (o VpcInstanceVpcFwInstanceFwDeployOutput) ToVpcInstanceVpcFwInstanceFwDeployOutput() VpcInstanceVpcFwInstanceFwDeployOutput {
	return o
}

func (o VpcInstanceVpcFwInstanceFwDeployOutput) ToVpcInstanceVpcFwInstanceFwDeployOutputWithContext(ctx context.Context) VpcInstanceVpcFwInstanceFwDeployOutput {
	return o
}

// Off-site disaster recovery 1: use off-site disaster recovery; 0: do not use off-site disaster recovery; if it is empty, off-site disaster recovery will not be used by default.
func (o VpcInstanceVpcFwInstanceFwDeployOutput) CrossAZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstanceFwDeploy) *int { return v.CrossAZone }).(pulumi.IntPtrOutput)
}

// Firewall Deployment Region.
func (o VpcInstanceVpcFwInstanceFwDeployOutput) DeployRegion() pulumi.StringOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstanceFwDeploy) string { return v.DeployRegion }).(pulumi.StringOutput)
}

// Bandwidth, unit: Mbps.
func (o VpcInstanceVpcFwInstanceFwDeployOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstanceFwDeploy) int { return v.Width }).(pulumi.IntOutput)
}

// Zone list.
func (o VpcInstanceVpcFwInstanceFwDeployOutput) ZoneSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcInstanceVpcFwInstanceFwDeploy) []string { return v.ZoneSets }).(pulumi.StringArrayOutput)
}

type VpcPolicyBetaList struct {
	LastTime *string `pulumi:"lastTime"`
	TaskId   *int    `pulumi:"taskId"`
	TaskName *string `pulumi:"taskName"`
}

// VpcPolicyBetaListInput is an input type that accepts VpcPolicyBetaListArgs and VpcPolicyBetaListOutput values.
// You can construct a concrete instance of `VpcPolicyBetaListInput` via:
//
//	VpcPolicyBetaListArgs{...}
type VpcPolicyBetaListInput interface {
	pulumi.Input

	ToVpcPolicyBetaListOutput() VpcPolicyBetaListOutput
	ToVpcPolicyBetaListOutputWithContext(context.Context) VpcPolicyBetaListOutput
}

type VpcPolicyBetaListArgs struct {
	LastTime pulumi.StringPtrInput `pulumi:"lastTime"`
	TaskId   pulumi.IntPtrInput    `pulumi:"taskId"`
	TaskName pulumi.StringPtrInput `pulumi:"taskName"`
}

func (VpcPolicyBetaListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPolicyBetaList)(nil)).Elem()
}

func (i VpcPolicyBetaListArgs) ToVpcPolicyBetaListOutput() VpcPolicyBetaListOutput {
	return i.ToVpcPolicyBetaListOutputWithContext(context.Background())
}

func (i VpcPolicyBetaListArgs) ToVpcPolicyBetaListOutputWithContext(ctx context.Context) VpcPolicyBetaListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPolicyBetaListOutput)
}

// VpcPolicyBetaListArrayInput is an input type that accepts VpcPolicyBetaListArray and VpcPolicyBetaListArrayOutput values.
// You can construct a concrete instance of `VpcPolicyBetaListArrayInput` via:
//
//	VpcPolicyBetaListArray{ VpcPolicyBetaListArgs{...} }
type VpcPolicyBetaListArrayInput interface {
	pulumi.Input

	ToVpcPolicyBetaListArrayOutput() VpcPolicyBetaListArrayOutput
	ToVpcPolicyBetaListArrayOutputWithContext(context.Context) VpcPolicyBetaListArrayOutput
}

type VpcPolicyBetaListArray []VpcPolicyBetaListInput

func (VpcPolicyBetaListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcPolicyBetaList)(nil)).Elem()
}

func (i VpcPolicyBetaListArray) ToVpcPolicyBetaListArrayOutput() VpcPolicyBetaListArrayOutput {
	return i.ToVpcPolicyBetaListArrayOutputWithContext(context.Background())
}

func (i VpcPolicyBetaListArray) ToVpcPolicyBetaListArrayOutputWithContext(ctx context.Context) VpcPolicyBetaListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPolicyBetaListArrayOutput)
}

type VpcPolicyBetaListOutput struct{ *pulumi.OutputState }

func (VpcPolicyBetaListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPolicyBetaList)(nil)).Elem()
}

func (o VpcPolicyBetaListOutput) ToVpcPolicyBetaListOutput() VpcPolicyBetaListOutput {
	return o
}

func (o VpcPolicyBetaListOutput) ToVpcPolicyBetaListOutputWithContext(ctx context.Context) VpcPolicyBetaListOutput {
	return o
}

func (o VpcPolicyBetaListOutput) LastTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPolicyBetaList) *string { return v.LastTime }).(pulumi.StringPtrOutput)
}

func (o VpcPolicyBetaListOutput) TaskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcPolicyBetaList) *int { return v.TaskId }).(pulumi.IntPtrOutput)
}

func (o VpcPolicyBetaListOutput) TaskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPolicyBetaList) *string { return v.TaskName }).(pulumi.StringPtrOutput)
}

type VpcPolicyBetaListArrayOutput struct{ *pulumi.OutputState }

func (VpcPolicyBetaListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcPolicyBetaList)(nil)).Elem()
}

func (o VpcPolicyBetaListArrayOutput) ToVpcPolicyBetaListArrayOutput() VpcPolicyBetaListArrayOutput {
	return o
}

func (o VpcPolicyBetaListArrayOutput) ToVpcPolicyBetaListArrayOutputWithContext(ctx context.Context) VpcPolicyBetaListArrayOutput {
	return o
}

func (o VpcPolicyBetaListArrayOutput) Index(i pulumi.IntInput) VpcPolicyBetaListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcPolicyBetaList {
		return vs[0].([]VpcPolicyBetaList)[vs[1].(int)]
	}).(VpcPolicyBetaListOutput)
}

type GetEdgeFwSwitchesData struct {
	// Asset Type.
	AssetType string `pulumi:"assetType"`
	// Instance Id.
	InstanceId string `pulumi:"instanceId"`
	// Instance Name.
	InstanceName string `pulumi:"instanceName"`
	// Intranet Ip.
	IntranetIp string `pulumi:"intranetIp"`
	// public ip.
	PublicIp string `pulumi:"publicIp"`
	// Public IP type.
	PublicIpType int `pulumi:"publicIpType"`
	// region.
	Region string `pulumi:"region"`
	// status.
	Status int `pulumi:"status"`
	// switch mode.
	SwitchMode int `pulumi:"switchMode"`
	// vpc id.
	VpcId string `pulumi:"vpcId"`
}

// GetEdgeFwSwitchesDataInput is an input type that accepts GetEdgeFwSwitchesDataArgs and GetEdgeFwSwitchesDataOutput values.
// You can construct a concrete instance of `GetEdgeFwSwitchesDataInput` via:
//
//	GetEdgeFwSwitchesDataArgs{...}
type GetEdgeFwSwitchesDataInput interface {
	pulumi.Input

	ToGetEdgeFwSwitchesDataOutput() GetEdgeFwSwitchesDataOutput
	ToGetEdgeFwSwitchesDataOutputWithContext(context.Context) GetEdgeFwSwitchesDataOutput
}

type GetEdgeFwSwitchesDataArgs struct {
	// Asset Type.
	AssetType pulumi.StringInput `pulumi:"assetType"`
	// Instance Id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Instance Name.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Intranet Ip.
	IntranetIp pulumi.StringInput `pulumi:"intranetIp"`
	// public ip.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Public IP type.
	PublicIpType pulumi.IntInput `pulumi:"publicIpType"`
	// region.
	Region pulumi.StringInput `pulumi:"region"`
	// status.
	Status pulumi.IntInput `pulumi:"status"`
	// switch mode.
	SwitchMode pulumi.IntInput `pulumi:"switchMode"`
	// vpc id.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetEdgeFwSwitchesDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgeFwSwitchesData)(nil)).Elem()
}

func (i GetEdgeFwSwitchesDataArgs) ToGetEdgeFwSwitchesDataOutput() GetEdgeFwSwitchesDataOutput {
	return i.ToGetEdgeFwSwitchesDataOutputWithContext(context.Background())
}

func (i GetEdgeFwSwitchesDataArgs) ToGetEdgeFwSwitchesDataOutputWithContext(ctx context.Context) GetEdgeFwSwitchesDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgeFwSwitchesDataOutput)
}

// GetEdgeFwSwitchesDataArrayInput is an input type that accepts GetEdgeFwSwitchesDataArray and GetEdgeFwSwitchesDataArrayOutput values.
// You can construct a concrete instance of `GetEdgeFwSwitchesDataArrayInput` via:
//
//	GetEdgeFwSwitchesDataArray{ GetEdgeFwSwitchesDataArgs{...} }
type GetEdgeFwSwitchesDataArrayInput interface {
	pulumi.Input

	ToGetEdgeFwSwitchesDataArrayOutput() GetEdgeFwSwitchesDataArrayOutput
	ToGetEdgeFwSwitchesDataArrayOutputWithContext(context.Context) GetEdgeFwSwitchesDataArrayOutput
}

type GetEdgeFwSwitchesDataArray []GetEdgeFwSwitchesDataInput

func (GetEdgeFwSwitchesDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgeFwSwitchesData)(nil)).Elem()
}

func (i GetEdgeFwSwitchesDataArray) ToGetEdgeFwSwitchesDataArrayOutput() GetEdgeFwSwitchesDataArrayOutput {
	return i.ToGetEdgeFwSwitchesDataArrayOutputWithContext(context.Background())
}

func (i GetEdgeFwSwitchesDataArray) ToGetEdgeFwSwitchesDataArrayOutputWithContext(ctx context.Context) GetEdgeFwSwitchesDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgeFwSwitchesDataArrayOutput)
}

type GetEdgeFwSwitchesDataOutput struct{ *pulumi.OutputState }

func (GetEdgeFwSwitchesDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgeFwSwitchesData)(nil)).Elem()
}

func (o GetEdgeFwSwitchesDataOutput) ToGetEdgeFwSwitchesDataOutput() GetEdgeFwSwitchesDataOutput {
	return o
}

func (o GetEdgeFwSwitchesDataOutput) ToGetEdgeFwSwitchesDataOutputWithContext(ctx context.Context) GetEdgeFwSwitchesDataOutput {
	return o
}

// Asset Type.
func (o GetEdgeFwSwitchesDataOutput) AssetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.AssetType }).(pulumi.StringOutput)
}

// Instance Id.
func (o GetEdgeFwSwitchesDataOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance Name.
func (o GetEdgeFwSwitchesDataOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Intranet Ip.
func (o GetEdgeFwSwitchesDataOutput) IntranetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.IntranetIp }).(pulumi.StringOutput)
}

// public ip.
func (o GetEdgeFwSwitchesDataOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Public IP type.
func (o GetEdgeFwSwitchesDataOutput) PublicIpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) int { return v.PublicIpType }).(pulumi.IntOutput)
}

// region.
func (o GetEdgeFwSwitchesDataOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.Region }).(pulumi.StringOutput)
}

// status.
func (o GetEdgeFwSwitchesDataOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) int { return v.Status }).(pulumi.IntOutput)
}

// switch mode.
func (o GetEdgeFwSwitchesDataOutput) SwitchMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) int { return v.SwitchMode }).(pulumi.IntOutput)
}

// vpc id.
func (o GetEdgeFwSwitchesDataOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeFwSwitchesData) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetEdgeFwSwitchesDataArrayOutput struct{ *pulumi.OutputState }

func (GetEdgeFwSwitchesDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgeFwSwitchesData)(nil)).Elem()
}

func (o GetEdgeFwSwitchesDataArrayOutput) ToGetEdgeFwSwitchesDataArrayOutput() GetEdgeFwSwitchesDataArrayOutput {
	return o
}

func (o GetEdgeFwSwitchesDataArrayOutput) ToGetEdgeFwSwitchesDataArrayOutputWithContext(ctx context.Context) GetEdgeFwSwitchesDataArrayOutput {
	return o
}

func (o GetEdgeFwSwitchesDataArrayOutput) Index(i pulumi.IntInput) GetEdgeFwSwitchesDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEdgeFwSwitchesData {
		return vs[0].([]GetEdgeFwSwitchesData)[vs[1].(int)]
	}).(GetEdgeFwSwitchesDataOutput)
}

type GetNatFwSwitchesData struct {
	// Whether the switch is abnormal, 0: normal, 1: abnormal.
	Abnormal int `pulumi:"abnormal"`
	// Cvm Num.
	CvmNum int `pulumi:"cvmNum"`
	// Effective status.
	Enable int `pulumi:"enable"`
	// ID.
	Id int `pulumi:"id"`
	// NAT gatway Id.
	NatId string `pulumi:"natId"`
	// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
	NatInsId string `pulumi:"natInsId"`
	// NAT firewall instance name.
	NatInsName string `pulumi:"natInsName"`
	// NAT gatway name.
	NatName string `pulumi:"natName"`
	// Region.
	Region string `pulumi:"region"`
	// Route Id.
	RouteId string `pulumi:"routeId"`
	// Route Name.
	RouteName string `pulumi:"routeName"`
	// Switch status, 1 open; 0 close.
	Status int `pulumi:"status"`
	// IPv4 CIDR.
	SubnetCidr string `pulumi:"subnetCidr"`
	// Subnet Id.
	SubnetId string `pulumi:"subnetId"`
	// Subnet Name.
	SubnetName string `pulumi:"subnetName"`
	// Vpc Id.
	VpcId string `pulumi:"vpcId"`
	// Vpc Name.
	VpcName string `pulumi:"vpcName"`
}

// GetNatFwSwitchesDataInput is an input type that accepts GetNatFwSwitchesDataArgs and GetNatFwSwitchesDataOutput values.
// You can construct a concrete instance of `GetNatFwSwitchesDataInput` via:
//
//	GetNatFwSwitchesDataArgs{...}
type GetNatFwSwitchesDataInput interface {
	pulumi.Input

	ToGetNatFwSwitchesDataOutput() GetNatFwSwitchesDataOutput
	ToGetNatFwSwitchesDataOutputWithContext(context.Context) GetNatFwSwitchesDataOutput
}

type GetNatFwSwitchesDataArgs struct {
	// Whether the switch is abnormal, 0: normal, 1: abnormal.
	Abnormal pulumi.IntInput `pulumi:"abnormal"`
	// Cvm Num.
	CvmNum pulumi.IntInput `pulumi:"cvmNum"`
	// Effective status.
	Enable pulumi.IntInput `pulumi:"enable"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// NAT gatway Id.
	NatId pulumi.StringInput `pulumi:"natId"`
	// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
	NatInsId pulumi.StringInput `pulumi:"natInsId"`
	// NAT firewall instance name.
	NatInsName pulumi.StringInput `pulumi:"natInsName"`
	// NAT gatway name.
	NatName pulumi.StringInput `pulumi:"natName"`
	// Region.
	Region pulumi.StringInput `pulumi:"region"`
	// Route Id.
	RouteId pulumi.StringInput `pulumi:"routeId"`
	// Route Name.
	RouteName pulumi.StringInput `pulumi:"routeName"`
	// Switch status, 1 open; 0 close.
	Status pulumi.IntInput `pulumi:"status"`
	// IPv4 CIDR.
	SubnetCidr pulumi.StringInput `pulumi:"subnetCidr"`
	// Subnet Id.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Subnet Name.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// Vpc Id.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Vpc Name.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetNatFwSwitchesDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatFwSwitchesData)(nil)).Elem()
}

func (i GetNatFwSwitchesDataArgs) ToGetNatFwSwitchesDataOutput() GetNatFwSwitchesDataOutput {
	return i.ToGetNatFwSwitchesDataOutputWithContext(context.Background())
}

func (i GetNatFwSwitchesDataArgs) ToGetNatFwSwitchesDataOutputWithContext(ctx context.Context) GetNatFwSwitchesDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatFwSwitchesDataOutput)
}

// GetNatFwSwitchesDataArrayInput is an input type that accepts GetNatFwSwitchesDataArray and GetNatFwSwitchesDataArrayOutput values.
// You can construct a concrete instance of `GetNatFwSwitchesDataArrayInput` via:
//
//	GetNatFwSwitchesDataArray{ GetNatFwSwitchesDataArgs{...} }
type GetNatFwSwitchesDataArrayInput interface {
	pulumi.Input

	ToGetNatFwSwitchesDataArrayOutput() GetNatFwSwitchesDataArrayOutput
	ToGetNatFwSwitchesDataArrayOutputWithContext(context.Context) GetNatFwSwitchesDataArrayOutput
}

type GetNatFwSwitchesDataArray []GetNatFwSwitchesDataInput

func (GetNatFwSwitchesDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatFwSwitchesData)(nil)).Elem()
}

func (i GetNatFwSwitchesDataArray) ToGetNatFwSwitchesDataArrayOutput() GetNatFwSwitchesDataArrayOutput {
	return i.ToGetNatFwSwitchesDataArrayOutputWithContext(context.Background())
}

func (i GetNatFwSwitchesDataArray) ToGetNatFwSwitchesDataArrayOutputWithContext(ctx context.Context) GetNatFwSwitchesDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatFwSwitchesDataArrayOutput)
}

type GetNatFwSwitchesDataOutput struct{ *pulumi.OutputState }

func (GetNatFwSwitchesDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatFwSwitchesData)(nil)).Elem()
}

func (o GetNatFwSwitchesDataOutput) ToGetNatFwSwitchesDataOutput() GetNatFwSwitchesDataOutput {
	return o
}

func (o GetNatFwSwitchesDataOutput) ToGetNatFwSwitchesDataOutputWithContext(ctx context.Context) GetNatFwSwitchesDataOutput {
	return o
}

// Whether the switch is abnormal, 0: normal, 1: abnormal.
func (o GetNatFwSwitchesDataOutput) Abnormal() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) int { return v.Abnormal }).(pulumi.IntOutput)
}

// Cvm Num.
func (o GetNatFwSwitchesDataOutput) CvmNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) int { return v.CvmNum }).(pulumi.IntOutput)
}

// Effective status.
func (o GetNatFwSwitchesDataOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) int { return v.Enable }).(pulumi.IntOutput)
}

// ID.
func (o GetNatFwSwitchesDataOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) int { return v.Id }).(pulumi.IntOutput)
}

// NAT gatway Id.
func (o GetNatFwSwitchesDataOutput) NatId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.NatId }).(pulumi.StringOutput)
}

// Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
func (o GetNatFwSwitchesDataOutput) NatInsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.NatInsId }).(pulumi.StringOutput)
}

// NAT firewall instance name.
func (o GetNatFwSwitchesDataOutput) NatInsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.NatInsName }).(pulumi.StringOutput)
}

// NAT gatway name.
func (o GetNatFwSwitchesDataOutput) NatName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.NatName }).(pulumi.StringOutput)
}

// Region.
func (o GetNatFwSwitchesDataOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.Region }).(pulumi.StringOutput)
}

// Route Id.
func (o GetNatFwSwitchesDataOutput) RouteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.RouteId }).(pulumi.StringOutput)
}

// Route Name.
func (o GetNatFwSwitchesDataOutput) RouteName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.RouteName }).(pulumi.StringOutput)
}

// Switch status, 1 open; 0 close.
func (o GetNatFwSwitchesDataOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) int { return v.Status }).(pulumi.IntOutput)
}

// IPv4 CIDR.
func (o GetNatFwSwitchesDataOutput) SubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.SubnetCidr }).(pulumi.StringOutput)
}

// Subnet Id.
func (o GetNatFwSwitchesDataOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Subnet Name.
func (o GetNatFwSwitchesDataOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Vpc Id.
func (o GetNatFwSwitchesDataOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.VpcId }).(pulumi.StringOutput)
}

// Vpc Name.
func (o GetNatFwSwitchesDataOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatFwSwitchesData) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetNatFwSwitchesDataArrayOutput struct{ *pulumi.OutputState }

func (GetNatFwSwitchesDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatFwSwitchesData)(nil)).Elem()
}

func (o GetNatFwSwitchesDataArrayOutput) ToGetNatFwSwitchesDataArrayOutput() GetNatFwSwitchesDataArrayOutput {
	return o
}

func (o GetNatFwSwitchesDataArrayOutput) ToGetNatFwSwitchesDataArrayOutputWithContext(ctx context.Context) GetNatFwSwitchesDataArrayOutput {
	return o
}

func (o GetNatFwSwitchesDataArrayOutput) Index(i pulumi.IntInput) GetNatFwSwitchesDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatFwSwitchesData {
		return vs[0].([]GetNatFwSwitchesData)[vs[1].(int)]
	}).(GetNatFwSwitchesDataOutput)
}

type GetVpcFwSwitchesSwitchList struct {
	// Switch status 0: off, 1: on.
	Enable int `pulumi:"enable"`
	// Switch status 0: normal, 1: switching.
	Status int `pulumi:"status"`
	// Firewall switch ID.
	SwitchId string `pulumi:"switchId"`
	// switch mode.
	SwitchMode int `pulumi:"switchMode"`
	// Firewall switch name.
	SwitchName string `pulumi:"switchName"`
}

// GetVpcFwSwitchesSwitchListInput is an input type that accepts GetVpcFwSwitchesSwitchListArgs and GetVpcFwSwitchesSwitchListOutput values.
// You can construct a concrete instance of `GetVpcFwSwitchesSwitchListInput` via:
//
//	GetVpcFwSwitchesSwitchListArgs{...}
type GetVpcFwSwitchesSwitchListInput interface {
	pulumi.Input

	ToGetVpcFwSwitchesSwitchListOutput() GetVpcFwSwitchesSwitchListOutput
	ToGetVpcFwSwitchesSwitchListOutputWithContext(context.Context) GetVpcFwSwitchesSwitchListOutput
}

type GetVpcFwSwitchesSwitchListArgs struct {
	// Switch status 0: off, 1: on.
	Enable pulumi.IntInput `pulumi:"enable"`
	// Switch status 0: normal, 1: switching.
	Status pulumi.IntInput `pulumi:"status"`
	// Firewall switch ID.
	SwitchId pulumi.StringInput `pulumi:"switchId"`
	// switch mode.
	SwitchMode pulumi.IntInput `pulumi:"switchMode"`
	// Firewall switch name.
	SwitchName pulumi.StringInput `pulumi:"switchName"`
}

func (GetVpcFwSwitchesSwitchListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFwSwitchesSwitchList)(nil)).Elem()
}

func (i GetVpcFwSwitchesSwitchListArgs) ToGetVpcFwSwitchesSwitchListOutput() GetVpcFwSwitchesSwitchListOutput {
	return i.ToGetVpcFwSwitchesSwitchListOutputWithContext(context.Background())
}

func (i GetVpcFwSwitchesSwitchListArgs) ToGetVpcFwSwitchesSwitchListOutputWithContext(ctx context.Context) GetVpcFwSwitchesSwitchListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFwSwitchesSwitchListOutput)
}

// GetVpcFwSwitchesSwitchListArrayInput is an input type that accepts GetVpcFwSwitchesSwitchListArray and GetVpcFwSwitchesSwitchListArrayOutput values.
// You can construct a concrete instance of `GetVpcFwSwitchesSwitchListArrayInput` via:
//
//	GetVpcFwSwitchesSwitchListArray{ GetVpcFwSwitchesSwitchListArgs{...} }
type GetVpcFwSwitchesSwitchListArrayInput interface {
	pulumi.Input

	ToGetVpcFwSwitchesSwitchListArrayOutput() GetVpcFwSwitchesSwitchListArrayOutput
	ToGetVpcFwSwitchesSwitchListArrayOutputWithContext(context.Context) GetVpcFwSwitchesSwitchListArrayOutput
}

type GetVpcFwSwitchesSwitchListArray []GetVpcFwSwitchesSwitchListInput

func (GetVpcFwSwitchesSwitchListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFwSwitchesSwitchList)(nil)).Elem()
}

func (i GetVpcFwSwitchesSwitchListArray) ToGetVpcFwSwitchesSwitchListArrayOutput() GetVpcFwSwitchesSwitchListArrayOutput {
	return i.ToGetVpcFwSwitchesSwitchListArrayOutputWithContext(context.Background())
}

func (i GetVpcFwSwitchesSwitchListArray) ToGetVpcFwSwitchesSwitchListArrayOutputWithContext(ctx context.Context) GetVpcFwSwitchesSwitchListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFwSwitchesSwitchListArrayOutput)
}

type GetVpcFwSwitchesSwitchListOutput struct{ *pulumi.OutputState }

func (GetVpcFwSwitchesSwitchListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFwSwitchesSwitchList)(nil)).Elem()
}

func (o GetVpcFwSwitchesSwitchListOutput) ToGetVpcFwSwitchesSwitchListOutput() GetVpcFwSwitchesSwitchListOutput {
	return o
}

func (o GetVpcFwSwitchesSwitchListOutput) ToGetVpcFwSwitchesSwitchListOutputWithContext(ctx context.Context) GetVpcFwSwitchesSwitchListOutput {
	return o
}

// Switch status 0: off, 1: on.
func (o GetVpcFwSwitchesSwitchListOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcFwSwitchesSwitchList) int { return v.Enable }).(pulumi.IntOutput)
}

// Switch status 0: normal, 1: switching.
func (o GetVpcFwSwitchesSwitchListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcFwSwitchesSwitchList) int { return v.Status }).(pulumi.IntOutput)
}

// Firewall switch ID.
func (o GetVpcFwSwitchesSwitchListOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFwSwitchesSwitchList) string { return v.SwitchId }).(pulumi.StringOutput)
}

// switch mode.
func (o GetVpcFwSwitchesSwitchListOutput) SwitchMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcFwSwitchesSwitchList) int { return v.SwitchMode }).(pulumi.IntOutput)
}

// Firewall switch name.
func (o GetVpcFwSwitchesSwitchListOutput) SwitchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFwSwitchesSwitchList) string { return v.SwitchName }).(pulumi.StringOutput)
}

type GetVpcFwSwitchesSwitchListArrayOutput struct{ *pulumi.OutputState }

func (GetVpcFwSwitchesSwitchListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFwSwitchesSwitchList)(nil)).Elem()
}

func (o GetVpcFwSwitchesSwitchListArrayOutput) ToGetVpcFwSwitchesSwitchListArrayOutput() GetVpcFwSwitchesSwitchListArrayOutput {
	return o
}

func (o GetVpcFwSwitchesSwitchListArrayOutput) ToGetVpcFwSwitchesSwitchListArrayOutputWithContext(ctx context.Context) GetVpcFwSwitchesSwitchListArrayOutput {
	return o
}

func (o GetVpcFwSwitchesSwitchListArrayOutput) Index(i pulumi.IntInput) GetVpcFwSwitchesSwitchListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcFwSwitchesSwitchList {
		return vs[0].([]GetVpcFwSwitchesSwitchList)[vs[1].(int)]
	}).(GetVpcFwSwitchesSwitchListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NatInstanceNewModeItemsInput)(nil)).Elem(), NatInstanceNewModeItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatInstanceNewModeItemsPtrInput)(nil)).Elem(), NatInstanceNewModeItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcInstanceVpcFwInstanceInput)(nil)).Elem(), VpcInstanceVpcFwInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcInstanceVpcFwInstanceArrayInput)(nil)).Elem(), VpcInstanceVpcFwInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcInstanceVpcFwInstanceFwDeployInput)(nil)).Elem(), VpcInstanceVpcFwInstanceFwDeployArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPolicyBetaListInput)(nil)).Elem(), VpcPolicyBetaListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPolicyBetaListArrayInput)(nil)).Elem(), VpcPolicyBetaListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgeFwSwitchesDataInput)(nil)).Elem(), GetEdgeFwSwitchesDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgeFwSwitchesDataArrayInput)(nil)).Elem(), GetEdgeFwSwitchesDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatFwSwitchesDataInput)(nil)).Elem(), GetNatFwSwitchesDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatFwSwitchesDataArrayInput)(nil)).Elem(), GetNatFwSwitchesDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcFwSwitchesSwitchListInput)(nil)).Elem(), GetVpcFwSwitchesSwitchListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcFwSwitchesSwitchListArrayInput)(nil)).Elem(), GetVpcFwSwitchesSwitchListArray{})
	pulumi.RegisterOutputType(NatInstanceNewModeItemsOutput{})
	pulumi.RegisterOutputType(NatInstanceNewModeItemsPtrOutput{})
	pulumi.RegisterOutputType(VpcInstanceVpcFwInstanceOutput{})
	pulumi.RegisterOutputType(VpcInstanceVpcFwInstanceArrayOutput{})
	pulumi.RegisterOutputType(VpcInstanceVpcFwInstanceFwDeployOutput{})
	pulumi.RegisterOutputType(VpcPolicyBetaListOutput{})
	pulumi.RegisterOutputType(VpcPolicyBetaListArrayOutput{})
	pulumi.RegisterOutputType(GetEdgeFwSwitchesDataOutput{})
	pulumi.RegisterOutputType(GetEdgeFwSwitchesDataArrayOutput{})
	pulumi.RegisterOutputType(GetNatFwSwitchesDataOutput{})
	pulumi.RegisterOutputType(GetNatFwSwitchesDataArrayOutput{})
	pulumi.RegisterOutputType(GetVpcFwSwitchesSwitchListOutput{})
	pulumi.RegisterOutputType(GetVpcFwSwitchesSwitchListArrayOutput{})
}
