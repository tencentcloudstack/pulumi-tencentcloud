// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provide a resource to create a SSM secret.
//
// ## Example Usage
// ### Create user defined secret
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ssm.NewSecret(ctx, "example", &Ssm.SecretArgs{
//				Description:          pulumi.String("desc."),
//				IsEnabled:            pulumi.Bool(true),
//				RecoveryWindowInDays: pulumi.Int(0),
//				SecretName:           pulumi.String("tf-example"),
//				Tags: pulumi.AnyMap{
//					"createBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create redis secret
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Redis"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssm"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zone, err := Redis.GetZoneConfig(ctx, &redis.GetZoneConfigArgs{
//				TypeId: pulumi.IntRef(8),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				VpcId:            vpc.ID(),
//				AvailabilityZone: pulumi.String(zone.Lists[3].Zone),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInstance, err := Redis.NewInstance(ctx, "exampleInstance", &Redis.InstanceArgs{
//				AvailabilityZone: pulumi.String(zone.Lists[3].Zone),
//				TypeId:           pulumi.Int(zone.Lists[3].TypeId),
//				Password:         pulumi.String("Qwer@234"),
//				MemSize:          pulumi.Int(zone.Lists[3].MemSizes[0]),
//				RedisShardNum:    pulumi.Int(zone.Lists[3].RedisShardNums[0]),
//				RedisReplicasNum: pulumi.Int(zone.Lists[3].RedisReplicasNums[0]),
//				Port:             pulumi.Int(6379),
//				VpcId:            vpc.ID(),
//				SubnetId:         subnet.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Ssm.NewSecret(ctx, "exampleSecret", &Ssm.SecretArgs{
//				SecretName:  pulumi.String("tf-example"),
//				Description: pulumi.String("redis desc."),
//				IsEnabled:   pulumi.Bool(true),
//				SecretType:  pulumi.Int(4),
//				AdditionalConfig: exampleInstance.ID().ApplyT(func(id string) (pulumi.String, error) {
//					var _zero pulumi.String
//					tmpJSON0, err := json.Marshal(map[string]interface{}{
//						"Region":     "ap-guangzhou",
//						"Privilege":  "r",
//						"InstanceId": id,
//						"ReadonlyPolicy": []string{
//							"master",
//						},
//						"Remark": "for tf test",
//					})
//					if err != nil {
//						return _zero, err
//					}
//					json0 := string(tmpJSON0)
//					return json0, nil
//				}).(pulumi.StringOutput),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//				RecoveryWindowInDays: pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SSM secret can be imported using the secretName, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssm/secret:Secret foo test
//
// ```
type Secret struct {
	pulumi.CustomResourceState

	// Additional config for specific secret types in JSON string format.
	AdditionalConfig pulumi.StringPtrOutput `pulumi:"additionalConfig"`
	// Description of secret. The maximum is 2048 bytes.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specify whether to enable secret. Default value is `true`.
	IsEnabled pulumi.BoolPtrOutput `pulumi:"isEnabled"`
	// KMS keyId used to encrypt secret. If it is empty, it means that the CMK created by SSM for you by default is used for encryption. You can also specify the KMS CMK created by yourself in the same region for encryption.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// Specify the scheduled deletion date. Default value is `0` that means to delete immediately. 1-30 means the number of days reserved, completely deleted after this date.
	RecoveryWindowInDays pulumi.IntPtrOutput `pulumi:"recoveryWindowInDays"`
	// Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	SecretName pulumi.StringOutput `pulumi:"secretName"`
	// Type of secret. `0`: user-defined secret. `4`: redis secret. Default is `0`.
	SecretType pulumi.IntOutput `pulumi:"secretType"`
	// Status of secret.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags of secret.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewSecret registers a new resource with the given unique name, arguments, and options.
func NewSecret(ctx *pulumi.Context,
	name string, args *SecretArgs, opts ...pulumi.ResourceOption) (*Secret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecretName == nil {
		return nil, errors.New("invalid value for required argument 'SecretName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Secret
	err := ctx.RegisterResource("tencentcloud:Ssm/secret:Secret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecret gets an existing Secret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretState, opts ...pulumi.ResourceOption) (*Secret, error) {
	var resource Secret
	err := ctx.ReadResource("tencentcloud:Ssm/secret:Secret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Secret resources.
type secretState struct {
	// Additional config for specific secret types in JSON string format.
	AdditionalConfig *string `pulumi:"additionalConfig"`
	// Description of secret. The maximum is 2048 bytes.
	Description *string `pulumi:"description"`
	// Specify whether to enable secret. Default value is `true`.
	IsEnabled *bool `pulumi:"isEnabled"`
	// KMS keyId used to encrypt secret. If it is empty, it means that the CMK created by SSM for you by default is used for encryption. You can also specify the KMS CMK created by yourself in the same region for encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specify the scheduled deletion date. Default value is `0` that means to delete immediately. 1-30 means the number of days reserved, completely deleted after this date.
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
	// Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	SecretName *string `pulumi:"secretName"`
	// Type of secret. `0`: user-defined secret. `4`: redis secret. Default is `0`.
	SecretType *int `pulumi:"secretType"`
	// Status of secret.
	Status *string `pulumi:"status"`
	// Tags of secret.
	Tags map[string]interface{} `pulumi:"tags"`
}

type SecretState struct {
	// Additional config for specific secret types in JSON string format.
	AdditionalConfig pulumi.StringPtrInput
	// Description of secret. The maximum is 2048 bytes.
	Description pulumi.StringPtrInput
	// Specify whether to enable secret. Default value is `true`.
	IsEnabled pulumi.BoolPtrInput
	// KMS keyId used to encrypt secret. If it is empty, it means that the CMK created by SSM for you by default is used for encryption. You can also specify the KMS CMK created by yourself in the same region for encryption.
	KmsKeyId pulumi.StringPtrInput
	// Specify the scheduled deletion date. Default value is `0` that means to delete immediately. 1-30 means the number of days reserved, completely deleted after this date.
	RecoveryWindowInDays pulumi.IntPtrInput
	// Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	SecretName pulumi.StringPtrInput
	// Type of secret. `0`: user-defined secret. `4`: redis secret. Default is `0`.
	SecretType pulumi.IntPtrInput
	// Status of secret.
	Status pulumi.StringPtrInput
	// Tags of secret.
	Tags pulumi.MapInput
}

func (SecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretState)(nil)).Elem()
}

type secretArgs struct {
	// Additional config for specific secret types in JSON string format.
	AdditionalConfig *string `pulumi:"additionalConfig"`
	// Description of secret. The maximum is 2048 bytes.
	Description *string `pulumi:"description"`
	// Specify whether to enable secret. Default value is `true`.
	IsEnabled *bool `pulumi:"isEnabled"`
	// KMS keyId used to encrypt secret. If it is empty, it means that the CMK created by SSM for you by default is used for encryption. You can also specify the KMS CMK created by yourself in the same region for encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specify the scheduled deletion date. Default value is `0` that means to delete immediately. 1-30 means the number of days reserved, completely deleted after this date.
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
	// Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	SecretName string `pulumi:"secretName"`
	// Type of secret. `0`: user-defined secret. `4`: redis secret. Default is `0`.
	SecretType *int `pulumi:"secretType"`
	// Tags of secret.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a Secret resource.
type SecretArgs struct {
	// Additional config for specific secret types in JSON string format.
	AdditionalConfig pulumi.StringPtrInput
	// Description of secret. The maximum is 2048 bytes.
	Description pulumi.StringPtrInput
	// Specify whether to enable secret. Default value is `true`.
	IsEnabled pulumi.BoolPtrInput
	// KMS keyId used to encrypt secret. If it is empty, it means that the CMK created by SSM for you by default is used for encryption. You can also specify the KMS CMK created by yourself in the same region for encryption.
	KmsKeyId pulumi.StringPtrInput
	// Specify the scheduled deletion date. Default value is `0` that means to delete immediately. 1-30 means the number of days reserved, completely deleted after this date.
	RecoveryWindowInDays pulumi.IntPtrInput
	// Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	SecretName pulumi.StringInput
	// Type of secret. `0`: user-defined secret. `4`: redis secret. Default is `0`.
	SecretType pulumi.IntPtrInput
	// Tags of secret.
	Tags pulumi.MapInput
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretArgs)(nil)).Elem()
}

type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(ctx context.Context) SecretOutput
}

func (*Secret) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (i *Secret) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i *Secret) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

// SecretArrayInput is an input type that accepts SecretArray and SecretArrayOutput values.
// You can construct a concrete instance of `SecretArrayInput` via:
//
//	SecretArray{ SecretArgs{...} }
type SecretArrayInput interface {
	pulumi.Input

	ToSecretArrayOutput() SecretArrayOutput
	ToSecretArrayOutputWithContext(context.Context) SecretArrayOutput
}

type SecretArray []SecretInput

func (SecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Secret)(nil)).Elem()
}

func (i SecretArray) ToSecretArrayOutput() SecretArrayOutput {
	return i.ToSecretArrayOutputWithContext(context.Background())
}

func (i SecretArray) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretArrayOutput)
}

// SecretMapInput is an input type that accepts SecretMap and SecretMapOutput values.
// You can construct a concrete instance of `SecretMapInput` via:
//
//	SecretMap{ "key": SecretArgs{...} }
type SecretMapInput interface {
	pulumi.Input

	ToSecretMapOutput() SecretMapOutput
	ToSecretMapOutputWithContext(context.Context) SecretMapOutput
}

type SecretMap map[string]SecretInput

func (SecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Secret)(nil)).Elem()
}

func (i SecretMap) ToSecretMapOutput() SecretMapOutput {
	return i.ToSecretMapOutputWithContext(context.Background())
}

func (i SecretMap) ToSecretMapOutputWithContext(ctx context.Context) SecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretMapOutput)
}

type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// Additional config for specific secret types in JSON string format.
func (o SecretOutput) AdditionalConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.AdditionalConfig }).(pulumi.StringPtrOutput)
}

// Description of secret. The maximum is 2048 bytes.
func (o SecretOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specify whether to enable secret. Default value is `true`.
func (o SecretOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.BoolPtrOutput { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// KMS keyId used to encrypt secret. If it is empty, it means that the CMK created by SSM for you by default is used for encryption. You can also specify the KMS CMK created by yourself in the same region for encryption.
func (o SecretOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Specify the scheduled deletion date. Default value is `0` that means to delete immediately. 1-30 means the number of days reserved, completely deleted after this date.
func (o SecretOutput) RecoveryWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.IntPtrOutput { return v.RecoveryWindowInDays }).(pulumi.IntPtrOutput)
}

// Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
func (o SecretOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.SecretName }).(pulumi.StringOutput)
}

// Type of secret. `0`: user-defined secret. `4`: redis secret. Default is `0`.
func (o SecretOutput) SecretType() pulumi.IntOutput {
	return o.ApplyT(func(v *Secret) pulumi.IntOutput { return v.SecretType }).(pulumi.IntOutput)
}

// Status of secret.
func (o SecretOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags of secret.
func (o SecretOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Secret) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

type SecretArrayOutput struct{ *pulumi.OutputState }

func (SecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Secret)(nil)).Elem()
}

func (o SecretArrayOutput) ToSecretArrayOutput() SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) Index(i pulumi.IntInput) SecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Secret {
		return vs[0].([]*Secret)[vs[1].(int)]
	}).(SecretOutput)
}

type SecretMapOutput struct{ *pulumi.OutputState }

func (SecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Secret)(nil)).Elem()
}

func (o SecretMapOutput) ToSecretMapOutput() SecretMapOutput {
	return o
}

func (o SecretMapOutput) ToSecretMapOutputWithContext(ctx context.Context) SecretMapOutput {
	return o
}

func (o SecretMapOutput) MapIndex(k pulumi.StringInput) SecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Secret {
		return vs[0].(map[string]*Secret)[vs[1].(string)]
	}).(SecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretInput)(nil)).Elem(), &Secret{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretArrayInput)(nil)).Elem(), SecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretMapInput)(nil)).Elem(), SecretMap{})
	pulumi.RegisterOutputType(SecretOutput{})
	pulumi.RegisterOutputType(SecretArrayOutput{})
	pulumi.RegisterOutputType(SecretMapOutput{})
}
