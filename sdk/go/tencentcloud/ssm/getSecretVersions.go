// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of SSM secret version
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleSecret, err := Ssm.NewSecret(ctx, "exampleSecret", &Ssm.SecretArgs{
//				SecretName:  pulumi.String("tf-example"),
//				Description: pulumi.String("desc."),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			v1, err := Ssm.NewSecretVersion(ctx, "v1", &Ssm.SecretVersionArgs{
//				SecretName:   exampleSecret.SecretName,
//				VersionId:    pulumi.String("v1"),
//				SecretBinary: pulumi.String("MTIzMTIzMTIzMTIzMTIzQQ=="),
//			})
//			if err != nil {
//				return err
//			}
//			_ = Ssm.GetSecretVersionsOutput(ctx, ssm.GetSecretVersionsOutputArgs{
//				SecretName: v1.SecretName,
//				VersionId:  v1.VersionId,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetSecretVersions(ctx *pulumi.Context, args *GetSecretVersionsArgs, opts ...pulumi.InvokeOption) (*GetSecretVersionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecretVersionsResult
	err := ctx.Invoke("tencentcloud:Ssm/getSecretVersions:getSecretVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretVersions.
type GetSecretVersionsArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Secret name used to filter result.
	SecretName string `pulumi:"secretName"`
	// VersionId used to filter result.
	VersionId *string `pulumi:"versionId"`
}

// A collection of values returned by getSecretVersions.
type GetSecretVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SecretName       string  `pulumi:"secretName"`
	// A list of SSM secret versions. When secret status is `Disabled`, this field will not update anymore.
	SecretVersionLists []GetSecretVersionsSecretVersionList `pulumi:"secretVersionLists"`
	// Version of secret.
	VersionId *string `pulumi:"versionId"`
}

func GetSecretVersionsOutput(ctx *pulumi.Context, args GetSecretVersionsOutputArgs, opts ...pulumi.InvokeOption) GetSecretVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretVersionsResult, error) {
			args := v.(GetSecretVersionsArgs)
			r, err := GetSecretVersions(ctx, &args, opts...)
			var s GetSecretVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretVersionsResultOutput)
}

// A collection of arguments for invoking getSecretVersions.
type GetSecretVersionsOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Secret name used to filter result.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// VersionId used to filter result.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (GetSecretVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getSecretVersions.
type GetSecretVersionsResultOutput struct{ *pulumi.OutputState }

func (GetSecretVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionsResult)(nil)).Elem()
}

func (o GetSecretVersionsResultOutput) ToGetSecretVersionsResultOutput() GetSecretVersionsResultOutput {
	return o
}

func (o GetSecretVersionsResultOutput) ToGetSecretVersionsResultOutputWithContext(ctx context.Context) GetSecretVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecretVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecretVersionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSecretVersionsResultOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) string { return v.SecretName }).(pulumi.StringOutput)
}

// A list of SSM secret versions. When secret status is `Disabled`, this field will not update anymore.
func (o GetSecretVersionsResultOutput) SecretVersionLists() GetSecretVersionsSecretVersionListArrayOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) []GetSecretVersionsSecretVersionList { return v.SecretVersionLists }).(GetSecretVersionsSecretVersionListArrayOutput)
}

// Version of secret.
func (o GetSecretVersionsResultOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretVersionsResultOutput{})
}
