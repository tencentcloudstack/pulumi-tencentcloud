// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ssm ssh key pair secret
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ssm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleKey, err := Kms.NewKey(ctx, "exampleKey", &Kms.KeyArgs{
//				Alias:              pulumi.String("tf-example-kms-key"),
//				Description:        pulumi.String("example of kms key"),
//				KeyRotationEnabled: pulumi.Bool(false),
//				IsEnabled:          pulumi.Bool(true),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Ssm.NewSshKeyPairSecret(ctx, "exampleSshKeyPairSecret", &Ssm.SshKeyPairSecretArgs{
//				SecretName:  pulumi.String("tf-example"),
//				ProjectId:   pulumi.Int(0),
//				Description: pulumi.String("desc."),
//				KmsKeyId:    exampleKey.ID(),
//				SshKeyName:  pulumi.String("tf_example_ssh"),
//				Status:      pulumi.String("Enabled"),
//				CleanSshKey: pulumi.Bool(true),
//				Tags: pulumi.AnyMap{
//					"createdBy": pulumi.Any("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ssm ssh_key_pair_secret can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Ssm/sshKeyPairSecret:SshKeyPairSecret ssh_key_pair_secret ssh_key_pair_secret_name
//
// ```
type SshKeyPairSecret struct {
	pulumi.CustomResourceState

	// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only deletes the SSH key information in the secret.
	CleanSshKey pulumi.BoolPtrOutput `pulumi:"cleanSshKey"`
	// Credential creation time in UNIX timestamp format.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// Description, such as what it is used for. It contains up to 2,048 bytes.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// ID of the project to which the created SSH key belongs.
	ProjectId pulumi.IntOutput `pulumi:"projectId"`
	// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and underscores and must begin with a letter or digit.
	SecretName pulumi.StringOutput `pulumi:"secretName"`
	// `0`: user-defined secret. `1`: Tencent Cloud services secret. `2`: SSH key secret. `3`: Tencent Cloud API key secret. Note: this field may return `null`, indicating that no valid values can be obtained.
	SecretType pulumi.IntOutput `pulumi:"secretType"`
	// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The maximum length is 25 characters.
	SshKeyName pulumi.StringOutput `pulumi:"sshKeyName"`
	// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags of secret.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewSshKeyPairSecret registers a new resource with the given unique name, arguments, and options.
func NewSshKeyPairSecret(ctx *pulumi.Context,
	name string, args *SshKeyPairSecretArgs, opts ...pulumi.ResourceOption) (*SshKeyPairSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.SecretName == nil {
		return nil, errors.New("invalid value for required argument 'SecretName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SshKeyPairSecret
	err := ctx.RegisterResource("tencentcloud:Ssm/sshKeyPairSecret:SshKeyPairSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshKeyPairSecret gets an existing SshKeyPairSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshKeyPairSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshKeyPairSecretState, opts ...pulumi.ResourceOption) (*SshKeyPairSecret, error) {
	var resource SshKeyPairSecret
	err := ctx.ReadResource("tencentcloud:Ssm/sshKeyPairSecret:SshKeyPairSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshKeyPairSecret resources.
type sshKeyPairSecretState struct {
	// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only deletes the SSH key information in the secret.
	CleanSshKey *bool `pulumi:"cleanSshKey"`
	// Credential creation time in UNIX timestamp format.
	CreateTime *int `pulumi:"createTime"`
	// Description, such as what it is used for. It contains up to 2,048 bytes.
	Description *string `pulumi:"description"`
	// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// ID of the project to which the created SSH key belongs.
	ProjectId *int `pulumi:"projectId"`
	// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and underscores and must begin with a letter or digit.
	SecretName *string `pulumi:"secretName"`
	// `0`: user-defined secret. `1`: Tencent Cloud services secret. `2`: SSH key secret. `3`: Tencent Cloud API key secret. Note: this field may return `null`, indicating that no valid values can be obtained.
	SecretType *int `pulumi:"secretType"`
	// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The maximum length is 25 characters.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
	Status *string `pulumi:"status"`
	// Tags of secret.
	Tags map[string]interface{} `pulumi:"tags"`
}

type SshKeyPairSecretState struct {
	// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only deletes the SSH key information in the secret.
	CleanSshKey pulumi.BoolPtrInput
	// Credential creation time in UNIX timestamp format.
	CreateTime pulumi.IntPtrInput
	// Description, such as what it is used for. It contains up to 2,048 bytes.
	Description pulumi.StringPtrInput
	// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
	KmsKeyId pulumi.StringPtrInput
	// ID of the project to which the created SSH key belongs.
	ProjectId pulumi.IntPtrInput
	// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and underscores and must begin with a letter or digit.
	SecretName pulumi.StringPtrInput
	// `0`: user-defined secret. `1`: Tencent Cloud services secret. `2`: SSH key secret. `3`: Tencent Cloud API key secret. Note: this field may return `null`, indicating that no valid values can be obtained.
	SecretType pulumi.IntPtrInput
	// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The maximum length is 25 characters.
	SshKeyName pulumi.StringPtrInput
	// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
	Status pulumi.StringPtrInput
	// Tags of secret.
	Tags pulumi.MapInput
}

func (SshKeyPairSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyPairSecretState)(nil)).Elem()
}

type sshKeyPairSecretArgs struct {
	// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only deletes the SSH key information in the secret.
	CleanSshKey *bool `pulumi:"cleanSshKey"`
	// Description, such as what it is used for. It contains up to 2,048 bytes.
	Description *string `pulumi:"description"`
	// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// ID of the project to which the created SSH key belongs.
	ProjectId int `pulumi:"projectId"`
	// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and underscores and must begin with a letter or digit.
	SecretName string `pulumi:"secretName"`
	// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The maximum length is 25 characters.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
	Status *string `pulumi:"status"`
	// Tags of secret.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a SshKeyPairSecret resource.
type SshKeyPairSecretArgs struct {
	// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only deletes the SSH key information in the secret.
	CleanSshKey pulumi.BoolPtrInput
	// Description, such as what it is used for. It contains up to 2,048 bytes.
	Description pulumi.StringPtrInput
	// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
	KmsKeyId pulumi.StringPtrInput
	// ID of the project to which the created SSH key belongs.
	ProjectId pulumi.IntInput
	// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and underscores and must begin with a letter or digit.
	SecretName pulumi.StringInput
	// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The maximum length is 25 characters.
	SshKeyName pulumi.StringPtrInput
	// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
	Status pulumi.StringPtrInput
	// Tags of secret.
	Tags pulumi.MapInput
}

func (SshKeyPairSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyPairSecretArgs)(nil)).Elem()
}

type SshKeyPairSecretInput interface {
	pulumi.Input

	ToSshKeyPairSecretOutput() SshKeyPairSecretOutput
	ToSshKeyPairSecretOutputWithContext(ctx context.Context) SshKeyPairSecretOutput
}

func (*SshKeyPairSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**SshKeyPairSecret)(nil)).Elem()
}

func (i *SshKeyPairSecret) ToSshKeyPairSecretOutput() SshKeyPairSecretOutput {
	return i.ToSshKeyPairSecretOutputWithContext(context.Background())
}

func (i *SshKeyPairSecret) ToSshKeyPairSecretOutputWithContext(ctx context.Context) SshKeyPairSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyPairSecretOutput)
}

// SshKeyPairSecretArrayInput is an input type that accepts SshKeyPairSecretArray and SshKeyPairSecretArrayOutput values.
// You can construct a concrete instance of `SshKeyPairSecretArrayInput` via:
//
//	SshKeyPairSecretArray{ SshKeyPairSecretArgs{...} }
type SshKeyPairSecretArrayInput interface {
	pulumi.Input

	ToSshKeyPairSecretArrayOutput() SshKeyPairSecretArrayOutput
	ToSshKeyPairSecretArrayOutputWithContext(context.Context) SshKeyPairSecretArrayOutput
}

type SshKeyPairSecretArray []SshKeyPairSecretInput

func (SshKeyPairSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshKeyPairSecret)(nil)).Elem()
}

func (i SshKeyPairSecretArray) ToSshKeyPairSecretArrayOutput() SshKeyPairSecretArrayOutput {
	return i.ToSshKeyPairSecretArrayOutputWithContext(context.Background())
}

func (i SshKeyPairSecretArray) ToSshKeyPairSecretArrayOutputWithContext(ctx context.Context) SshKeyPairSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyPairSecretArrayOutput)
}

// SshKeyPairSecretMapInput is an input type that accepts SshKeyPairSecretMap and SshKeyPairSecretMapOutput values.
// You can construct a concrete instance of `SshKeyPairSecretMapInput` via:
//
//	SshKeyPairSecretMap{ "key": SshKeyPairSecretArgs{...} }
type SshKeyPairSecretMapInput interface {
	pulumi.Input

	ToSshKeyPairSecretMapOutput() SshKeyPairSecretMapOutput
	ToSshKeyPairSecretMapOutputWithContext(context.Context) SshKeyPairSecretMapOutput
}

type SshKeyPairSecretMap map[string]SshKeyPairSecretInput

func (SshKeyPairSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshKeyPairSecret)(nil)).Elem()
}

func (i SshKeyPairSecretMap) ToSshKeyPairSecretMapOutput() SshKeyPairSecretMapOutput {
	return i.ToSshKeyPairSecretMapOutputWithContext(context.Background())
}

func (i SshKeyPairSecretMap) ToSshKeyPairSecretMapOutputWithContext(ctx context.Context) SshKeyPairSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyPairSecretMapOutput)
}

type SshKeyPairSecretOutput struct{ *pulumi.OutputState }

func (SshKeyPairSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshKeyPairSecret)(nil)).Elem()
}

func (o SshKeyPairSecretOutput) ToSshKeyPairSecretOutput() SshKeyPairSecretOutput {
	return o
}

func (o SshKeyPairSecretOutput) ToSshKeyPairSecretOutputWithContext(ctx context.Context) SshKeyPairSecretOutput {
	return o
}

// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only deletes the SSH key information in the secret.
func (o SshKeyPairSecretOutput) CleanSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.BoolPtrOutput { return v.CleanSshKey }).(pulumi.BoolPtrOutput)
}

// Credential creation time in UNIX timestamp format.
func (o SshKeyPairSecretOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// Description, such as what it is used for. It contains up to 2,048 bytes.
func (o SshKeyPairSecretOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
func (o SshKeyPairSecretOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// ID of the project to which the created SSH key belongs.
func (o SshKeyPairSecretOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.IntOutput { return v.ProjectId }).(pulumi.IntOutput)
}

// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and underscores and must begin with a letter or digit.
func (o SshKeyPairSecretOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.StringOutput { return v.SecretName }).(pulumi.StringOutput)
}

// `0`: user-defined secret. `1`: Tencent Cloud services secret. `2`: SSH key secret. `3`: Tencent Cloud API key secret. Note: this field may return `null`, indicating that no valid values can be obtained.
func (o SshKeyPairSecretOutput) SecretType() pulumi.IntOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.IntOutput { return v.SecretType }).(pulumi.IntOutput)
}

// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The maximum length is 25 characters.
func (o SshKeyPairSecretOutput) SshKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.StringOutput { return v.SshKeyName }).(pulumi.StringOutput)
}

// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
func (o SshKeyPairSecretOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags of secret.
func (o SshKeyPairSecretOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *SshKeyPairSecret) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

type SshKeyPairSecretArrayOutput struct{ *pulumi.OutputState }

func (SshKeyPairSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshKeyPairSecret)(nil)).Elem()
}

func (o SshKeyPairSecretArrayOutput) ToSshKeyPairSecretArrayOutput() SshKeyPairSecretArrayOutput {
	return o
}

func (o SshKeyPairSecretArrayOutput) ToSshKeyPairSecretArrayOutputWithContext(ctx context.Context) SshKeyPairSecretArrayOutput {
	return o
}

func (o SshKeyPairSecretArrayOutput) Index(i pulumi.IntInput) SshKeyPairSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SshKeyPairSecret {
		return vs[0].([]*SshKeyPairSecret)[vs[1].(int)]
	}).(SshKeyPairSecretOutput)
}

type SshKeyPairSecretMapOutput struct{ *pulumi.OutputState }

func (SshKeyPairSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshKeyPairSecret)(nil)).Elem()
}

func (o SshKeyPairSecretMapOutput) ToSshKeyPairSecretMapOutput() SshKeyPairSecretMapOutput {
	return o
}

func (o SshKeyPairSecretMapOutput) ToSshKeyPairSecretMapOutputWithContext(ctx context.Context) SshKeyPairSecretMapOutput {
	return o
}

func (o SshKeyPairSecretMapOutput) MapIndex(k pulumi.StringInput) SshKeyPairSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SshKeyPairSecret {
		return vs[0].(map[string]*SshKeyPairSecret)[vs[1].(string)]
	}).(SshKeyPairSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyPairSecretInput)(nil)).Elem(), &SshKeyPairSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyPairSecretArrayInput)(nil)).Elem(), SshKeyPairSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyPairSecretMapInput)(nil)).Elem(), SshKeyPairSecretMap{})
	pulumi.RegisterOutputType(SshKeyPairSecretOutput{})
	pulumi.RegisterOutputType(SshKeyPairSecretArrayOutput{})
	pulumi.RegisterOutputType(SshKeyPairSecretMapOutput{})
}
