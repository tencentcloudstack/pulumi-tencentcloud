// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ses batchSendEmail
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ses"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ses"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ses.NewBatchSendEmail(ctx, "batchSendEmail", &Ses.BatchSendEmailArgs{
//				AdLocation: pulumi.Int(0),
//				CycleParam: &ses.BatchSendEmailCycleParamArgs{
//					BeginTime:    pulumi.String("2023-09-07 15:10:00"),
//					IntervalTime: pulumi.Int(1),
//				},
//				FromEmailAddress: pulumi.String("aaa@iac-tf.cloud"),
//				ReceiverId:       pulumi.Int(1063742),
//				ReplyToAddresses: pulumi.String("reply@mail.qcloud.com"),
//				Subject:          pulumi.String("terraform test"),
//				TaskType:         pulumi.Int(1),
//				Template: &ses.BatchSendEmailTemplateArgs{
//					TemplateData: pulumi.String("{\"name\":\"xxx\",\"age\":\"xx\"}"),
//					TemplateId:   pulumi.Int(99629),
//				},
//				TimedParam: &ses.BatchSendEmailTimedParamArgs{
//					BeginTime: pulumi.String("2023-09-07 15:20:00"),
//				},
//				Unsubscribe: pulumi.String("0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type BatchSendEmail struct {
	pulumi.CustomResourceState

	// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
	AdLocation pulumi.IntPtrOutput `pulumi:"adLocation"`
	// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
	Attachments BatchSendEmailAttachmentArrayOutput `pulumi:"attachments"`
	// Parameter required for a recurring sending task.
	CycleParam BatchSendEmailCycleParamPtrOutput `pulumi:"cycleParam"`
	// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
	FromEmailAddress pulumi.StringOutput `pulumi:"fromEmailAddress"`
	// Recipient group ID.
	ReceiverId pulumi.IntOutput `pulumi:"receiverId"`
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses pulumi.StringPtrOutput `pulumi:"replyToAddresses"`
	// Email subject.
	Subject pulumi.StringOutput `pulumi:"subject"`
	// Task type. 1: immediate; 2: scheduled; 3: recurring.
	TaskType pulumi.IntOutput `pulumi:"taskType"`
	// Template when emails are sent using a template.
	Template BatchSendEmailTemplatePtrOutput `pulumi:"template"`
	// Parameter required for a scheduled sending task.
	TimedParam BatchSendEmailTimedParamPtrOutput `pulumi:"timedParam"`
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe pulumi.StringPtrOutput `pulumi:"unsubscribe"`
}

// NewBatchSendEmail registers a new resource with the given unique name, arguments, and options.
func NewBatchSendEmail(ctx *pulumi.Context,
	name string, args *BatchSendEmailArgs, opts ...pulumi.ResourceOption) (*BatchSendEmail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FromEmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'FromEmailAddress'")
	}
	if args.ReceiverId == nil {
		return nil, errors.New("invalid value for required argument 'ReceiverId'")
	}
	if args.Subject == nil {
		return nil, errors.New("invalid value for required argument 'Subject'")
	}
	if args.TaskType == nil {
		return nil, errors.New("invalid value for required argument 'TaskType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BatchSendEmail
	err := ctx.RegisterResource("tencentcloud:Ses/batchSendEmail:BatchSendEmail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBatchSendEmail gets an existing BatchSendEmail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBatchSendEmail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BatchSendEmailState, opts ...pulumi.ResourceOption) (*BatchSendEmail, error) {
	var resource BatchSendEmail
	err := ctx.ReadResource("tencentcloud:Ses/batchSendEmail:BatchSendEmail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BatchSendEmail resources.
type batchSendEmailState struct {
	// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
	AdLocation *int `pulumi:"adLocation"`
	// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
	Attachments []BatchSendEmailAttachment `pulumi:"attachments"`
	// Parameter required for a recurring sending task.
	CycleParam *BatchSendEmailCycleParam `pulumi:"cycleParam"`
	// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
	FromEmailAddress *string `pulumi:"fromEmailAddress"`
	// Recipient group ID.
	ReceiverId *int `pulumi:"receiverId"`
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses *string `pulumi:"replyToAddresses"`
	// Email subject.
	Subject *string `pulumi:"subject"`
	// Task type. 1: immediate; 2: scheduled; 3: recurring.
	TaskType *int `pulumi:"taskType"`
	// Template when emails are sent using a template.
	Template *BatchSendEmailTemplate `pulumi:"template"`
	// Parameter required for a scheduled sending task.
	TimedParam *BatchSendEmailTimedParam `pulumi:"timedParam"`
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe *string `pulumi:"unsubscribe"`
}

type BatchSendEmailState struct {
	// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
	AdLocation pulumi.IntPtrInput
	// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
	Attachments BatchSendEmailAttachmentArrayInput
	// Parameter required for a recurring sending task.
	CycleParam BatchSendEmailCycleParamPtrInput
	// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
	FromEmailAddress pulumi.StringPtrInput
	// Recipient group ID.
	ReceiverId pulumi.IntPtrInput
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses pulumi.StringPtrInput
	// Email subject.
	Subject pulumi.StringPtrInput
	// Task type. 1: immediate; 2: scheduled; 3: recurring.
	TaskType pulumi.IntPtrInput
	// Template when emails are sent using a template.
	Template BatchSendEmailTemplatePtrInput
	// Parameter required for a scheduled sending task.
	TimedParam BatchSendEmailTimedParamPtrInput
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe pulumi.StringPtrInput
}

func (BatchSendEmailState) ElementType() reflect.Type {
	return reflect.TypeOf((*batchSendEmailState)(nil)).Elem()
}

type batchSendEmailArgs struct {
	// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
	AdLocation *int `pulumi:"adLocation"`
	// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
	Attachments []BatchSendEmailAttachment `pulumi:"attachments"`
	// Parameter required for a recurring sending task.
	CycleParam *BatchSendEmailCycleParam `pulumi:"cycleParam"`
	// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
	FromEmailAddress string `pulumi:"fromEmailAddress"`
	// Recipient group ID.
	ReceiverId int `pulumi:"receiverId"`
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses *string `pulumi:"replyToAddresses"`
	// Email subject.
	Subject string `pulumi:"subject"`
	// Task type. 1: immediate; 2: scheduled; 3: recurring.
	TaskType int `pulumi:"taskType"`
	// Template when emails are sent using a template.
	Template *BatchSendEmailTemplate `pulumi:"template"`
	// Parameter required for a scheduled sending task.
	TimedParam *BatchSendEmailTimedParam `pulumi:"timedParam"`
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe *string `pulumi:"unsubscribe"`
}

// The set of arguments for constructing a BatchSendEmail resource.
type BatchSendEmailArgs struct {
	// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
	AdLocation pulumi.IntPtrInput
	// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
	Attachments BatchSendEmailAttachmentArrayInput
	// Parameter required for a recurring sending task.
	CycleParam BatchSendEmailCycleParamPtrInput
	// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
	FromEmailAddress pulumi.StringInput
	// Recipient group ID.
	ReceiverId pulumi.IntInput
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses pulumi.StringPtrInput
	// Email subject.
	Subject pulumi.StringInput
	// Task type. 1: immediate; 2: scheduled; 3: recurring.
	TaskType pulumi.IntInput
	// Template when emails are sent using a template.
	Template BatchSendEmailTemplatePtrInput
	// Parameter required for a scheduled sending task.
	TimedParam BatchSendEmailTimedParamPtrInput
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe pulumi.StringPtrInput
}

func (BatchSendEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*batchSendEmailArgs)(nil)).Elem()
}

type BatchSendEmailInput interface {
	pulumi.Input

	ToBatchSendEmailOutput() BatchSendEmailOutput
	ToBatchSendEmailOutputWithContext(ctx context.Context) BatchSendEmailOutput
}

func (*BatchSendEmail) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchSendEmail)(nil)).Elem()
}

func (i *BatchSendEmail) ToBatchSendEmailOutput() BatchSendEmailOutput {
	return i.ToBatchSendEmailOutputWithContext(context.Background())
}

func (i *BatchSendEmail) ToBatchSendEmailOutputWithContext(ctx context.Context) BatchSendEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchSendEmailOutput)
}

// BatchSendEmailArrayInput is an input type that accepts BatchSendEmailArray and BatchSendEmailArrayOutput values.
// You can construct a concrete instance of `BatchSendEmailArrayInput` via:
//
//	BatchSendEmailArray{ BatchSendEmailArgs{...} }
type BatchSendEmailArrayInput interface {
	pulumi.Input

	ToBatchSendEmailArrayOutput() BatchSendEmailArrayOutput
	ToBatchSendEmailArrayOutputWithContext(context.Context) BatchSendEmailArrayOutput
}

type BatchSendEmailArray []BatchSendEmailInput

func (BatchSendEmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BatchSendEmail)(nil)).Elem()
}

func (i BatchSendEmailArray) ToBatchSendEmailArrayOutput() BatchSendEmailArrayOutput {
	return i.ToBatchSendEmailArrayOutputWithContext(context.Background())
}

func (i BatchSendEmailArray) ToBatchSendEmailArrayOutputWithContext(ctx context.Context) BatchSendEmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchSendEmailArrayOutput)
}

// BatchSendEmailMapInput is an input type that accepts BatchSendEmailMap and BatchSendEmailMapOutput values.
// You can construct a concrete instance of `BatchSendEmailMapInput` via:
//
//	BatchSendEmailMap{ "key": BatchSendEmailArgs{...} }
type BatchSendEmailMapInput interface {
	pulumi.Input

	ToBatchSendEmailMapOutput() BatchSendEmailMapOutput
	ToBatchSendEmailMapOutputWithContext(context.Context) BatchSendEmailMapOutput
}

type BatchSendEmailMap map[string]BatchSendEmailInput

func (BatchSendEmailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BatchSendEmail)(nil)).Elem()
}

func (i BatchSendEmailMap) ToBatchSendEmailMapOutput() BatchSendEmailMapOutput {
	return i.ToBatchSendEmailMapOutputWithContext(context.Background())
}

func (i BatchSendEmailMap) ToBatchSendEmailMapOutputWithContext(ctx context.Context) BatchSendEmailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchSendEmailMapOutput)
}

type BatchSendEmailOutput struct{ *pulumi.OutputState }

func (BatchSendEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchSendEmail)(nil)).Elem()
}

func (o BatchSendEmailOutput) ToBatchSendEmailOutput() BatchSendEmailOutput {
	return o
}

func (o BatchSendEmailOutput) ToBatchSendEmailOutputWithContext(ctx context.Context) BatchSendEmailOutput {
	return o
}

// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
func (o BatchSendEmailOutput) AdLocation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.IntPtrOutput { return v.AdLocation }).(pulumi.IntPtrOutput)
}

// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
func (o BatchSendEmailOutput) Attachments() BatchSendEmailAttachmentArrayOutput {
	return o.ApplyT(func(v *BatchSendEmail) BatchSendEmailAttachmentArrayOutput { return v.Attachments }).(BatchSendEmailAttachmentArrayOutput)
}

// Parameter required for a recurring sending task.
func (o BatchSendEmailOutput) CycleParam() BatchSendEmailCycleParamPtrOutput {
	return o.ApplyT(func(v *BatchSendEmail) BatchSendEmailCycleParamPtrOutput { return v.CycleParam }).(BatchSendEmailCycleParamPtrOutput)
}

// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
func (o BatchSendEmailOutput) FromEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.StringOutput { return v.FromEmailAddress }).(pulumi.StringOutput)
}

// Recipient group ID.
func (o BatchSendEmailOutput) ReceiverId() pulumi.IntOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.IntOutput { return v.ReceiverId }).(pulumi.IntOutput)
}

// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
func (o BatchSendEmailOutput) ReplyToAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.StringPtrOutput { return v.ReplyToAddresses }).(pulumi.StringPtrOutput)
}

// Email subject.
func (o BatchSendEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.StringOutput { return v.Subject }).(pulumi.StringOutput)
}

// Task type. 1: immediate; 2: scheduled; 3: recurring.
func (o BatchSendEmailOutput) TaskType() pulumi.IntOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.IntOutput { return v.TaskType }).(pulumi.IntOutput)
}

// Template when emails are sent using a template.
func (o BatchSendEmailOutput) Template() BatchSendEmailTemplatePtrOutput {
	return o.ApplyT(func(v *BatchSendEmail) BatchSendEmailTemplatePtrOutput { return v.Template }).(BatchSendEmailTemplatePtrOutput)
}

// Parameter required for a scheduled sending task.
func (o BatchSendEmailOutput) TimedParam() BatchSendEmailTimedParamPtrOutput {
	return o.ApplyT(func(v *BatchSendEmail) BatchSendEmailTimedParamPtrOutput { return v.TimedParam }).(BatchSendEmailTimedParamPtrOutput)
}

// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
func (o BatchSendEmailOutput) Unsubscribe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchSendEmail) pulumi.StringPtrOutput { return v.Unsubscribe }).(pulumi.StringPtrOutput)
}

type BatchSendEmailArrayOutput struct{ *pulumi.OutputState }

func (BatchSendEmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BatchSendEmail)(nil)).Elem()
}

func (o BatchSendEmailArrayOutput) ToBatchSendEmailArrayOutput() BatchSendEmailArrayOutput {
	return o
}

func (o BatchSendEmailArrayOutput) ToBatchSendEmailArrayOutputWithContext(ctx context.Context) BatchSendEmailArrayOutput {
	return o
}

func (o BatchSendEmailArrayOutput) Index(i pulumi.IntInput) BatchSendEmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BatchSendEmail {
		return vs[0].([]*BatchSendEmail)[vs[1].(int)]
	}).(BatchSendEmailOutput)
}

type BatchSendEmailMapOutput struct{ *pulumi.OutputState }

func (BatchSendEmailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BatchSendEmail)(nil)).Elem()
}

func (o BatchSendEmailMapOutput) ToBatchSendEmailMapOutput() BatchSendEmailMapOutput {
	return o
}

func (o BatchSendEmailMapOutput) ToBatchSendEmailMapOutputWithContext(ctx context.Context) BatchSendEmailMapOutput {
	return o
}

func (o BatchSendEmailMapOutput) MapIndex(k pulumi.StringInput) BatchSendEmailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BatchSendEmail {
		return vs[0].(map[string]*BatchSendEmail)[vs[1].(string)]
	}).(BatchSendEmailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BatchSendEmailInput)(nil)).Elem(), &BatchSendEmail{})
	pulumi.RegisterInputType(reflect.TypeOf((*BatchSendEmailArrayInput)(nil)).Elem(), BatchSendEmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BatchSendEmailMapInput)(nil)).Elem(), BatchSendEmailMap{})
	pulumi.RegisterOutputType(BatchSendEmailOutput{})
	pulumi.RegisterOutputType(BatchSendEmailArrayOutput{})
	pulumi.RegisterOutputType(BatchSendEmailMapOutput{})
}
