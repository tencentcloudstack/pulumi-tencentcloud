// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a ses sendEmail
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Ses"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Ses"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ses.NewSendEmail(ctx, "sendEmail", &Ses.SendEmailArgs{
//				Destinations: pulumi.StringArray{
//					pulumi.String("1055482519@qq.com"),
//				},
//				FromEmailAddress: pulumi.String("aaa@iac-tf.cloud"),
//				ReplyToAddresses: pulumi.String("aaa@iac-tf.cloud"),
//				Subject:          pulumi.String("test subject"),
//				Template: &ses.SendEmailTemplateArgs{
//					TemplateData: pulumi.String("{\"name\":\"xxx\",\"age\":\"xx\"}"),
//					TemplateId:   pulumi.Int(99629),
//				},
//				TriggerType: pulumi.Int(1),
//				Unsubscribe: pulumi.String("1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SendEmail struct {
	pulumi.CustomResourceState

	// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
	Attachments SendEmailAttachmentArrayOutput `pulumi:"attachments"`
	// The email address of the cc recipient can support up to 20 cc recipients.
	Bccs pulumi.StringArrayOutput `pulumi:"bccs"`
	// Cc recipient email address, up to 20 people can be copied.
	Ccs pulumi.StringArrayOutput `pulumi:"ccs"`
	// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
	Destinations pulumi.StringArrayOutput `pulumi:"destinations"`
	// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
	FromEmailAddress pulumi.StringOutput `pulumi:"fromEmailAddress"`
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses pulumi.StringPtrOutput `pulumi:"replyToAddresses"`
	// Email subject.
	Subject pulumi.StringOutput `pulumi:"subject"`
	// Template parameters for template-based sending. As Simple has been disused, Template is required.
	Template SendEmailTemplatePtrOutput `pulumi:"template"`
	// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
	TriggerType pulumi.IntPtrOutput `pulumi:"triggerType"`
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe pulumi.StringPtrOutput `pulumi:"unsubscribe"`
}

// NewSendEmail registers a new resource with the given unique name, arguments, and options.
func NewSendEmail(ctx *pulumi.Context,
	name string, args *SendEmailArgs, opts ...pulumi.ResourceOption) (*SendEmail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destinations == nil {
		return nil, errors.New("invalid value for required argument 'Destinations'")
	}
	if args.FromEmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'FromEmailAddress'")
	}
	if args.Subject == nil {
		return nil, errors.New("invalid value for required argument 'Subject'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SendEmail
	err := ctx.RegisterResource("tencentcloud:Ses/sendEmail:SendEmail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSendEmail gets an existing SendEmail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSendEmail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SendEmailState, opts ...pulumi.ResourceOption) (*SendEmail, error) {
	var resource SendEmail
	err := ctx.ReadResource("tencentcloud:Ses/sendEmail:SendEmail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SendEmail resources.
type sendEmailState struct {
	// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
	Attachments []SendEmailAttachment `pulumi:"attachments"`
	// The email address of the cc recipient can support up to 20 cc recipients.
	Bccs []string `pulumi:"bccs"`
	// Cc recipient email address, up to 20 people can be copied.
	Ccs []string `pulumi:"ccs"`
	// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
	Destinations []string `pulumi:"destinations"`
	// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
	FromEmailAddress *string `pulumi:"fromEmailAddress"`
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses *string `pulumi:"replyToAddresses"`
	// Email subject.
	Subject *string `pulumi:"subject"`
	// Template parameters for template-based sending. As Simple has been disused, Template is required.
	Template *SendEmailTemplate `pulumi:"template"`
	// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
	TriggerType *int `pulumi:"triggerType"`
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe *string `pulumi:"unsubscribe"`
}

type SendEmailState struct {
	// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
	Attachments SendEmailAttachmentArrayInput
	// The email address of the cc recipient can support up to 20 cc recipients.
	Bccs pulumi.StringArrayInput
	// Cc recipient email address, up to 20 people can be copied.
	Ccs pulumi.StringArrayInput
	// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
	Destinations pulumi.StringArrayInput
	// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
	FromEmailAddress pulumi.StringPtrInput
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses pulumi.StringPtrInput
	// Email subject.
	Subject pulumi.StringPtrInput
	// Template parameters for template-based sending. As Simple has been disused, Template is required.
	Template SendEmailTemplatePtrInput
	// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
	TriggerType pulumi.IntPtrInput
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe pulumi.StringPtrInput
}

func (SendEmailState) ElementType() reflect.Type {
	return reflect.TypeOf((*sendEmailState)(nil)).Elem()
}

type sendEmailArgs struct {
	// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
	Attachments []SendEmailAttachment `pulumi:"attachments"`
	// The email address of the cc recipient can support up to 20 cc recipients.
	Bccs []string `pulumi:"bccs"`
	// Cc recipient email address, up to 20 people can be copied.
	Ccs []string `pulumi:"ccs"`
	// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
	Destinations []string `pulumi:"destinations"`
	// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
	FromEmailAddress string `pulumi:"fromEmailAddress"`
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses *string `pulumi:"replyToAddresses"`
	// Email subject.
	Subject string `pulumi:"subject"`
	// Template parameters for template-based sending. As Simple has been disused, Template is required.
	Template *SendEmailTemplate `pulumi:"template"`
	// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
	TriggerType *int `pulumi:"triggerType"`
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe *string `pulumi:"unsubscribe"`
}

// The set of arguments for constructing a SendEmail resource.
type SendEmailArgs struct {
	// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
	Attachments SendEmailAttachmentArrayInput
	// The email address of the cc recipient can support up to 20 cc recipients.
	Bccs pulumi.StringArrayInput
	// Cc recipient email address, up to 20 people can be copied.
	Ccs pulumi.StringArrayInput
	// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
	Destinations pulumi.StringArrayInput
	// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
	FromEmailAddress pulumi.StringInput
	// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
	ReplyToAddresses pulumi.StringPtrInput
	// Email subject.
	Subject pulumi.StringInput
	// Template parameters for template-based sending. As Simple has been disused, Template is required.
	Template SendEmailTemplatePtrInput
	// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
	TriggerType pulumi.IntPtrInput
	// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
	Unsubscribe pulumi.StringPtrInput
}

func (SendEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sendEmailArgs)(nil)).Elem()
}

type SendEmailInput interface {
	pulumi.Input

	ToSendEmailOutput() SendEmailOutput
	ToSendEmailOutputWithContext(ctx context.Context) SendEmailOutput
}

func (*SendEmail) ElementType() reflect.Type {
	return reflect.TypeOf((**SendEmail)(nil)).Elem()
}

func (i *SendEmail) ToSendEmailOutput() SendEmailOutput {
	return i.ToSendEmailOutputWithContext(context.Background())
}

func (i *SendEmail) ToSendEmailOutputWithContext(ctx context.Context) SendEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SendEmailOutput)
}

// SendEmailArrayInput is an input type that accepts SendEmailArray and SendEmailArrayOutput values.
// You can construct a concrete instance of `SendEmailArrayInput` via:
//
//	SendEmailArray{ SendEmailArgs{...} }
type SendEmailArrayInput interface {
	pulumi.Input

	ToSendEmailArrayOutput() SendEmailArrayOutput
	ToSendEmailArrayOutputWithContext(context.Context) SendEmailArrayOutput
}

type SendEmailArray []SendEmailInput

func (SendEmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SendEmail)(nil)).Elem()
}

func (i SendEmailArray) ToSendEmailArrayOutput() SendEmailArrayOutput {
	return i.ToSendEmailArrayOutputWithContext(context.Background())
}

func (i SendEmailArray) ToSendEmailArrayOutputWithContext(ctx context.Context) SendEmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SendEmailArrayOutput)
}

// SendEmailMapInput is an input type that accepts SendEmailMap and SendEmailMapOutput values.
// You can construct a concrete instance of `SendEmailMapInput` via:
//
//	SendEmailMap{ "key": SendEmailArgs{...} }
type SendEmailMapInput interface {
	pulumi.Input

	ToSendEmailMapOutput() SendEmailMapOutput
	ToSendEmailMapOutputWithContext(context.Context) SendEmailMapOutput
}

type SendEmailMap map[string]SendEmailInput

func (SendEmailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SendEmail)(nil)).Elem()
}

func (i SendEmailMap) ToSendEmailMapOutput() SendEmailMapOutput {
	return i.ToSendEmailMapOutputWithContext(context.Background())
}

func (i SendEmailMap) ToSendEmailMapOutputWithContext(ctx context.Context) SendEmailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SendEmailMapOutput)
}

type SendEmailOutput struct{ *pulumi.OutputState }

func (SendEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SendEmail)(nil)).Elem()
}

func (o SendEmailOutput) ToSendEmailOutput() SendEmailOutput {
	return o
}

func (o SendEmailOutput) ToSendEmailOutputWithContext(ctx context.Context) SendEmailOutput {
	return o
}

// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
func (o SendEmailOutput) Attachments() SendEmailAttachmentArrayOutput {
	return o.ApplyT(func(v *SendEmail) SendEmailAttachmentArrayOutput { return v.Attachments }).(SendEmailAttachmentArrayOutput)
}

// The email address of the cc recipient can support up to 20 cc recipients.
func (o SendEmailOutput) Bccs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringArrayOutput { return v.Bccs }).(pulumi.StringArrayOutput)
}

// Cc recipient email address, up to 20 people can be copied.
func (o SendEmailOutput) Ccs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringArrayOutput { return v.Ccs }).(pulumi.StringArrayOutput)
}

// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
func (o SendEmailOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringArrayOutput { return v.Destinations }).(pulumi.StringArrayOutput)
}

// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
func (o SendEmailOutput) FromEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringOutput { return v.FromEmailAddress }).(pulumi.StringOutput)
}

// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
func (o SendEmailOutput) ReplyToAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringPtrOutput { return v.ReplyToAddresses }).(pulumi.StringPtrOutput)
}

// Email subject.
func (o SendEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringOutput { return v.Subject }).(pulumi.StringOutput)
}

// Template parameters for template-based sending. As Simple has been disused, Template is required.
func (o SendEmailOutput) Template() SendEmailTemplatePtrOutput {
	return o.ApplyT(func(v *SendEmail) SendEmailTemplatePtrOutput { return v.Template }).(SendEmailTemplatePtrOutput)
}

// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
func (o SendEmailOutput) TriggerType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.IntPtrOutput { return v.TriggerType }).(pulumi.IntPtrOutput)
}

// Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
func (o SendEmailOutput) Unsubscribe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SendEmail) pulumi.StringPtrOutput { return v.Unsubscribe }).(pulumi.StringPtrOutput)
}

type SendEmailArrayOutput struct{ *pulumi.OutputState }

func (SendEmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SendEmail)(nil)).Elem()
}

func (o SendEmailArrayOutput) ToSendEmailArrayOutput() SendEmailArrayOutput {
	return o
}

func (o SendEmailArrayOutput) ToSendEmailArrayOutputWithContext(ctx context.Context) SendEmailArrayOutput {
	return o
}

func (o SendEmailArrayOutput) Index(i pulumi.IntInput) SendEmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SendEmail {
		return vs[0].([]*SendEmail)[vs[1].(int)]
	}).(SendEmailOutput)
}

type SendEmailMapOutput struct{ *pulumi.OutputState }

func (SendEmailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SendEmail)(nil)).Elem()
}

func (o SendEmailMapOutput) ToSendEmailMapOutput() SendEmailMapOutput {
	return o
}

func (o SendEmailMapOutput) ToSendEmailMapOutputWithContext(ctx context.Context) SendEmailMapOutput {
	return o
}

func (o SendEmailMapOutput) MapIndex(k pulumi.StringInput) SendEmailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SendEmail {
		return vs[0].(map[string]*SendEmail)[vs[1].(string)]
	}).(SendEmailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SendEmailInput)(nil)).Elem(), &SendEmail{})
	pulumi.RegisterInputType(reflect.TypeOf((*SendEmailArrayInput)(nil)).Elem(), SendEmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SendEmailMapInput)(nil)).Elem(), SendEmailMap{})
	pulumi.RegisterOutputType(SendEmailOutput{})
	pulumi.RegisterOutputType(SendEmailArrayOutput{})
	pulumi.RegisterOutputType(SendEmailMapOutput{})
}
