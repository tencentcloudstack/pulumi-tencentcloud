// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a mongodb instanceBackup
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Mongodb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mongodb.NewInstanceBackup(ctx, "instanceBackup", &Mongodb.InstanceBackupArgs{
//				BackupMethod: pulumi.Int(0),
//				BackupRemark: pulumi.String("my backup"),
//				InstanceId:   pulumi.String("cmgo-9d0p6umb"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type InstanceBackup struct {
	pulumi.CustomResourceState

	// 0:logical backup, 1:physical backup.
	BackupMethod pulumi.IntOutput `pulumi:"backupMethod"`
	// backup notes.
	BackupRemark pulumi.StringPtrOutput `pulumi:"backupRemark"`
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewInstanceBackup registers a new resource with the given unique name, arguments, and options.
func NewInstanceBackup(ctx *pulumi.Context,
	name string, args *InstanceBackupArgs, opts ...pulumi.ResourceOption) (*InstanceBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupMethod == nil {
		return nil, errors.New("invalid value for required argument 'BackupMethod'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InstanceBackup
	err := ctx.RegisterResource("tencentcloud:Mongodb/instanceBackup:InstanceBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceBackup gets an existing InstanceBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceBackupState, opts ...pulumi.ResourceOption) (*InstanceBackup, error) {
	var resource InstanceBackup
	err := ctx.ReadResource("tencentcloud:Mongodb/instanceBackup:InstanceBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceBackup resources.
type instanceBackupState struct {
	// 0:logical backup, 1:physical backup.
	BackupMethod *int `pulumi:"backupMethod"`
	// backup notes.
	BackupRemark *string `pulumi:"backupRemark"`
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId *string `pulumi:"instanceId"`
}

type InstanceBackupState struct {
	// 0:logical backup, 1:physical backup.
	BackupMethod pulumi.IntPtrInput
	// backup notes.
	BackupRemark pulumi.StringPtrInput
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId pulumi.StringPtrInput
}

func (InstanceBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceBackupState)(nil)).Elem()
}

type instanceBackupArgs struct {
	// 0:logical backup, 1:physical backup.
	BackupMethod int `pulumi:"backupMethod"`
	// backup notes.
	BackupRemark *string `pulumi:"backupRemark"`
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a InstanceBackup resource.
type InstanceBackupArgs struct {
	// 0:logical backup, 1:physical backup.
	BackupMethod pulumi.IntInput
	// backup notes.
	BackupRemark pulumi.StringPtrInput
	// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
	InstanceId pulumi.StringInput
}

func (InstanceBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceBackupArgs)(nil)).Elem()
}

type InstanceBackupInput interface {
	pulumi.Input

	ToInstanceBackupOutput() InstanceBackupOutput
	ToInstanceBackupOutputWithContext(ctx context.Context) InstanceBackupOutput
}

func (*InstanceBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackup)(nil)).Elem()
}

func (i *InstanceBackup) ToInstanceBackupOutput() InstanceBackupOutput {
	return i.ToInstanceBackupOutputWithContext(context.Background())
}

func (i *InstanceBackup) ToInstanceBackupOutputWithContext(ctx context.Context) InstanceBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupOutput)
}

// InstanceBackupArrayInput is an input type that accepts InstanceBackupArray and InstanceBackupArrayOutput values.
// You can construct a concrete instance of `InstanceBackupArrayInput` via:
//
//	InstanceBackupArray{ InstanceBackupArgs{...} }
type InstanceBackupArrayInput interface {
	pulumi.Input

	ToInstanceBackupArrayOutput() InstanceBackupArrayOutput
	ToInstanceBackupArrayOutputWithContext(context.Context) InstanceBackupArrayOutput
}

type InstanceBackupArray []InstanceBackupInput

func (InstanceBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceBackup)(nil)).Elem()
}

func (i InstanceBackupArray) ToInstanceBackupArrayOutput() InstanceBackupArrayOutput {
	return i.ToInstanceBackupArrayOutputWithContext(context.Background())
}

func (i InstanceBackupArray) ToInstanceBackupArrayOutputWithContext(ctx context.Context) InstanceBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupArrayOutput)
}

// InstanceBackupMapInput is an input type that accepts InstanceBackupMap and InstanceBackupMapOutput values.
// You can construct a concrete instance of `InstanceBackupMapInput` via:
//
//	InstanceBackupMap{ "key": InstanceBackupArgs{...} }
type InstanceBackupMapInput interface {
	pulumi.Input

	ToInstanceBackupMapOutput() InstanceBackupMapOutput
	ToInstanceBackupMapOutputWithContext(context.Context) InstanceBackupMapOutput
}

type InstanceBackupMap map[string]InstanceBackupInput

func (InstanceBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceBackup)(nil)).Elem()
}

func (i InstanceBackupMap) ToInstanceBackupMapOutput() InstanceBackupMapOutput {
	return i.ToInstanceBackupMapOutputWithContext(context.Background())
}

func (i InstanceBackupMap) ToInstanceBackupMapOutputWithContext(ctx context.Context) InstanceBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupMapOutput)
}

type InstanceBackupOutput struct{ *pulumi.OutputState }

func (InstanceBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackup)(nil)).Elem()
}

func (o InstanceBackupOutput) ToInstanceBackupOutput() InstanceBackupOutput {
	return o
}

func (o InstanceBackupOutput) ToInstanceBackupOutputWithContext(ctx context.Context) InstanceBackupOutput {
	return o
}

// 0:logical backup, 1:physical backup.
func (o InstanceBackupOutput) BackupMethod() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceBackup) pulumi.IntOutput { return v.BackupMethod }).(pulumi.IntOutput)
}

// backup notes.
func (o InstanceBackupOutput) BackupRemark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackup) pulumi.StringPtrOutput { return v.BackupRemark }).(pulumi.StringPtrOutput)
}

// Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
func (o InstanceBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceBackup) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type InstanceBackupArrayOutput struct{ *pulumi.OutputState }

func (InstanceBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceBackup)(nil)).Elem()
}

func (o InstanceBackupArrayOutput) ToInstanceBackupArrayOutput() InstanceBackupArrayOutput {
	return o
}

func (o InstanceBackupArrayOutput) ToInstanceBackupArrayOutputWithContext(ctx context.Context) InstanceBackupArrayOutput {
	return o
}

func (o InstanceBackupArrayOutput) Index(i pulumi.IntInput) InstanceBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceBackup {
		return vs[0].([]*InstanceBackup)[vs[1].(int)]
	}).(InstanceBackupOutput)
}

type InstanceBackupMapOutput struct{ *pulumi.OutputState }

func (InstanceBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceBackup)(nil)).Elem()
}

func (o InstanceBackupMapOutput) ToInstanceBackupMapOutput() InstanceBackupMapOutput {
	return o
}

func (o InstanceBackupMapOutput) ToInstanceBackupMapOutputWithContext(ctx context.Context) InstanceBackupMapOutput {
	return o
}

func (o InstanceBackupMapOutput) MapIndex(k pulumi.StringInput) InstanceBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceBackup {
		return vs[0].(map[string]*InstanceBackup)[vs[1].(string)]
	}).(InstanceBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupInput)(nil)).Elem(), &InstanceBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupArrayInput)(nil)).Elem(), InstanceBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupMapInput)(nil)).Elem(), InstanceBackupMap{})
	pulumi.RegisterOutputType(InstanceBackupOutput{})
	pulumi.RegisterOutputType(InstanceBackupArrayOutput{})
	pulumi.RegisterOutputType(InstanceBackupMapOutput{})
}
