// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tem

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppConfigConfigData struct {
	// key.
	Key string `pulumi:"key"`
	// value.
	Value string `pulumi:"value"`
}

// AppConfigConfigDataInput is an input type that accepts AppConfigConfigDataArgs and AppConfigConfigDataOutput values.
// You can construct a concrete instance of `AppConfigConfigDataInput` via:
//
//	AppConfigConfigDataArgs{...}
type AppConfigConfigDataInput interface {
	pulumi.Input

	ToAppConfigConfigDataOutput() AppConfigConfigDataOutput
	ToAppConfigConfigDataOutputWithContext(context.Context) AppConfigConfigDataOutput
}

type AppConfigConfigDataArgs struct {
	// key.
	Key pulumi.StringInput `pulumi:"key"`
	// value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppConfigConfigDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConfigConfigData)(nil)).Elem()
}

func (i AppConfigConfigDataArgs) ToAppConfigConfigDataOutput() AppConfigConfigDataOutput {
	return i.ToAppConfigConfigDataOutputWithContext(context.Background())
}

func (i AppConfigConfigDataArgs) ToAppConfigConfigDataOutputWithContext(ctx context.Context) AppConfigConfigDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConfigConfigDataOutput)
}

// AppConfigConfigDataArrayInput is an input type that accepts AppConfigConfigDataArray and AppConfigConfigDataArrayOutput values.
// You can construct a concrete instance of `AppConfigConfigDataArrayInput` via:
//
//	AppConfigConfigDataArray{ AppConfigConfigDataArgs{...} }
type AppConfigConfigDataArrayInput interface {
	pulumi.Input

	ToAppConfigConfigDataArrayOutput() AppConfigConfigDataArrayOutput
	ToAppConfigConfigDataArrayOutputWithContext(context.Context) AppConfigConfigDataArrayOutput
}

type AppConfigConfigDataArray []AppConfigConfigDataInput

func (AppConfigConfigDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppConfigConfigData)(nil)).Elem()
}

func (i AppConfigConfigDataArray) ToAppConfigConfigDataArrayOutput() AppConfigConfigDataArrayOutput {
	return i.ToAppConfigConfigDataArrayOutputWithContext(context.Background())
}

func (i AppConfigConfigDataArray) ToAppConfigConfigDataArrayOutputWithContext(ctx context.Context) AppConfigConfigDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConfigConfigDataArrayOutput)
}

type AppConfigConfigDataOutput struct{ *pulumi.OutputState }

func (AppConfigConfigDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConfigConfigData)(nil)).Elem()
}

func (o AppConfigConfigDataOutput) ToAppConfigConfigDataOutput() AppConfigConfigDataOutput {
	return o
}

func (o AppConfigConfigDataOutput) ToAppConfigConfigDataOutputWithContext(ctx context.Context) AppConfigConfigDataOutput {
	return o
}

// key.
func (o AppConfigConfigDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AppConfigConfigData) string { return v.Key }).(pulumi.StringOutput)
}

// value.
func (o AppConfigConfigDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppConfigConfigData) string { return v.Value }).(pulumi.StringOutput)
}

type AppConfigConfigDataArrayOutput struct{ *pulumi.OutputState }

func (AppConfigConfigDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppConfigConfigData)(nil)).Elem()
}

func (o AppConfigConfigDataArrayOutput) ToAppConfigConfigDataArrayOutput() AppConfigConfigDataArrayOutput {
	return o
}

func (o AppConfigConfigDataArrayOutput) ToAppConfigConfigDataArrayOutputWithContext(ctx context.Context) AppConfigConfigDataArrayOutput {
	return o
}

func (o AppConfigConfigDataArrayOutput) Index(i pulumi.IntInput) AppConfigConfigDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppConfigConfigData {
		return vs[0].([]AppConfigConfigData)[vs[1].(int)]
	}).(AppConfigConfigDataOutput)
}

type ApplicationServiceService struct {
	Ip *string `pulumi:"ip"`
	// port mapping item list.
	PortMappingItemLists []ApplicationServiceServicePortMappingItemList `pulumi:"portMappingItemLists"`
	// application service name.
	ServiceName *string `pulumi:"serviceName"`
	// ID of subnet instance, required when type is `VPC`.
	SubnetId *string `pulumi:"subnetId"`
	// application service type: EXTERNAL | VPC | CLUSTER.
	Type *string `pulumi:"type"`
	// ID of vpc instance, required when type is `VPC`.
	VpcId *string `pulumi:"vpcId"`
}

// ApplicationServiceServiceInput is an input type that accepts ApplicationServiceServiceArgs and ApplicationServiceServiceOutput values.
// You can construct a concrete instance of `ApplicationServiceServiceInput` via:
//
//	ApplicationServiceServiceArgs{...}
type ApplicationServiceServiceInput interface {
	pulumi.Input

	ToApplicationServiceServiceOutput() ApplicationServiceServiceOutput
	ToApplicationServiceServiceOutputWithContext(context.Context) ApplicationServiceServiceOutput
}

type ApplicationServiceServiceArgs struct {
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// port mapping item list.
	PortMappingItemLists ApplicationServiceServicePortMappingItemListArrayInput `pulumi:"portMappingItemLists"`
	// application service name.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// ID of subnet instance, required when type is `VPC`.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// application service type: EXTERNAL | VPC | CLUSTER.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// ID of vpc instance, required when type is `VPC`.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (ApplicationServiceServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationServiceService)(nil)).Elem()
}

func (i ApplicationServiceServiceArgs) ToApplicationServiceServiceOutput() ApplicationServiceServiceOutput {
	return i.ToApplicationServiceServiceOutputWithContext(context.Background())
}

func (i ApplicationServiceServiceArgs) ToApplicationServiceServiceOutputWithContext(ctx context.Context) ApplicationServiceServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationServiceServiceOutput)
}

func (i ApplicationServiceServiceArgs) ToApplicationServiceServicePtrOutput() ApplicationServiceServicePtrOutput {
	return i.ToApplicationServiceServicePtrOutputWithContext(context.Background())
}

func (i ApplicationServiceServiceArgs) ToApplicationServiceServicePtrOutputWithContext(ctx context.Context) ApplicationServiceServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationServiceServiceOutput).ToApplicationServiceServicePtrOutputWithContext(ctx)
}

// ApplicationServiceServicePtrInput is an input type that accepts ApplicationServiceServiceArgs, ApplicationServiceServicePtr and ApplicationServiceServicePtrOutput values.
// You can construct a concrete instance of `ApplicationServiceServicePtrInput` via:
//
//	        ApplicationServiceServiceArgs{...}
//
//	or:
//
//	        nil
type ApplicationServiceServicePtrInput interface {
	pulumi.Input

	ToApplicationServiceServicePtrOutput() ApplicationServiceServicePtrOutput
	ToApplicationServiceServicePtrOutputWithContext(context.Context) ApplicationServiceServicePtrOutput
}

type applicationServiceServicePtrType ApplicationServiceServiceArgs

func ApplicationServiceServicePtr(v *ApplicationServiceServiceArgs) ApplicationServiceServicePtrInput {
	return (*applicationServiceServicePtrType)(v)
}

func (*applicationServiceServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationServiceService)(nil)).Elem()
}

func (i *applicationServiceServicePtrType) ToApplicationServiceServicePtrOutput() ApplicationServiceServicePtrOutput {
	return i.ToApplicationServiceServicePtrOutputWithContext(context.Background())
}

func (i *applicationServiceServicePtrType) ToApplicationServiceServicePtrOutputWithContext(ctx context.Context) ApplicationServiceServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationServiceServicePtrOutput)
}

type ApplicationServiceServiceOutput struct{ *pulumi.OutputState }

func (ApplicationServiceServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationServiceService)(nil)).Elem()
}

func (o ApplicationServiceServiceOutput) ToApplicationServiceServiceOutput() ApplicationServiceServiceOutput {
	return o
}

func (o ApplicationServiceServiceOutput) ToApplicationServiceServiceOutputWithContext(ctx context.Context) ApplicationServiceServiceOutput {
	return o
}

func (o ApplicationServiceServiceOutput) ToApplicationServiceServicePtrOutput() ApplicationServiceServicePtrOutput {
	return o.ToApplicationServiceServicePtrOutputWithContext(context.Background())
}

func (o ApplicationServiceServiceOutput) ToApplicationServiceServicePtrOutputWithContext(ctx context.Context) ApplicationServiceServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationServiceService) *ApplicationServiceService {
		return &v
	}).(ApplicationServiceServicePtrOutput)
}

func (o ApplicationServiceServiceOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationServiceService) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// port mapping item list.
func (o ApplicationServiceServiceOutput) PortMappingItemLists() ApplicationServiceServicePortMappingItemListArrayOutput {
	return o.ApplyT(func(v ApplicationServiceService) []ApplicationServiceServicePortMappingItemList {
		return v.PortMappingItemLists
	}).(ApplicationServiceServicePortMappingItemListArrayOutput)
}

// application service name.
func (o ApplicationServiceServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationServiceService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// ID of subnet instance, required when type is `VPC`.
func (o ApplicationServiceServiceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationServiceService) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// application service type: EXTERNAL | VPC | CLUSTER.
func (o ApplicationServiceServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationServiceService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// ID of vpc instance, required when type is `VPC`.
func (o ApplicationServiceServiceOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationServiceService) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ApplicationServiceServicePtrOutput struct{ *pulumi.OutputState }

func (ApplicationServiceServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationServiceService)(nil)).Elem()
}

func (o ApplicationServiceServicePtrOutput) ToApplicationServiceServicePtrOutput() ApplicationServiceServicePtrOutput {
	return o
}

func (o ApplicationServiceServicePtrOutput) ToApplicationServiceServicePtrOutputWithContext(ctx context.Context) ApplicationServiceServicePtrOutput {
	return o
}

func (o ApplicationServiceServicePtrOutput) Elem() ApplicationServiceServiceOutput {
	return o.ApplyT(func(v *ApplicationServiceService) ApplicationServiceService {
		if v != nil {
			return *v
		}
		var ret ApplicationServiceService
		return ret
	}).(ApplicationServiceServiceOutput)
}

func (o ApplicationServiceServicePtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationServiceService) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// port mapping item list.
func (o ApplicationServiceServicePtrOutput) PortMappingItemLists() ApplicationServiceServicePortMappingItemListArrayOutput {
	return o.ApplyT(func(v *ApplicationServiceService) []ApplicationServiceServicePortMappingItemList {
		if v == nil {
			return nil
		}
		return v.PortMappingItemLists
	}).(ApplicationServiceServicePortMappingItemListArrayOutput)
}

// application service name.
func (o ApplicationServiceServicePtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationServiceService) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// ID of subnet instance, required when type is `VPC`.
func (o ApplicationServiceServicePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationServiceService) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// application service type: EXTERNAL | VPC | CLUSTER.
func (o ApplicationServiceServicePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationServiceService) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ID of vpc instance, required when type is `VPC`.
func (o ApplicationServiceServicePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationServiceService) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type ApplicationServiceServicePortMappingItemList struct {
	// container port.
	Port *int `pulumi:"port"`
	// UDP or TCP.
	Protocol *string `pulumi:"protocol"`
	// application listen port.
	TargetPort *int `pulumi:"targetPort"`
}

// ApplicationServiceServicePortMappingItemListInput is an input type that accepts ApplicationServiceServicePortMappingItemListArgs and ApplicationServiceServicePortMappingItemListOutput values.
// You can construct a concrete instance of `ApplicationServiceServicePortMappingItemListInput` via:
//
//	ApplicationServiceServicePortMappingItemListArgs{...}
type ApplicationServiceServicePortMappingItemListInput interface {
	pulumi.Input

	ToApplicationServiceServicePortMappingItemListOutput() ApplicationServiceServicePortMappingItemListOutput
	ToApplicationServiceServicePortMappingItemListOutputWithContext(context.Context) ApplicationServiceServicePortMappingItemListOutput
}

type ApplicationServiceServicePortMappingItemListArgs struct {
	// container port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// UDP or TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// application listen port.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (ApplicationServiceServicePortMappingItemListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationServiceServicePortMappingItemList)(nil)).Elem()
}

func (i ApplicationServiceServicePortMappingItemListArgs) ToApplicationServiceServicePortMappingItemListOutput() ApplicationServiceServicePortMappingItemListOutput {
	return i.ToApplicationServiceServicePortMappingItemListOutputWithContext(context.Background())
}

func (i ApplicationServiceServicePortMappingItemListArgs) ToApplicationServiceServicePortMappingItemListOutputWithContext(ctx context.Context) ApplicationServiceServicePortMappingItemListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationServiceServicePortMappingItemListOutput)
}

// ApplicationServiceServicePortMappingItemListArrayInput is an input type that accepts ApplicationServiceServicePortMappingItemListArray and ApplicationServiceServicePortMappingItemListArrayOutput values.
// You can construct a concrete instance of `ApplicationServiceServicePortMappingItemListArrayInput` via:
//
//	ApplicationServiceServicePortMappingItemListArray{ ApplicationServiceServicePortMappingItemListArgs{...} }
type ApplicationServiceServicePortMappingItemListArrayInput interface {
	pulumi.Input

	ToApplicationServiceServicePortMappingItemListArrayOutput() ApplicationServiceServicePortMappingItemListArrayOutput
	ToApplicationServiceServicePortMappingItemListArrayOutputWithContext(context.Context) ApplicationServiceServicePortMappingItemListArrayOutput
}

type ApplicationServiceServicePortMappingItemListArray []ApplicationServiceServicePortMappingItemListInput

func (ApplicationServiceServicePortMappingItemListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationServiceServicePortMappingItemList)(nil)).Elem()
}

func (i ApplicationServiceServicePortMappingItemListArray) ToApplicationServiceServicePortMappingItemListArrayOutput() ApplicationServiceServicePortMappingItemListArrayOutput {
	return i.ToApplicationServiceServicePortMappingItemListArrayOutputWithContext(context.Background())
}

func (i ApplicationServiceServicePortMappingItemListArray) ToApplicationServiceServicePortMappingItemListArrayOutputWithContext(ctx context.Context) ApplicationServiceServicePortMappingItemListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationServiceServicePortMappingItemListArrayOutput)
}

type ApplicationServiceServicePortMappingItemListOutput struct{ *pulumi.OutputState }

func (ApplicationServiceServicePortMappingItemListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationServiceServicePortMappingItemList)(nil)).Elem()
}

func (o ApplicationServiceServicePortMappingItemListOutput) ToApplicationServiceServicePortMappingItemListOutput() ApplicationServiceServicePortMappingItemListOutput {
	return o
}

func (o ApplicationServiceServicePortMappingItemListOutput) ToApplicationServiceServicePortMappingItemListOutputWithContext(ctx context.Context) ApplicationServiceServicePortMappingItemListOutput {
	return o
}

// container port.
func (o ApplicationServiceServicePortMappingItemListOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationServiceServicePortMappingItemList) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// UDP or TCP.
func (o ApplicationServiceServicePortMappingItemListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationServiceServicePortMappingItemList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// application listen port.
func (o ApplicationServiceServicePortMappingItemListOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationServiceServicePortMappingItemList) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type ApplicationServiceServicePortMappingItemListArrayOutput struct{ *pulumi.OutputState }

func (ApplicationServiceServicePortMappingItemListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationServiceServicePortMappingItemList)(nil)).Elem()
}

func (o ApplicationServiceServicePortMappingItemListArrayOutput) ToApplicationServiceServicePortMappingItemListArrayOutput() ApplicationServiceServicePortMappingItemListArrayOutput {
	return o
}

func (o ApplicationServiceServicePortMappingItemListArrayOutput) ToApplicationServiceServicePortMappingItemListArrayOutputWithContext(ctx context.Context) ApplicationServiceServicePortMappingItemListArrayOutput {
	return o
}

func (o ApplicationServiceServicePortMappingItemListArrayOutput) Index(i pulumi.IntInput) ApplicationServiceServicePortMappingItemListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationServiceServicePortMappingItemList {
		return vs[0].([]ApplicationServiceServicePortMappingItemList)[vs[1].(int)]
	}).(ApplicationServiceServicePortMappingItemListOutput)
}

type GatewayIngress struct {
	// ip version, support IPV4.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// related CLB ID, support binding existing clb, does not support modification.
	ClbId      *string `pulumi:"clbId"`
	CreateTime *string `pulumi:"createTime"`
	// environment ID.
	EnvironmentId string `pulumi:"environmentId"`
	// gateway name.
	IngressName string `pulumi:"ingressName"`
	// mixing HTTP and HTTPS.
	Mixed bool `pulumi:"mixed"`
	// redirect mode, support AUTO and NONE.
	RewriteType *string `pulumi:"rewriteType"`
	// proxy rules.
	Rules []GatewayIngressRule `pulumi:"rules"`
	// ingress TLS configurations.
	Tls []GatewayIngressTl `pulumi:"tls"`
	Vip *string            `pulumi:"vip"`
}

// GatewayIngressInput is an input type that accepts GatewayIngressArgs and GatewayIngressOutput values.
// You can construct a concrete instance of `GatewayIngressInput` via:
//
//	GatewayIngressArgs{...}
type GatewayIngressInput interface {
	pulumi.Input

	ToGatewayIngressOutput() GatewayIngressOutput
	ToGatewayIngressOutputWithContext(context.Context) GatewayIngressOutput
}

type GatewayIngressArgs struct {
	// ip version, support IPV4.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// related CLB ID, support binding existing clb, does not support modification.
	ClbId      pulumi.StringPtrInput `pulumi:"clbId"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// environment ID.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// gateway name.
	IngressName pulumi.StringInput `pulumi:"ingressName"`
	// mixing HTTP and HTTPS.
	Mixed pulumi.BoolInput `pulumi:"mixed"`
	// redirect mode, support AUTO and NONE.
	RewriteType pulumi.StringPtrInput `pulumi:"rewriteType"`
	// proxy rules.
	Rules GatewayIngressRuleArrayInput `pulumi:"rules"`
	// ingress TLS configurations.
	Tls GatewayIngressTlArrayInput `pulumi:"tls"`
	Vip pulumi.StringPtrInput      `pulumi:"vip"`
}

func (GatewayIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngress)(nil)).Elem()
}

func (i GatewayIngressArgs) ToGatewayIngressOutput() GatewayIngressOutput {
	return i.ToGatewayIngressOutputWithContext(context.Background())
}

func (i GatewayIngressArgs) ToGatewayIngressOutputWithContext(ctx context.Context) GatewayIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressOutput)
}

func (i GatewayIngressArgs) ToGatewayIngressPtrOutput() GatewayIngressPtrOutput {
	return i.ToGatewayIngressPtrOutputWithContext(context.Background())
}

func (i GatewayIngressArgs) ToGatewayIngressPtrOutputWithContext(ctx context.Context) GatewayIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressOutput).ToGatewayIngressPtrOutputWithContext(ctx)
}

// GatewayIngressPtrInput is an input type that accepts GatewayIngressArgs, GatewayIngressPtr and GatewayIngressPtrOutput values.
// You can construct a concrete instance of `GatewayIngressPtrInput` via:
//
//	        GatewayIngressArgs{...}
//
//	or:
//
//	        nil
type GatewayIngressPtrInput interface {
	pulumi.Input

	ToGatewayIngressPtrOutput() GatewayIngressPtrOutput
	ToGatewayIngressPtrOutputWithContext(context.Context) GatewayIngressPtrOutput
}

type gatewayIngressPtrType GatewayIngressArgs

func GatewayIngressPtr(v *GatewayIngressArgs) GatewayIngressPtrInput {
	return (*gatewayIngressPtrType)(v)
}

func (*gatewayIngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayIngress)(nil)).Elem()
}

func (i *gatewayIngressPtrType) ToGatewayIngressPtrOutput() GatewayIngressPtrOutput {
	return i.ToGatewayIngressPtrOutputWithContext(context.Background())
}

func (i *gatewayIngressPtrType) ToGatewayIngressPtrOutputWithContext(ctx context.Context) GatewayIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressPtrOutput)
}

type GatewayIngressOutput struct{ *pulumi.OutputState }

func (GatewayIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngress)(nil)).Elem()
}

func (o GatewayIngressOutput) ToGatewayIngressOutput() GatewayIngressOutput {
	return o
}

func (o GatewayIngressOutput) ToGatewayIngressOutputWithContext(ctx context.Context) GatewayIngressOutput {
	return o
}

func (o GatewayIngressOutput) ToGatewayIngressPtrOutput() GatewayIngressPtrOutput {
	return o.ToGatewayIngressPtrOutputWithContext(context.Background())
}

func (o GatewayIngressOutput) ToGatewayIngressPtrOutputWithContext(ctx context.Context) GatewayIngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayIngress) *GatewayIngress {
		return &v
	}).(GatewayIngressPtrOutput)
}

// ip version, support IPV4.
func (o GatewayIngressOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayIngress) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// related CLB ID, support binding existing clb, does not support modification.
func (o GatewayIngressOutput) ClbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngress) *string { return v.ClbId }).(pulumi.StringPtrOutput)
}

func (o GatewayIngressOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngress) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// environment ID.
func (o GatewayIngressOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayIngress) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// gateway name.
func (o GatewayIngressOutput) IngressName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayIngress) string { return v.IngressName }).(pulumi.StringOutput)
}

// mixing HTTP and HTTPS.
func (o GatewayIngressOutput) Mixed() pulumi.BoolOutput {
	return o.ApplyT(func(v GatewayIngress) bool { return v.Mixed }).(pulumi.BoolOutput)
}

// redirect mode, support AUTO and NONE.
func (o GatewayIngressOutput) RewriteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngress) *string { return v.RewriteType }).(pulumi.StringPtrOutput)
}

// proxy rules.
func (o GatewayIngressOutput) Rules() GatewayIngressRuleArrayOutput {
	return o.ApplyT(func(v GatewayIngress) []GatewayIngressRule { return v.Rules }).(GatewayIngressRuleArrayOutput)
}

// ingress TLS configurations.
func (o GatewayIngressOutput) Tls() GatewayIngressTlArrayOutput {
	return o.ApplyT(func(v GatewayIngress) []GatewayIngressTl { return v.Tls }).(GatewayIngressTlArrayOutput)
}

func (o GatewayIngressOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngress) *string { return v.Vip }).(pulumi.StringPtrOutput)
}

type GatewayIngressPtrOutput struct{ *pulumi.OutputState }

func (GatewayIngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayIngress)(nil)).Elem()
}

func (o GatewayIngressPtrOutput) ToGatewayIngressPtrOutput() GatewayIngressPtrOutput {
	return o
}

func (o GatewayIngressPtrOutput) ToGatewayIngressPtrOutputWithContext(ctx context.Context) GatewayIngressPtrOutput {
	return o
}

func (o GatewayIngressPtrOutput) Elem() GatewayIngressOutput {
	return o.ApplyT(func(v *GatewayIngress) GatewayIngress {
		if v != nil {
			return *v
		}
		var ret GatewayIngress
		return ret
	}).(GatewayIngressOutput)
}

// ip version, support IPV4.
func (o GatewayIngressPtrOutput) AddressIpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return &v.AddressIpVersion
	}).(pulumi.StringPtrOutput)
}

// related CLB ID, support binding existing clb, does not support modification.
func (o GatewayIngressPtrOutput) ClbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return v.ClbId
	}).(pulumi.StringPtrOutput)
}

func (o GatewayIngressPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// environment ID.
func (o GatewayIngressPtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return &v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// gateway name.
func (o GatewayIngressPtrOutput) IngressName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return &v.IngressName
	}).(pulumi.StringPtrOutput)
}

// mixing HTTP and HTTPS.
func (o GatewayIngressPtrOutput) Mixed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *bool {
		if v == nil {
			return nil
		}
		return &v.Mixed
	}).(pulumi.BoolPtrOutput)
}

// redirect mode, support AUTO and NONE.
func (o GatewayIngressPtrOutput) RewriteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return v.RewriteType
	}).(pulumi.StringPtrOutput)
}

// proxy rules.
func (o GatewayIngressPtrOutput) Rules() GatewayIngressRuleArrayOutput {
	return o.ApplyT(func(v *GatewayIngress) []GatewayIngressRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(GatewayIngressRuleArrayOutput)
}

// ingress TLS configurations.
func (o GatewayIngressPtrOutput) Tls() GatewayIngressTlArrayOutput {
	return o.ApplyT(func(v *GatewayIngress) []GatewayIngressTl {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(GatewayIngressTlArrayOutput)
}

func (o GatewayIngressPtrOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayIngress) *string {
		if v == nil {
			return nil
		}
		return v.Vip
	}).(pulumi.StringPtrOutput)
}

type GatewayIngressRule struct {
	// host name.
	Host *string `pulumi:"host"`
	// rule payload.
	Http GatewayIngressRuleHttp `pulumi:"http"`
	// protocol.
	Protocol *string `pulumi:"protocol"`
}

// GatewayIngressRuleInput is an input type that accepts GatewayIngressRuleArgs and GatewayIngressRuleOutput values.
// You can construct a concrete instance of `GatewayIngressRuleInput` via:
//
//	GatewayIngressRuleArgs{...}
type GatewayIngressRuleInput interface {
	pulumi.Input

	ToGatewayIngressRuleOutput() GatewayIngressRuleOutput
	ToGatewayIngressRuleOutputWithContext(context.Context) GatewayIngressRuleOutput
}

type GatewayIngressRuleArgs struct {
	// host name.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// rule payload.
	Http GatewayIngressRuleHttpInput `pulumi:"http"`
	// protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (GatewayIngressRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRule)(nil)).Elem()
}

func (i GatewayIngressRuleArgs) ToGatewayIngressRuleOutput() GatewayIngressRuleOutput {
	return i.ToGatewayIngressRuleOutputWithContext(context.Background())
}

func (i GatewayIngressRuleArgs) ToGatewayIngressRuleOutputWithContext(ctx context.Context) GatewayIngressRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressRuleOutput)
}

// GatewayIngressRuleArrayInput is an input type that accepts GatewayIngressRuleArray and GatewayIngressRuleArrayOutput values.
// You can construct a concrete instance of `GatewayIngressRuleArrayInput` via:
//
//	GatewayIngressRuleArray{ GatewayIngressRuleArgs{...} }
type GatewayIngressRuleArrayInput interface {
	pulumi.Input

	ToGatewayIngressRuleArrayOutput() GatewayIngressRuleArrayOutput
	ToGatewayIngressRuleArrayOutputWithContext(context.Context) GatewayIngressRuleArrayOutput
}

type GatewayIngressRuleArray []GatewayIngressRuleInput

func (GatewayIngressRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIngressRule)(nil)).Elem()
}

func (i GatewayIngressRuleArray) ToGatewayIngressRuleArrayOutput() GatewayIngressRuleArrayOutput {
	return i.ToGatewayIngressRuleArrayOutputWithContext(context.Background())
}

func (i GatewayIngressRuleArray) ToGatewayIngressRuleArrayOutputWithContext(ctx context.Context) GatewayIngressRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressRuleArrayOutput)
}

type GatewayIngressRuleOutput struct{ *pulumi.OutputState }

func (GatewayIngressRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRule)(nil)).Elem()
}

func (o GatewayIngressRuleOutput) ToGatewayIngressRuleOutput() GatewayIngressRuleOutput {
	return o
}

func (o GatewayIngressRuleOutput) ToGatewayIngressRuleOutputWithContext(ctx context.Context) GatewayIngressRuleOutput {
	return o
}

// host name.
func (o GatewayIngressRuleOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngressRule) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// rule payload.
func (o GatewayIngressRuleOutput) Http() GatewayIngressRuleHttpOutput {
	return o.ApplyT(func(v GatewayIngressRule) GatewayIngressRuleHttp { return v.Http }).(GatewayIngressRuleHttpOutput)
}

// protocol.
func (o GatewayIngressRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngressRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type GatewayIngressRuleArrayOutput struct{ *pulumi.OutputState }

func (GatewayIngressRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIngressRule)(nil)).Elem()
}

func (o GatewayIngressRuleArrayOutput) ToGatewayIngressRuleArrayOutput() GatewayIngressRuleArrayOutput {
	return o
}

func (o GatewayIngressRuleArrayOutput) ToGatewayIngressRuleArrayOutputWithContext(ctx context.Context) GatewayIngressRuleArrayOutput {
	return o
}

func (o GatewayIngressRuleArrayOutput) Index(i pulumi.IntInput) GatewayIngressRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayIngressRule {
		return vs[0].([]GatewayIngressRule)[vs[1].(int)]
	}).(GatewayIngressRuleOutput)
}

type GatewayIngressRuleHttp struct {
	// path payload.
	Paths []GatewayIngressRuleHttpPath `pulumi:"paths"`
}

// GatewayIngressRuleHttpInput is an input type that accepts GatewayIngressRuleHttpArgs and GatewayIngressRuleHttpOutput values.
// You can construct a concrete instance of `GatewayIngressRuleHttpInput` via:
//
//	GatewayIngressRuleHttpArgs{...}
type GatewayIngressRuleHttpInput interface {
	pulumi.Input

	ToGatewayIngressRuleHttpOutput() GatewayIngressRuleHttpOutput
	ToGatewayIngressRuleHttpOutputWithContext(context.Context) GatewayIngressRuleHttpOutput
}

type GatewayIngressRuleHttpArgs struct {
	// path payload.
	Paths GatewayIngressRuleHttpPathArrayInput `pulumi:"paths"`
}

func (GatewayIngressRuleHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRuleHttp)(nil)).Elem()
}

func (i GatewayIngressRuleHttpArgs) ToGatewayIngressRuleHttpOutput() GatewayIngressRuleHttpOutput {
	return i.ToGatewayIngressRuleHttpOutputWithContext(context.Background())
}

func (i GatewayIngressRuleHttpArgs) ToGatewayIngressRuleHttpOutputWithContext(ctx context.Context) GatewayIngressRuleHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressRuleHttpOutput)
}

type GatewayIngressRuleHttpOutput struct{ *pulumi.OutputState }

func (GatewayIngressRuleHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRuleHttp)(nil)).Elem()
}

func (o GatewayIngressRuleHttpOutput) ToGatewayIngressRuleHttpOutput() GatewayIngressRuleHttpOutput {
	return o
}

func (o GatewayIngressRuleHttpOutput) ToGatewayIngressRuleHttpOutputWithContext(ctx context.Context) GatewayIngressRuleHttpOutput {
	return o
}

// path payload.
func (o GatewayIngressRuleHttpOutput) Paths() GatewayIngressRuleHttpPathArrayOutput {
	return o.ApplyT(func(v GatewayIngressRuleHttp) []GatewayIngressRuleHttpPath { return v.Paths }).(GatewayIngressRuleHttpPathArrayOutput)
}

type GatewayIngressRuleHttpPath struct {
	// backend payload.
	Backend GatewayIngressRuleHttpPathBackend `pulumi:"backend"`
	// path.
	Path string `pulumi:"path"`
}

// GatewayIngressRuleHttpPathInput is an input type that accepts GatewayIngressRuleHttpPathArgs and GatewayIngressRuleHttpPathOutput values.
// You can construct a concrete instance of `GatewayIngressRuleHttpPathInput` via:
//
//	GatewayIngressRuleHttpPathArgs{...}
type GatewayIngressRuleHttpPathInput interface {
	pulumi.Input

	ToGatewayIngressRuleHttpPathOutput() GatewayIngressRuleHttpPathOutput
	ToGatewayIngressRuleHttpPathOutputWithContext(context.Context) GatewayIngressRuleHttpPathOutput
}

type GatewayIngressRuleHttpPathArgs struct {
	// backend payload.
	Backend GatewayIngressRuleHttpPathBackendInput `pulumi:"backend"`
	// path.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GatewayIngressRuleHttpPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRuleHttpPath)(nil)).Elem()
}

func (i GatewayIngressRuleHttpPathArgs) ToGatewayIngressRuleHttpPathOutput() GatewayIngressRuleHttpPathOutput {
	return i.ToGatewayIngressRuleHttpPathOutputWithContext(context.Background())
}

func (i GatewayIngressRuleHttpPathArgs) ToGatewayIngressRuleHttpPathOutputWithContext(ctx context.Context) GatewayIngressRuleHttpPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressRuleHttpPathOutput)
}

// GatewayIngressRuleHttpPathArrayInput is an input type that accepts GatewayIngressRuleHttpPathArray and GatewayIngressRuleHttpPathArrayOutput values.
// You can construct a concrete instance of `GatewayIngressRuleHttpPathArrayInput` via:
//
//	GatewayIngressRuleHttpPathArray{ GatewayIngressRuleHttpPathArgs{...} }
type GatewayIngressRuleHttpPathArrayInput interface {
	pulumi.Input

	ToGatewayIngressRuleHttpPathArrayOutput() GatewayIngressRuleHttpPathArrayOutput
	ToGatewayIngressRuleHttpPathArrayOutputWithContext(context.Context) GatewayIngressRuleHttpPathArrayOutput
}

type GatewayIngressRuleHttpPathArray []GatewayIngressRuleHttpPathInput

func (GatewayIngressRuleHttpPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIngressRuleHttpPath)(nil)).Elem()
}

func (i GatewayIngressRuleHttpPathArray) ToGatewayIngressRuleHttpPathArrayOutput() GatewayIngressRuleHttpPathArrayOutput {
	return i.ToGatewayIngressRuleHttpPathArrayOutputWithContext(context.Background())
}

func (i GatewayIngressRuleHttpPathArray) ToGatewayIngressRuleHttpPathArrayOutputWithContext(ctx context.Context) GatewayIngressRuleHttpPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressRuleHttpPathArrayOutput)
}

type GatewayIngressRuleHttpPathOutput struct{ *pulumi.OutputState }

func (GatewayIngressRuleHttpPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRuleHttpPath)(nil)).Elem()
}

func (o GatewayIngressRuleHttpPathOutput) ToGatewayIngressRuleHttpPathOutput() GatewayIngressRuleHttpPathOutput {
	return o
}

func (o GatewayIngressRuleHttpPathOutput) ToGatewayIngressRuleHttpPathOutputWithContext(ctx context.Context) GatewayIngressRuleHttpPathOutput {
	return o
}

// backend payload.
func (o GatewayIngressRuleHttpPathOutput) Backend() GatewayIngressRuleHttpPathBackendOutput {
	return o.ApplyT(func(v GatewayIngressRuleHttpPath) GatewayIngressRuleHttpPathBackend { return v.Backend }).(GatewayIngressRuleHttpPathBackendOutput)
}

// path.
func (o GatewayIngressRuleHttpPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayIngressRuleHttpPath) string { return v.Path }).(pulumi.StringOutput)
}

type GatewayIngressRuleHttpPathArrayOutput struct{ *pulumi.OutputState }

func (GatewayIngressRuleHttpPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIngressRuleHttpPath)(nil)).Elem()
}

func (o GatewayIngressRuleHttpPathArrayOutput) ToGatewayIngressRuleHttpPathArrayOutput() GatewayIngressRuleHttpPathArrayOutput {
	return o
}

func (o GatewayIngressRuleHttpPathArrayOutput) ToGatewayIngressRuleHttpPathArrayOutputWithContext(ctx context.Context) GatewayIngressRuleHttpPathArrayOutput {
	return o
}

func (o GatewayIngressRuleHttpPathArrayOutput) Index(i pulumi.IntInput) GatewayIngressRuleHttpPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayIngressRuleHttpPath {
		return vs[0].([]GatewayIngressRuleHttpPath)[vs[1].(int)]
	}).(GatewayIngressRuleHttpPathOutput)
}

type GatewayIngressRuleHttpPathBackend struct {
	// backend name.
	ServiceName string `pulumi:"serviceName"`
	// backend port.
	ServicePort int `pulumi:"servicePort"`
}

// GatewayIngressRuleHttpPathBackendInput is an input type that accepts GatewayIngressRuleHttpPathBackendArgs and GatewayIngressRuleHttpPathBackendOutput values.
// You can construct a concrete instance of `GatewayIngressRuleHttpPathBackendInput` via:
//
//	GatewayIngressRuleHttpPathBackendArgs{...}
type GatewayIngressRuleHttpPathBackendInput interface {
	pulumi.Input

	ToGatewayIngressRuleHttpPathBackendOutput() GatewayIngressRuleHttpPathBackendOutput
	ToGatewayIngressRuleHttpPathBackendOutputWithContext(context.Context) GatewayIngressRuleHttpPathBackendOutput
}

type GatewayIngressRuleHttpPathBackendArgs struct {
	// backend name.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// backend port.
	ServicePort pulumi.IntInput `pulumi:"servicePort"`
}

func (GatewayIngressRuleHttpPathBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRuleHttpPathBackend)(nil)).Elem()
}

func (i GatewayIngressRuleHttpPathBackendArgs) ToGatewayIngressRuleHttpPathBackendOutput() GatewayIngressRuleHttpPathBackendOutput {
	return i.ToGatewayIngressRuleHttpPathBackendOutputWithContext(context.Background())
}

func (i GatewayIngressRuleHttpPathBackendArgs) ToGatewayIngressRuleHttpPathBackendOutputWithContext(ctx context.Context) GatewayIngressRuleHttpPathBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressRuleHttpPathBackendOutput)
}

type GatewayIngressRuleHttpPathBackendOutput struct{ *pulumi.OutputState }

func (GatewayIngressRuleHttpPathBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressRuleHttpPathBackend)(nil)).Elem()
}

func (o GatewayIngressRuleHttpPathBackendOutput) ToGatewayIngressRuleHttpPathBackendOutput() GatewayIngressRuleHttpPathBackendOutput {
	return o
}

func (o GatewayIngressRuleHttpPathBackendOutput) ToGatewayIngressRuleHttpPathBackendOutputWithContext(ctx context.Context) GatewayIngressRuleHttpPathBackendOutput {
	return o
}

// backend name.
func (o GatewayIngressRuleHttpPathBackendOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayIngressRuleHttpPathBackend) string { return v.ServiceName }).(pulumi.StringOutput)
}

// backend port.
func (o GatewayIngressRuleHttpPathBackendOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayIngressRuleHttpPathBackend) int { return v.ServicePort }).(pulumi.IntOutput)
}

type GatewayIngressTl struct {
	// certificate ID.
	CertificateId string `pulumi:"certificateId"`
	// host names.
	Hosts []string `pulumi:"hosts"`
	// secret name, if you use a certificate, you don't need to fill in this field.
	SecretName *string `pulumi:"secretName"`
}

// GatewayIngressTlInput is an input type that accepts GatewayIngressTlArgs and GatewayIngressTlOutput values.
// You can construct a concrete instance of `GatewayIngressTlInput` via:
//
//	GatewayIngressTlArgs{...}
type GatewayIngressTlInput interface {
	pulumi.Input

	ToGatewayIngressTlOutput() GatewayIngressTlOutput
	ToGatewayIngressTlOutputWithContext(context.Context) GatewayIngressTlOutput
}

type GatewayIngressTlArgs struct {
	// certificate ID.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// host names.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// secret name, if you use a certificate, you don't need to fill in this field.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (GatewayIngressTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressTl)(nil)).Elem()
}

func (i GatewayIngressTlArgs) ToGatewayIngressTlOutput() GatewayIngressTlOutput {
	return i.ToGatewayIngressTlOutputWithContext(context.Background())
}

func (i GatewayIngressTlArgs) ToGatewayIngressTlOutputWithContext(ctx context.Context) GatewayIngressTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressTlOutput)
}

// GatewayIngressTlArrayInput is an input type that accepts GatewayIngressTlArray and GatewayIngressTlArrayOutput values.
// You can construct a concrete instance of `GatewayIngressTlArrayInput` via:
//
//	GatewayIngressTlArray{ GatewayIngressTlArgs{...} }
type GatewayIngressTlArrayInput interface {
	pulumi.Input

	ToGatewayIngressTlArrayOutput() GatewayIngressTlArrayOutput
	ToGatewayIngressTlArrayOutputWithContext(context.Context) GatewayIngressTlArrayOutput
}

type GatewayIngressTlArray []GatewayIngressTlInput

func (GatewayIngressTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIngressTl)(nil)).Elem()
}

func (i GatewayIngressTlArray) ToGatewayIngressTlArrayOutput() GatewayIngressTlArrayOutput {
	return i.ToGatewayIngressTlArrayOutputWithContext(context.Background())
}

func (i GatewayIngressTlArray) ToGatewayIngressTlArrayOutputWithContext(ctx context.Context) GatewayIngressTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIngressTlArrayOutput)
}

type GatewayIngressTlOutput struct{ *pulumi.OutputState }

func (GatewayIngressTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIngressTl)(nil)).Elem()
}

func (o GatewayIngressTlOutput) ToGatewayIngressTlOutput() GatewayIngressTlOutput {
	return o
}

func (o GatewayIngressTlOutput) ToGatewayIngressTlOutputWithContext(ctx context.Context) GatewayIngressTlOutput {
	return o
}

// certificate ID.
func (o GatewayIngressTlOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayIngressTl) string { return v.CertificateId }).(pulumi.StringOutput)
}

// host names.
func (o GatewayIngressTlOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayIngressTl) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// secret name, if you use a certificate, you don't need to fill in this field.
func (o GatewayIngressTlOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIngressTl) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type GatewayIngressTlArrayOutput struct{ *pulumi.OutputState }

func (GatewayIngressTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIngressTl)(nil)).Elem()
}

func (o GatewayIngressTlArrayOutput) ToGatewayIngressTlArrayOutput() GatewayIngressTlArrayOutput {
	return o
}

func (o GatewayIngressTlArrayOutput) ToGatewayIngressTlArrayOutputWithContext(ctx context.Context) GatewayIngressTlArrayOutput {
	return o
}

func (o GatewayIngressTlArrayOutput) Index(i pulumi.IntInput) GatewayIngressTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayIngressTl {
		return vs[0].([]GatewayIngressTl)[vs[1].(int)]
	}).(GatewayIngressTlOutput)
}

type ScaleRuleAutoscaler struct {
	// name.
	AutoscalerName string `pulumi:"autoscalerName"`
	// scaler based on cron configuration.
	CronHorizontalAutoscalers []ScaleRuleAutoscalerCronHorizontalAutoscaler `pulumi:"cronHorizontalAutoscalers"`
	// description.
	Description *string `pulumi:"description"`
	// enable AutoScaler.
	Enabled bool `pulumi:"enabled"`
	// scaler based on metrics.
	HorizontalAutoscalers []ScaleRuleAutoscalerHorizontalAutoscaler `pulumi:"horizontalAutoscalers"`
	// maximal replica number.
	MaxReplicas int `pulumi:"maxReplicas"`
	// minimal replica number.
	MinReplicas int `pulumi:"minReplicas"`
}

// ScaleRuleAutoscalerInput is an input type that accepts ScaleRuleAutoscalerArgs and ScaleRuleAutoscalerOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerInput` via:
//
//	ScaleRuleAutoscalerArgs{...}
type ScaleRuleAutoscalerInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerOutput() ScaleRuleAutoscalerOutput
	ToScaleRuleAutoscalerOutputWithContext(context.Context) ScaleRuleAutoscalerOutput
}

type ScaleRuleAutoscalerArgs struct {
	// name.
	AutoscalerName pulumi.StringInput `pulumi:"autoscalerName"`
	// scaler based on cron configuration.
	CronHorizontalAutoscalers ScaleRuleAutoscalerCronHorizontalAutoscalerArrayInput `pulumi:"cronHorizontalAutoscalers"`
	// description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// enable AutoScaler.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// scaler based on metrics.
	HorizontalAutoscalers ScaleRuleAutoscalerHorizontalAutoscalerArrayInput `pulumi:"horizontalAutoscalers"`
	// maximal replica number.
	MaxReplicas pulumi.IntInput `pulumi:"maxReplicas"`
	// minimal replica number.
	MinReplicas pulumi.IntInput `pulumi:"minReplicas"`
}

func (ScaleRuleAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscaler)(nil)).Elem()
}

func (i ScaleRuleAutoscalerArgs) ToScaleRuleAutoscalerOutput() ScaleRuleAutoscalerOutput {
	return i.ToScaleRuleAutoscalerOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerArgs) ToScaleRuleAutoscalerOutputWithContext(ctx context.Context) ScaleRuleAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerOutput)
}

func (i ScaleRuleAutoscalerArgs) ToScaleRuleAutoscalerPtrOutput() ScaleRuleAutoscalerPtrOutput {
	return i.ToScaleRuleAutoscalerPtrOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerArgs) ToScaleRuleAutoscalerPtrOutputWithContext(ctx context.Context) ScaleRuleAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerOutput).ToScaleRuleAutoscalerPtrOutputWithContext(ctx)
}

// ScaleRuleAutoscalerPtrInput is an input type that accepts ScaleRuleAutoscalerArgs, ScaleRuleAutoscalerPtr and ScaleRuleAutoscalerPtrOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerPtrInput` via:
//
//	        ScaleRuleAutoscalerArgs{...}
//
//	or:
//
//	        nil
type ScaleRuleAutoscalerPtrInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerPtrOutput() ScaleRuleAutoscalerPtrOutput
	ToScaleRuleAutoscalerPtrOutputWithContext(context.Context) ScaleRuleAutoscalerPtrOutput
}

type scaleRuleAutoscalerPtrType ScaleRuleAutoscalerArgs

func ScaleRuleAutoscalerPtr(v *ScaleRuleAutoscalerArgs) ScaleRuleAutoscalerPtrInput {
	return (*scaleRuleAutoscalerPtrType)(v)
}

func (*scaleRuleAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleRuleAutoscaler)(nil)).Elem()
}

func (i *scaleRuleAutoscalerPtrType) ToScaleRuleAutoscalerPtrOutput() ScaleRuleAutoscalerPtrOutput {
	return i.ToScaleRuleAutoscalerPtrOutputWithContext(context.Background())
}

func (i *scaleRuleAutoscalerPtrType) ToScaleRuleAutoscalerPtrOutputWithContext(ctx context.Context) ScaleRuleAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerPtrOutput)
}

type ScaleRuleAutoscalerOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscaler)(nil)).Elem()
}

func (o ScaleRuleAutoscalerOutput) ToScaleRuleAutoscalerOutput() ScaleRuleAutoscalerOutput {
	return o
}

func (o ScaleRuleAutoscalerOutput) ToScaleRuleAutoscalerOutputWithContext(ctx context.Context) ScaleRuleAutoscalerOutput {
	return o
}

func (o ScaleRuleAutoscalerOutput) ToScaleRuleAutoscalerPtrOutput() ScaleRuleAutoscalerPtrOutput {
	return o.ToScaleRuleAutoscalerPtrOutputWithContext(context.Background())
}

func (o ScaleRuleAutoscalerOutput) ToScaleRuleAutoscalerPtrOutputWithContext(ctx context.Context) ScaleRuleAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleRuleAutoscaler) *ScaleRuleAutoscaler {
		return &v
	}).(ScaleRuleAutoscalerPtrOutput)
}

// name.
func (o ScaleRuleAutoscalerOutput) AutoscalerName() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) string { return v.AutoscalerName }).(pulumi.StringOutput)
}

// scaler based on cron configuration.
func (o ScaleRuleAutoscalerOutput) CronHorizontalAutoscalers() ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) []ScaleRuleAutoscalerCronHorizontalAutoscaler {
		return v.CronHorizontalAutoscalers
	}).(ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput)
}

// description.
func (o ScaleRuleAutoscalerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// enable AutoScaler.
func (o ScaleRuleAutoscalerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// scaler based on metrics.
func (o ScaleRuleAutoscalerOutput) HorizontalAutoscalers() ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) []ScaleRuleAutoscalerHorizontalAutoscaler { return v.HorizontalAutoscalers }).(ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput)
}

// maximal replica number.
func (o ScaleRuleAutoscalerOutput) MaxReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) int { return v.MaxReplicas }).(pulumi.IntOutput)
}

// minimal replica number.
func (o ScaleRuleAutoscalerOutput) MinReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscaler) int { return v.MinReplicas }).(pulumi.IntOutput)
}

type ScaleRuleAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleRuleAutoscaler)(nil)).Elem()
}

func (o ScaleRuleAutoscalerPtrOutput) ToScaleRuleAutoscalerPtrOutput() ScaleRuleAutoscalerPtrOutput {
	return o
}

func (o ScaleRuleAutoscalerPtrOutput) ToScaleRuleAutoscalerPtrOutputWithContext(ctx context.Context) ScaleRuleAutoscalerPtrOutput {
	return o
}

func (o ScaleRuleAutoscalerPtrOutput) Elem() ScaleRuleAutoscalerOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) ScaleRuleAutoscaler {
		if v != nil {
			return *v
		}
		var ret ScaleRuleAutoscaler
		return ret
	}).(ScaleRuleAutoscalerOutput)
}

// name.
func (o ScaleRuleAutoscalerPtrOutput) AutoscalerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) *string {
		if v == nil {
			return nil
		}
		return &v.AutoscalerName
	}).(pulumi.StringPtrOutput)
}

// scaler based on cron configuration.
func (o ScaleRuleAutoscalerPtrOutput) CronHorizontalAutoscalers() ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) []ScaleRuleAutoscalerCronHorizontalAutoscaler {
		if v == nil {
			return nil
		}
		return v.CronHorizontalAutoscalers
	}).(ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput)
}

// description.
func (o ScaleRuleAutoscalerPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// enable AutoScaler.
func (o ScaleRuleAutoscalerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// scaler based on metrics.
func (o ScaleRuleAutoscalerPtrOutput) HorizontalAutoscalers() ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) []ScaleRuleAutoscalerHorizontalAutoscaler {
		if v == nil {
			return nil
		}
		return v.HorizontalAutoscalers
	}).(ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput)
}

// maximal replica number.
func (o ScaleRuleAutoscalerPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) *int {
		if v == nil {
			return nil
		}
		return &v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// minimal replica number.
func (o ScaleRuleAutoscalerPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleRuleAutoscaler) *int {
		if v == nil {
			return nil
		}
		return &v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

type ScaleRuleAutoscalerCronHorizontalAutoscaler struct {
	// enable scaler.
	Enabled bool `pulumi:"enabled"`
	// name.
	Name string `pulumi:"name"`
	// period.
	Period string `pulumi:"period"`
	// priority.
	Priority int `pulumi:"priority"`
	// schedule payload.
	Schedules []ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule `pulumi:"schedules"`
}

// ScaleRuleAutoscalerCronHorizontalAutoscalerInput is an input type that accepts ScaleRuleAutoscalerCronHorizontalAutoscalerArgs and ScaleRuleAutoscalerCronHorizontalAutoscalerOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerCronHorizontalAutoscalerInput` via:
//
//	ScaleRuleAutoscalerCronHorizontalAutoscalerArgs{...}
type ScaleRuleAutoscalerCronHorizontalAutoscalerInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerCronHorizontalAutoscalerOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerOutput
	ToScaleRuleAutoscalerCronHorizontalAutoscalerOutputWithContext(context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerOutput
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerArgs struct {
	// enable scaler.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// name.
	Name pulumi.StringInput `pulumi:"name"`
	// period.
	Period pulumi.StringInput `pulumi:"period"`
	// priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// schedule payload.
	Schedules ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayInput `pulumi:"schedules"`
}

func (ScaleRuleAutoscalerCronHorizontalAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscaler)(nil)).Elem()
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerArgs) ToScaleRuleAutoscalerCronHorizontalAutoscalerOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerOutput {
	return i.ToScaleRuleAutoscalerCronHorizontalAutoscalerOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerArgs) ToScaleRuleAutoscalerCronHorizontalAutoscalerOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerCronHorizontalAutoscalerOutput)
}

// ScaleRuleAutoscalerCronHorizontalAutoscalerArrayInput is an input type that accepts ScaleRuleAutoscalerCronHorizontalAutoscalerArray and ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerCronHorizontalAutoscalerArrayInput` via:
//
//	ScaleRuleAutoscalerCronHorizontalAutoscalerArray{ ScaleRuleAutoscalerCronHorizontalAutoscalerArgs{...} }
type ScaleRuleAutoscalerCronHorizontalAutoscalerArrayInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput
	ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutputWithContext(context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerArray []ScaleRuleAutoscalerCronHorizontalAutoscalerInput

func (ScaleRuleAutoscalerCronHorizontalAutoscalerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAutoscalerCronHorizontalAutoscaler)(nil)).Elem()
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerArray) ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput {
	return i.ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerArray) ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput)
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscaler)(nil)).Elem()
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerOutput {
	return o
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerOutput {
	return o
}

// enable scaler.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscaler) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// name.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscaler) string { return v.Name }).(pulumi.StringOutput)
}

// period.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscaler) string { return v.Period }).(pulumi.StringOutput)
}

// priority.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscaler) int { return v.Priority }).(pulumi.IntOutput)
}

// schedule payload.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerOutput) Schedules() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscaler) []ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule {
		return v.Schedules
	}).(ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput)
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAutoscalerCronHorizontalAutoscaler)(nil)).Elem()
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput {
	return o
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput {
	return o
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput) Index(i pulumi.IntInput) ScaleRuleAutoscalerCronHorizontalAutoscalerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAutoscalerCronHorizontalAutoscaler {
		return vs[0].([]ScaleRuleAutoscalerCronHorizontalAutoscaler)[vs[1].(int)]
	}).(ScaleRuleAutoscalerCronHorizontalAutoscalerOutput)
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule struct {
	// start time.
	StartAt string `pulumi:"startAt"`
	// target replica number.
	TargetReplicas int `pulumi:"targetReplicas"`
}

// ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleInput is an input type that accepts ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs and ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleInput` via:
//
//	ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs{...}
type ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput
	ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutputWithContext(context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs struct {
	// start time.
	StartAt pulumi.StringInput `pulumi:"startAt"`
	// target replica number.
	TargetReplicas pulumi.IntInput `pulumi:"targetReplicas"`
}

func (ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule)(nil)).Elem()
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput {
	return i.ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput)
}

// ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayInput is an input type that accepts ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray and ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayInput` via:
//
//	ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray{ ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs{...} }
type ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput
	ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutputWithContext(context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray []ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleInput

func (ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule)(nil)).Elem()
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput {
	return i.ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput)
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule)(nil)).Elem()
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput {
	return o
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput {
	return o
}

// start time.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput) StartAt() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule) string { return v.StartAt }).(pulumi.StringOutput)
}

// target replica number.
func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput) TargetReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule) int { return v.TargetReplicas }).(pulumi.IntOutput)
}

type ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule)(nil)).Elem()
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput() ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput {
	return o
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput) ToScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutputWithContext(ctx context.Context) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput {
	return o
}

func (o ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput) Index(i pulumi.IntInput) ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule {
		return vs[0].([]ScaleRuleAutoscalerCronHorizontalAutoscalerSchedule)[vs[1].(int)]
	}).(ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput)
}

type ScaleRuleAutoscalerHorizontalAutoscaler struct {
	// enable scaler.
	Enabled bool `pulumi:"enabled"`
	// maximal replica number.
	MaxReplicas int `pulumi:"maxReplicas"`
	// metric name.
	Metrics string `pulumi:"metrics"`
	// minimal replica number.
	MinReplicas int `pulumi:"minReplicas"`
	// metric threshold.
	Threshold int `pulumi:"threshold"`
}

// ScaleRuleAutoscalerHorizontalAutoscalerInput is an input type that accepts ScaleRuleAutoscalerHorizontalAutoscalerArgs and ScaleRuleAutoscalerHorizontalAutoscalerOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerHorizontalAutoscalerInput` via:
//
//	ScaleRuleAutoscalerHorizontalAutoscalerArgs{...}
type ScaleRuleAutoscalerHorizontalAutoscalerInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerHorizontalAutoscalerOutput() ScaleRuleAutoscalerHorizontalAutoscalerOutput
	ToScaleRuleAutoscalerHorizontalAutoscalerOutputWithContext(context.Context) ScaleRuleAutoscalerHorizontalAutoscalerOutput
}

type ScaleRuleAutoscalerHorizontalAutoscalerArgs struct {
	// enable scaler.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// maximal replica number.
	MaxReplicas pulumi.IntInput `pulumi:"maxReplicas"`
	// metric name.
	Metrics pulumi.StringInput `pulumi:"metrics"`
	// minimal replica number.
	MinReplicas pulumi.IntInput `pulumi:"minReplicas"`
	// metric threshold.
	Threshold pulumi.IntInput `pulumi:"threshold"`
}

func (ScaleRuleAutoscalerHorizontalAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscalerHorizontalAutoscaler)(nil)).Elem()
}

func (i ScaleRuleAutoscalerHorizontalAutoscalerArgs) ToScaleRuleAutoscalerHorizontalAutoscalerOutput() ScaleRuleAutoscalerHorizontalAutoscalerOutput {
	return i.ToScaleRuleAutoscalerHorizontalAutoscalerOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerHorizontalAutoscalerArgs) ToScaleRuleAutoscalerHorizontalAutoscalerOutputWithContext(ctx context.Context) ScaleRuleAutoscalerHorizontalAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerHorizontalAutoscalerOutput)
}

// ScaleRuleAutoscalerHorizontalAutoscalerArrayInput is an input type that accepts ScaleRuleAutoscalerHorizontalAutoscalerArray and ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput values.
// You can construct a concrete instance of `ScaleRuleAutoscalerHorizontalAutoscalerArrayInput` via:
//
//	ScaleRuleAutoscalerHorizontalAutoscalerArray{ ScaleRuleAutoscalerHorizontalAutoscalerArgs{...} }
type ScaleRuleAutoscalerHorizontalAutoscalerArrayInput interface {
	pulumi.Input

	ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutput() ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput
	ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutputWithContext(context.Context) ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput
}

type ScaleRuleAutoscalerHorizontalAutoscalerArray []ScaleRuleAutoscalerHorizontalAutoscalerInput

func (ScaleRuleAutoscalerHorizontalAutoscalerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAutoscalerHorizontalAutoscaler)(nil)).Elem()
}

func (i ScaleRuleAutoscalerHorizontalAutoscalerArray) ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutput() ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput {
	return i.ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutputWithContext(context.Background())
}

func (i ScaleRuleAutoscalerHorizontalAutoscalerArray) ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutputWithContext(ctx context.Context) ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput)
}

type ScaleRuleAutoscalerHorizontalAutoscalerOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerHorizontalAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAutoscalerHorizontalAutoscaler)(nil)).Elem()
}

func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) ToScaleRuleAutoscalerHorizontalAutoscalerOutput() ScaleRuleAutoscalerHorizontalAutoscalerOutput {
	return o
}

func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) ToScaleRuleAutoscalerHorizontalAutoscalerOutputWithContext(ctx context.Context) ScaleRuleAutoscalerHorizontalAutoscalerOutput {
	return o
}

// enable scaler.
func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerHorizontalAutoscaler) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// maximal replica number.
func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) MaxReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerHorizontalAutoscaler) int { return v.MaxReplicas }).(pulumi.IntOutput)
}

// metric name.
func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) Metrics() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerHorizontalAutoscaler) string { return v.Metrics }).(pulumi.StringOutput)
}

// minimal replica number.
func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) MinReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerHorizontalAutoscaler) int { return v.MinReplicas }).(pulumi.IntOutput)
}

// metric threshold.
func (o ScaleRuleAutoscalerHorizontalAutoscalerOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleRuleAutoscalerHorizontalAutoscaler) int { return v.Threshold }).(pulumi.IntOutput)
}

type ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAutoscalerHorizontalAutoscaler)(nil)).Elem()
}

func (o ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput) ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutput() ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput {
	return o
}

func (o ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput) ToScaleRuleAutoscalerHorizontalAutoscalerArrayOutputWithContext(ctx context.Context) ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput {
	return o
}

func (o ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput) Index(i pulumi.IntInput) ScaleRuleAutoscalerHorizontalAutoscalerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAutoscalerHorizontalAutoscaler {
		return vs[0].([]ScaleRuleAutoscalerHorizontalAutoscaler)[vs[1].(int)]
	}).(ScaleRuleAutoscalerHorizontalAutoscalerOutput)
}

type WorkloadDeployStrategyConf struct {
	// interval between batches.
	BatchInterval *int `pulumi:"batchInterval"`
	// beta batch number.
	BetaBatchNum *int `pulumi:"betaBatchNum"`
	// strategy type, 0 means auto, 1 means manual, 2 means manual with beta batch.
	DeployStrategyType int `pulumi:"deployStrategyType"`
	// force update.
	Force *bool `pulumi:"force"`
	// minimal available instances duration deployment.
	MinAvailable *int `pulumi:"minAvailable"`
	// total batch number.
	TotalBatchCount int `pulumi:"totalBatchCount"`
}

// WorkloadDeployStrategyConfInput is an input type that accepts WorkloadDeployStrategyConfArgs and WorkloadDeployStrategyConfOutput values.
// You can construct a concrete instance of `WorkloadDeployStrategyConfInput` via:
//
//	WorkloadDeployStrategyConfArgs{...}
type WorkloadDeployStrategyConfInput interface {
	pulumi.Input

	ToWorkloadDeployStrategyConfOutput() WorkloadDeployStrategyConfOutput
	ToWorkloadDeployStrategyConfOutputWithContext(context.Context) WorkloadDeployStrategyConfOutput
}

type WorkloadDeployStrategyConfArgs struct {
	// interval between batches.
	BatchInterval pulumi.IntPtrInput `pulumi:"batchInterval"`
	// beta batch number.
	BetaBatchNum pulumi.IntPtrInput `pulumi:"betaBatchNum"`
	// strategy type, 0 means auto, 1 means manual, 2 means manual with beta batch.
	DeployStrategyType pulumi.IntInput `pulumi:"deployStrategyType"`
	// force update.
	Force pulumi.BoolPtrInput `pulumi:"force"`
	// minimal available instances duration deployment.
	MinAvailable pulumi.IntPtrInput `pulumi:"minAvailable"`
	// total batch number.
	TotalBatchCount pulumi.IntInput `pulumi:"totalBatchCount"`
}

func (WorkloadDeployStrategyConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDeployStrategyConf)(nil)).Elem()
}

func (i WorkloadDeployStrategyConfArgs) ToWorkloadDeployStrategyConfOutput() WorkloadDeployStrategyConfOutput {
	return i.ToWorkloadDeployStrategyConfOutputWithContext(context.Background())
}

func (i WorkloadDeployStrategyConfArgs) ToWorkloadDeployStrategyConfOutputWithContext(ctx context.Context) WorkloadDeployStrategyConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDeployStrategyConfOutput)
}

func (i WorkloadDeployStrategyConfArgs) ToWorkloadDeployStrategyConfPtrOutput() WorkloadDeployStrategyConfPtrOutput {
	return i.ToWorkloadDeployStrategyConfPtrOutputWithContext(context.Background())
}

func (i WorkloadDeployStrategyConfArgs) ToWorkloadDeployStrategyConfPtrOutputWithContext(ctx context.Context) WorkloadDeployStrategyConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDeployStrategyConfOutput).ToWorkloadDeployStrategyConfPtrOutputWithContext(ctx)
}

// WorkloadDeployStrategyConfPtrInput is an input type that accepts WorkloadDeployStrategyConfArgs, WorkloadDeployStrategyConfPtr and WorkloadDeployStrategyConfPtrOutput values.
// You can construct a concrete instance of `WorkloadDeployStrategyConfPtrInput` via:
//
//	        WorkloadDeployStrategyConfArgs{...}
//
//	or:
//
//	        nil
type WorkloadDeployStrategyConfPtrInput interface {
	pulumi.Input

	ToWorkloadDeployStrategyConfPtrOutput() WorkloadDeployStrategyConfPtrOutput
	ToWorkloadDeployStrategyConfPtrOutputWithContext(context.Context) WorkloadDeployStrategyConfPtrOutput
}

type workloadDeployStrategyConfPtrType WorkloadDeployStrategyConfArgs

func WorkloadDeployStrategyConfPtr(v *WorkloadDeployStrategyConfArgs) WorkloadDeployStrategyConfPtrInput {
	return (*workloadDeployStrategyConfPtrType)(v)
}

func (*workloadDeployStrategyConfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDeployStrategyConf)(nil)).Elem()
}

func (i *workloadDeployStrategyConfPtrType) ToWorkloadDeployStrategyConfPtrOutput() WorkloadDeployStrategyConfPtrOutput {
	return i.ToWorkloadDeployStrategyConfPtrOutputWithContext(context.Background())
}

func (i *workloadDeployStrategyConfPtrType) ToWorkloadDeployStrategyConfPtrOutputWithContext(ctx context.Context) WorkloadDeployStrategyConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDeployStrategyConfPtrOutput)
}

type WorkloadDeployStrategyConfOutput struct{ *pulumi.OutputState }

func (WorkloadDeployStrategyConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDeployStrategyConf)(nil)).Elem()
}

func (o WorkloadDeployStrategyConfOutput) ToWorkloadDeployStrategyConfOutput() WorkloadDeployStrategyConfOutput {
	return o
}

func (o WorkloadDeployStrategyConfOutput) ToWorkloadDeployStrategyConfOutputWithContext(ctx context.Context) WorkloadDeployStrategyConfOutput {
	return o
}

func (o WorkloadDeployStrategyConfOutput) ToWorkloadDeployStrategyConfPtrOutput() WorkloadDeployStrategyConfPtrOutput {
	return o.ToWorkloadDeployStrategyConfPtrOutputWithContext(context.Background())
}

func (o WorkloadDeployStrategyConfOutput) ToWorkloadDeployStrategyConfPtrOutputWithContext(ctx context.Context) WorkloadDeployStrategyConfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadDeployStrategyConf) *WorkloadDeployStrategyConf {
		return &v
	}).(WorkloadDeployStrategyConfPtrOutput)
}

// interval between batches.
func (o WorkloadDeployStrategyConfOutput) BatchInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadDeployStrategyConf) *int { return v.BatchInterval }).(pulumi.IntPtrOutput)
}

// beta batch number.
func (o WorkloadDeployStrategyConfOutput) BetaBatchNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadDeployStrategyConf) *int { return v.BetaBatchNum }).(pulumi.IntPtrOutput)
}

// strategy type, 0 means auto, 1 means manual, 2 means manual with beta batch.
func (o WorkloadDeployStrategyConfOutput) DeployStrategyType() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadDeployStrategyConf) int { return v.DeployStrategyType }).(pulumi.IntOutput)
}

// force update.
func (o WorkloadDeployStrategyConfOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadDeployStrategyConf) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

// minimal available instances duration deployment.
func (o WorkloadDeployStrategyConfOutput) MinAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadDeployStrategyConf) *int { return v.MinAvailable }).(pulumi.IntPtrOutput)
}

// total batch number.
func (o WorkloadDeployStrategyConfOutput) TotalBatchCount() pulumi.IntOutput {
	return o.ApplyT(func(v WorkloadDeployStrategyConf) int { return v.TotalBatchCount }).(pulumi.IntOutput)
}

type WorkloadDeployStrategyConfPtrOutput struct{ *pulumi.OutputState }

func (WorkloadDeployStrategyConfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDeployStrategyConf)(nil)).Elem()
}

func (o WorkloadDeployStrategyConfPtrOutput) ToWorkloadDeployStrategyConfPtrOutput() WorkloadDeployStrategyConfPtrOutput {
	return o
}

func (o WorkloadDeployStrategyConfPtrOutput) ToWorkloadDeployStrategyConfPtrOutputWithContext(ctx context.Context) WorkloadDeployStrategyConfPtrOutput {
	return o
}

func (o WorkloadDeployStrategyConfPtrOutput) Elem() WorkloadDeployStrategyConfOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) WorkloadDeployStrategyConf {
		if v != nil {
			return *v
		}
		var ret WorkloadDeployStrategyConf
		return ret
	}).(WorkloadDeployStrategyConfOutput)
}

// interval between batches.
func (o WorkloadDeployStrategyConfPtrOutput) BatchInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) *int {
		if v == nil {
			return nil
		}
		return v.BatchInterval
	}).(pulumi.IntPtrOutput)
}

// beta batch number.
func (o WorkloadDeployStrategyConfPtrOutput) BetaBatchNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) *int {
		if v == nil {
			return nil
		}
		return v.BetaBatchNum
	}).(pulumi.IntPtrOutput)
}

// strategy type, 0 means auto, 1 means manual, 2 means manual with beta batch.
func (o WorkloadDeployStrategyConfPtrOutput) DeployStrategyType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) *int {
		if v == nil {
			return nil
		}
		return &v.DeployStrategyType
	}).(pulumi.IntPtrOutput)
}

// force update.
func (o WorkloadDeployStrategyConfPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// minimal available instances duration deployment.
func (o WorkloadDeployStrategyConfPtrOutput) MinAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) *int {
		if v == nil {
			return nil
		}
		return v.MinAvailable
	}).(pulumi.IntPtrOutput)
}

// total batch number.
func (o WorkloadDeployStrategyConfPtrOutput) TotalBatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadDeployStrategyConf) *int {
		if v == nil {
			return nil
		}
		return &v.TotalBatchCount
	}).(pulumi.IntPtrOutput)
}

type WorkloadEnvConf struct {
	// referenced config name when type=referenced.
	Config *string `pulumi:"config"`
	// env key.
	Key string `pulumi:"key"`
	// referenced secret name when type=referenced.
	Secret *string `pulumi:"secret"`
	// env type, support default, referenced.
	Type *string `pulumi:"type"`
	// env value.
	Value string `pulumi:"value"`
}

// WorkloadEnvConfInput is an input type that accepts WorkloadEnvConfArgs and WorkloadEnvConfOutput values.
// You can construct a concrete instance of `WorkloadEnvConfInput` via:
//
//	WorkloadEnvConfArgs{...}
type WorkloadEnvConfInput interface {
	pulumi.Input

	ToWorkloadEnvConfOutput() WorkloadEnvConfOutput
	ToWorkloadEnvConfOutputWithContext(context.Context) WorkloadEnvConfOutput
}

type WorkloadEnvConfArgs struct {
	// referenced config name when type=referenced.
	Config pulumi.StringPtrInput `pulumi:"config"`
	// env key.
	Key pulumi.StringInput `pulumi:"key"`
	// referenced secret name when type=referenced.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// env type, support default, referenced.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// env value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkloadEnvConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEnvConf)(nil)).Elem()
}

func (i WorkloadEnvConfArgs) ToWorkloadEnvConfOutput() WorkloadEnvConfOutput {
	return i.ToWorkloadEnvConfOutputWithContext(context.Background())
}

func (i WorkloadEnvConfArgs) ToWorkloadEnvConfOutputWithContext(ctx context.Context) WorkloadEnvConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEnvConfOutput)
}

// WorkloadEnvConfArrayInput is an input type that accepts WorkloadEnvConfArray and WorkloadEnvConfArrayOutput values.
// You can construct a concrete instance of `WorkloadEnvConfArrayInput` via:
//
//	WorkloadEnvConfArray{ WorkloadEnvConfArgs{...} }
type WorkloadEnvConfArrayInput interface {
	pulumi.Input

	ToWorkloadEnvConfArrayOutput() WorkloadEnvConfArrayOutput
	ToWorkloadEnvConfArrayOutputWithContext(context.Context) WorkloadEnvConfArrayOutput
}

type WorkloadEnvConfArray []WorkloadEnvConfInput

func (WorkloadEnvConfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadEnvConf)(nil)).Elem()
}

func (i WorkloadEnvConfArray) ToWorkloadEnvConfArrayOutput() WorkloadEnvConfArrayOutput {
	return i.ToWorkloadEnvConfArrayOutputWithContext(context.Background())
}

func (i WorkloadEnvConfArray) ToWorkloadEnvConfArrayOutputWithContext(ctx context.Context) WorkloadEnvConfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEnvConfArrayOutput)
}

type WorkloadEnvConfOutput struct{ *pulumi.OutputState }

func (WorkloadEnvConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEnvConf)(nil)).Elem()
}

func (o WorkloadEnvConfOutput) ToWorkloadEnvConfOutput() WorkloadEnvConfOutput {
	return o
}

func (o WorkloadEnvConfOutput) ToWorkloadEnvConfOutputWithContext(ctx context.Context) WorkloadEnvConfOutput {
	return o
}

// referenced config name when type=referenced.
func (o WorkloadEnvConfOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEnvConf) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// env key.
func (o WorkloadEnvConfOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadEnvConf) string { return v.Key }).(pulumi.StringOutput)
}

// referenced secret name when type=referenced.
func (o WorkloadEnvConfOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEnvConf) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// env type, support default, referenced.
func (o WorkloadEnvConfOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEnvConf) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// env value.
func (o WorkloadEnvConfOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadEnvConf) string { return v.Value }).(pulumi.StringOutput)
}

type WorkloadEnvConfArrayOutput struct{ *pulumi.OutputState }

func (WorkloadEnvConfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadEnvConf)(nil)).Elem()
}

func (o WorkloadEnvConfArrayOutput) ToWorkloadEnvConfArrayOutput() WorkloadEnvConfArrayOutput {
	return o
}

func (o WorkloadEnvConfArrayOutput) ToWorkloadEnvConfArrayOutputWithContext(ctx context.Context) WorkloadEnvConfArrayOutput {
	return o
}

func (o WorkloadEnvConfArrayOutput) Index(i pulumi.IntInput) WorkloadEnvConfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadEnvConf {
		return vs[0].([]WorkloadEnvConf)[vs[1].(int)]
	}).(WorkloadEnvConfOutput)
}

type WorkloadLiveness struct {
	// script.
	Exec *string `pulumi:"exec"`
	// initial delay seconds for liveness check.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// path.
	Path *string `pulumi:"path"`
	// period seconds for liveness check.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// liveness check port.
	Port *int `pulumi:"port"`
	// protocol.
	Protocol *string `pulumi:"protocol"`
	// timeout seconds for liveness check.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
	// check type, support HttpGet, TcpSocket and Exec.
	Type string `pulumi:"type"`
}

// WorkloadLivenessInput is an input type that accepts WorkloadLivenessArgs and WorkloadLivenessOutput values.
// You can construct a concrete instance of `WorkloadLivenessInput` via:
//
//	WorkloadLivenessArgs{...}
type WorkloadLivenessInput interface {
	pulumi.Input

	ToWorkloadLivenessOutput() WorkloadLivenessOutput
	ToWorkloadLivenessOutputWithContext(context.Context) WorkloadLivenessOutput
}

type WorkloadLivenessArgs struct {
	// script.
	Exec pulumi.StringPtrInput `pulumi:"exec"`
	// initial delay seconds for liveness check.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// period seconds for liveness check.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// liveness check port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// timeout seconds for liveness check.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
	// check type, support HttpGet, TcpSocket and Exec.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadLivenessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLiveness)(nil)).Elem()
}

func (i WorkloadLivenessArgs) ToWorkloadLivenessOutput() WorkloadLivenessOutput {
	return i.ToWorkloadLivenessOutputWithContext(context.Background())
}

func (i WorkloadLivenessArgs) ToWorkloadLivenessOutputWithContext(ctx context.Context) WorkloadLivenessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLivenessOutput)
}

func (i WorkloadLivenessArgs) ToWorkloadLivenessPtrOutput() WorkloadLivenessPtrOutput {
	return i.ToWorkloadLivenessPtrOutputWithContext(context.Background())
}

func (i WorkloadLivenessArgs) ToWorkloadLivenessPtrOutputWithContext(ctx context.Context) WorkloadLivenessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLivenessOutput).ToWorkloadLivenessPtrOutputWithContext(ctx)
}

// WorkloadLivenessPtrInput is an input type that accepts WorkloadLivenessArgs, WorkloadLivenessPtr and WorkloadLivenessPtrOutput values.
// You can construct a concrete instance of `WorkloadLivenessPtrInput` via:
//
//	        WorkloadLivenessArgs{...}
//
//	or:
//
//	        nil
type WorkloadLivenessPtrInput interface {
	pulumi.Input

	ToWorkloadLivenessPtrOutput() WorkloadLivenessPtrOutput
	ToWorkloadLivenessPtrOutputWithContext(context.Context) WorkloadLivenessPtrOutput
}

type workloadLivenessPtrType WorkloadLivenessArgs

func WorkloadLivenessPtr(v *WorkloadLivenessArgs) WorkloadLivenessPtrInput {
	return (*workloadLivenessPtrType)(v)
}

func (*workloadLivenessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLiveness)(nil)).Elem()
}

func (i *workloadLivenessPtrType) ToWorkloadLivenessPtrOutput() WorkloadLivenessPtrOutput {
	return i.ToWorkloadLivenessPtrOutputWithContext(context.Background())
}

func (i *workloadLivenessPtrType) ToWorkloadLivenessPtrOutputWithContext(ctx context.Context) WorkloadLivenessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadLivenessPtrOutput)
}

type WorkloadLivenessOutput struct{ *pulumi.OutputState }

func (WorkloadLivenessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadLiveness)(nil)).Elem()
}

func (o WorkloadLivenessOutput) ToWorkloadLivenessOutput() WorkloadLivenessOutput {
	return o
}

func (o WorkloadLivenessOutput) ToWorkloadLivenessOutputWithContext(ctx context.Context) WorkloadLivenessOutput {
	return o
}

func (o WorkloadLivenessOutput) ToWorkloadLivenessPtrOutput() WorkloadLivenessPtrOutput {
	return o.ToWorkloadLivenessPtrOutputWithContext(context.Background())
}

func (o WorkloadLivenessOutput) ToWorkloadLivenessPtrOutputWithContext(ctx context.Context) WorkloadLivenessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadLiveness) *WorkloadLiveness {
		return &v
	}).(WorkloadLivenessPtrOutput)
}

// script.
func (o WorkloadLivenessOutput) Exec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *string { return v.Exec }).(pulumi.StringPtrOutput)
}

// initial delay seconds for liveness check.
func (o WorkloadLivenessOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// path.
func (o WorkloadLivenessOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// period seconds for liveness check.
func (o WorkloadLivenessOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// liveness check port.
func (o WorkloadLivenessOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// protocol.
func (o WorkloadLivenessOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// timeout seconds for liveness check.
func (o WorkloadLivenessOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadLiveness) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

// check type, support HttpGet, TcpSocket and Exec.
func (o WorkloadLivenessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadLiveness) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadLivenessPtrOutput struct{ *pulumi.OutputState }

func (WorkloadLivenessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadLiveness)(nil)).Elem()
}

func (o WorkloadLivenessPtrOutput) ToWorkloadLivenessPtrOutput() WorkloadLivenessPtrOutput {
	return o
}

func (o WorkloadLivenessPtrOutput) ToWorkloadLivenessPtrOutputWithContext(ctx context.Context) WorkloadLivenessPtrOutput {
	return o
}

func (o WorkloadLivenessPtrOutput) Elem() WorkloadLivenessOutput {
	return o.ApplyT(func(v *WorkloadLiveness) WorkloadLiveness {
		if v != nil {
			return *v
		}
		var ret WorkloadLiveness
		return ret
	}).(WorkloadLivenessOutput)
}

// script.
func (o WorkloadLivenessPtrOutput) Exec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *string {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(pulumi.StringPtrOutput)
}

// initial delay seconds for liveness check.
func (o WorkloadLivenessPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// path.
func (o WorkloadLivenessPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// period seconds for liveness check.
func (o WorkloadLivenessPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// liveness check port.
func (o WorkloadLivenessPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// protocol.
func (o WorkloadLivenessPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// timeout seconds for liveness check.
func (o WorkloadLivenessPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// check type, support HttpGet, TcpSocket and Exec.
func (o WorkloadLivenessPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadLiveness) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadReadiness struct {
	// script.
	Exec *string `pulumi:"exec"`
	// initial delay seconds for readiness check.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// path.
	Path *string `pulumi:"path"`
	// period seconds for readiness check.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// readiness check port.
	Port *int `pulumi:"port"`
	// protocol.
	Protocol *string `pulumi:"protocol"`
	// timeout seconds for readiness check.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
	// check type, support HttpGet, TcpSocket and Exec.
	Type string `pulumi:"type"`
}

// WorkloadReadinessInput is an input type that accepts WorkloadReadinessArgs and WorkloadReadinessOutput values.
// You can construct a concrete instance of `WorkloadReadinessInput` via:
//
//	WorkloadReadinessArgs{...}
type WorkloadReadinessInput interface {
	pulumi.Input

	ToWorkloadReadinessOutput() WorkloadReadinessOutput
	ToWorkloadReadinessOutputWithContext(context.Context) WorkloadReadinessOutput
}

type WorkloadReadinessArgs struct {
	// script.
	Exec pulumi.StringPtrInput `pulumi:"exec"`
	// initial delay seconds for readiness check.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// period seconds for readiness check.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// readiness check port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// timeout seconds for readiness check.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
	// check type, support HttpGet, TcpSocket and Exec.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadReadinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadReadiness)(nil)).Elem()
}

func (i WorkloadReadinessArgs) ToWorkloadReadinessOutput() WorkloadReadinessOutput {
	return i.ToWorkloadReadinessOutputWithContext(context.Background())
}

func (i WorkloadReadinessArgs) ToWorkloadReadinessOutputWithContext(ctx context.Context) WorkloadReadinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadReadinessOutput)
}

func (i WorkloadReadinessArgs) ToWorkloadReadinessPtrOutput() WorkloadReadinessPtrOutput {
	return i.ToWorkloadReadinessPtrOutputWithContext(context.Background())
}

func (i WorkloadReadinessArgs) ToWorkloadReadinessPtrOutputWithContext(ctx context.Context) WorkloadReadinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadReadinessOutput).ToWorkloadReadinessPtrOutputWithContext(ctx)
}

// WorkloadReadinessPtrInput is an input type that accepts WorkloadReadinessArgs, WorkloadReadinessPtr and WorkloadReadinessPtrOutput values.
// You can construct a concrete instance of `WorkloadReadinessPtrInput` via:
//
//	        WorkloadReadinessArgs{...}
//
//	or:
//
//	        nil
type WorkloadReadinessPtrInput interface {
	pulumi.Input

	ToWorkloadReadinessPtrOutput() WorkloadReadinessPtrOutput
	ToWorkloadReadinessPtrOutputWithContext(context.Context) WorkloadReadinessPtrOutput
}

type workloadReadinessPtrType WorkloadReadinessArgs

func WorkloadReadinessPtr(v *WorkloadReadinessArgs) WorkloadReadinessPtrInput {
	return (*workloadReadinessPtrType)(v)
}

func (*workloadReadinessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadReadiness)(nil)).Elem()
}

func (i *workloadReadinessPtrType) ToWorkloadReadinessPtrOutput() WorkloadReadinessPtrOutput {
	return i.ToWorkloadReadinessPtrOutputWithContext(context.Background())
}

func (i *workloadReadinessPtrType) ToWorkloadReadinessPtrOutputWithContext(ctx context.Context) WorkloadReadinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadReadinessPtrOutput)
}

type WorkloadReadinessOutput struct{ *pulumi.OutputState }

func (WorkloadReadinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadReadiness)(nil)).Elem()
}

func (o WorkloadReadinessOutput) ToWorkloadReadinessOutput() WorkloadReadinessOutput {
	return o
}

func (o WorkloadReadinessOutput) ToWorkloadReadinessOutputWithContext(ctx context.Context) WorkloadReadinessOutput {
	return o
}

func (o WorkloadReadinessOutput) ToWorkloadReadinessPtrOutput() WorkloadReadinessPtrOutput {
	return o.ToWorkloadReadinessPtrOutputWithContext(context.Background())
}

func (o WorkloadReadinessOutput) ToWorkloadReadinessPtrOutputWithContext(ctx context.Context) WorkloadReadinessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadReadiness) *WorkloadReadiness {
		return &v
	}).(WorkloadReadinessPtrOutput)
}

// script.
func (o WorkloadReadinessOutput) Exec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *string { return v.Exec }).(pulumi.StringPtrOutput)
}

// initial delay seconds for readiness check.
func (o WorkloadReadinessOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// path.
func (o WorkloadReadinessOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// period seconds for readiness check.
func (o WorkloadReadinessOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// readiness check port.
func (o WorkloadReadinessOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// protocol.
func (o WorkloadReadinessOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// timeout seconds for readiness check.
func (o WorkloadReadinessOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadReadiness) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

// check type, support HttpGet, TcpSocket and Exec.
func (o WorkloadReadinessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadReadiness) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadReadinessPtrOutput struct{ *pulumi.OutputState }

func (WorkloadReadinessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadReadiness)(nil)).Elem()
}

func (o WorkloadReadinessPtrOutput) ToWorkloadReadinessPtrOutput() WorkloadReadinessPtrOutput {
	return o
}

func (o WorkloadReadinessPtrOutput) ToWorkloadReadinessPtrOutputWithContext(ctx context.Context) WorkloadReadinessPtrOutput {
	return o
}

func (o WorkloadReadinessPtrOutput) Elem() WorkloadReadinessOutput {
	return o.ApplyT(func(v *WorkloadReadiness) WorkloadReadiness {
		if v != nil {
			return *v
		}
		var ret WorkloadReadiness
		return ret
	}).(WorkloadReadinessOutput)
}

// script.
func (o WorkloadReadinessPtrOutput) Exec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *string {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(pulumi.StringPtrOutput)
}

// initial delay seconds for readiness check.
func (o WorkloadReadinessPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// path.
func (o WorkloadReadinessPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// period seconds for readiness check.
func (o WorkloadReadinessPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// readiness check port.
func (o WorkloadReadinessPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// protocol.
func (o WorkloadReadinessPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// timeout seconds for readiness check.
func (o WorkloadReadinessPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// check type, support HttpGet, TcpSocket and Exec.
func (o WorkloadReadinessPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadReadiness) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadStartupProbe struct {
	// script.
	Exec *string `pulumi:"exec"`
	// initial delay seconds for startup check.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// path.
	Path *string `pulumi:"path"`
	// period seconds for startup check.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// startup check port.
	Port *int `pulumi:"port"`
	// protocol.
	Protocol *string `pulumi:"protocol"`
	// timeout seconds for startup check.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
	// check type, support HttpGet, TcpSocket and Exec.
	Type string `pulumi:"type"`
}

// WorkloadStartupProbeInput is an input type that accepts WorkloadStartupProbeArgs and WorkloadStartupProbeOutput values.
// You can construct a concrete instance of `WorkloadStartupProbeInput` via:
//
//	WorkloadStartupProbeArgs{...}
type WorkloadStartupProbeInput interface {
	pulumi.Input

	ToWorkloadStartupProbeOutput() WorkloadStartupProbeOutput
	ToWorkloadStartupProbeOutputWithContext(context.Context) WorkloadStartupProbeOutput
}

type WorkloadStartupProbeArgs struct {
	// script.
	Exec pulumi.StringPtrInput `pulumi:"exec"`
	// initial delay seconds for startup check.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// period seconds for startup check.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// startup check port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// timeout seconds for startup check.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
	// check type, support HttpGet, TcpSocket and Exec.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadStartupProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStartupProbe)(nil)).Elem()
}

func (i WorkloadStartupProbeArgs) ToWorkloadStartupProbeOutput() WorkloadStartupProbeOutput {
	return i.ToWorkloadStartupProbeOutputWithContext(context.Background())
}

func (i WorkloadStartupProbeArgs) ToWorkloadStartupProbeOutputWithContext(ctx context.Context) WorkloadStartupProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStartupProbeOutput)
}

func (i WorkloadStartupProbeArgs) ToWorkloadStartupProbePtrOutput() WorkloadStartupProbePtrOutput {
	return i.ToWorkloadStartupProbePtrOutputWithContext(context.Background())
}

func (i WorkloadStartupProbeArgs) ToWorkloadStartupProbePtrOutputWithContext(ctx context.Context) WorkloadStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStartupProbeOutput).ToWorkloadStartupProbePtrOutputWithContext(ctx)
}

// WorkloadStartupProbePtrInput is an input type that accepts WorkloadStartupProbeArgs, WorkloadStartupProbePtr and WorkloadStartupProbePtrOutput values.
// You can construct a concrete instance of `WorkloadStartupProbePtrInput` via:
//
//	        WorkloadStartupProbeArgs{...}
//
//	or:
//
//	        nil
type WorkloadStartupProbePtrInput interface {
	pulumi.Input

	ToWorkloadStartupProbePtrOutput() WorkloadStartupProbePtrOutput
	ToWorkloadStartupProbePtrOutputWithContext(context.Context) WorkloadStartupProbePtrOutput
}

type workloadStartupProbePtrType WorkloadStartupProbeArgs

func WorkloadStartupProbePtr(v *WorkloadStartupProbeArgs) WorkloadStartupProbePtrInput {
	return (*workloadStartupProbePtrType)(v)
}

func (*workloadStartupProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadStartupProbe)(nil)).Elem()
}

func (i *workloadStartupProbePtrType) ToWorkloadStartupProbePtrOutput() WorkloadStartupProbePtrOutput {
	return i.ToWorkloadStartupProbePtrOutputWithContext(context.Background())
}

func (i *workloadStartupProbePtrType) ToWorkloadStartupProbePtrOutputWithContext(ctx context.Context) WorkloadStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStartupProbePtrOutput)
}

type WorkloadStartupProbeOutput struct{ *pulumi.OutputState }

func (WorkloadStartupProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStartupProbe)(nil)).Elem()
}

func (o WorkloadStartupProbeOutput) ToWorkloadStartupProbeOutput() WorkloadStartupProbeOutput {
	return o
}

func (o WorkloadStartupProbeOutput) ToWorkloadStartupProbeOutputWithContext(ctx context.Context) WorkloadStartupProbeOutput {
	return o
}

func (o WorkloadStartupProbeOutput) ToWorkloadStartupProbePtrOutput() WorkloadStartupProbePtrOutput {
	return o.ToWorkloadStartupProbePtrOutputWithContext(context.Background())
}

func (o WorkloadStartupProbeOutput) ToWorkloadStartupProbePtrOutputWithContext(ctx context.Context) WorkloadStartupProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadStartupProbe) *WorkloadStartupProbe {
		return &v
	}).(WorkloadStartupProbePtrOutput)
}

// script.
func (o WorkloadStartupProbeOutput) Exec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *string { return v.Exec }).(pulumi.StringPtrOutput)
}

// initial delay seconds for startup check.
func (o WorkloadStartupProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// path.
func (o WorkloadStartupProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// period seconds for startup check.
func (o WorkloadStartupProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// startup check port.
func (o WorkloadStartupProbeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// protocol.
func (o WorkloadStartupProbeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// timeout seconds for startup check.
func (o WorkloadStartupProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

// check type, support HttpGet, TcpSocket and Exec.
func (o WorkloadStartupProbeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadStartupProbe) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadStartupProbePtrOutput struct{ *pulumi.OutputState }

func (WorkloadStartupProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadStartupProbe)(nil)).Elem()
}

func (o WorkloadStartupProbePtrOutput) ToWorkloadStartupProbePtrOutput() WorkloadStartupProbePtrOutput {
	return o
}

func (o WorkloadStartupProbePtrOutput) ToWorkloadStartupProbePtrOutputWithContext(ctx context.Context) WorkloadStartupProbePtrOutput {
	return o
}

func (o WorkloadStartupProbePtrOutput) Elem() WorkloadStartupProbeOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) WorkloadStartupProbe {
		if v != nil {
			return *v
		}
		var ret WorkloadStartupProbe
		return ret
	}).(WorkloadStartupProbeOutput)
}

// script.
func (o WorkloadStartupProbePtrOutput) Exec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *string {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(pulumi.StringPtrOutput)
}

// initial delay seconds for startup check.
func (o WorkloadStartupProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// path.
func (o WorkloadStartupProbePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// period seconds for startup check.
func (o WorkloadStartupProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// startup check port.
func (o WorkloadStartupProbePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// protocol.
func (o WorkloadStartupProbePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// timeout seconds for startup check.
func (o WorkloadStartupProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// check type, support HttpGet, TcpSocket and Exec.
func (o WorkloadStartupProbePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadStartupProbe) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadStorageConf struct {
	// volume ip.
	StorageVolIp string `pulumi:"storageVolIp"`
	// volume name.
	StorageVolName string `pulumi:"storageVolName"`
	// volume path.
	StorageVolPath string `pulumi:"storageVolPath"`
}

// WorkloadStorageConfInput is an input type that accepts WorkloadStorageConfArgs and WorkloadStorageConfOutput values.
// You can construct a concrete instance of `WorkloadStorageConfInput` via:
//
//	WorkloadStorageConfArgs{...}
type WorkloadStorageConfInput interface {
	pulumi.Input

	ToWorkloadStorageConfOutput() WorkloadStorageConfOutput
	ToWorkloadStorageConfOutputWithContext(context.Context) WorkloadStorageConfOutput
}

type WorkloadStorageConfArgs struct {
	// volume ip.
	StorageVolIp pulumi.StringInput `pulumi:"storageVolIp"`
	// volume name.
	StorageVolName pulumi.StringInput `pulumi:"storageVolName"`
	// volume path.
	StorageVolPath pulumi.StringInput `pulumi:"storageVolPath"`
}

func (WorkloadStorageConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStorageConf)(nil)).Elem()
}

func (i WorkloadStorageConfArgs) ToWorkloadStorageConfOutput() WorkloadStorageConfOutput {
	return i.ToWorkloadStorageConfOutputWithContext(context.Background())
}

func (i WorkloadStorageConfArgs) ToWorkloadStorageConfOutputWithContext(ctx context.Context) WorkloadStorageConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStorageConfOutput)
}

// WorkloadStorageConfArrayInput is an input type that accepts WorkloadStorageConfArray and WorkloadStorageConfArrayOutput values.
// You can construct a concrete instance of `WorkloadStorageConfArrayInput` via:
//
//	WorkloadStorageConfArray{ WorkloadStorageConfArgs{...} }
type WorkloadStorageConfArrayInput interface {
	pulumi.Input

	ToWorkloadStorageConfArrayOutput() WorkloadStorageConfArrayOutput
	ToWorkloadStorageConfArrayOutputWithContext(context.Context) WorkloadStorageConfArrayOutput
}

type WorkloadStorageConfArray []WorkloadStorageConfInput

func (WorkloadStorageConfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStorageConf)(nil)).Elem()
}

func (i WorkloadStorageConfArray) ToWorkloadStorageConfArrayOutput() WorkloadStorageConfArrayOutput {
	return i.ToWorkloadStorageConfArrayOutputWithContext(context.Background())
}

func (i WorkloadStorageConfArray) ToWorkloadStorageConfArrayOutputWithContext(ctx context.Context) WorkloadStorageConfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStorageConfArrayOutput)
}

type WorkloadStorageConfOutput struct{ *pulumi.OutputState }

func (WorkloadStorageConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStorageConf)(nil)).Elem()
}

func (o WorkloadStorageConfOutput) ToWorkloadStorageConfOutput() WorkloadStorageConfOutput {
	return o
}

func (o WorkloadStorageConfOutput) ToWorkloadStorageConfOutputWithContext(ctx context.Context) WorkloadStorageConfOutput {
	return o
}

// volume ip.
func (o WorkloadStorageConfOutput) StorageVolIp() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadStorageConf) string { return v.StorageVolIp }).(pulumi.StringOutput)
}

// volume name.
func (o WorkloadStorageConfOutput) StorageVolName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadStorageConf) string { return v.StorageVolName }).(pulumi.StringOutput)
}

// volume path.
func (o WorkloadStorageConfOutput) StorageVolPath() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadStorageConf) string { return v.StorageVolPath }).(pulumi.StringOutput)
}

type WorkloadStorageConfArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStorageConfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStorageConf)(nil)).Elem()
}

func (o WorkloadStorageConfArrayOutput) ToWorkloadStorageConfArrayOutput() WorkloadStorageConfArrayOutput {
	return o
}

func (o WorkloadStorageConfArrayOutput) ToWorkloadStorageConfArrayOutputWithContext(ctx context.Context) WorkloadStorageConfArrayOutput {
	return o
}

func (o WorkloadStorageConfArrayOutput) Index(i pulumi.IntInput) WorkloadStorageConfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStorageConf {
		return vs[0].([]WorkloadStorageConf)[vs[1].(int)]
	}).(WorkloadStorageConfOutput)
}

type WorkloadStorageMountConf struct {
	// mount path.
	MountPath string `pulumi:"mountPath"`
	// volume name.
	VolumeName string `pulumi:"volumeName"`
}

// WorkloadStorageMountConfInput is an input type that accepts WorkloadStorageMountConfArgs and WorkloadStorageMountConfOutput values.
// You can construct a concrete instance of `WorkloadStorageMountConfInput` via:
//
//	WorkloadStorageMountConfArgs{...}
type WorkloadStorageMountConfInput interface {
	pulumi.Input

	ToWorkloadStorageMountConfOutput() WorkloadStorageMountConfOutput
	ToWorkloadStorageMountConfOutputWithContext(context.Context) WorkloadStorageMountConfOutput
}

type WorkloadStorageMountConfArgs struct {
	// mount path.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// volume name.
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (WorkloadStorageMountConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStorageMountConf)(nil)).Elem()
}

func (i WorkloadStorageMountConfArgs) ToWorkloadStorageMountConfOutput() WorkloadStorageMountConfOutput {
	return i.ToWorkloadStorageMountConfOutputWithContext(context.Background())
}

func (i WorkloadStorageMountConfArgs) ToWorkloadStorageMountConfOutputWithContext(ctx context.Context) WorkloadStorageMountConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStorageMountConfOutput)
}

// WorkloadStorageMountConfArrayInput is an input type that accepts WorkloadStorageMountConfArray and WorkloadStorageMountConfArrayOutput values.
// You can construct a concrete instance of `WorkloadStorageMountConfArrayInput` via:
//
//	WorkloadStorageMountConfArray{ WorkloadStorageMountConfArgs{...} }
type WorkloadStorageMountConfArrayInput interface {
	pulumi.Input

	ToWorkloadStorageMountConfArrayOutput() WorkloadStorageMountConfArrayOutput
	ToWorkloadStorageMountConfArrayOutputWithContext(context.Context) WorkloadStorageMountConfArrayOutput
}

type WorkloadStorageMountConfArray []WorkloadStorageMountConfInput

func (WorkloadStorageMountConfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStorageMountConf)(nil)).Elem()
}

func (i WorkloadStorageMountConfArray) ToWorkloadStorageMountConfArrayOutput() WorkloadStorageMountConfArrayOutput {
	return i.ToWorkloadStorageMountConfArrayOutputWithContext(context.Background())
}

func (i WorkloadStorageMountConfArray) ToWorkloadStorageMountConfArrayOutputWithContext(ctx context.Context) WorkloadStorageMountConfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadStorageMountConfArrayOutput)
}

type WorkloadStorageMountConfOutput struct{ *pulumi.OutputState }

func (WorkloadStorageMountConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadStorageMountConf)(nil)).Elem()
}

func (o WorkloadStorageMountConfOutput) ToWorkloadStorageMountConfOutput() WorkloadStorageMountConfOutput {
	return o
}

func (o WorkloadStorageMountConfOutput) ToWorkloadStorageMountConfOutputWithContext(ctx context.Context) WorkloadStorageMountConfOutput {
	return o
}

// mount path.
func (o WorkloadStorageMountConfOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadStorageMountConf) string { return v.MountPath }).(pulumi.StringOutput)
}

// volume name.
func (o WorkloadStorageMountConfOutput) VolumeName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadStorageMountConf) string { return v.VolumeName }).(pulumi.StringOutput)
}

type WorkloadStorageMountConfArrayOutput struct{ *pulumi.OutputState }

func (WorkloadStorageMountConfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadStorageMountConf)(nil)).Elem()
}

func (o WorkloadStorageMountConfArrayOutput) ToWorkloadStorageMountConfArrayOutput() WorkloadStorageMountConfArrayOutput {
	return o
}

func (o WorkloadStorageMountConfArrayOutput) ToWorkloadStorageMountConfArrayOutputWithContext(ctx context.Context) WorkloadStorageMountConfArrayOutput {
	return o
}

func (o WorkloadStorageMountConfArrayOutput) Index(i pulumi.IntInput) WorkloadStorageMountConfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadStorageMountConf {
		return vs[0].([]WorkloadStorageMountConf)[vs[1].(int)]
	}).(WorkloadStorageMountConfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppConfigConfigDataInput)(nil)).Elem(), AppConfigConfigDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConfigConfigDataArrayInput)(nil)).Elem(), AppConfigConfigDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationServiceServiceInput)(nil)).Elem(), ApplicationServiceServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationServiceServicePtrInput)(nil)).Elem(), ApplicationServiceServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationServiceServicePortMappingItemListInput)(nil)).Elem(), ApplicationServiceServicePortMappingItemListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationServiceServicePortMappingItemListArrayInput)(nil)).Elem(), ApplicationServiceServicePortMappingItemListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressInput)(nil)).Elem(), GatewayIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressPtrInput)(nil)).Elem(), GatewayIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressRuleInput)(nil)).Elem(), GatewayIngressRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressRuleArrayInput)(nil)).Elem(), GatewayIngressRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressRuleHttpInput)(nil)).Elem(), GatewayIngressRuleHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressRuleHttpPathInput)(nil)).Elem(), GatewayIngressRuleHttpPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressRuleHttpPathArrayInput)(nil)).Elem(), GatewayIngressRuleHttpPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressRuleHttpPathBackendInput)(nil)).Elem(), GatewayIngressRuleHttpPathBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressTlInput)(nil)).Elem(), GatewayIngressTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIngressTlArrayInput)(nil)).Elem(), GatewayIngressTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerInput)(nil)).Elem(), ScaleRuleAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerPtrInput)(nil)).Elem(), ScaleRuleAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscalerInput)(nil)).Elem(), ScaleRuleAutoscalerCronHorizontalAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscalerArrayInput)(nil)).Elem(), ScaleRuleAutoscalerCronHorizontalAutoscalerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleInput)(nil)).Elem(), ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayInput)(nil)).Elem(), ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerHorizontalAutoscalerInput)(nil)).Elem(), ScaleRuleAutoscalerHorizontalAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleRuleAutoscalerHorizontalAutoscalerArrayInput)(nil)).Elem(), ScaleRuleAutoscalerHorizontalAutoscalerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadDeployStrategyConfInput)(nil)).Elem(), WorkloadDeployStrategyConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadDeployStrategyConfPtrInput)(nil)).Elem(), WorkloadDeployStrategyConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEnvConfInput)(nil)).Elem(), WorkloadEnvConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEnvConfArrayInput)(nil)).Elem(), WorkloadEnvConfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLivenessInput)(nil)).Elem(), WorkloadLivenessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadLivenessPtrInput)(nil)).Elem(), WorkloadLivenessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadReadinessInput)(nil)).Elem(), WorkloadReadinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadReadinessPtrInput)(nil)).Elem(), WorkloadReadinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStartupProbeInput)(nil)).Elem(), WorkloadStartupProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStartupProbePtrInput)(nil)).Elem(), WorkloadStartupProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStorageConfInput)(nil)).Elem(), WorkloadStorageConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStorageConfArrayInput)(nil)).Elem(), WorkloadStorageConfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStorageMountConfInput)(nil)).Elem(), WorkloadStorageMountConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadStorageMountConfArrayInput)(nil)).Elem(), WorkloadStorageMountConfArray{})
	pulumi.RegisterOutputType(AppConfigConfigDataOutput{})
	pulumi.RegisterOutputType(AppConfigConfigDataArrayOutput{})
	pulumi.RegisterOutputType(ApplicationServiceServiceOutput{})
	pulumi.RegisterOutputType(ApplicationServiceServicePtrOutput{})
	pulumi.RegisterOutputType(ApplicationServiceServicePortMappingItemListOutput{})
	pulumi.RegisterOutputType(ApplicationServiceServicePortMappingItemListArrayOutput{})
	pulumi.RegisterOutputType(GatewayIngressOutput{})
	pulumi.RegisterOutputType(GatewayIngressPtrOutput{})
	pulumi.RegisterOutputType(GatewayIngressRuleOutput{})
	pulumi.RegisterOutputType(GatewayIngressRuleArrayOutput{})
	pulumi.RegisterOutputType(GatewayIngressRuleHttpOutput{})
	pulumi.RegisterOutputType(GatewayIngressRuleHttpPathOutput{})
	pulumi.RegisterOutputType(GatewayIngressRuleHttpPathArrayOutput{})
	pulumi.RegisterOutputType(GatewayIngressRuleHttpPathBackendOutput{})
	pulumi.RegisterOutputType(GatewayIngressTlOutput{})
	pulumi.RegisterOutputType(GatewayIngressTlArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerCronHorizontalAutoscalerOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerCronHorizontalAutoscalerArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerCronHorizontalAutoscalerScheduleArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerHorizontalAutoscalerOutput{})
	pulumi.RegisterOutputType(ScaleRuleAutoscalerHorizontalAutoscalerArrayOutput{})
	pulumi.RegisterOutputType(WorkloadDeployStrategyConfOutput{})
	pulumi.RegisterOutputType(WorkloadDeployStrategyConfPtrOutput{})
	pulumi.RegisterOutputType(WorkloadEnvConfOutput{})
	pulumi.RegisterOutputType(WorkloadEnvConfArrayOutput{})
	pulumi.RegisterOutputType(WorkloadLivenessOutput{})
	pulumi.RegisterOutputType(WorkloadLivenessPtrOutput{})
	pulumi.RegisterOutputType(WorkloadReadinessOutput{})
	pulumi.RegisterOutputType(WorkloadReadinessPtrOutput{})
	pulumi.RegisterOutputType(WorkloadStartupProbeOutput{})
	pulumi.RegisterOutputType(WorkloadStartupProbePtrOutput{})
	pulumi.RegisterOutputType(WorkloadStorageConfOutput{})
	pulumi.RegisterOutputType(WorkloadStorageConfArrayOutput{})
	pulumi.RegisterOutputType(WorkloadStorageMountConfOutput{})
	pulumi.RegisterOutputType(WorkloadStorageMountConfArrayOutput{})
}
