// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticsearch

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to start a elasticsearch logstash pipeline
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Elasticsearch"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Elasticsearch.NewStartLogstashPipelineOperation(ctx, "startLogstashPipelineOperation", &Elasticsearch.StartLogstashPipelineOperationArgs{
//				InstanceId: pulumi.String("ls-xxxxxx"),
//				PipelineId: pulumi.String("xxxxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type StartLogstashPipelineOperation struct {
	pulumi.CustomResourceState

	// Instance id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Pipeline id.
	PipelineId pulumi.StringOutput `pulumi:"pipelineId"`
}

// NewStartLogstashPipelineOperation registers a new resource with the given unique name, arguments, and options.
func NewStartLogstashPipelineOperation(ctx *pulumi.Context,
	name string, args *StartLogstashPipelineOperationArgs, opts ...pulumi.ResourceOption) (*StartLogstashPipelineOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PipelineId == nil {
		return nil, errors.New("invalid value for required argument 'PipelineId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource StartLogstashPipelineOperation
	err := ctx.RegisterResource("tencentcloud:Elasticsearch/startLogstashPipelineOperation:StartLogstashPipelineOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStartLogstashPipelineOperation gets an existing StartLogstashPipelineOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStartLogstashPipelineOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StartLogstashPipelineOperationState, opts ...pulumi.ResourceOption) (*StartLogstashPipelineOperation, error) {
	var resource StartLogstashPipelineOperation
	err := ctx.ReadResource("tencentcloud:Elasticsearch/startLogstashPipelineOperation:StartLogstashPipelineOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StartLogstashPipelineOperation resources.
type startLogstashPipelineOperationState struct {
	// Instance id.
	InstanceId *string `pulumi:"instanceId"`
	// Pipeline id.
	PipelineId *string `pulumi:"pipelineId"`
}

type StartLogstashPipelineOperationState struct {
	// Instance id.
	InstanceId pulumi.StringPtrInput
	// Pipeline id.
	PipelineId pulumi.StringPtrInput
}

func (StartLogstashPipelineOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*startLogstashPipelineOperationState)(nil)).Elem()
}

type startLogstashPipelineOperationArgs struct {
	// Instance id.
	InstanceId string `pulumi:"instanceId"`
	// Pipeline id.
	PipelineId string `pulumi:"pipelineId"`
}

// The set of arguments for constructing a StartLogstashPipelineOperation resource.
type StartLogstashPipelineOperationArgs struct {
	// Instance id.
	InstanceId pulumi.StringInput
	// Pipeline id.
	PipelineId pulumi.StringInput
}

func (StartLogstashPipelineOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*startLogstashPipelineOperationArgs)(nil)).Elem()
}

type StartLogstashPipelineOperationInput interface {
	pulumi.Input

	ToStartLogstashPipelineOperationOutput() StartLogstashPipelineOperationOutput
	ToStartLogstashPipelineOperationOutputWithContext(ctx context.Context) StartLogstashPipelineOperationOutput
}

func (*StartLogstashPipelineOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**StartLogstashPipelineOperation)(nil)).Elem()
}

func (i *StartLogstashPipelineOperation) ToStartLogstashPipelineOperationOutput() StartLogstashPipelineOperationOutput {
	return i.ToStartLogstashPipelineOperationOutputWithContext(context.Background())
}

func (i *StartLogstashPipelineOperation) ToStartLogstashPipelineOperationOutputWithContext(ctx context.Context) StartLogstashPipelineOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartLogstashPipelineOperationOutput)
}

// StartLogstashPipelineOperationArrayInput is an input type that accepts StartLogstashPipelineOperationArray and StartLogstashPipelineOperationArrayOutput values.
// You can construct a concrete instance of `StartLogstashPipelineOperationArrayInput` via:
//
//	StartLogstashPipelineOperationArray{ StartLogstashPipelineOperationArgs{...} }
type StartLogstashPipelineOperationArrayInput interface {
	pulumi.Input

	ToStartLogstashPipelineOperationArrayOutput() StartLogstashPipelineOperationArrayOutput
	ToStartLogstashPipelineOperationArrayOutputWithContext(context.Context) StartLogstashPipelineOperationArrayOutput
}

type StartLogstashPipelineOperationArray []StartLogstashPipelineOperationInput

func (StartLogstashPipelineOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StartLogstashPipelineOperation)(nil)).Elem()
}

func (i StartLogstashPipelineOperationArray) ToStartLogstashPipelineOperationArrayOutput() StartLogstashPipelineOperationArrayOutput {
	return i.ToStartLogstashPipelineOperationArrayOutputWithContext(context.Background())
}

func (i StartLogstashPipelineOperationArray) ToStartLogstashPipelineOperationArrayOutputWithContext(ctx context.Context) StartLogstashPipelineOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartLogstashPipelineOperationArrayOutput)
}

// StartLogstashPipelineOperationMapInput is an input type that accepts StartLogstashPipelineOperationMap and StartLogstashPipelineOperationMapOutput values.
// You can construct a concrete instance of `StartLogstashPipelineOperationMapInput` via:
//
//	StartLogstashPipelineOperationMap{ "key": StartLogstashPipelineOperationArgs{...} }
type StartLogstashPipelineOperationMapInput interface {
	pulumi.Input

	ToStartLogstashPipelineOperationMapOutput() StartLogstashPipelineOperationMapOutput
	ToStartLogstashPipelineOperationMapOutputWithContext(context.Context) StartLogstashPipelineOperationMapOutput
}

type StartLogstashPipelineOperationMap map[string]StartLogstashPipelineOperationInput

func (StartLogstashPipelineOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StartLogstashPipelineOperation)(nil)).Elem()
}

func (i StartLogstashPipelineOperationMap) ToStartLogstashPipelineOperationMapOutput() StartLogstashPipelineOperationMapOutput {
	return i.ToStartLogstashPipelineOperationMapOutputWithContext(context.Background())
}

func (i StartLogstashPipelineOperationMap) ToStartLogstashPipelineOperationMapOutputWithContext(ctx context.Context) StartLogstashPipelineOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartLogstashPipelineOperationMapOutput)
}

type StartLogstashPipelineOperationOutput struct{ *pulumi.OutputState }

func (StartLogstashPipelineOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StartLogstashPipelineOperation)(nil)).Elem()
}

func (o StartLogstashPipelineOperationOutput) ToStartLogstashPipelineOperationOutput() StartLogstashPipelineOperationOutput {
	return o
}

func (o StartLogstashPipelineOperationOutput) ToStartLogstashPipelineOperationOutputWithContext(ctx context.Context) StartLogstashPipelineOperationOutput {
	return o
}

// Instance id.
func (o StartLogstashPipelineOperationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *StartLogstashPipelineOperation) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Pipeline id.
func (o StartLogstashPipelineOperationOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v *StartLogstashPipelineOperation) pulumi.StringOutput { return v.PipelineId }).(pulumi.StringOutput)
}

type StartLogstashPipelineOperationArrayOutput struct{ *pulumi.OutputState }

func (StartLogstashPipelineOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StartLogstashPipelineOperation)(nil)).Elem()
}

func (o StartLogstashPipelineOperationArrayOutput) ToStartLogstashPipelineOperationArrayOutput() StartLogstashPipelineOperationArrayOutput {
	return o
}

func (o StartLogstashPipelineOperationArrayOutput) ToStartLogstashPipelineOperationArrayOutputWithContext(ctx context.Context) StartLogstashPipelineOperationArrayOutput {
	return o
}

func (o StartLogstashPipelineOperationArrayOutput) Index(i pulumi.IntInput) StartLogstashPipelineOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StartLogstashPipelineOperation {
		return vs[0].([]*StartLogstashPipelineOperation)[vs[1].(int)]
	}).(StartLogstashPipelineOperationOutput)
}

type StartLogstashPipelineOperationMapOutput struct{ *pulumi.OutputState }

func (StartLogstashPipelineOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StartLogstashPipelineOperation)(nil)).Elem()
}

func (o StartLogstashPipelineOperationMapOutput) ToStartLogstashPipelineOperationMapOutput() StartLogstashPipelineOperationMapOutput {
	return o
}

func (o StartLogstashPipelineOperationMapOutput) ToStartLogstashPipelineOperationMapOutputWithContext(ctx context.Context) StartLogstashPipelineOperationMapOutput {
	return o
}

func (o StartLogstashPipelineOperationMapOutput) MapIndex(k pulumi.StringInput) StartLogstashPipelineOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StartLogstashPipelineOperation {
		return vs[0].(map[string]*StartLogstashPipelineOperation)[vs[1].(string)]
	}).(StartLogstashPipelineOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StartLogstashPipelineOperationInput)(nil)).Elem(), &StartLogstashPipelineOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*StartLogstashPipelineOperationArrayInput)(nil)).Elem(), StartLogstashPipelineOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StartLogstashPipelineOperationMapInput)(nil)).Elem(), StartLogstashPipelineOperationMap{})
	pulumi.RegisterOutputType(StartLogstashPipelineOperationOutput{})
	pulumi.RegisterOutputType(StartLogstashPipelineOperationArrayOutput{})
	pulumi.RegisterOutputType(StartLogstashPipelineOperationMapOutput{})
}
