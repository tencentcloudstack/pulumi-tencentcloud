// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a css playAuthKeyConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Css.NewPlayAuthKeyConfig(ctx, "playAuthKeyConfig", &Css.PlayAuthKeyConfigArgs{
//				AuthBackKey: pulumi.String("testbackkey"),
//				AuthDelta:   pulumi.Int(3600),
//				AuthKey:     pulumi.String("testauthkey"),
//				DomainName:  pulumi.String("your_play_domain_name"),
//				Enable:      pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// css play_auth_key_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig play_auth_key_config play_auth_key_config_id
//
// ```
type PlayAuthKeyConfig struct {
	pulumi.CustomResourceState

	// Alternate key for authentication. No transfer means that the current value is not modified.
	AuthBackKey pulumi.StringPtrOutput `pulumi:"authBackKey"`
	// Valid time, unit: second. No transfer means that the current value is not modified.
	AuthDelta pulumi.IntPtrOutput `pulumi:"authDelta"`
	// Authentication key. No transfer means that the current value is not modified.
	AuthKey pulumi.StringPtrOutput `pulumi:"authKey"`
	// Domain Name.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable pulumi.IntPtrOutput `pulumi:"enable"`
}

// NewPlayAuthKeyConfig registers a new resource with the given unique name, arguments, and options.
func NewPlayAuthKeyConfig(ctx *pulumi.Context,
	name string, args *PlayAuthKeyConfigArgs, opts ...pulumi.ResourceOption) (*PlayAuthKeyConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource PlayAuthKeyConfig
	err := ctx.RegisterResource("tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlayAuthKeyConfig gets an existing PlayAuthKeyConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlayAuthKeyConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlayAuthKeyConfigState, opts ...pulumi.ResourceOption) (*PlayAuthKeyConfig, error) {
	var resource PlayAuthKeyConfig
	err := ctx.ReadResource("tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlayAuthKeyConfig resources.
type playAuthKeyConfigState struct {
	// Alternate key for authentication. No transfer means that the current value is not modified.
	AuthBackKey *string `pulumi:"authBackKey"`
	// Valid time, unit: second. No transfer means that the current value is not modified.
	AuthDelta *int `pulumi:"authDelta"`
	// Authentication key. No transfer means that the current value is not modified.
	AuthKey *string `pulumi:"authKey"`
	// Domain Name.
	DomainName *string `pulumi:"domainName"`
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable *int `pulumi:"enable"`
}

type PlayAuthKeyConfigState struct {
	// Alternate key for authentication. No transfer means that the current value is not modified.
	AuthBackKey pulumi.StringPtrInput
	// Valid time, unit: second. No transfer means that the current value is not modified.
	AuthDelta pulumi.IntPtrInput
	// Authentication key. No transfer means that the current value is not modified.
	AuthKey pulumi.StringPtrInput
	// Domain Name.
	DomainName pulumi.StringPtrInput
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable pulumi.IntPtrInput
}

func (PlayAuthKeyConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*playAuthKeyConfigState)(nil)).Elem()
}

type playAuthKeyConfigArgs struct {
	// Alternate key for authentication. No transfer means that the current value is not modified.
	AuthBackKey *string `pulumi:"authBackKey"`
	// Valid time, unit: second. No transfer means that the current value is not modified.
	AuthDelta *int `pulumi:"authDelta"`
	// Authentication key. No transfer means that the current value is not modified.
	AuthKey *string `pulumi:"authKey"`
	// Domain Name.
	DomainName string `pulumi:"domainName"`
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable *int `pulumi:"enable"`
}

// The set of arguments for constructing a PlayAuthKeyConfig resource.
type PlayAuthKeyConfigArgs struct {
	// Alternate key for authentication. No transfer means that the current value is not modified.
	AuthBackKey pulumi.StringPtrInput
	// Valid time, unit: second. No transfer means that the current value is not modified.
	AuthDelta pulumi.IntPtrInput
	// Authentication key. No transfer means that the current value is not modified.
	AuthKey pulumi.StringPtrInput
	// Domain Name.
	DomainName pulumi.StringInput
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable pulumi.IntPtrInput
}

func (PlayAuthKeyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*playAuthKeyConfigArgs)(nil)).Elem()
}

type PlayAuthKeyConfigInput interface {
	pulumi.Input

	ToPlayAuthKeyConfigOutput() PlayAuthKeyConfigOutput
	ToPlayAuthKeyConfigOutputWithContext(ctx context.Context) PlayAuthKeyConfigOutput
}

func (*PlayAuthKeyConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**PlayAuthKeyConfig)(nil)).Elem()
}

func (i *PlayAuthKeyConfig) ToPlayAuthKeyConfigOutput() PlayAuthKeyConfigOutput {
	return i.ToPlayAuthKeyConfigOutputWithContext(context.Background())
}

func (i *PlayAuthKeyConfig) ToPlayAuthKeyConfigOutputWithContext(ctx context.Context) PlayAuthKeyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlayAuthKeyConfigOutput)
}

// PlayAuthKeyConfigArrayInput is an input type that accepts PlayAuthKeyConfigArray and PlayAuthKeyConfigArrayOutput values.
// You can construct a concrete instance of `PlayAuthKeyConfigArrayInput` via:
//
//	PlayAuthKeyConfigArray{ PlayAuthKeyConfigArgs{...} }
type PlayAuthKeyConfigArrayInput interface {
	pulumi.Input

	ToPlayAuthKeyConfigArrayOutput() PlayAuthKeyConfigArrayOutput
	ToPlayAuthKeyConfigArrayOutputWithContext(context.Context) PlayAuthKeyConfigArrayOutput
}

type PlayAuthKeyConfigArray []PlayAuthKeyConfigInput

func (PlayAuthKeyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlayAuthKeyConfig)(nil)).Elem()
}

func (i PlayAuthKeyConfigArray) ToPlayAuthKeyConfigArrayOutput() PlayAuthKeyConfigArrayOutput {
	return i.ToPlayAuthKeyConfigArrayOutputWithContext(context.Background())
}

func (i PlayAuthKeyConfigArray) ToPlayAuthKeyConfigArrayOutputWithContext(ctx context.Context) PlayAuthKeyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlayAuthKeyConfigArrayOutput)
}

// PlayAuthKeyConfigMapInput is an input type that accepts PlayAuthKeyConfigMap and PlayAuthKeyConfigMapOutput values.
// You can construct a concrete instance of `PlayAuthKeyConfigMapInput` via:
//
//	PlayAuthKeyConfigMap{ "key": PlayAuthKeyConfigArgs{...} }
type PlayAuthKeyConfigMapInput interface {
	pulumi.Input

	ToPlayAuthKeyConfigMapOutput() PlayAuthKeyConfigMapOutput
	ToPlayAuthKeyConfigMapOutputWithContext(context.Context) PlayAuthKeyConfigMapOutput
}

type PlayAuthKeyConfigMap map[string]PlayAuthKeyConfigInput

func (PlayAuthKeyConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlayAuthKeyConfig)(nil)).Elem()
}

func (i PlayAuthKeyConfigMap) ToPlayAuthKeyConfigMapOutput() PlayAuthKeyConfigMapOutput {
	return i.ToPlayAuthKeyConfigMapOutputWithContext(context.Background())
}

func (i PlayAuthKeyConfigMap) ToPlayAuthKeyConfigMapOutputWithContext(ctx context.Context) PlayAuthKeyConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlayAuthKeyConfigMapOutput)
}

type PlayAuthKeyConfigOutput struct{ *pulumi.OutputState }

func (PlayAuthKeyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlayAuthKeyConfig)(nil)).Elem()
}

func (o PlayAuthKeyConfigOutput) ToPlayAuthKeyConfigOutput() PlayAuthKeyConfigOutput {
	return o
}

func (o PlayAuthKeyConfigOutput) ToPlayAuthKeyConfigOutputWithContext(ctx context.Context) PlayAuthKeyConfigOutput {
	return o
}

// Alternate key for authentication. No transfer means that the current value is not modified.
func (o PlayAuthKeyConfigOutput) AuthBackKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlayAuthKeyConfig) pulumi.StringPtrOutput { return v.AuthBackKey }).(pulumi.StringPtrOutput)
}

// Valid time, unit: second. No transfer means that the current value is not modified.
func (o PlayAuthKeyConfigOutput) AuthDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PlayAuthKeyConfig) pulumi.IntPtrOutput { return v.AuthDelta }).(pulumi.IntPtrOutput)
}

// Authentication key. No transfer means that the current value is not modified.
func (o PlayAuthKeyConfigOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlayAuthKeyConfig) pulumi.StringPtrOutput { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Domain Name.
func (o PlayAuthKeyConfigOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *PlayAuthKeyConfig) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
func (o PlayAuthKeyConfigOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PlayAuthKeyConfig) pulumi.IntPtrOutput { return v.Enable }).(pulumi.IntPtrOutput)
}

type PlayAuthKeyConfigArrayOutput struct{ *pulumi.OutputState }

func (PlayAuthKeyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlayAuthKeyConfig)(nil)).Elem()
}

func (o PlayAuthKeyConfigArrayOutput) ToPlayAuthKeyConfigArrayOutput() PlayAuthKeyConfigArrayOutput {
	return o
}

func (o PlayAuthKeyConfigArrayOutput) ToPlayAuthKeyConfigArrayOutputWithContext(ctx context.Context) PlayAuthKeyConfigArrayOutput {
	return o
}

func (o PlayAuthKeyConfigArrayOutput) Index(i pulumi.IntInput) PlayAuthKeyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PlayAuthKeyConfig {
		return vs[0].([]*PlayAuthKeyConfig)[vs[1].(int)]
	}).(PlayAuthKeyConfigOutput)
}

type PlayAuthKeyConfigMapOutput struct{ *pulumi.OutputState }

func (PlayAuthKeyConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlayAuthKeyConfig)(nil)).Elem()
}

func (o PlayAuthKeyConfigMapOutput) ToPlayAuthKeyConfigMapOutput() PlayAuthKeyConfigMapOutput {
	return o
}

func (o PlayAuthKeyConfigMapOutput) ToPlayAuthKeyConfigMapOutputWithContext(ctx context.Context) PlayAuthKeyConfigMapOutput {
	return o
}

func (o PlayAuthKeyConfigMapOutput) MapIndex(k pulumi.StringInput) PlayAuthKeyConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PlayAuthKeyConfig {
		return vs[0].(map[string]*PlayAuthKeyConfig)[vs[1].(string)]
	}).(PlayAuthKeyConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlayAuthKeyConfigInput)(nil)).Elem(), &PlayAuthKeyConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlayAuthKeyConfigArrayInput)(nil)).Elem(), PlayAuthKeyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlayAuthKeyConfigMapInput)(nil)).Elem(), PlayAuthKeyConfigMap{})
	pulumi.RegisterOutputType(PlayAuthKeyConfigOutput{})
	pulumi.RegisterOutputType(PlayAuthKeyConfigArrayOutput{})
	pulumi.RegisterOutputType(PlayAuthKeyConfigMapOutput{})
}
