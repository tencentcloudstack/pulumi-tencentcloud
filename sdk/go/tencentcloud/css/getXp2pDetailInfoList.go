// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of css xp2pDetailInfoList
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Css.GetXp2pDetailInfoList(ctx, &css.GetXp2pDetailInfoListArgs{
//				QueryTime: pulumi.StringRef("2023-11-01T14:55:01+08:00"),
//				Types: []string{
//					"live",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetXp2pDetailInfoList(ctx *pulumi.Context, args *GetXp2pDetailInfoListArgs, opts ...pulumi.InvokeOption) (*GetXp2pDetailInfoListResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetXp2pDetailInfoListResult
	err := ctx.Invoke("tencentcloud:Css/getXp2pDetailInfoList:getXp2pDetailInfoList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getXp2pDetailInfoList.
type GetXp2pDetailInfoListArgs struct {
	// The dimension parameter can be used to specify the dimension for the query. If this parameter is not passed, the query will default to stream-level data. If you pass this parameter, it will only retrieve data for the specified dimension. The available dimension currently supported is AppId dimension, which allows you to query data based on the application ID. Please note that the returned fields will be related to the specified dimension.
	Dimensions []string `pulumi:"dimensions"`
	// The UTC minute granularity query time for querying usage data for a specific minute is in the format: yyyy-mm-ddTHH:MM:00Z. Please refer to the link https://cloud.tencent.com/document/product/266/11732#I.For example, if the local time is 2019-01-08 10:00:00 in Beijing, the corresponding UTC time would be 2019-01-08T10:00:00+08:00.This query supports data from the past six months.
	QueryTime *string `pulumi:"queryTime"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// The stream array can be used to specify the streams to be queried. If no stream is specified, the query will include all streams by default.
	StreamNames []string `pulumi:"streamNames"`
	// The type array can be used to specify the type of media content to be queried. The two available options are live for live streaming and vod for video on demand. If no type is specified, the query will include both live and VOD content by default.
	Types []string `pulumi:"types"`
}

// A collection of values returned by getXp2pDetailInfoList.
type GetXp2pDetailInfoListResult struct {
	// P2P streaming statistical information.
	DataInfoLists []GetXp2pDetailInfoListDataInfoList `pulumi:"dataInfoLists"`
	Dimensions    []string                            `pulumi:"dimensions"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	QueryTime        *string  `pulumi:"queryTime"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	StreamNames      []string `pulumi:"streamNames"`
	// Type, divided into two categories: live and vod.Note: This field may return null, indicating that no valid value is available.
	Types []string `pulumi:"types"`
}

func GetXp2pDetailInfoListOutput(ctx *pulumi.Context, args GetXp2pDetailInfoListOutputArgs, opts ...pulumi.InvokeOption) GetXp2pDetailInfoListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetXp2pDetailInfoListResult, error) {
			args := v.(GetXp2pDetailInfoListArgs)
			r, err := GetXp2pDetailInfoList(ctx, &args, opts...)
			var s GetXp2pDetailInfoListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetXp2pDetailInfoListResultOutput)
}

// A collection of arguments for invoking getXp2pDetailInfoList.
type GetXp2pDetailInfoListOutputArgs struct {
	// The dimension parameter can be used to specify the dimension for the query. If this parameter is not passed, the query will default to stream-level data. If you pass this parameter, it will only retrieve data for the specified dimension. The available dimension currently supported is AppId dimension, which allows you to query data based on the application ID. Please note that the returned fields will be related to the specified dimension.
	Dimensions pulumi.StringArrayInput `pulumi:"dimensions"`
	// The UTC minute granularity query time for querying usage data for a specific minute is in the format: yyyy-mm-ddTHH:MM:00Z. Please refer to the link https://cloud.tencent.com/document/product/266/11732#I.For example, if the local time is 2019-01-08 10:00:00 in Beijing, the corresponding UTC time would be 2019-01-08T10:00:00+08:00.This query supports data from the past six months.
	QueryTime pulumi.StringPtrInput `pulumi:"queryTime"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// The stream array can be used to specify the streams to be queried. If no stream is specified, the query will include all streams by default.
	StreamNames pulumi.StringArrayInput `pulumi:"streamNames"`
	// The type array can be used to specify the type of media content to be queried. The two available options are live for live streaming and vod for video on demand. If no type is specified, the query will include both live and VOD content by default.
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (GetXp2pDetailInfoListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXp2pDetailInfoListArgs)(nil)).Elem()
}

// A collection of values returned by getXp2pDetailInfoList.
type GetXp2pDetailInfoListResultOutput struct{ *pulumi.OutputState }

func (GetXp2pDetailInfoListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXp2pDetailInfoListResult)(nil)).Elem()
}

func (o GetXp2pDetailInfoListResultOutput) ToGetXp2pDetailInfoListResultOutput() GetXp2pDetailInfoListResultOutput {
	return o
}

func (o GetXp2pDetailInfoListResultOutput) ToGetXp2pDetailInfoListResultOutputWithContext(ctx context.Context) GetXp2pDetailInfoListResultOutput {
	return o
}

// P2P streaming statistical information.
func (o GetXp2pDetailInfoListResultOutput) DataInfoLists() GetXp2pDetailInfoListDataInfoListArrayOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) []GetXp2pDetailInfoListDataInfoList { return v.DataInfoLists }).(GetXp2pDetailInfoListDataInfoListArrayOutput)
}

func (o GetXp2pDetailInfoListResultOutput) Dimensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) []string { return v.Dimensions }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetXp2pDetailInfoListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetXp2pDetailInfoListResultOutput) QueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) *string { return v.QueryTime }).(pulumi.StringPtrOutput)
}

func (o GetXp2pDetailInfoListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetXp2pDetailInfoListResultOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

// Type, divided into two categories: live and vod.Note: This field may return null, indicating that no valid value is available.
func (o GetXp2pDetailInfoListResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetXp2pDetailInfoListResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetXp2pDetailInfoListResultOutput{})
}
