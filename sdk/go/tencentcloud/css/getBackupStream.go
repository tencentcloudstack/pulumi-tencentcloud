// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of css backupStream
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Css.GetBackupStream(ctx, &css.GetBackupStreamArgs{
//				StreamName: pulumi.StringRef("live"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBackupStream(ctx *pulumi.Context, args *LookupBackupStreamArgs, opts ...pulumi.InvokeOption) (*LookupBackupStreamResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupBackupStreamResult
	err := ctx.Invoke("tencentcloud:Css/getBackupStream:getBackupStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupStream.
type LookupBackupStreamArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Stream id.
	StreamName *string `pulumi:"streamName"`
}

// A collection of values returned by getBackupStream.
type LookupBackupStreamResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Backup stream group info.
	StreamInfoLists []GetBackupStreamStreamInfoList `pulumi:"streamInfoLists"`
	// Stream name.
	StreamName *string `pulumi:"streamName"`
}

func LookupBackupStreamOutput(ctx *pulumi.Context, args LookupBackupStreamOutputArgs, opts ...pulumi.InvokeOption) LookupBackupStreamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackupStreamResult, error) {
			args := v.(LookupBackupStreamArgs)
			r, err := LookupBackupStream(ctx, &args, opts...)
			var s LookupBackupStreamResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBackupStreamResultOutput)
}

// A collection of arguments for invoking getBackupStream.
type LookupBackupStreamOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Stream id.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (LookupBackupStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupStreamArgs)(nil)).Elem()
}

// A collection of values returned by getBackupStream.
type LookupBackupStreamResultOutput struct{ *pulumi.OutputState }

func (LookupBackupStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupStreamResult)(nil)).Elem()
}

func (o LookupBackupStreamResultOutput) ToLookupBackupStreamResultOutput() LookupBackupStreamResultOutput {
	return o
}

func (o LookupBackupStreamResultOutput) ToLookupBackupStreamResultOutputWithContext(ctx context.Context) LookupBackupStreamResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackupStreamResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupStreamResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackupStreamResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackupStreamResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Backup stream group info.
func (o LookupBackupStreamResultOutput) StreamInfoLists() GetBackupStreamStreamInfoListArrayOutput {
	return o.ApplyT(func(v LookupBackupStreamResult) []GetBackupStreamStreamInfoList { return v.StreamInfoLists }).(GetBackupStreamStreamInfoListArrayOutput)
}

// Stream name.
func (o LookupBackupStreamResultOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackupStreamResult) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupStreamResultOutput{})
}
