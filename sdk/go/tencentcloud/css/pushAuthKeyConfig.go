// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a css pushAuthKeyConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Css.NewPushAuthKeyConfig(ctx, "pushAuthKeyConfig", &Css.PushAuthKeyConfigArgs{
//				AuthDelta:     pulumi.Int(1800),
//				BackupAuthKey: pulumi.String("testbackkey"),
//				DomainName:    pulumi.String("your_push_domain_name"),
//				Enable:        pulumi.Int(1),
//				MasterAuthKey: pulumi.String("testmasterkey"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// css push_auth_key_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Css/pushAuthKeyConfig:PushAuthKeyConfig push_auth_key_config push_auth_key_config_id
//
// ```
type PushAuthKeyConfig struct {
	pulumi.CustomResourceState

	// Valid time, unit: second.
	AuthDelta pulumi.IntPtrOutput `pulumi:"authDelta"`
	// Standby authentication key. No transfer means that the current value is not modified.
	BackupAuthKey pulumi.StringPtrOutput `pulumi:"backupAuthKey"`
	// Domain Name.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable pulumi.IntPtrOutput `pulumi:"enable"`
	// Primary authentication key. No transfer means that the current value is not modified.
	MasterAuthKey pulumi.StringPtrOutput `pulumi:"masterAuthKey"`
}

// NewPushAuthKeyConfig registers a new resource with the given unique name, arguments, and options.
func NewPushAuthKeyConfig(ctx *pulumi.Context,
	name string, args *PushAuthKeyConfigArgs, opts ...pulumi.ResourceOption) (*PushAuthKeyConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource PushAuthKeyConfig
	err := ctx.RegisterResource("tencentcloud:Css/pushAuthKeyConfig:PushAuthKeyConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPushAuthKeyConfig gets an existing PushAuthKeyConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPushAuthKeyConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PushAuthKeyConfigState, opts ...pulumi.ResourceOption) (*PushAuthKeyConfig, error) {
	var resource PushAuthKeyConfig
	err := ctx.ReadResource("tencentcloud:Css/pushAuthKeyConfig:PushAuthKeyConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PushAuthKeyConfig resources.
type pushAuthKeyConfigState struct {
	// Valid time, unit: second.
	AuthDelta *int `pulumi:"authDelta"`
	// Standby authentication key. No transfer means that the current value is not modified.
	BackupAuthKey *string `pulumi:"backupAuthKey"`
	// Domain Name.
	DomainName *string `pulumi:"domainName"`
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable *int `pulumi:"enable"`
	// Primary authentication key. No transfer means that the current value is not modified.
	MasterAuthKey *string `pulumi:"masterAuthKey"`
}

type PushAuthKeyConfigState struct {
	// Valid time, unit: second.
	AuthDelta pulumi.IntPtrInput
	// Standby authentication key. No transfer means that the current value is not modified.
	BackupAuthKey pulumi.StringPtrInput
	// Domain Name.
	DomainName pulumi.StringPtrInput
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable pulumi.IntPtrInput
	// Primary authentication key. No transfer means that the current value is not modified.
	MasterAuthKey pulumi.StringPtrInput
}

func (PushAuthKeyConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*pushAuthKeyConfigState)(nil)).Elem()
}

type pushAuthKeyConfigArgs struct {
	// Valid time, unit: second.
	AuthDelta *int `pulumi:"authDelta"`
	// Standby authentication key. No transfer means that the current value is not modified.
	BackupAuthKey *string `pulumi:"backupAuthKey"`
	// Domain Name.
	DomainName string `pulumi:"domainName"`
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable *int `pulumi:"enable"`
	// Primary authentication key. No transfer means that the current value is not modified.
	MasterAuthKey *string `pulumi:"masterAuthKey"`
}

// The set of arguments for constructing a PushAuthKeyConfig resource.
type PushAuthKeyConfigArgs struct {
	// Valid time, unit: second.
	AuthDelta pulumi.IntPtrInput
	// Standby authentication key. No transfer means that the current value is not modified.
	BackupAuthKey pulumi.StringPtrInput
	// Domain Name.
	DomainName pulumi.StringInput
	// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
	Enable pulumi.IntPtrInput
	// Primary authentication key. No transfer means that the current value is not modified.
	MasterAuthKey pulumi.StringPtrInput
}

func (PushAuthKeyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pushAuthKeyConfigArgs)(nil)).Elem()
}

type PushAuthKeyConfigInput interface {
	pulumi.Input

	ToPushAuthKeyConfigOutput() PushAuthKeyConfigOutput
	ToPushAuthKeyConfigOutputWithContext(ctx context.Context) PushAuthKeyConfigOutput
}

func (*PushAuthKeyConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**PushAuthKeyConfig)(nil)).Elem()
}

func (i *PushAuthKeyConfig) ToPushAuthKeyConfigOutput() PushAuthKeyConfigOutput {
	return i.ToPushAuthKeyConfigOutputWithContext(context.Background())
}

func (i *PushAuthKeyConfig) ToPushAuthKeyConfigOutputWithContext(ctx context.Context) PushAuthKeyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushAuthKeyConfigOutput)
}

// PushAuthKeyConfigArrayInput is an input type that accepts PushAuthKeyConfigArray and PushAuthKeyConfigArrayOutput values.
// You can construct a concrete instance of `PushAuthKeyConfigArrayInput` via:
//
//	PushAuthKeyConfigArray{ PushAuthKeyConfigArgs{...} }
type PushAuthKeyConfigArrayInput interface {
	pulumi.Input

	ToPushAuthKeyConfigArrayOutput() PushAuthKeyConfigArrayOutput
	ToPushAuthKeyConfigArrayOutputWithContext(context.Context) PushAuthKeyConfigArrayOutput
}

type PushAuthKeyConfigArray []PushAuthKeyConfigInput

func (PushAuthKeyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PushAuthKeyConfig)(nil)).Elem()
}

func (i PushAuthKeyConfigArray) ToPushAuthKeyConfigArrayOutput() PushAuthKeyConfigArrayOutput {
	return i.ToPushAuthKeyConfigArrayOutputWithContext(context.Background())
}

func (i PushAuthKeyConfigArray) ToPushAuthKeyConfigArrayOutputWithContext(ctx context.Context) PushAuthKeyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushAuthKeyConfigArrayOutput)
}

// PushAuthKeyConfigMapInput is an input type that accepts PushAuthKeyConfigMap and PushAuthKeyConfigMapOutput values.
// You can construct a concrete instance of `PushAuthKeyConfigMapInput` via:
//
//	PushAuthKeyConfigMap{ "key": PushAuthKeyConfigArgs{...} }
type PushAuthKeyConfigMapInput interface {
	pulumi.Input

	ToPushAuthKeyConfigMapOutput() PushAuthKeyConfigMapOutput
	ToPushAuthKeyConfigMapOutputWithContext(context.Context) PushAuthKeyConfigMapOutput
}

type PushAuthKeyConfigMap map[string]PushAuthKeyConfigInput

func (PushAuthKeyConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PushAuthKeyConfig)(nil)).Elem()
}

func (i PushAuthKeyConfigMap) ToPushAuthKeyConfigMapOutput() PushAuthKeyConfigMapOutput {
	return i.ToPushAuthKeyConfigMapOutputWithContext(context.Background())
}

func (i PushAuthKeyConfigMap) ToPushAuthKeyConfigMapOutputWithContext(ctx context.Context) PushAuthKeyConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushAuthKeyConfigMapOutput)
}

type PushAuthKeyConfigOutput struct{ *pulumi.OutputState }

func (PushAuthKeyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushAuthKeyConfig)(nil)).Elem()
}

func (o PushAuthKeyConfigOutput) ToPushAuthKeyConfigOutput() PushAuthKeyConfigOutput {
	return o
}

func (o PushAuthKeyConfigOutput) ToPushAuthKeyConfigOutputWithContext(ctx context.Context) PushAuthKeyConfigOutput {
	return o
}

// Valid time, unit: second.
func (o PushAuthKeyConfigOutput) AuthDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PushAuthKeyConfig) pulumi.IntPtrOutput { return v.AuthDelta }).(pulumi.IntPtrOutput)
}

// Standby authentication key. No transfer means that the current value is not modified.
func (o PushAuthKeyConfigOutput) BackupAuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushAuthKeyConfig) pulumi.StringPtrOutput { return v.BackupAuthKey }).(pulumi.StringPtrOutput)
}

// Domain Name.
func (o PushAuthKeyConfigOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *PushAuthKeyConfig) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
func (o PushAuthKeyConfigOutput) Enable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PushAuthKeyConfig) pulumi.IntPtrOutput { return v.Enable }).(pulumi.IntPtrOutput)
}

// Primary authentication key. No transfer means that the current value is not modified.
func (o PushAuthKeyConfigOutput) MasterAuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushAuthKeyConfig) pulumi.StringPtrOutput { return v.MasterAuthKey }).(pulumi.StringPtrOutput)
}

type PushAuthKeyConfigArrayOutput struct{ *pulumi.OutputState }

func (PushAuthKeyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PushAuthKeyConfig)(nil)).Elem()
}

func (o PushAuthKeyConfigArrayOutput) ToPushAuthKeyConfigArrayOutput() PushAuthKeyConfigArrayOutput {
	return o
}

func (o PushAuthKeyConfigArrayOutput) ToPushAuthKeyConfigArrayOutputWithContext(ctx context.Context) PushAuthKeyConfigArrayOutput {
	return o
}

func (o PushAuthKeyConfigArrayOutput) Index(i pulumi.IntInput) PushAuthKeyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PushAuthKeyConfig {
		return vs[0].([]*PushAuthKeyConfig)[vs[1].(int)]
	}).(PushAuthKeyConfigOutput)
}

type PushAuthKeyConfigMapOutput struct{ *pulumi.OutputState }

func (PushAuthKeyConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PushAuthKeyConfig)(nil)).Elem()
}

func (o PushAuthKeyConfigMapOutput) ToPushAuthKeyConfigMapOutput() PushAuthKeyConfigMapOutput {
	return o
}

func (o PushAuthKeyConfigMapOutput) ToPushAuthKeyConfigMapOutputWithContext(ctx context.Context) PushAuthKeyConfigMapOutput {
	return o
}

func (o PushAuthKeyConfigMapOutput) MapIndex(k pulumi.StringInput) PushAuthKeyConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PushAuthKeyConfig {
		return vs[0].(map[string]*PushAuthKeyConfig)[vs[1].(string)]
	}).(PushAuthKeyConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PushAuthKeyConfigInput)(nil)).Elem(), &PushAuthKeyConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushAuthKeyConfigArrayInput)(nil)).Elem(), PushAuthKeyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushAuthKeyConfigMapInput)(nil)).Elem(), PushAuthKeyConfigMap{})
	pulumi.RegisterOutputType(PushAuthKeyConfigOutput{})
	pulumi.RegisterOutputType(PushAuthKeyConfigArrayOutput{})
	pulumi.RegisterOutputType(PushAuthKeyConfigMapOutput{})
}
