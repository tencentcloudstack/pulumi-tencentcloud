// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a css padTemplate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Css.NewPadTemplate(ctx, "padTemplate", &Css.PadTemplateArgs{
//				Description:  pulumi.String("pad template"),
//				MaxDuration:  pulumi.Int(120000),
//				TemplateName: pulumi.String("tf-pad"),
//				Type:         pulumi.Int(1),
//				Url:          pulumi.String("https://livewatermark-1251132611.cos.ap-guangzhou.myqcloud.com/1308919341/watermark_img_1698736540399_1441698123618_.pic.jpg"),
//				WaitDuration: pulumi.Int(2000),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// css pad_template can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Css/padTemplate:PadTemplate pad_template templateId
//
// ```
type PadTemplate struct {
	pulumi.CustomResourceState

	// Description content.limit length 1024 bytes.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Max pad duration.limit: 0 - 9999999 ms.
	MaxDuration pulumi.IntPtrOutput `pulumi:"maxDuration"`
	// Template namelimit 255 bytes.
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
	// Pad content type.1: picture.2: video.default: 1.
	Type pulumi.IntPtrOutput `pulumi:"type"`
	// Pad content.
	Url pulumi.StringOutput `pulumi:"url"`
	// Stop stream wait time.limit: 0 - 30000 ms.
	WaitDuration pulumi.IntPtrOutput `pulumi:"waitDuration"`
}

// NewPadTemplate registers a new resource with the given unique name, arguments, and options.
func NewPadTemplate(ctx *pulumi.Context,
	name string, args *PadTemplateArgs, opts ...pulumi.ResourceOption) (*PadTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TemplateName == nil {
		return nil, errors.New("invalid value for required argument 'TemplateName'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource PadTemplate
	err := ctx.RegisterResource("tencentcloud:Css/padTemplate:PadTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPadTemplate gets an existing PadTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPadTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PadTemplateState, opts ...pulumi.ResourceOption) (*PadTemplate, error) {
	var resource PadTemplate
	err := ctx.ReadResource("tencentcloud:Css/padTemplate:PadTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PadTemplate resources.
type padTemplateState struct {
	// Description content.limit length 1024 bytes.
	Description *string `pulumi:"description"`
	// Max pad duration.limit: 0 - 9999999 ms.
	MaxDuration *int `pulumi:"maxDuration"`
	// Template namelimit 255 bytes.
	TemplateName *string `pulumi:"templateName"`
	// Pad content type.1: picture.2: video.default: 1.
	Type *int `pulumi:"type"`
	// Pad content.
	Url *string `pulumi:"url"`
	// Stop stream wait time.limit: 0 - 30000 ms.
	WaitDuration *int `pulumi:"waitDuration"`
}

type PadTemplateState struct {
	// Description content.limit length 1024 bytes.
	Description pulumi.StringPtrInput
	// Max pad duration.limit: 0 - 9999999 ms.
	MaxDuration pulumi.IntPtrInput
	// Template namelimit 255 bytes.
	TemplateName pulumi.StringPtrInput
	// Pad content type.1: picture.2: video.default: 1.
	Type pulumi.IntPtrInput
	// Pad content.
	Url pulumi.StringPtrInput
	// Stop stream wait time.limit: 0 - 30000 ms.
	WaitDuration pulumi.IntPtrInput
}

func (PadTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*padTemplateState)(nil)).Elem()
}

type padTemplateArgs struct {
	// Description content.limit length 1024 bytes.
	Description *string `pulumi:"description"`
	// Max pad duration.limit: 0 - 9999999 ms.
	MaxDuration *int `pulumi:"maxDuration"`
	// Template namelimit 255 bytes.
	TemplateName string `pulumi:"templateName"`
	// Pad content type.1: picture.2: video.default: 1.
	Type *int `pulumi:"type"`
	// Pad content.
	Url string `pulumi:"url"`
	// Stop stream wait time.limit: 0 - 30000 ms.
	WaitDuration *int `pulumi:"waitDuration"`
}

// The set of arguments for constructing a PadTemplate resource.
type PadTemplateArgs struct {
	// Description content.limit length 1024 bytes.
	Description pulumi.StringPtrInput
	// Max pad duration.limit: 0 - 9999999 ms.
	MaxDuration pulumi.IntPtrInput
	// Template namelimit 255 bytes.
	TemplateName pulumi.StringInput
	// Pad content type.1: picture.2: video.default: 1.
	Type pulumi.IntPtrInput
	// Pad content.
	Url pulumi.StringInput
	// Stop stream wait time.limit: 0 - 30000 ms.
	WaitDuration pulumi.IntPtrInput
}

func (PadTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*padTemplateArgs)(nil)).Elem()
}

type PadTemplateInput interface {
	pulumi.Input

	ToPadTemplateOutput() PadTemplateOutput
	ToPadTemplateOutputWithContext(ctx context.Context) PadTemplateOutput
}

func (*PadTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**PadTemplate)(nil)).Elem()
}

func (i *PadTemplate) ToPadTemplateOutput() PadTemplateOutput {
	return i.ToPadTemplateOutputWithContext(context.Background())
}

func (i *PadTemplate) ToPadTemplateOutputWithContext(ctx context.Context) PadTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PadTemplateOutput)
}

// PadTemplateArrayInput is an input type that accepts PadTemplateArray and PadTemplateArrayOutput values.
// You can construct a concrete instance of `PadTemplateArrayInput` via:
//
//	PadTemplateArray{ PadTemplateArgs{...} }
type PadTemplateArrayInput interface {
	pulumi.Input

	ToPadTemplateArrayOutput() PadTemplateArrayOutput
	ToPadTemplateArrayOutputWithContext(context.Context) PadTemplateArrayOutput
}

type PadTemplateArray []PadTemplateInput

func (PadTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PadTemplate)(nil)).Elem()
}

func (i PadTemplateArray) ToPadTemplateArrayOutput() PadTemplateArrayOutput {
	return i.ToPadTemplateArrayOutputWithContext(context.Background())
}

func (i PadTemplateArray) ToPadTemplateArrayOutputWithContext(ctx context.Context) PadTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PadTemplateArrayOutput)
}

// PadTemplateMapInput is an input type that accepts PadTemplateMap and PadTemplateMapOutput values.
// You can construct a concrete instance of `PadTemplateMapInput` via:
//
//	PadTemplateMap{ "key": PadTemplateArgs{...} }
type PadTemplateMapInput interface {
	pulumi.Input

	ToPadTemplateMapOutput() PadTemplateMapOutput
	ToPadTemplateMapOutputWithContext(context.Context) PadTemplateMapOutput
}

type PadTemplateMap map[string]PadTemplateInput

func (PadTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PadTemplate)(nil)).Elem()
}

func (i PadTemplateMap) ToPadTemplateMapOutput() PadTemplateMapOutput {
	return i.ToPadTemplateMapOutputWithContext(context.Background())
}

func (i PadTemplateMap) ToPadTemplateMapOutputWithContext(ctx context.Context) PadTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PadTemplateMapOutput)
}

type PadTemplateOutput struct{ *pulumi.OutputState }

func (PadTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PadTemplate)(nil)).Elem()
}

func (o PadTemplateOutput) ToPadTemplateOutput() PadTemplateOutput {
	return o
}

func (o PadTemplateOutput) ToPadTemplateOutputWithContext(ctx context.Context) PadTemplateOutput {
	return o
}

// Description content.limit length 1024 bytes.
func (o PadTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PadTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Max pad duration.limit: 0 - 9999999 ms.
func (o PadTemplateOutput) MaxDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PadTemplate) pulumi.IntPtrOutput { return v.MaxDuration }).(pulumi.IntPtrOutput)
}

// Template namelimit 255 bytes.
func (o PadTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v *PadTemplate) pulumi.StringOutput { return v.TemplateName }).(pulumi.StringOutput)
}

// Pad content type.1: picture.2: video.default: 1.
func (o PadTemplateOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PadTemplate) pulumi.IntPtrOutput { return v.Type }).(pulumi.IntPtrOutput)
}

// Pad content.
func (o PadTemplateOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *PadTemplate) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// Stop stream wait time.limit: 0 - 30000 ms.
func (o PadTemplateOutput) WaitDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PadTemplate) pulumi.IntPtrOutput { return v.WaitDuration }).(pulumi.IntPtrOutput)
}

type PadTemplateArrayOutput struct{ *pulumi.OutputState }

func (PadTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PadTemplate)(nil)).Elem()
}

func (o PadTemplateArrayOutput) ToPadTemplateArrayOutput() PadTemplateArrayOutput {
	return o
}

func (o PadTemplateArrayOutput) ToPadTemplateArrayOutputWithContext(ctx context.Context) PadTemplateArrayOutput {
	return o
}

func (o PadTemplateArrayOutput) Index(i pulumi.IntInput) PadTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PadTemplate {
		return vs[0].([]*PadTemplate)[vs[1].(int)]
	}).(PadTemplateOutput)
}

type PadTemplateMapOutput struct{ *pulumi.OutputState }

func (PadTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PadTemplate)(nil)).Elem()
}

func (o PadTemplateMapOutput) ToPadTemplateMapOutput() PadTemplateMapOutput {
	return o
}

func (o PadTemplateMapOutput) ToPadTemplateMapOutputWithContext(ctx context.Context) PadTemplateMapOutput {
	return o
}

func (o PadTemplateMapOutput) MapIndex(k pulumi.StringInput) PadTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PadTemplate {
		return vs[0].(map[string]*PadTemplate)[vs[1].(string)]
	}).(PadTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PadTemplateInput)(nil)).Elem(), &PadTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*PadTemplateArrayInput)(nil)).Elem(), PadTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PadTemplateMapInput)(nil)).Elem(), PadTemplateMap{})
	pulumi.RegisterOutputType(PadTemplateOutput{})
	pulumi.RegisterOutputType(PadTemplateArrayOutput{})
	pulumi.RegisterOutputType(PadTemplateMapOutput{})
}
