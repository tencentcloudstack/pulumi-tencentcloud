// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a css timeshiftTemplate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Css.NewTimeshiftTemplate(ctx, "timeshiftTemplate", &Css.TimeshiftTemplateArgs{
//				Area:                 pulumi.String("Mainland"),
//				Description:          pulumi.String("timeshift template"),
//				Duration:             pulumi.Int(604800),
//				ItemDuration:         pulumi.Int(5),
//				RemoveWatermark:      pulumi.Bool(true),
//				TemplateName:         pulumi.String("tf-test"),
//				TranscodeTemplateIds: pulumi.IntArray{},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// css timeshift_template can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Css/timeshiftTemplate:TimeshiftTemplate timeshift_template templateId
//
// ```
type TimeshiftTemplate struct {
	pulumi.CustomResourceState

	// The region.`Mainland`: The Chinese mainland.`Overseas`: Outside the Chinese mainland.Default value: `Mainland`.
	Area pulumi.StringPtrOutput `pulumi:"area"`
	// The template description.Only letters, numbers, underscores, and hyphens are supported.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The time shifting duration.Unit: Second.
	Duration pulumi.IntOutput `pulumi:"duration"`
	// The segment size.Value range: 3-10.Unit: Second.Default value: 5.
	ItemDuration pulumi.IntPtrOutput `pulumi:"itemDuration"`
	// Whether to remove watermarks.If you pass in `true`, the original stream will be recorded.Default value: `false`.
	RemoveWatermark pulumi.BoolPtrOutput `pulumi:"removeWatermark"`
	// The template name.Maximum length: 255 bytes.Only letters, numbers, underscores, and hyphens are supported.
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
	// The transcoding template IDs.This API works only if `RemoveWatermark` is `false`.
	TranscodeTemplateIds pulumi.IntArrayOutput `pulumi:"transcodeTemplateIds"`
}

// NewTimeshiftTemplate registers a new resource with the given unique name, arguments, and options.
func NewTimeshiftTemplate(ctx *pulumi.Context,
	name string, args *TimeshiftTemplateArgs, opts ...pulumi.ResourceOption) (*TimeshiftTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Duration == nil {
		return nil, errors.New("invalid value for required argument 'Duration'")
	}
	if args.TemplateName == nil {
		return nil, errors.New("invalid value for required argument 'TemplateName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TimeshiftTemplate
	err := ctx.RegisterResource("tencentcloud:Css/timeshiftTemplate:TimeshiftTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTimeshiftTemplate gets an existing TimeshiftTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTimeshiftTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TimeshiftTemplateState, opts ...pulumi.ResourceOption) (*TimeshiftTemplate, error) {
	var resource TimeshiftTemplate
	err := ctx.ReadResource("tencentcloud:Css/timeshiftTemplate:TimeshiftTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TimeshiftTemplate resources.
type timeshiftTemplateState struct {
	// The region.`Mainland`: The Chinese mainland.`Overseas`: Outside the Chinese mainland.Default value: `Mainland`.
	Area *string `pulumi:"area"`
	// The template description.Only letters, numbers, underscores, and hyphens are supported.
	Description *string `pulumi:"description"`
	// The time shifting duration.Unit: Second.
	Duration *int `pulumi:"duration"`
	// The segment size.Value range: 3-10.Unit: Second.Default value: 5.
	ItemDuration *int `pulumi:"itemDuration"`
	// Whether to remove watermarks.If you pass in `true`, the original stream will be recorded.Default value: `false`.
	RemoveWatermark *bool `pulumi:"removeWatermark"`
	// The template name.Maximum length: 255 bytes.Only letters, numbers, underscores, and hyphens are supported.
	TemplateName *string `pulumi:"templateName"`
	// The transcoding template IDs.This API works only if `RemoveWatermark` is `false`.
	TranscodeTemplateIds []int `pulumi:"transcodeTemplateIds"`
}

type TimeshiftTemplateState struct {
	// The region.`Mainland`: The Chinese mainland.`Overseas`: Outside the Chinese mainland.Default value: `Mainland`.
	Area pulumi.StringPtrInput
	// The template description.Only letters, numbers, underscores, and hyphens are supported.
	Description pulumi.StringPtrInput
	// The time shifting duration.Unit: Second.
	Duration pulumi.IntPtrInput
	// The segment size.Value range: 3-10.Unit: Second.Default value: 5.
	ItemDuration pulumi.IntPtrInput
	// Whether to remove watermarks.If you pass in `true`, the original stream will be recorded.Default value: `false`.
	RemoveWatermark pulumi.BoolPtrInput
	// The template name.Maximum length: 255 bytes.Only letters, numbers, underscores, and hyphens are supported.
	TemplateName pulumi.StringPtrInput
	// The transcoding template IDs.This API works only if `RemoveWatermark` is `false`.
	TranscodeTemplateIds pulumi.IntArrayInput
}

func (TimeshiftTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*timeshiftTemplateState)(nil)).Elem()
}

type timeshiftTemplateArgs struct {
	// The region.`Mainland`: The Chinese mainland.`Overseas`: Outside the Chinese mainland.Default value: `Mainland`.
	Area *string `pulumi:"area"`
	// The template description.Only letters, numbers, underscores, and hyphens are supported.
	Description *string `pulumi:"description"`
	// The time shifting duration.Unit: Second.
	Duration int `pulumi:"duration"`
	// The segment size.Value range: 3-10.Unit: Second.Default value: 5.
	ItemDuration *int `pulumi:"itemDuration"`
	// Whether to remove watermarks.If you pass in `true`, the original stream will be recorded.Default value: `false`.
	RemoveWatermark *bool `pulumi:"removeWatermark"`
	// The template name.Maximum length: 255 bytes.Only letters, numbers, underscores, and hyphens are supported.
	TemplateName string `pulumi:"templateName"`
	// The transcoding template IDs.This API works only if `RemoveWatermark` is `false`.
	TranscodeTemplateIds []int `pulumi:"transcodeTemplateIds"`
}

// The set of arguments for constructing a TimeshiftTemplate resource.
type TimeshiftTemplateArgs struct {
	// The region.`Mainland`: The Chinese mainland.`Overseas`: Outside the Chinese mainland.Default value: `Mainland`.
	Area pulumi.StringPtrInput
	// The template description.Only letters, numbers, underscores, and hyphens are supported.
	Description pulumi.StringPtrInput
	// The time shifting duration.Unit: Second.
	Duration pulumi.IntInput
	// The segment size.Value range: 3-10.Unit: Second.Default value: 5.
	ItemDuration pulumi.IntPtrInput
	// Whether to remove watermarks.If you pass in `true`, the original stream will be recorded.Default value: `false`.
	RemoveWatermark pulumi.BoolPtrInput
	// The template name.Maximum length: 255 bytes.Only letters, numbers, underscores, and hyphens are supported.
	TemplateName pulumi.StringInput
	// The transcoding template IDs.This API works only if `RemoveWatermark` is `false`.
	TranscodeTemplateIds pulumi.IntArrayInput
}

func (TimeshiftTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*timeshiftTemplateArgs)(nil)).Elem()
}

type TimeshiftTemplateInput interface {
	pulumi.Input

	ToTimeshiftTemplateOutput() TimeshiftTemplateOutput
	ToTimeshiftTemplateOutputWithContext(ctx context.Context) TimeshiftTemplateOutput
}

func (*TimeshiftTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeshiftTemplate)(nil)).Elem()
}

func (i *TimeshiftTemplate) ToTimeshiftTemplateOutput() TimeshiftTemplateOutput {
	return i.ToTimeshiftTemplateOutputWithContext(context.Background())
}

func (i *TimeshiftTemplate) ToTimeshiftTemplateOutputWithContext(ctx context.Context) TimeshiftTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeshiftTemplateOutput)
}

// TimeshiftTemplateArrayInput is an input type that accepts TimeshiftTemplateArray and TimeshiftTemplateArrayOutput values.
// You can construct a concrete instance of `TimeshiftTemplateArrayInput` via:
//
//	TimeshiftTemplateArray{ TimeshiftTemplateArgs{...} }
type TimeshiftTemplateArrayInput interface {
	pulumi.Input

	ToTimeshiftTemplateArrayOutput() TimeshiftTemplateArrayOutput
	ToTimeshiftTemplateArrayOutputWithContext(context.Context) TimeshiftTemplateArrayOutput
}

type TimeshiftTemplateArray []TimeshiftTemplateInput

func (TimeshiftTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TimeshiftTemplate)(nil)).Elem()
}

func (i TimeshiftTemplateArray) ToTimeshiftTemplateArrayOutput() TimeshiftTemplateArrayOutput {
	return i.ToTimeshiftTemplateArrayOutputWithContext(context.Background())
}

func (i TimeshiftTemplateArray) ToTimeshiftTemplateArrayOutputWithContext(ctx context.Context) TimeshiftTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeshiftTemplateArrayOutput)
}

// TimeshiftTemplateMapInput is an input type that accepts TimeshiftTemplateMap and TimeshiftTemplateMapOutput values.
// You can construct a concrete instance of `TimeshiftTemplateMapInput` via:
//
//	TimeshiftTemplateMap{ "key": TimeshiftTemplateArgs{...} }
type TimeshiftTemplateMapInput interface {
	pulumi.Input

	ToTimeshiftTemplateMapOutput() TimeshiftTemplateMapOutput
	ToTimeshiftTemplateMapOutputWithContext(context.Context) TimeshiftTemplateMapOutput
}

type TimeshiftTemplateMap map[string]TimeshiftTemplateInput

func (TimeshiftTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TimeshiftTemplate)(nil)).Elem()
}

func (i TimeshiftTemplateMap) ToTimeshiftTemplateMapOutput() TimeshiftTemplateMapOutput {
	return i.ToTimeshiftTemplateMapOutputWithContext(context.Background())
}

func (i TimeshiftTemplateMap) ToTimeshiftTemplateMapOutputWithContext(ctx context.Context) TimeshiftTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeshiftTemplateMapOutput)
}

type TimeshiftTemplateOutput struct{ *pulumi.OutputState }

func (TimeshiftTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeshiftTemplate)(nil)).Elem()
}

func (o TimeshiftTemplateOutput) ToTimeshiftTemplateOutput() TimeshiftTemplateOutput {
	return o
}

func (o TimeshiftTemplateOutput) ToTimeshiftTemplateOutputWithContext(ctx context.Context) TimeshiftTemplateOutput {
	return o
}

// The region.`Mainland`: The Chinese mainland.`Overseas`: Outside the Chinese mainland.Default value: `Mainland`.
func (o TimeshiftTemplateOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.StringPtrOutput { return v.Area }).(pulumi.StringPtrOutput)
}

// The template description.Only letters, numbers, underscores, and hyphens are supported.
func (o TimeshiftTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The time shifting duration.Unit: Second.
func (o TimeshiftTemplateOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.IntOutput { return v.Duration }).(pulumi.IntOutput)
}

// The segment size.Value range: 3-10.Unit: Second.Default value: 5.
func (o TimeshiftTemplateOutput) ItemDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.IntPtrOutput { return v.ItemDuration }).(pulumi.IntPtrOutput)
}

// Whether to remove watermarks.If you pass in `true`, the original stream will be recorded.Default value: `false`.
func (o TimeshiftTemplateOutput) RemoveWatermark() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.BoolPtrOutput { return v.RemoveWatermark }).(pulumi.BoolPtrOutput)
}

// The template name.Maximum length: 255 bytes.Only letters, numbers, underscores, and hyphens are supported.
func (o TimeshiftTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.StringOutput { return v.TemplateName }).(pulumi.StringOutput)
}

// The transcoding template IDs.This API works only if `RemoveWatermark` is `false`.
func (o TimeshiftTemplateOutput) TranscodeTemplateIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TimeshiftTemplate) pulumi.IntArrayOutput { return v.TranscodeTemplateIds }).(pulumi.IntArrayOutput)
}

type TimeshiftTemplateArrayOutput struct{ *pulumi.OutputState }

func (TimeshiftTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TimeshiftTemplate)(nil)).Elem()
}

func (o TimeshiftTemplateArrayOutput) ToTimeshiftTemplateArrayOutput() TimeshiftTemplateArrayOutput {
	return o
}

func (o TimeshiftTemplateArrayOutput) ToTimeshiftTemplateArrayOutputWithContext(ctx context.Context) TimeshiftTemplateArrayOutput {
	return o
}

func (o TimeshiftTemplateArrayOutput) Index(i pulumi.IntInput) TimeshiftTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TimeshiftTemplate {
		return vs[0].([]*TimeshiftTemplate)[vs[1].(int)]
	}).(TimeshiftTemplateOutput)
}

type TimeshiftTemplateMapOutput struct{ *pulumi.OutputState }

func (TimeshiftTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TimeshiftTemplate)(nil)).Elem()
}

func (o TimeshiftTemplateMapOutput) ToTimeshiftTemplateMapOutput() TimeshiftTemplateMapOutput {
	return o
}

func (o TimeshiftTemplateMapOutput) ToTimeshiftTemplateMapOutputWithContext(ctx context.Context) TimeshiftTemplateMapOutput {
	return o
}

func (o TimeshiftTemplateMapOutput) MapIndex(k pulumi.StringInput) TimeshiftTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TimeshiftTemplate {
		return vs[0].(map[string]*TimeshiftTemplate)[vs[1].(string)]
	}).(TimeshiftTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TimeshiftTemplateInput)(nil)).Elem(), &TimeshiftTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeshiftTemplateArrayInput)(nil)).Elem(), TimeshiftTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeshiftTemplateMapInput)(nil)).Elem(), TimeshiftTemplateMap{})
	pulumi.RegisterOutputType(TimeshiftTemplateOutput{})
	pulumi.RegisterOutputType(TimeshiftTemplateArrayOutput{})
	pulumi.RegisterOutputType(TimeshiftTemplateMapOutput{})
}
