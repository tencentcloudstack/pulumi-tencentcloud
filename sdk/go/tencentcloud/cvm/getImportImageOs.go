// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cvm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cvm importImageOs
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cvm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cvm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cvm.GetImportImageOs(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetImportImageOs(ctx *pulumi.Context, args *GetImportImageOsArgs, opts ...pulumi.InvokeOption) (*GetImportImageOsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetImportImageOsResult
	err := ctx.Invoke("tencentcloud:Cvm/getImportImageOs:getImportImageOs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImportImageOs.
type GetImportImageOsArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getImportImageOs.
type GetImportImageOsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Supported operating system types of imported images.
	ImportImageOsListSupporteds []GetImportImageOsImportImageOsListSupported `pulumi:"importImageOsListSupporteds"`
	// Supported operating system versions of imported images.
	ImportImageOsVersionSets []GetImportImageOsImportImageOsVersionSet `pulumi:"importImageOsVersionSets"`
	ResultOutputFile         *string                                   `pulumi:"resultOutputFile"`
}

func GetImportImageOsOutput(ctx *pulumi.Context, args GetImportImageOsOutputArgs, opts ...pulumi.InvokeOption) GetImportImageOsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImportImageOsResult, error) {
			args := v.(GetImportImageOsArgs)
			r, err := GetImportImageOs(ctx, &args, opts...)
			var s GetImportImageOsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImportImageOsResultOutput)
}

// A collection of arguments for invoking getImportImageOs.
type GetImportImageOsOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetImportImageOsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImportImageOsArgs)(nil)).Elem()
}

// A collection of values returned by getImportImageOs.
type GetImportImageOsResultOutput struct{ *pulumi.OutputState }

func (GetImportImageOsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImportImageOsResult)(nil)).Elem()
}

func (o GetImportImageOsResultOutput) ToGetImportImageOsResultOutput() GetImportImageOsResultOutput {
	return o
}

func (o GetImportImageOsResultOutput) ToGetImportImageOsResultOutputWithContext(ctx context.Context) GetImportImageOsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetImportImageOsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImportImageOsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Supported operating system types of imported images.
func (o GetImportImageOsResultOutput) ImportImageOsListSupporteds() GetImportImageOsImportImageOsListSupportedArrayOutput {
	return o.ApplyT(func(v GetImportImageOsResult) []GetImportImageOsImportImageOsListSupported {
		return v.ImportImageOsListSupporteds
	}).(GetImportImageOsImportImageOsListSupportedArrayOutput)
}

// Supported operating system versions of imported images.
func (o GetImportImageOsResultOutput) ImportImageOsVersionSets() GetImportImageOsImportImageOsVersionSetArrayOutput {
	return o.ApplyT(func(v GetImportImageOsResult) []GetImportImageOsImportImageOsVersionSet {
		return v.ImportImageOsVersionSets
	}).(GetImportImageOsImportImageOsVersionSetArrayOutput)
}

func (o GetImportImageOsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImportImageOsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImportImageOsResultOutput{})
}
