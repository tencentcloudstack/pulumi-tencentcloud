// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cvm

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "tencentcloud:Cvm/actionTimer:ActionTimer":
		r = &ActionTimer{}
	case "tencentcloud:Cvm/chcConfig:ChcConfig":
		r = &ChcConfig{}
	case "tencentcloud:Cvm/exportImages:ExportImages":
		r = &ExportImages{}
	case "tencentcloud:Cvm/hpcCluster:HpcCluster":
		r = &HpcCluster{}
	case "tencentcloud:Cvm/imageSharePermission:ImageSharePermission":
		r = &ImageSharePermission{}
	case "tencentcloud:Cvm/importImage:ImportImage":
		r = &ImportImage{}
	case "tencentcloud:Cvm/launchTemplate:LaunchTemplate":
		r = &LaunchTemplate{}
	case "tencentcloud:Cvm/launchTemplateDefaultVersion:LaunchTemplateDefaultVersion":
		r = &LaunchTemplateDefaultVersion{}
	case "tencentcloud:Cvm/launchTemplateVersion:LaunchTemplateVersion":
		r = &LaunchTemplateVersion{}
	case "tencentcloud:Cvm/modifyInstanceDiskType:ModifyInstanceDiskType":
		r = &ModifyInstanceDiskType{}
	case "tencentcloud:Cvm/programFpgaImage:ProgramFpgaImage":
		r = &ProgramFpgaImage{}
	case "tencentcloud:Cvm/rebootInstance:RebootInstance":
		r = &RebootInstance{}
	case "tencentcloud:Cvm/renewHost:RenewHost":
		r = &RenewHost{}
	case "tencentcloud:Cvm/renewInstance:RenewInstance":
		r = &RenewInstance{}
	case "tencentcloud:Cvm/securityGroupAttachment:SecurityGroupAttachment":
		r = &SecurityGroupAttachment{}
	case "tencentcloud:Cvm/syncImage:SyncImage":
		r = &SyncImage{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/actionTimer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/chcConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/exportImages",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/hpcCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/imageSharePermission",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/importImage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/launchTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/launchTemplateDefaultVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/launchTemplateVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/modifyInstanceDiskType",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/programFpgaImage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/rebootInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/renewHost",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/renewInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/securityGroupAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Cvm/syncImage",
		&module{version},
	)
}
