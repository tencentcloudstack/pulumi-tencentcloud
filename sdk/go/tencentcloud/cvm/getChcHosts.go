// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cvm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cvm chcHosts
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cvm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cvm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cvm.GetChcHosts(ctx, &cvm.GetChcHostsArgs{
//				ChcIds: []string{
//					"chc-xxxxxx",
//				},
//				Filters: []cvm.GetChcHostsFilter{
//					cvm.GetChcHostsFilter{
//						Name: "zone",
//						Values: []string{
//							"ap-guangzhou-7",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetChcHosts(ctx *pulumi.Context, args *GetChcHostsArgs, opts ...pulumi.InvokeOption) (*GetChcHostsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetChcHostsResult
	err := ctx.Invoke("tencentcloud:Cvm/getChcHosts:getChcHosts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getChcHosts.
type GetChcHostsArgs struct {
	// CHC host ID. Up to 100 instances per request is allowed. ChcIds and Filters cannot be specified at the same time.
	ChcIds []string `pulumi:"chcIds"`
	// - `zone` Filter by the availability zone, such as ap-guangzhou-1. Valid values: See [Regions and Availability Zones](https://www.tencentcloud.com/document/product/213/6091?from_cn_redirect=1).
	// - `instance-name` Filter by the instance name.
	// - `instance-state` Filter by the instance status. For status details, see [InstanceStatus](https://www.tencentcloud.com/document/api/213/15753?from_cn_redirect=1#InstanceStatus).
	// - `device-type` Filter by the device type.
	// - `vpc-id` Filter by the unique VPC ID.
	// - `subnet-id` Filter by the unique VPC subnet ID.
	Filters []GetChcHostsFilter `pulumi:"filters"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getChcHosts.
type GetChcHostsResult struct {
	// List of returned instances.
	ChcHostSets []GetChcHostsChcHostSet `pulumi:"chcHostSets"`
	ChcIds      []string                `pulumi:"chcIds"`
	Filters     []GetChcHostsFilter     `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetChcHostsOutput(ctx *pulumi.Context, args GetChcHostsOutputArgs, opts ...pulumi.InvokeOption) GetChcHostsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetChcHostsResult, error) {
			args := v.(GetChcHostsArgs)
			r, err := GetChcHosts(ctx, &args, opts...)
			var s GetChcHostsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetChcHostsResultOutput)
}

// A collection of arguments for invoking getChcHosts.
type GetChcHostsOutputArgs struct {
	// CHC host ID. Up to 100 instances per request is allowed. ChcIds and Filters cannot be specified at the same time.
	ChcIds pulumi.StringArrayInput `pulumi:"chcIds"`
	// - `zone` Filter by the availability zone, such as ap-guangzhou-1. Valid values: See [Regions and Availability Zones](https://www.tencentcloud.com/document/product/213/6091?from_cn_redirect=1).
	// - `instance-name` Filter by the instance name.
	// - `instance-state` Filter by the instance status. For status details, see [InstanceStatus](https://www.tencentcloud.com/document/api/213/15753?from_cn_redirect=1#InstanceStatus).
	// - `device-type` Filter by the device type.
	// - `vpc-id` Filter by the unique VPC ID.
	// - `subnet-id` Filter by the unique VPC subnet ID.
	Filters GetChcHostsFilterArrayInput `pulumi:"filters"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetChcHostsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChcHostsArgs)(nil)).Elem()
}

// A collection of values returned by getChcHosts.
type GetChcHostsResultOutput struct{ *pulumi.OutputState }

func (GetChcHostsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChcHostsResult)(nil)).Elem()
}

func (o GetChcHostsResultOutput) ToGetChcHostsResultOutput() GetChcHostsResultOutput {
	return o
}

func (o GetChcHostsResultOutput) ToGetChcHostsResultOutputWithContext(ctx context.Context) GetChcHostsResultOutput {
	return o
}

// List of returned instances.
func (o GetChcHostsResultOutput) ChcHostSets() GetChcHostsChcHostSetArrayOutput {
	return o.ApplyT(func(v GetChcHostsResult) []GetChcHostsChcHostSet { return v.ChcHostSets }).(GetChcHostsChcHostSetArrayOutput)
}

func (o GetChcHostsResultOutput) ChcIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChcHostsResult) []string { return v.ChcIds }).(pulumi.StringArrayOutput)
}

func (o GetChcHostsResultOutput) Filters() GetChcHostsFilterArrayOutput {
	return o.ApplyT(func(v GetChcHostsResult) []GetChcHostsFilter { return v.Filters }).(GetChcHostsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetChcHostsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChcHostsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetChcHostsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChcHostsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetChcHostsResultOutput{})
}
