// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cvm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ModifyInstanceDiskType struct {
	pulumi.CustomResourceState

	// For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
	// converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
	// is only supported for instances of the CDHPAID type.
	DataDisks ModifyInstanceDiskTypeDataDiskArrayOutput `pulumi:"dataDisks"`
	// Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
	// be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
	SystemDisk ModifyInstanceDiskTypeSystemDiskPtrOutput `pulumi:"systemDisk"`
}

// NewModifyInstanceDiskType registers a new resource with the given unique name, arguments, and options.
func NewModifyInstanceDiskType(ctx *pulumi.Context,
	name string, args *ModifyInstanceDiskTypeArgs, opts ...pulumi.ResourceOption) (*ModifyInstanceDiskType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ModifyInstanceDiskType
	err := ctx.RegisterResource("tencentcloud:Cvm/modifyInstanceDiskType:ModifyInstanceDiskType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModifyInstanceDiskType gets an existing ModifyInstanceDiskType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModifyInstanceDiskType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModifyInstanceDiskTypeState, opts ...pulumi.ResourceOption) (*ModifyInstanceDiskType, error) {
	var resource ModifyInstanceDiskType
	err := ctx.ReadResource("tencentcloud:Cvm/modifyInstanceDiskType:ModifyInstanceDiskType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ModifyInstanceDiskType resources.
type modifyInstanceDiskTypeState struct {
	// For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
	// converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
	// is only supported for instances of the CDHPAID type.
	DataDisks []ModifyInstanceDiskTypeDataDisk `pulumi:"dataDisks"`
	// Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
	InstanceId *string `pulumi:"instanceId"`
	// For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
	// be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
	SystemDisk *ModifyInstanceDiskTypeSystemDisk `pulumi:"systemDisk"`
}

type ModifyInstanceDiskTypeState struct {
	// For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
	// converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
	// is only supported for instances of the CDHPAID type.
	DataDisks ModifyInstanceDiskTypeDataDiskArrayInput
	// Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
	InstanceId pulumi.StringPtrInput
	// For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
	// be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
	SystemDisk ModifyInstanceDiskTypeSystemDiskPtrInput
}

func (ModifyInstanceDiskTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*modifyInstanceDiskTypeState)(nil)).Elem()
}

type modifyInstanceDiskTypeArgs struct {
	// For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
	// converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
	// is only supported for instances of the CDHPAID type.
	DataDisks []ModifyInstanceDiskTypeDataDisk `pulumi:"dataDisks"`
	// Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
	InstanceId string `pulumi:"instanceId"`
	// For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
	// be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
	SystemDisk *ModifyInstanceDiskTypeSystemDisk `pulumi:"systemDisk"`
}

// The set of arguments for constructing a ModifyInstanceDiskType resource.
type ModifyInstanceDiskTypeArgs struct {
	// For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
	// converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
	// is only supported for instances of the CDHPAID type.
	DataDisks ModifyInstanceDiskTypeDataDiskArrayInput
	// Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
	InstanceId pulumi.StringInput
	// For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
	// be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
	SystemDisk ModifyInstanceDiskTypeSystemDiskPtrInput
}

func (ModifyInstanceDiskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modifyInstanceDiskTypeArgs)(nil)).Elem()
}

type ModifyInstanceDiskTypeInput interface {
	pulumi.Input

	ToModifyInstanceDiskTypeOutput() ModifyInstanceDiskTypeOutput
	ToModifyInstanceDiskTypeOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeOutput
}

func (*ModifyInstanceDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModifyInstanceDiskType)(nil)).Elem()
}

func (i *ModifyInstanceDiskType) ToModifyInstanceDiskTypeOutput() ModifyInstanceDiskTypeOutput {
	return i.ToModifyInstanceDiskTypeOutputWithContext(context.Background())
}

func (i *ModifyInstanceDiskType) ToModifyInstanceDiskTypeOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyInstanceDiskTypeOutput)
}

// ModifyInstanceDiskTypeArrayInput is an input type that accepts ModifyInstanceDiskTypeArray and ModifyInstanceDiskTypeArrayOutput values.
// You can construct a concrete instance of `ModifyInstanceDiskTypeArrayInput` via:
//
//	ModifyInstanceDiskTypeArray{ ModifyInstanceDiskTypeArgs{...} }
type ModifyInstanceDiskTypeArrayInput interface {
	pulumi.Input

	ToModifyInstanceDiskTypeArrayOutput() ModifyInstanceDiskTypeArrayOutput
	ToModifyInstanceDiskTypeArrayOutputWithContext(context.Context) ModifyInstanceDiskTypeArrayOutput
}

type ModifyInstanceDiskTypeArray []ModifyInstanceDiskTypeInput

func (ModifyInstanceDiskTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModifyInstanceDiskType)(nil)).Elem()
}

func (i ModifyInstanceDiskTypeArray) ToModifyInstanceDiskTypeArrayOutput() ModifyInstanceDiskTypeArrayOutput {
	return i.ToModifyInstanceDiskTypeArrayOutputWithContext(context.Background())
}

func (i ModifyInstanceDiskTypeArray) ToModifyInstanceDiskTypeArrayOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyInstanceDiskTypeArrayOutput)
}

// ModifyInstanceDiskTypeMapInput is an input type that accepts ModifyInstanceDiskTypeMap and ModifyInstanceDiskTypeMapOutput values.
// You can construct a concrete instance of `ModifyInstanceDiskTypeMapInput` via:
//
//	ModifyInstanceDiskTypeMap{ "key": ModifyInstanceDiskTypeArgs{...} }
type ModifyInstanceDiskTypeMapInput interface {
	pulumi.Input

	ToModifyInstanceDiskTypeMapOutput() ModifyInstanceDiskTypeMapOutput
	ToModifyInstanceDiskTypeMapOutputWithContext(context.Context) ModifyInstanceDiskTypeMapOutput
}

type ModifyInstanceDiskTypeMap map[string]ModifyInstanceDiskTypeInput

func (ModifyInstanceDiskTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModifyInstanceDiskType)(nil)).Elem()
}

func (i ModifyInstanceDiskTypeMap) ToModifyInstanceDiskTypeMapOutput() ModifyInstanceDiskTypeMapOutput {
	return i.ToModifyInstanceDiskTypeMapOutputWithContext(context.Background())
}

func (i ModifyInstanceDiskTypeMap) ToModifyInstanceDiskTypeMapOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyInstanceDiskTypeMapOutput)
}

type ModifyInstanceDiskTypeOutput struct{ *pulumi.OutputState }

func (ModifyInstanceDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModifyInstanceDiskType)(nil)).Elem()
}

func (o ModifyInstanceDiskTypeOutput) ToModifyInstanceDiskTypeOutput() ModifyInstanceDiskTypeOutput {
	return o
}

func (o ModifyInstanceDiskTypeOutput) ToModifyInstanceDiskTypeOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeOutput {
	return o
}

// For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
// converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
// is only supported for instances of the CDHPAID type.
func (o ModifyInstanceDiskTypeOutput) DataDisks() ModifyInstanceDiskTypeDataDiskArrayOutput {
	return o.ApplyT(func(v *ModifyInstanceDiskType) ModifyInstanceDiskTypeDataDiskArrayOutput { return v.DataDisks }).(ModifyInstanceDiskTypeDataDiskArrayOutput)
}

// Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
func (o ModifyInstanceDiskTypeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ModifyInstanceDiskType) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
// be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
func (o ModifyInstanceDiskTypeOutput) SystemDisk() ModifyInstanceDiskTypeSystemDiskPtrOutput {
	return o.ApplyT(func(v *ModifyInstanceDiskType) ModifyInstanceDiskTypeSystemDiskPtrOutput { return v.SystemDisk }).(ModifyInstanceDiskTypeSystemDiskPtrOutput)
}

type ModifyInstanceDiskTypeArrayOutput struct{ *pulumi.OutputState }

func (ModifyInstanceDiskTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModifyInstanceDiskType)(nil)).Elem()
}

func (o ModifyInstanceDiskTypeArrayOutput) ToModifyInstanceDiskTypeArrayOutput() ModifyInstanceDiskTypeArrayOutput {
	return o
}

func (o ModifyInstanceDiskTypeArrayOutput) ToModifyInstanceDiskTypeArrayOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeArrayOutput {
	return o
}

func (o ModifyInstanceDiskTypeArrayOutput) Index(i pulumi.IntInput) ModifyInstanceDiskTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ModifyInstanceDiskType {
		return vs[0].([]*ModifyInstanceDiskType)[vs[1].(int)]
	}).(ModifyInstanceDiskTypeOutput)
}

type ModifyInstanceDiskTypeMapOutput struct{ *pulumi.OutputState }

func (ModifyInstanceDiskTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModifyInstanceDiskType)(nil)).Elem()
}

func (o ModifyInstanceDiskTypeMapOutput) ToModifyInstanceDiskTypeMapOutput() ModifyInstanceDiskTypeMapOutput {
	return o
}

func (o ModifyInstanceDiskTypeMapOutput) ToModifyInstanceDiskTypeMapOutputWithContext(ctx context.Context) ModifyInstanceDiskTypeMapOutput {
	return o
}

func (o ModifyInstanceDiskTypeMapOutput) MapIndex(k pulumi.StringInput) ModifyInstanceDiskTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ModifyInstanceDiskType {
		return vs[0].(map[string]*ModifyInstanceDiskType)[vs[1].(string)]
	}).(ModifyInstanceDiskTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyInstanceDiskTypeInput)(nil)).Elem(), &ModifyInstanceDiskType{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyInstanceDiskTypeArrayInput)(nil)).Elem(), ModifyInstanceDiskTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModifyInstanceDiskTypeMapInput)(nil)).Elem(), ModifyInstanceDiskTypeMap{})
	pulumi.RegisterOutputType(ModifyInstanceDiskTypeOutput{})
	pulumi.RegisterOutputType(ModifyInstanceDiskTypeArrayOutput{})
	pulumi.RegisterOutputType(ModifyInstanceDiskTypeMapOutput{})
}
