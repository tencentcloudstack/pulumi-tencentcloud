// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cvm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cvm imageSharePermission
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cvm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cvm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cvm.GetImageSharePermission(ctx, &cvm.GetImageSharePermissionArgs{
//				ImageId: "img-xxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupImageSharePermission(ctx *pulumi.Context, args *LookupImageSharePermissionArgs, opts ...pulumi.InvokeOption) (*LookupImageSharePermissionResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupImageSharePermissionResult
	err := ctx.Invoke("tencentcloud:Cvm/getImageSharePermission:getImageSharePermission", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageSharePermission.
type LookupImageSharePermissionArgs struct {
	// The ID of the image to be shared.
	ImageId string `pulumi:"imageId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getImageSharePermission.
type LookupImageSharePermissionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ImageId          string  `pulumi:"imageId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Information on image sharing.
	SharePermissionSets []GetImageSharePermissionSharePermissionSet `pulumi:"sharePermissionSets"`
}

func LookupImageSharePermissionOutput(ctx *pulumi.Context, args LookupImageSharePermissionOutputArgs, opts ...pulumi.InvokeOption) LookupImageSharePermissionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageSharePermissionResult, error) {
			args := v.(LookupImageSharePermissionArgs)
			r, err := LookupImageSharePermission(ctx, &args, opts...)
			var s LookupImageSharePermissionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageSharePermissionResultOutput)
}

// A collection of arguments for invoking getImageSharePermission.
type LookupImageSharePermissionOutputArgs struct {
	// The ID of the image to be shared.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (LookupImageSharePermissionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageSharePermissionArgs)(nil)).Elem()
}

// A collection of values returned by getImageSharePermission.
type LookupImageSharePermissionResultOutput struct{ *pulumi.OutputState }

func (LookupImageSharePermissionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageSharePermissionResult)(nil)).Elem()
}

func (o LookupImageSharePermissionResultOutput) ToLookupImageSharePermissionResultOutput() LookupImageSharePermissionResultOutput {
	return o
}

func (o LookupImageSharePermissionResultOutput) ToLookupImageSharePermissionResultOutputWithContext(ctx context.Context) LookupImageSharePermissionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImageSharePermissionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageSharePermissionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImageSharePermissionResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageSharePermissionResult) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o LookupImageSharePermissionResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageSharePermissionResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Information on image sharing.
func (o LookupImageSharePermissionResultOutput) SharePermissionSets() GetImageSharePermissionSharePermissionSetArrayOutput {
	return o.ApplyT(func(v LookupImageSharePermissionResult) []GetImageSharePermissionSharePermissionSet {
		return v.SharePermissionSets
	}).(GetImageSharePermissionSharePermissionSetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageSharePermissionResultOutput{})
}
