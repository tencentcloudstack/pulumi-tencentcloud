// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dc internetAddressConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			internetAddress, err := Dc.NewInternetAddress(ctx, "internetAddress", &Dc.InternetAddressArgs{
//				MaskLen:   pulumi.Int(30),
//				AddrType:  pulumi.Int(2),
//				AddrProto: pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Dc.NewInternetAddressConfig(ctx, "internetAddressConfig", &Dc.InternetAddressConfigArgs{
//				InstanceId: internetAddress.ID(),
//				Enable:     pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// dc internet_address_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dc/internetAddressConfig:InternetAddressConfig internet_address_config internet_address_id
//
// ```
type InternetAddressConfig struct {
	pulumi.CustomResourceState

	// whether enable internet address.
	Enable pulumi.BoolOutput `pulumi:"enable"`
	// internet public address id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewInternetAddressConfig registers a new resource with the given unique name, arguments, and options.
func NewInternetAddressConfig(ctx *pulumi.Context,
	name string, args *InternetAddressConfigArgs, opts ...pulumi.ResourceOption) (*InternetAddressConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enable == nil {
		return nil, errors.New("invalid value for required argument 'Enable'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InternetAddressConfig
	err := ctx.RegisterResource("tencentcloud:Dc/internetAddressConfig:InternetAddressConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetAddressConfig gets an existing InternetAddressConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetAddressConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetAddressConfigState, opts ...pulumi.ResourceOption) (*InternetAddressConfig, error) {
	var resource InternetAddressConfig
	err := ctx.ReadResource("tencentcloud:Dc/internetAddressConfig:InternetAddressConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InternetAddressConfig resources.
type internetAddressConfigState struct {
	// whether enable internet address.
	Enable *bool `pulumi:"enable"`
	// internet public address id.
	InstanceId *string `pulumi:"instanceId"`
}

type InternetAddressConfigState struct {
	// whether enable internet address.
	Enable pulumi.BoolPtrInput
	// internet public address id.
	InstanceId pulumi.StringPtrInput
}

func (InternetAddressConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetAddressConfigState)(nil)).Elem()
}

type internetAddressConfigArgs struct {
	// whether enable internet address.
	Enable bool `pulumi:"enable"`
	// internet public address id.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a InternetAddressConfig resource.
type InternetAddressConfigArgs struct {
	// whether enable internet address.
	Enable pulumi.BoolInput
	// internet public address id.
	InstanceId pulumi.StringInput
}

func (InternetAddressConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetAddressConfigArgs)(nil)).Elem()
}

type InternetAddressConfigInput interface {
	pulumi.Input

	ToInternetAddressConfigOutput() InternetAddressConfigOutput
	ToInternetAddressConfigOutputWithContext(ctx context.Context) InternetAddressConfigOutput
}

func (*InternetAddressConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetAddressConfig)(nil)).Elem()
}

func (i *InternetAddressConfig) ToInternetAddressConfigOutput() InternetAddressConfigOutput {
	return i.ToInternetAddressConfigOutputWithContext(context.Background())
}

func (i *InternetAddressConfig) ToInternetAddressConfigOutputWithContext(ctx context.Context) InternetAddressConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetAddressConfigOutput)
}

// InternetAddressConfigArrayInput is an input type that accepts InternetAddressConfigArray and InternetAddressConfigArrayOutput values.
// You can construct a concrete instance of `InternetAddressConfigArrayInput` via:
//
//	InternetAddressConfigArray{ InternetAddressConfigArgs{...} }
type InternetAddressConfigArrayInput interface {
	pulumi.Input

	ToInternetAddressConfigArrayOutput() InternetAddressConfigArrayOutput
	ToInternetAddressConfigArrayOutputWithContext(context.Context) InternetAddressConfigArrayOutput
}

type InternetAddressConfigArray []InternetAddressConfigInput

func (InternetAddressConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InternetAddressConfig)(nil)).Elem()
}

func (i InternetAddressConfigArray) ToInternetAddressConfigArrayOutput() InternetAddressConfigArrayOutput {
	return i.ToInternetAddressConfigArrayOutputWithContext(context.Background())
}

func (i InternetAddressConfigArray) ToInternetAddressConfigArrayOutputWithContext(ctx context.Context) InternetAddressConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetAddressConfigArrayOutput)
}

// InternetAddressConfigMapInput is an input type that accepts InternetAddressConfigMap and InternetAddressConfigMapOutput values.
// You can construct a concrete instance of `InternetAddressConfigMapInput` via:
//
//	InternetAddressConfigMap{ "key": InternetAddressConfigArgs{...} }
type InternetAddressConfigMapInput interface {
	pulumi.Input

	ToInternetAddressConfigMapOutput() InternetAddressConfigMapOutput
	ToInternetAddressConfigMapOutputWithContext(context.Context) InternetAddressConfigMapOutput
}

type InternetAddressConfigMap map[string]InternetAddressConfigInput

func (InternetAddressConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InternetAddressConfig)(nil)).Elem()
}

func (i InternetAddressConfigMap) ToInternetAddressConfigMapOutput() InternetAddressConfigMapOutput {
	return i.ToInternetAddressConfigMapOutputWithContext(context.Background())
}

func (i InternetAddressConfigMap) ToInternetAddressConfigMapOutputWithContext(ctx context.Context) InternetAddressConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetAddressConfigMapOutput)
}

type InternetAddressConfigOutput struct{ *pulumi.OutputState }

func (InternetAddressConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetAddressConfig)(nil)).Elem()
}

func (o InternetAddressConfigOutput) ToInternetAddressConfigOutput() InternetAddressConfigOutput {
	return o
}

func (o InternetAddressConfigOutput) ToInternetAddressConfigOutputWithContext(ctx context.Context) InternetAddressConfigOutput {
	return o
}

// whether enable internet address.
func (o InternetAddressConfigOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v *InternetAddressConfig) pulumi.BoolOutput { return v.Enable }).(pulumi.BoolOutput)
}

// internet public address id.
func (o InternetAddressConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InternetAddressConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type InternetAddressConfigArrayOutput struct{ *pulumi.OutputState }

func (InternetAddressConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InternetAddressConfig)(nil)).Elem()
}

func (o InternetAddressConfigArrayOutput) ToInternetAddressConfigArrayOutput() InternetAddressConfigArrayOutput {
	return o
}

func (o InternetAddressConfigArrayOutput) ToInternetAddressConfigArrayOutputWithContext(ctx context.Context) InternetAddressConfigArrayOutput {
	return o
}

func (o InternetAddressConfigArrayOutput) Index(i pulumi.IntInput) InternetAddressConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InternetAddressConfig {
		return vs[0].([]*InternetAddressConfig)[vs[1].(int)]
	}).(InternetAddressConfigOutput)
}

type InternetAddressConfigMapOutput struct{ *pulumi.OutputState }

func (InternetAddressConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InternetAddressConfig)(nil)).Elem()
}

func (o InternetAddressConfigMapOutput) ToInternetAddressConfigMapOutput() InternetAddressConfigMapOutput {
	return o
}

func (o InternetAddressConfigMapOutput) ToInternetAddressConfigMapOutputWithContext(ctx context.Context) InternetAddressConfigMapOutput {
	return o
}

func (o InternetAddressConfigMapOutput) MapIndex(k pulumi.StringInput) InternetAddressConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InternetAddressConfig {
		return vs[0].(map[string]*InternetAddressConfig)[vs[1].(string)]
	}).(InternetAddressConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InternetAddressConfigInput)(nil)).Elem(), &InternetAddressConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetAddressConfigArrayInput)(nil)).Elem(), InternetAddressConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetAddressConfigMapInput)(nil)).Elem(), InternetAddressConfigMap{})
	pulumi.RegisterOutputType(InternetAddressConfigOutput{})
	pulumi.RegisterOutputType(InternetAddressConfigArrayOutput{})
	pulumi.RegisterOutputType(InternetAddressConfigMapOutput{})
}
