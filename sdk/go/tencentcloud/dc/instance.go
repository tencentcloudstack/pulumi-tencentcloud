// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dc instance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dc.NewInstance(ctx, "instance", &Dc.InstanceArgs{
//				AccessPointId:         pulumi.String("ap-shenzhen-b-ft"),
//				Bandwidth:             pulumi.Int(10),
//				CustomerContactNumber: pulumi.String("0"),
//				DirectConnectName:     pulumi.String("terraform-for-test"),
//				LineOperator:          pulumi.String("In-houseWiring"),
//				PortType:              pulumi.String("10GBase-LR"),
//				SignLaw:               pulumi.Bool(true),
//				Vlan:                  -1,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// dc instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dc/instance:Instance instance dc_id
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Access point of connection.You can call `DescribeAccessPoints` to get the region ID. The selected access point must exist and be available.
	AccessPointId pulumi.StringOutput `pulumi:"accessPointId"`
	// Connection port bandwidth in Mbps. Value range: [2,10240]. Default value: 1000.
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// Circuit code of a connection, which is provided by the ISP or connection provider.
	CircuitCode pulumi.StringPtrOutput `pulumi:"circuitCode"`
	// User-side IP address for connection debugging, which is automatically assigned by default.
	CustomerAddress pulumi.StringPtrOutput `pulumi:"customerAddress"`
	// Email address of connection applicant, which is obtained from the account system by default.
	CustomerContactMail pulumi.StringPtrOutput `pulumi:"customerContactMail"`
	// Contact number of connection applicant, which is obtained from the account system by default.
	CustomerContactNumber pulumi.StringPtrOutput `pulumi:"customerContactNumber"`
	// Name of connection applicant, which is obtained from the account system by default.
	CustomerName pulumi.StringPtrOutput `pulumi:"customerName"`
	// Connection name.
	DirectConnectName pulumi.StringOutput `pulumi:"directConnectName"`
	// Fault reporting contact number.
	FaultReportContactNumber pulumi.StringPtrOutput `pulumi:"faultReportContactNumber"`
	// Fault reporting contact person.
	FaultReportContactPerson pulumi.StringPtrOutput `pulumi:"faultReportContactPerson"`
	// ISP that provides connections. Valid values: ChinaTelecom (China Telecom), ChinaMobile (China Mobile), ChinaUnicom (China Unicom), In-houseWiring (in-house wiring), ChinaOther (other Chinese ISPs), InternationalOperator (international ISPs).
	LineOperator pulumi.StringOutput `pulumi:"lineOperator"`
	// Local IDC location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Port type of connection. Valid values: 100Base-T (100-Megabit electrical Ethernet interface), 1000Base-T (1-Gigabit electrical Ethernet interface), 1000Base-LX (1-Gigabit single-module optical Ethernet interface; 10 KM), 10GBase-T (10-Gigabit electrical Ethernet interface), 10GBase-LR (10-Gigabit single-module optical Ethernet interface; 10 KM). Default value: 1000Base-LX.
	PortType pulumi.StringOutput `pulumi:"portType"`
	// ID of redundant connection.
	RedundantDirectConnectId pulumi.StringPtrOutput `pulumi:"redundantDirectConnectId"`
	// Whether the connection applicant has signed the service agreement. Default value: true.
	SignLaw pulumi.BoolPtrOutput `pulumi:"signLaw"`
	// Tencent-side IP address for connection debugging, which is automatically assigned by default.
	TencentAddress pulumi.StringPtrOutput `pulumi:"tencentAddress"`
	// VLAN for connection debugging, which is enabled and automatically assigned by default.
	Vlan pulumi.IntPtrOutput `pulumi:"vlan"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessPointId == nil {
		return nil, errors.New("invalid value for required argument 'AccessPointId'")
	}
	if args.DirectConnectName == nil {
		return nil, errors.New("invalid value for required argument 'DirectConnectName'")
	}
	if args.LineOperator == nil {
		return nil, errors.New("invalid value for required argument 'LineOperator'")
	}
	if args.PortType == nil {
		return nil, errors.New("invalid value for required argument 'PortType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("tencentcloud:Dc/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("tencentcloud:Dc/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Access point of connection.You can call `DescribeAccessPoints` to get the region ID. The selected access point must exist and be available.
	AccessPointId *string `pulumi:"accessPointId"`
	// Connection port bandwidth in Mbps. Value range: [2,10240]. Default value: 1000.
	Bandwidth *int `pulumi:"bandwidth"`
	// Circuit code of a connection, which is provided by the ISP or connection provider.
	CircuitCode *string `pulumi:"circuitCode"`
	// User-side IP address for connection debugging, which is automatically assigned by default.
	CustomerAddress *string `pulumi:"customerAddress"`
	// Email address of connection applicant, which is obtained from the account system by default.
	CustomerContactMail *string `pulumi:"customerContactMail"`
	// Contact number of connection applicant, which is obtained from the account system by default.
	CustomerContactNumber *string `pulumi:"customerContactNumber"`
	// Name of connection applicant, which is obtained from the account system by default.
	CustomerName *string `pulumi:"customerName"`
	// Connection name.
	DirectConnectName *string `pulumi:"directConnectName"`
	// Fault reporting contact number.
	FaultReportContactNumber *string `pulumi:"faultReportContactNumber"`
	// Fault reporting contact person.
	FaultReportContactPerson *string `pulumi:"faultReportContactPerson"`
	// ISP that provides connections. Valid values: ChinaTelecom (China Telecom), ChinaMobile (China Mobile), ChinaUnicom (China Unicom), In-houseWiring (in-house wiring), ChinaOther (other Chinese ISPs), InternationalOperator (international ISPs).
	LineOperator *string `pulumi:"lineOperator"`
	// Local IDC location.
	Location *string `pulumi:"location"`
	// Port type of connection. Valid values: 100Base-T (100-Megabit electrical Ethernet interface), 1000Base-T (1-Gigabit electrical Ethernet interface), 1000Base-LX (1-Gigabit single-module optical Ethernet interface; 10 KM), 10GBase-T (10-Gigabit electrical Ethernet interface), 10GBase-LR (10-Gigabit single-module optical Ethernet interface; 10 KM). Default value: 1000Base-LX.
	PortType *string `pulumi:"portType"`
	// ID of redundant connection.
	RedundantDirectConnectId *string `pulumi:"redundantDirectConnectId"`
	// Whether the connection applicant has signed the service agreement. Default value: true.
	SignLaw *bool `pulumi:"signLaw"`
	// Tencent-side IP address for connection debugging, which is automatically assigned by default.
	TencentAddress *string `pulumi:"tencentAddress"`
	// VLAN for connection debugging, which is enabled and automatically assigned by default.
	Vlan *int `pulumi:"vlan"`
}

type InstanceState struct {
	// Access point of connection.You can call `DescribeAccessPoints` to get the region ID. The selected access point must exist and be available.
	AccessPointId pulumi.StringPtrInput
	// Connection port bandwidth in Mbps. Value range: [2,10240]. Default value: 1000.
	Bandwidth pulumi.IntPtrInput
	// Circuit code of a connection, which is provided by the ISP or connection provider.
	CircuitCode pulumi.StringPtrInput
	// User-side IP address for connection debugging, which is automatically assigned by default.
	CustomerAddress pulumi.StringPtrInput
	// Email address of connection applicant, which is obtained from the account system by default.
	CustomerContactMail pulumi.StringPtrInput
	// Contact number of connection applicant, which is obtained from the account system by default.
	CustomerContactNumber pulumi.StringPtrInput
	// Name of connection applicant, which is obtained from the account system by default.
	CustomerName pulumi.StringPtrInput
	// Connection name.
	DirectConnectName pulumi.StringPtrInput
	// Fault reporting contact number.
	FaultReportContactNumber pulumi.StringPtrInput
	// Fault reporting contact person.
	FaultReportContactPerson pulumi.StringPtrInput
	// ISP that provides connections. Valid values: ChinaTelecom (China Telecom), ChinaMobile (China Mobile), ChinaUnicom (China Unicom), In-houseWiring (in-house wiring), ChinaOther (other Chinese ISPs), InternationalOperator (international ISPs).
	LineOperator pulumi.StringPtrInput
	// Local IDC location.
	Location pulumi.StringPtrInput
	// Port type of connection. Valid values: 100Base-T (100-Megabit electrical Ethernet interface), 1000Base-T (1-Gigabit electrical Ethernet interface), 1000Base-LX (1-Gigabit single-module optical Ethernet interface; 10 KM), 10GBase-T (10-Gigabit electrical Ethernet interface), 10GBase-LR (10-Gigabit single-module optical Ethernet interface; 10 KM). Default value: 1000Base-LX.
	PortType pulumi.StringPtrInput
	// ID of redundant connection.
	RedundantDirectConnectId pulumi.StringPtrInput
	// Whether the connection applicant has signed the service agreement. Default value: true.
	SignLaw pulumi.BoolPtrInput
	// Tencent-side IP address for connection debugging, which is automatically assigned by default.
	TencentAddress pulumi.StringPtrInput
	// VLAN for connection debugging, which is enabled and automatically assigned by default.
	Vlan pulumi.IntPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Access point of connection.You can call `DescribeAccessPoints` to get the region ID. The selected access point must exist and be available.
	AccessPointId string `pulumi:"accessPointId"`
	// Connection port bandwidth in Mbps. Value range: [2,10240]. Default value: 1000.
	Bandwidth *int `pulumi:"bandwidth"`
	// Circuit code of a connection, which is provided by the ISP or connection provider.
	CircuitCode *string `pulumi:"circuitCode"`
	// User-side IP address for connection debugging, which is automatically assigned by default.
	CustomerAddress *string `pulumi:"customerAddress"`
	// Email address of connection applicant, which is obtained from the account system by default.
	CustomerContactMail *string `pulumi:"customerContactMail"`
	// Contact number of connection applicant, which is obtained from the account system by default.
	CustomerContactNumber *string `pulumi:"customerContactNumber"`
	// Name of connection applicant, which is obtained from the account system by default.
	CustomerName *string `pulumi:"customerName"`
	// Connection name.
	DirectConnectName string `pulumi:"directConnectName"`
	// Fault reporting contact number.
	FaultReportContactNumber *string `pulumi:"faultReportContactNumber"`
	// Fault reporting contact person.
	FaultReportContactPerson *string `pulumi:"faultReportContactPerson"`
	// ISP that provides connections. Valid values: ChinaTelecom (China Telecom), ChinaMobile (China Mobile), ChinaUnicom (China Unicom), In-houseWiring (in-house wiring), ChinaOther (other Chinese ISPs), InternationalOperator (international ISPs).
	LineOperator string `pulumi:"lineOperator"`
	// Local IDC location.
	Location *string `pulumi:"location"`
	// Port type of connection. Valid values: 100Base-T (100-Megabit electrical Ethernet interface), 1000Base-T (1-Gigabit electrical Ethernet interface), 1000Base-LX (1-Gigabit single-module optical Ethernet interface; 10 KM), 10GBase-T (10-Gigabit electrical Ethernet interface), 10GBase-LR (10-Gigabit single-module optical Ethernet interface; 10 KM). Default value: 1000Base-LX.
	PortType string `pulumi:"portType"`
	// ID of redundant connection.
	RedundantDirectConnectId *string `pulumi:"redundantDirectConnectId"`
	// Whether the connection applicant has signed the service agreement. Default value: true.
	SignLaw *bool `pulumi:"signLaw"`
	// Tencent-side IP address for connection debugging, which is automatically assigned by default.
	TencentAddress *string `pulumi:"tencentAddress"`
	// VLAN for connection debugging, which is enabled and automatically assigned by default.
	Vlan *int `pulumi:"vlan"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Access point of connection.You can call `DescribeAccessPoints` to get the region ID. The selected access point must exist and be available.
	AccessPointId pulumi.StringInput
	// Connection port bandwidth in Mbps. Value range: [2,10240]. Default value: 1000.
	Bandwidth pulumi.IntPtrInput
	// Circuit code of a connection, which is provided by the ISP or connection provider.
	CircuitCode pulumi.StringPtrInput
	// User-side IP address for connection debugging, which is automatically assigned by default.
	CustomerAddress pulumi.StringPtrInput
	// Email address of connection applicant, which is obtained from the account system by default.
	CustomerContactMail pulumi.StringPtrInput
	// Contact number of connection applicant, which is obtained from the account system by default.
	CustomerContactNumber pulumi.StringPtrInput
	// Name of connection applicant, which is obtained from the account system by default.
	CustomerName pulumi.StringPtrInput
	// Connection name.
	DirectConnectName pulumi.StringInput
	// Fault reporting contact number.
	FaultReportContactNumber pulumi.StringPtrInput
	// Fault reporting contact person.
	FaultReportContactPerson pulumi.StringPtrInput
	// ISP that provides connections. Valid values: ChinaTelecom (China Telecom), ChinaMobile (China Mobile), ChinaUnicom (China Unicom), In-houseWiring (in-house wiring), ChinaOther (other Chinese ISPs), InternationalOperator (international ISPs).
	LineOperator pulumi.StringInput
	// Local IDC location.
	Location pulumi.StringPtrInput
	// Port type of connection. Valid values: 100Base-T (100-Megabit electrical Ethernet interface), 1000Base-T (1-Gigabit electrical Ethernet interface), 1000Base-LX (1-Gigabit single-module optical Ethernet interface; 10 KM), 10GBase-T (10-Gigabit electrical Ethernet interface), 10GBase-LR (10-Gigabit single-module optical Ethernet interface; 10 KM). Default value: 1000Base-LX.
	PortType pulumi.StringInput
	// ID of redundant connection.
	RedundantDirectConnectId pulumi.StringPtrInput
	// Whether the connection applicant has signed the service agreement. Default value: true.
	SignLaw pulumi.BoolPtrInput
	// Tencent-side IP address for connection debugging, which is automatically assigned by default.
	TencentAddress pulumi.StringPtrInput
	// VLAN for connection debugging, which is enabled and automatically assigned by default.
	Vlan pulumi.IntPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Access point of connection.You can call `DescribeAccessPoints` to get the region ID. The selected access point must exist and be available.
func (o InstanceOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AccessPointId }).(pulumi.StringOutput)
}

// Connection port bandwidth in Mbps. Value range: [2,10240]. Default value: 1000.
func (o InstanceOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// Circuit code of a connection, which is provided by the ISP or connection provider.
func (o InstanceOutput) CircuitCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CircuitCode }).(pulumi.StringPtrOutput)
}

// User-side IP address for connection debugging, which is automatically assigned by default.
func (o InstanceOutput) CustomerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CustomerAddress }).(pulumi.StringPtrOutput)
}

// Email address of connection applicant, which is obtained from the account system by default.
func (o InstanceOutput) CustomerContactMail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CustomerContactMail }).(pulumi.StringPtrOutput)
}

// Contact number of connection applicant, which is obtained from the account system by default.
func (o InstanceOutput) CustomerContactNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CustomerContactNumber }).(pulumi.StringPtrOutput)
}

// Name of connection applicant, which is obtained from the account system by default.
func (o InstanceOutput) CustomerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CustomerName }).(pulumi.StringPtrOutput)
}

// Connection name.
func (o InstanceOutput) DirectConnectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DirectConnectName }).(pulumi.StringOutput)
}

// Fault reporting contact number.
func (o InstanceOutput) FaultReportContactNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.FaultReportContactNumber }).(pulumi.StringPtrOutput)
}

// Fault reporting contact person.
func (o InstanceOutput) FaultReportContactPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.FaultReportContactPerson }).(pulumi.StringPtrOutput)
}

// ISP that provides connections. Valid values: ChinaTelecom (China Telecom), ChinaMobile (China Mobile), ChinaUnicom (China Unicom), In-houseWiring (in-house wiring), ChinaOther (other Chinese ISPs), InternationalOperator (international ISPs).
func (o InstanceOutput) LineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LineOperator }).(pulumi.StringOutput)
}

// Local IDC location.
func (o InstanceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Port type of connection. Valid values: 100Base-T (100-Megabit electrical Ethernet interface), 1000Base-T (1-Gigabit electrical Ethernet interface), 1000Base-LX (1-Gigabit single-module optical Ethernet interface; 10 KM), 10GBase-T (10-Gigabit electrical Ethernet interface), 10GBase-LR (10-Gigabit single-module optical Ethernet interface; 10 KM). Default value: 1000Base-LX.
func (o InstanceOutput) PortType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PortType }).(pulumi.StringOutput)
}

// ID of redundant connection.
func (o InstanceOutput) RedundantDirectConnectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.RedundantDirectConnectId }).(pulumi.StringPtrOutput)
}

// Whether the connection applicant has signed the service agreement. Default value: true.
func (o InstanceOutput) SignLaw() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.SignLaw }).(pulumi.BoolPtrOutput)
}

// Tencent-side IP address for connection debugging, which is automatically assigned by default.
func (o InstanceOutput) TencentAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.TencentAddress }).(pulumi.StringPtrOutput)
}

// VLAN for connection debugging, which is enabled and automatically assigned by default.
func (o InstanceOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Vlan }).(pulumi.IntPtrOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
