// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dc internetAddress
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dc.NewInternetAddress(ctx, "internetAddress", &Dc.InternetAddressArgs{
//				AddrProto: pulumi.Int(0),
//				AddrType:  pulumi.Int(2),
//				MaskLen:   pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// dc internet_address can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dc/internetAddress:InternetAddress internet_address internet_address_id
//
// ```
type InternetAddress struct {
	pulumi.CustomResourceState

	// 0: IPv4, 1: IPv6.
	AddrProto pulumi.IntOutput `pulumi:"addrProto"`
	// 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
	AddrType pulumi.IntOutput `pulumi:"addrType"`
	// CIDR address mask.
	MaskLen pulumi.IntOutput `pulumi:"maskLen"`
}

// NewInternetAddress registers a new resource with the given unique name, arguments, and options.
func NewInternetAddress(ctx *pulumi.Context,
	name string, args *InternetAddressArgs, opts ...pulumi.ResourceOption) (*InternetAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddrProto == nil {
		return nil, errors.New("invalid value for required argument 'AddrProto'")
	}
	if args.AddrType == nil {
		return nil, errors.New("invalid value for required argument 'AddrType'")
	}
	if args.MaskLen == nil {
		return nil, errors.New("invalid value for required argument 'MaskLen'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InternetAddress
	err := ctx.RegisterResource("tencentcloud:Dc/internetAddress:InternetAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetAddress gets an existing InternetAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetAddressState, opts ...pulumi.ResourceOption) (*InternetAddress, error) {
	var resource InternetAddress
	err := ctx.ReadResource("tencentcloud:Dc/internetAddress:InternetAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InternetAddress resources.
type internetAddressState struct {
	// 0: IPv4, 1: IPv6.
	AddrProto *int `pulumi:"addrProto"`
	// 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
	AddrType *int `pulumi:"addrType"`
	// CIDR address mask.
	MaskLen *int `pulumi:"maskLen"`
}

type InternetAddressState struct {
	// 0: IPv4, 1: IPv6.
	AddrProto pulumi.IntPtrInput
	// 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
	AddrType pulumi.IntPtrInput
	// CIDR address mask.
	MaskLen pulumi.IntPtrInput
}

func (InternetAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetAddressState)(nil)).Elem()
}

type internetAddressArgs struct {
	// 0: IPv4, 1: IPv6.
	AddrProto int `pulumi:"addrProto"`
	// 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
	AddrType int `pulumi:"addrType"`
	// CIDR address mask.
	MaskLen int `pulumi:"maskLen"`
}

// The set of arguments for constructing a InternetAddress resource.
type InternetAddressArgs struct {
	// 0: IPv4, 1: IPv6.
	AddrProto pulumi.IntInput
	// 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
	AddrType pulumi.IntInput
	// CIDR address mask.
	MaskLen pulumi.IntInput
}

func (InternetAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetAddressArgs)(nil)).Elem()
}

type InternetAddressInput interface {
	pulumi.Input

	ToInternetAddressOutput() InternetAddressOutput
	ToInternetAddressOutputWithContext(ctx context.Context) InternetAddressOutput
}

func (*InternetAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetAddress)(nil)).Elem()
}

func (i *InternetAddress) ToInternetAddressOutput() InternetAddressOutput {
	return i.ToInternetAddressOutputWithContext(context.Background())
}

func (i *InternetAddress) ToInternetAddressOutputWithContext(ctx context.Context) InternetAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetAddressOutput)
}

// InternetAddressArrayInput is an input type that accepts InternetAddressArray and InternetAddressArrayOutput values.
// You can construct a concrete instance of `InternetAddressArrayInput` via:
//
//	InternetAddressArray{ InternetAddressArgs{...} }
type InternetAddressArrayInput interface {
	pulumi.Input

	ToInternetAddressArrayOutput() InternetAddressArrayOutput
	ToInternetAddressArrayOutputWithContext(context.Context) InternetAddressArrayOutput
}

type InternetAddressArray []InternetAddressInput

func (InternetAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InternetAddress)(nil)).Elem()
}

func (i InternetAddressArray) ToInternetAddressArrayOutput() InternetAddressArrayOutput {
	return i.ToInternetAddressArrayOutputWithContext(context.Background())
}

func (i InternetAddressArray) ToInternetAddressArrayOutputWithContext(ctx context.Context) InternetAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetAddressArrayOutput)
}

// InternetAddressMapInput is an input type that accepts InternetAddressMap and InternetAddressMapOutput values.
// You can construct a concrete instance of `InternetAddressMapInput` via:
//
//	InternetAddressMap{ "key": InternetAddressArgs{...} }
type InternetAddressMapInput interface {
	pulumi.Input

	ToInternetAddressMapOutput() InternetAddressMapOutput
	ToInternetAddressMapOutputWithContext(context.Context) InternetAddressMapOutput
}

type InternetAddressMap map[string]InternetAddressInput

func (InternetAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InternetAddress)(nil)).Elem()
}

func (i InternetAddressMap) ToInternetAddressMapOutput() InternetAddressMapOutput {
	return i.ToInternetAddressMapOutputWithContext(context.Background())
}

func (i InternetAddressMap) ToInternetAddressMapOutputWithContext(ctx context.Context) InternetAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetAddressMapOutput)
}

type InternetAddressOutput struct{ *pulumi.OutputState }

func (InternetAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetAddress)(nil)).Elem()
}

func (o InternetAddressOutput) ToInternetAddressOutput() InternetAddressOutput {
	return o
}

func (o InternetAddressOutput) ToInternetAddressOutputWithContext(ctx context.Context) InternetAddressOutput {
	return o
}

// 0: IPv4, 1: IPv6.
func (o InternetAddressOutput) AddrProto() pulumi.IntOutput {
	return o.ApplyT(func(v *InternetAddress) pulumi.IntOutput { return v.AddrProto }).(pulumi.IntOutput)
}

// 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
func (o InternetAddressOutput) AddrType() pulumi.IntOutput {
	return o.ApplyT(func(v *InternetAddress) pulumi.IntOutput { return v.AddrType }).(pulumi.IntOutput)
}

// CIDR address mask.
func (o InternetAddressOutput) MaskLen() pulumi.IntOutput {
	return o.ApplyT(func(v *InternetAddress) pulumi.IntOutput { return v.MaskLen }).(pulumi.IntOutput)
}

type InternetAddressArrayOutput struct{ *pulumi.OutputState }

func (InternetAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InternetAddress)(nil)).Elem()
}

func (o InternetAddressArrayOutput) ToInternetAddressArrayOutput() InternetAddressArrayOutput {
	return o
}

func (o InternetAddressArrayOutput) ToInternetAddressArrayOutputWithContext(ctx context.Context) InternetAddressArrayOutput {
	return o
}

func (o InternetAddressArrayOutput) Index(i pulumi.IntInput) InternetAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InternetAddress {
		return vs[0].([]*InternetAddress)[vs[1].(int)]
	}).(InternetAddressOutput)
}

type InternetAddressMapOutput struct{ *pulumi.OutputState }

func (InternetAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InternetAddress)(nil)).Elem()
}

func (o InternetAddressMapOutput) ToInternetAddressMapOutput() InternetAddressMapOutput {
	return o
}

func (o InternetAddressMapOutput) ToInternetAddressMapOutputWithContext(ctx context.Context) InternetAddressMapOutput {
	return o
}

func (o InternetAddressMapOutput) MapIndex(k pulumi.StringInput) InternetAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InternetAddress {
		return vs[0].(map[string]*InternetAddress)[vs[1].(string)]
	}).(InternetAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InternetAddressInput)(nil)).Elem(), &InternetAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetAddressArrayInput)(nil)).Elem(), InternetAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetAddressMapInput)(nil)).Elem(), InternetAddressMap{})
	pulumi.RegisterOutputType(InternetAddressOutput{})
	pulumi.RegisterOutputType(InternetAddressArrayOutput{})
	pulumi.RegisterOutputType(InternetAddressMapOutput{})
}
