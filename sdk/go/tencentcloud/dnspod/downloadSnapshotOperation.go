// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dnspod

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dnspod downloadSnapshot
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dnspod"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dnspod.NewDownloadSnapshotOperation(ctx, "downloadSnapshot", &Dnspod.DownloadSnapshotOperationArgs{
//				Domain:     pulumi.String("dnspod.cn"),
//				SnapshotId: pulumi.String("456"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DownloadSnapshotOperation struct {
	pulumi.CustomResourceState

	// Snapshot download url.
	CosUrl pulumi.StringOutput `pulumi:"cosUrl"`
	// Domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Snapshot ID.
	SnapshotId pulumi.StringOutput `pulumi:"snapshotId"`
}

// NewDownloadSnapshotOperation registers a new resource with the given unique name, arguments, and options.
func NewDownloadSnapshotOperation(ctx *pulumi.Context,
	name string, args *DownloadSnapshotOperationArgs, opts ...pulumi.ResourceOption) (*DownloadSnapshotOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.SnapshotId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DownloadSnapshotOperation
	err := ctx.RegisterResource("tencentcloud:Dnspod/downloadSnapshotOperation:DownloadSnapshotOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDownloadSnapshotOperation gets an existing DownloadSnapshotOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDownloadSnapshotOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DownloadSnapshotOperationState, opts ...pulumi.ResourceOption) (*DownloadSnapshotOperation, error) {
	var resource DownloadSnapshotOperation
	err := ctx.ReadResource("tencentcloud:Dnspod/downloadSnapshotOperation:DownloadSnapshotOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DownloadSnapshotOperation resources.
type downloadSnapshotOperationState struct {
	// Snapshot download url.
	CosUrl *string `pulumi:"cosUrl"`
	// Domain.
	Domain *string `pulumi:"domain"`
	// Snapshot ID.
	SnapshotId *string `pulumi:"snapshotId"`
}

type DownloadSnapshotOperationState struct {
	// Snapshot download url.
	CosUrl pulumi.StringPtrInput
	// Domain.
	Domain pulumi.StringPtrInput
	// Snapshot ID.
	SnapshotId pulumi.StringPtrInput
}

func (DownloadSnapshotOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*downloadSnapshotOperationState)(nil)).Elem()
}

type downloadSnapshotOperationArgs struct {
	// Domain.
	Domain string `pulumi:"domain"`
	// Snapshot ID.
	SnapshotId string `pulumi:"snapshotId"`
}

// The set of arguments for constructing a DownloadSnapshotOperation resource.
type DownloadSnapshotOperationArgs struct {
	// Domain.
	Domain pulumi.StringInput
	// Snapshot ID.
	SnapshotId pulumi.StringInput
}

func (DownloadSnapshotOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*downloadSnapshotOperationArgs)(nil)).Elem()
}

type DownloadSnapshotOperationInput interface {
	pulumi.Input

	ToDownloadSnapshotOperationOutput() DownloadSnapshotOperationOutput
	ToDownloadSnapshotOperationOutputWithContext(ctx context.Context) DownloadSnapshotOperationOutput
}

func (*DownloadSnapshotOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**DownloadSnapshotOperation)(nil)).Elem()
}

func (i *DownloadSnapshotOperation) ToDownloadSnapshotOperationOutput() DownloadSnapshotOperationOutput {
	return i.ToDownloadSnapshotOperationOutputWithContext(context.Background())
}

func (i *DownloadSnapshotOperation) ToDownloadSnapshotOperationOutputWithContext(ctx context.Context) DownloadSnapshotOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadSnapshotOperationOutput)
}

// DownloadSnapshotOperationArrayInput is an input type that accepts DownloadSnapshotOperationArray and DownloadSnapshotOperationArrayOutput values.
// You can construct a concrete instance of `DownloadSnapshotOperationArrayInput` via:
//
//	DownloadSnapshotOperationArray{ DownloadSnapshotOperationArgs{...} }
type DownloadSnapshotOperationArrayInput interface {
	pulumi.Input

	ToDownloadSnapshotOperationArrayOutput() DownloadSnapshotOperationArrayOutput
	ToDownloadSnapshotOperationArrayOutputWithContext(context.Context) DownloadSnapshotOperationArrayOutput
}

type DownloadSnapshotOperationArray []DownloadSnapshotOperationInput

func (DownloadSnapshotOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DownloadSnapshotOperation)(nil)).Elem()
}

func (i DownloadSnapshotOperationArray) ToDownloadSnapshotOperationArrayOutput() DownloadSnapshotOperationArrayOutput {
	return i.ToDownloadSnapshotOperationArrayOutputWithContext(context.Background())
}

func (i DownloadSnapshotOperationArray) ToDownloadSnapshotOperationArrayOutputWithContext(ctx context.Context) DownloadSnapshotOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadSnapshotOperationArrayOutput)
}

// DownloadSnapshotOperationMapInput is an input type that accepts DownloadSnapshotOperationMap and DownloadSnapshotOperationMapOutput values.
// You can construct a concrete instance of `DownloadSnapshotOperationMapInput` via:
//
//	DownloadSnapshotOperationMap{ "key": DownloadSnapshotOperationArgs{...} }
type DownloadSnapshotOperationMapInput interface {
	pulumi.Input

	ToDownloadSnapshotOperationMapOutput() DownloadSnapshotOperationMapOutput
	ToDownloadSnapshotOperationMapOutputWithContext(context.Context) DownloadSnapshotOperationMapOutput
}

type DownloadSnapshotOperationMap map[string]DownloadSnapshotOperationInput

func (DownloadSnapshotOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DownloadSnapshotOperation)(nil)).Elem()
}

func (i DownloadSnapshotOperationMap) ToDownloadSnapshotOperationMapOutput() DownloadSnapshotOperationMapOutput {
	return i.ToDownloadSnapshotOperationMapOutputWithContext(context.Background())
}

func (i DownloadSnapshotOperationMap) ToDownloadSnapshotOperationMapOutputWithContext(ctx context.Context) DownloadSnapshotOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DownloadSnapshotOperationMapOutput)
}

type DownloadSnapshotOperationOutput struct{ *pulumi.OutputState }

func (DownloadSnapshotOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DownloadSnapshotOperation)(nil)).Elem()
}

func (o DownloadSnapshotOperationOutput) ToDownloadSnapshotOperationOutput() DownloadSnapshotOperationOutput {
	return o
}

func (o DownloadSnapshotOperationOutput) ToDownloadSnapshotOperationOutputWithContext(ctx context.Context) DownloadSnapshotOperationOutput {
	return o
}

// Snapshot download url.
func (o DownloadSnapshotOperationOutput) CosUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadSnapshotOperation) pulumi.StringOutput { return v.CosUrl }).(pulumi.StringOutput)
}

// Domain.
func (o DownloadSnapshotOperationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadSnapshotOperation) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Snapshot ID.
func (o DownloadSnapshotOperationOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *DownloadSnapshotOperation) pulumi.StringOutput { return v.SnapshotId }).(pulumi.StringOutput)
}

type DownloadSnapshotOperationArrayOutput struct{ *pulumi.OutputState }

func (DownloadSnapshotOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DownloadSnapshotOperation)(nil)).Elem()
}

func (o DownloadSnapshotOperationArrayOutput) ToDownloadSnapshotOperationArrayOutput() DownloadSnapshotOperationArrayOutput {
	return o
}

func (o DownloadSnapshotOperationArrayOutput) ToDownloadSnapshotOperationArrayOutputWithContext(ctx context.Context) DownloadSnapshotOperationArrayOutput {
	return o
}

func (o DownloadSnapshotOperationArrayOutput) Index(i pulumi.IntInput) DownloadSnapshotOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DownloadSnapshotOperation {
		return vs[0].([]*DownloadSnapshotOperation)[vs[1].(int)]
	}).(DownloadSnapshotOperationOutput)
}

type DownloadSnapshotOperationMapOutput struct{ *pulumi.OutputState }

func (DownloadSnapshotOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DownloadSnapshotOperation)(nil)).Elem()
}

func (o DownloadSnapshotOperationMapOutput) ToDownloadSnapshotOperationMapOutput() DownloadSnapshotOperationMapOutput {
	return o
}

func (o DownloadSnapshotOperationMapOutput) ToDownloadSnapshotOperationMapOutputWithContext(ctx context.Context) DownloadSnapshotOperationMapOutput {
	return o
}

func (o DownloadSnapshotOperationMapOutput) MapIndex(k pulumi.StringInput) DownloadSnapshotOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DownloadSnapshotOperation {
		return vs[0].(map[string]*DownloadSnapshotOperation)[vs[1].(string)]
	}).(DownloadSnapshotOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadSnapshotOperationInput)(nil)).Elem(), &DownloadSnapshotOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadSnapshotOperationArrayInput)(nil)).Elem(), DownloadSnapshotOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DownloadSnapshotOperationMapInput)(nil)).Elem(), DownloadSnapshotOperationMap{})
	pulumi.RegisterOutputType(DownloadSnapshotOperationOutput{})
	pulumi.RegisterOutputType(DownloadSnapshotOperationArrayOutput{})
	pulumi.RegisterOutputType(DownloadSnapshotOperationMapOutput{})
}
