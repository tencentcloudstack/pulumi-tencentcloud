// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tcm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tcm accessLogConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tcm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tcm"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tcm.NewAccessLogConfig(ctx, "accessLogConfig", &Tcm.AccessLogConfigArgs{
//				Address: pulumi.String("10.0.0.1"),
//				Cls: &tcm.AccessLogConfigClsArgs{
//					Enable: pulumi.Bool(false),
//				},
//				Enable:       pulumi.Bool(true),
//				EnableServer: pulumi.Bool(true),
//				EnableStdout: pulumi.Bool(true),
//				Encoding:     pulumi.String("JSON"),
//				Format:       pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "	\"authority\": \"", "%", "REQ(:AUTHORITY)", "%", "\",\n", "	\"bytes_received\": \"", "%", "BYTES_RECEIVED", "%", "\",\n", "	\"bytes_sent\": \"", "%", "BYTES_SENT", "%", "\",\n", "	\"downstream_local_address\": \"", "%", "DOWNSTREAM_LOCAL_ADDRESS", "%", "\",\n", "	\"downstream_remote_address\": \"", "%", "DOWNSTREAM_REMOTE_ADDRESS", "%", "\",\n", "	\"duration\": \"", "%", "DURATION", "%", "\",\n", "	\"istio_policy_status\": \"", "%", "DYNAMIC_METADATA(istio.mixer:status)", "%", "\",\n", "	\"method\": \"", "%", "REQ(:METHOD)", "%", "\",\n", "	\"path\": \"", "%", "REQ(X-ENVOY-ORIGINAL-PATH?:PATH)", "%", "\",\n", "	\"protocol\": \"", "%", "PROTOCOL", "%", "\",\n", "	\"request_id\": \"", "%", "REQ(X-REQUEST-ID)", "%", "\",\n", "	\"requested_server_name\": \"", "%", "REQUESTED_SERVER_NAME", "%", "\",\n", "	\"response_code\": \"", "%", "RESPONSE_CODE", "%", "\",\n", "	\"response_flags\": \"", "%", "RESPONSE_FLAGS", "%", "\",\n", "	\"route_name\": \"", "%", "ROUTE_NAME", "%", "\",\n", "	\"start_time\": \"", "%", "START_TIME", "%", "\",\n", "	\"upstream_cluster\": \"", "%", "UPSTREAM_CLUSTER", "%", "\",\n", "	\"upstream_host\": \"", "%", "UPSTREAM_HOST", "%", "\",\n", "	\"upstream_local_address\": \"", "%", "UPSTREAM_LOCAL_ADDRESS", "%", "\",\n", "	\"upstream_service_time\": \"", "%", "RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)", "%", "\",\n", "	\"upstream_transport_failure_reason\": \"", "%", "UPSTREAM_TRANSPORT_FAILURE_REASON", "%", "\",\n", "	\"user_agent\": \"", "%", "REQ(USER-AGENT)", "%", "\",\n", "	\"x_forwarded_for\": \"", "%", "REQ(X-FORWARDED-FOR)", "%\"", "\n", "}\n", "\n")),
//				MeshName:     pulumi.String("mesh-rofjmxxx"),
//				SelectedRange: &tcm.AccessLogConfigSelectedRangeArgs{
//					All: pulumi.Bool(true),
//				},
//				Template: pulumi.String("istio"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Tcm.NewAccessLogConfig(ctx, "deleteLogConfig", &Tcm.AccessLogConfigArgs{
//				Cls: &tcm.AccessLogConfigClsArgs{
//					Enable: pulumi.Bool(false),
//				},
//				EnableServer: pulumi.Bool(false),
//				EnableStdout: pulumi.Bool(false),
//				MeshName:     pulumi.String("mesh-rofjmux7"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// tcm access_log_config can be imported using the mesh_id(mesh_name), e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Tcm/accessLogConfig:AccessLogConfig access_log_config mesh-rofjmxxx
//
// ```
type AccessLogConfig struct {
	pulumi.CustomResourceState

	// Third party grpc server address.
	Address pulumi.StringPtrOutput `pulumi:"address"`
	// CLS config.
	Cls AccessLogConfigClsPtrOutput `pulumi:"cls"`
	// Whether enable log.
	Enable pulumi.BoolPtrOutput `pulumi:"enable"`
	// Whether enable third party grpc server.
	EnableServer pulumi.BoolPtrOutput `pulumi:"enableServer"`
	// Whether enable stdout.
	EnableStdout pulumi.BoolPtrOutput `pulumi:"enableStdout"`
	// Log encoding, TEXT or JSON.
	Encoding pulumi.StringPtrOutput `pulumi:"encoding"`
	// Log format.
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// Mesh ID.
	MeshName pulumi.StringOutput `pulumi:"meshName"`
	// Selected range.
	SelectedRange AccessLogConfigSelectedRangePtrOutput `pulumi:"selectedRange"`
	// Log template, istio/trace/custome.
	Template pulumi.StringPtrOutput `pulumi:"template"`
}

// NewAccessLogConfig registers a new resource with the given unique name, arguments, and options.
func NewAccessLogConfig(ctx *pulumi.Context,
	name string, args *AccessLogConfigArgs, opts ...pulumi.ResourceOption) (*AccessLogConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MeshName == nil {
		return nil, errors.New("invalid value for required argument 'MeshName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AccessLogConfig
	err := ctx.RegisterResource("tencentcloud:Tcm/accessLogConfig:AccessLogConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessLogConfig gets an existing AccessLogConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessLogConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessLogConfigState, opts ...pulumi.ResourceOption) (*AccessLogConfig, error) {
	var resource AccessLogConfig
	err := ctx.ReadResource("tencentcloud:Tcm/accessLogConfig:AccessLogConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessLogConfig resources.
type accessLogConfigState struct {
	// Third party grpc server address.
	Address *string `pulumi:"address"`
	// CLS config.
	Cls *AccessLogConfigCls `pulumi:"cls"`
	// Whether enable log.
	Enable *bool `pulumi:"enable"`
	// Whether enable third party grpc server.
	EnableServer *bool `pulumi:"enableServer"`
	// Whether enable stdout.
	EnableStdout *bool `pulumi:"enableStdout"`
	// Log encoding, TEXT or JSON.
	Encoding *string `pulumi:"encoding"`
	// Log format.
	Format *string `pulumi:"format"`
	// Mesh ID.
	MeshName *string `pulumi:"meshName"`
	// Selected range.
	SelectedRange *AccessLogConfigSelectedRange `pulumi:"selectedRange"`
	// Log template, istio/trace/custome.
	Template *string `pulumi:"template"`
}

type AccessLogConfigState struct {
	// Third party grpc server address.
	Address pulumi.StringPtrInput
	// CLS config.
	Cls AccessLogConfigClsPtrInput
	// Whether enable log.
	Enable pulumi.BoolPtrInput
	// Whether enable third party grpc server.
	EnableServer pulumi.BoolPtrInput
	// Whether enable stdout.
	EnableStdout pulumi.BoolPtrInput
	// Log encoding, TEXT or JSON.
	Encoding pulumi.StringPtrInput
	// Log format.
	Format pulumi.StringPtrInput
	// Mesh ID.
	MeshName pulumi.StringPtrInput
	// Selected range.
	SelectedRange AccessLogConfigSelectedRangePtrInput
	// Log template, istio/trace/custome.
	Template pulumi.StringPtrInput
}

func (AccessLogConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessLogConfigState)(nil)).Elem()
}

type accessLogConfigArgs struct {
	// Third party grpc server address.
	Address *string `pulumi:"address"`
	// CLS config.
	Cls *AccessLogConfigCls `pulumi:"cls"`
	// Whether enable log.
	Enable *bool `pulumi:"enable"`
	// Whether enable third party grpc server.
	EnableServer *bool `pulumi:"enableServer"`
	// Whether enable stdout.
	EnableStdout *bool `pulumi:"enableStdout"`
	// Log encoding, TEXT or JSON.
	Encoding *string `pulumi:"encoding"`
	// Log format.
	Format *string `pulumi:"format"`
	// Mesh ID.
	MeshName string `pulumi:"meshName"`
	// Selected range.
	SelectedRange *AccessLogConfigSelectedRange `pulumi:"selectedRange"`
	// Log template, istio/trace/custome.
	Template *string `pulumi:"template"`
}

// The set of arguments for constructing a AccessLogConfig resource.
type AccessLogConfigArgs struct {
	// Third party grpc server address.
	Address pulumi.StringPtrInput
	// CLS config.
	Cls AccessLogConfigClsPtrInput
	// Whether enable log.
	Enable pulumi.BoolPtrInput
	// Whether enable third party grpc server.
	EnableServer pulumi.BoolPtrInput
	// Whether enable stdout.
	EnableStdout pulumi.BoolPtrInput
	// Log encoding, TEXT or JSON.
	Encoding pulumi.StringPtrInput
	// Log format.
	Format pulumi.StringPtrInput
	// Mesh ID.
	MeshName pulumi.StringInput
	// Selected range.
	SelectedRange AccessLogConfigSelectedRangePtrInput
	// Log template, istio/trace/custome.
	Template pulumi.StringPtrInput
}

func (AccessLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessLogConfigArgs)(nil)).Elem()
}

type AccessLogConfigInput interface {
	pulumi.Input

	ToAccessLogConfigOutput() AccessLogConfigOutput
	ToAccessLogConfigOutputWithContext(ctx context.Context) AccessLogConfigOutput
}

func (*AccessLogConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLogConfig)(nil)).Elem()
}

func (i *AccessLogConfig) ToAccessLogConfigOutput() AccessLogConfigOutput {
	return i.ToAccessLogConfigOutputWithContext(context.Background())
}

func (i *AccessLogConfig) ToAccessLogConfigOutputWithContext(ctx context.Context) AccessLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLogConfigOutput)
}

// AccessLogConfigArrayInput is an input type that accepts AccessLogConfigArray and AccessLogConfigArrayOutput values.
// You can construct a concrete instance of `AccessLogConfigArrayInput` via:
//
//	AccessLogConfigArray{ AccessLogConfigArgs{...} }
type AccessLogConfigArrayInput interface {
	pulumi.Input

	ToAccessLogConfigArrayOutput() AccessLogConfigArrayOutput
	ToAccessLogConfigArrayOutputWithContext(context.Context) AccessLogConfigArrayOutput
}

type AccessLogConfigArray []AccessLogConfigInput

func (AccessLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessLogConfig)(nil)).Elem()
}

func (i AccessLogConfigArray) ToAccessLogConfigArrayOutput() AccessLogConfigArrayOutput {
	return i.ToAccessLogConfigArrayOutputWithContext(context.Background())
}

func (i AccessLogConfigArray) ToAccessLogConfigArrayOutputWithContext(ctx context.Context) AccessLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLogConfigArrayOutput)
}

// AccessLogConfigMapInput is an input type that accepts AccessLogConfigMap and AccessLogConfigMapOutput values.
// You can construct a concrete instance of `AccessLogConfigMapInput` via:
//
//	AccessLogConfigMap{ "key": AccessLogConfigArgs{...} }
type AccessLogConfigMapInput interface {
	pulumi.Input

	ToAccessLogConfigMapOutput() AccessLogConfigMapOutput
	ToAccessLogConfigMapOutputWithContext(context.Context) AccessLogConfigMapOutput
}

type AccessLogConfigMap map[string]AccessLogConfigInput

func (AccessLogConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessLogConfig)(nil)).Elem()
}

func (i AccessLogConfigMap) ToAccessLogConfigMapOutput() AccessLogConfigMapOutput {
	return i.ToAccessLogConfigMapOutputWithContext(context.Background())
}

func (i AccessLogConfigMap) ToAccessLogConfigMapOutputWithContext(ctx context.Context) AccessLogConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLogConfigMapOutput)
}

type AccessLogConfigOutput struct{ *pulumi.OutputState }

func (AccessLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLogConfig)(nil)).Elem()
}

func (o AccessLogConfigOutput) ToAccessLogConfigOutput() AccessLogConfigOutput {
	return o
}

func (o AccessLogConfigOutput) ToAccessLogConfigOutputWithContext(ctx context.Context) AccessLogConfigOutput {
	return o
}

// Third party grpc server address.
func (o AccessLogConfigOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.StringPtrOutput { return v.Address }).(pulumi.StringPtrOutput)
}

// CLS config.
func (o AccessLogConfigOutput) Cls() AccessLogConfigClsPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) AccessLogConfigClsPtrOutput { return v.Cls }).(AccessLogConfigClsPtrOutput)
}

// Whether enable log.
func (o AccessLogConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.BoolPtrOutput { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Whether enable third party grpc server.
func (o AccessLogConfigOutput) EnableServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.BoolPtrOutput { return v.EnableServer }).(pulumi.BoolPtrOutput)
}

// Whether enable stdout.
func (o AccessLogConfigOutput) EnableStdout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.BoolPtrOutput { return v.EnableStdout }).(pulumi.BoolPtrOutput)
}

// Log encoding, TEXT or JSON.
func (o AccessLogConfigOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.StringPtrOutput { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Log format.
func (o AccessLogConfigOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

// Mesh ID.
func (o AccessLogConfigOutput) MeshName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.StringOutput { return v.MeshName }).(pulumi.StringOutput)
}

// Selected range.
func (o AccessLogConfigOutput) SelectedRange() AccessLogConfigSelectedRangePtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) AccessLogConfigSelectedRangePtrOutput { return v.SelectedRange }).(AccessLogConfigSelectedRangePtrOutput)
}

// Log template, istio/trace/custome.
func (o AccessLogConfigOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessLogConfig) pulumi.StringPtrOutput { return v.Template }).(pulumi.StringPtrOutput)
}

type AccessLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AccessLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessLogConfig)(nil)).Elem()
}

func (o AccessLogConfigArrayOutput) ToAccessLogConfigArrayOutput() AccessLogConfigArrayOutput {
	return o
}

func (o AccessLogConfigArrayOutput) ToAccessLogConfigArrayOutputWithContext(ctx context.Context) AccessLogConfigArrayOutput {
	return o
}

func (o AccessLogConfigArrayOutput) Index(i pulumi.IntInput) AccessLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessLogConfig {
		return vs[0].([]*AccessLogConfig)[vs[1].(int)]
	}).(AccessLogConfigOutput)
}

type AccessLogConfigMapOutput struct{ *pulumi.OutputState }

func (AccessLogConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessLogConfig)(nil)).Elem()
}

func (o AccessLogConfigMapOutput) ToAccessLogConfigMapOutput() AccessLogConfigMapOutput {
	return o
}

func (o AccessLogConfigMapOutput) ToAccessLogConfigMapOutputWithContext(ctx context.Context) AccessLogConfigMapOutput {
	return o
}

func (o AccessLogConfigMapOutput) MapIndex(k pulumi.StringInput) AccessLogConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessLogConfig {
		return vs[0].(map[string]*AccessLogConfig)[vs[1].(string)]
	}).(AccessLogConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessLogConfigInput)(nil)).Elem(), &AccessLogConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessLogConfigArrayInput)(nil)).Elem(), AccessLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessLogConfigMapInput)(nil)).Elem(), AccessLogConfigMap{})
	pulumi.RegisterOutputType(AccessLogConfigOutput{})
	pulumi.RegisterOutputType(AccessLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AccessLogConfigMapOutput{})
}
