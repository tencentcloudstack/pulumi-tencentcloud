// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a layer7 listener of GAAP.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Gaap"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooProxy, err := Gaap.NewProxy(ctx, "fooProxy", &Gaap.ProxyArgs{
//				Bandwidth:        pulumi.Int(10),
//				Concurrent:       pulumi.Int(2),
//				AccessRegion:     pulumi.String("SouthChina"),
//				RealserverRegion: pulumi.String("NorthChina"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Gaap.NewLayer7Listener(ctx, "fooLayer7Listener", &Gaap.Layer7ListenerArgs{
//				Protocol: pulumi.String("HTTP"),
//				Port:     pulumi.Int(80),
//				ProxyId:  fooProxy.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// GAAP layer7 listener can be imported using the id, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Gaap/layer7Listener:Layer7Listener tencentcloud_gaap_layer7_listener.foo listener-11112222
// ```
type Layer7Listener struct {
	pulumi.CustomResourceState

	// Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	AuthType pulumi.IntPtrOutput `pulumi:"authType"`
	// Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
	CertificateId pulumi.StringPtrOutput `pulumi:"certificateId"`
	// It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	//
	// Deprecated: It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
	ClientCertificateId pulumi.StringOutput `pulumi:"clientCertificateId"`
	// ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	ClientCertificateIds pulumi.StringArrayOutput `pulumi:"clientCertificateIds"`
	// Creation time of the layer7 listener.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
	ForwardProtocol pulumi.StringPtrOutput `pulumi:"forwardProtocol"`
	// Group ID.
	GroupId pulumi.StringPtrOutput `pulumi:"groupId"`
	// Name of the layer7 listener, the maximum length is 30.
	Name pulumi.StringOutput `pulumi:"name"`
	// Port of the layer7 listener.
	Port pulumi.IntOutput `pulumi:"port"`
	// Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// ID of the GAAP proxy.
	ProxyId pulumi.StringPtrOutput `pulumi:"proxyId"`
	// Status of the layer7 listener.
	Status pulumi.IntOutput `pulumi:"status"`
	// Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
	TlsCiphers pulumi.StringOutput `pulumi:"tlsCiphers"`
	// TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
	TlsSupportVersions pulumi.StringArrayOutput `pulumi:"tlsSupportVersions"`
}

// NewLayer7Listener registers a new resource with the given unique name, arguments, and options.
func NewLayer7Listener(ctx *pulumi.Context,
	name string, args *Layer7ListenerArgs, opts ...pulumi.ResourceOption) (*Layer7Listener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Layer7Listener
	err := ctx.RegisterResource("tencentcloud:Gaap/layer7Listener:Layer7Listener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLayer7Listener gets an existing Layer7Listener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLayer7Listener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Layer7ListenerState, opts ...pulumi.ResourceOption) (*Layer7Listener, error) {
	var resource Layer7Listener
	err := ctx.ReadResource("tencentcloud:Gaap/layer7Listener:Layer7Listener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Layer7Listener resources.
type layer7ListenerState struct {
	// Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	AuthType *int `pulumi:"authType"`
	// Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
	CertificateId *string `pulumi:"certificateId"`
	// It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	//
	// Deprecated: It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	ClientCertificateIds []string `pulumi:"clientCertificateIds"`
	// Creation time of the layer7 listener.
	CreateTime *string `pulumi:"createTime"`
	// Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
	ForwardProtocol *string `pulumi:"forwardProtocol"`
	// Group ID.
	GroupId *string `pulumi:"groupId"`
	// Name of the layer7 listener, the maximum length is 30.
	Name *string `pulumi:"name"`
	// Port of the layer7 listener.
	Port *int `pulumi:"port"`
	// Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
	Protocol *string `pulumi:"protocol"`
	// ID of the GAAP proxy.
	ProxyId *string `pulumi:"proxyId"`
	// Status of the layer7 listener.
	Status *int `pulumi:"status"`
	// Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
	TlsCiphers *string `pulumi:"tlsCiphers"`
	// TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
	TlsSupportVersions []string `pulumi:"tlsSupportVersions"`
}

type Layer7ListenerState struct {
	// Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	AuthType pulumi.IntPtrInput
	// Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
	CertificateId pulumi.StringPtrInput
	// It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	//
	// Deprecated: It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
	ClientCertificateId pulumi.StringPtrInput
	// ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	ClientCertificateIds pulumi.StringArrayInput
	// Creation time of the layer7 listener.
	CreateTime pulumi.StringPtrInput
	// Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
	ForwardProtocol pulumi.StringPtrInput
	// Group ID.
	GroupId pulumi.StringPtrInput
	// Name of the layer7 listener, the maximum length is 30.
	Name pulumi.StringPtrInput
	// Port of the layer7 listener.
	Port pulumi.IntPtrInput
	// Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
	Protocol pulumi.StringPtrInput
	// ID of the GAAP proxy.
	ProxyId pulumi.StringPtrInput
	// Status of the layer7 listener.
	Status pulumi.IntPtrInput
	// Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
	TlsCiphers pulumi.StringPtrInput
	// TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
	TlsSupportVersions pulumi.StringArrayInput
}

func (Layer7ListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*layer7ListenerState)(nil)).Elem()
}

type layer7ListenerArgs struct {
	// Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	AuthType *int `pulumi:"authType"`
	// Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
	CertificateId *string `pulumi:"certificateId"`
	// It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	//
	// Deprecated: It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	ClientCertificateIds []string `pulumi:"clientCertificateIds"`
	// Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
	ForwardProtocol *string `pulumi:"forwardProtocol"`
	// Group ID.
	GroupId *string `pulumi:"groupId"`
	// Name of the layer7 listener, the maximum length is 30.
	Name *string `pulumi:"name"`
	// Port of the layer7 listener.
	Port int `pulumi:"port"`
	// Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
	Protocol string `pulumi:"protocol"`
	// ID of the GAAP proxy.
	ProxyId *string `pulumi:"proxyId"`
	// Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
	TlsCiphers *string `pulumi:"tlsCiphers"`
	// TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
	TlsSupportVersions []string `pulumi:"tlsSupportVersions"`
}

// The set of arguments for constructing a Layer7Listener resource.
type Layer7ListenerArgs struct {
	// Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	AuthType pulumi.IntPtrInput
	// Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
	CertificateId pulumi.StringPtrInput
	// It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	//
	// Deprecated: It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
	ClientCertificateId pulumi.StringPtrInput
	// ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
	ClientCertificateIds pulumi.StringArrayInput
	// Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
	ForwardProtocol pulumi.StringPtrInput
	// Group ID.
	GroupId pulumi.StringPtrInput
	// Name of the layer7 listener, the maximum length is 30.
	Name pulumi.StringPtrInput
	// Port of the layer7 listener.
	Port pulumi.IntInput
	// Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
	Protocol pulumi.StringInput
	// ID of the GAAP proxy.
	ProxyId pulumi.StringPtrInput
	// Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
	TlsCiphers pulumi.StringPtrInput
	// TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
	TlsSupportVersions pulumi.StringArrayInput
}

func (Layer7ListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*layer7ListenerArgs)(nil)).Elem()
}

type Layer7ListenerInput interface {
	pulumi.Input

	ToLayer7ListenerOutput() Layer7ListenerOutput
	ToLayer7ListenerOutputWithContext(ctx context.Context) Layer7ListenerOutput
}

func (*Layer7Listener) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer7Listener)(nil)).Elem()
}

func (i *Layer7Listener) ToLayer7ListenerOutput() Layer7ListenerOutput {
	return i.ToLayer7ListenerOutputWithContext(context.Background())
}

func (i *Layer7Listener) ToLayer7ListenerOutputWithContext(ctx context.Context) Layer7ListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer7ListenerOutput)
}

// Layer7ListenerArrayInput is an input type that accepts Layer7ListenerArray and Layer7ListenerArrayOutput values.
// You can construct a concrete instance of `Layer7ListenerArrayInput` via:
//
//	Layer7ListenerArray{ Layer7ListenerArgs{...} }
type Layer7ListenerArrayInput interface {
	pulumi.Input

	ToLayer7ListenerArrayOutput() Layer7ListenerArrayOutput
	ToLayer7ListenerArrayOutputWithContext(context.Context) Layer7ListenerArrayOutput
}

type Layer7ListenerArray []Layer7ListenerInput

func (Layer7ListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Layer7Listener)(nil)).Elem()
}

func (i Layer7ListenerArray) ToLayer7ListenerArrayOutput() Layer7ListenerArrayOutput {
	return i.ToLayer7ListenerArrayOutputWithContext(context.Background())
}

func (i Layer7ListenerArray) ToLayer7ListenerArrayOutputWithContext(ctx context.Context) Layer7ListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer7ListenerArrayOutput)
}

// Layer7ListenerMapInput is an input type that accepts Layer7ListenerMap and Layer7ListenerMapOutput values.
// You can construct a concrete instance of `Layer7ListenerMapInput` via:
//
//	Layer7ListenerMap{ "key": Layer7ListenerArgs{...} }
type Layer7ListenerMapInput interface {
	pulumi.Input

	ToLayer7ListenerMapOutput() Layer7ListenerMapOutput
	ToLayer7ListenerMapOutputWithContext(context.Context) Layer7ListenerMapOutput
}

type Layer7ListenerMap map[string]Layer7ListenerInput

func (Layer7ListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Layer7Listener)(nil)).Elem()
}

func (i Layer7ListenerMap) ToLayer7ListenerMapOutput() Layer7ListenerMapOutput {
	return i.ToLayer7ListenerMapOutputWithContext(context.Background())
}

func (i Layer7ListenerMap) ToLayer7ListenerMapOutputWithContext(ctx context.Context) Layer7ListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer7ListenerMapOutput)
}

type Layer7ListenerOutput struct{ *pulumi.OutputState }

func (Layer7ListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer7Listener)(nil)).Elem()
}

func (o Layer7ListenerOutput) ToLayer7ListenerOutput() Layer7ListenerOutput {
	return o
}

func (o Layer7ListenerOutput) ToLayer7ListenerOutputWithContext(ctx context.Context) Layer7ListenerOutput {
	return o
}

// Authentication type of the layer7 listener. `0` is one-way authentication and `1` is mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
func (o Layer7ListenerOutput) AuthType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.IntPtrOutput { return v.AuthType }).(pulumi.IntPtrOutput)
}

// Certificate ID of the layer7 listener. NOTES: Only supports listeners of `HTTPS` protocol.
func (o Layer7ListenerOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringPtrOutput { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead. ID of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
//
// Deprecated: It has been deprecated from version 1.26.0. Set `clientCertificateIds` instead.
func (o Layer7ListenerOutput) ClientCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringOutput { return v.ClientCertificateId }).(pulumi.StringOutput)
}

// ID list of the client certificate. Set only when `authType` is specified as mutual authentication. NOTES: Only supports listeners of `HTTPS` protocol.
func (o Layer7ListenerOutput) ClientCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringArrayOutput { return v.ClientCertificateIds }).(pulumi.StringArrayOutput)
}

// Creation time of the layer7 listener.
func (o Layer7ListenerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Protocol type of the forwarding. Valid value: `HTTP` and `HTTPS`. NOTES: Only supports listeners of `HTTPS` protocol.
func (o Layer7ListenerOutput) ForwardProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringPtrOutput { return v.ForwardProtocol }).(pulumi.StringPtrOutput)
}

// Group ID.
func (o Layer7ListenerOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Name of the layer7 listener, the maximum length is 30.
func (o Layer7ListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Port of the layer7 listener.
func (o Layer7ListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Protocol of the layer7 listener. Valid value: `HTTP` and `HTTPS`.
func (o Layer7ListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// ID of the GAAP proxy.
func (o Layer7ListenerOutput) ProxyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringPtrOutput { return v.ProxyId }).(pulumi.StringPtrOutput)
}

// Status of the layer7 listener.
func (o Layer7ListenerOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

// Password Suite, optional GAAP_TLS_CIPHERS_STRICT, GAAP_TLS_CIPHERS_GENERAL, GAAP_TLS_CIPHERS_WIDE(default).
func (o Layer7ListenerOutput) TlsCiphers() pulumi.StringOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringOutput { return v.TlsCiphers }).(pulumi.StringOutput)
}

// TLS version, optional TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
func (o Layer7ListenerOutput) TlsSupportVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Layer7Listener) pulumi.StringArrayOutput { return v.TlsSupportVersions }).(pulumi.StringArrayOutput)
}

type Layer7ListenerArrayOutput struct{ *pulumi.OutputState }

func (Layer7ListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Layer7Listener)(nil)).Elem()
}

func (o Layer7ListenerArrayOutput) ToLayer7ListenerArrayOutput() Layer7ListenerArrayOutput {
	return o
}

func (o Layer7ListenerArrayOutput) ToLayer7ListenerArrayOutputWithContext(ctx context.Context) Layer7ListenerArrayOutput {
	return o
}

func (o Layer7ListenerArrayOutput) Index(i pulumi.IntInput) Layer7ListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Layer7Listener {
		return vs[0].([]*Layer7Listener)[vs[1].(int)]
	}).(Layer7ListenerOutput)
}

type Layer7ListenerMapOutput struct{ *pulumi.OutputState }

func (Layer7ListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Layer7Listener)(nil)).Elem()
}

func (o Layer7ListenerMapOutput) ToLayer7ListenerMapOutput() Layer7ListenerMapOutput {
	return o
}

func (o Layer7ListenerMapOutput) ToLayer7ListenerMapOutputWithContext(ctx context.Context) Layer7ListenerMapOutput {
	return o
}

func (o Layer7ListenerMapOutput) MapIndex(k pulumi.StringInput) Layer7ListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Layer7Listener {
		return vs[0].(map[string]*Layer7Listener)[vs[1].(string)]
	}).(Layer7ListenerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Layer7ListenerInput)(nil)).Elem(), &Layer7Listener{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer7ListenerArrayInput)(nil)).Elem(), Layer7ListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Layer7ListenerMapInput)(nil)).Elem(), Layer7ListenerMap{})
	pulumi.RegisterOutputType(Layer7ListenerOutput{})
	pulumi.RegisterOutputType(Layer7ListenerArrayOutput{})
	pulumi.RegisterOutputType(Layer7ListenerMapOutput{})
}
