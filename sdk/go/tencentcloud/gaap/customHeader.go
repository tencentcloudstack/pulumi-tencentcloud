// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a gaap customHeader
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Gaap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Gaap"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Gaap.NewCustomHeader(ctx, "customHeader", &Gaap.CustomHeaderArgs{
//				Headers: gaap.CustomHeaderHeaderArray{
//					&gaap.CustomHeaderHeaderArgs{
//						HeaderName:  pulumi.String("HeaderName1"),
//						HeaderValue: pulumi.String("HeaderValue1"),
//					},
//					&gaap.CustomHeaderHeaderArgs{
//						HeaderName:  pulumi.String("HeaderName2"),
//						HeaderValue: pulumi.String("HeaderValue2"),
//					},
//				},
//				RuleId: pulumi.String("rule-xxxxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// gaap custom_header can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Gaap/customHeader:CustomHeader custom_header ruleId
//
// ```
type CustomHeader struct {
	pulumi.CustomResourceState

	// Headers.
	Headers CustomHeaderHeaderArrayOutput `pulumi:"headers"`
	// Rule id.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
}

// NewCustomHeader registers a new resource with the given unique name, arguments, and options.
func NewCustomHeader(ctx *pulumi.Context,
	name string, args *CustomHeaderArgs, opts ...pulumi.ResourceOption) (*CustomHeader, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CustomHeader
	err := ctx.RegisterResource("tencentcloud:Gaap/customHeader:CustomHeader", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomHeader gets an existing CustomHeader resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomHeader(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomHeaderState, opts ...pulumi.ResourceOption) (*CustomHeader, error) {
	var resource CustomHeader
	err := ctx.ReadResource("tencentcloud:Gaap/customHeader:CustomHeader", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomHeader resources.
type customHeaderState struct {
	// Headers.
	Headers []CustomHeaderHeader `pulumi:"headers"`
	// Rule id.
	RuleId *string `pulumi:"ruleId"`
}

type CustomHeaderState struct {
	// Headers.
	Headers CustomHeaderHeaderArrayInput
	// Rule id.
	RuleId pulumi.StringPtrInput
}

func (CustomHeaderState) ElementType() reflect.Type {
	return reflect.TypeOf((*customHeaderState)(nil)).Elem()
}

type customHeaderArgs struct {
	// Headers.
	Headers []CustomHeaderHeader `pulumi:"headers"`
	// Rule id.
	RuleId string `pulumi:"ruleId"`
}

// The set of arguments for constructing a CustomHeader resource.
type CustomHeaderArgs struct {
	// Headers.
	Headers CustomHeaderHeaderArrayInput
	// Rule id.
	RuleId pulumi.StringInput
}

func (CustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customHeaderArgs)(nil)).Elem()
}

type CustomHeaderInput interface {
	pulumi.Input

	ToCustomHeaderOutput() CustomHeaderOutput
	ToCustomHeaderOutputWithContext(ctx context.Context) CustomHeaderOutput
}

func (*CustomHeader) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomHeader)(nil)).Elem()
}

func (i *CustomHeader) ToCustomHeaderOutput() CustomHeaderOutput {
	return i.ToCustomHeaderOutputWithContext(context.Background())
}

func (i *CustomHeader) ToCustomHeaderOutputWithContext(ctx context.Context) CustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHeaderOutput)
}

// CustomHeaderArrayInput is an input type that accepts CustomHeaderArray and CustomHeaderArrayOutput values.
// You can construct a concrete instance of `CustomHeaderArrayInput` via:
//
//	CustomHeaderArray{ CustomHeaderArgs{...} }
type CustomHeaderArrayInput interface {
	pulumi.Input

	ToCustomHeaderArrayOutput() CustomHeaderArrayOutput
	ToCustomHeaderArrayOutputWithContext(context.Context) CustomHeaderArrayOutput
}

type CustomHeaderArray []CustomHeaderInput

func (CustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomHeader)(nil)).Elem()
}

func (i CustomHeaderArray) ToCustomHeaderArrayOutput() CustomHeaderArrayOutput {
	return i.ToCustomHeaderArrayOutputWithContext(context.Background())
}

func (i CustomHeaderArray) ToCustomHeaderArrayOutputWithContext(ctx context.Context) CustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHeaderArrayOutput)
}

// CustomHeaderMapInput is an input type that accepts CustomHeaderMap and CustomHeaderMapOutput values.
// You can construct a concrete instance of `CustomHeaderMapInput` via:
//
//	CustomHeaderMap{ "key": CustomHeaderArgs{...} }
type CustomHeaderMapInput interface {
	pulumi.Input

	ToCustomHeaderMapOutput() CustomHeaderMapOutput
	ToCustomHeaderMapOutputWithContext(context.Context) CustomHeaderMapOutput
}

type CustomHeaderMap map[string]CustomHeaderInput

func (CustomHeaderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomHeader)(nil)).Elem()
}

func (i CustomHeaderMap) ToCustomHeaderMapOutput() CustomHeaderMapOutput {
	return i.ToCustomHeaderMapOutputWithContext(context.Background())
}

func (i CustomHeaderMap) ToCustomHeaderMapOutputWithContext(ctx context.Context) CustomHeaderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHeaderMapOutput)
}

type CustomHeaderOutput struct{ *pulumi.OutputState }

func (CustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomHeader)(nil)).Elem()
}

func (o CustomHeaderOutput) ToCustomHeaderOutput() CustomHeaderOutput {
	return o
}

func (o CustomHeaderOutput) ToCustomHeaderOutputWithContext(ctx context.Context) CustomHeaderOutput {
	return o
}

// Headers.
func (o CustomHeaderOutput) Headers() CustomHeaderHeaderArrayOutput {
	return o.ApplyT(func(v *CustomHeader) CustomHeaderHeaderArrayOutput { return v.Headers }).(CustomHeaderHeaderArrayOutput)
}

// Rule id.
func (o CustomHeaderOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomHeader) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

type CustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (CustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomHeader)(nil)).Elem()
}

func (o CustomHeaderArrayOutput) ToCustomHeaderArrayOutput() CustomHeaderArrayOutput {
	return o
}

func (o CustomHeaderArrayOutput) ToCustomHeaderArrayOutputWithContext(ctx context.Context) CustomHeaderArrayOutput {
	return o
}

func (o CustomHeaderArrayOutput) Index(i pulumi.IntInput) CustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomHeader {
		return vs[0].([]*CustomHeader)[vs[1].(int)]
	}).(CustomHeaderOutput)
}

type CustomHeaderMapOutput struct{ *pulumi.OutputState }

func (CustomHeaderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomHeader)(nil)).Elem()
}

func (o CustomHeaderMapOutput) ToCustomHeaderMapOutput() CustomHeaderMapOutput {
	return o
}

func (o CustomHeaderMapOutput) ToCustomHeaderMapOutputWithContext(ctx context.Context) CustomHeaderMapOutput {
	return o
}

func (o CustomHeaderMapOutput) MapIndex(k pulumi.StringInput) CustomHeaderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomHeader {
		return vs[0].(map[string]*CustomHeader)[vs[1].(string)]
	}).(CustomHeaderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHeaderInput)(nil)).Elem(), &CustomHeader{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHeaderArrayInput)(nil)).Elem(), CustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomHeaderMapInput)(nil)).Elem(), CustomHeaderMap{})
	pulumi.RegisterOutputType(CustomHeaderOutput{})
	pulumi.RegisterOutputType(CustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(CustomHeaderMapOutput{})
}
