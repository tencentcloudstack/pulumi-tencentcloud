// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of gaap region and price
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Gaap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Gaap"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Gaap.GetRegionAndPrice(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRegionAndPrice(ctx *pulumi.Context, args *GetRegionAndPriceArgs, opts ...pulumi.InvokeOption) (*GetRegionAndPriceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetRegionAndPriceResult
	err := ctx.Invoke("tencentcloud:Gaap/getRegionAndPrice:getRegionAndPrice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionAndPrice.
type GetRegionAndPriceArgs struct {
	// IP version. Available values: IPv4, IPv6. Default is IPv4.
	IpAddressVersion *string `pulumi:"ipAddressVersion"`
	// Type of channel package. `Thunder` represents standard channel group, `Accelerator` represents game accelerator channel, and `CrossBorder` represents cross-border channel.
	PackageType *string `pulumi:"packageType"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getRegionAndPrice.
type GetRegionAndPriceResult struct {
	// Band width Unit Price, Unit:yuan/Mbps/day.
	BandwidthUnitPrices []GetRegionAndPriceBandwidthUnitPrice `pulumi:"bandwidthUnitPrices"`
	// Bandwidth Price Currency Type:CNYUSD.
	Currency string `pulumi:"currency"`
	// Source Site Area Details List.
	DestRegionSets []GetRegionAndPriceDestRegionSet `pulumi:"destRegionSets"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	IpAddressVersion *string `pulumi:"ipAddressVersion"`
	PackageType      *string `pulumi:"packageType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetRegionAndPriceOutput(ctx *pulumi.Context, args GetRegionAndPriceOutputArgs, opts ...pulumi.InvokeOption) GetRegionAndPriceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegionAndPriceResult, error) {
			args := v.(GetRegionAndPriceArgs)
			r, err := GetRegionAndPrice(ctx, &args, opts...)
			var s GetRegionAndPriceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRegionAndPriceResultOutput)
}

// A collection of arguments for invoking getRegionAndPrice.
type GetRegionAndPriceOutputArgs struct {
	// IP version. Available values: IPv4, IPv6. Default is IPv4.
	IpAddressVersion pulumi.StringPtrInput `pulumi:"ipAddressVersion"`
	// Type of channel package. `Thunder` represents standard channel group, `Accelerator` represents game accelerator channel, and `CrossBorder` represents cross-border channel.
	PackageType pulumi.StringPtrInput `pulumi:"packageType"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetRegionAndPriceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionAndPriceArgs)(nil)).Elem()
}

// A collection of values returned by getRegionAndPrice.
type GetRegionAndPriceResultOutput struct{ *pulumi.OutputState }

func (GetRegionAndPriceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionAndPriceResult)(nil)).Elem()
}

func (o GetRegionAndPriceResultOutput) ToGetRegionAndPriceResultOutput() GetRegionAndPriceResultOutput {
	return o
}

func (o GetRegionAndPriceResultOutput) ToGetRegionAndPriceResultOutputWithContext(ctx context.Context) GetRegionAndPriceResultOutput {
	return o
}

// Band width Unit Price, Unit:yuan/Mbps/day.
func (o GetRegionAndPriceResultOutput) BandwidthUnitPrices() GetRegionAndPriceBandwidthUnitPriceArrayOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) []GetRegionAndPriceBandwidthUnitPrice { return v.BandwidthUnitPrices }).(GetRegionAndPriceBandwidthUnitPriceArrayOutput)
}

// Bandwidth Price Currency Type:CNYUSD.
func (o GetRegionAndPriceResultOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) string { return v.Currency }).(pulumi.StringOutput)
}

// Source Site Area Details List.
func (o GetRegionAndPriceResultOutput) DestRegionSets() GetRegionAndPriceDestRegionSetArrayOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) []GetRegionAndPriceDestRegionSet { return v.DestRegionSets }).(GetRegionAndPriceDestRegionSetArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionAndPriceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionAndPriceResultOutput) IpAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) *string { return v.IpAddressVersion }).(pulumi.StringPtrOutput)
}

func (o GetRegionAndPriceResultOutput) PackageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) *string { return v.PackageType }).(pulumi.StringPtrOutput)
}

func (o GetRegionAndPriceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionAndPriceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionAndPriceResultOutput{})
}
