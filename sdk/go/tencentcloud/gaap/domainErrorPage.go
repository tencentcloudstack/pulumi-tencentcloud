// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provide a resource to custom error page info for a GAAP HTTP domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Gaap"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooProxy, err := Gaap.NewProxy(ctx, "fooProxy", &Gaap.ProxyArgs{
//				Bandwidth:        pulumi.Int(10),
//				Concurrent:       pulumi.Int(2),
//				AccessRegion:     pulumi.String("SouthChina"),
//				RealserverRegion: pulumi.String("NorthChina"),
//			})
//			if err != nil {
//				return err
//			}
//			fooLayer7Listener, err := Gaap.NewLayer7Listener(ctx, "fooLayer7Listener", &Gaap.Layer7ListenerArgs{
//				Protocol: pulumi.String("HTTP"),
//				Port:     pulumi.Int(80),
//				ProxyId:  fooProxy.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooHttpDomain, err := Gaap.NewHttpDomain(ctx, "fooHttpDomain", &Gaap.HttpDomainArgs{
//				ListenerId: fooLayer7Listener.ID(),
//				Domain:     pulumi.String("www.qq.com"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Gaap.NewDomainErrorPage(ctx, "fooDomainErrorPage", &Gaap.DomainErrorPageArgs{
//				ListenerId: fooLayer7Listener.ID(),
//				Domain:     fooHttpDomain.Domain,
//				ErrorCodes: pulumi.IntArray{
//					pulumi.Int(404),
//					pulumi.Int(503),
//				},
//				Body: pulumi.String("bad request"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DomainErrorPage struct {
	pulumi.CustomResourceState

	// New response body.
	Body pulumi.StringOutput `pulumi:"body"`
	// Response headers to be removed.
	ClearHeaders pulumi.StringArrayOutput `pulumi:"clearHeaders"`
	// HTTP domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Original error codes.
	ErrorCodes pulumi.IntArrayOutput `pulumi:"errorCodes"`
	// ID of the layer7 listener.
	ListenerId pulumi.StringOutput `pulumi:"listenerId"`
	// New error code.
	NewErrorCode pulumi.IntPtrOutput `pulumi:"newErrorCode"`
	// Response headers to be set.
	SetHeaders pulumi.MapOutput `pulumi:"setHeaders"`
}

// NewDomainErrorPage registers a new resource with the given unique name, arguments, and options.
func NewDomainErrorPage(ctx *pulumi.Context,
	name string, args *DomainErrorPageArgs, opts ...pulumi.ResourceOption) (*DomainErrorPage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Body == nil {
		return nil, errors.New("invalid value for required argument 'Body'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.ErrorCodes == nil {
		return nil, errors.New("invalid value for required argument 'ErrorCodes'")
	}
	if args.ListenerId == nil {
		return nil, errors.New("invalid value for required argument 'ListenerId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DomainErrorPage
	err := ctx.RegisterResource("tencentcloud:Gaap/domainErrorPage:DomainErrorPage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainErrorPage gets an existing DomainErrorPage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainErrorPage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainErrorPageState, opts ...pulumi.ResourceOption) (*DomainErrorPage, error) {
	var resource DomainErrorPage
	err := ctx.ReadResource("tencentcloud:Gaap/domainErrorPage:DomainErrorPage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainErrorPage resources.
type domainErrorPageState struct {
	// New response body.
	Body *string `pulumi:"body"`
	// Response headers to be removed.
	ClearHeaders []string `pulumi:"clearHeaders"`
	// HTTP domain.
	Domain *string `pulumi:"domain"`
	// Original error codes.
	ErrorCodes []int `pulumi:"errorCodes"`
	// ID of the layer7 listener.
	ListenerId *string `pulumi:"listenerId"`
	// New error code.
	NewErrorCode *int `pulumi:"newErrorCode"`
	// Response headers to be set.
	SetHeaders map[string]interface{} `pulumi:"setHeaders"`
}

type DomainErrorPageState struct {
	// New response body.
	Body pulumi.StringPtrInput
	// Response headers to be removed.
	ClearHeaders pulumi.StringArrayInput
	// HTTP domain.
	Domain pulumi.StringPtrInput
	// Original error codes.
	ErrorCodes pulumi.IntArrayInput
	// ID of the layer7 listener.
	ListenerId pulumi.StringPtrInput
	// New error code.
	NewErrorCode pulumi.IntPtrInput
	// Response headers to be set.
	SetHeaders pulumi.MapInput
}

func (DomainErrorPageState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainErrorPageState)(nil)).Elem()
}

type domainErrorPageArgs struct {
	// New response body.
	Body string `pulumi:"body"`
	// Response headers to be removed.
	ClearHeaders []string `pulumi:"clearHeaders"`
	// HTTP domain.
	Domain string `pulumi:"domain"`
	// Original error codes.
	ErrorCodes []int `pulumi:"errorCodes"`
	// ID of the layer7 listener.
	ListenerId string `pulumi:"listenerId"`
	// New error code.
	NewErrorCode *int `pulumi:"newErrorCode"`
	// Response headers to be set.
	SetHeaders map[string]interface{} `pulumi:"setHeaders"`
}

// The set of arguments for constructing a DomainErrorPage resource.
type DomainErrorPageArgs struct {
	// New response body.
	Body pulumi.StringInput
	// Response headers to be removed.
	ClearHeaders pulumi.StringArrayInput
	// HTTP domain.
	Domain pulumi.StringInput
	// Original error codes.
	ErrorCodes pulumi.IntArrayInput
	// ID of the layer7 listener.
	ListenerId pulumi.StringInput
	// New error code.
	NewErrorCode pulumi.IntPtrInput
	// Response headers to be set.
	SetHeaders pulumi.MapInput
}

func (DomainErrorPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainErrorPageArgs)(nil)).Elem()
}

type DomainErrorPageInput interface {
	pulumi.Input

	ToDomainErrorPageOutput() DomainErrorPageOutput
	ToDomainErrorPageOutputWithContext(ctx context.Context) DomainErrorPageOutput
}

func (*DomainErrorPage) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainErrorPage)(nil)).Elem()
}

func (i *DomainErrorPage) ToDomainErrorPageOutput() DomainErrorPageOutput {
	return i.ToDomainErrorPageOutputWithContext(context.Background())
}

func (i *DomainErrorPage) ToDomainErrorPageOutputWithContext(ctx context.Context) DomainErrorPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageOutput)
}

// DomainErrorPageArrayInput is an input type that accepts DomainErrorPageArray and DomainErrorPageArrayOutput values.
// You can construct a concrete instance of `DomainErrorPageArrayInput` via:
//
//	DomainErrorPageArray{ DomainErrorPageArgs{...} }
type DomainErrorPageArrayInput interface {
	pulumi.Input

	ToDomainErrorPageArrayOutput() DomainErrorPageArrayOutput
	ToDomainErrorPageArrayOutputWithContext(context.Context) DomainErrorPageArrayOutput
}

type DomainErrorPageArray []DomainErrorPageInput

func (DomainErrorPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainErrorPage)(nil)).Elem()
}

func (i DomainErrorPageArray) ToDomainErrorPageArrayOutput() DomainErrorPageArrayOutput {
	return i.ToDomainErrorPageArrayOutputWithContext(context.Background())
}

func (i DomainErrorPageArray) ToDomainErrorPageArrayOutputWithContext(ctx context.Context) DomainErrorPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageArrayOutput)
}

// DomainErrorPageMapInput is an input type that accepts DomainErrorPageMap and DomainErrorPageMapOutput values.
// You can construct a concrete instance of `DomainErrorPageMapInput` via:
//
//	DomainErrorPageMap{ "key": DomainErrorPageArgs{...} }
type DomainErrorPageMapInput interface {
	pulumi.Input

	ToDomainErrorPageMapOutput() DomainErrorPageMapOutput
	ToDomainErrorPageMapOutputWithContext(context.Context) DomainErrorPageMapOutput
}

type DomainErrorPageMap map[string]DomainErrorPageInput

func (DomainErrorPageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainErrorPage)(nil)).Elem()
}

func (i DomainErrorPageMap) ToDomainErrorPageMapOutput() DomainErrorPageMapOutput {
	return i.ToDomainErrorPageMapOutputWithContext(context.Background())
}

func (i DomainErrorPageMap) ToDomainErrorPageMapOutputWithContext(ctx context.Context) DomainErrorPageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainErrorPageMapOutput)
}

type DomainErrorPageOutput struct{ *pulumi.OutputState }

func (DomainErrorPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainErrorPage)(nil)).Elem()
}

func (o DomainErrorPageOutput) ToDomainErrorPageOutput() DomainErrorPageOutput {
	return o
}

func (o DomainErrorPageOutput) ToDomainErrorPageOutputWithContext(ctx context.Context) DomainErrorPageOutput {
	return o
}

// New response body.
func (o DomainErrorPageOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.StringOutput { return v.Body }).(pulumi.StringOutput)
}

// Response headers to be removed.
func (o DomainErrorPageOutput) ClearHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.StringArrayOutput { return v.ClearHeaders }).(pulumi.StringArrayOutput)
}

// HTTP domain.
func (o DomainErrorPageOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Original error codes.
func (o DomainErrorPageOutput) ErrorCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.IntArrayOutput { return v.ErrorCodes }).(pulumi.IntArrayOutput)
}

// ID of the layer7 listener.
func (o DomainErrorPageOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

// New error code.
func (o DomainErrorPageOutput) NewErrorCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.IntPtrOutput { return v.NewErrorCode }).(pulumi.IntPtrOutput)
}

// Response headers to be set.
func (o DomainErrorPageOutput) SetHeaders() pulumi.MapOutput {
	return o.ApplyT(func(v *DomainErrorPage) pulumi.MapOutput { return v.SetHeaders }).(pulumi.MapOutput)
}

type DomainErrorPageArrayOutput struct{ *pulumi.OutputState }

func (DomainErrorPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainErrorPage)(nil)).Elem()
}

func (o DomainErrorPageArrayOutput) ToDomainErrorPageArrayOutput() DomainErrorPageArrayOutput {
	return o
}

func (o DomainErrorPageArrayOutput) ToDomainErrorPageArrayOutputWithContext(ctx context.Context) DomainErrorPageArrayOutput {
	return o
}

func (o DomainErrorPageArrayOutput) Index(i pulumi.IntInput) DomainErrorPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainErrorPage {
		return vs[0].([]*DomainErrorPage)[vs[1].(int)]
	}).(DomainErrorPageOutput)
}

type DomainErrorPageMapOutput struct{ *pulumi.OutputState }

func (DomainErrorPageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainErrorPage)(nil)).Elem()
}

func (o DomainErrorPageMapOutput) ToDomainErrorPageMapOutput() DomainErrorPageMapOutput {
	return o
}

func (o DomainErrorPageMapOutput) ToDomainErrorPageMapOutputWithContext(ctx context.Context) DomainErrorPageMapOutput {
	return o
}

func (o DomainErrorPageMapOutput) MapIndex(k pulumi.StringInput) DomainErrorPageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainErrorPage {
		return vs[0].(map[string]*DomainErrorPage)[vs[1].(string)]
	}).(DomainErrorPageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPageInput)(nil)).Elem(), &DomainErrorPage{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPageArrayInput)(nil)).Elem(), DomainErrorPageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainErrorPageMapInput)(nil)).Elem(), DomainErrorPageMap{})
	pulumi.RegisterOutputType(DomainErrorPageOutput{})
	pulumi.RegisterOutputType(DomainErrorPageArrayOutput{})
	pulumi.RegisterOutputType(DomainErrorPageMapOutput{})
}
