// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

func GetAssumeRole(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:assumeRole")
}
func GetAssumeRoleWithSaml(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:assumeRoleWithSaml")
}
func GetAssumeRoleWithWebIdentity(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:assumeRoleWithWebIdentity")
}

// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
func GetCamRoleName(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:camRoleName")
}

// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
func GetCosDomain(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:cosDomain")
}

// The root domain of the API request, Default is `tencentcloudapi.com`.
func GetDomain(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:domain")
}

// Whether to enable pod oidc.
func GetEnablePodOidc(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "tencentcloud:enablePodOidc")
}

// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
// variable. If not set, the default profile created with `tccli configure` will be used.
func GetProfile(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:profile")
}

// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
func GetProtocol(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:protocol")
}

// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
// default input value is ap-guangzhou.
func GetRegion(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "tencentcloud:region")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_REGION"); d != nil {
		value = d.(string)
	}
	return value
}

// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
func GetSecretId(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "tencentcloud:secretId")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_SECRET_ID"); d != nil {
		value = d.(string)
	}
	return value
}

// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
func GetSecretKey(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "tencentcloud:secretKey")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_SECRET_KEY"); d != nil {
		value = d.(string)
	}
	return value
}

// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
// environment variable. Notice: for supported products, please refer to: [temporary key supported
// products](https://intl.cloud.tencent.com/document/product/598/10588).
func GetSecurityToken(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "tencentcloud:securityToken")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_SECURITY_TOKEN"); d != nil {
		value = d.(string)
	}
	return value
}

// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
// environment variable. If not set this defaults to ~/.tccli.
func GetSharedCredentialsDir(ctx *pulumi.Context) string {
	return config.Get(ctx, "tencentcloud:sharedCredentialsDir")
}
