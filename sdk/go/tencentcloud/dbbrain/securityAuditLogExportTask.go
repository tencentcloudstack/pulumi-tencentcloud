// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dbbrain securityAuditLogExportTask
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dbbrain.NewSecurityAuditLogExportTask(ctx, "task", &Dbbrain.SecurityAuditLogExportTaskArgs{
//				DangerLevels: pulumi.IntArray{
//					pulumi.Int(0),
//					pulumi.Int(1),
//					pulumi.Int(2),
//				},
//				EndTime:         pulumi.String("2020-12-28 01:00:00"),
//				Product:         pulumi.String("mysql"),
//				SecAuditGroupId: pulumi.String("sec_audit_group_id"),
//				StartTime:       pulumi.String("2020-12-28 00:00:00"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SecurityAuditLogExportTask struct {
	pulumi.CustomResourceState

	// request of async id.
	AsyncRequestId pulumi.IntOutput `pulumi:"asyncRequestId"`
	// List of log risk levels, supported values include: 0 no risk; 1 low risk; 2 medium risk; 3 high risk.
	DangerLevels pulumi.IntArrayOutput `pulumi:"dangerLevels"`
	// end time.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// product, optional value is mysql.
	Product pulumi.StringOutput `pulumi:"product"`
	// security audit group id.
	SecAuditGroupId pulumi.StringOutput `pulumi:"secAuditGroupId"`
	// start time.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
}

// NewSecurityAuditLogExportTask registers a new resource with the given unique name, arguments, and options.
func NewSecurityAuditLogExportTask(ctx *pulumi.Context,
	name string, args *SecurityAuditLogExportTaskArgs, opts ...pulumi.ResourceOption) (*SecurityAuditLogExportTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndTime == nil {
		return nil, errors.New("invalid value for required argument 'EndTime'")
	}
	if args.Product == nil {
		return nil, errors.New("invalid value for required argument 'Product'")
	}
	if args.SecAuditGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecAuditGroupId'")
	}
	if args.StartTime == nil {
		return nil, errors.New("invalid value for required argument 'StartTime'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SecurityAuditLogExportTask
	err := ctx.RegisterResource("tencentcloud:Dbbrain/securityAuditLogExportTask:SecurityAuditLogExportTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityAuditLogExportTask gets an existing SecurityAuditLogExportTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityAuditLogExportTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityAuditLogExportTaskState, opts ...pulumi.ResourceOption) (*SecurityAuditLogExportTask, error) {
	var resource SecurityAuditLogExportTask
	err := ctx.ReadResource("tencentcloud:Dbbrain/securityAuditLogExportTask:SecurityAuditLogExportTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityAuditLogExportTask resources.
type securityAuditLogExportTaskState struct {
	// request of async id.
	AsyncRequestId *int `pulumi:"asyncRequestId"`
	// List of log risk levels, supported values include: 0 no risk; 1 low risk; 2 medium risk; 3 high risk.
	DangerLevels []int `pulumi:"dangerLevels"`
	// end time.
	EndTime *string `pulumi:"endTime"`
	// product, optional value is mysql.
	Product *string `pulumi:"product"`
	// security audit group id.
	SecAuditGroupId *string `pulumi:"secAuditGroupId"`
	// start time.
	StartTime *string `pulumi:"startTime"`
}

type SecurityAuditLogExportTaskState struct {
	// request of async id.
	AsyncRequestId pulumi.IntPtrInput
	// List of log risk levels, supported values include: 0 no risk; 1 low risk; 2 medium risk; 3 high risk.
	DangerLevels pulumi.IntArrayInput
	// end time.
	EndTime pulumi.StringPtrInput
	// product, optional value is mysql.
	Product pulumi.StringPtrInput
	// security audit group id.
	SecAuditGroupId pulumi.StringPtrInput
	// start time.
	StartTime pulumi.StringPtrInput
}

func (SecurityAuditLogExportTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAuditLogExportTaskState)(nil)).Elem()
}

type securityAuditLogExportTaskArgs struct {
	// List of log risk levels, supported values include: 0 no risk; 1 low risk; 2 medium risk; 3 high risk.
	DangerLevels []int `pulumi:"dangerLevels"`
	// end time.
	EndTime string `pulumi:"endTime"`
	// product, optional value is mysql.
	Product string `pulumi:"product"`
	// security audit group id.
	SecAuditGroupId string `pulumi:"secAuditGroupId"`
	// start time.
	StartTime string `pulumi:"startTime"`
}

// The set of arguments for constructing a SecurityAuditLogExportTask resource.
type SecurityAuditLogExportTaskArgs struct {
	// List of log risk levels, supported values include: 0 no risk; 1 low risk; 2 medium risk; 3 high risk.
	DangerLevels pulumi.IntArrayInput
	// end time.
	EndTime pulumi.StringInput
	// product, optional value is mysql.
	Product pulumi.StringInput
	// security audit group id.
	SecAuditGroupId pulumi.StringInput
	// start time.
	StartTime pulumi.StringInput
}

func (SecurityAuditLogExportTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAuditLogExportTaskArgs)(nil)).Elem()
}

type SecurityAuditLogExportTaskInput interface {
	pulumi.Input

	ToSecurityAuditLogExportTaskOutput() SecurityAuditLogExportTaskOutput
	ToSecurityAuditLogExportTaskOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskOutput
}

func (*SecurityAuditLogExportTask) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAuditLogExportTask)(nil)).Elem()
}

func (i *SecurityAuditLogExportTask) ToSecurityAuditLogExportTaskOutput() SecurityAuditLogExportTaskOutput {
	return i.ToSecurityAuditLogExportTaskOutputWithContext(context.Background())
}

func (i *SecurityAuditLogExportTask) ToSecurityAuditLogExportTaskOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAuditLogExportTaskOutput)
}

// SecurityAuditLogExportTaskArrayInput is an input type that accepts SecurityAuditLogExportTaskArray and SecurityAuditLogExportTaskArrayOutput values.
// You can construct a concrete instance of `SecurityAuditLogExportTaskArrayInput` via:
//
//	SecurityAuditLogExportTaskArray{ SecurityAuditLogExportTaskArgs{...} }
type SecurityAuditLogExportTaskArrayInput interface {
	pulumi.Input

	ToSecurityAuditLogExportTaskArrayOutput() SecurityAuditLogExportTaskArrayOutput
	ToSecurityAuditLogExportTaskArrayOutputWithContext(context.Context) SecurityAuditLogExportTaskArrayOutput
}

type SecurityAuditLogExportTaskArray []SecurityAuditLogExportTaskInput

func (SecurityAuditLogExportTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAuditLogExportTask)(nil)).Elem()
}

func (i SecurityAuditLogExportTaskArray) ToSecurityAuditLogExportTaskArrayOutput() SecurityAuditLogExportTaskArrayOutput {
	return i.ToSecurityAuditLogExportTaskArrayOutputWithContext(context.Background())
}

func (i SecurityAuditLogExportTaskArray) ToSecurityAuditLogExportTaskArrayOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAuditLogExportTaskArrayOutput)
}

// SecurityAuditLogExportTaskMapInput is an input type that accepts SecurityAuditLogExportTaskMap and SecurityAuditLogExportTaskMapOutput values.
// You can construct a concrete instance of `SecurityAuditLogExportTaskMapInput` via:
//
//	SecurityAuditLogExportTaskMap{ "key": SecurityAuditLogExportTaskArgs{...} }
type SecurityAuditLogExportTaskMapInput interface {
	pulumi.Input

	ToSecurityAuditLogExportTaskMapOutput() SecurityAuditLogExportTaskMapOutput
	ToSecurityAuditLogExportTaskMapOutputWithContext(context.Context) SecurityAuditLogExportTaskMapOutput
}

type SecurityAuditLogExportTaskMap map[string]SecurityAuditLogExportTaskInput

func (SecurityAuditLogExportTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAuditLogExportTask)(nil)).Elem()
}

func (i SecurityAuditLogExportTaskMap) ToSecurityAuditLogExportTaskMapOutput() SecurityAuditLogExportTaskMapOutput {
	return i.ToSecurityAuditLogExportTaskMapOutputWithContext(context.Background())
}

func (i SecurityAuditLogExportTaskMap) ToSecurityAuditLogExportTaskMapOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAuditLogExportTaskMapOutput)
}

type SecurityAuditLogExportTaskOutput struct{ *pulumi.OutputState }

func (SecurityAuditLogExportTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAuditLogExportTask)(nil)).Elem()
}

func (o SecurityAuditLogExportTaskOutput) ToSecurityAuditLogExportTaskOutput() SecurityAuditLogExportTaskOutput {
	return o
}

func (o SecurityAuditLogExportTaskOutput) ToSecurityAuditLogExportTaskOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskOutput {
	return o
}

// request of async id.
func (o SecurityAuditLogExportTaskOutput) AsyncRequestId() pulumi.IntOutput {
	return o.ApplyT(func(v *SecurityAuditLogExportTask) pulumi.IntOutput { return v.AsyncRequestId }).(pulumi.IntOutput)
}

// List of log risk levels, supported values include: 0 no risk; 1 low risk; 2 medium risk; 3 high risk.
func (o SecurityAuditLogExportTaskOutput) DangerLevels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SecurityAuditLogExportTask) pulumi.IntArrayOutput { return v.DangerLevels }).(pulumi.IntArrayOutput)
}

// end time.
func (o SecurityAuditLogExportTaskOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAuditLogExportTask) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// product, optional value is mysql.
func (o SecurityAuditLogExportTaskOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAuditLogExportTask) pulumi.StringOutput { return v.Product }).(pulumi.StringOutput)
}

// security audit group id.
func (o SecurityAuditLogExportTaskOutput) SecAuditGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAuditLogExportTask) pulumi.StringOutput { return v.SecAuditGroupId }).(pulumi.StringOutput)
}

// start time.
func (o SecurityAuditLogExportTaskOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAuditLogExportTask) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

type SecurityAuditLogExportTaskArrayOutput struct{ *pulumi.OutputState }

func (SecurityAuditLogExportTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAuditLogExportTask)(nil)).Elem()
}

func (o SecurityAuditLogExportTaskArrayOutput) ToSecurityAuditLogExportTaskArrayOutput() SecurityAuditLogExportTaskArrayOutput {
	return o
}

func (o SecurityAuditLogExportTaskArrayOutput) ToSecurityAuditLogExportTaskArrayOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskArrayOutput {
	return o
}

func (o SecurityAuditLogExportTaskArrayOutput) Index(i pulumi.IntInput) SecurityAuditLogExportTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityAuditLogExportTask {
		return vs[0].([]*SecurityAuditLogExportTask)[vs[1].(int)]
	}).(SecurityAuditLogExportTaskOutput)
}

type SecurityAuditLogExportTaskMapOutput struct{ *pulumi.OutputState }

func (SecurityAuditLogExportTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAuditLogExportTask)(nil)).Elem()
}

func (o SecurityAuditLogExportTaskMapOutput) ToSecurityAuditLogExportTaskMapOutput() SecurityAuditLogExportTaskMapOutput {
	return o
}

func (o SecurityAuditLogExportTaskMapOutput) ToSecurityAuditLogExportTaskMapOutputWithContext(ctx context.Context) SecurityAuditLogExportTaskMapOutput {
	return o
}

func (o SecurityAuditLogExportTaskMapOutput) MapIndex(k pulumi.StringInput) SecurityAuditLogExportTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityAuditLogExportTask {
		return vs[0].(map[string]*SecurityAuditLogExportTask)[vs[1].(string)]
	}).(SecurityAuditLogExportTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAuditLogExportTaskInput)(nil)).Elem(), &SecurityAuditLogExportTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAuditLogExportTaskArrayInput)(nil)).Elem(), SecurityAuditLogExportTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAuditLogExportTaskMapInput)(nil)).Elem(), SecurityAuditLogExportTaskMap{})
	pulumi.RegisterOutputType(SecurityAuditLogExportTaskOutput{})
	pulumi.RegisterOutputType(SecurityAuditLogExportTaskArrayOutput{})
	pulumi.RegisterOutputType(SecurityAuditLogExportTaskMapOutput{})
}
