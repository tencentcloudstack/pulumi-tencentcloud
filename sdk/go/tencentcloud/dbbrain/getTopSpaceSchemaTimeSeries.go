// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dbbrain topSpaceSchemaTimeSeries
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dbbrain.GetTopSpaceSchemaTimeSeries(ctx, &dbbrain.GetTopSpaceSchemaTimeSeriesArgs{
//				EndDate:    pulumi.StringRef(fmt.Sprintf("%v%v", "%", "s")),
//				InstanceId: fmt.Sprintf("%v%v", "%", "s"),
//				Product:    pulumi.StringRef("mysql"),
//				SortBy:     pulumi.StringRef("DataLength"),
//				StartDate:  pulumi.StringRef(fmt.Sprintf("%v%v", "%", "s")),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTopSpaceSchemaTimeSeries(ctx *pulumi.Context, args *GetTopSpaceSchemaTimeSeriesArgs, opts ...pulumi.InvokeOption) (*GetTopSpaceSchemaTimeSeriesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTopSpaceSchemaTimeSeriesResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getTopSpaceSchemaTimeSeries:getTopSpaceSchemaTimeSeries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTopSpaceSchemaTimeSeries.
type GetTopSpaceSchemaTimeSeriesArgs struct {
	// The deadline, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the current day.
	EndDate *string `pulumi:"endDate"`
	// instance id.
	InstanceId string `pulumi:"instanceId"`
	// The number of Top libraries to return, the maximum value is 100, and the default is 20.
	Limit *int `pulumi:"limit"`
	// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
	Product *string `pulumi:"product"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// The sorting field used to filter the Top library. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
	SortBy *string `pulumi:"sortBy"`
	// The start date, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the 6th day before the deadline.
	StartDate *string `pulumi:"startDate"`
}

// A collection of values returned by getTopSpaceSchemaTimeSeries.
type GetTopSpaceSchemaTimeSeriesResult struct {
	EndDate *string `pulumi:"endDate"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	Limit            *int    `pulumi:"limit"`
	Product          *string `pulumi:"product"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SortBy           *string `pulumi:"sortBy"`
	StartDate        *string `pulumi:"startDate"`
	// The time series data list of the returned top library space statistics.
	TopSpaceSchemaTimeSeries []GetTopSpaceSchemaTimeSeriesTopSpaceSchemaTimeSeries `pulumi:"topSpaceSchemaTimeSeries"`
}

func GetTopSpaceSchemaTimeSeriesOutput(ctx *pulumi.Context, args GetTopSpaceSchemaTimeSeriesOutputArgs, opts ...pulumi.InvokeOption) GetTopSpaceSchemaTimeSeriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTopSpaceSchemaTimeSeriesResult, error) {
			args := v.(GetTopSpaceSchemaTimeSeriesArgs)
			r, err := GetTopSpaceSchemaTimeSeries(ctx, &args, opts...)
			var s GetTopSpaceSchemaTimeSeriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTopSpaceSchemaTimeSeriesResultOutput)
}

// A collection of arguments for invoking getTopSpaceSchemaTimeSeries.
type GetTopSpaceSchemaTimeSeriesOutputArgs struct {
	// The deadline, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the current day.
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The number of Top libraries to return, the maximum value is 100, and the default is 20.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// The sorting field used to filter the Top library. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// The start date, such as 2021-01-01, the earliest is the 29th day before the current day, and the default is the 6th day before the deadline.
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
}

func (GetTopSpaceSchemaTimeSeriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopSpaceSchemaTimeSeriesArgs)(nil)).Elem()
}

// A collection of values returned by getTopSpaceSchemaTimeSeries.
type GetTopSpaceSchemaTimeSeriesResultOutput struct{ *pulumi.OutputState }

func (GetTopSpaceSchemaTimeSeriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopSpaceSchemaTimeSeriesResult)(nil)).Elem()
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) ToGetTopSpaceSchemaTimeSeriesResultOutput() GetTopSpaceSchemaTimeSeriesResultOutput {
	return o
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) ToGetTopSpaceSchemaTimeSeriesResultOutputWithContext(ctx context.Context) GetTopSpaceSchemaTimeSeriesResultOutput {
	return o
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTopSpaceSchemaTimeSeriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) *string { return v.Product }).(pulumi.StringPtrOutput)
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o GetTopSpaceSchemaTimeSeriesResultOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// The time series data list of the returned top library space statistics.
func (o GetTopSpaceSchemaTimeSeriesResultOutput) TopSpaceSchemaTimeSeries() GetTopSpaceSchemaTimeSeriesTopSpaceSchemaTimeSeriesArrayOutput {
	return o.ApplyT(func(v GetTopSpaceSchemaTimeSeriesResult) []GetTopSpaceSchemaTimeSeriesTopSpaceSchemaTimeSeries {
		return v.TopSpaceSchemaTimeSeries
	}).(GetTopSpaceSchemaTimeSeriesTopSpaceSchemaTimeSeriesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTopSpaceSchemaTimeSeriesResultOutput{})
}
