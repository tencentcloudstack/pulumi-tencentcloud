// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dbbrain topSpaceTables
//
// ## Example Usage
// ### Sort by PhysicalFileSize
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dbbrain.GetTopSpaceTables(ctx, &dbbrain.GetTopSpaceTablesArgs{
//				InstanceId: fmt.Sprintf("%v%v", "%", "s"),
//				Product:    pulumi.StringRef("mysql"),
//				SortBy:     pulumi.StringRef("PhysicalFileSize"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Sort by TotalLength
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dbbrain.GetTopSpaceTables(ctx, &dbbrain.GetTopSpaceTablesArgs{
//				InstanceId: fmt.Sprintf("%v%v", "%", "s"),
//				Product:    pulumi.StringRef("mysql"),
//				SortBy:     pulumi.StringRef("PhysicalFileSize"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTopSpaceTables(ctx *pulumi.Context, args *GetTopSpaceTablesArgs, opts ...pulumi.InvokeOption) (*GetTopSpaceTablesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTopSpaceTablesResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getTopSpaceTables:getTopSpaceTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTopSpaceTables.
type GetTopSpaceTablesArgs struct {
	// instance id.
	InstanceId string `pulumi:"instanceId"`
	// The number of Top tables returned, the maximum value is 100, and the default is 20.
	Limit *int `pulumi:"limit"`
	// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
	Product *string `pulumi:"product"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// The sorting field used to filter the Top table. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
	SortBy *string `pulumi:"sortBy"`
}

// A collection of values returned by getTopSpaceTables.
type GetTopSpaceTablesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	Limit            *int    `pulumi:"limit"`
	Product          *string `pulumi:"product"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SortBy           *string `pulumi:"sortBy"`
	// The timestamp (in seconds) of collecting tablespace data.
	Timestamp int `pulumi:"timestamp"`
	// The list of Top tablespace statistics returned.
	TopSpaceTables []GetTopSpaceTablesTopSpaceTable `pulumi:"topSpaceTables"`
}

func GetTopSpaceTablesOutput(ctx *pulumi.Context, args GetTopSpaceTablesOutputArgs, opts ...pulumi.InvokeOption) GetTopSpaceTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTopSpaceTablesResult, error) {
			args := v.(GetTopSpaceTablesArgs)
			r, err := GetTopSpaceTables(ctx, &args, opts...)
			var s GetTopSpaceTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTopSpaceTablesResultOutput)
}

// A collection of arguments for invoking getTopSpaceTables.
type GetTopSpaceTablesOutputArgs struct {
	// instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The number of Top tables returned, the maximum value is 100, and the default is 20.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for MySQL, the default is mysql.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// The sorting field used to filter the Top table. The optional fields include DataLength, IndexLength, TotalLength, DataFree, FragRatio, TableRows, and PhysicalFileSize (only supported by ApsaraDB for MySQL instances). The default for ApsaraDB for MySQL instances is PhysicalFileSize, and the default for other product instances is TotalLength.
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
}

func (GetTopSpaceTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopSpaceTablesArgs)(nil)).Elem()
}

// A collection of values returned by getTopSpaceTables.
type GetTopSpaceTablesResultOutput struct{ *pulumi.OutputState }

func (GetTopSpaceTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopSpaceTablesResult)(nil)).Elem()
}

func (o GetTopSpaceTablesResultOutput) ToGetTopSpaceTablesResultOutput() GetTopSpaceTablesResultOutput {
	return o
}

func (o GetTopSpaceTablesResultOutput) ToGetTopSpaceTablesResultOutputWithContext(ctx context.Context) GetTopSpaceTablesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTopSpaceTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTopSpaceTablesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetTopSpaceTablesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetTopSpaceTablesResultOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) *string { return v.Product }).(pulumi.StringPtrOutput)
}

func (o GetTopSpaceTablesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTopSpaceTablesResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

// The timestamp (in seconds) of collecting tablespace data.
func (o GetTopSpaceTablesResultOutput) Timestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) int { return v.Timestamp }).(pulumi.IntOutput)
}

// The list of Top tablespace statistics returned.
func (o GetTopSpaceTablesResultOutput) TopSpaceTables() GetTopSpaceTablesTopSpaceTableArrayOutput {
	return o.ApplyT(func(v GetTopSpaceTablesResult) []GetTopSpaceTablesTopSpaceTable { return v.TopSpaceTables }).(GetTopSpaceTablesTopSpaceTableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTopSpaceTablesResultOutput{})
}
