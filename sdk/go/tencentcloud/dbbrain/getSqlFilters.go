// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dbbrain sqlFilters
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			sqlFilter, err := Dbbrain.NewSqlFilter(ctx, "sqlFilter", &Dbbrain.SqlFilterArgs{
//				InstanceId: pulumi.String("mysql_ins_id"),
//				SessionToken: &dbbrain.SqlFilterSessionTokenArgs{
//					User:     pulumi.String("user"),
//					Password: pulumi.String("password"),
//				},
//				SqlType:        pulumi.String("SELECT"),
//				FilterKey:      pulumi.String("test"),
//				MaxConcurrency: pulumi.Int(10),
//				Duration:       pulumi.Int(3600),
//			})
//			if err != nil {
//				return err
//			}
//			_ = Dbbrain.GetSqlFiltersOutput(ctx, dbbrain.GetSqlFiltersOutputArgs{
//				InstanceId: pulumi.String("mysql_ins_id"),
//				FilterIds: pulumi.IntArray{
//					sqlFilter.FilterId,
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetSqlFilters(ctx *pulumi.Context, args *GetSqlFiltersArgs, opts ...pulumi.InvokeOption) (*GetSqlFiltersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSqlFiltersResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getSqlFilters:getSqlFilters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlFilters.
type GetSqlFiltersArgs struct {
	// filter id list.
	FilterIds []int `pulumi:"filterIds"`
	// instance id.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// status list.
	Statuses []string `pulumi:"statuses"`
}

// A collection of values returned by getSqlFilters.
type GetSqlFiltersResult struct {
	FilterIds []int `pulumi:"filterIds"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// sql filter list.
	Lists            []GetSqlFiltersList `pulumi:"lists"`
	ResultOutputFile *string             `pulumi:"resultOutputFile"`
	Statuses         []string            `pulumi:"statuses"`
}

func GetSqlFiltersOutput(ctx *pulumi.Context, args GetSqlFiltersOutputArgs, opts ...pulumi.InvokeOption) GetSqlFiltersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlFiltersResult, error) {
			args := v.(GetSqlFiltersArgs)
			r, err := GetSqlFilters(ctx, &args, opts...)
			var s GetSqlFiltersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlFiltersResultOutput)
}

// A collection of arguments for invoking getSqlFilters.
type GetSqlFiltersOutputArgs struct {
	// filter id list.
	FilterIds pulumi.IntArrayInput `pulumi:"filterIds"`
	// instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// status list.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetSqlFiltersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlFiltersArgs)(nil)).Elem()
}

// A collection of values returned by getSqlFilters.
type GetSqlFiltersResultOutput struct{ *pulumi.OutputState }

func (GetSqlFiltersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlFiltersResult)(nil)).Elem()
}

func (o GetSqlFiltersResultOutput) ToGetSqlFiltersResultOutput() GetSqlFiltersResultOutput {
	return o
}

func (o GetSqlFiltersResultOutput) ToGetSqlFiltersResultOutputWithContext(ctx context.Context) GetSqlFiltersResultOutput {
	return o
}

func (o GetSqlFiltersResultOutput) FilterIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSqlFiltersResult) []int { return v.FilterIds }).(pulumi.IntArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlFiltersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlFiltersResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlFiltersResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// sql filter list.
func (o GetSqlFiltersResultOutput) Lists() GetSqlFiltersListArrayOutput {
	return o.ApplyT(func(v GetSqlFiltersResult) []GetSqlFiltersList { return v.Lists }).(GetSqlFiltersListArrayOutput)
}

func (o GetSqlFiltersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlFiltersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSqlFiltersResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSqlFiltersResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlFiltersResultOutput{})
}
