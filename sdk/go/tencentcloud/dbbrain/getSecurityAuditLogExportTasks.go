// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dbbrain securityAuditLogExportTasks
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dbbrain"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			task, err := Dbbrain.NewSecurityAuditLogExportTask(ctx, "task", &Dbbrain.SecurityAuditLogExportTaskArgs{
//				SecAuditGroupId: pulumi.String("sec_audit_group_id"),
//				StartTime:       pulumi.String("start_time"),
//				EndTime:         pulumi.String("end_time"),
//				Product:         pulumi.String("mysql"),
//				DangerLevels: pulumi.IntArray{
//					pulumi.Int(0),
//					pulumi.Int(1),
//					pulumi.Int(2),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = Dbbrain.GetSecurityAuditLogExportTasksOutput(ctx, dbbrain.GetSecurityAuditLogExportTasksOutputArgs{
//				SecAuditGroupId: pulumi.String("sec_audit_group_id"),
//				Product:         pulumi.String("mysql"),
//				AsyncRequestIds: pulumi.IntArray{
//					task.AsyncRequestId,
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetSecurityAuditLogExportTasks(ctx *pulumi.Context, args *GetSecurityAuditLogExportTasksArgs, opts ...pulumi.InvokeOption) (*GetSecurityAuditLogExportTasksResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecurityAuditLogExportTasksResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getSecurityAuditLogExportTasks:getSecurityAuditLogExportTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityAuditLogExportTasks.
type GetSecurityAuditLogExportTasksArgs struct {
	// async request id list.
	AsyncRequestIds []int `pulumi:"asyncRequestIds"`
	// product, optional value is mysql.
	Product string `pulumi:"product"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// security audit group id.
	SecAuditGroupId string `pulumi:"secAuditGroupId"`
}

// A collection of values returned by getSecurityAuditLogExportTasks.
type GetSecurityAuditLogExportTasksResult struct {
	AsyncRequestIds []int `pulumi:"asyncRequestIds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// security audit log export task list.
	Lists            []GetSecurityAuditLogExportTasksList `pulumi:"lists"`
	Product          string                               `pulumi:"product"`
	ResultOutputFile *string                              `pulumi:"resultOutputFile"`
	SecAuditGroupId  string                               `pulumi:"secAuditGroupId"`
}

func GetSecurityAuditLogExportTasksOutput(ctx *pulumi.Context, args GetSecurityAuditLogExportTasksOutputArgs, opts ...pulumi.InvokeOption) GetSecurityAuditLogExportTasksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityAuditLogExportTasksResult, error) {
			args := v.(GetSecurityAuditLogExportTasksArgs)
			r, err := GetSecurityAuditLogExportTasks(ctx, &args, opts...)
			var s GetSecurityAuditLogExportTasksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityAuditLogExportTasksResultOutput)
}

// A collection of arguments for invoking getSecurityAuditLogExportTasks.
type GetSecurityAuditLogExportTasksOutputArgs struct {
	// async request id list.
	AsyncRequestIds pulumi.IntArrayInput `pulumi:"asyncRequestIds"`
	// product, optional value is mysql.
	Product pulumi.StringInput `pulumi:"product"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// security audit group id.
	SecAuditGroupId pulumi.StringInput `pulumi:"secAuditGroupId"`
}

func (GetSecurityAuditLogExportTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAuditLogExportTasksArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityAuditLogExportTasks.
type GetSecurityAuditLogExportTasksResultOutput struct{ *pulumi.OutputState }

func (GetSecurityAuditLogExportTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAuditLogExportTasksResult)(nil)).Elem()
}

func (o GetSecurityAuditLogExportTasksResultOutput) ToGetSecurityAuditLogExportTasksResultOutput() GetSecurityAuditLogExportTasksResultOutput {
	return o
}

func (o GetSecurityAuditLogExportTasksResultOutput) ToGetSecurityAuditLogExportTasksResultOutputWithContext(ctx context.Context) GetSecurityAuditLogExportTasksResultOutput {
	return o
}

func (o GetSecurityAuditLogExportTasksResultOutput) AsyncRequestIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksResult) []int { return v.AsyncRequestIds }).(pulumi.IntArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityAuditLogExportTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

// security audit log export task list.
func (o GetSecurityAuditLogExportTasksResultOutput) Lists() GetSecurityAuditLogExportTasksListArrayOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksResult) []GetSecurityAuditLogExportTasksList { return v.Lists }).(GetSecurityAuditLogExportTasksListArrayOutput)
}

func (o GetSecurityAuditLogExportTasksResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksResult) string { return v.Product }).(pulumi.StringOutput)
}

func (o GetSecurityAuditLogExportTasksResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAuditLogExportTasksResultOutput) SecAuditGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAuditLogExportTasksResult) string { return v.SecAuditGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityAuditLogExportTasksResultOutput{})
}
