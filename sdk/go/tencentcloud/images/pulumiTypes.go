// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package images

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstanceImage struct {
	// Architecture of the image.
	Architecture string `pulumi:"architecture"`
	// Created time of the image.
	CreatedTime string `pulumi:"createdTime"`
	// Image creator of the image.
	ImageCreator string `pulumi:"imageCreator"`
	// Description of the image.
	ImageDescription string `pulumi:"imageDescription"`
	// ID of the image to be queried.
	ImageId string `pulumi:"imageId"`
	// Name of the image.
	ImageName string `pulumi:"imageName"`
	// Size of the image.
	ImageSize int `pulumi:"imageSize"`
	// Image source of the image.
	ImageSource string `pulumi:"imageSource"`
	// State of the image.
	ImageState string `pulumi:"imageState"`
	// A list of the image type to be queried. Valid values: 'PUBLIC_IMAGE', 'PRIVATE_IMAGE', 'SHARED_IMAGE', 'MARKET_IMAGE'.
	ImageType string `pulumi:"imageType"`
	// A string to apply with fuzzy match to the osName attribute on the image list returned by TencentCloud, conflict with 'image_name_regex'.
	OsName string `pulumi:"osName"`
	// Platform of the image.
	Platform string `pulumi:"platform"`
	// List of snapshot details.
	Snapshots []GetInstanceImageSnapshot `pulumi:"snapshots"`
	// Whether support cloud-init.
	SupportCloudInit bool `pulumi:"supportCloudInit"`
	// Sync percent of the image.
	SyncPercent int `pulumi:"syncPercent"`
}

// GetInstanceImageInput is an input type that accepts GetInstanceImageArgs and GetInstanceImageOutput values.
// You can construct a concrete instance of `GetInstanceImageInput` via:
//
//	GetInstanceImageArgs{...}
type GetInstanceImageInput interface {
	pulumi.Input

	ToGetInstanceImageOutput() GetInstanceImageOutput
	ToGetInstanceImageOutputWithContext(context.Context) GetInstanceImageOutput
}

type GetInstanceImageArgs struct {
	// Architecture of the image.
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// Created time of the image.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Image creator of the image.
	ImageCreator pulumi.StringInput `pulumi:"imageCreator"`
	// Description of the image.
	ImageDescription pulumi.StringInput `pulumi:"imageDescription"`
	// ID of the image to be queried.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Name of the image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// Size of the image.
	ImageSize pulumi.IntInput `pulumi:"imageSize"`
	// Image source of the image.
	ImageSource pulumi.StringInput `pulumi:"imageSource"`
	// State of the image.
	ImageState pulumi.StringInput `pulumi:"imageState"`
	// A list of the image type to be queried. Valid values: 'PUBLIC_IMAGE', 'PRIVATE_IMAGE', 'SHARED_IMAGE', 'MARKET_IMAGE'.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// A string to apply with fuzzy match to the osName attribute on the image list returned by TencentCloud, conflict with 'image_name_regex'.
	OsName pulumi.StringInput `pulumi:"osName"`
	// Platform of the image.
	Platform pulumi.StringInput `pulumi:"platform"`
	// List of snapshot details.
	Snapshots GetInstanceImageSnapshotArrayInput `pulumi:"snapshots"`
	// Whether support cloud-init.
	SupportCloudInit pulumi.BoolInput `pulumi:"supportCloudInit"`
	// Sync percent of the image.
	SyncPercent pulumi.IntInput `pulumi:"syncPercent"`
}

func (GetInstanceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImage)(nil)).Elem()
}

func (i GetInstanceImageArgs) ToGetInstanceImageOutput() GetInstanceImageOutput {
	return i.ToGetInstanceImageOutputWithContext(context.Background())
}

func (i GetInstanceImageArgs) ToGetInstanceImageOutputWithContext(ctx context.Context) GetInstanceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageOutput)
}

// GetInstanceImageArrayInput is an input type that accepts GetInstanceImageArray and GetInstanceImageArrayOutput values.
// You can construct a concrete instance of `GetInstanceImageArrayInput` via:
//
//	GetInstanceImageArray{ GetInstanceImageArgs{...} }
type GetInstanceImageArrayInput interface {
	pulumi.Input

	ToGetInstanceImageArrayOutput() GetInstanceImageArrayOutput
	ToGetInstanceImageArrayOutputWithContext(context.Context) GetInstanceImageArrayOutput
}

type GetInstanceImageArray []GetInstanceImageInput

func (GetInstanceImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImage)(nil)).Elem()
}

func (i GetInstanceImageArray) ToGetInstanceImageArrayOutput() GetInstanceImageArrayOutput {
	return i.ToGetInstanceImageArrayOutputWithContext(context.Background())
}

func (i GetInstanceImageArray) ToGetInstanceImageArrayOutputWithContext(ctx context.Context) GetInstanceImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageArrayOutput)
}

type GetInstanceImageOutput struct{ *pulumi.OutputState }

func (GetInstanceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImage)(nil)).Elem()
}

func (o GetInstanceImageOutput) ToGetInstanceImageOutput() GetInstanceImageOutput {
	return o
}

func (o GetInstanceImageOutput) ToGetInstanceImageOutputWithContext(ctx context.Context) GetInstanceImageOutput {
	return o
}

// Architecture of the image.
func (o GetInstanceImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.Architecture }).(pulumi.StringOutput)
}

// Created time of the image.
func (o GetInstanceImageOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Image creator of the image.
func (o GetInstanceImageOutput) ImageCreator() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageCreator }).(pulumi.StringOutput)
}

// Description of the image.
func (o GetInstanceImageOutput) ImageDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageDescription }).(pulumi.StringOutput)
}

// ID of the image to be queried.
func (o GetInstanceImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// Name of the image.
func (o GetInstanceImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// Size of the image.
func (o GetInstanceImageOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceImage) int { return v.ImageSize }).(pulumi.IntOutput)
}

// Image source of the image.
func (o GetInstanceImageOutput) ImageSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageSource }).(pulumi.StringOutput)
}

// State of the image.
func (o GetInstanceImageOutput) ImageState() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageState }).(pulumi.StringOutput)
}

// A list of the image type to be queried. Valid values: 'PUBLIC_IMAGE', 'PRIVATE_IMAGE', 'SHARED_IMAGE', 'MARKET_IMAGE'.
func (o GetInstanceImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageType }).(pulumi.StringOutput)
}

// A string to apply with fuzzy match to the osName attribute on the image list returned by TencentCloud, conflict with 'image_name_regex'.
func (o GetInstanceImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.OsName }).(pulumi.StringOutput)
}

// Platform of the image.
func (o GetInstanceImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.Platform }).(pulumi.StringOutput)
}

// List of snapshot details.
func (o GetInstanceImageOutput) Snapshots() GetInstanceImageSnapshotArrayOutput {
	return o.ApplyT(func(v GetInstanceImage) []GetInstanceImageSnapshot { return v.Snapshots }).(GetInstanceImageSnapshotArrayOutput)
}

// Whether support cloud-init.
func (o GetInstanceImageOutput) SupportCloudInit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceImage) bool { return v.SupportCloudInit }).(pulumi.BoolOutput)
}

// Sync percent of the image.
func (o GetInstanceImageOutput) SyncPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceImage) int { return v.SyncPercent }).(pulumi.IntOutput)
}

type GetInstanceImageArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImage)(nil)).Elem()
}

func (o GetInstanceImageArrayOutput) ToGetInstanceImageArrayOutput() GetInstanceImageArrayOutput {
	return o
}

func (o GetInstanceImageArrayOutput) ToGetInstanceImageArrayOutputWithContext(ctx context.Context) GetInstanceImageArrayOutput {
	return o
}

func (o GetInstanceImageArrayOutput) Index(i pulumi.IntInput) GetInstanceImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceImage {
		return vs[0].([]GetInstanceImage)[vs[1].(int)]
	}).(GetInstanceImageOutput)
}

type GetInstanceImageSnapshot struct {
	// Size of the cloud disk used to create the snapshot; unit: GB.
	DiskSize int `pulumi:"diskSize"`
	// Type of the cloud disk used to create the snapshot.
	DiskUsage string `pulumi:"diskUsage"`
	// Snapshot ID.
	SnapshotId string `pulumi:"snapshotId"`
	// Snapshot name, the user-defined snapshot alias.
	SnapshotName string `pulumi:"snapshotName"`
}

// GetInstanceImageSnapshotInput is an input type that accepts GetInstanceImageSnapshotArgs and GetInstanceImageSnapshotOutput values.
// You can construct a concrete instance of `GetInstanceImageSnapshotInput` via:
//
//	GetInstanceImageSnapshotArgs{...}
type GetInstanceImageSnapshotInput interface {
	pulumi.Input

	ToGetInstanceImageSnapshotOutput() GetInstanceImageSnapshotOutput
	ToGetInstanceImageSnapshotOutputWithContext(context.Context) GetInstanceImageSnapshotOutput
}

type GetInstanceImageSnapshotArgs struct {
	// Size of the cloud disk used to create the snapshot; unit: GB.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the cloud disk used to create the snapshot.
	DiskUsage pulumi.StringInput `pulumi:"diskUsage"`
	// Snapshot ID.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Snapshot name, the user-defined snapshot alias.
	SnapshotName pulumi.StringInput `pulumi:"snapshotName"`
}

func (GetInstanceImageSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImageSnapshot)(nil)).Elem()
}

func (i GetInstanceImageSnapshotArgs) ToGetInstanceImageSnapshotOutput() GetInstanceImageSnapshotOutput {
	return i.ToGetInstanceImageSnapshotOutputWithContext(context.Background())
}

func (i GetInstanceImageSnapshotArgs) ToGetInstanceImageSnapshotOutputWithContext(ctx context.Context) GetInstanceImageSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageSnapshotOutput)
}

// GetInstanceImageSnapshotArrayInput is an input type that accepts GetInstanceImageSnapshotArray and GetInstanceImageSnapshotArrayOutput values.
// You can construct a concrete instance of `GetInstanceImageSnapshotArrayInput` via:
//
//	GetInstanceImageSnapshotArray{ GetInstanceImageSnapshotArgs{...} }
type GetInstanceImageSnapshotArrayInput interface {
	pulumi.Input

	ToGetInstanceImageSnapshotArrayOutput() GetInstanceImageSnapshotArrayOutput
	ToGetInstanceImageSnapshotArrayOutputWithContext(context.Context) GetInstanceImageSnapshotArrayOutput
}

type GetInstanceImageSnapshotArray []GetInstanceImageSnapshotInput

func (GetInstanceImageSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImageSnapshot)(nil)).Elem()
}

func (i GetInstanceImageSnapshotArray) ToGetInstanceImageSnapshotArrayOutput() GetInstanceImageSnapshotArrayOutput {
	return i.ToGetInstanceImageSnapshotArrayOutputWithContext(context.Background())
}

func (i GetInstanceImageSnapshotArray) ToGetInstanceImageSnapshotArrayOutputWithContext(ctx context.Context) GetInstanceImageSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageSnapshotArrayOutput)
}

type GetInstanceImageSnapshotOutput struct{ *pulumi.OutputState }

func (GetInstanceImageSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImageSnapshot)(nil)).Elem()
}

func (o GetInstanceImageSnapshotOutput) ToGetInstanceImageSnapshotOutput() GetInstanceImageSnapshotOutput {
	return o
}

func (o GetInstanceImageSnapshotOutput) ToGetInstanceImageSnapshotOutputWithContext(ctx context.Context) GetInstanceImageSnapshotOutput {
	return o
}

// Size of the cloud disk used to create the snapshot; unit: GB.
func (o GetInstanceImageSnapshotOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the cloud disk used to create the snapshot.
func (o GetInstanceImageSnapshotOutput) DiskUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) string { return v.DiskUsage }).(pulumi.StringOutput)
}

// Snapshot ID.
func (o GetInstanceImageSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Snapshot name, the user-defined snapshot alias.
func (o GetInstanceImageSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

type GetInstanceImageSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceImageSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImageSnapshot)(nil)).Elem()
}

func (o GetInstanceImageSnapshotArrayOutput) ToGetInstanceImageSnapshotArrayOutput() GetInstanceImageSnapshotArrayOutput {
	return o
}

func (o GetInstanceImageSnapshotArrayOutput) ToGetInstanceImageSnapshotArrayOutputWithContext(ctx context.Context) GetInstanceImageSnapshotArrayOutput {
	return o
}

func (o GetInstanceImageSnapshotArrayOutput) Index(i pulumi.IntInput) GetInstanceImageSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceImageSnapshot {
		return vs[0].([]GetInstanceImageSnapshot)[vs[1].(int)]
	}).(GetInstanceImageSnapshotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageInput)(nil)).Elem(), GetInstanceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageArrayInput)(nil)).Elem(), GetInstanceImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageSnapshotInput)(nil)).Elem(), GetInstanceImageSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageSnapshotArrayInput)(nil)).Elem(), GetInstanceImageSnapshotArray{})
	pulumi.RegisterOutputType(GetInstanceImageOutput{})
	pulumi.RegisterOutputType(GetInstanceImageArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceImageSnapshotOutput{})
	pulumi.RegisterOutputType(GetInstanceImageSnapshotArrayOutput{})
}
