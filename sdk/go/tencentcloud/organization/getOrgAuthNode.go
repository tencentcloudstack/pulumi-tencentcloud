// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of organization orgAuthNode
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Organization.GetOrgAuthNode(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrgAuthNode(ctx *pulumi.Context, args *GetOrgAuthNodeArgs, opts ...pulumi.InvokeOption) (*GetOrgAuthNodeResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetOrgAuthNodeResult
	err := ctx.Invoke("tencentcloud:Organization/getOrgAuthNode:getOrgAuthNode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgAuthNode.
type GetOrgAuthNodeArgs struct {
	// Verified company name.
	AuthName *string `pulumi:"authName"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getOrgAuthNode.
type GetOrgAuthNodeResult struct {
	// Verified company name.
	AuthName *string `pulumi:"authName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Organization auth node list.
	Items            []GetOrgAuthNodeItem `pulumi:"items"`
	ResultOutputFile *string              `pulumi:"resultOutputFile"`
}

func GetOrgAuthNodeOutput(ctx *pulumi.Context, args GetOrgAuthNodeOutputArgs, opts ...pulumi.InvokeOption) GetOrgAuthNodeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrgAuthNodeResult, error) {
			args := v.(GetOrgAuthNodeArgs)
			r, err := GetOrgAuthNode(ctx, &args, opts...)
			var s GetOrgAuthNodeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrgAuthNodeResultOutput)
}

// A collection of arguments for invoking getOrgAuthNode.
type GetOrgAuthNodeOutputArgs struct {
	// Verified company name.
	AuthName pulumi.StringPtrInput `pulumi:"authName"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetOrgAuthNodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAuthNodeArgs)(nil)).Elem()
}

// A collection of values returned by getOrgAuthNode.
type GetOrgAuthNodeResultOutput struct{ *pulumi.OutputState }

func (GetOrgAuthNodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAuthNodeResult)(nil)).Elem()
}

func (o GetOrgAuthNodeResultOutput) ToGetOrgAuthNodeResultOutput() GetOrgAuthNodeResultOutput {
	return o
}

func (o GetOrgAuthNodeResultOutput) ToGetOrgAuthNodeResultOutputWithContext(ctx context.Context) GetOrgAuthNodeResultOutput {
	return o
}

// Verified company name.
func (o GetOrgAuthNodeResultOutput) AuthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgAuthNodeResult) *string { return v.AuthName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrgAuthNodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgAuthNodeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Organization auth node list.
func (o GetOrgAuthNodeResultOutput) Items() GetOrgAuthNodeItemArrayOutput {
	return o.ApplyT(func(v GetOrgAuthNodeResult) []GetOrgAuthNodeItem { return v.Items }).(GetOrgAuthNodeItemArrayOutput)
}

func (o GetOrgAuthNodeResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgAuthNodeResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrgAuthNodeResultOutput{})
}
