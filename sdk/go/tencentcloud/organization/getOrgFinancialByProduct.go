// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of organization orgFinancialByProduct
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Organization.GetOrgFinancialByProduct(ctx, &organization.GetOrgFinancialByProductArgs{
//				EndMonth: pulumi.StringRef("2023-09"),
//				Month:    "2023-05",
//				ProductCodes: []string{
//					"p_eip",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrgFinancialByProduct(ctx *pulumi.Context, args *GetOrgFinancialByProductArgs, opts ...pulumi.InvokeOption) (*GetOrgFinancialByProductResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetOrgFinancialByProductResult
	err := ctx.Invoke("tencentcloud:Organization/getOrgFinancialByProduct:getOrgFinancialByProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgFinancialByProduct.
type GetOrgFinancialByProductArgs struct {
	// Query for the end month. Format:yyyy-mm, for example:2021-01.The default value is the `Month`.
	EndMonth *string `pulumi:"endMonth"`
	// Member uin list. Up to 100.
	MemberUins []int `pulumi:"memberUins"`
	// Query for the start month. Format:yyyy-mm, for example:2021-01.
	Month string `pulumi:"month"`
	// Product code list. Up to 100.
	ProductCodes []string `pulumi:"productCodes"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getOrgFinancialByProduct.
type GetOrgFinancialByProductResult struct {
	EndMonth *string `pulumi:"endMonth"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Organization financial info by products.
	Items            []GetOrgFinancialByProductItem `pulumi:"items"`
	MemberUins       []int                          `pulumi:"memberUins"`
	Month            string                         `pulumi:"month"`
	ProductCodes     []string                       `pulumi:"productCodes"`
	ResultOutputFile *string                        `pulumi:"resultOutputFile"`
	// Total cost of the product.
	TotalCost float64 `pulumi:"totalCost"`
}

func GetOrgFinancialByProductOutput(ctx *pulumi.Context, args GetOrgFinancialByProductOutputArgs, opts ...pulumi.InvokeOption) GetOrgFinancialByProductResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrgFinancialByProductResult, error) {
			args := v.(GetOrgFinancialByProductArgs)
			r, err := GetOrgFinancialByProduct(ctx, &args, opts...)
			var s GetOrgFinancialByProductResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrgFinancialByProductResultOutput)
}

// A collection of arguments for invoking getOrgFinancialByProduct.
type GetOrgFinancialByProductOutputArgs struct {
	// Query for the end month. Format:yyyy-mm, for example:2021-01.The default value is the `Month`.
	EndMonth pulumi.StringPtrInput `pulumi:"endMonth"`
	// Member uin list. Up to 100.
	MemberUins pulumi.IntArrayInput `pulumi:"memberUins"`
	// Query for the start month. Format:yyyy-mm, for example:2021-01.
	Month pulumi.StringInput `pulumi:"month"`
	// Product code list. Up to 100.
	ProductCodes pulumi.StringArrayInput `pulumi:"productCodes"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetOrgFinancialByProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByProductArgs)(nil)).Elem()
}

// A collection of values returned by getOrgFinancialByProduct.
type GetOrgFinancialByProductResultOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByProductResult)(nil)).Elem()
}

func (o GetOrgFinancialByProductResultOutput) ToGetOrgFinancialByProductResultOutput() GetOrgFinancialByProductResultOutput {
	return o
}

func (o GetOrgFinancialByProductResultOutput) ToGetOrgFinancialByProductResultOutputWithContext(ctx context.Context) GetOrgFinancialByProductResultOutput {
	return o
}

func (o GetOrgFinancialByProductResultOutput) EndMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) *string { return v.EndMonth }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrgFinancialByProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) string { return v.Id }).(pulumi.StringOutput)
}

// Organization financial info by products.
func (o GetOrgFinancialByProductResultOutput) Items() GetOrgFinancialByProductItemArrayOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) []GetOrgFinancialByProductItem { return v.Items }).(GetOrgFinancialByProductItemArrayOutput)
}

func (o GetOrgFinancialByProductResultOutput) MemberUins() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) []int { return v.MemberUins }).(pulumi.IntArrayOutput)
}

func (o GetOrgFinancialByProductResultOutput) Month() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) string { return v.Month }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByProductResultOutput) ProductCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) []string { return v.ProductCodes }).(pulumi.StringArrayOutput)
}

func (o GetOrgFinancialByProductResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Total cost of the product.
func (o GetOrgFinancialByProductResultOutput) TotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetOrgFinancialByProductResult) float64 { return v.TotalCost }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(GetOrgFinancialByProductResultOutput{})
}
