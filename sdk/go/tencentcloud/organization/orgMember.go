// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create a organization orgMember
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Organization.NewOrgMember(ctx, "orgMember", &Organization.OrgMemberArgs{
//				NodeId: pulumi.Int(2003721),
//				PermissionIds: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//					pulumi.Int(4),
//				},
//				PolicyType: pulumi.String("Financial"),
//				Remark:     pulumi.String("for terraform test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// organization org_member can be imported using the id, e.g.
//
// ```sh
// $ pulumi import tencentcloud:Organization/orgMember:OrgMember org_member orgMember_id
// ```
type OrgMember struct {
	pulumi.CustomResourceState

	// Member creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Whether to allow member to leave the organization.Valid values:- `Allow`.- `Denied`.
	IsAllowQuit pulumi.StringOutput `pulumi:"isAllowQuit"`
	// Member Type.Valid values:- `Invite`: The member is invited.- `Create`: The member is created.
	MemberType pulumi.StringOutput `pulumi:"memberType"`
	// Member name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Organization node ID.
	NodeId pulumi.IntOutput `pulumi:"nodeId"`
	// Organization node name.
	NodeName pulumi.StringOutput `pulumi:"nodeName"`
	// Financial management permissions.
	OrgPermissions OrgMemberOrgPermissionArrayOutput `pulumi:"orgPermissions"`
	// Organization policy name.
	OrgPolicyName pulumi.StringOutput `pulumi:"orgPolicyName"`
	// The member name which is payment account on behalf.
	PayName pulumi.StringOutput `pulumi:"payName"`
	// The uin which is payment account on behalf.When `PermissionIds` contains 7, is required.
	PayUin pulumi.StringPtrOutput `pulumi:"payUin"`
	// Financial management permission IDs.Valid values:- `1`: View bill.- `2`: Check balance.- `3`: Fund transfer.- `4`: Combine bill.- `5`: Issue an invoice.- `6`: Inherit discount.- `7`: Pay on behalf.value 1,2 is required.
	PermissionIds pulumi.IntArrayOutput `pulumi:"permissionIds"`
	// Organization policy type.- `Financial`: Financial management policy.
	PolicyType pulumi.StringOutput `pulumi:"policyType"`
	// Create member record ID.When create failed and needs to be recreated, is required.
	RecordId pulumi.IntPtrOutput `pulumi:"recordId"`
	// Notes.
	Remark pulumi.StringPtrOutput `pulumi:"remark"`
	// Tag description list.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// Member update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewOrgMember registers a new resource with the given unique name, arguments, and options.
func NewOrgMember(ctx *pulumi.Context,
	name string, args *OrgMemberArgs, opts ...pulumi.ResourceOption) (*OrgMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NodeId == nil {
		return nil, errors.New("invalid value for required argument 'NodeId'")
	}
	if args.PermissionIds == nil {
		return nil, errors.New("invalid value for required argument 'PermissionIds'")
	}
	if args.PolicyType == nil {
		return nil, errors.New("invalid value for required argument 'PolicyType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrgMember
	err := ctx.RegisterResource("tencentcloud:Organization/orgMember:OrgMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrgMember gets an existing OrgMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrgMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrgMemberState, opts ...pulumi.ResourceOption) (*OrgMember, error) {
	var resource OrgMember
	err := ctx.ReadResource("tencentcloud:Organization/orgMember:OrgMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrgMember resources.
type orgMemberState struct {
	// Member creation time.
	CreateTime *string `pulumi:"createTime"`
	// Whether to allow member to leave the organization.Valid values:- `Allow`.- `Denied`.
	IsAllowQuit *string `pulumi:"isAllowQuit"`
	// Member Type.Valid values:- `Invite`: The member is invited.- `Create`: The member is created.
	MemberType *string `pulumi:"memberType"`
	// Member name.
	Name *string `pulumi:"name"`
	// Organization node ID.
	NodeId *int `pulumi:"nodeId"`
	// Organization node name.
	NodeName *string `pulumi:"nodeName"`
	// Financial management permissions.
	OrgPermissions []OrgMemberOrgPermission `pulumi:"orgPermissions"`
	// Organization policy name.
	OrgPolicyName *string `pulumi:"orgPolicyName"`
	// The member name which is payment account on behalf.
	PayName *string `pulumi:"payName"`
	// The uin which is payment account on behalf.When `PermissionIds` contains 7, is required.
	PayUin *string `pulumi:"payUin"`
	// Financial management permission IDs.Valid values:- `1`: View bill.- `2`: Check balance.- `3`: Fund transfer.- `4`: Combine bill.- `5`: Issue an invoice.- `6`: Inherit discount.- `7`: Pay on behalf.value 1,2 is required.
	PermissionIds []int `pulumi:"permissionIds"`
	// Organization policy type.- `Financial`: Financial management policy.
	PolicyType *string `pulumi:"policyType"`
	// Create member record ID.When create failed and needs to be recreated, is required.
	RecordId *int `pulumi:"recordId"`
	// Notes.
	Remark *string `pulumi:"remark"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// Member update time.
	UpdateTime *string `pulumi:"updateTime"`
}

type OrgMemberState struct {
	// Member creation time.
	CreateTime pulumi.StringPtrInput
	// Whether to allow member to leave the organization.Valid values:- `Allow`.- `Denied`.
	IsAllowQuit pulumi.StringPtrInput
	// Member Type.Valid values:- `Invite`: The member is invited.- `Create`: The member is created.
	MemberType pulumi.StringPtrInput
	// Member name.
	Name pulumi.StringPtrInput
	// Organization node ID.
	NodeId pulumi.IntPtrInput
	// Organization node name.
	NodeName pulumi.StringPtrInput
	// Financial management permissions.
	OrgPermissions OrgMemberOrgPermissionArrayInput
	// Organization policy name.
	OrgPolicyName pulumi.StringPtrInput
	// The member name which is payment account on behalf.
	PayName pulumi.StringPtrInput
	// The uin which is payment account on behalf.When `PermissionIds` contains 7, is required.
	PayUin pulumi.StringPtrInput
	// Financial management permission IDs.Valid values:- `1`: View bill.- `2`: Check balance.- `3`: Fund transfer.- `4`: Combine bill.- `5`: Issue an invoice.- `6`: Inherit discount.- `7`: Pay on behalf.value 1,2 is required.
	PermissionIds pulumi.IntArrayInput
	// Organization policy type.- `Financial`: Financial management policy.
	PolicyType pulumi.StringPtrInput
	// Create member record ID.When create failed and needs to be recreated, is required.
	RecordId pulumi.IntPtrInput
	// Notes.
	Remark pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
	// Member update time.
	UpdateTime pulumi.StringPtrInput
}

func (OrgMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*orgMemberState)(nil)).Elem()
}

type orgMemberArgs struct {
	// Member name.
	Name *string `pulumi:"name"`
	// Organization node ID.
	NodeId int `pulumi:"nodeId"`
	// The uin which is payment account on behalf.When `PermissionIds` contains 7, is required.
	PayUin *string `pulumi:"payUin"`
	// Financial management permission IDs.Valid values:- `1`: View bill.- `2`: Check balance.- `3`: Fund transfer.- `4`: Combine bill.- `5`: Issue an invoice.- `6`: Inherit discount.- `7`: Pay on behalf.value 1,2 is required.
	PermissionIds []int `pulumi:"permissionIds"`
	// Organization policy type.- `Financial`: Financial management policy.
	PolicyType string `pulumi:"policyType"`
	// Create member record ID.When create failed and needs to be recreated, is required.
	RecordId *int `pulumi:"recordId"`
	// Notes.
	Remark *string `pulumi:"remark"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a OrgMember resource.
type OrgMemberArgs struct {
	// Member name.
	Name pulumi.StringPtrInput
	// Organization node ID.
	NodeId pulumi.IntInput
	// The uin which is payment account on behalf.When `PermissionIds` contains 7, is required.
	PayUin pulumi.StringPtrInput
	// Financial management permission IDs.Valid values:- `1`: View bill.- `2`: Check balance.- `3`: Fund transfer.- `4`: Combine bill.- `5`: Issue an invoice.- `6`: Inherit discount.- `7`: Pay on behalf.value 1,2 is required.
	PermissionIds pulumi.IntArrayInput
	// Organization policy type.- `Financial`: Financial management policy.
	PolicyType pulumi.StringInput
	// Create member record ID.When create failed and needs to be recreated, is required.
	RecordId pulumi.IntPtrInput
	// Notes.
	Remark pulumi.StringPtrInput
	// Tag description list.
	Tags pulumi.MapInput
}

func (OrgMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*orgMemberArgs)(nil)).Elem()
}

type OrgMemberInput interface {
	pulumi.Input

	ToOrgMemberOutput() OrgMemberOutput
	ToOrgMemberOutputWithContext(ctx context.Context) OrgMemberOutput
}

func (*OrgMember) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgMember)(nil)).Elem()
}

func (i *OrgMember) ToOrgMemberOutput() OrgMemberOutput {
	return i.ToOrgMemberOutputWithContext(context.Background())
}

func (i *OrgMember) ToOrgMemberOutputWithContext(ctx context.Context) OrgMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMemberOutput)
}

// OrgMemberArrayInput is an input type that accepts OrgMemberArray and OrgMemberArrayOutput values.
// You can construct a concrete instance of `OrgMemberArrayInput` via:
//
//	OrgMemberArray{ OrgMemberArgs{...} }
type OrgMemberArrayInput interface {
	pulumi.Input

	ToOrgMemberArrayOutput() OrgMemberArrayOutput
	ToOrgMemberArrayOutputWithContext(context.Context) OrgMemberArrayOutput
}

type OrgMemberArray []OrgMemberInput

func (OrgMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgMember)(nil)).Elem()
}

func (i OrgMemberArray) ToOrgMemberArrayOutput() OrgMemberArrayOutput {
	return i.ToOrgMemberArrayOutputWithContext(context.Background())
}

func (i OrgMemberArray) ToOrgMemberArrayOutputWithContext(ctx context.Context) OrgMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMemberArrayOutput)
}

// OrgMemberMapInput is an input type that accepts OrgMemberMap and OrgMemberMapOutput values.
// You can construct a concrete instance of `OrgMemberMapInput` via:
//
//	OrgMemberMap{ "key": OrgMemberArgs{...} }
type OrgMemberMapInput interface {
	pulumi.Input

	ToOrgMemberMapOutput() OrgMemberMapOutput
	ToOrgMemberMapOutputWithContext(context.Context) OrgMemberMapOutput
}

type OrgMemberMap map[string]OrgMemberInput

func (OrgMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgMember)(nil)).Elem()
}

func (i OrgMemberMap) ToOrgMemberMapOutput() OrgMemberMapOutput {
	return i.ToOrgMemberMapOutputWithContext(context.Background())
}

func (i OrgMemberMap) ToOrgMemberMapOutputWithContext(ctx context.Context) OrgMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMemberMapOutput)
}

type OrgMemberOutput struct{ *pulumi.OutputState }

func (OrgMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgMember)(nil)).Elem()
}

func (o OrgMemberOutput) ToOrgMemberOutput() OrgMemberOutput {
	return o
}

func (o OrgMemberOutput) ToOrgMemberOutputWithContext(ctx context.Context) OrgMemberOutput {
	return o
}

// Member creation time.
func (o OrgMemberOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether to allow member to leave the organization.Valid values:- `Allow`.- `Denied`.
func (o OrgMemberOutput) IsAllowQuit() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.IsAllowQuit }).(pulumi.StringOutput)
}

// Member Type.Valid values:- `Invite`: The member is invited.- `Create`: The member is created.
func (o OrgMemberOutput) MemberType() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.MemberType }).(pulumi.StringOutput)
}

// Member name.
func (o OrgMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Organization node ID.
func (o OrgMemberOutput) NodeId() pulumi.IntOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.IntOutput { return v.NodeId }).(pulumi.IntOutput)
}

// Organization node name.
func (o OrgMemberOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.NodeName }).(pulumi.StringOutput)
}

// Financial management permissions.
func (o OrgMemberOutput) OrgPermissions() OrgMemberOrgPermissionArrayOutput {
	return o.ApplyT(func(v *OrgMember) OrgMemberOrgPermissionArrayOutput { return v.OrgPermissions }).(OrgMemberOrgPermissionArrayOutput)
}

// Organization policy name.
func (o OrgMemberOutput) OrgPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.OrgPolicyName }).(pulumi.StringOutput)
}

// The member name which is payment account on behalf.
func (o OrgMemberOutput) PayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.PayName }).(pulumi.StringOutput)
}

// The uin which is payment account on behalf.When `PermissionIds` contains 7, is required.
func (o OrgMemberOutput) PayUin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringPtrOutput { return v.PayUin }).(pulumi.StringPtrOutput)
}

// Financial management permission IDs.Valid values:- `1`: View bill.- `2`: Check balance.- `3`: Fund transfer.- `4`: Combine bill.- `5`: Issue an invoice.- `6`: Inherit discount.- `7`: Pay on behalf.value 1,2 is required.
func (o OrgMemberOutput) PermissionIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.IntArrayOutput { return v.PermissionIds }).(pulumi.IntArrayOutput)
}

// Organization policy type.- `Financial`: Financial management policy.
func (o OrgMemberOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

// Create member record ID.When create failed and needs to be recreated, is required.
func (o OrgMemberOutput) RecordId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.IntPtrOutput { return v.RecordId }).(pulumi.IntPtrOutput)
}

// Notes.
func (o OrgMemberOutput) Remark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringPtrOutput { return v.Remark }).(pulumi.StringPtrOutput)
}

// Tag description list.
func (o OrgMemberOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// Member update time.
func (o OrgMemberOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgMember) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type OrgMemberArrayOutput struct{ *pulumi.OutputState }

func (OrgMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgMember)(nil)).Elem()
}

func (o OrgMemberArrayOutput) ToOrgMemberArrayOutput() OrgMemberArrayOutput {
	return o
}

func (o OrgMemberArrayOutput) ToOrgMemberArrayOutputWithContext(ctx context.Context) OrgMemberArrayOutput {
	return o
}

func (o OrgMemberArrayOutput) Index(i pulumi.IntInput) OrgMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrgMember {
		return vs[0].([]*OrgMember)[vs[1].(int)]
	}).(OrgMemberOutput)
}

type OrgMemberMapOutput struct{ *pulumi.OutputState }

func (OrgMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgMember)(nil)).Elem()
}

func (o OrgMemberMapOutput) ToOrgMemberMapOutput() OrgMemberMapOutput {
	return o
}

func (o OrgMemberMapOutput) ToOrgMemberMapOutputWithContext(ctx context.Context) OrgMemberMapOutput {
	return o
}

func (o OrgMemberMapOutput) MapIndex(k pulumi.StringInput) OrgMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrgMember {
		return vs[0].(map[string]*OrgMember)[vs[1].(string)]
	}).(OrgMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMemberInput)(nil)).Elem(), &OrgMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMemberArrayInput)(nil)).Elem(), OrgMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMemberMapInput)(nil)).Elem(), OrgMemberMap{})
	pulumi.RegisterOutputType(OrgMemberOutput{})
	pulumi.RegisterOutputType(OrgMemberArrayOutput{})
	pulumi.RegisterOutputType(OrgMemberMapOutput{})
}
