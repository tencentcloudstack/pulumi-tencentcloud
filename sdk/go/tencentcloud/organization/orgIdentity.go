// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a organization orgIdentity
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Organization.NewOrgIdentity(ctx, "orgIdentity", &Organization.OrgIdentityArgs{
//				Description:       pulumi.String("iac-test"),
//				IdentityAliasName: pulumi.String("example-iac-test"),
//				IdentityPolicies: organization.OrgIdentityIdentityPolicyArray{
//					&organization.OrgIdentityIdentityPolicyArgs{
//						PolicyId:   pulumi.Int(1),
//						PolicyName: pulumi.String("AdministratorAccess"),
//						PolicyType: pulumi.Int(2),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// organization org_identity can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Organization/orgIdentity:OrgIdentity org_identity org_identity_id
//
// ```
type OrgIdentity struct {
	pulumi.CustomResourceState

	// Identity description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
	IdentityAliasName pulumi.StringOutput `pulumi:"identityAliasName"`
	// Identity policy list.
	IdentityPolicies OrgIdentityIdentityPolicyArrayOutput `pulumi:"identityPolicies"`
}

// NewOrgIdentity registers a new resource with the given unique name, arguments, and options.
func NewOrgIdentity(ctx *pulumi.Context,
	name string, args *OrgIdentityArgs, opts ...pulumi.ResourceOption) (*OrgIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityAliasName == nil {
		return nil, errors.New("invalid value for required argument 'IdentityAliasName'")
	}
	if args.IdentityPolicies == nil {
		return nil, errors.New("invalid value for required argument 'IdentityPolicies'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource OrgIdentity
	err := ctx.RegisterResource("tencentcloud:Organization/orgIdentity:OrgIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrgIdentity gets an existing OrgIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrgIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrgIdentityState, opts ...pulumi.ResourceOption) (*OrgIdentity, error) {
	var resource OrgIdentity
	err := ctx.ReadResource("tencentcloud:Organization/orgIdentity:OrgIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrgIdentity resources.
type orgIdentityState struct {
	// Identity description.
	Description *string `pulumi:"description"`
	// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
	IdentityAliasName *string `pulumi:"identityAliasName"`
	// Identity policy list.
	IdentityPolicies []OrgIdentityIdentityPolicy `pulumi:"identityPolicies"`
}

type OrgIdentityState struct {
	// Identity description.
	Description pulumi.StringPtrInput
	// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
	IdentityAliasName pulumi.StringPtrInput
	// Identity policy list.
	IdentityPolicies OrgIdentityIdentityPolicyArrayInput
}

func (OrgIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*orgIdentityState)(nil)).Elem()
}

type orgIdentityArgs struct {
	// Identity description.
	Description *string `pulumi:"description"`
	// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
	IdentityAliasName string `pulumi:"identityAliasName"`
	// Identity policy list.
	IdentityPolicies []OrgIdentityIdentityPolicy `pulumi:"identityPolicies"`
}

// The set of arguments for constructing a OrgIdentity resource.
type OrgIdentityArgs struct {
	// Identity description.
	Description pulumi.StringPtrInput
	// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
	IdentityAliasName pulumi.StringInput
	// Identity policy list.
	IdentityPolicies OrgIdentityIdentityPolicyArrayInput
}

func (OrgIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*orgIdentityArgs)(nil)).Elem()
}

type OrgIdentityInput interface {
	pulumi.Input

	ToOrgIdentityOutput() OrgIdentityOutput
	ToOrgIdentityOutputWithContext(ctx context.Context) OrgIdentityOutput
}

func (*OrgIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgIdentity)(nil)).Elem()
}

func (i *OrgIdentity) ToOrgIdentityOutput() OrgIdentityOutput {
	return i.ToOrgIdentityOutputWithContext(context.Background())
}

func (i *OrgIdentity) ToOrgIdentityOutputWithContext(ctx context.Context) OrgIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgIdentityOutput)
}

// OrgIdentityArrayInput is an input type that accepts OrgIdentityArray and OrgIdentityArrayOutput values.
// You can construct a concrete instance of `OrgIdentityArrayInput` via:
//
//	OrgIdentityArray{ OrgIdentityArgs{...} }
type OrgIdentityArrayInput interface {
	pulumi.Input

	ToOrgIdentityArrayOutput() OrgIdentityArrayOutput
	ToOrgIdentityArrayOutputWithContext(context.Context) OrgIdentityArrayOutput
}

type OrgIdentityArray []OrgIdentityInput

func (OrgIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgIdentity)(nil)).Elem()
}

func (i OrgIdentityArray) ToOrgIdentityArrayOutput() OrgIdentityArrayOutput {
	return i.ToOrgIdentityArrayOutputWithContext(context.Background())
}

func (i OrgIdentityArray) ToOrgIdentityArrayOutputWithContext(ctx context.Context) OrgIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgIdentityArrayOutput)
}

// OrgIdentityMapInput is an input type that accepts OrgIdentityMap and OrgIdentityMapOutput values.
// You can construct a concrete instance of `OrgIdentityMapInput` via:
//
//	OrgIdentityMap{ "key": OrgIdentityArgs{...} }
type OrgIdentityMapInput interface {
	pulumi.Input

	ToOrgIdentityMapOutput() OrgIdentityMapOutput
	ToOrgIdentityMapOutputWithContext(context.Context) OrgIdentityMapOutput
}

type OrgIdentityMap map[string]OrgIdentityInput

func (OrgIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgIdentity)(nil)).Elem()
}

func (i OrgIdentityMap) ToOrgIdentityMapOutput() OrgIdentityMapOutput {
	return i.ToOrgIdentityMapOutputWithContext(context.Background())
}

func (i OrgIdentityMap) ToOrgIdentityMapOutputWithContext(ctx context.Context) OrgIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgIdentityMapOutput)
}

type OrgIdentityOutput struct{ *pulumi.OutputState }

func (OrgIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgIdentity)(nil)).Elem()
}

func (o OrgIdentityOutput) ToOrgIdentityOutput() OrgIdentityOutput {
	return o
}

func (o OrgIdentityOutput) ToOrgIdentityOutputWithContext(ctx context.Context) OrgIdentityOutput {
	return o
}

// Identity description.
func (o OrgIdentityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgIdentity) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Identity name.Supports English letters and numbers, the length cannot exceed 40 characters.
func (o OrgIdentityOutput) IdentityAliasName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgIdentity) pulumi.StringOutput { return v.IdentityAliasName }).(pulumi.StringOutput)
}

// Identity policy list.
func (o OrgIdentityOutput) IdentityPolicies() OrgIdentityIdentityPolicyArrayOutput {
	return o.ApplyT(func(v *OrgIdentity) OrgIdentityIdentityPolicyArrayOutput { return v.IdentityPolicies }).(OrgIdentityIdentityPolicyArrayOutput)
}

type OrgIdentityArrayOutput struct{ *pulumi.OutputState }

func (OrgIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgIdentity)(nil)).Elem()
}

func (o OrgIdentityArrayOutput) ToOrgIdentityArrayOutput() OrgIdentityArrayOutput {
	return o
}

func (o OrgIdentityArrayOutput) ToOrgIdentityArrayOutputWithContext(ctx context.Context) OrgIdentityArrayOutput {
	return o
}

func (o OrgIdentityArrayOutput) Index(i pulumi.IntInput) OrgIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrgIdentity {
		return vs[0].([]*OrgIdentity)[vs[1].(int)]
	}).(OrgIdentityOutput)
}

type OrgIdentityMapOutput struct{ *pulumi.OutputState }

func (OrgIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgIdentity)(nil)).Elem()
}

func (o OrgIdentityMapOutput) ToOrgIdentityMapOutput() OrgIdentityMapOutput {
	return o
}

func (o OrgIdentityMapOutput) ToOrgIdentityMapOutputWithContext(ctx context.Context) OrgIdentityMapOutput {
	return o
}

func (o OrgIdentityMapOutput) MapIndex(k pulumi.StringInput) OrgIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrgIdentity {
		return vs[0].(map[string]*OrgIdentity)[vs[1].(string)]
	}).(OrgIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrgIdentityInput)(nil)).Elem(), &OrgIdentity{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgIdentityArrayInput)(nil)).Elem(), OrgIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgIdentityMapInput)(nil)).Elem(), OrgIdentityMap{})
	pulumi.RegisterOutputType(OrgIdentityOutput{})
	pulumi.RegisterOutputType(OrgIdentityArrayOutput{})
	pulumi.RegisterOutputType(OrgIdentityMapOutput{})
}
