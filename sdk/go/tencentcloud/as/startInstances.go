// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a as startInstances
type StartInstances struct {
	pulumi.CustomResourceState

	// Launch configuration ID.
	AutoScalingGroupId pulumi.StringOutput `pulumi:"autoScalingGroupId"`
	// List of cvm instances to start.
	InstanceIds pulumi.StringArrayOutput `pulumi:"instanceIds"`
}

// NewStartInstances registers a new resource with the given unique name, arguments, and options.
func NewStartInstances(ctx *pulumi.Context,
	name string, args *StartInstancesArgs, opts ...pulumi.ResourceOption) (*StartInstances, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingGroupId'")
	}
	if args.InstanceIds == nil {
		return nil, errors.New("invalid value for required argument 'InstanceIds'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource StartInstances
	err := ctx.RegisterResource("tencentcloud:As/startInstances:StartInstances", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStartInstances gets an existing StartInstances resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStartInstances(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StartInstancesState, opts ...pulumi.ResourceOption) (*StartInstances, error) {
	var resource StartInstances
	err := ctx.ReadResource("tencentcloud:As/startInstances:StartInstances", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StartInstances resources.
type startInstancesState struct {
	// Launch configuration ID.
	AutoScalingGroupId *string `pulumi:"autoScalingGroupId"`
	// List of cvm instances to start.
	InstanceIds []string `pulumi:"instanceIds"`
}

type StartInstancesState struct {
	// Launch configuration ID.
	AutoScalingGroupId pulumi.StringPtrInput
	// List of cvm instances to start.
	InstanceIds pulumi.StringArrayInput
}

func (StartInstancesState) ElementType() reflect.Type {
	return reflect.TypeOf((*startInstancesState)(nil)).Elem()
}

type startInstancesArgs struct {
	// Launch configuration ID.
	AutoScalingGroupId string `pulumi:"autoScalingGroupId"`
	// List of cvm instances to start.
	InstanceIds []string `pulumi:"instanceIds"`
}

// The set of arguments for constructing a StartInstances resource.
type StartInstancesArgs struct {
	// Launch configuration ID.
	AutoScalingGroupId pulumi.StringInput
	// List of cvm instances to start.
	InstanceIds pulumi.StringArrayInput
}

func (StartInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*startInstancesArgs)(nil)).Elem()
}

type StartInstancesInput interface {
	pulumi.Input

	ToStartInstancesOutput() StartInstancesOutput
	ToStartInstancesOutputWithContext(ctx context.Context) StartInstancesOutput
}

func (*StartInstances) ElementType() reflect.Type {
	return reflect.TypeOf((**StartInstances)(nil)).Elem()
}

func (i *StartInstances) ToStartInstancesOutput() StartInstancesOutput {
	return i.ToStartInstancesOutputWithContext(context.Background())
}

func (i *StartInstances) ToStartInstancesOutputWithContext(ctx context.Context) StartInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartInstancesOutput)
}

// StartInstancesArrayInput is an input type that accepts StartInstancesArray and StartInstancesArrayOutput values.
// You can construct a concrete instance of `StartInstancesArrayInput` via:
//
//	StartInstancesArray{ StartInstancesArgs{...} }
type StartInstancesArrayInput interface {
	pulumi.Input

	ToStartInstancesArrayOutput() StartInstancesArrayOutput
	ToStartInstancesArrayOutputWithContext(context.Context) StartInstancesArrayOutput
}

type StartInstancesArray []StartInstancesInput

func (StartInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StartInstances)(nil)).Elem()
}

func (i StartInstancesArray) ToStartInstancesArrayOutput() StartInstancesArrayOutput {
	return i.ToStartInstancesArrayOutputWithContext(context.Background())
}

func (i StartInstancesArray) ToStartInstancesArrayOutputWithContext(ctx context.Context) StartInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartInstancesArrayOutput)
}

// StartInstancesMapInput is an input type that accepts StartInstancesMap and StartInstancesMapOutput values.
// You can construct a concrete instance of `StartInstancesMapInput` via:
//
//	StartInstancesMap{ "key": StartInstancesArgs{...} }
type StartInstancesMapInput interface {
	pulumi.Input

	ToStartInstancesMapOutput() StartInstancesMapOutput
	ToStartInstancesMapOutputWithContext(context.Context) StartInstancesMapOutput
}

type StartInstancesMap map[string]StartInstancesInput

func (StartInstancesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StartInstances)(nil)).Elem()
}

func (i StartInstancesMap) ToStartInstancesMapOutput() StartInstancesMapOutput {
	return i.ToStartInstancesMapOutputWithContext(context.Background())
}

func (i StartInstancesMap) ToStartInstancesMapOutputWithContext(ctx context.Context) StartInstancesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartInstancesMapOutput)
}

type StartInstancesOutput struct{ *pulumi.OutputState }

func (StartInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StartInstances)(nil)).Elem()
}

func (o StartInstancesOutput) ToStartInstancesOutput() StartInstancesOutput {
	return o
}

func (o StartInstancesOutput) ToStartInstancesOutputWithContext(ctx context.Context) StartInstancesOutput {
	return o
}

// Launch configuration ID.
func (o StartInstancesOutput) AutoScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *StartInstances) pulumi.StringOutput { return v.AutoScalingGroupId }).(pulumi.StringOutput)
}

// List of cvm instances to start.
func (o StartInstancesOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StartInstances) pulumi.StringArrayOutput { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

type StartInstancesArrayOutput struct{ *pulumi.OutputState }

func (StartInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StartInstances)(nil)).Elem()
}

func (o StartInstancesArrayOutput) ToStartInstancesArrayOutput() StartInstancesArrayOutput {
	return o
}

func (o StartInstancesArrayOutput) ToStartInstancesArrayOutputWithContext(ctx context.Context) StartInstancesArrayOutput {
	return o
}

func (o StartInstancesArrayOutput) Index(i pulumi.IntInput) StartInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StartInstances {
		return vs[0].([]*StartInstances)[vs[1].(int)]
	}).(StartInstancesOutput)
}

type StartInstancesMapOutput struct{ *pulumi.OutputState }

func (StartInstancesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StartInstances)(nil)).Elem()
}

func (o StartInstancesMapOutput) ToStartInstancesMapOutput() StartInstancesMapOutput {
	return o
}

func (o StartInstancesMapOutput) ToStartInstancesMapOutputWithContext(ctx context.Context) StartInstancesMapOutput {
	return o
}

func (o StartInstancesMapOutput) MapIndex(k pulumi.StringInput) StartInstancesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StartInstances {
		return vs[0].(map[string]*StartInstances)[vs[1].(string)]
	}).(StartInstancesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StartInstancesInput)(nil)).Elem(), &StartInstances{})
	pulumi.RegisterInputType(reflect.TypeOf((*StartInstancesArrayInput)(nil)).Elem(), StartInstancesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StartInstancesMapInput)(nil)).Elem(), StartInstancesMap{})
	pulumi.RegisterOutputType(StartInstancesOutput{})
	pulumi.RegisterOutputType(StartInstancesArrayOutput{})
	pulumi.RegisterOutputType(StartInstancesMapOutput{})
}
