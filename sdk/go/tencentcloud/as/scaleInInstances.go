// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a as scaleInInstances
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/As"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Images"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/As"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Images"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "as",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			image, err := Images.GetInstance(ctx, &images.GetInstanceArgs{
//				ImageTypes: []string{
//					"PUBLIC_IMAGE",
//				},
//				OsName: pulumi.StringRef("TencentOS Server 3.2 (Final)"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				AvailabilityZone: pulumi.String(zones.Zones[0].Name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleScalingConfig, err := As.NewScalingConfig(ctx, "exampleScalingConfig", &As.ScalingConfigArgs{
//				ConfigurationName: pulumi.String("tf-example"),
//				ImageId:           pulumi.String(image.Images[0].ImageId),
//				InstanceTypes: pulumi.StringArray{
//					pulumi.String("SA1.SMALL1"),
//					pulumi.String("SA2.SMALL1"),
//					pulumi.String("SA2.SMALL2"),
//					pulumi.String("SA2.SMALL4"),
//				},
//				InstanceNameSettings: &as.ScalingConfigInstanceNameSettingsArgs{
//					InstanceName: pulumi.String("test-ins-name"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleScalingGroup, err := As.NewScalingGroup(ctx, "exampleScalingGroup", &As.ScalingGroupArgs{
//				ScalingGroupName: pulumi.String("tf-example"),
//				ConfigurationId:  exampleScalingConfig.ID(),
//				MaxSize:          pulumi.Int(4),
//				MinSize:          pulumi.Int(1),
//				DesiredCapacity:  pulumi.Int(2),
//				VpcId:            vpc.ID(),
//				SubnetIds: pulumi.StringArray{
//					subnet.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = As.NewScaleInInstances(ctx, "scaleInInstances", &As.ScaleInInstancesArgs{
//				AutoScalingGroupId: exampleScalingGroup.ID(),
//				ScaleInNumber:      pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// as scale_in_instances can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:As/scaleInInstances:ScaleInInstances scale_in_instances scale_in_instances_id
//
// ```
type ScaleInInstances struct {
	pulumi.CustomResourceState

	// Scaling group ID.
	AutoScalingGroupId pulumi.StringOutput `pulumi:"autoScalingGroupId"`
	// Number of instances to be reduced.
	ScaleInNumber pulumi.IntOutput `pulumi:"scaleInNumber"`
}

// NewScaleInInstances registers a new resource with the given unique name, arguments, and options.
func NewScaleInInstances(ctx *pulumi.Context,
	name string, args *ScaleInInstancesArgs, opts ...pulumi.ResourceOption) (*ScaleInInstances, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingGroupId'")
	}
	if args.ScaleInNumber == nil {
		return nil, errors.New("invalid value for required argument 'ScaleInNumber'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ScaleInInstances
	err := ctx.RegisterResource("tencentcloud:As/scaleInInstances:ScaleInInstances", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScaleInInstances gets an existing ScaleInInstances resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScaleInInstances(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScaleInInstancesState, opts ...pulumi.ResourceOption) (*ScaleInInstances, error) {
	var resource ScaleInInstances
	err := ctx.ReadResource("tencentcloud:As/scaleInInstances:ScaleInInstances", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScaleInInstances resources.
type scaleInInstancesState struct {
	// Scaling group ID.
	AutoScalingGroupId *string `pulumi:"autoScalingGroupId"`
	// Number of instances to be reduced.
	ScaleInNumber *int `pulumi:"scaleInNumber"`
}

type ScaleInInstancesState struct {
	// Scaling group ID.
	AutoScalingGroupId pulumi.StringPtrInput
	// Number of instances to be reduced.
	ScaleInNumber pulumi.IntPtrInput
}

func (ScaleInInstancesState) ElementType() reflect.Type {
	return reflect.TypeOf((*scaleInInstancesState)(nil)).Elem()
}

type scaleInInstancesArgs struct {
	// Scaling group ID.
	AutoScalingGroupId string `pulumi:"autoScalingGroupId"`
	// Number of instances to be reduced.
	ScaleInNumber int `pulumi:"scaleInNumber"`
}

// The set of arguments for constructing a ScaleInInstances resource.
type ScaleInInstancesArgs struct {
	// Scaling group ID.
	AutoScalingGroupId pulumi.StringInput
	// Number of instances to be reduced.
	ScaleInNumber pulumi.IntInput
}

func (ScaleInInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scaleInInstancesArgs)(nil)).Elem()
}

type ScaleInInstancesInput interface {
	pulumi.Input

	ToScaleInInstancesOutput() ScaleInInstancesOutput
	ToScaleInInstancesOutputWithContext(ctx context.Context) ScaleInInstancesOutput
}

func (*ScaleInInstances) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleInInstances)(nil)).Elem()
}

func (i *ScaleInInstances) ToScaleInInstancesOutput() ScaleInInstancesOutput {
	return i.ToScaleInInstancesOutputWithContext(context.Background())
}

func (i *ScaleInInstances) ToScaleInInstancesOutputWithContext(ctx context.Context) ScaleInInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleInInstancesOutput)
}

// ScaleInInstancesArrayInput is an input type that accepts ScaleInInstancesArray and ScaleInInstancesArrayOutput values.
// You can construct a concrete instance of `ScaleInInstancesArrayInput` via:
//
//	ScaleInInstancesArray{ ScaleInInstancesArgs{...} }
type ScaleInInstancesArrayInput interface {
	pulumi.Input

	ToScaleInInstancesArrayOutput() ScaleInInstancesArrayOutput
	ToScaleInInstancesArrayOutputWithContext(context.Context) ScaleInInstancesArrayOutput
}

type ScaleInInstancesArray []ScaleInInstancesInput

func (ScaleInInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScaleInInstances)(nil)).Elem()
}

func (i ScaleInInstancesArray) ToScaleInInstancesArrayOutput() ScaleInInstancesArrayOutput {
	return i.ToScaleInInstancesArrayOutputWithContext(context.Background())
}

func (i ScaleInInstancesArray) ToScaleInInstancesArrayOutputWithContext(ctx context.Context) ScaleInInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleInInstancesArrayOutput)
}

// ScaleInInstancesMapInput is an input type that accepts ScaleInInstancesMap and ScaleInInstancesMapOutput values.
// You can construct a concrete instance of `ScaleInInstancesMapInput` via:
//
//	ScaleInInstancesMap{ "key": ScaleInInstancesArgs{...} }
type ScaleInInstancesMapInput interface {
	pulumi.Input

	ToScaleInInstancesMapOutput() ScaleInInstancesMapOutput
	ToScaleInInstancesMapOutputWithContext(context.Context) ScaleInInstancesMapOutput
}

type ScaleInInstancesMap map[string]ScaleInInstancesInput

func (ScaleInInstancesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScaleInInstances)(nil)).Elem()
}

func (i ScaleInInstancesMap) ToScaleInInstancesMapOutput() ScaleInInstancesMapOutput {
	return i.ToScaleInInstancesMapOutputWithContext(context.Background())
}

func (i ScaleInInstancesMap) ToScaleInInstancesMapOutputWithContext(ctx context.Context) ScaleInInstancesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleInInstancesMapOutput)
}

type ScaleInInstancesOutput struct{ *pulumi.OutputState }

func (ScaleInInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleInInstances)(nil)).Elem()
}

func (o ScaleInInstancesOutput) ToScaleInInstancesOutput() ScaleInInstancesOutput {
	return o
}

func (o ScaleInInstancesOutput) ToScaleInInstancesOutputWithContext(ctx context.Context) ScaleInInstancesOutput {
	return o
}

// Scaling group ID.
func (o ScaleInInstancesOutput) AutoScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScaleInInstances) pulumi.StringOutput { return v.AutoScalingGroupId }).(pulumi.StringOutput)
}

// Number of instances to be reduced.
func (o ScaleInInstancesOutput) ScaleInNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *ScaleInInstances) pulumi.IntOutput { return v.ScaleInNumber }).(pulumi.IntOutput)
}

type ScaleInInstancesArrayOutput struct{ *pulumi.OutputState }

func (ScaleInInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScaleInInstances)(nil)).Elem()
}

func (o ScaleInInstancesArrayOutput) ToScaleInInstancesArrayOutput() ScaleInInstancesArrayOutput {
	return o
}

func (o ScaleInInstancesArrayOutput) ToScaleInInstancesArrayOutputWithContext(ctx context.Context) ScaleInInstancesArrayOutput {
	return o
}

func (o ScaleInInstancesArrayOutput) Index(i pulumi.IntInput) ScaleInInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScaleInInstances {
		return vs[0].([]*ScaleInInstances)[vs[1].(int)]
	}).(ScaleInInstancesOutput)
}

type ScaleInInstancesMapOutput struct{ *pulumi.OutputState }

func (ScaleInInstancesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScaleInInstances)(nil)).Elem()
}

func (o ScaleInInstancesMapOutput) ToScaleInInstancesMapOutput() ScaleInInstancesMapOutput {
	return o
}

func (o ScaleInInstancesMapOutput) ToScaleInInstancesMapOutputWithContext(ctx context.Context) ScaleInInstancesMapOutput {
	return o
}

func (o ScaleInInstancesMapOutput) MapIndex(k pulumi.StringInput) ScaleInInstancesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScaleInInstances {
		return vs[0].(map[string]*ScaleInInstances)[vs[1].(string)]
	}).(ScaleInInstancesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleInInstancesInput)(nil)).Elem(), &ScaleInInstances{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleInInstancesArrayInput)(nil)).Elem(), ScaleInInstancesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleInInstancesMapInput)(nil)).Elem(), ScaleInInstancesMap{})
	pulumi.RegisterOutputType(ScaleInInstancesOutput{})
	pulumi.RegisterOutputType(ScaleInInstancesArrayOutput{})
	pulumi.RegisterOutputType(ScaleInInstancesMapOutput{})
}
