// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a as executeScalingPolicy
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/As"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Images"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/As"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Images"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "as",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			image, err := Images.GetInstance(ctx, &images.GetInstanceArgs{
//				ImageTypes: []string{
//					"PUBLIC_IMAGE",
//				},
//				OsName: pulumi.StringRef("TencentOS Server 3.2 (Final)"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				AvailabilityZone: pulumi.String(zones.Zones[0].Name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleScalingConfig, err := As.NewScalingConfig(ctx, "exampleScalingConfig", &As.ScalingConfigArgs{
//				ConfigurationName: pulumi.String("tf-example"),
//				ImageId:           pulumi.String(image.Images[0].ImageId),
//				InstanceTypes: pulumi.StringArray{
//					pulumi.String("SA1.SMALL1"),
//					pulumi.String("SA2.SMALL1"),
//					pulumi.String("SA2.SMALL2"),
//					pulumi.String("SA2.SMALL4"),
//				},
//				InstanceNameSettings: &as.ScalingConfigInstanceNameSettingsArgs{
//					InstanceName: pulumi.String("test-ins-name"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleScalingGroup, err := As.NewScalingGroup(ctx, "exampleScalingGroup", &As.ScalingGroupArgs{
//				ScalingGroupName: pulumi.String("tf-example"),
//				ConfigurationId:  exampleScalingConfig.ID(),
//				MaxSize:          pulumi.Int(4),
//				MinSize:          pulumi.Int(1),
//				DesiredCapacity:  pulumi.Int(2),
//				VpcId:            vpc.ID(),
//				SubnetIds: pulumi.StringArray{
//					subnet.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleScalingPolicy, err := As.NewScalingPolicy(ctx, "exampleScalingPolicy", &As.ScalingPolicyArgs{
//				ScalingGroupId:     exampleScalingGroup.ID(),
//				PolicyName:         pulumi.String("tf-as-scaling-policy"),
//				AdjustmentType:     pulumi.String("EXACT_CAPACITY"),
//				AdjustmentValue:    pulumi.Int(0),
//				ComparisonOperator: pulumi.String("GREATER_THAN"),
//				MetricName:         pulumi.String("CPU_UTILIZATION"),
//				Threshold:          pulumi.Int(80),
//				Period:             pulumi.Int(300),
//				ContinuousTime:     pulumi.Int(10),
//				Statistic:          pulumi.String("AVERAGE"),
//				Cooldown:           pulumi.Int(360),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = As.NewExecuteScalingPolicy(ctx, "exampleExecuteScalingPolicy", &As.ExecuteScalingPolicyArgs{
//				AutoScalingPolicyId: exampleScalingPolicy.ID(),
//				HonorCooldown:       pulumi.Bool(false),
//				TriggerSource:       pulumi.String("API"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// as execute_scaling_policy can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:As/executeScalingPolicy:ExecuteScalingPolicy execute_scaling_policy execute_scaling_policy_id
//
// ```
type ExecuteScalingPolicy struct {
	pulumi.CustomResourceState

	// Auto-scaling policy ID. This parameter is not available to a target tracking policy.
	AutoScalingPolicyId pulumi.StringOutput `pulumi:"autoScalingPolicyId"`
	// Whether to check if the auto scaling group is in the cooldown period. Default value: false.
	HonorCooldown pulumi.BoolPtrOutput `pulumi:"honorCooldown"`
	// Source that triggers the scaling policy. Valid values: API and CLOUD_MONITOR. Default value: API. The value CLOUD_MONITOR is specific to the Cloud Monitor service.
	TriggerSource pulumi.StringPtrOutput `pulumi:"triggerSource"`
}

// NewExecuteScalingPolicy registers a new resource with the given unique name, arguments, and options.
func NewExecuteScalingPolicy(ctx *pulumi.Context,
	name string, args *ExecuteScalingPolicyArgs, opts ...pulumi.ResourceOption) (*ExecuteScalingPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingPolicyId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ExecuteScalingPolicy
	err := ctx.RegisterResource("tencentcloud:As/executeScalingPolicy:ExecuteScalingPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExecuteScalingPolicy gets an existing ExecuteScalingPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExecuteScalingPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExecuteScalingPolicyState, opts ...pulumi.ResourceOption) (*ExecuteScalingPolicy, error) {
	var resource ExecuteScalingPolicy
	err := ctx.ReadResource("tencentcloud:As/executeScalingPolicy:ExecuteScalingPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExecuteScalingPolicy resources.
type executeScalingPolicyState struct {
	// Auto-scaling policy ID. This parameter is not available to a target tracking policy.
	AutoScalingPolicyId *string `pulumi:"autoScalingPolicyId"`
	// Whether to check if the auto scaling group is in the cooldown period. Default value: false.
	HonorCooldown *bool `pulumi:"honorCooldown"`
	// Source that triggers the scaling policy. Valid values: API and CLOUD_MONITOR. Default value: API. The value CLOUD_MONITOR is specific to the Cloud Monitor service.
	TriggerSource *string `pulumi:"triggerSource"`
}

type ExecuteScalingPolicyState struct {
	// Auto-scaling policy ID. This parameter is not available to a target tracking policy.
	AutoScalingPolicyId pulumi.StringPtrInput
	// Whether to check if the auto scaling group is in the cooldown period. Default value: false.
	HonorCooldown pulumi.BoolPtrInput
	// Source that triggers the scaling policy. Valid values: API and CLOUD_MONITOR. Default value: API. The value CLOUD_MONITOR is specific to the Cloud Monitor service.
	TriggerSource pulumi.StringPtrInput
}

func (ExecuteScalingPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*executeScalingPolicyState)(nil)).Elem()
}

type executeScalingPolicyArgs struct {
	// Auto-scaling policy ID. This parameter is not available to a target tracking policy.
	AutoScalingPolicyId string `pulumi:"autoScalingPolicyId"`
	// Whether to check if the auto scaling group is in the cooldown period. Default value: false.
	HonorCooldown *bool `pulumi:"honorCooldown"`
	// Source that triggers the scaling policy. Valid values: API and CLOUD_MONITOR. Default value: API. The value CLOUD_MONITOR is specific to the Cloud Monitor service.
	TriggerSource *string `pulumi:"triggerSource"`
}

// The set of arguments for constructing a ExecuteScalingPolicy resource.
type ExecuteScalingPolicyArgs struct {
	// Auto-scaling policy ID. This parameter is not available to a target tracking policy.
	AutoScalingPolicyId pulumi.StringInput
	// Whether to check if the auto scaling group is in the cooldown period. Default value: false.
	HonorCooldown pulumi.BoolPtrInput
	// Source that triggers the scaling policy. Valid values: API and CLOUD_MONITOR. Default value: API. The value CLOUD_MONITOR is specific to the Cloud Monitor service.
	TriggerSource pulumi.StringPtrInput
}

func (ExecuteScalingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*executeScalingPolicyArgs)(nil)).Elem()
}

type ExecuteScalingPolicyInput interface {
	pulumi.Input

	ToExecuteScalingPolicyOutput() ExecuteScalingPolicyOutput
	ToExecuteScalingPolicyOutputWithContext(ctx context.Context) ExecuteScalingPolicyOutput
}

func (*ExecuteScalingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecuteScalingPolicy)(nil)).Elem()
}

func (i *ExecuteScalingPolicy) ToExecuteScalingPolicyOutput() ExecuteScalingPolicyOutput {
	return i.ToExecuteScalingPolicyOutputWithContext(context.Background())
}

func (i *ExecuteScalingPolicy) ToExecuteScalingPolicyOutputWithContext(ctx context.Context) ExecuteScalingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecuteScalingPolicyOutput)
}

// ExecuteScalingPolicyArrayInput is an input type that accepts ExecuteScalingPolicyArray and ExecuteScalingPolicyArrayOutput values.
// You can construct a concrete instance of `ExecuteScalingPolicyArrayInput` via:
//
//	ExecuteScalingPolicyArray{ ExecuteScalingPolicyArgs{...} }
type ExecuteScalingPolicyArrayInput interface {
	pulumi.Input

	ToExecuteScalingPolicyArrayOutput() ExecuteScalingPolicyArrayOutput
	ToExecuteScalingPolicyArrayOutputWithContext(context.Context) ExecuteScalingPolicyArrayOutput
}

type ExecuteScalingPolicyArray []ExecuteScalingPolicyInput

func (ExecuteScalingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExecuteScalingPolicy)(nil)).Elem()
}

func (i ExecuteScalingPolicyArray) ToExecuteScalingPolicyArrayOutput() ExecuteScalingPolicyArrayOutput {
	return i.ToExecuteScalingPolicyArrayOutputWithContext(context.Background())
}

func (i ExecuteScalingPolicyArray) ToExecuteScalingPolicyArrayOutputWithContext(ctx context.Context) ExecuteScalingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecuteScalingPolicyArrayOutput)
}

// ExecuteScalingPolicyMapInput is an input type that accepts ExecuteScalingPolicyMap and ExecuteScalingPolicyMapOutput values.
// You can construct a concrete instance of `ExecuteScalingPolicyMapInput` via:
//
//	ExecuteScalingPolicyMap{ "key": ExecuteScalingPolicyArgs{...} }
type ExecuteScalingPolicyMapInput interface {
	pulumi.Input

	ToExecuteScalingPolicyMapOutput() ExecuteScalingPolicyMapOutput
	ToExecuteScalingPolicyMapOutputWithContext(context.Context) ExecuteScalingPolicyMapOutput
}

type ExecuteScalingPolicyMap map[string]ExecuteScalingPolicyInput

func (ExecuteScalingPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExecuteScalingPolicy)(nil)).Elem()
}

func (i ExecuteScalingPolicyMap) ToExecuteScalingPolicyMapOutput() ExecuteScalingPolicyMapOutput {
	return i.ToExecuteScalingPolicyMapOutputWithContext(context.Background())
}

func (i ExecuteScalingPolicyMap) ToExecuteScalingPolicyMapOutputWithContext(ctx context.Context) ExecuteScalingPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecuteScalingPolicyMapOutput)
}

type ExecuteScalingPolicyOutput struct{ *pulumi.OutputState }

func (ExecuteScalingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecuteScalingPolicy)(nil)).Elem()
}

func (o ExecuteScalingPolicyOutput) ToExecuteScalingPolicyOutput() ExecuteScalingPolicyOutput {
	return o
}

func (o ExecuteScalingPolicyOutput) ToExecuteScalingPolicyOutputWithContext(ctx context.Context) ExecuteScalingPolicyOutput {
	return o
}

// Auto-scaling policy ID. This parameter is not available to a target tracking policy.
func (o ExecuteScalingPolicyOutput) AutoScalingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExecuteScalingPolicy) pulumi.StringOutput { return v.AutoScalingPolicyId }).(pulumi.StringOutput)
}

// Whether to check if the auto scaling group is in the cooldown period. Default value: false.
func (o ExecuteScalingPolicyOutput) HonorCooldown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExecuteScalingPolicy) pulumi.BoolPtrOutput { return v.HonorCooldown }).(pulumi.BoolPtrOutput)
}

// Source that triggers the scaling policy. Valid values: API and CLOUD_MONITOR. Default value: API. The value CLOUD_MONITOR is specific to the Cloud Monitor service.
func (o ExecuteScalingPolicyOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExecuteScalingPolicy) pulumi.StringPtrOutput { return v.TriggerSource }).(pulumi.StringPtrOutput)
}

type ExecuteScalingPolicyArrayOutput struct{ *pulumi.OutputState }

func (ExecuteScalingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExecuteScalingPolicy)(nil)).Elem()
}

func (o ExecuteScalingPolicyArrayOutput) ToExecuteScalingPolicyArrayOutput() ExecuteScalingPolicyArrayOutput {
	return o
}

func (o ExecuteScalingPolicyArrayOutput) ToExecuteScalingPolicyArrayOutputWithContext(ctx context.Context) ExecuteScalingPolicyArrayOutput {
	return o
}

func (o ExecuteScalingPolicyArrayOutput) Index(i pulumi.IntInput) ExecuteScalingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExecuteScalingPolicy {
		return vs[0].([]*ExecuteScalingPolicy)[vs[1].(int)]
	}).(ExecuteScalingPolicyOutput)
}

type ExecuteScalingPolicyMapOutput struct{ *pulumi.OutputState }

func (ExecuteScalingPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExecuteScalingPolicy)(nil)).Elem()
}

func (o ExecuteScalingPolicyMapOutput) ToExecuteScalingPolicyMapOutput() ExecuteScalingPolicyMapOutput {
	return o
}

func (o ExecuteScalingPolicyMapOutput) ToExecuteScalingPolicyMapOutputWithContext(ctx context.Context) ExecuteScalingPolicyMapOutput {
	return o
}

func (o ExecuteScalingPolicyMapOutput) MapIndex(k pulumi.StringInput) ExecuteScalingPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExecuteScalingPolicy {
		return vs[0].(map[string]*ExecuteScalingPolicy)[vs[1].(string)]
	}).(ExecuteScalingPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExecuteScalingPolicyInput)(nil)).Elem(), &ExecuteScalingPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExecuteScalingPolicyArrayInput)(nil)).Elem(), ExecuteScalingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExecuteScalingPolicyMapInput)(nil)).Elem(), ExecuteScalingPolicyMap{})
	pulumi.RegisterOutputType(ExecuteScalingPolicyOutput{})
	pulumi.RegisterOutputType(ExecuteScalingPolicyArrayOutput{})
	pulumi.RegisterOutputType(ExecuteScalingPolicyMapOutput{})
}
