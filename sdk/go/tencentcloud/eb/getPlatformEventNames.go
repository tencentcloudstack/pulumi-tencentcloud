// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of eb platformEventNames
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Eb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Eb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Eb.GetPlatformEventNames(ctx, &eb.GetPlatformEventNamesArgs{
//				ProductType: "",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPlatformEventNames(ctx *pulumi.Context, args *GetPlatformEventNamesArgs, opts ...pulumi.InvokeOption) (*GetPlatformEventNamesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPlatformEventNamesResult
	err := ctx.Invoke("tencentcloud:Eb/getPlatformEventNames:getPlatformEventNames", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlatformEventNames.
type GetPlatformEventNamesArgs struct {
	// Platform product event type.
	ProductType string `pulumi:"productType"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getPlatformEventNames.
type GetPlatformEventNamesResult struct {
	// Platform product list.
	EventNames []GetPlatformEventNamesEventName `pulumi:"eventNames"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ProductType      string  `pulumi:"productType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetPlatformEventNamesOutput(ctx *pulumi.Context, args GetPlatformEventNamesOutputArgs, opts ...pulumi.InvokeOption) GetPlatformEventNamesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPlatformEventNamesResult, error) {
			args := v.(GetPlatformEventNamesArgs)
			r, err := GetPlatformEventNames(ctx, &args, opts...)
			var s GetPlatformEventNamesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPlatformEventNamesResultOutput)
}

// A collection of arguments for invoking getPlatformEventNames.
type GetPlatformEventNamesOutputArgs struct {
	// Platform product event type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetPlatformEventNamesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformEventNamesArgs)(nil)).Elem()
}

// A collection of values returned by getPlatformEventNames.
type GetPlatformEventNamesResultOutput struct{ *pulumi.OutputState }

func (GetPlatformEventNamesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformEventNamesResult)(nil)).Elem()
}

func (o GetPlatformEventNamesResultOutput) ToGetPlatformEventNamesResultOutput() GetPlatformEventNamesResultOutput {
	return o
}

func (o GetPlatformEventNamesResultOutput) ToGetPlatformEventNamesResultOutputWithContext(ctx context.Context) GetPlatformEventNamesResultOutput {
	return o
}

// Platform product list.
func (o GetPlatformEventNamesResultOutput) EventNames() GetPlatformEventNamesEventNameArrayOutput {
	return o.ApplyT(func(v GetPlatformEventNamesResult) []GetPlatformEventNamesEventName { return v.EventNames }).(GetPlatformEventNamesEventNameArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPlatformEventNamesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformEventNamesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPlatformEventNamesResultOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformEventNamesResult) string { return v.ProductType }).(pulumi.StringOutput)
}

func (o GetPlatformEventNamesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformEventNamesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlatformEventNamesResultOutput{})
}
