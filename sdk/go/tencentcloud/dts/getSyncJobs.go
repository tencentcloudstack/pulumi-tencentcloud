// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dts syncJobs
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dts"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dts"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			job, err := Dts.NewSyncJob(ctx, "job", &Dts.SyncJobArgs{
//				JobName:         pulumi.String("tf_dts_test"),
//				PayMode:         pulumi.String("PostPay"),
//				SrcDatabaseType: pulumi.String("mysql"),
//				SrcRegion:       pulumi.String("ap-guangzhou"),
//				DstDatabaseType: pulumi.String("cynosdbmysql"),
//				DstRegion:       pulumi.String("ap-guangzhou"),
//				Tags: dts.SyncJobTagArray{
//					&dts.SyncJobTagArgs{
//						TagKey:   pulumi.String("aaa"),
//						TagValue: pulumi.String("bbb"),
//					},
//				},
//				AutoRenew:     pulumi.Int(0),
//				InstanceClass: pulumi.String("micro"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = Dts.GetSyncJobsOutput(ctx, dts.GetSyncJobsOutputArgs{
//				JobId:   job.ID(),
//				JobName: pulumi.String("tf_dts_test"),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetSyncJobs(ctx *pulumi.Context, args *GetSyncJobsArgs, opts ...pulumi.InvokeOption) (*GetSyncJobsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSyncJobsResult
	err := ctx.Invoke("tencentcloud:Dts/getSyncJobs:getSyncJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSyncJobs.
type GetSyncJobsArgs struct {
	// job id.
	JobId *string `pulumi:"jobId"`
	// job name.
	JobName *string `pulumi:"jobName"`
	// job type.
	JobType *string `pulumi:"jobType"`
	// order field.
	Order *string `pulumi:"order"`
	// order way, optional value is DESC or ASC.
	OrderSeq *string `pulumi:"orderSeq"`
	// pay mode, optional value is PrePay or PostPay.
	PayMode *string `pulumi:"payMode"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// run mode, optional value is mmediate or Timed.
	RunMode *string `pulumi:"runMode"`
	// status.
	Statuses []string `pulumi:"statuses"`
	// tag filters.
	TagFilters []GetSyncJobsTagFilter `pulumi:"tagFilters"`
}

// A collection of values returned by getSyncJobs.
type GetSyncJobsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// job id.
	JobId *string `pulumi:"jobId"`
	// job name.
	JobName *string `pulumi:"jobName"`
	JobType *string `pulumi:"jobType"`
	// sync job list.
	Lists    []GetSyncJobsList `pulumi:"lists"`
	Order    *string           `pulumi:"order"`
	OrderSeq *string           `pulumi:"orderSeq"`
	// pay mode.
	PayMode          *string `pulumi:"payMode"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// run mode.
	RunMode *string `pulumi:"runMode"`
	// status.
	Statuses   []string               `pulumi:"statuses"`
	TagFilters []GetSyncJobsTagFilter `pulumi:"tagFilters"`
}

func GetSyncJobsOutput(ctx *pulumi.Context, args GetSyncJobsOutputArgs, opts ...pulumi.InvokeOption) GetSyncJobsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSyncJobsResult, error) {
			args := v.(GetSyncJobsArgs)
			r, err := GetSyncJobs(ctx, &args, opts...)
			var s GetSyncJobsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSyncJobsResultOutput)
}

// A collection of arguments for invoking getSyncJobs.
type GetSyncJobsOutputArgs struct {
	// job id.
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
	// job name.
	JobName pulumi.StringPtrInput `pulumi:"jobName"`
	// job type.
	JobType pulumi.StringPtrInput `pulumi:"jobType"`
	// order field.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// order way, optional value is DESC or ASC.
	OrderSeq pulumi.StringPtrInput `pulumi:"orderSeq"`
	// pay mode, optional value is PrePay or PostPay.
	PayMode pulumi.StringPtrInput `pulumi:"payMode"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// run mode, optional value is mmediate or Timed.
	RunMode pulumi.StringPtrInput `pulumi:"runMode"`
	// status.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
	// tag filters.
	TagFilters GetSyncJobsTagFilterArrayInput `pulumi:"tagFilters"`
}

func (GetSyncJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyncJobsArgs)(nil)).Elem()
}

// A collection of values returned by getSyncJobs.
type GetSyncJobsResultOutput struct{ *pulumi.OutputState }

func (GetSyncJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyncJobsResult)(nil)).Elem()
}

func (o GetSyncJobsResultOutput) ToGetSyncJobsResultOutput() GetSyncJobsResultOutput {
	return o
}

func (o GetSyncJobsResultOutput) ToGetSyncJobsResultOutputWithContext(ctx context.Context) GetSyncJobsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSyncJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyncJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

// job id.
func (o GetSyncJobsResultOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// job name.
func (o GetSyncJobsResultOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

func (o GetSyncJobsResultOutput) JobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.JobType }).(pulumi.StringPtrOutput)
}

// sync job list.
func (o GetSyncJobsResultOutput) Lists() GetSyncJobsListArrayOutput {
	return o.ApplyT(func(v GetSyncJobsResult) []GetSyncJobsList { return v.Lists }).(GetSyncJobsListArrayOutput)
}

func (o GetSyncJobsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o GetSyncJobsResultOutput) OrderSeq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.OrderSeq }).(pulumi.StringPtrOutput)
}

// pay mode.
func (o GetSyncJobsResultOutput) PayMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.PayMode }).(pulumi.StringPtrOutput)
}

func (o GetSyncJobsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// run mode.
func (o GetSyncJobsResultOutput) RunMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyncJobsResult) *string { return v.RunMode }).(pulumi.StringPtrOutput)
}

// status.
func (o GetSyncJobsResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyncJobsResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func (o GetSyncJobsResultOutput) TagFilters() GetSyncJobsTagFilterArrayOutput {
	return o.ApplyT(func(v GetSyncJobsResult) []GetSyncJobsTagFilter { return v.TagFilters }).(GetSyncJobsTagFilterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSyncJobsResultOutput{})
}
