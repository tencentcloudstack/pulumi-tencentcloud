// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dts syncJobContinueOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dts"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dts.NewSyncJobContinueOperation(ctx, "syncJobContinueOperation", &Dts.SyncJobContinueOperationArgs{
//				JobId: pulumi.String("sync-werwfs23"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SyncJobContinueOperation struct {
	pulumi.CustomResourceState

	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId pulumi.StringOutput `pulumi:"jobId"`
}

// NewSyncJobContinueOperation registers a new resource with the given unique name, arguments, and options.
func NewSyncJobContinueOperation(ctx *pulumi.Context,
	name string, args *SyncJobContinueOperationArgs, opts ...pulumi.ResourceOption) (*SyncJobContinueOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobId == nil {
		return nil, errors.New("invalid value for required argument 'JobId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SyncJobContinueOperation
	err := ctx.RegisterResource("tencentcloud:Dts/syncJobContinueOperation:SyncJobContinueOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyncJobContinueOperation gets an existing SyncJobContinueOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyncJobContinueOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyncJobContinueOperationState, opts ...pulumi.ResourceOption) (*SyncJobContinueOperation, error) {
	var resource SyncJobContinueOperation
	err := ctx.ReadResource("tencentcloud:Dts/syncJobContinueOperation:SyncJobContinueOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyncJobContinueOperation resources.
type syncJobContinueOperationState struct {
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId *string `pulumi:"jobId"`
}

type SyncJobContinueOperationState struct {
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId pulumi.StringPtrInput
}

func (SyncJobContinueOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*syncJobContinueOperationState)(nil)).Elem()
}

type syncJobContinueOperationArgs struct {
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId string `pulumi:"jobId"`
}

// The set of arguments for constructing a SyncJobContinueOperation resource.
type SyncJobContinueOperationArgs struct {
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId pulumi.StringInput
}

func (SyncJobContinueOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syncJobContinueOperationArgs)(nil)).Elem()
}

type SyncJobContinueOperationInput interface {
	pulumi.Input

	ToSyncJobContinueOperationOutput() SyncJobContinueOperationOutput
	ToSyncJobContinueOperationOutputWithContext(ctx context.Context) SyncJobContinueOperationOutput
}

func (*SyncJobContinueOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**SyncJobContinueOperation)(nil)).Elem()
}

func (i *SyncJobContinueOperation) ToSyncJobContinueOperationOutput() SyncJobContinueOperationOutput {
	return i.ToSyncJobContinueOperationOutputWithContext(context.Background())
}

func (i *SyncJobContinueOperation) ToSyncJobContinueOperationOutputWithContext(ctx context.Context) SyncJobContinueOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncJobContinueOperationOutput)
}

// SyncJobContinueOperationArrayInput is an input type that accepts SyncJobContinueOperationArray and SyncJobContinueOperationArrayOutput values.
// You can construct a concrete instance of `SyncJobContinueOperationArrayInput` via:
//
//	SyncJobContinueOperationArray{ SyncJobContinueOperationArgs{...} }
type SyncJobContinueOperationArrayInput interface {
	pulumi.Input

	ToSyncJobContinueOperationArrayOutput() SyncJobContinueOperationArrayOutput
	ToSyncJobContinueOperationArrayOutputWithContext(context.Context) SyncJobContinueOperationArrayOutput
}

type SyncJobContinueOperationArray []SyncJobContinueOperationInput

func (SyncJobContinueOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyncJobContinueOperation)(nil)).Elem()
}

func (i SyncJobContinueOperationArray) ToSyncJobContinueOperationArrayOutput() SyncJobContinueOperationArrayOutput {
	return i.ToSyncJobContinueOperationArrayOutputWithContext(context.Background())
}

func (i SyncJobContinueOperationArray) ToSyncJobContinueOperationArrayOutputWithContext(ctx context.Context) SyncJobContinueOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncJobContinueOperationArrayOutput)
}

// SyncJobContinueOperationMapInput is an input type that accepts SyncJobContinueOperationMap and SyncJobContinueOperationMapOutput values.
// You can construct a concrete instance of `SyncJobContinueOperationMapInput` via:
//
//	SyncJobContinueOperationMap{ "key": SyncJobContinueOperationArgs{...} }
type SyncJobContinueOperationMapInput interface {
	pulumi.Input

	ToSyncJobContinueOperationMapOutput() SyncJobContinueOperationMapOutput
	ToSyncJobContinueOperationMapOutputWithContext(context.Context) SyncJobContinueOperationMapOutput
}

type SyncJobContinueOperationMap map[string]SyncJobContinueOperationInput

func (SyncJobContinueOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyncJobContinueOperation)(nil)).Elem()
}

func (i SyncJobContinueOperationMap) ToSyncJobContinueOperationMapOutput() SyncJobContinueOperationMapOutput {
	return i.ToSyncJobContinueOperationMapOutputWithContext(context.Background())
}

func (i SyncJobContinueOperationMap) ToSyncJobContinueOperationMapOutputWithContext(ctx context.Context) SyncJobContinueOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncJobContinueOperationMapOutput)
}

type SyncJobContinueOperationOutput struct{ *pulumi.OutputState }

func (SyncJobContinueOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyncJobContinueOperation)(nil)).Elem()
}

func (o SyncJobContinueOperationOutput) ToSyncJobContinueOperationOutput() SyncJobContinueOperationOutput {
	return o
}

func (o SyncJobContinueOperationOutput) ToSyncJobContinueOperationOutputWithContext(ctx context.Context) SyncJobContinueOperationOutput {
	return o
}

// Synchronization instance id (i.e. identifies a synchronization job).
func (o SyncJobContinueOperationOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *SyncJobContinueOperation) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

type SyncJobContinueOperationArrayOutput struct{ *pulumi.OutputState }

func (SyncJobContinueOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyncJobContinueOperation)(nil)).Elem()
}

func (o SyncJobContinueOperationArrayOutput) ToSyncJobContinueOperationArrayOutput() SyncJobContinueOperationArrayOutput {
	return o
}

func (o SyncJobContinueOperationArrayOutput) ToSyncJobContinueOperationArrayOutputWithContext(ctx context.Context) SyncJobContinueOperationArrayOutput {
	return o
}

func (o SyncJobContinueOperationArrayOutput) Index(i pulumi.IntInput) SyncJobContinueOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyncJobContinueOperation {
		return vs[0].([]*SyncJobContinueOperation)[vs[1].(int)]
	}).(SyncJobContinueOperationOutput)
}

type SyncJobContinueOperationMapOutput struct{ *pulumi.OutputState }

func (SyncJobContinueOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyncJobContinueOperation)(nil)).Elem()
}

func (o SyncJobContinueOperationMapOutput) ToSyncJobContinueOperationMapOutput() SyncJobContinueOperationMapOutput {
	return o
}

func (o SyncJobContinueOperationMapOutput) ToSyncJobContinueOperationMapOutputWithContext(ctx context.Context) SyncJobContinueOperationMapOutput {
	return o
}

func (o SyncJobContinueOperationMapOutput) MapIndex(k pulumi.StringInput) SyncJobContinueOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyncJobContinueOperation {
		return vs[0].(map[string]*SyncJobContinueOperation)[vs[1].(string)]
	}).(SyncJobContinueOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyncJobContinueOperationInput)(nil)).Elem(), &SyncJobContinueOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyncJobContinueOperationArrayInput)(nil)).Elem(), SyncJobContinueOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyncJobContinueOperationMapInput)(nil)).Elem(), SyncJobContinueOperationMap{})
	pulumi.RegisterOutputType(SyncJobContinueOperationOutput{})
	pulumi.RegisterOutputType(SyncJobContinueOperationArrayOutput{})
	pulumi.RegisterOutputType(SyncJobContinueOperationMapOutput{})
}
