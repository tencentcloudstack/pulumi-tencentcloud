// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dts compareTaskStopOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dts"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dts.NewCompareTaskStopOperation(ctx, "compareTaskStopOperation", &Dts.CompareTaskStopOperationArgs{
//				CompareTaskId: pulumi.String("dts-8yv4w2i1-cmp-37skmii9"),
//				JobId:         pulumi.String("dts-8yv4w2i1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type CompareTaskStopOperation struct {
	pulumi.CustomResourceState

	// Compare task id.
	CompareTaskId pulumi.StringOutput `pulumi:"compareTaskId"`
	// job id.
	JobId pulumi.StringOutput `pulumi:"jobId"`
}

// NewCompareTaskStopOperation registers a new resource with the given unique name, arguments, and options.
func NewCompareTaskStopOperation(ctx *pulumi.Context,
	name string, args *CompareTaskStopOperationArgs, opts ...pulumi.ResourceOption) (*CompareTaskStopOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompareTaskId == nil {
		return nil, errors.New("invalid value for required argument 'CompareTaskId'")
	}
	if args.JobId == nil {
		return nil, errors.New("invalid value for required argument 'JobId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CompareTaskStopOperation
	err := ctx.RegisterResource("tencentcloud:Dts/compareTaskStopOperation:CompareTaskStopOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCompareTaskStopOperation gets an existing CompareTaskStopOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCompareTaskStopOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CompareTaskStopOperationState, opts ...pulumi.ResourceOption) (*CompareTaskStopOperation, error) {
	var resource CompareTaskStopOperation
	err := ctx.ReadResource("tencentcloud:Dts/compareTaskStopOperation:CompareTaskStopOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CompareTaskStopOperation resources.
type compareTaskStopOperationState struct {
	// Compare task id.
	CompareTaskId *string `pulumi:"compareTaskId"`
	// job id.
	JobId *string `pulumi:"jobId"`
}

type CompareTaskStopOperationState struct {
	// Compare task id.
	CompareTaskId pulumi.StringPtrInput
	// job id.
	JobId pulumi.StringPtrInput
}

func (CompareTaskStopOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*compareTaskStopOperationState)(nil)).Elem()
}

type compareTaskStopOperationArgs struct {
	// Compare task id.
	CompareTaskId string `pulumi:"compareTaskId"`
	// job id.
	JobId string `pulumi:"jobId"`
}

// The set of arguments for constructing a CompareTaskStopOperation resource.
type CompareTaskStopOperationArgs struct {
	// Compare task id.
	CompareTaskId pulumi.StringInput
	// job id.
	JobId pulumi.StringInput
}

func (CompareTaskStopOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*compareTaskStopOperationArgs)(nil)).Elem()
}

type CompareTaskStopOperationInput interface {
	pulumi.Input

	ToCompareTaskStopOperationOutput() CompareTaskStopOperationOutput
	ToCompareTaskStopOperationOutputWithContext(ctx context.Context) CompareTaskStopOperationOutput
}

func (*CompareTaskStopOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**CompareTaskStopOperation)(nil)).Elem()
}

func (i *CompareTaskStopOperation) ToCompareTaskStopOperationOutput() CompareTaskStopOperationOutput {
	return i.ToCompareTaskStopOperationOutputWithContext(context.Background())
}

func (i *CompareTaskStopOperation) ToCompareTaskStopOperationOutputWithContext(ctx context.Context) CompareTaskStopOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompareTaskStopOperationOutput)
}

// CompareTaskStopOperationArrayInput is an input type that accepts CompareTaskStopOperationArray and CompareTaskStopOperationArrayOutput values.
// You can construct a concrete instance of `CompareTaskStopOperationArrayInput` via:
//
//	CompareTaskStopOperationArray{ CompareTaskStopOperationArgs{...} }
type CompareTaskStopOperationArrayInput interface {
	pulumi.Input

	ToCompareTaskStopOperationArrayOutput() CompareTaskStopOperationArrayOutput
	ToCompareTaskStopOperationArrayOutputWithContext(context.Context) CompareTaskStopOperationArrayOutput
}

type CompareTaskStopOperationArray []CompareTaskStopOperationInput

func (CompareTaskStopOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CompareTaskStopOperation)(nil)).Elem()
}

func (i CompareTaskStopOperationArray) ToCompareTaskStopOperationArrayOutput() CompareTaskStopOperationArrayOutput {
	return i.ToCompareTaskStopOperationArrayOutputWithContext(context.Background())
}

func (i CompareTaskStopOperationArray) ToCompareTaskStopOperationArrayOutputWithContext(ctx context.Context) CompareTaskStopOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompareTaskStopOperationArrayOutput)
}

// CompareTaskStopOperationMapInput is an input type that accepts CompareTaskStopOperationMap and CompareTaskStopOperationMapOutput values.
// You can construct a concrete instance of `CompareTaskStopOperationMapInput` via:
//
//	CompareTaskStopOperationMap{ "key": CompareTaskStopOperationArgs{...} }
type CompareTaskStopOperationMapInput interface {
	pulumi.Input

	ToCompareTaskStopOperationMapOutput() CompareTaskStopOperationMapOutput
	ToCompareTaskStopOperationMapOutputWithContext(context.Context) CompareTaskStopOperationMapOutput
}

type CompareTaskStopOperationMap map[string]CompareTaskStopOperationInput

func (CompareTaskStopOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CompareTaskStopOperation)(nil)).Elem()
}

func (i CompareTaskStopOperationMap) ToCompareTaskStopOperationMapOutput() CompareTaskStopOperationMapOutput {
	return i.ToCompareTaskStopOperationMapOutputWithContext(context.Background())
}

func (i CompareTaskStopOperationMap) ToCompareTaskStopOperationMapOutputWithContext(ctx context.Context) CompareTaskStopOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompareTaskStopOperationMapOutput)
}

type CompareTaskStopOperationOutput struct{ *pulumi.OutputState }

func (CompareTaskStopOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompareTaskStopOperation)(nil)).Elem()
}

func (o CompareTaskStopOperationOutput) ToCompareTaskStopOperationOutput() CompareTaskStopOperationOutput {
	return o
}

func (o CompareTaskStopOperationOutput) ToCompareTaskStopOperationOutputWithContext(ctx context.Context) CompareTaskStopOperationOutput {
	return o
}

// Compare task id.
func (o CompareTaskStopOperationOutput) CompareTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v *CompareTaskStopOperation) pulumi.StringOutput { return v.CompareTaskId }).(pulumi.StringOutput)
}

// job id.
func (o CompareTaskStopOperationOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *CompareTaskStopOperation) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

type CompareTaskStopOperationArrayOutput struct{ *pulumi.OutputState }

func (CompareTaskStopOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CompareTaskStopOperation)(nil)).Elem()
}

func (o CompareTaskStopOperationArrayOutput) ToCompareTaskStopOperationArrayOutput() CompareTaskStopOperationArrayOutput {
	return o
}

func (o CompareTaskStopOperationArrayOutput) ToCompareTaskStopOperationArrayOutputWithContext(ctx context.Context) CompareTaskStopOperationArrayOutput {
	return o
}

func (o CompareTaskStopOperationArrayOutput) Index(i pulumi.IntInput) CompareTaskStopOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CompareTaskStopOperation {
		return vs[0].([]*CompareTaskStopOperation)[vs[1].(int)]
	}).(CompareTaskStopOperationOutput)
}

type CompareTaskStopOperationMapOutput struct{ *pulumi.OutputState }

func (CompareTaskStopOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CompareTaskStopOperation)(nil)).Elem()
}

func (o CompareTaskStopOperationMapOutput) ToCompareTaskStopOperationMapOutput() CompareTaskStopOperationMapOutput {
	return o
}

func (o CompareTaskStopOperationMapOutput) ToCompareTaskStopOperationMapOutputWithContext(ctx context.Context) CompareTaskStopOperationMapOutput {
	return o
}

func (o CompareTaskStopOperationMapOutput) MapIndex(k pulumi.StringInput) CompareTaskStopOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CompareTaskStopOperation {
		return vs[0].(map[string]*CompareTaskStopOperation)[vs[1].(string)]
	}).(CompareTaskStopOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CompareTaskStopOperationInput)(nil)).Elem(), &CompareTaskStopOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompareTaskStopOperationArrayInput)(nil)).Elem(), CompareTaskStopOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompareTaskStopOperationMapInput)(nil)).Elem(), CompareTaskStopOperationMap{})
	pulumi.RegisterOutputType(CompareTaskStopOperationOutput{})
	pulumi.RegisterOutputType(CompareTaskStopOperationArrayOutput{})
	pulumi.RegisterOutputType(CompareTaskStopOperationMapOutput{})
}
