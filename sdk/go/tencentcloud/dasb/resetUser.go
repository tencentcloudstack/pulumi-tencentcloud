// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dasb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dasb resetUser
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dasb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dasb.NewResetUser(ctx, "example", &Dasb.ResetUserArgs{
//				UserId: pulumi.Int(16),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ResetUser struct {
	pulumi.CustomResourceState

	// User Id.
	UserId pulumi.IntOutput `pulumi:"userId"`
}

// NewResetUser registers a new resource with the given unique name, arguments, and options.
func NewResetUser(ctx *pulumi.Context,
	name string, args *ResetUserArgs, opts ...pulumi.ResourceOption) (*ResetUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ResetUser
	err := ctx.RegisterResource("tencentcloud:Dasb/resetUser:ResetUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResetUser gets an existing ResetUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResetUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResetUserState, opts ...pulumi.ResourceOption) (*ResetUser, error) {
	var resource ResetUser
	err := ctx.ReadResource("tencentcloud:Dasb/resetUser:ResetUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResetUser resources.
type resetUserState struct {
	// User Id.
	UserId *int `pulumi:"userId"`
}

type ResetUserState struct {
	// User Id.
	UserId pulumi.IntPtrInput
}

func (ResetUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*resetUserState)(nil)).Elem()
}

type resetUserArgs struct {
	// User Id.
	UserId int `pulumi:"userId"`
}

// The set of arguments for constructing a ResetUser resource.
type ResetUserArgs struct {
	// User Id.
	UserId pulumi.IntInput
}

func (ResetUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resetUserArgs)(nil)).Elem()
}

type ResetUserInput interface {
	pulumi.Input

	ToResetUserOutput() ResetUserOutput
	ToResetUserOutputWithContext(ctx context.Context) ResetUserOutput
}

func (*ResetUser) ElementType() reflect.Type {
	return reflect.TypeOf((**ResetUser)(nil)).Elem()
}

func (i *ResetUser) ToResetUserOutput() ResetUserOutput {
	return i.ToResetUserOutputWithContext(context.Background())
}

func (i *ResetUser) ToResetUserOutputWithContext(ctx context.Context) ResetUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResetUserOutput)
}

// ResetUserArrayInput is an input type that accepts ResetUserArray and ResetUserArrayOutput values.
// You can construct a concrete instance of `ResetUserArrayInput` via:
//
//	ResetUserArray{ ResetUserArgs{...} }
type ResetUserArrayInput interface {
	pulumi.Input

	ToResetUserArrayOutput() ResetUserArrayOutput
	ToResetUserArrayOutputWithContext(context.Context) ResetUserArrayOutput
}

type ResetUserArray []ResetUserInput

func (ResetUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResetUser)(nil)).Elem()
}

func (i ResetUserArray) ToResetUserArrayOutput() ResetUserArrayOutput {
	return i.ToResetUserArrayOutputWithContext(context.Background())
}

func (i ResetUserArray) ToResetUserArrayOutputWithContext(ctx context.Context) ResetUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResetUserArrayOutput)
}

// ResetUserMapInput is an input type that accepts ResetUserMap and ResetUserMapOutput values.
// You can construct a concrete instance of `ResetUserMapInput` via:
//
//	ResetUserMap{ "key": ResetUserArgs{...} }
type ResetUserMapInput interface {
	pulumi.Input

	ToResetUserMapOutput() ResetUserMapOutput
	ToResetUserMapOutputWithContext(context.Context) ResetUserMapOutput
}

type ResetUserMap map[string]ResetUserInput

func (ResetUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResetUser)(nil)).Elem()
}

func (i ResetUserMap) ToResetUserMapOutput() ResetUserMapOutput {
	return i.ToResetUserMapOutputWithContext(context.Background())
}

func (i ResetUserMap) ToResetUserMapOutputWithContext(ctx context.Context) ResetUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResetUserMapOutput)
}

type ResetUserOutput struct{ *pulumi.OutputState }

func (ResetUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResetUser)(nil)).Elem()
}

func (o ResetUserOutput) ToResetUserOutput() ResetUserOutput {
	return o
}

func (o ResetUserOutput) ToResetUserOutputWithContext(ctx context.Context) ResetUserOutput {
	return o
}

// User Id.
func (o ResetUserOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v *ResetUser) pulumi.IntOutput { return v.UserId }).(pulumi.IntOutput)
}

type ResetUserArrayOutput struct{ *pulumi.OutputState }

func (ResetUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResetUser)(nil)).Elem()
}

func (o ResetUserArrayOutput) ToResetUserArrayOutput() ResetUserArrayOutput {
	return o
}

func (o ResetUserArrayOutput) ToResetUserArrayOutputWithContext(ctx context.Context) ResetUserArrayOutput {
	return o
}

func (o ResetUserArrayOutput) Index(i pulumi.IntInput) ResetUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResetUser {
		return vs[0].([]*ResetUser)[vs[1].(int)]
	}).(ResetUserOutput)
}

type ResetUserMapOutput struct{ *pulumi.OutputState }

func (ResetUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResetUser)(nil)).Elem()
}

func (o ResetUserMapOutput) ToResetUserMapOutput() ResetUserMapOutput {
	return o
}

func (o ResetUserMapOutput) ToResetUserMapOutputWithContext(ctx context.Context) ResetUserMapOutput {
	return o
}

func (o ResetUserMapOutput) MapIndex(k pulumi.StringInput) ResetUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResetUser {
		return vs[0].(map[string]*ResetUser)[vs[1].(string)]
	}).(ResetUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResetUserInput)(nil)).Elem(), &ResetUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResetUserArrayInput)(nil)).Elem(), ResetUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResetUserMapInput)(nil)).Elem(), ResetUserMap{})
	pulumi.RegisterOutputType(ResetUserOutput{})
	pulumi.RegisterOutputType(ResetUserArrayOutput{})
	pulumi.RegisterOutputType(ResetUserMapOutput{})
}
