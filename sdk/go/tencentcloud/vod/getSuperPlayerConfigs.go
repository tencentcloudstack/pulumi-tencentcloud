// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of VOD super player configs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Vod"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vod"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vod.NewSuperPlayerConfig(ctx, "fooSuperPlayerConfig", &Vod.SuperPlayerConfigArgs{
//				DrmSwitch: pulumi.Bool(true),
//				DrmStreamingInfo: &vod.SuperPlayerConfigDrmStreamingInfoArgs{
//					SimpleAesDefinition: pulumi.Any(tencentcloud_vod_adaptive_dynamic_streaming_template.Foo.Id),
//				},
//				ImageSpriteDefinition: pulumi.Any(tencentcloud_vod_image_sprite_template.Foo.Id),
//				ResolutionNames: vod.SuperPlayerConfigResolutionNameArray{
//					&vod.SuperPlayerConfigResolutionNameArgs{
//						MinEdgeLength: pulumi.Int(889),
//						Name:          pulumi.String("test1"),
//					},
//					&vod.SuperPlayerConfigResolutionNameArgs{
//						MinEdgeLength: pulumi.Int(890),
//						Name:          pulumi.String("test2"),
//					},
//				},
//				Domain:  pulumi.String("Default"),
//				Scheme:  pulumi.String("Default"),
//				Comment: pulumi.String("test"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Vod.GetSuperPlayerConfigs(ctx, &vod.GetSuperPlayerConfigsArgs{
//				Type: pulumi.StringRef("Custom"),
//				Name: pulumi.StringRef("tf-super-player"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSuperPlayerConfigs(ctx *pulumi.Context, args *GetSuperPlayerConfigsArgs, opts ...pulumi.InvokeOption) (*GetSuperPlayerConfigsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSuperPlayerConfigsResult
	err := ctx.Invoke("tencentcloud:Vod/getSuperPlayerConfigs:getSuperPlayerConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSuperPlayerConfigs.
type GetSuperPlayerConfigsArgs struct {
	// Name of super player config.
	Name *string `pulumi:"name"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
	SubAppId *int `pulumi:"subAppId"`
	// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getSuperPlayerConfigs.
type GetSuperPlayerConfigsResult struct {
	// A list of super player configs. Each element contains the following attributes:
	ConfigLists []GetSuperPlayerConfigsConfigList `pulumi:"configLists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Display name.
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type *string `pulumi:"type"`
}

func GetSuperPlayerConfigsOutput(ctx *pulumi.Context, args GetSuperPlayerConfigsOutputArgs, opts ...pulumi.InvokeOption) GetSuperPlayerConfigsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSuperPlayerConfigsResult, error) {
			args := v.(GetSuperPlayerConfigsArgs)
			r, err := GetSuperPlayerConfigs(ctx, &args, opts...)
			var s GetSuperPlayerConfigsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSuperPlayerConfigsResultOutput)
}

// A collection of arguments for invoking getSuperPlayerConfigs.
type GetSuperPlayerConfigsOutputArgs struct {
	// Name of super player config.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
	SubAppId pulumi.IntPtrInput `pulumi:"subAppId"`
	// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSuperPlayerConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getSuperPlayerConfigs.
type GetSuperPlayerConfigsResultOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsResult)(nil)).Elem()
}

func (o GetSuperPlayerConfigsResultOutput) ToGetSuperPlayerConfigsResultOutput() GetSuperPlayerConfigsResultOutput {
	return o
}

func (o GetSuperPlayerConfigsResultOutput) ToGetSuperPlayerConfigsResultOutputWithContext(ctx context.Context) GetSuperPlayerConfigsResultOutput {
	return o
}

// A list of super player configs. Each element contains the following attributes:
func (o GetSuperPlayerConfigsResultOutput) ConfigLists() GetSuperPlayerConfigsConfigListArrayOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) []GetSuperPlayerConfigsConfigList { return v.ConfigLists }).(GetSuperPlayerConfigsConfigListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSuperPlayerConfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Display name.
func (o GetSuperPlayerConfigsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetSuperPlayerConfigsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSuperPlayerConfigsResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetSuperPlayerConfigsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSuperPlayerConfigsResultOutput{})
}
