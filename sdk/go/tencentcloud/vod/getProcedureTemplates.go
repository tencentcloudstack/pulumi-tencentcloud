// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of VOD procedure templates.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Vod"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vod"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooProcedureTemplate, err := Vod.NewProcedureTemplate(ctx, "fooProcedureTemplate", &Vod.ProcedureTemplateArgs{
//				Comment: pulumi.String("test"),
//				MediaProcessTask: &vod.ProcedureTemplateMediaProcessTaskArgs{
//					AdaptiveDynamicStreamingTaskLists: vod.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray{
//						&vod.ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{
//							Definition: pulumi.Any(tencentcloud_vod_adaptive_dynamic_streaming_template.Foo.Id),
//						},
//					},
//					SnapshotByTimeOffsetTaskLists: vod.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray{
//						&vod.ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{
//							Definition: pulumi.Any(tencentcloud_vod_snapshot_by_time_offset_template.Foo.Id),
//							ExtTimeOffsetLists: pulumi.StringArray{
//								pulumi.String("3.5s"),
//							},
//						},
//					},
//					ImageSpriteTaskLists: vod.ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray{
//						&vod.ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs{
//							Definition: pulumi.Any(tencentcloud_vod_image_sprite_template.Foo.Id),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = Vod.GetProcedureTemplatesOutput(ctx, vod.GetProcedureTemplatesOutputArgs{
//				Type: pulumi.String("Custom"),
//				Name: fooProcedureTemplate.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetProcedureTemplates(ctx *pulumi.Context, args *GetProcedureTemplatesArgs, opts ...pulumi.InvokeOption) (*GetProcedureTemplatesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetProcedureTemplatesResult
	err := ctx.Invoke("tencentcloud:Vod/getProcedureTemplates:getProcedureTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProcedureTemplates.
type GetProcedureTemplatesArgs struct {
	// Name of procedure template.
	Name *string `pulumi:"name"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
	SubAppId *int `pulumi:"subAppId"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getProcedureTemplates.
type GetProcedureTemplatesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Task flow name.
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	// A list of adaptive dynamic streaming templates. Each element contains the following attributes:
	TemplateLists []GetProcedureTemplatesTemplateList `pulumi:"templateLists"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type *string `pulumi:"type"`
}

func GetProcedureTemplatesOutput(ctx *pulumi.Context, args GetProcedureTemplatesOutputArgs, opts ...pulumi.InvokeOption) GetProcedureTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProcedureTemplatesResult, error) {
			args := v.(GetProcedureTemplatesArgs)
			r, err := GetProcedureTemplates(ctx, &args, opts...)
			var s GetProcedureTemplatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetProcedureTemplatesResultOutput)
}

// A collection of arguments for invoking getProcedureTemplates.
type GetProcedureTemplatesOutputArgs struct {
	// Name of procedure template.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
	SubAppId pulumi.IntPtrInput `pulumi:"subAppId"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetProcedureTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by getProcedureTemplates.
type GetProcedureTemplatesResultOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesResult)(nil)).Elem()
}

func (o GetProcedureTemplatesResultOutput) ToGetProcedureTemplatesResultOutput() GetProcedureTemplatesResultOutput {
	return o
}

func (o GetProcedureTemplatesResultOutput) ToGetProcedureTemplatesResultOutputWithContext(ctx context.Context) GetProcedureTemplatesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetProcedureTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Task flow name.
func (o GetProcedureTemplatesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

// A list of adaptive dynamic streaming templates. Each element contains the following attributes:
func (o GetProcedureTemplatesResultOutput) TemplateLists() GetProcedureTemplatesTemplateListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) []GetProcedureTemplatesTemplateList { return v.TemplateLists }).(GetProcedureTemplatesTemplateListArrayOutput)
}

// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetProcedureTemplatesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProcedureTemplatesResultOutput{})
}
