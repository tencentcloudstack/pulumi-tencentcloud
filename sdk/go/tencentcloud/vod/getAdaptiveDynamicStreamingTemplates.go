// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of VOD adaptive dynamic streaming templates.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Vod"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vod"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooAdaptiveDynamicStreamingTemplate, err := Vod.NewAdaptiveDynamicStreamingTemplate(ctx, "fooAdaptiveDynamicStreamingTemplate", &Vod.AdaptiveDynamicStreamingTemplateArgs{
//				Format:                       pulumi.String("HLS"),
//				DrmType:                      pulumi.String("SimpleAES"),
//				DisableHigherVideoBitrate:    pulumi.Bool(false),
//				DisableHigherVideoResolution: pulumi.Bool(false),
//				Comment:                      pulumi.String("test"),
//				StreamInfos: vod.AdaptiveDynamicStreamingTemplateStreamInfoArray{
//					&vod.AdaptiveDynamicStreamingTemplateStreamInfoArgs{
//						Video: &vod.AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs{
//							Codec:              pulumi.String("libx265"),
//							Fps:                pulumi.Int(4),
//							Bitrate:            pulumi.Int(129),
//							ResolutionAdaptive: pulumi.Bool(false),
//							Width:              pulumi.Int(128),
//							Height:             pulumi.Int(128),
//							FillType:           pulumi.String("stretch"),
//						},
//						Audio: &vod.AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs{
//							Codec:        pulumi.String("libmp3lame"),
//							Bitrate:      pulumi.Int(129),
//							SampleRate:   pulumi.Int(44100),
//							AudioChannel: pulumi.String("dual"),
//						},
//						RemoveAudio: pulumi.Bool(false),
//					},
//					&vod.AdaptiveDynamicStreamingTemplateStreamInfoArgs{
//						Video: &vod.AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs{
//							Codec:   pulumi.String("libx264"),
//							Fps:     pulumi.Int(4),
//							Bitrate: pulumi.Int(256),
//						},
//						Audio: &vod.AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs{
//							Codec:      pulumi.String("libfdk_aac"),
//							Bitrate:    pulumi.Int(256),
//							SampleRate: pulumi.Int(44100),
//						},
//						RemoveAudio: pulumi.Bool(true),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = Vod.GetAdaptiveDynamicStreamingTemplatesOutput(ctx, vod.GetAdaptiveDynamicStreamingTemplatesOutputArgs{
//				Type:       pulumi.String("Custom"),
//				Definition: fooAdaptiveDynamicStreamingTemplate.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetAdaptiveDynamicStreamingTemplates(ctx *pulumi.Context, args *GetAdaptiveDynamicStreamingTemplatesArgs, opts ...pulumi.InvokeOption) (*GetAdaptiveDynamicStreamingTemplatesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAdaptiveDynamicStreamingTemplatesResult
	err := ctx.Invoke("tencentcloud:Vod/getAdaptiveDynamicStreamingTemplates:getAdaptiveDynamicStreamingTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAdaptiveDynamicStreamingTemplates.
type GetAdaptiveDynamicStreamingTemplatesArgs struct {
	// Unique ID filter of adaptive dynamic streaming template.
	Definition *string `pulumi:"definition"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
	SubAppId *int `pulumi:"subAppId"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getAdaptiveDynamicStreamingTemplates.
type GetAdaptiveDynamicStreamingTemplatesResult struct {
	// Unique ID of adaptive dynamic streaming template.
	Definition *string `pulumi:"definition"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	// A list of adaptive dynamic streaming templates. Each element contains the following attributes:
	TemplateLists []GetAdaptiveDynamicStreamingTemplatesTemplateList `pulumi:"templateLists"`
	// Template type filter. Valid values: `Preset`,`Custom`. `Preset`: preset template; `Custom`: custom template.
	Type *string `pulumi:"type"`
}

func GetAdaptiveDynamicStreamingTemplatesOutput(ctx *pulumi.Context, args GetAdaptiveDynamicStreamingTemplatesOutputArgs, opts ...pulumi.InvokeOption) GetAdaptiveDynamicStreamingTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAdaptiveDynamicStreamingTemplatesResult, error) {
			args := v.(GetAdaptiveDynamicStreamingTemplatesArgs)
			r, err := GetAdaptiveDynamicStreamingTemplates(ctx, &args, opts...)
			var s GetAdaptiveDynamicStreamingTemplatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAdaptiveDynamicStreamingTemplatesResultOutput)
}

// A collection of arguments for invoking getAdaptiveDynamicStreamingTemplates.
type GetAdaptiveDynamicStreamingTemplatesOutputArgs struct {
	// Unique ID filter of adaptive dynamic streaming template.
	Definition pulumi.StringPtrInput `pulumi:"definition"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this field; otherwise, leave it empty.
	SubAppId pulumi.IntPtrInput `pulumi:"subAppId"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetAdaptiveDynamicStreamingTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by getAdaptiveDynamicStreamingTemplates.
type GetAdaptiveDynamicStreamingTemplatesResultOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesResult)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) ToGetAdaptiveDynamicStreamingTemplatesResultOutput() GetAdaptiveDynamicStreamingTemplatesResultOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) ToGetAdaptiveDynamicStreamingTemplatesResultOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesResultOutput {
	return o
}

// Unique ID of adaptive dynamic streaming template.
func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) Definition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesResult) *string { return v.Definition }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

// A list of adaptive dynamic streaming templates. Each element contains the following attributes:
func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) TemplateLists() GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesResult) []GetAdaptiveDynamicStreamingTemplatesTemplateList {
		return v.TemplateLists
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput)
}

// Template type filter. Valid values: `Preset`,`Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetAdaptiveDynamicStreamingTemplatesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesResultOutput{})
}
