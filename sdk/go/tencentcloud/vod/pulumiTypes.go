// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AdaptiveDynamicStreamingTemplateStreamInfo struct {
	// Audio parameter information.
	Audio AdaptiveDynamicStreamingTemplateStreamInfoAudio `pulumi:"audio"`
	// Whether to remove audio stream. Valid values: `false`: no, `true`: yes. `false` by default.
	RemoveAudio *bool `pulumi:"removeAudio"`
	// Video parameter information.
	Video AdaptiveDynamicStreamingTemplateStreamInfoVideo `pulumi:"video"`
}

// AdaptiveDynamicStreamingTemplateStreamInfoInput is an input type that accepts AdaptiveDynamicStreamingTemplateStreamInfoArgs and AdaptiveDynamicStreamingTemplateStreamInfoOutput values.
// You can construct a concrete instance of `AdaptiveDynamicStreamingTemplateStreamInfoInput` via:
//
//	AdaptiveDynamicStreamingTemplateStreamInfoArgs{...}
type AdaptiveDynamicStreamingTemplateStreamInfoInput interface {
	pulumi.Input

	ToAdaptiveDynamicStreamingTemplateStreamInfoOutput() AdaptiveDynamicStreamingTemplateStreamInfoOutput
	ToAdaptiveDynamicStreamingTemplateStreamInfoOutputWithContext(context.Context) AdaptiveDynamicStreamingTemplateStreamInfoOutput
}

type AdaptiveDynamicStreamingTemplateStreamInfoArgs struct {
	// Audio parameter information.
	Audio AdaptiveDynamicStreamingTemplateStreamInfoAudioInput `pulumi:"audio"`
	// Whether to remove audio stream. Valid values: `false`: no, `true`: yes. `false` by default.
	RemoveAudio pulumi.BoolPtrInput `pulumi:"removeAudio"`
	// Video parameter information.
	Video AdaptiveDynamicStreamingTemplateStreamInfoVideoInput `pulumi:"video"`
}

func (AdaptiveDynamicStreamingTemplateStreamInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfo)(nil)).Elem()
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoArgs) ToAdaptiveDynamicStreamingTemplateStreamInfoOutput() AdaptiveDynamicStreamingTemplateStreamInfoOutput {
	return i.ToAdaptiveDynamicStreamingTemplateStreamInfoOutputWithContext(context.Background())
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoArgs) ToAdaptiveDynamicStreamingTemplateStreamInfoOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptiveDynamicStreamingTemplateStreamInfoOutput)
}

// AdaptiveDynamicStreamingTemplateStreamInfoArrayInput is an input type that accepts AdaptiveDynamicStreamingTemplateStreamInfoArray and AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput values.
// You can construct a concrete instance of `AdaptiveDynamicStreamingTemplateStreamInfoArrayInput` via:
//
//	AdaptiveDynamicStreamingTemplateStreamInfoArray{ AdaptiveDynamicStreamingTemplateStreamInfoArgs{...} }
type AdaptiveDynamicStreamingTemplateStreamInfoArrayInput interface {
	pulumi.Input

	ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutput() AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput
	ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutputWithContext(context.Context) AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput
}

type AdaptiveDynamicStreamingTemplateStreamInfoArray []AdaptiveDynamicStreamingTemplateStreamInfoInput

func (AdaptiveDynamicStreamingTemplateStreamInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptiveDynamicStreamingTemplateStreamInfo)(nil)).Elem()
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoArray) ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutput() AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput {
	return i.ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutputWithContext(context.Background())
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoArray) ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput)
}

type AdaptiveDynamicStreamingTemplateStreamInfoOutput struct{ *pulumi.OutputState }

func (AdaptiveDynamicStreamingTemplateStreamInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfo)(nil)).Elem()
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoOutput() AdaptiveDynamicStreamingTemplateStreamInfoOutput {
	return o
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoOutput {
	return o
}

// Audio parameter information.
func (o AdaptiveDynamicStreamingTemplateStreamInfoOutput) Audio() AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfo) AdaptiveDynamicStreamingTemplateStreamInfoAudio {
		return v.Audio
	}).(AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput)
}

// Whether to remove audio stream. Valid values: `false`: no, `true`: yes. `false` by default.
func (o AdaptiveDynamicStreamingTemplateStreamInfoOutput) RemoveAudio() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfo) *bool { return v.RemoveAudio }).(pulumi.BoolPtrOutput)
}

// Video parameter information.
func (o AdaptiveDynamicStreamingTemplateStreamInfoOutput) Video() AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfo) AdaptiveDynamicStreamingTemplateStreamInfoVideo {
		return v.Video
	}).(AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput)
}

type AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput struct{ *pulumi.OutputState }

func (AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdaptiveDynamicStreamingTemplateStreamInfo)(nil)).Elem()
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutput() AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput {
	return o
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoArrayOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput {
	return o
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput) Index(i pulumi.IntInput) AdaptiveDynamicStreamingTemplateStreamInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdaptiveDynamicStreamingTemplateStreamInfo {
		return vs[0].([]AdaptiveDynamicStreamingTemplateStreamInfo)[vs[1].(int)]
	}).(AdaptiveDynamicStreamingTemplateStreamInfoOutput)
}

type AdaptiveDynamicStreamingTemplateStreamInfoAudio struct {
	// Audio channel system. Valid values: mono, dual, stereo. Default value: dual.
	AudioChannel *string `pulumi:"audioChannel"`
	// Audio stream bitrate in Kbps. Value range: `0` and `[26, 256]`. If the value is `0`, the bitrate of the audio stream will be the same as that of the original audio.
	Bitrate int `pulumi:"bitrate"`
	// Audio stream encoder. Valid value are: `libfdkAac` and `libmp3lame`. while `libfdkAac` is recommended.
	Codec string `pulumi:"codec"`
	// Audio stream sample rate. Valid values: `32000`, `44100`, `48000`Hz.
	SampleRate int `pulumi:"sampleRate"`
}

// AdaptiveDynamicStreamingTemplateStreamInfoAudioInput is an input type that accepts AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs and AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput values.
// You can construct a concrete instance of `AdaptiveDynamicStreamingTemplateStreamInfoAudioInput` via:
//
//	AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs{...}
type AdaptiveDynamicStreamingTemplateStreamInfoAudioInput interface {
	pulumi.Input

	ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutput() AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput
	ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutputWithContext(context.Context) AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput
}

type AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs struct {
	// Audio channel system. Valid values: mono, dual, stereo. Default value: dual.
	AudioChannel pulumi.StringPtrInput `pulumi:"audioChannel"`
	// Audio stream bitrate in Kbps. Value range: `0` and `[26, 256]`. If the value is `0`, the bitrate of the audio stream will be the same as that of the original audio.
	Bitrate pulumi.IntInput `pulumi:"bitrate"`
	// Audio stream encoder. Valid value are: `libfdkAac` and `libmp3lame`. while `libfdkAac` is recommended.
	Codec pulumi.StringInput `pulumi:"codec"`
	// Audio stream sample rate. Valid values: `32000`, `44100`, `48000`Hz.
	SampleRate pulumi.IntInput `pulumi:"sampleRate"`
}

func (AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoAudio)(nil)).Elem()
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs) ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutput() AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput {
	return i.ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutputWithContext(context.Background())
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs) ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput)
}

type AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput struct{ *pulumi.OutputState }

func (AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoAudio)(nil)).Elem()
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutput() AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput {
	return o
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoAudioOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput {
	return o
}

// Audio channel system. Valid values: mono, dual, stereo. Default value: dual.
func (o AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) AudioChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoAudio) *string { return v.AudioChannel }).(pulumi.StringPtrOutput)
}

// Audio stream bitrate in Kbps. Value range: `0` and `[26, 256]`. If the value is `0`, the bitrate of the audio stream will be the same as that of the original audio.
func (o AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) Bitrate() pulumi.IntOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoAudio) int { return v.Bitrate }).(pulumi.IntOutput)
}

// Audio stream encoder. Valid value are: `libfdkAac` and `libmp3lame`. while `libfdkAac` is recommended.
func (o AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoAudio) string { return v.Codec }).(pulumi.StringOutput)
}

// Audio stream sample rate. Valid values: `32000`, `44100`, `48000`Hz.
func (o AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoAudio) int { return v.SampleRate }).(pulumi.IntOutput)
}

type AdaptiveDynamicStreamingTemplateStreamInfoVideo struct {
	// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
	Bitrate int `pulumi:"bitrate"`
	// Video stream encoder. Valid values: `libx264`,`libx265`,`av1`. `libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
	Codec string `pulumi:"codec"`
	// Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Default value: black. Note: this field may return null, indicating that no valid values can be obtained.
	FillType *string `pulumi:"fillType"`
	// Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
	Fps int `pulumi:"fps"`
	// Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
	Height *int `pulumi:"height"`
	// Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Default value: `true`. Note: this field may return null, indicating that no valid values can be obtained.
	ResolutionAdaptive *bool `pulumi:"resolutionAdaptive"`
	// Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
	Width *int `pulumi:"width"`
}

// AdaptiveDynamicStreamingTemplateStreamInfoVideoInput is an input type that accepts AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs and AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput values.
// You can construct a concrete instance of `AdaptiveDynamicStreamingTemplateStreamInfoVideoInput` via:
//
//	AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs{...}
type AdaptiveDynamicStreamingTemplateStreamInfoVideoInput interface {
	pulumi.Input

	ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutput() AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput
	ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutputWithContext(context.Context) AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput
}

type AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs struct {
	// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
	Bitrate pulumi.IntInput `pulumi:"bitrate"`
	// Video stream encoder. Valid values: `libx264`,`libx265`,`av1`. `libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
	Codec pulumi.StringInput `pulumi:"codec"`
	// Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Default value: black. Note: this field may return null, indicating that no valid values can be obtained.
	FillType pulumi.StringPtrInput `pulumi:"fillType"`
	// Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
	Fps pulumi.IntInput `pulumi:"fps"`
	// Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Default value: `true`. Note: this field may return null, indicating that no valid values can be obtained.
	ResolutionAdaptive pulumi.BoolPtrInput `pulumi:"resolutionAdaptive"`
	// Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoVideo)(nil)).Elem()
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs) ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutput() AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput {
	return i.ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutputWithContext(context.Background())
}

func (i AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs) ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput)
}

type AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput struct{ *pulumi.OutputState }

func (AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoVideo)(nil)).Elem()
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutput() AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput {
	return o
}

func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) ToAdaptiveDynamicStreamingTemplateStreamInfoVideoOutputWithContext(ctx context.Context) AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput {
	return o
}

// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) Bitrate() pulumi.IntOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) int { return v.Bitrate }).(pulumi.IntOutput)
}

// Video stream encoder. Valid values: `libx264`,`libx265`,`av1`. `libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) string { return v.Codec }).(pulumi.StringOutput)
}

// Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Default value: black. Note: this field may return null, indicating that no valid values can be obtained.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) FillType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) *string { return v.FillType }).(pulumi.StringPtrOutput)
}

// Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) Fps() pulumi.IntOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) int { return v.Fps }).(pulumi.IntOutput)
}

// Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Default value: `true`. Note: this field may return null, indicating that no valid values can be obtained.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) ResolutionAdaptive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) *bool { return v.ResolutionAdaptive }).(pulumi.BoolPtrOutput)
}

// Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`. Note: this field may return null, indicating that no valid values can be obtained.
func (o AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdaptiveDynamicStreamingTemplateStreamInfoVideo) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type ProcedureTemplateMediaProcessTask struct {
	// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTaskLists []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList `pulumi:"adaptiveDynamicStreamingTaskLists"`
	// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicTaskLists []ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList `pulumi:"animatedGraphicTaskLists"`
	// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	CoverBySnapshotTaskLists []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList `pulumi:"coverBySnapshotTaskLists"`
	// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteTaskLists []ProcedureTemplateMediaProcessTaskImageSpriteTaskList `pulumi:"imageSpriteTaskLists"`
	// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotTaskLists []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList `pulumi:"sampleSnapshotTaskLists"`
	// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetTaskLists []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList `pulumi:"snapshotByTimeOffsetTaskLists"`
	// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTaskLists []ProcedureTemplateMediaProcessTaskTranscodeTaskList `pulumi:"transcodeTaskLists"`
}

// ProcedureTemplateMediaProcessTaskInput is an input type that accepts ProcedureTemplateMediaProcessTaskArgs and ProcedureTemplateMediaProcessTaskOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskInput` via:
//
//	ProcedureTemplateMediaProcessTaskArgs{...}
type ProcedureTemplateMediaProcessTaskInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskOutput() ProcedureTemplateMediaProcessTaskOutput
	ToProcedureTemplateMediaProcessTaskOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskOutput
}

type ProcedureTemplateMediaProcessTaskArgs struct {
	// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTaskLists ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput `pulumi:"adaptiveDynamicStreamingTaskLists"`
	// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicTaskLists ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayInput `pulumi:"animatedGraphicTaskLists"`
	// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	CoverBySnapshotTaskLists ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayInput `pulumi:"coverBySnapshotTaskLists"`
	// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteTaskLists ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayInput `pulumi:"imageSpriteTaskLists"`
	// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotTaskLists ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayInput `pulumi:"sampleSnapshotTaskLists"`
	// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetTaskLists ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput `pulumi:"snapshotByTimeOffsetTaskLists"`
	// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTaskLists ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayInput `pulumi:"transcodeTaskLists"`
}

func (ProcedureTemplateMediaProcessTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTask)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskArgs) ToProcedureTemplateMediaProcessTaskOutput() ProcedureTemplateMediaProcessTaskOutput {
	return i.ToProcedureTemplateMediaProcessTaskOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskArgs) ToProcedureTemplateMediaProcessTaskOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskOutput)
}

func (i ProcedureTemplateMediaProcessTaskArgs) ToProcedureTemplateMediaProcessTaskPtrOutput() ProcedureTemplateMediaProcessTaskPtrOutput {
	return i.ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskArgs) ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskOutput).ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(ctx)
}

// ProcedureTemplateMediaProcessTaskPtrInput is an input type that accepts ProcedureTemplateMediaProcessTaskArgs, ProcedureTemplateMediaProcessTaskPtr and ProcedureTemplateMediaProcessTaskPtrOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskPtrInput` via:
//
//	        ProcedureTemplateMediaProcessTaskArgs{...}
//
//	or:
//
//	        nil
type ProcedureTemplateMediaProcessTaskPtrInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskPtrOutput() ProcedureTemplateMediaProcessTaskPtrOutput
	ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskPtrOutput
}

type procedureTemplateMediaProcessTaskPtrType ProcedureTemplateMediaProcessTaskArgs

func ProcedureTemplateMediaProcessTaskPtr(v *ProcedureTemplateMediaProcessTaskArgs) ProcedureTemplateMediaProcessTaskPtrInput {
	return (*procedureTemplateMediaProcessTaskPtrType)(v)
}

func (*procedureTemplateMediaProcessTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcedureTemplateMediaProcessTask)(nil)).Elem()
}

func (i *procedureTemplateMediaProcessTaskPtrType) ToProcedureTemplateMediaProcessTaskPtrOutput() ProcedureTemplateMediaProcessTaskPtrOutput {
	return i.ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(context.Background())
}

func (i *procedureTemplateMediaProcessTaskPtrType) ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskPtrOutput)
}

type ProcedureTemplateMediaProcessTaskOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTask)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskOutput) ToProcedureTemplateMediaProcessTaskOutput() ProcedureTemplateMediaProcessTaskOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskOutput) ToProcedureTemplateMediaProcessTaskOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskOutput) ToProcedureTemplateMediaProcessTaskPtrOutput() ProcedureTemplateMediaProcessTaskPtrOutput {
	return o.ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(context.Background())
}

func (o ProcedureTemplateMediaProcessTaskOutput) ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcedureTemplateMediaProcessTask) *ProcedureTemplateMediaProcessTask {
		return &v
	}).(ProcedureTemplateMediaProcessTaskPtrOutput)
}

// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) AdaptiveDynamicStreamingTaskLists() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList {
		return v.AdaptiveDynamicStreamingTaskLists
	}).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput)
}

// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) AnimatedGraphicTaskLists() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList {
		return v.AnimatedGraphicTaskLists
	}).(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput)
}

// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) CoverBySnapshotTaskLists() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList {
		return v.CoverBySnapshotTaskLists
	}).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput)
}

// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) ImageSpriteTaskLists() ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskImageSpriteTaskList {
		return v.ImageSpriteTaskLists
	}).(ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput)
}

// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) SampleSnapshotTaskLists() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList {
		return v.SampleSnapshotTaskLists
	}).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput)
}

// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) SnapshotByTimeOffsetTaskLists() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList {
		return v.SnapshotByTimeOffsetTaskLists
	}).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput)
}

// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskOutput) TranscodeTaskLists() ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskTranscodeTaskList {
		return v.TranscodeTaskLists
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskPtrOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcedureTemplateMediaProcessTask)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskPtrOutput) ToProcedureTemplateMediaProcessTaskPtrOutput() ProcedureTemplateMediaProcessTaskPtrOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskPtrOutput) ToProcedureTemplateMediaProcessTaskPtrOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskPtrOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskPtrOutput) Elem() ProcedureTemplateMediaProcessTaskOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) ProcedureTemplateMediaProcessTask {
		if v != nil {
			return *v
		}
		var ret ProcedureTemplateMediaProcessTask
		return ret
	}).(ProcedureTemplateMediaProcessTaskOutput)
}

// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) AdaptiveDynamicStreamingTaskLists() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList {
		if v == nil {
			return nil
		}
		return v.AdaptiveDynamicStreamingTaskLists
	}).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput)
}

// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) AnimatedGraphicTaskLists() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList {
		if v == nil {
			return nil
		}
		return v.AnimatedGraphicTaskLists
	}).(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput)
}

// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) CoverBySnapshotTaskLists() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList {
		if v == nil {
			return nil
		}
		return v.CoverBySnapshotTaskLists
	}).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput)
}

// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) ImageSpriteTaskLists() ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskImageSpriteTaskList {
		if v == nil {
			return nil
		}
		return v.ImageSpriteTaskLists
	}).(ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput)
}

// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) SampleSnapshotTaskLists() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList {
		if v == nil {
			return nil
		}
		return v.SampleSnapshotTaskLists
	}).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput)
}

// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) SnapshotByTimeOffsetTaskLists() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList {
		if v == nil {
			return nil
		}
		return v.SnapshotByTimeOffsetTaskLists
	}).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput)
}

// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskPtrOutput) TranscodeTaskLists() ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput {
	return o.ApplyT(func(v *ProcedureTemplateMediaProcessTask) []ProcedureTemplateMediaProcessTaskTranscodeTaskList {
		if v == nil {
			return nil
		}
		return v.TranscodeTaskLists
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList struct {
	// Adaptive bitrate streaming template ID.
	Definition string `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList `pulumi:"watermarkLists"`
}

// ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs and ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput
	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs struct {
	// Adaptive bitrate streaming template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray and ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray{ ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListInput

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return o
}

// Adaptive bitrate streaming template ID.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) WatermarkLists() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList) []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList {
		return v.WatermarkLists
	}).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList struct {
	// Watermarking template ID.
	Definition string `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent *string `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent *string `pulumi:"textContent"`
}

// ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput is an input type that accepts ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs and ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput` via:
//
//	ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs{...}
type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput
	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs struct {
	// Watermarking template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent pulumi.StringPtrInput `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent pulumi.StringPtrInput `pulumi:"textContent"`
}

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return i.ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput)
}

// ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray and ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray{ ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs{...} }
type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput
	ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray []ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return o
}

// Watermarking template ID.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput)
}

type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList struct {
	// Animated image generating template ID.
	Definition string `pulumi:"definition"`
	// End time of animated image in video in seconds.
	EndTimeOffset float64 `pulumi:"endTimeOffset"`
	// Start time of animated image in video in seconds.
	StartTimeOffset float64 `pulumi:"startTimeOffset"`
}

// ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs and ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput
	ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput
}

type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs struct {
	// Animated image generating template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time of animated image in video in seconds.
	EndTimeOffset pulumi.Float64Input `pulumi:"endTimeOffset"`
	// Start time of animated image in video in seconds.
	StartTimeOffset pulumi.Float64Input `pulumi:"startTimeOffset"`
}

func (ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray and ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray{ ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray []ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListInput

func (ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput {
	return o
}

// Animated image generating template ID.
func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// End time of animated image in video in seconds.
func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput) EndTimeOffset() pulumi.Float64Output {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList) float64 { return v.EndTimeOffset }).(pulumi.Float64Output)
}

// Start time of animated image in video in seconds.
func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput) StartTimeOffset() pulumi.Float64Output {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList) float64 { return v.StartTimeOffset }).(pulumi.Float64Output)
}

type ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput() ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList struct {
	// Time point screen capturing template ID.
	Definition string `pulumi:"definition"`
	// Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
	PositionType string `pulumi:"positionType"`
	// Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
	PositionValue float64 `pulumi:"positionValue"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList `pulumi:"watermarkLists"`
}

// ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs and ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput
	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs struct {
	// Time point screen capturing template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
	PositionType pulumi.StringInput `pulumi:"positionType"`
	// Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
	PositionValue pulumi.Float64Input `pulumi:"positionValue"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray and ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray{ ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListInput

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput {
	return o
}

// Time point screen capturing template ID.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) PositionType() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList) string { return v.PositionType }).(pulumi.StringOutput)
}

// Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) PositionValue() pulumi.Float64Output {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList) float64 { return v.PositionValue }).(pulumi.Float64Output)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput) WatermarkLists() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList) []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList {
		return v.WatermarkLists
	}).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList struct {
	// Watermarking template ID.
	Definition string `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent *string `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent *string `pulumi:"textContent"`
}

// ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput is an input type that accepts ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs and ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput` via:
//
//	ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs{...}
type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput
	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs struct {
	// Watermarking template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent pulumi.StringPtrInput `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent pulumi.StringPtrInput `pulumi:"textContent"`
}

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return i.ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput)
}

// ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray and ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray{ ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs{...} }
type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput
	ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray []ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return o
}

// Watermarking template ID.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput)
}

type ProcedureTemplateMediaProcessTaskImageSpriteTaskList struct {
	// Image sprite generating template ID.
	Definition string `pulumi:"definition"`
}

// ProcedureTemplateMediaProcessTaskImageSpriteTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs and ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskImageSpriteTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskImageSpriteTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput() ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput
	ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput
}

type ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs struct {
	// Image sprite generating template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
}

func (ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput() ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray and ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray{ ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput() ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray []ProcedureTemplateMediaProcessTaskImageSpriteTaskListInput

func (ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput() ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput() ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput {
	return o
}

// Image sprite generating template ID.
func (o ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskImageSpriteTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

type ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput() ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskImageSpriteTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskImageSpriteTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList struct {
	// Sampled screen capturing template ID.
	Definition string `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList `pulumi:"watermarkLists"`
}

// ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs and ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput
	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs struct {
	// Sampled screen capturing template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray and ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray{ ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListInput

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput {
	return o
}

// Sampled screen capturing template ID.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput) WatermarkLists() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList) []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList {
		return v.WatermarkLists
	}).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskSampleSnapshotTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList struct {
	// Watermarking template ID.
	Definition string `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent *string `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent *string `pulumi:"textContent"`
}

// ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListInput is an input type that accepts ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs and ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListInput` via:
//
//	ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs{...}
type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput
	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs struct {
	// Watermarking template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent pulumi.StringPtrInput `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent pulumi.StringPtrInput `pulumi:"textContent"`
}

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return i.ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput)
}

// ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray and ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray{ ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs{...} }
type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput
	ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray []ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListInput

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return o
}

// Watermarking template ID.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput)
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList struct {
	// Time point screen capturing template ID.
	Definition string `pulumi:"definition"`
	// The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
	ExtTimeOffsetLists []string `pulumi:"extTimeOffsetLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList `pulumi:"watermarkLists"`
}

// ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs and ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput
	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs struct {
	// Time point screen capturing template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
	ExtTimeOffsetLists pulumi.StringArrayInput `pulumi:"extTimeOffsetLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray and ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray{ ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListInput

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return o
}

// Time point screen capturing template ID.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ExtTimeOffsetLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList) []string {
		return v.ExtTimeOffsetLists
	}).(pulumi.StringArrayOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) WatermarkLists() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList) []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList {
		return v.WatermarkLists
	}).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList struct {
	// Watermarking template ID.
	Definition string `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent *string `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent *string `pulumi:"textContent"`
}

// ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput is an input type that accepts ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs and ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput` via:
//
//	ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs{...}
type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput
	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs struct {
	// Watermarking template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent pulumi.StringPtrInput `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent pulumi.StringPtrInput `pulumi:"textContent"`
}

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return i.ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput)
}

// ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray and ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray{ ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs{...} }
type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput
	ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray []ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return o
}

// Watermarking template ID.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// List of blurs. Up to 10 ones can be supported.
	MosaicLists []ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList `pulumi:"mosaicLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList `pulumi:"watermarkLists"`
}

// ProcedureTemplateMediaProcessTaskTranscodeTaskListInput is an input type that accepts ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs and ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskTranscodeTaskListInput` via:
//
//	ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs{...}
type ProcedureTemplateMediaProcessTaskTranscodeTaskListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput
	ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of blurs. Up to 10 ones can be supported.
	MosaicLists ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayInput `pulumi:"mosaicLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs) ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput {
	return i.ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs) ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput)
}

// ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskTranscodeTaskListArray and ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskTranscodeTaskListArray{ ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs{...} }
type ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput
	ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListArray []ProcedureTemplateMediaProcessTaskTranscodeTaskListInput

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListArray) ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListArray) ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// List of blurs. Up to 10 ones can be supported.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput) MosaicLists() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskList) []ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList {
		return v.MosaicLists
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput) WatermarkLists() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskList) []ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList {
		return v.WatermarkLists
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskTranscodeTaskList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskTranscodeTaskList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList struct {
	// Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text. Default value: TopLeft.
	CoordinateOrigin *string `pulumi:"coordinateOrigin"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px. Default value: `10%`.
	Height *string `pulumi:"height"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	// Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px. Default value: `10%`.
	Width *string `pulumi:"width"`
	// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px. Default value: `0px`.
	XPos *string `pulumi:"xPos"`
	// Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px. Default value: `0px`.
	YPos *string `pulumi:"yPos"`
}

// ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListInput is an input type that accepts ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs and ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListInput` via:
//
//	ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs{...}
type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput
	ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs struct {
	// Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text. Default value: TopLeft.
	CoordinateOrigin pulumi.StringPtrInput `pulumi:"coordinateOrigin"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px. Default value: `10%`.
	Height pulumi.StringPtrInput `pulumi:"height"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	// Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px. Default value: `10%`.
	Width pulumi.StringPtrInput `pulumi:"width"`
	// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px. Default value: `0px`.
	XPos pulumi.StringPtrInput `pulumi:"xPos"`
	// Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px. Default value: `0px`.
	YPos pulumi.StringPtrInput `pulumi:"yPos"`
}

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return i.ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput)
}

// ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray and ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray{ ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs{...} }
type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput
	ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray []ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListInput

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return o
}

// Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text. Default value: TopLeft.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) CoordinateOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *string {
		return v.CoordinateOrigin
	}).(pulumi.StringPtrOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *float64 { return v.EndTimeOffset }).(pulumi.Float64PtrOutput)
}

// Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px. Default value: `10%`.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *string { return v.Height }).(pulumi.StringPtrOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px. Default value: `10%`.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *string { return v.Width }).(pulumi.StringPtrOutput)
}

// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px. Default value: `0px`.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) XPos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *string { return v.XPos }).(pulumi.StringPtrOutput)
}

// Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px. Default value: `0px`.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput) YPos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList) *string { return v.YPos }).(pulumi.StringPtrOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList struct {
	// Watermarking template ID.
	Definition string `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent *string `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent *string `pulumi:"textContent"`
}

// ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListInput is an input type that accepts ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs and ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListInput` via:
//
//	ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs{...}
type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput
	ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs struct {
	// Watermarking template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
	SvgContent pulumi.StringPtrInput `pulumi:"svgContent"`
	// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
	TextContent pulumi.StringPtrInput `pulumi:"textContent"`
}

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return i.ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput)
}

// ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayInput is an input type that accepts ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray and ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayInput` via:
//
//	ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray{ ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs{...} }
type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput
	ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray []ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListInput

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return i.ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return o
}

// Watermarking template ID.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList) string { return v.Definition }).(pulumi.StringOutput)
}

// End time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will exist till the last video frame; If this value is greater than `0` (e.g., n), the watermark will exist till second n; If this value is smaller than `0` (e.g., -n), the watermark will exist till second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of a watermark in seconds. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame. If this parameter is left blank or `0` is entered, the watermark will appear upon the first video frame; If this value is greater than `0` (e.g., n), the watermark will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the watermark will appear at second n before the last video frame.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// SVG content of up to `2000000` characters. This needs to be entered only when the watermark type is `SVG`. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList) *string { return v.SvgContent }).(pulumi.StringPtrOutput)
}

// Text content of up to `100` characters. This needs to be entered only when the watermark type is text. Note: this field may return null, indicating that no valid values can be obtained.
func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList) *string { return v.TextContent }).(pulumi.StringPtrOutput)
}

type ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput() ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) ToProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(ctx context.Context) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return o
}

func (o ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList {
		return vs[0].([]ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkList)[vs[1].(int)]
	}).(ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput)
}

type SuperPlayerConfigDrmStreamingInfo struct {
	// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
	SimpleAesDefinition *string `pulumi:"simpleAesDefinition"`
}

// SuperPlayerConfigDrmStreamingInfoInput is an input type that accepts SuperPlayerConfigDrmStreamingInfoArgs and SuperPlayerConfigDrmStreamingInfoOutput values.
// You can construct a concrete instance of `SuperPlayerConfigDrmStreamingInfoInput` via:
//
//	SuperPlayerConfigDrmStreamingInfoArgs{...}
type SuperPlayerConfigDrmStreamingInfoInput interface {
	pulumi.Input

	ToSuperPlayerConfigDrmStreamingInfoOutput() SuperPlayerConfigDrmStreamingInfoOutput
	ToSuperPlayerConfigDrmStreamingInfoOutputWithContext(context.Context) SuperPlayerConfigDrmStreamingInfoOutput
}

type SuperPlayerConfigDrmStreamingInfoArgs struct {
	// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
	SimpleAesDefinition pulumi.StringPtrInput `pulumi:"simpleAesDefinition"`
}

func (SuperPlayerConfigDrmStreamingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SuperPlayerConfigDrmStreamingInfo)(nil)).Elem()
}

func (i SuperPlayerConfigDrmStreamingInfoArgs) ToSuperPlayerConfigDrmStreamingInfoOutput() SuperPlayerConfigDrmStreamingInfoOutput {
	return i.ToSuperPlayerConfigDrmStreamingInfoOutputWithContext(context.Background())
}

func (i SuperPlayerConfigDrmStreamingInfoArgs) ToSuperPlayerConfigDrmStreamingInfoOutputWithContext(ctx context.Context) SuperPlayerConfigDrmStreamingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuperPlayerConfigDrmStreamingInfoOutput)
}

func (i SuperPlayerConfigDrmStreamingInfoArgs) ToSuperPlayerConfigDrmStreamingInfoPtrOutput() SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return i.ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(context.Background())
}

func (i SuperPlayerConfigDrmStreamingInfoArgs) ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(ctx context.Context) SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuperPlayerConfigDrmStreamingInfoOutput).ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(ctx)
}

// SuperPlayerConfigDrmStreamingInfoPtrInput is an input type that accepts SuperPlayerConfigDrmStreamingInfoArgs, SuperPlayerConfigDrmStreamingInfoPtr and SuperPlayerConfigDrmStreamingInfoPtrOutput values.
// You can construct a concrete instance of `SuperPlayerConfigDrmStreamingInfoPtrInput` via:
//
//	        SuperPlayerConfigDrmStreamingInfoArgs{...}
//
//	or:
//
//	        nil
type SuperPlayerConfigDrmStreamingInfoPtrInput interface {
	pulumi.Input

	ToSuperPlayerConfigDrmStreamingInfoPtrOutput() SuperPlayerConfigDrmStreamingInfoPtrOutput
	ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(context.Context) SuperPlayerConfigDrmStreamingInfoPtrOutput
}

type superPlayerConfigDrmStreamingInfoPtrType SuperPlayerConfigDrmStreamingInfoArgs

func SuperPlayerConfigDrmStreamingInfoPtr(v *SuperPlayerConfigDrmStreamingInfoArgs) SuperPlayerConfigDrmStreamingInfoPtrInput {
	return (*superPlayerConfigDrmStreamingInfoPtrType)(v)
}

func (*superPlayerConfigDrmStreamingInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SuperPlayerConfigDrmStreamingInfo)(nil)).Elem()
}

func (i *superPlayerConfigDrmStreamingInfoPtrType) ToSuperPlayerConfigDrmStreamingInfoPtrOutput() SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return i.ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(context.Background())
}

func (i *superPlayerConfigDrmStreamingInfoPtrType) ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(ctx context.Context) SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuperPlayerConfigDrmStreamingInfoPtrOutput)
}

type SuperPlayerConfigDrmStreamingInfoOutput struct{ *pulumi.OutputState }

func (SuperPlayerConfigDrmStreamingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SuperPlayerConfigDrmStreamingInfo)(nil)).Elem()
}

func (o SuperPlayerConfigDrmStreamingInfoOutput) ToSuperPlayerConfigDrmStreamingInfoOutput() SuperPlayerConfigDrmStreamingInfoOutput {
	return o
}

func (o SuperPlayerConfigDrmStreamingInfoOutput) ToSuperPlayerConfigDrmStreamingInfoOutputWithContext(ctx context.Context) SuperPlayerConfigDrmStreamingInfoOutput {
	return o
}

func (o SuperPlayerConfigDrmStreamingInfoOutput) ToSuperPlayerConfigDrmStreamingInfoPtrOutput() SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return o.ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(context.Background())
}

func (o SuperPlayerConfigDrmStreamingInfoOutput) ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(ctx context.Context) SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SuperPlayerConfigDrmStreamingInfo) *SuperPlayerConfigDrmStreamingInfo {
		return &v
	}).(SuperPlayerConfigDrmStreamingInfoPtrOutput)
}

// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
func (o SuperPlayerConfigDrmStreamingInfoOutput) SimpleAesDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SuperPlayerConfigDrmStreamingInfo) *string { return v.SimpleAesDefinition }).(pulumi.StringPtrOutput)
}

type SuperPlayerConfigDrmStreamingInfoPtrOutput struct{ *pulumi.OutputState }

func (SuperPlayerConfigDrmStreamingInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SuperPlayerConfigDrmStreamingInfo)(nil)).Elem()
}

func (o SuperPlayerConfigDrmStreamingInfoPtrOutput) ToSuperPlayerConfigDrmStreamingInfoPtrOutput() SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return o
}

func (o SuperPlayerConfigDrmStreamingInfoPtrOutput) ToSuperPlayerConfigDrmStreamingInfoPtrOutputWithContext(ctx context.Context) SuperPlayerConfigDrmStreamingInfoPtrOutput {
	return o
}

func (o SuperPlayerConfigDrmStreamingInfoPtrOutput) Elem() SuperPlayerConfigDrmStreamingInfoOutput {
	return o.ApplyT(func(v *SuperPlayerConfigDrmStreamingInfo) SuperPlayerConfigDrmStreamingInfo {
		if v != nil {
			return *v
		}
		var ret SuperPlayerConfigDrmStreamingInfo
		return ret
	}).(SuperPlayerConfigDrmStreamingInfoOutput)
}

// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
func (o SuperPlayerConfigDrmStreamingInfoPtrOutput) SimpleAesDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SuperPlayerConfigDrmStreamingInfo) *string {
		if v == nil {
			return nil
		}
		return v.SimpleAesDefinition
	}).(pulumi.StringPtrOutput)
}

type SuperPlayerConfigResolutionName struct {
	// Length of video short side in px.
	MinEdgeLength int `pulumi:"minEdgeLength"`
	// Display name.
	Name string `pulumi:"name"`
}

// SuperPlayerConfigResolutionNameInput is an input type that accepts SuperPlayerConfigResolutionNameArgs and SuperPlayerConfigResolutionNameOutput values.
// You can construct a concrete instance of `SuperPlayerConfigResolutionNameInput` via:
//
//	SuperPlayerConfigResolutionNameArgs{...}
type SuperPlayerConfigResolutionNameInput interface {
	pulumi.Input

	ToSuperPlayerConfigResolutionNameOutput() SuperPlayerConfigResolutionNameOutput
	ToSuperPlayerConfigResolutionNameOutputWithContext(context.Context) SuperPlayerConfigResolutionNameOutput
}

type SuperPlayerConfigResolutionNameArgs struct {
	// Length of video short side in px.
	MinEdgeLength pulumi.IntInput `pulumi:"minEdgeLength"`
	// Display name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SuperPlayerConfigResolutionNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SuperPlayerConfigResolutionName)(nil)).Elem()
}

func (i SuperPlayerConfigResolutionNameArgs) ToSuperPlayerConfigResolutionNameOutput() SuperPlayerConfigResolutionNameOutput {
	return i.ToSuperPlayerConfigResolutionNameOutputWithContext(context.Background())
}

func (i SuperPlayerConfigResolutionNameArgs) ToSuperPlayerConfigResolutionNameOutputWithContext(ctx context.Context) SuperPlayerConfigResolutionNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuperPlayerConfigResolutionNameOutput)
}

// SuperPlayerConfigResolutionNameArrayInput is an input type that accepts SuperPlayerConfigResolutionNameArray and SuperPlayerConfigResolutionNameArrayOutput values.
// You can construct a concrete instance of `SuperPlayerConfigResolutionNameArrayInput` via:
//
//	SuperPlayerConfigResolutionNameArray{ SuperPlayerConfigResolutionNameArgs{...} }
type SuperPlayerConfigResolutionNameArrayInput interface {
	pulumi.Input

	ToSuperPlayerConfigResolutionNameArrayOutput() SuperPlayerConfigResolutionNameArrayOutput
	ToSuperPlayerConfigResolutionNameArrayOutputWithContext(context.Context) SuperPlayerConfigResolutionNameArrayOutput
}

type SuperPlayerConfigResolutionNameArray []SuperPlayerConfigResolutionNameInput

func (SuperPlayerConfigResolutionNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuperPlayerConfigResolutionName)(nil)).Elem()
}

func (i SuperPlayerConfigResolutionNameArray) ToSuperPlayerConfigResolutionNameArrayOutput() SuperPlayerConfigResolutionNameArrayOutput {
	return i.ToSuperPlayerConfigResolutionNameArrayOutputWithContext(context.Background())
}

func (i SuperPlayerConfigResolutionNameArray) ToSuperPlayerConfigResolutionNameArrayOutputWithContext(ctx context.Context) SuperPlayerConfigResolutionNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuperPlayerConfigResolutionNameArrayOutput)
}

type SuperPlayerConfigResolutionNameOutput struct{ *pulumi.OutputState }

func (SuperPlayerConfigResolutionNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SuperPlayerConfigResolutionName)(nil)).Elem()
}

func (o SuperPlayerConfigResolutionNameOutput) ToSuperPlayerConfigResolutionNameOutput() SuperPlayerConfigResolutionNameOutput {
	return o
}

func (o SuperPlayerConfigResolutionNameOutput) ToSuperPlayerConfigResolutionNameOutputWithContext(ctx context.Context) SuperPlayerConfigResolutionNameOutput {
	return o
}

// Length of video short side in px.
func (o SuperPlayerConfigResolutionNameOutput) MinEdgeLength() pulumi.IntOutput {
	return o.ApplyT(func(v SuperPlayerConfigResolutionName) int { return v.MinEdgeLength }).(pulumi.IntOutput)
}

// Display name.
func (o SuperPlayerConfigResolutionNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SuperPlayerConfigResolutionName) string { return v.Name }).(pulumi.StringOutput)
}

type SuperPlayerConfigResolutionNameArrayOutput struct{ *pulumi.OutputState }

func (SuperPlayerConfigResolutionNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuperPlayerConfigResolutionName)(nil)).Elem()
}

func (o SuperPlayerConfigResolutionNameArrayOutput) ToSuperPlayerConfigResolutionNameArrayOutput() SuperPlayerConfigResolutionNameArrayOutput {
	return o
}

func (o SuperPlayerConfigResolutionNameArrayOutput) ToSuperPlayerConfigResolutionNameArrayOutputWithContext(ctx context.Context) SuperPlayerConfigResolutionNameArrayOutput {
	return o
}

func (o SuperPlayerConfigResolutionNameArrayOutput) Index(i pulumi.IntInput) SuperPlayerConfigResolutionNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SuperPlayerConfigResolutionName {
		return vs[0].([]SuperPlayerConfigResolutionName)[vs[1].(int)]
	}).(SuperPlayerConfigResolutionNameOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateList struct {
	// Template description.
	Comment string `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime string `pulumi:"createTime"`
	// Unique ID filter of adaptive dynamic streaming template.
	Definition string `pulumi:"definition"`
	// Whether to prohibit transcoding video from low bitrate to high bitrate. `false`: no, `true`: yes.
	DisableHigherVideoBitrate bool `pulumi:"disableHigherVideoBitrate"`
	// Whether to prohibit transcoding from low resolution to high resolution. `false`: no, `true`: yes.
	DisableHigherVideoResolution bool `pulumi:"disableHigherVideoResolution"`
	// DRM scheme type.
	DrmType string `pulumi:"drmType"`
	// Adaptive bitstream format.
	Format string `pulumi:"format"`
	// Template name.
	Name string `pulumi:"name"`
	// List of AdaptiveStreamTemplate parameter information of output substream for adaptive bitrate streaming.
	StreamInfos []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo `pulumi:"streamInfos"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type string `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime string `pulumi:"updateTime"`
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListArgs and GetAdaptiveDynamicStreamingTemplatesTemplateListOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListArgs{...}
type GetAdaptiveDynamicStreamingTemplatesTemplateListInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListArgs struct {
	// Template description.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Unique ID filter of adaptive dynamic streaming template.
	Definition pulumi.StringInput `pulumi:"definition"`
	// Whether to prohibit transcoding video from low bitrate to high bitrate. `false`: no, `true`: yes.
	DisableHigherVideoBitrate pulumi.BoolInput `pulumi:"disableHigherVideoBitrate"`
	// Whether to prohibit transcoding from low resolution to high resolution. `false`: no, `true`: yes.
	DisableHigherVideoResolution pulumi.BoolInput `pulumi:"disableHigherVideoResolution"`
	// DRM scheme type.
	DrmType pulumi.StringInput `pulumi:"drmType"`
	// Adaptive bitstream format.
	Format pulumi.StringInput `pulumi:"format"`
	// Template name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of AdaptiveStreamTemplate parameter information of output substream for adaptive bitrate streaming.
	StreamInfos GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayInput `pulumi:"streamInfos"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringInput `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetAdaptiveDynamicStreamingTemplatesTemplateListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateList)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListOutput)
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListArrayInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListArray and GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListArrayInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListArray{ GetAdaptiveDynamicStreamingTemplatesTemplateListArgs{...} }
type GetAdaptiveDynamicStreamingTemplatesTemplateListArrayInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListArray []GetAdaptiveDynamicStreamingTemplatesTemplateListInput

func (GetAdaptiveDynamicStreamingTemplatesTemplateListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateList)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateList)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListOutput {
	return o
}

// Template description.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.Comment }).(pulumi.StringOutput)
}

// Creation time of template in ISO date format.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Unique ID filter of adaptive dynamic streaming template.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.Definition }).(pulumi.StringOutput)
}

// Whether to prohibit transcoding video from low bitrate to high bitrate. `false`: no, `true`: yes.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) DisableHigherVideoBitrate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) bool { return v.DisableHigherVideoBitrate }).(pulumi.BoolOutput)
}

// Whether to prohibit transcoding from low resolution to high resolution. `false`: no, `true`: yes.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) DisableHigherVideoResolution() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) bool { return v.DisableHigherVideoResolution }).(pulumi.BoolOutput)
}

// DRM scheme type.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) DrmType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.DrmType }).(pulumi.StringOutput)
}

// Adaptive bitstream format.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.Format }).(pulumi.StringOutput)
}

// Template name.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.Name }).(pulumi.StringOutput)
}

// List of AdaptiveStreamTemplate parameter information of output substream for adaptive bitrate streaming.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) StreamInfos() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo {
		return v.StreamInfos
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput)
}

// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.Type }).(pulumi.StringOutput)
}

// Last modified time of template in ISO date format.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateList)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput) Index(i pulumi.IntInput) GetAdaptiveDynamicStreamingTemplatesTemplateListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptiveDynamicStreamingTemplatesTemplateList {
		return vs[0].([]GetAdaptiveDynamicStreamingTemplatesTemplateList)[vs[1].(int)]
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo struct {
	// Audio parameter information.
	Audios []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio `pulumi:"audios"`
	// Whether to remove audio stream. `false`: no, `true`: yes.
	RemoveAudio bool `pulumi:"removeAudio"`
	// Video parameter information.
	Videos []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo `pulumi:"videos"`
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs and GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs{...}
type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs struct {
	// Audio parameter information.
	Audios GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayInput `pulumi:"audios"`
	// Whether to remove audio stream. `false`: no, `true`: yes.
	RemoveAudio pulumi.BoolInput `pulumi:"removeAudio"`
	// Video parameter information.
	Videos GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayInput `pulumi:"videos"`
}

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput)
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray and GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray{ GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs{...} }
type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoInput

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput {
	return o
}

// Audio parameter information.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput) Audios() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo) []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio {
		return v.Audios
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput)
}

// Whether to remove audio stream. `false`: no, `true`: yes.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput) RemoveAudio() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo) bool { return v.RemoveAudio }).(pulumi.BoolOutput)
}

// Video parameter information.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput) Videos() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo) []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo {
		return v.Videos
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput) Index(i pulumi.IntInput) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo {
		return vs[0].([]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfo)[vs[1].(int)]
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio struct {
	// Audio channel system. Valid values: mono, dual, stereo.
	AudioChannel string `pulumi:"audioChannel"`
	// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
	Bitrate int `pulumi:"bitrate"`
	// Video stream encoder. Valid values: `libx264`, `libx265`, `av1`.`libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
	Codec string `pulumi:"codec"`
	// Audio stream sample rate. Valid values: `32000`, `44100`, `48000`. Unit is HZ.
	SampleRate int `pulumi:"sampleRate"`
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs and GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs{...}
type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs struct {
	// Audio channel system. Valid values: mono, dual, stereo.
	AudioChannel pulumi.StringInput `pulumi:"audioChannel"`
	// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
	Bitrate pulumi.IntInput `pulumi:"bitrate"`
	// Video stream encoder. Valid values: `libx264`, `libx265`, `av1`.`libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
	Codec pulumi.StringInput `pulumi:"codec"`
	// Audio stream sample rate. Valid values: `32000`, `44100`, `48000`. Unit is HZ.
	SampleRate pulumi.IntInput `pulumi:"sampleRate"`
}

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput)
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray and GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray{ GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs{...} }
type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioInput

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput {
	return o
}

// Audio channel system. Valid values: mono, dual, stereo.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) AudioChannel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio) string { return v.AudioChannel }).(pulumi.StringOutput)
}

// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) Bitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio) int { return v.Bitrate }).(pulumi.IntOutput)
}

// Video stream encoder. Valid values: `libx264`, `libx265`, `av1`.`libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio) string { return v.Codec }).(pulumi.StringOutput)
}

// Audio stream sample rate. Valid values: `32000`, `44100`, `48000`. Unit is HZ.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio) int { return v.SampleRate }).(pulumi.IntOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput) Index(i pulumi.IntInput) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio {
		return vs[0].([]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudio)[vs[1].(int)]
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo struct {
	// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
	Bitrate int `pulumi:"bitrate"`
	// Video stream encoder. Valid values: `libx264`, `libx265`, `av1`.`libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
	Codec string `pulumi:"codec"`
	// Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Note: this field may return null, indicating that no valid values can be obtained.
	FillType string `pulumi:"fillType"`
	// Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
	Fps int `pulumi:"fps"`
	// Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Note: this field may return null, indicating that no valid values can be obtained.
	Height int `pulumi:"height"`
	// Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Note: this field may return null, indicating that no valid values can be obtained.
	ResolutionAdaptive bool `pulumi:"resolutionAdaptive"`
	// Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Note: this field may return null, indicating that no valid values can be obtained.
	Width int `pulumi:"width"`
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs and GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs{...}
type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs struct {
	// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
	Bitrate pulumi.IntInput `pulumi:"bitrate"`
	// Video stream encoder. Valid values: `libx264`, `libx265`, `av1`.`libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
	Codec pulumi.StringInput `pulumi:"codec"`
	// Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Note: this field may return null, indicating that no valid values can be obtained.
	FillType pulumi.StringInput `pulumi:"fillType"`
	// Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
	Fps pulumi.IntInput `pulumi:"fps"`
	// Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Note: this field may return null, indicating that no valid values can be obtained.
	Height pulumi.IntInput `pulumi:"height"`
	// Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Note: this field may return null, indicating that no valid values can be obtained.
	ResolutionAdaptive pulumi.BoolInput `pulumi:"resolutionAdaptive"`
	// Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Note: this field may return null, indicating that no valid values can be obtained.
	Width pulumi.IntInput `pulumi:"width"`
}

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput)
}

// GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayInput is an input type that accepts GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray and GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput values.
// You can construct a concrete instance of `GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayInput` via:
//
//	GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray{ GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs{...} }
type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayInput interface {
	pulumi.Input

	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput
	ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutputWithContext(context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray []GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoInput

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo)(nil)).Elem()
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput {
	return i.ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutputWithContext(context.Background())
}

func (i GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput {
	return o
}

// Bitrate of video stream in Kbps. Value range: `0` and `[128, 35000]`. If the value is `0`, the bitrate of the video will be the same as that of the source video.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) Bitrate() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) int { return v.Bitrate }).(pulumi.IntOutput)
}

// Video stream encoder. Valid values: `libx264`, `libx265`, `av1`.`libx264`: H.264, `libx265`: H.265, `av1`: AOMedia Video 1. Currently, a resolution within 640x480 must be specified for `H.265`. and the `av1` container only supports mp4.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) string { return v.Codec }).(pulumi.StringOutput)
}

// Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) FillType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) string { return v.FillType }).(pulumi.StringOutput)
}

// Video frame rate in Hz. Value range: `[0, 60]`. If the value is `0`, the frame rate will be the same as that of the source video.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) Fps() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) int { return v.Fps }).(pulumi.IntOutput)
}

// Maximum value of the height (or short side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) int { return v.Height }).(pulumi.IntOutput)
}

// Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) ResolutionAdaptive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) bool {
		return v.ResolutionAdaptive
	}).(pulumi.BoolOutput)
}

// Maximum value of the width (or long side) of a video stream in px. Value range: `0` and `[128, 4096]`. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo) int { return v.Width }).(pulumi.IntOutput)
}

type GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput struct{ *pulumi.OutputState }

func (GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo)(nil)).Elem()
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput() GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput) ToGetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutputWithContext(ctx context.Context) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput {
	return o
}

func (o GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput) Index(i pulumi.IntInput) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo {
		return vs[0].([]GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideo)[vs[1].(int)]
	}).(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput)
}

type GetImageSpriteTemplatesTemplateList struct {
	// Subimage column count of an image sprite.
	ColumnCount int `pulumi:"columnCount"`
	// Template description.
	Comment string `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime string `pulumi:"createTime"`
	// Unique ID filter of image sprite template.
	Definition string `pulumi:"definition"`
	// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.
	FillType string `pulumi:"fillType"`
	// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Height int `pulumi:"height"`
	// Name of a time point screen capturing template.
	Name string `pulumi:"name"`
	// Resolution adaption. Valid values: `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
	ResolutionAdaptive bool `pulumi:"resolutionAdaptive"`
	// Subimage row count of an image sprite.
	RowCount int `pulumi:"rowCount"`
	// Sampling interval. If `sampleType` is `Percent`, sampling will be performed at an interval of the specified percentage. If `sampleType` is `Time`, sampling will be performed at the specified time interval in seconds.
	SampleInterval int `pulumi:"sampleInterval"`
	// Sampling type. Valid values: `Percent`, `Time`. `Percent`: by percent. `Time`: by time interval.
	SampleType string `pulumi:"sampleType"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type string `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime string `pulumi:"updateTime"`
	// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Width int `pulumi:"width"`
}

// GetImageSpriteTemplatesTemplateListInput is an input type that accepts GetImageSpriteTemplatesTemplateListArgs and GetImageSpriteTemplatesTemplateListOutput values.
// You can construct a concrete instance of `GetImageSpriteTemplatesTemplateListInput` via:
//
//	GetImageSpriteTemplatesTemplateListArgs{...}
type GetImageSpriteTemplatesTemplateListInput interface {
	pulumi.Input

	ToGetImageSpriteTemplatesTemplateListOutput() GetImageSpriteTemplatesTemplateListOutput
	ToGetImageSpriteTemplatesTemplateListOutputWithContext(context.Context) GetImageSpriteTemplatesTemplateListOutput
}

type GetImageSpriteTemplatesTemplateListArgs struct {
	// Subimage column count of an image sprite.
	ColumnCount pulumi.IntInput `pulumi:"columnCount"`
	// Template description.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Unique ID filter of image sprite template.
	Definition pulumi.StringInput `pulumi:"definition"`
	// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.
	FillType pulumi.StringInput `pulumi:"fillType"`
	// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Height pulumi.IntInput `pulumi:"height"`
	// Name of a time point screen capturing template.
	Name pulumi.StringInput `pulumi:"name"`
	// Resolution adaption. Valid values: `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
	ResolutionAdaptive pulumi.BoolInput `pulumi:"resolutionAdaptive"`
	// Subimage row count of an image sprite.
	RowCount pulumi.IntInput `pulumi:"rowCount"`
	// Sampling interval. If `sampleType` is `Percent`, sampling will be performed at an interval of the specified percentage. If `sampleType` is `Time`, sampling will be performed at the specified time interval in seconds.
	SampleInterval pulumi.IntInput `pulumi:"sampleInterval"`
	// Sampling type. Valid values: `Percent`, `Time`. `Percent`: by percent. `Time`: by time interval.
	SampleType pulumi.StringInput `pulumi:"sampleType"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringInput `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Width pulumi.IntInput `pulumi:"width"`
}

func (GetImageSpriteTemplatesTemplateListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageSpriteTemplatesTemplateList)(nil)).Elem()
}

func (i GetImageSpriteTemplatesTemplateListArgs) ToGetImageSpriteTemplatesTemplateListOutput() GetImageSpriteTemplatesTemplateListOutput {
	return i.ToGetImageSpriteTemplatesTemplateListOutputWithContext(context.Background())
}

func (i GetImageSpriteTemplatesTemplateListArgs) ToGetImageSpriteTemplatesTemplateListOutputWithContext(ctx context.Context) GetImageSpriteTemplatesTemplateListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageSpriteTemplatesTemplateListOutput)
}

// GetImageSpriteTemplatesTemplateListArrayInput is an input type that accepts GetImageSpriteTemplatesTemplateListArray and GetImageSpriteTemplatesTemplateListArrayOutput values.
// You can construct a concrete instance of `GetImageSpriteTemplatesTemplateListArrayInput` via:
//
//	GetImageSpriteTemplatesTemplateListArray{ GetImageSpriteTemplatesTemplateListArgs{...} }
type GetImageSpriteTemplatesTemplateListArrayInput interface {
	pulumi.Input

	ToGetImageSpriteTemplatesTemplateListArrayOutput() GetImageSpriteTemplatesTemplateListArrayOutput
	ToGetImageSpriteTemplatesTemplateListArrayOutputWithContext(context.Context) GetImageSpriteTemplatesTemplateListArrayOutput
}

type GetImageSpriteTemplatesTemplateListArray []GetImageSpriteTemplatesTemplateListInput

func (GetImageSpriteTemplatesTemplateListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageSpriteTemplatesTemplateList)(nil)).Elem()
}

func (i GetImageSpriteTemplatesTemplateListArray) ToGetImageSpriteTemplatesTemplateListArrayOutput() GetImageSpriteTemplatesTemplateListArrayOutput {
	return i.ToGetImageSpriteTemplatesTemplateListArrayOutputWithContext(context.Background())
}

func (i GetImageSpriteTemplatesTemplateListArray) ToGetImageSpriteTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetImageSpriteTemplatesTemplateListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageSpriteTemplatesTemplateListArrayOutput)
}

type GetImageSpriteTemplatesTemplateListOutput struct{ *pulumi.OutputState }

func (GetImageSpriteTemplatesTemplateListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageSpriteTemplatesTemplateList)(nil)).Elem()
}

func (o GetImageSpriteTemplatesTemplateListOutput) ToGetImageSpriteTemplatesTemplateListOutput() GetImageSpriteTemplatesTemplateListOutput {
	return o
}

func (o GetImageSpriteTemplatesTemplateListOutput) ToGetImageSpriteTemplatesTemplateListOutputWithContext(ctx context.Context) GetImageSpriteTemplatesTemplateListOutput {
	return o
}

// Subimage column count of an image sprite.
func (o GetImageSpriteTemplatesTemplateListOutput) ColumnCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) int { return v.ColumnCount }).(pulumi.IntOutput)
}

// Template description.
func (o GetImageSpriteTemplatesTemplateListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.Comment }).(pulumi.StringOutput)
}

// Creation time of template in ISO date format.
func (o GetImageSpriteTemplatesTemplateListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Unique ID filter of image sprite template.
func (o GetImageSpriteTemplatesTemplateListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.Definition }).(pulumi.StringOutput)
}

// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot shorter or longer; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.
func (o GetImageSpriteTemplatesTemplateListOutput) FillType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.FillType }).(pulumi.StringOutput)
}

// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
func (o GetImageSpriteTemplatesTemplateListOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) int { return v.Height }).(pulumi.IntOutput)
}

// Name of a time point screen capturing template.
func (o GetImageSpriteTemplatesTemplateListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.Name }).(pulumi.StringOutput)
}

// Resolution adaption. Valid values: `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
func (o GetImageSpriteTemplatesTemplateListOutput) ResolutionAdaptive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) bool { return v.ResolutionAdaptive }).(pulumi.BoolOutput)
}

// Subimage row count of an image sprite.
func (o GetImageSpriteTemplatesTemplateListOutput) RowCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) int { return v.RowCount }).(pulumi.IntOutput)
}

// Sampling interval. If `sampleType` is `Percent`, sampling will be performed at an interval of the specified percentage. If `sampleType` is `Time`, sampling will be performed at the specified time interval in seconds.
func (o GetImageSpriteTemplatesTemplateListOutput) SampleInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) int { return v.SampleInterval }).(pulumi.IntOutput)
}

// Sampling type. Valid values: `Percent`, `Time`. `Percent`: by percent. `Time`: by time interval.
func (o GetImageSpriteTemplatesTemplateListOutput) SampleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.SampleType }).(pulumi.StringOutput)
}

// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetImageSpriteTemplatesTemplateListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.Type }).(pulumi.StringOutput)
}

// Last modified time of template in ISO date format.
func (o GetImageSpriteTemplatesTemplateListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
func (o GetImageSpriteTemplatesTemplateListOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageSpriteTemplatesTemplateList) int { return v.Width }).(pulumi.IntOutput)
}

type GetImageSpriteTemplatesTemplateListArrayOutput struct{ *pulumi.OutputState }

func (GetImageSpriteTemplatesTemplateListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageSpriteTemplatesTemplateList)(nil)).Elem()
}

func (o GetImageSpriteTemplatesTemplateListArrayOutput) ToGetImageSpriteTemplatesTemplateListArrayOutput() GetImageSpriteTemplatesTemplateListArrayOutput {
	return o
}

func (o GetImageSpriteTemplatesTemplateListArrayOutput) ToGetImageSpriteTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetImageSpriteTemplatesTemplateListArrayOutput {
	return o
}

func (o GetImageSpriteTemplatesTemplateListArrayOutput) Index(i pulumi.IntInput) GetImageSpriteTemplatesTemplateListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageSpriteTemplatesTemplateList {
		return vs[0].([]GetImageSpriteTemplatesTemplateList)[vs[1].(int)]
	}).(GetImageSpriteTemplatesTemplateListOutput)
}

type GetProcedureTemplatesTemplateList struct {
	// Template description.
	Comment string `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime string `pulumi:"createTime"`
	// Parameter of video processing task.
	MediaProcessTasks []GetProcedureTemplatesTemplateListMediaProcessTask `pulumi:"mediaProcessTasks"`
	// Name of procedure template.
	Name string `pulumi:"name"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type string `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime string `pulumi:"updateTime"`
}

// GetProcedureTemplatesTemplateListInput is an input type that accepts GetProcedureTemplatesTemplateListArgs and GetProcedureTemplatesTemplateListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListInput` via:
//
//	GetProcedureTemplatesTemplateListArgs{...}
type GetProcedureTemplatesTemplateListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListOutput() GetProcedureTemplatesTemplateListOutput
	ToGetProcedureTemplatesTemplateListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListOutput
}

type GetProcedureTemplatesTemplateListArgs struct {
	// Template description.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Parameter of video processing task.
	MediaProcessTasks GetProcedureTemplatesTemplateListMediaProcessTaskArrayInput `pulumi:"mediaProcessTasks"`
	// Name of procedure template.
	Name pulumi.StringInput `pulumi:"name"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringInput `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetProcedureTemplatesTemplateListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListArgs) ToGetProcedureTemplatesTemplateListOutput() GetProcedureTemplatesTemplateListOutput {
	return i.ToGetProcedureTemplatesTemplateListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListArgs) ToGetProcedureTemplatesTemplateListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListOutput)
}

// GetProcedureTemplatesTemplateListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListArray and GetProcedureTemplatesTemplateListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListArray{ GetProcedureTemplatesTemplateListArgs{...} }
type GetProcedureTemplatesTemplateListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListArrayOutput() GetProcedureTemplatesTemplateListArrayOutput
	ToGetProcedureTemplatesTemplateListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListArrayOutput
}

type GetProcedureTemplatesTemplateListArray []GetProcedureTemplatesTemplateListInput

func (GetProcedureTemplatesTemplateListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListArray) ToGetProcedureTemplatesTemplateListArrayOutput() GetProcedureTemplatesTemplateListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListArray) ToGetProcedureTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListArrayOutput)
}

type GetProcedureTemplatesTemplateListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListOutput) ToGetProcedureTemplatesTemplateListOutput() GetProcedureTemplatesTemplateListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListOutput) ToGetProcedureTemplatesTemplateListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListOutput {
	return o
}

// Template description.
func (o GetProcedureTemplatesTemplateListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateList) string { return v.Comment }).(pulumi.StringOutput)
}

// Creation time of template in ISO date format.
func (o GetProcedureTemplatesTemplateListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Parameter of video processing task.
func (o GetProcedureTemplatesTemplateListOutput) MediaProcessTasks() GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateList) []GetProcedureTemplatesTemplateListMediaProcessTask {
		return v.MediaProcessTasks
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput)
}

// Name of procedure template.
func (o GetProcedureTemplatesTemplateListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateList) string { return v.Name }).(pulumi.StringOutput)
}

// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetProcedureTemplatesTemplateListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateList) string { return v.Type }).(pulumi.StringOutput)
}

// Last modified time of template in ISO date format.
func (o GetProcedureTemplatesTemplateListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetProcedureTemplatesTemplateListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListArrayOutput) ToGetProcedureTemplatesTemplateListArrayOutput() GetProcedureTemplatesTemplateListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListArrayOutput) ToGetProcedureTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateList {
		return vs[0].([]GetProcedureTemplatesTemplateList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTask struct {
	// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList `pulumi:"adaptiveDynamicStreamingTaskLists"`
	// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList `pulumi:"animatedGraphicTaskLists"`
	// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	CoverBySnapshotTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList `pulumi:"coverBySnapshotTaskLists"`
	// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList `pulumi:"imageSpriteTaskLists"`
	// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList `pulumi:"sampleSnapshotTaskLists"`
	// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList `pulumi:"snapshotByTimeOffsetTaskLists"`
	// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTaskLists []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList `pulumi:"transcodeTaskLists"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskArgs and GetProcedureTemplatesTemplateListMediaProcessTaskOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskOutput() GetProcedureTemplatesTemplateListMediaProcessTaskOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskArgs struct {
	// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput `pulumi:"adaptiveDynamicStreamingTaskLists"`
	// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayInput `pulumi:"animatedGraphicTaskLists"`
	// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	CoverBySnapshotTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayInput `pulumi:"coverBySnapshotTaskLists"`
	// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayInput `pulumi:"imageSpriteTaskLists"`
	// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayInput `pulumi:"sampleSnapshotTaskLists"`
	// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput `pulumi:"snapshotByTimeOffsetTaskLists"`
	// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTaskLists GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayInput `pulumi:"transcodeTaskLists"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTask)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskOutput() GetProcedureTemplatesTemplateListMediaProcessTaskOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskArray and GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskArray{ GetProcedureTemplatesTemplateListMediaProcessTaskArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskArray []GetProcedureTemplatesTemplateListMediaProcessTaskInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTask)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTask)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskOutput() GetProcedureTemplatesTemplateListMediaProcessTaskOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskOutput {
	return o
}

// List of adaptive bitrate streaming tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) AdaptiveDynamicStreamingTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList {
		return v.AdaptiveDynamicStreamingTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput)
}

// List of animated image generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) AnimatedGraphicTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList {
		return v.AnimatedGraphicTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput)
}

// List of cover generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) CoverBySnapshotTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList {
		return v.CoverBySnapshotTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput)
}

// List of image sprite generating tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) ImageSpriteTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList {
		return v.ImageSpriteTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput)
}

// List of sampled screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) SampleSnapshotTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList {
		return v.SampleSnapshotTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput)
}

// List of time point screen capturing tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) SnapshotByTimeOffsetTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList {
		return v.SnapshotByTimeOffsetTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput)
}

// List of transcoding tasks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskOutput) TranscodeTaskLists() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTask) []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList {
		return v.TranscodeTaskLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTask)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTask {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTask)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList `pulumi:"watermarkLists"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput) WatermarkLists() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList) []GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList {
		return v.WatermarkLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	SvgContent      *string  `pulumi:"svgContent"`
	TextContent     *string  `pulumi:"textContent"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	SvgContent      pulumi.StringPtrInput  `pulumi:"svgContent"`
	TextContent     pulumi.StringPtrInput  `pulumi:"textContent"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray and GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray []GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset float64 `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset float64 `pulumi:"startTimeOffset"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64Input `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64Input `pulumi:"startTimeOffset"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput) EndTimeOffset() pulumi.Float64Output {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList) float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64Output)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput) StartTimeOffset() pulumi.Float64Output {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList) float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64Output)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
	PositionType string `pulumi:"positionType"`
	// Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
	PositionValue float64 `pulumi:"positionValue"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList `pulumi:"watermarkLists"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
	PositionType pulumi.StringInput `pulumi:"positionType"`
	// Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
	PositionValue pulumi.Float64Input `pulumi:"positionValue"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// Screen capturing mode. Valid values: `Time`, `Percent`. `Time`: screen captures by time point, `Percent`: screen captures by percentage.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) PositionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList) string {
		return v.PositionType
	}).(pulumi.StringOutput)
}

// Screenshot position: For time point screen capturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover. For percentage screen capturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) PositionValue() pulumi.Float64Output {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList) float64 {
		return v.PositionValue
	}).(pulumi.Float64Output)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput) WatermarkLists() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList) []GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList {
		return v.WatermarkLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	SvgContent      *string  `pulumi:"svgContent"`
	TextContent     *string  `pulumi:"textContent"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	SvgContent      pulumi.StringPtrInput  `pulumi:"svgContent"`
	TextContent     pulumi.StringPtrInput  `pulumi:"textContent"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray and GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray []GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList `pulumi:"watermarkLists"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput) WatermarkLists() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList) []GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList {
		return v.WatermarkLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	SvgContent      *string  `pulumi:"svgContent"`
	TextContent     *string  `pulumi:"textContent"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	SvgContent      pulumi.StringPtrInput  `pulumi:"svgContent"`
	TextContent     pulumi.StringPtrInput  `pulumi:"textContent"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray and GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray []GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
	ExtTimeOffsetLists []string `pulumi:"extTimeOffsetLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList `pulumi:"watermarkLists"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
	ExtTimeOffsetLists pulumi.StringArrayInput `pulumi:"extTimeOffsetLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// The list of screenshot time points. `s` and `%` formats are supported: When a time point string ends with `s`, its unit is second. For example, `3.5s` means the 3.5th second of the video; When a time point string ends with `%`, it is marked with corresponding percentage of the video duration. For example, `10%` means that the time point is at the 10% of the video entire duration.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) ExtTimeOffsetLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList) []string {
		return v.ExtTimeOffsetLists
	}).(pulumi.StringArrayOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput) WatermarkLists() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList) []GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList {
		return v.WatermarkLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	SvgContent      *string  `pulumi:"svgContent"`
	TextContent     *string  `pulumi:"textContent"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	SvgContent      pulumi.StringPtrInput  `pulumi:"svgContent"`
	TextContent     pulumi.StringPtrInput  `pulumi:"textContent"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray and GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray []GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// List of blurs. Up to 10 ones can be supported.
	MosaicLists []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList `pulumi:"mosaicLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList `pulumi:"watermarkLists"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of blurs. Up to 10 ones can be supported.
	MosaicLists GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayInput `pulumi:"mosaicLists"`
	// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkLists GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayInput `pulumi:"watermarkLists"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray and GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList) string { return v.Definition }).(pulumi.StringOutput)
}

// List of blurs. Up to 10 ones can be supported.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput) MosaicLists() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList) []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList {
		return v.MosaicLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput)
}

// List of up to `10` image or text watermarks. Note: this field may return null, indicating that no valid values can be obtained.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput) WatermarkLists() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList) []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList {
		return v.WatermarkLists
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList struct {
	// Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text.
	CoordinateOrigin string `pulumi:"coordinateOrigin"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset float64 `pulumi:"endTimeOffset"`
	// Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px.
	Height string `pulumi:"height"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset float64 `pulumi:"startTimeOffset"`
	// Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px.
	Width string `pulumi:"width"`
	// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px.
	XPos string `pulumi:"xPos"`
	// Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px.
	YPos string `pulumi:"yPos"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs struct {
	// Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text.
	CoordinateOrigin pulumi.StringInput `pulumi:"coordinateOrigin"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64Input `pulumi:"endTimeOffset"`
	// Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px.
	Height pulumi.StringInput `pulumi:"height"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64Input `pulumi:"startTimeOffset"`
	// Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px.
	Width pulumi.StringInput `pulumi:"width"`
	// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px.
	XPos pulumi.StringInput `pulumi:"xPos"`
	// Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px.
	YPos pulumi.StringInput `pulumi:"yPos"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray and GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return o
}

// Origin position, which currently can only be: `TopLeft`: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) CoordinateOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) string {
		return v.CoordinateOrigin
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) EndTimeOffset() pulumi.Float64Output {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64Output)
}

// Blur height. `%` and `px` formats are supported: If the string ends in `%`, the `height` of the blur will be the specified percentage of the video height; for example, 10% means that Height is 10% of the video height; If the string ends in `px`, the `height` of the blur will be in px; for example, 100px means that Height is 100 px.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) Height() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) string {
		return v.Height
	}).(pulumi.StringOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) StartTimeOffset() pulumi.Float64Output {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64Output)
}

// Blur width. `%` and `px` formats are supported: If the string ends in `%`, the `width` of the blur will be the specified percentage of the video width; for example, 10% means that `width` is 10% of the video width; If the string ends in `px`, the `width` of the blur will be in px; for example, 100px means that Width is 100 px.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) Width() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) string {
		return v.Width
	}).(pulumi.StringOutput)
}

// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. `%` and `px` formats are supported: If the string ends in `%`, the XPos of the blur will be the specified percentage of the video width; for example, 10% means that XPos is 10% of the video width; If the string ends in `px`, the XPos of the blur will be the specified px; for example, 100px means that XPos is 100 px.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) XPos() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) string {
		return v.XPos
	}).(pulumi.StringOutput)
}

// Vertical position of the origin of blur relative to the origin of coordinates of video. `%` and `px` formats are supported: If the string ends in `%`, the YPos of the blur will be the specified percentage of the video height; for example, 10% means that YPos is 10% of the video height; If the string ends in `px`, the YPos of the blur will be the specified px; for example, 100px means that YPos is 100 px.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput) YPos() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList) string {
		return v.YPos
	}).(pulumi.StringOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList struct {
	// Video transcoding template ID.
	Definition string `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset *float64 `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset *float64 `pulumi:"startTimeOffset"`
	SvgContent      *string  `pulumi:"svgContent"`
	TextContent     *string  `pulumi:"textContent"`
}

// GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs and GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs{...}
type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs struct {
	// Video transcoding template ID.
	Definition pulumi.StringInput `pulumi:"definition"`
	// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
	EndTimeOffset pulumi.Float64PtrInput `pulumi:"endTimeOffset"`
	// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
	StartTimeOffset pulumi.Float64PtrInput `pulumi:"startTimeOffset"`
	SvgContent      pulumi.StringPtrInput  `pulumi:"svgContent"`
	TextContent     pulumi.StringPtrInput  `pulumi:"textContent"`
}

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput)
}

// GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayInput is an input type that accepts GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray and GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput values.
// You can construct a concrete instance of `GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayInput` via:
//
//	GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray{ GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs{...} }
type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayInput interface {
	pulumi.Input

	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput
	ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray []GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListInput

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return i.ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(context.Background())
}

func (i GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return o
}

// Video transcoding template ID.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList) string {
		return v.Definition
	}).(pulumi.StringOutput)
}

// End time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will exist till the last video frame; If this value is greater than `0` (e.g., n), the blur will exist till second n; If this value is smaller than `0` (e.g., -n), the blur will exist till second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) EndTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList) *float64 {
		return v.EndTimeOffset
	}).(pulumi.Float64PtrOutput)
}

// Start time offset of blur in seconds. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame. If this parameter is left empty or `0` is entered, the blur will appear upon the first video frame; If this value is greater than `0` (e.g., n), the blur will appear at second n after the first video frame; If this value is smaller than `0` (e.g., -n), the blur will appear at second n before the last video frame.
func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) StartTimeOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList) *float64 {
		return v.StartTimeOffset
	}).(pulumi.Float64PtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) SvgContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList) *string {
		return v.SvgContent
	}).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList) *string {
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

type GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList)(nil)).Elem()
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput() GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) ToGetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutputWithContext(ctx context.Context) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput {
	return o
}

func (o GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput) Index(i pulumi.IntInput) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList {
		return vs[0].([]GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkList)[vs[1].(int)]
	}).(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput)
}

type GetSnapshotByTimeOffsetTemplatesTemplateList struct {
	// Template description.
	Comment string `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime string `pulumi:"createTime"`
	// Unique ID filter of snapshot by time offset template.
	Definition string `pulumi:"definition"`
	// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot `shorter` or `longer`; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. `white`: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks. `gauss`: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.
	FillType string `pulumi:"fillType"`
	// Image format. Valid values: `jpg`, `png`.
	Format string `pulumi:"format"`
	// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Height int `pulumi:"height"`
	// Name of a time point screen capturing template.
	Name string `pulumi:"name"`
	// Resolution adaption. Valid values: `true`, `false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
	ResolutionAdaptive bool `pulumi:"resolutionAdaptive"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type string `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime string `pulumi:"updateTime"`
	// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Width int `pulumi:"width"`
}

// GetSnapshotByTimeOffsetTemplatesTemplateListInput is an input type that accepts GetSnapshotByTimeOffsetTemplatesTemplateListArgs and GetSnapshotByTimeOffsetTemplatesTemplateListOutput values.
// You can construct a concrete instance of `GetSnapshotByTimeOffsetTemplatesTemplateListInput` via:
//
//	GetSnapshotByTimeOffsetTemplatesTemplateListArgs{...}
type GetSnapshotByTimeOffsetTemplatesTemplateListInput interface {
	pulumi.Input

	ToGetSnapshotByTimeOffsetTemplatesTemplateListOutput() GetSnapshotByTimeOffsetTemplatesTemplateListOutput
	ToGetSnapshotByTimeOffsetTemplatesTemplateListOutputWithContext(context.Context) GetSnapshotByTimeOffsetTemplatesTemplateListOutput
}

type GetSnapshotByTimeOffsetTemplatesTemplateListArgs struct {
	// Template description.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Unique ID filter of snapshot by time offset template.
	Definition pulumi.StringInput `pulumi:"definition"`
	// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot `shorter` or `longer`; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. `white`: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks. `gauss`: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.
	FillType pulumi.StringInput `pulumi:"fillType"`
	// Image format. Valid values: `jpg`, `png`.
	Format pulumi.StringInput `pulumi:"format"`
	// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Height pulumi.IntInput `pulumi:"height"`
	// Name of a time point screen capturing template.
	Name pulumi.StringInput `pulumi:"name"`
	// Resolution adaption. Valid values: `true`, `false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
	ResolutionAdaptive pulumi.BoolInput `pulumi:"resolutionAdaptive"`
	// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringInput `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
	Width pulumi.IntInput `pulumi:"width"`
}

func (GetSnapshotByTimeOffsetTemplatesTemplateListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotByTimeOffsetTemplatesTemplateList)(nil)).Elem()
}

func (i GetSnapshotByTimeOffsetTemplatesTemplateListArgs) ToGetSnapshotByTimeOffsetTemplatesTemplateListOutput() GetSnapshotByTimeOffsetTemplatesTemplateListOutput {
	return i.ToGetSnapshotByTimeOffsetTemplatesTemplateListOutputWithContext(context.Background())
}

func (i GetSnapshotByTimeOffsetTemplatesTemplateListArgs) ToGetSnapshotByTimeOffsetTemplatesTemplateListOutputWithContext(ctx context.Context) GetSnapshotByTimeOffsetTemplatesTemplateListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotByTimeOffsetTemplatesTemplateListOutput)
}

// GetSnapshotByTimeOffsetTemplatesTemplateListArrayInput is an input type that accepts GetSnapshotByTimeOffsetTemplatesTemplateListArray and GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput values.
// You can construct a concrete instance of `GetSnapshotByTimeOffsetTemplatesTemplateListArrayInput` via:
//
//	GetSnapshotByTimeOffsetTemplatesTemplateListArray{ GetSnapshotByTimeOffsetTemplatesTemplateListArgs{...} }
type GetSnapshotByTimeOffsetTemplatesTemplateListArrayInput interface {
	pulumi.Input

	ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput() GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput
	ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutputWithContext(context.Context) GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput
}

type GetSnapshotByTimeOffsetTemplatesTemplateListArray []GetSnapshotByTimeOffsetTemplatesTemplateListInput

func (GetSnapshotByTimeOffsetTemplatesTemplateListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotByTimeOffsetTemplatesTemplateList)(nil)).Elem()
}

func (i GetSnapshotByTimeOffsetTemplatesTemplateListArray) ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput() GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput {
	return i.ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutputWithContext(context.Background())
}

func (i GetSnapshotByTimeOffsetTemplatesTemplateListArray) ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput)
}

type GetSnapshotByTimeOffsetTemplatesTemplateListOutput struct{ *pulumi.OutputState }

func (GetSnapshotByTimeOffsetTemplatesTemplateListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotByTimeOffsetTemplatesTemplateList)(nil)).Elem()
}

func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) ToGetSnapshotByTimeOffsetTemplatesTemplateListOutput() GetSnapshotByTimeOffsetTemplatesTemplateListOutput {
	return o
}

func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) ToGetSnapshotByTimeOffsetTemplatesTemplateListOutputWithContext(ctx context.Context) GetSnapshotByTimeOffsetTemplatesTemplateListOutput {
	return o
}

// Template description.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.Comment }).(pulumi.StringOutput)
}

// Creation time of template in ISO date format.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Unique ID filter of snapshot by time offset template.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.Definition }).(pulumi.StringOutput)
}

// Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot `shorter` or `longer`; `black`: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks. `white`: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks. `gauss`: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) FillType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.FillType }).(pulumi.StringOutput)
}

// Image format. Valid values: `jpg`, `png`.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.Format }).(pulumi.StringOutput)
}

// Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) int { return v.Height }).(pulumi.IntOutput)
}

// Name of a time point screen capturing template.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.Name }).(pulumi.StringOutput)
}

// Resolution adaption. Valid values: `true`, `false`. `true`: enabled. In this case, `width` represents the long side of a video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while `height` the height.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) ResolutionAdaptive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) bool { return v.ResolutionAdaptive }).(pulumi.BoolOutput)
}

// Template type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.Type }).(pulumi.StringOutput)
}

// Last modified time of template in ISO date format.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used.
func (o GetSnapshotByTimeOffsetTemplatesTemplateListOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotByTimeOffsetTemplatesTemplateList) int { return v.Width }).(pulumi.IntOutput)
}

type GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotByTimeOffsetTemplatesTemplateList)(nil)).Elem()
}

func (o GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput) ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput() GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput {
	return o
}

func (o GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput) ToGetSnapshotByTimeOffsetTemplatesTemplateListArrayOutputWithContext(ctx context.Context) GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput {
	return o
}

func (o GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput) Index(i pulumi.IntInput) GetSnapshotByTimeOffsetTemplatesTemplateListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotByTimeOffsetTemplatesTemplateList {
		return vs[0].([]GetSnapshotByTimeOffsetTemplatesTemplateList)[vs[1].(int)]
	}).(GetSnapshotByTimeOffsetTemplatesTemplateListOutput)
}

type GetSuperPlayerConfigsConfigList struct {
	// ID of the unencrypted adaptive bitrate streaming template that allows output, which is required if `drmSwitch` is `false`.
	AdaptiveDynamicStreamingDefinition string `pulumi:"adaptiveDynamicStreamingDefinition"`
	// Template description.
	Comment string `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime string `pulumi:"createTime"`
	// Domain name used for playback. If it is left empty or set to `Default`, the domain name configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used.
	Domain string `pulumi:"domain"`
	// Content of the DRM-protected adaptive bitrate streaming template that allows output, which is required if `drmSwitch` is `true`.
	DrmStreamingInfos []GetSuperPlayerConfigsConfigListDrmStreamingInfo `pulumi:"drmStreamingInfos"`
	// Switch of DRM-protected adaptive bitstream playback: `true`: enabled, indicating to play back only output adaptive bitstreams protected by DRM; `false`: disabled, indicating to play back unencrypted output adaptive bitstreams.
	DrmSwitch bool `pulumi:"drmSwitch"`
	// ID of the image sprite template that allows output.
	ImageSpriteDefinition string `pulumi:"imageSpriteDefinition"`
	// Name of super player config.
	Name string `pulumi:"name"`
	// Display name of player for substreams with different resolutions. If this parameter is left empty or an empty array, the default configuration will be used: `min_edge_length: 240, name: LD`; `min_edge_length: 480, name: SD`; `min_edge_length: 720, name: HD`; `min_edge_length: 1080, name: FHD`; `min_edge_length: 1440, name: 2K`; `min_edge_length: 2160, name: 4K`; `min_edge_length: 4320, name: 8K`.
	ResolutionNames []GetSuperPlayerConfigsConfigListResolutionName `pulumi:"resolutionNames"`
	// Scheme used for playback. If it is left empty or set to `Default`, the scheme configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used. Other valid values: `HTTP`; `HTTPS`.
	Scheme string `pulumi:"scheme"`
	// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type string `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime string `pulumi:"updateTime"`
}

// GetSuperPlayerConfigsConfigListInput is an input type that accepts GetSuperPlayerConfigsConfigListArgs and GetSuperPlayerConfigsConfigListOutput values.
// You can construct a concrete instance of `GetSuperPlayerConfigsConfigListInput` via:
//
//	GetSuperPlayerConfigsConfigListArgs{...}
type GetSuperPlayerConfigsConfigListInput interface {
	pulumi.Input

	ToGetSuperPlayerConfigsConfigListOutput() GetSuperPlayerConfigsConfigListOutput
	ToGetSuperPlayerConfigsConfigListOutputWithContext(context.Context) GetSuperPlayerConfigsConfigListOutput
}

type GetSuperPlayerConfigsConfigListArgs struct {
	// ID of the unencrypted adaptive bitrate streaming template that allows output, which is required if `drmSwitch` is `false`.
	AdaptiveDynamicStreamingDefinition pulumi.StringInput `pulumi:"adaptiveDynamicStreamingDefinition"`
	// Template description.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Creation time of template in ISO date format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Domain name used for playback. If it is left empty or set to `Default`, the domain name configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Content of the DRM-protected adaptive bitrate streaming template that allows output, which is required if `drmSwitch` is `true`.
	DrmStreamingInfos GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayInput `pulumi:"drmStreamingInfos"`
	// Switch of DRM-protected adaptive bitstream playback: `true`: enabled, indicating to play back only output adaptive bitstreams protected by DRM; `false`: disabled, indicating to play back unencrypted output adaptive bitstreams.
	DrmSwitch pulumi.BoolInput `pulumi:"drmSwitch"`
	// ID of the image sprite template that allows output.
	ImageSpriteDefinition pulumi.StringInput `pulumi:"imageSpriteDefinition"`
	// Name of super player config.
	Name pulumi.StringInput `pulumi:"name"`
	// Display name of player for substreams with different resolutions. If this parameter is left empty or an empty array, the default configuration will be used: `min_edge_length: 240, name: LD`; `min_edge_length: 480, name: SD`; `min_edge_length: 720, name: HD`; `min_edge_length: 1080, name: FHD`; `min_edge_length: 1440, name: 2K`; `min_edge_length: 2160, name: 4K`; `min_edge_length: 4320, name: 8K`.
	ResolutionNames GetSuperPlayerConfigsConfigListResolutionNameArrayInput `pulumi:"resolutionNames"`
	// Scheme used for playback. If it is left empty or set to `Default`, the scheme configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used. Other valid values: `HTTP`; `HTTPS`.
	Scheme pulumi.StringInput `pulumi:"scheme"`
	// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
	Type pulumi.StringInput `pulumi:"type"`
	// Last modified time of template in ISO date format.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetSuperPlayerConfigsConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsConfigList)(nil)).Elem()
}

func (i GetSuperPlayerConfigsConfigListArgs) ToGetSuperPlayerConfigsConfigListOutput() GetSuperPlayerConfigsConfigListOutput {
	return i.ToGetSuperPlayerConfigsConfigListOutputWithContext(context.Background())
}

func (i GetSuperPlayerConfigsConfigListArgs) ToGetSuperPlayerConfigsConfigListOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSuperPlayerConfigsConfigListOutput)
}

// GetSuperPlayerConfigsConfigListArrayInput is an input type that accepts GetSuperPlayerConfigsConfigListArray and GetSuperPlayerConfigsConfigListArrayOutput values.
// You can construct a concrete instance of `GetSuperPlayerConfigsConfigListArrayInput` via:
//
//	GetSuperPlayerConfigsConfigListArray{ GetSuperPlayerConfigsConfigListArgs{...} }
type GetSuperPlayerConfigsConfigListArrayInput interface {
	pulumi.Input

	ToGetSuperPlayerConfigsConfigListArrayOutput() GetSuperPlayerConfigsConfigListArrayOutput
	ToGetSuperPlayerConfigsConfigListArrayOutputWithContext(context.Context) GetSuperPlayerConfigsConfigListArrayOutput
}

type GetSuperPlayerConfigsConfigListArray []GetSuperPlayerConfigsConfigListInput

func (GetSuperPlayerConfigsConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSuperPlayerConfigsConfigList)(nil)).Elem()
}

func (i GetSuperPlayerConfigsConfigListArray) ToGetSuperPlayerConfigsConfigListArrayOutput() GetSuperPlayerConfigsConfigListArrayOutput {
	return i.ToGetSuperPlayerConfigsConfigListArrayOutputWithContext(context.Background())
}

func (i GetSuperPlayerConfigsConfigListArray) ToGetSuperPlayerConfigsConfigListArrayOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSuperPlayerConfigsConfigListArrayOutput)
}

type GetSuperPlayerConfigsConfigListOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsConfigList)(nil)).Elem()
}

func (o GetSuperPlayerConfigsConfigListOutput) ToGetSuperPlayerConfigsConfigListOutput() GetSuperPlayerConfigsConfigListOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListOutput) ToGetSuperPlayerConfigsConfigListOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListOutput {
	return o
}

// ID of the unencrypted adaptive bitrate streaming template that allows output, which is required if `drmSwitch` is `false`.
func (o GetSuperPlayerConfigsConfigListOutput) AdaptiveDynamicStreamingDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.AdaptiveDynamicStreamingDefinition }).(pulumi.StringOutput)
}

// Template description.
func (o GetSuperPlayerConfigsConfigListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.Comment }).(pulumi.StringOutput)
}

// Creation time of template in ISO date format.
func (o GetSuperPlayerConfigsConfigListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Domain name used for playback. If it is left empty or set to `Default`, the domain name configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used.
func (o GetSuperPlayerConfigsConfigListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.Domain }).(pulumi.StringOutput)
}

// Content of the DRM-protected adaptive bitrate streaming template that allows output, which is required if `drmSwitch` is `true`.
func (o GetSuperPlayerConfigsConfigListOutput) DrmStreamingInfos() GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) []GetSuperPlayerConfigsConfigListDrmStreamingInfo {
		return v.DrmStreamingInfos
	}).(GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput)
}

// Switch of DRM-protected adaptive bitstream playback: `true`: enabled, indicating to play back only output adaptive bitstreams protected by DRM; `false`: disabled, indicating to play back unencrypted output adaptive bitstreams.
func (o GetSuperPlayerConfigsConfigListOutput) DrmSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) bool { return v.DrmSwitch }).(pulumi.BoolOutput)
}

// ID of the image sprite template that allows output.
func (o GetSuperPlayerConfigsConfigListOutput) ImageSpriteDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.ImageSpriteDefinition }).(pulumi.StringOutput)
}

// Name of super player config.
func (o GetSuperPlayerConfigsConfigListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.Name }).(pulumi.StringOutput)
}

// Display name of player for substreams with different resolutions. If this parameter is left empty or an empty array, the default configuration will be used: `min_edge_length: 240, name: LD`; `min_edge_length: 480, name: SD`; `min_edge_length: 720, name: HD`; `min_edge_length: 1080, name: FHD`; `min_edge_length: 1440, name: 2K`; `min_edge_length: 2160, name: 4K`; `min_edge_length: 4320, name: 8K`.
func (o GetSuperPlayerConfigsConfigListOutput) ResolutionNames() GetSuperPlayerConfigsConfigListResolutionNameArrayOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) []GetSuperPlayerConfigsConfigListResolutionName {
		return v.ResolutionNames
	}).(GetSuperPlayerConfigsConfigListResolutionNameArrayOutput)
}

// Scheme used for playback. If it is left empty or set to `Default`, the scheme configured in [Default Distribution Configuration](https://cloud.tencent.com/document/product/266/33373) will be used. Other valid values: `HTTP`; `HTTPS`.
func (o GetSuperPlayerConfigsConfigListOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.Scheme }).(pulumi.StringOutput)
}

// Config type filter. Valid values: `Preset`, `Custom`. `Preset`: preset template; `Custom`: custom template.
func (o GetSuperPlayerConfigsConfigListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.Type }).(pulumi.StringOutput)
}

// Last modified time of template in ISO date format.
func (o GetSuperPlayerConfigsConfigListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetSuperPlayerConfigsConfigListArrayOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSuperPlayerConfigsConfigList)(nil)).Elem()
}

func (o GetSuperPlayerConfigsConfigListArrayOutput) ToGetSuperPlayerConfigsConfigListArrayOutput() GetSuperPlayerConfigsConfigListArrayOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListArrayOutput) ToGetSuperPlayerConfigsConfigListArrayOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListArrayOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListArrayOutput) Index(i pulumi.IntInput) GetSuperPlayerConfigsConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSuperPlayerConfigsConfigList {
		return vs[0].([]GetSuperPlayerConfigsConfigList)[vs[1].(int)]
	}).(GetSuperPlayerConfigsConfigListOutput)
}

type GetSuperPlayerConfigsConfigListDrmStreamingInfo struct {
	// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
	SimpleAesDefinition string `pulumi:"simpleAesDefinition"`
}

// GetSuperPlayerConfigsConfigListDrmStreamingInfoInput is an input type that accepts GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs and GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput values.
// You can construct a concrete instance of `GetSuperPlayerConfigsConfigListDrmStreamingInfoInput` via:
//
//	GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs{...}
type GetSuperPlayerConfigsConfigListDrmStreamingInfoInput interface {
	pulumi.Input

	ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutput() GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput
	ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutputWithContext(context.Context) GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput
}

type GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs struct {
	// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
	SimpleAesDefinition pulumi.StringInput `pulumi:"simpleAesDefinition"`
}

func (GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsConfigListDrmStreamingInfo)(nil)).Elem()
}

func (i GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutput() GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput {
	return i.ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutputWithContext(context.Background())
}

func (i GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput)
}

// GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayInput is an input type that accepts GetSuperPlayerConfigsConfigListDrmStreamingInfoArray and GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput values.
// You can construct a concrete instance of `GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayInput` via:
//
//	GetSuperPlayerConfigsConfigListDrmStreamingInfoArray{ GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs{...} }
type GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayInput interface {
	pulumi.Input

	ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput() GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput
	ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutputWithContext(context.Context) GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput
}

type GetSuperPlayerConfigsConfigListDrmStreamingInfoArray []GetSuperPlayerConfigsConfigListDrmStreamingInfoInput

func (GetSuperPlayerConfigsConfigListDrmStreamingInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSuperPlayerConfigsConfigListDrmStreamingInfo)(nil)).Elem()
}

func (i GetSuperPlayerConfigsConfigListDrmStreamingInfoArray) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput() GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput {
	return i.ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutputWithContext(context.Background())
}

func (i GetSuperPlayerConfigsConfigListDrmStreamingInfoArray) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput)
}

type GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsConfigListDrmStreamingInfo)(nil)).Elem()
}

func (o GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutput() GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput {
	return o
}

// ID of the adaptive dynamic streaming template whose protection type is `SimpleAES`.
func (o GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput) SimpleAesDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigListDrmStreamingInfo) string { return v.SimpleAesDefinition }).(pulumi.StringOutput)
}

type GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSuperPlayerConfigsConfigListDrmStreamingInfo)(nil)).Elem()
}

func (o GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput() GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput) ToGetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput) Index(i pulumi.IntInput) GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSuperPlayerConfigsConfigListDrmStreamingInfo {
		return vs[0].([]GetSuperPlayerConfigsConfigListDrmStreamingInfo)[vs[1].(int)]
	}).(GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput)
}

type GetSuperPlayerConfigsConfigListResolutionName struct {
	// Length of video short side in px.
	MinEdgeLength int `pulumi:"minEdgeLength"`
	// Name of super player config.
	Name string `pulumi:"name"`
}

// GetSuperPlayerConfigsConfigListResolutionNameInput is an input type that accepts GetSuperPlayerConfigsConfigListResolutionNameArgs and GetSuperPlayerConfigsConfigListResolutionNameOutput values.
// You can construct a concrete instance of `GetSuperPlayerConfigsConfigListResolutionNameInput` via:
//
//	GetSuperPlayerConfigsConfigListResolutionNameArgs{...}
type GetSuperPlayerConfigsConfigListResolutionNameInput interface {
	pulumi.Input

	ToGetSuperPlayerConfigsConfigListResolutionNameOutput() GetSuperPlayerConfigsConfigListResolutionNameOutput
	ToGetSuperPlayerConfigsConfigListResolutionNameOutputWithContext(context.Context) GetSuperPlayerConfigsConfigListResolutionNameOutput
}

type GetSuperPlayerConfigsConfigListResolutionNameArgs struct {
	// Length of video short side in px.
	MinEdgeLength pulumi.IntInput `pulumi:"minEdgeLength"`
	// Name of super player config.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSuperPlayerConfigsConfigListResolutionNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsConfigListResolutionName)(nil)).Elem()
}

func (i GetSuperPlayerConfigsConfigListResolutionNameArgs) ToGetSuperPlayerConfigsConfigListResolutionNameOutput() GetSuperPlayerConfigsConfigListResolutionNameOutput {
	return i.ToGetSuperPlayerConfigsConfigListResolutionNameOutputWithContext(context.Background())
}

func (i GetSuperPlayerConfigsConfigListResolutionNameArgs) ToGetSuperPlayerConfigsConfigListResolutionNameOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListResolutionNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSuperPlayerConfigsConfigListResolutionNameOutput)
}

// GetSuperPlayerConfigsConfigListResolutionNameArrayInput is an input type that accepts GetSuperPlayerConfigsConfigListResolutionNameArray and GetSuperPlayerConfigsConfigListResolutionNameArrayOutput values.
// You can construct a concrete instance of `GetSuperPlayerConfigsConfigListResolutionNameArrayInput` via:
//
//	GetSuperPlayerConfigsConfigListResolutionNameArray{ GetSuperPlayerConfigsConfigListResolutionNameArgs{...} }
type GetSuperPlayerConfigsConfigListResolutionNameArrayInput interface {
	pulumi.Input

	ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutput() GetSuperPlayerConfigsConfigListResolutionNameArrayOutput
	ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutputWithContext(context.Context) GetSuperPlayerConfigsConfigListResolutionNameArrayOutput
}

type GetSuperPlayerConfigsConfigListResolutionNameArray []GetSuperPlayerConfigsConfigListResolutionNameInput

func (GetSuperPlayerConfigsConfigListResolutionNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSuperPlayerConfigsConfigListResolutionName)(nil)).Elem()
}

func (i GetSuperPlayerConfigsConfigListResolutionNameArray) ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutput() GetSuperPlayerConfigsConfigListResolutionNameArrayOutput {
	return i.ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutputWithContext(context.Background())
}

func (i GetSuperPlayerConfigsConfigListResolutionNameArray) ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListResolutionNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSuperPlayerConfigsConfigListResolutionNameArrayOutput)
}

type GetSuperPlayerConfigsConfigListResolutionNameOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsConfigListResolutionNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsConfigListResolutionName)(nil)).Elem()
}

func (o GetSuperPlayerConfigsConfigListResolutionNameOutput) ToGetSuperPlayerConfigsConfigListResolutionNameOutput() GetSuperPlayerConfigsConfigListResolutionNameOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListResolutionNameOutput) ToGetSuperPlayerConfigsConfigListResolutionNameOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListResolutionNameOutput {
	return o
}

// Length of video short side in px.
func (o GetSuperPlayerConfigsConfigListResolutionNameOutput) MinEdgeLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigListResolutionName) int { return v.MinEdgeLength }).(pulumi.IntOutput)
}

// Name of super player config.
func (o GetSuperPlayerConfigsConfigListResolutionNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsConfigListResolutionName) string { return v.Name }).(pulumi.StringOutput)
}

type GetSuperPlayerConfigsConfigListResolutionNameArrayOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsConfigListResolutionNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSuperPlayerConfigsConfigListResolutionName)(nil)).Elem()
}

func (o GetSuperPlayerConfigsConfigListResolutionNameArrayOutput) ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutput() GetSuperPlayerConfigsConfigListResolutionNameArrayOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListResolutionNameArrayOutput) ToGetSuperPlayerConfigsConfigListResolutionNameArrayOutputWithContext(ctx context.Context) GetSuperPlayerConfigsConfigListResolutionNameArrayOutput {
	return o
}

func (o GetSuperPlayerConfigsConfigListResolutionNameArrayOutput) Index(i pulumi.IntInput) GetSuperPlayerConfigsConfigListResolutionNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSuperPlayerConfigsConfigListResolutionName {
		return vs[0].([]GetSuperPlayerConfigsConfigListResolutionName)[vs[1].(int)]
	}).(GetSuperPlayerConfigsConfigListResolutionNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoInput)(nil)).Elem(), AdaptiveDynamicStreamingTemplateStreamInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoArrayInput)(nil)).Elem(), AdaptiveDynamicStreamingTemplateStreamInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoAudioInput)(nil)).Elem(), AdaptiveDynamicStreamingTemplateStreamInfoAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptiveDynamicStreamingTemplateStreamInfoVideoInput)(nil)).Elem(), AdaptiveDynamicStreamingTemplateStreamInfoVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskPtrInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskImageSpriteTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskImageSpriteTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskImageSpriteTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskTranscodeTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskTranscodeTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayInput)(nil)).Elem(), ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuperPlayerConfigDrmStreamingInfoInput)(nil)).Elem(), SuperPlayerConfigDrmStreamingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuperPlayerConfigDrmStreamingInfoPtrInput)(nil)).Elem(), SuperPlayerConfigDrmStreamingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuperPlayerConfigResolutionNameInput)(nil)).Elem(), SuperPlayerConfigResolutionNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuperPlayerConfigResolutionNameArrayInput)(nil)).Elem(), SuperPlayerConfigResolutionNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListArrayInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayInput)(nil)).Elem(), GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageSpriteTemplatesTemplateListInput)(nil)).Elem(), GetImageSpriteTemplatesTemplateListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageSpriteTemplatesTemplateListArrayInput)(nil)).Elem(), GetImageSpriteTemplatesTemplateListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayInput)(nil)).Elem(), GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotByTimeOffsetTemplatesTemplateListInput)(nil)).Elem(), GetSnapshotByTimeOffsetTemplatesTemplateListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotByTimeOffsetTemplatesTemplateListArrayInput)(nil)).Elem(), GetSnapshotByTimeOffsetTemplatesTemplateListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSuperPlayerConfigsConfigListInput)(nil)).Elem(), GetSuperPlayerConfigsConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSuperPlayerConfigsConfigListArrayInput)(nil)).Elem(), GetSuperPlayerConfigsConfigListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSuperPlayerConfigsConfigListDrmStreamingInfoInput)(nil)).Elem(), GetSuperPlayerConfigsConfigListDrmStreamingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayInput)(nil)).Elem(), GetSuperPlayerConfigsConfigListDrmStreamingInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSuperPlayerConfigsConfigListResolutionNameInput)(nil)).Elem(), GetSuperPlayerConfigsConfigListResolutionNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSuperPlayerConfigsConfigListResolutionNameArrayInput)(nil)).Elem(), GetSuperPlayerConfigsConfigListResolutionNameArray{})
	pulumi.RegisterOutputType(AdaptiveDynamicStreamingTemplateStreamInfoOutput{})
	pulumi.RegisterOutputType(AdaptiveDynamicStreamingTemplateStreamInfoArrayOutput{})
	pulumi.RegisterOutputType(AdaptiveDynamicStreamingTemplateStreamInfoAudioOutput{})
	pulumi.RegisterOutputType(AdaptiveDynamicStreamingTemplateStreamInfoVideoOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskPtrOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskAnimatedGraphicTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskImageSpriteTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskImageSpriteTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskTranscodeTaskListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskTranscodeTaskListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskTranscodeTaskListMosaicListArrayOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(ProcedureTemplateMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(SuperPlayerConfigDrmStreamingInfoOutput{})
	pulumi.RegisterOutputType(SuperPlayerConfigDrmStreamingInfoPtrOutput{})
	pulumi.RegisterOutputType(SuperPlayerConfigResolutionNameOutput{})
	pulumi.RegisterOutputType(SuperPlayerConfigResolutionNameArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoAudioArrayOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoOutput{})
	pulumi.RegisterOutputType(GetAdaptiveDynamicStreamingTemplatesTemplateListStreamInfoVideoArrayOutput{})
	pulumi.RegisterOutputType(GetImageSpriteTemplatesTemplateListOutput{})
	pulumi.RegisterOutputType(GetImageSpriteTemplatesTemplateListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskAdaptiveDynamicStreamingTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskAnimatedGraphicTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskCoverBySnapshotTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskImageSpriteTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSampleSnapshotTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskSnapshotByTimeOffsetTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListMosaicListArrayOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListOutput{})
	pulumi.RegisterOutputType(GetProcedureTemplatesTemplateListMediaProcessTaskTranscodeTaskListWatermarkListArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotByTimeOffsetTemplatesTemplateListOutput{})
	pulumi.RegisterOutputType(GetSnapshotByTimeOffsetTemplatesTemplateListArrayOutput{})
	pulumi.RegisterOutputType(GetSuperPlayerConfigsConfigListOutput{})
	pulumi.RegisterOutputType(GetSuperPlayerConfigsConfigListArrayOutput{})
	pulumi.RegisterOutputType(GetSuperPlayerConfigsConfigListDrmStreamingInfoOutput{})
	pulumi.RegisterOutputType(GetSuperPlayerConfigsConfigListDrmStreamingInfoArrayOutput{})
	pulumi.RegisterOutputType(GetSuperPlayerConfigsConfigListResolutionNameOutput{})
	pulumi.RegisterOutputType(GetSuperPlayerConfigsConfigListResolutionNameArrayOutput{})
}
