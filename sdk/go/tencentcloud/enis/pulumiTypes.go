// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package enis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

var _ = internal.GetEnvOrDefault

type GetInstanceEni struct {
	// CDC instance ID.
	CdcId string `pulumi:"cdcId"`
	// Creation time of the ENI.
	CreateTime string `pulumi:"createTime"`
	// Description of the ENI. Conflict with `ids`.
	Description string `pulumi:"description"`
	// ID of the ENI.
	Id string `pulumi:"id"`
	// ID of the instance which bind the ENI. Conflict with `ids`.
	InstanceId string `pulumi:"instanceId"`
	// A set of intranet IPv4s.
	Ipv4s []GetInstanceEniIpv4 `pulumi:"ipv4s"`
	// MAC address.
	Mac string `pulumi:"mac"`
	// Name of the ENI to be queried. Conflict with `ids`.
	Name string `pulumi:"name"`
	// Indicates whether the IP is primary.
	Primary bool `pulumi:"primary"`
	// A set of security group IDs which bind the ENI.
	SecurityGroups []string `pulumi:"securityGroups"`
	// States of the ENI.
	State string `pulumi:"state"`
	// ID of the subnet within this vpc to be queried. Conflict with `ids`.
	SubnetId string `pulumi:"subnetId"`
	// Tags of the ENI. Conflict with `ids`.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the vpc to be queried. Conflict with `ids`.
	VpcId string `pulumi:"vpcId"`
}

// GetInstanceEniInput is an input type that accepts GetInstanceEniArgs and GetInstanceEniOutput values.
// You can construct a concrete instance of `GetInstanceEniInput` via:
//
//	GetInstanceEniArgs{...}
type GetInstanceEniInput interface {
	pulumi.Input

	ToGetInstanceEniOutput() GetInstanceEniOutput
	ToGetInstanceEniOutputWithContext(context.Context) GetInstanceEniOutput
}

type GetInstanceEniArgs struct {
	// CDC instance ID.
	CdcId pulumi.StringInput `pulumi:"cdcId"`
	// Creation time of the ENI.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of the ENI. Conflict with `ids`.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the ENI.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the instance which bind the ENI. Conflict with `ids`.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A set of intranet IPv4s.
	Ipv4s GetInstanceEniIpv4ArrayInput `pulumi:"ipv4s"`
	// MAC address.
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of the ENI to be queried. Conflict with `ids`.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether the IP is primary.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// A set of security group IDs which bind the ENI.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// States of the ENI.
	State pulumi.StringInput `pulumi:"state"`
	// ID of the subnet within this vpc to be queried. Conflict with `ids`.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags of the ENI. Conflict with `ids`.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the vpc to be queried. Conflict with `ids`.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInstanceEniArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEni)(nil)).Elem()
}

func (i GetInstanceEniArgs) ToGetInstanceEniOutput() GetInstanceEniOutput {
	return i.ToGetInstanceEniOutputWithContext(context.Background())
}

func (i GetInstanceEniArgs) ToGetInstanceEniOutputWithContext(ctx context.Context) GetInstanceEniOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniOutput)
}

// GetInstanceEniArrayInput is an input type that accepts GetInstanceEniArray and GetInstanceEniArrayOutput values.
// You can construct a concrete instance of `GetInstanceEniArrayInput` via:
//
//	GetInstanceEniArray{ GetInstanceEniArgs{...} }
type GetInstanceEniArrayInput interface {
	pulumi.Input

	ToGetInstanceEniArrayOutput() GetInstanceEniArrayOutput
	ToGetInstanceEniArrayOutputWithContext(context.Context) GetInstanceEniArrayOutput
}

type GetInstanceEniArray []GetInstanceEniInput

func (GetInstanceEniArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEni)(nil)).Elem()
}

func (i GetInstanceEniArray) ToGetInstanceEniArrayOutput() GetInstanceEniArrayOutput {
	return i.ToGetInstanceEniArrayOutputWithContext(context.Background())
}

func (i GetInstanceEniArray) ToGetInstanceEniArrayOutputWithContext(ctx context.Context) GetInstanceEniArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniArrayOutput)
}

type GetInstanceEniOutput struct{ *pulumi.OutputState }

func (GetInstanceEniOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEni)(nil)).Elem()
}

func (o GetInstanceEniOutput) ToGetInstanceEniOutput() GetInstanceEniOutput {
	return o
}

func (o GetInstanceEniOutput) ToGetInstanceEniOutputWithContext(ctx context.Context) GetInstanceEniOutput {
	return o
}

// CDC instance ID.
func (o GetInstanceEniOutput) CdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.CdcId }).(pulumi.StringOutput)
}

// Creation time of the ENI.
func (o GetInstanceEniOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the ENI. Conflict with `ids`.
func (o GetInstanceEniOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the ENI.
func (o GetInstanceEniOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the instance which bind the ENI. Conflict with `ids`.
func (o GetInstanceEniOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.InstanceId }).(pulumi.StringOutput)
}

// A set of intranet IPv4s.
func (o GetInstanceEniOutput) Ipv4s() GetInstanceEniIpv4ArrayOutput {
	return o.ApplyT(func(v GetInstanceEni) []GetInstanceEniIpv4 { return v.Ipv4s }).(GetInstanceEniIpv4ArrayOutput)
}

// MAC address.
func (o GetInstanceEniOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of the ENI to be queried. Conflict with `ids`.
func (o GetInstanceEniOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the IP is primary.
func (o GetInstanceEniOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEni) bool { return v.Primary }).(pulumi.BoolOutput)
}

// A set of security group IDs which bind the ENI.
func (o GetInstanceEniOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceEni) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// States of the ENI.
func (o GetInstanceEniOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.State }).(pulumi.StringOutput)
}

// ID of the subnet within this vpc to be queried. Conflict with `ids`.
func (o GetInstanceEniOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags of the ENI. Conflict with `ids`.
func (o GetInstanceEniOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstanceEni) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the vpc to be queried. Conflict with `ids`.
func (o GetInstanceEniOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstanceEniArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEniArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEni)(nil)).Elem()
}

func (o GetInstanceEniArrayOutput) ToGetInstanceEniArrayOutput() GetInstanceEniArrayOutput {
	return o
}

func (o GetInstanceEniArrayOutput) ToGetInstanceEniArrayOutputWithContext(ctx context.Context) GetInstanceEniArrayOutput {
	return o
}

func (o GetInstanceEniArrayOutput) Index(i pulumi.IntInput) GetInstanceEniOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEni {
		return vs[0].([]GetInstanceEni)[vs[1].(int)]
	}).(GetInstanceEniOutput)
}

type GetInstanceEniIpv4 struct {
	// Description of the ENI. Conflict with `ids`.
	Description string `pulumi:"description"`
	// Intranet IP.
	Ip string `pulumi:"ip"`
	// Indicates whether the IP is primary.
	Primary bool `pulumi:"primary"`
}

// GetInstanceEniIpv4Input is an input type that accepts GetInstanceEniIpv4Args and GetInstanceEniIpv4Output values.
// You can construct a concrete instance of `GetInstanceEniIpv4Input` via:
//
//	GetInstanceEniIpv4Args{...}
type GetInstanceEniIpv4Input interface {
	pulumi.Input

	ToGetInstanceEniIpv4Output() GetInstanceEniIpv4Output
	ToGetInstanceEniIpv4OutputWithContext(context.Context) GetInstanceEniIpv4Output
}

type GetInstanceEniIpv4Args struct {
	// Description of the ENI. Conflict with `ids`.
	Description pulumi.StringInput `pulumi:"description"`
	// Intranet IP.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Indicates whether the IP is primary.
	Primary pulumi.BoolInput `pulumi:"primary"`
}

func (GetInstanceEniIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEniIpv4)(nil)).Elem()
}

func (i GetInstanceEniIpv4Args) ToGetInstanceEniIpv4Output() GetInstanceEniIpv4Output {
	return i.ToGetInstanceEniIpv4OutputWithContext(context.Background())
}

func (i GetInstanceEniIpv4Args) ToGetInstanceEniIpv4OutputWithContext(ctx context.Context) GetInstanceEniIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniIpv4Output)
}

// GetInstanceEniIpv4ArrayInput is an input type that accepts GetInstanceEniIpv4Array and GetInstanceEniIpv4ArrayOutput values.
// You can construct a concrete instance of `GetInstanceEniIpv4ArrayInput` via:
//
//	GetInstanceEniIpv4Array{ GetInstanceEniIpv4Args{...} }
type GetInstanceEniIpv4ArrayInput interface {
	pulumi.Input

	ToGetInstanceEniIpv4ArrayOutput() GetInstanceEniIpv4ArrayOutput
	ToGetInstanceEniIpv4ArrayOutputWithContext(context.Context) GetInstanceEniIpv4ArrayOutput
}

type GetInstanceEniIpv4Array []GetInstanceEniIpv4Input

func (GetInstanceEniIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEniIpv4)(nil)).Elem()
}

func (i GetInstanceEniIpv4Array) ToGetInstanceEniIpv4ArrayOutput() GetInstanceEniIpv4ArrayOutput {
	return i.ToGetInstanceEniIpv4ArrayOutputWithContext(context.Background())
}

func (i GetInstanceEniIpv4Array) ToGetInstanceEniIpv4ArrayOutputWithContext(ctx context.Context) GetInstanceEniIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniIpv4ArrayOutput)
}

type GetInstanceEniIpv4Output struct{ *pulumi.OutputState }

func (GetInstanceEniIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEniIpv4)(nil)).Elem()
}

func (o GetInstanceEniIpv4Output) ToGetInstanceEniIpv4Output() GetInstanceEniIpv4Output {
	return o
}

func (o GetInstanceEniIpv4Output) ToGetInstanceEniIpv4OutputWithContext(ctx context.Context) GetInstanceEniIpv4Output {
	return o
}

// Description of the ENI. Conflict with `ids`.
func (o GetInstanceEniIpv4Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv4) string { return v.Description }).(pulumi.StringOutput)
}

// Intranet IP.
func (o GetInstanceEniIpv4Output) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv4) string { return v.Ip }).(pulumi.StringOutput)
}

// Indicates whether the IP is primary.
func (o GetInstanceEniIpv4Output) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEniIpv4) bool { return v.Primary }).(pulumi.BoolOutput)
}

type GetInstanceEniIpv4ArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEniIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEniIpv4)(nil)).Elem()
}

func (o GetInstanceEniIpv4ArrayOutput) ToGetInstanceEniIpv4ArrayOutput() GetInstanceEniIpv4ArrayOutput {
	return o
}

func (o GetInstanceEniIpv4ArrayOutput) ToGetInstanceEniIpv4ArrayOutputWithContext(ctx context.Context) GetInstanceEniIpv4ArrayOutput {
	return o
}

func (o GetInstanceEniIpv4ArrayOutput) Index(i pulumi.IntInput) GetInstanceEniIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEniIpv4 {
		return vs[0].([]GetInstanceEniIpv4)[vs[1].(int)]
	}).(GetInstanceEniIpv4Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniInput)(nil)).Elem(), GetInstanceEniArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniArrayInput)(nil)).Elem(), GetInstanceEniArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniIpv4Input)(nil)).Elem(), GetInstanceEniIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniIpv4ArrayInput)(nil)).Elem(), GetInstanceEniIpv4Array{})
	pulumi.RegisterOutputType(GetInstanceEniOutput{})
	pulumi.RegisterOutputType(GetInstanceEniArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEniIpv4Output{})
	pulumi.RegisterOutputType(GetInstanceEniIpv4ArrayOutput{})
}
