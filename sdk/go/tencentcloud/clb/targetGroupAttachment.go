// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a CLB target group attachment is bound to the load balancing listener or forwarding rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Clb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			clbBasic, err := Clb.NewInstance(ctx, "clbBasic", &Clb.InstanceArgs{
//				NetworkType: pulumi.String("OPEN"),
//				ClbName:     pulumi.String("tf-clb-rule-basic"),
//			})
//			if err != nil {
//				return err
//			}
//			listenerBasic, err := Clb.NewListener(ctx, "listenerBasic", &Clb.ListenerArgs{
//				ClbId:        clbBasic.ID(),
//				Port:         pulumi.Int(1),
//				Protocol:     pulumi.String("HTTP"),
//				ListenerName: pulumi.String("listener_basic"),
//			})
//			if err != nil {
//				return err
//			}
//			ruleBasic, err := Clb.NewListenerRule(ctx, "ruleBasic", &Clb.ListenerRuleArgs{
//				ClbId:             clbBasic.ID(),
//				ListenerId:        listenerBasic.ListenerId,
//				Domain:            pulumi.String("abc.com"),
//				Url:               pulumi.String("/"),
//				SessionExpireTime: pulumi.Int(30),
//				Scheduler:         pulumi.String("WRR"),
//				TargetType:        pulumi.String("TARGETGROUP"),
//			})
//			if err != nil {
//				return err
//			}
//			test, err := Clb.NewTargetGroup(ctx, "test", &Clb.TargetGroupArgs{
//				TargetGroupName: pulumi.String("test-target-keep-1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Clb.NewTargetGroupAttachment(ctx, "group", &Clb.TargetGroupAttachmentArgs{
//				ClbId:         clbBasic.ID(),
//				ListenerId:    listenerBasic.ListenerId,
//				RuleId:        ruleBasic.RuleId,
//				TargetGroupId: test.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CLB target group attachment can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Clb/targetGroupAttachment:TargetGroupAttachment group lbtg-odareyb2#lbl-bicjmx3i#lb-cv0iz74c#loc-ac6uk7b6
//
// ```
type TargetGroupAttachment struct {
	pulumi.CustomResourceState

	// ID of the CLB.
	ClbId pulumi.StringOutput `pulumi:"clbId"`
	// ID of the CLB listener.
	ListenerId pulumi.StringOutput `pulumi:"listenerId"`
	// ID of the CLB listener rule.
	RuleId pulumi.StringPtrOutput `pulumi:"ruleId"`
	// ID of the CLB target group.
	TargetGroupId pulumi.StringPtrOutput `pulumi:"targetGroupId"`
	// It has been deprecated from version 1.47.1. Use `targetGroupId` instead. ID of the CLB target group.
	//
	// Deprecated: It has been deprecated from version 1.47.1. Use `target_group_id` instead.
	TargrtGroupId pulumi.StringPtrOutput `pulumi:"targrtGroupId"`
}

// NewTargetGroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewTargetGroupAttachment(ctx *pulumi.Context,
	name string, args *TargetGroupAttachmentArgs, opts ...pulumi.ResourceOption) (*TargetGroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClbId == nil {
		return nil, errors.New("invalid value for required argument 'ClbId'")
	}
	if args.ListenerId == nil {
		return nil, errors.New("invalid value for required argument 'ListenerId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TargetGroupAttachment
	err := ctx.RegisterResource("tencentcloud:Clb/targetGroupAttachment:TargetGroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetGroupAttachment gets an existing TargetGroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetGroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetGroupAttachmentState, opts ...pulumi.ResourceOption) (*TargetGroupAttachment, error) {
	var resource TargetGroupAttachment
	err := ctx.ReadResource("tencentcloud:Clb/targetGroupAttachment:TargetGroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetGroupAttachment resources.
type targetGroupAttachmentState struct {
	// ID of the CLB.
	ClbId *string `pulumi:"clbId"`
	// ID of the CLB listener.
	ListenerId *string `pulumi:"listenerId"`
	// ID of the CLB listener rule.
	RuleId *string `pulumi:"ruleId"`
	// ID of the CLB target group.
	TargetGroupId *string `pulumi:"targetGroupId"`
	// It has been deprecated from version 1.47.1. Use `targetGroupId` instead. ID of the CLB target group.
	//
	// Deprecated: It has been deprecated from version 1.47.1. Use `target_group_id` instead.
	TargrtGroupId *string `pulumi:"targrtGroupId"`
}

type TargetGroupAttachmentState struct {
	// ID of the CLB.
	ClbId pulumi.StringPtrInput
	// ID of the CLB listener.
	ListenerId pulumi.StringPtrInput
	// ID of the CLB listener rule.
	RuleId pulumi.StringPtrInput
	// ID of the CLB target group.
	TargetGroupId pulumi.StringPtrInput
	// It has been deprecated from version 1.47.1. Use `targetGroupId` instead. ID of the CLB target group.
	//
	// Deprecated: It has been deprecated from version 1.47.1. Use `target_group_id` instead.
	TargrtGroupId pulumi.StringPtrInput
}

func (TargetGroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetGroupAttachmentState)(nil)).Elem()
}

type targetGroupAttachmentArgs struct {
	// ID of the CLB.
	ClbId string `pulumi:"clbId"`
	// ID of the CLB listener.
	ListenerId string `pulumi:"listenerId"`
	// ID of the CLB listener rule.
	RuleId *string `pulumi:"ruleId"`
	// ID of the CLB target group.
	TargetGroupId *string `pulumi:"targetGroupId"`
	// It has been deprecated from version 1.47.1. Use `targetGroupId` instead. ID of the CLB target group.
	//
	// Deprecated: It has been deprecated from version 1.47.1. Use `target_group_id` instead.
	TargrtGroupId *string `pulumi:"targrtGroupId"`
}

// The set of arguments for constructing a TargetGroupAttachment resource.
type TargetGroupAttachmentArgs struct {
	// ID of the CLB.
	ClbId pulumi.StringInput
	// ID of the CLB listener.
	ListenerId pulumi.StringInput
	// ID of the CLB listener rule.
	RuleId pulumi.StringPtrInput
	// ID of the CLB target group.
	TargetGroupId pulumi.StringPtrInput
	// It has been deprecated from version 1.47.1. Use `targetGroupId` instead. ID of the CLB target group.
	//
	// Deprecated: It has been deprecated from version 1.47.1. Use `target_group_id` instead.
	TargrtGroupId pulumi.StringPtrInput
}

func (TargetGroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetGroupAttachmentArgs)(nil)).Elem()
}

type TargetGroupAttachmentInput interface {
	pulumi.Input

	ToTargetGroupAttachmentOutput() TargetGroupAttachmentOutput
	ToTargetGroupAttachmentOutputWithContext(ctx context.Context) TargetGroupAttachmentOutput
}

func (*TargetGroupAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupAttachment)(nil)).Elem()
}

func (i *TargetGroupAttachment) ToTargetGroupAttachmentOutput() TargetGroupAttachmentOutput {
	return i.ToTargetGroupAttachmentOutputWithContext(context.Background())
}

func (i *TargetGroupAttachment) ToTargetGroupAttachmentOutputWithContext(ctx context.Context) TargetGroupAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttachmentOutput)
}

// TargetGroupAttachmentArrayInput is an input type that accepts TargetGroupAttachmentArray and TargetGroupAttachmentArrayOutput values.
// You can construct a concrete instance of `TargetGroupAttachmentArrayInput` via:
//
//	TargetGroupAttachmentArray{ TargetGroupAttachmentArgs{...} }
type TargetGroupAttachmentArrayInput interface {
	pulumi.Input

	ToTargetGroupAttachmentArrayOutput() TargetGroupAttachmentArrayOutput
	ToTargetGroupAttachmentArrayOutputWithContext(context.Context) TargetGroupAttachmentArrayOutput
}

type TargetGroupAttachmentArray []TargetGroupAttachmentInput

func (TargetGroupAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TargetGroupAttachment)(nil)).Elem()
}

func (i TargetGroupAttachmentArray) ToTargetGroupAttachmentArrayOutput() TargetGroupAttachmentArrayOutput {
	return i.ToTargetGroupAttachmentArrayOutputWithContext(context.Background())
}

func (i TargetGroupAttachmentArray) ToTargetGroupAttachmentArrayOutputWithContext(ctx context.Context) TargetGroupAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttachmentArrayOutput)
}

// TargetGroupAttachmentMapInput is an input type that accepts TargetGroupAttachmentMap and TargetGroupAttachmentMapOutput values.
// You can construct a concrete instance of `TargetGroupAttachmentMapInput` via:
//
//	TargetGroupAttachmentMap{ "key": TargetGroupAttachmentArgs{...} }
type TargetGroupAttachmentMapInput interface {
	pulumi.Input

	ToTargetGroupAttachmentMapOutput() TargetGroupAttachmentMapOutput
	ToTargetGroupAttachmentMapOutputWithContext(context.Context) TargetGroupAttachmentMapOutput
}

type TargetGroupAttachmentMap map[string]TargetGroupAttachmentInput

func (TargetGroupAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TargetGroupAttachment)(nil)).Elem()
}

func (i TargetGroupAttachmentMap) ToTargetGroupAttachmentMapOutput() TargetGroupAttachmentMapOutput {
	return i.ToTargetGroupAttachmentMapOutputWithContext(context.Background())
}

func (i TargetGroupAttachmentMap) ToTargetGroupAttachmentMapOutputWithContext(ctx context.Context) TargetGroupAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttachmentMapOutput)
}

type TargetGroupAttachmentOutput struct{ *pulumi.OutputState }

func (TargetGroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupAttachment)(nil)).Elem()
}

func (o TargetGroupAttachmentOutput) ToTargetGroupAttachmentOutput() TargetGroupAttachmentOutput {
	return o
}

func (o TargetGroupAttachmentOutput) ToTargetGroupAttachmentOutputWithContext(ctx context.Context) TargetGroupAttachmentOutput {
	return o
}

// ID of the CLB.
func (o TargetGroupAttachmentOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetGroupAttachment) pulumi.StringOutput { return v.ClbId }).(pulumi.StringOutput)
}

// ID of the CLB listener.
func (o TargetGroupAttachmentOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetGroupAttachment) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

// ID of the CLB listener rule.
func (o TargetGroupAttachmentOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupAttachment) pulumi.StringPtrOutput { return v.RuleId }).(pulumi.StringPtrOutput)
}

// ID of the CLB target group.
func (o TargetGroupAttachmentOutput) TargetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupAttachment) pulumi.StringPtrOutput { return v.TargetGroupId }).(pulumi.StringPtrOutput)
}

// It has been deprecated from version 1.47.1. Use `targetGroupId` instead. ID of the CLB target group.
//
// Deprecated: It has been deprecated from version 1.47.1. Use `target_group_id` instead.
func (o TargetGroupAttachmentOutput) TargrtGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupAttachment) pulumi.StringPtrOutput { return v.TargrtGroupId }).(pulumi.StringPtrOutput)
}

type TargetGroupAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TargetGroupAttachment)(nil)).Elem()
}

func (o TargetGroupAttachmentArrayOutput) ToTargetGroupAttachmentArrayOutput() TargetGroupAttachmentArrayOutput {
	return o
}

func (o TargetGroupAttachmentArrayOutput) ToTargetGroupAttachmentArrayOutputWithContext(ctx context.Context) TargetGroupAttachmentArrayOutput {
	return o
}

func (o TargetGroupAttachmentArrayOutput) Index(i pulumi.IntInput) TargetGroupAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TargetGroupAttachment {
		return vs[0].([]*TargetGroupAttachment)[vs[1].(int)]
	}).(TargetGroupAttachmentOutput)
}

type TargetGroupAttachmentMapOutput struct{ *pulumi.OutputState }

func (TargetGroupAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TargetGroupAttachment)(nil)).Elem()
}

func (o TargetGroupAttachmentMapOutput) ToTargetGroupAttachmentMapOutput() TargetGroupAttachmentMapOutput {
	return o
}

func (o TargetGroupAttachmentMapOutput) ToTargetGroupAttachmentMapOutputWithContext(ctx context.Context) TargetGroupAttachmentMapOutput {
	return o
}

func (o TargetGroupAttachmentMapOutput) MapIndex(k pulumi.StringInput) TargetGroupAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TargetGroupAttachment {
		return vs[0].(map[string]*TargetGroupAttachment)[vs[1].(string)]
	}).(TargetGroupAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttachmentInput)(nil)).Elem(), &TargetGroupAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttachmentArrayInput)(nil)).Elem(), TargetGroupAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttachmentMapInput)(nil)).Elem(), TargetGroupAttachmentMap{})
	pulumi.RegisterOutputType(TargetGroupAttachmentOutput{})
	pulumi.RegisterOutputType(TargetGroupAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupAttachmentMapOutput{})
}
