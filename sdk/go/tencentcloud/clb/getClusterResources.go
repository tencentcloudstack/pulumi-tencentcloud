// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of clb clusterResources
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Clb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Clb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Clb.GetClusterResources(ctx, &clb.GetClusterResourcesArgs{
//				Filters: []clb.GetClusterResourcesFilter{
//					clb.GetClusterResourcesFilter{
//						Name: "idle",
//						Values: []string{
//							"True",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClusterResources(ctx *pulumi.Context, args *GetClusterResourcesArgs, opts ...pulumi.InvokeOption) (*GetClusterResourcesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetClusterResourcesResult
	err := ctx.Invoke("tencentcloud:Clb/getClusterResources:getClusterResources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterResources.
type GetClusterResourcesArgs struct {
	// Filter conditions to query cluster. cluster-id - String - Required: No - (Filter condition) Filter by cluster ID, such as tgw-12345678. vip - String - Required: No - (Filter condition) Filter by loadbalancer vip, such as 192.168.0.1. loadblancer-id - String - Required: No - (Filter condition) Filter by loadblancer ID, such as lbl-12345678. idle - String - Required: No - (Filter condition) Filter by Whether load balancing is idle, such as True, False.
	Filters []GetClusterResourcesFilter `pulumi:"filters"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getClusterResources.
type GetClusterResourcesResult struct {
	// Cluster resource set.
	ClusterResourceSets []GetClusterResourcesClusterResourceSet `pulumi:"clusterResourceSets"`
	Filters             []GetClusterResourcesFilter             `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetClusterResourcesOutput(ctx *pulumi.Context, args GetClusterResourcesOutputArgs, opts ...pulumi.InvokeOption) GetClusterResourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClusterResourcesResult, error) {
			args := v.(GetClusterResourcesArgs)
			r, err := GetClusterResources(ctx, &args, opts...)
			var s GetClusterResourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClusterResourcesResultOutput)
}

// A collection of arguments for invoking getClusterResources.
type GetClusterResourcesOutputArgs struct {
	// Filter conditions to query cluster. cluster-id - String - Required: No - (Filter condition) Filter by cluster ID, such as tgw-12345678. vip - String - Required: No - (Filter condition) Filter by loadbalancer vip, such as 192.168.0.1. loadblancer-id - String - Required: No - (Filter condition) Filter by loadblancer ID, such as lbl-12345678. idle - String - Required: No - (Filter condition) Filter by Whether load balancing is idle, such as True, False.
	Filters GetClusterResourcesFilterArrayInput `pulumi:"filters"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetClusterResourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourcesArgs)(nil)).Elem()
}

// A collection of values returned by getClusterResources.
type GetClusterResourcesResultOutput struct{ *pulumi.OutputState }

func (GetClusterResourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourcesResult)(nil)).Elem()
}

func (o GetClusterResourcesResultOutput) ToGetClusterResourcesResultOutput() GetClusterResourcesResultOutput {
	return o
}

func (o GetClusterResourcesResultOutput) ToGetClusterResourcesResultOutputWithContext(ctx context.Context) GetClusterResourcesResultOutput {
	return o
}

// Cluster resource set.
func (o GetClusterResourcesResultOutput) ClusterResourceSets() GetClusterResourcesClusterResourceSetArrayOutput {
	return o.ApplyT(func(v GetClusterResourcesResult) []GetClusterResourcesClusterResourceSet {
		return v.ClusterResourceSets
	}).(GetClusterResourcesClusterResourceSetArrayOutput)
}

func (o GetClusterResourcesResultOutput) Filters() GetClusterResourcesFilterArrayOutput {
	return o.ApplyT(func(v GetClusterResourcesResult) []GetClusterResourcesFilter { return v.Filters }).(GetClusterResourcesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterResourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterResourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterResourcesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClusterResourcesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterResourcesResultOutput{})
}
