// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a CLB redirection.
//
// ## Example Usage
// ### Manual Rewrite
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Clb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Clb.NewRedirection(ctx, "foo", &Clb.RedirectionArgs{
//				ClbId:            pulumi.String("lb-p7olt9e5"),
//				SourceListenerId: pulumi.String("lbl-jc1dx6ju"),
//				SourceRuleId:     pulumi.String("loc-ft8fmngv"),
//				TargetListenerId: pulumi.String("lbl-asj1hzuo"),
//				TargetRuleId:     pulumi.String("loc-4xxr2cy7"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Auto Rewrite
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Clb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Clb.NewRedirection(ctx, "foo", &Clb.RedirectionArgs{
//				ClbId:            pulumi.String("lb-p7olt9e5"),
//				IsAutoRewrite:    pulumi.Bool(true),
//				TargetListenerId: pulumi.String("lbl-asj1hzuo"),
//				TargetRuleId:     pulumi.String("loc-4xxr2cy7"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CLB redirection can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Clb/redirection:Redirection foo loc-ft8fmngv#loc-4xxr2cy7#lbl-jc1dx6ju#lbl-asj1hzuo#lb-p7olt9e5
//
// ```
type Redirection struct {
	pulumi.CustomResourceState

	// ID of CLB instance.
	ClbId pulumi.StringOutput `pulumi:"clbId"`
	// Indicates whether delete all auto redirection. Default is `false`. It will take effect only when this redirection is auto-rewrite and this auto-rewrite auto redirected more than one rules. All the auto-rewrite relations will be deleted when this parameter set true.
	DeleteAllAutoRewrite pulumi.BoolPtrOutput `pulumi:"deleteAllAutoRewrite"`
	// Indicates whether automatic forwarding is enable, default is `false`. If enabled, the source listener and location should be empty, the target listener must be https protocol and port is 443.
	IsAutoRewrite pulumi.BoolPtrOutput `pulumi:"isAutoRewrite"`
	// ID of source listener.
	SourceListenerId pulumi.StringOutput `pulumi:"sourceListenerId"`
	// Rule ID of source listener.
	SourceRuleId pulumi.StringOutput `pulumi:"sourceRuleId"`
	// ID of source listener.
	TargetListenerId pulumi.StringOutput `pulumi:"targetListenerId"`
	// Rule ID of target listener.
	TargetRuleId pulumi.StringOutput `pulumi:"targetRuleId"`
}

// NewRedirection registers a new resource with the given unique name, arguments, and options.
func NewRedirection(ctx *pulumi.Context,
	name string, args *RedirectionArgs, opts ...pulumi.ResourceOption) (*Redirection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClbId == nil {
		return nil, errors.New("invalid value for required argument 'ClbId'")
	}
	if args.TargetListenerId == nil {
		return nil, errors.New("invalid value for required argument 'TargetListenerId'")
	}
	if args.TargetRuleId == nil {
		return nil, errors.New("invalid value for required argument 'TargetRuleId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Redirection
	err := ctx.RegisterResource("tencentcloud:Clb/redirection:Redirection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRedirection gets an existing Redirection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRedirection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RedirectionState, opts ...pulumi.ResourceOption) (*Redirection, error) {
	var resource Redirection
	err := ctx.ReadResource("tencentcloud:Clb/redirection:Redirection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Redirection resources.
type redirectionState struct {
	// ID of CLB instance.
	ClbId *string `pulumi:"clbId"`
	// Indicates whether delete all auto redirection. Default is `false`. It will take effect only when this redirection is auto-rewrite and this auto-rewrite auto redirected more than one rules. All the auto-rewrite relations will be deleted when this parameter set true.
	DeleteAllAutoRewrite *bool `pulumi:"deleteAllAutoRewrite"`
	// Indicates whether automatic forwarding is enable, default is `false`. If enabled, the source listener and location should be empty, the target listener must be https protocol and port is 443.
	IsAutoRewrite *bool `pulumi:"isAutoRewrite"`
	// ID of source listener.
	SourceListenerId *string `pulumi:"sourceListenerId"`
	// Rule ID of source listener.
	SourceRuleId *string `pulumi:"sourceRuleId"`
	// ID of source listener.
	TargetListenerId *string `pulumi:"targetListenerId"`
	// Rule ID of target listener.
	TargetRuleId *string `pulumi:"targetRuleId"`
}

type RedirectionState struct {
	// ID of CLB instance.
	ClbId pulumi.StringPtrInput
	// Indicates whether delete all auto redirection. Default is `false`. It will take effect only when this redirection is auto-rewrite and this auto-rewrite auto redirected more than one rules. All the auto-rewrite relations will be deleted when this parameter set true.
	DeleteAllAutoRewrite pulumi.BoolPtrInput
	// Indicates whether automatic forwarding is enable, default is `false`. If enabled, the source listener and location should be empty, the target listener must be https protocol and port is 443.
	IsAutoRewrite pulumi.BoolPtrInput
	// ID of source listener.
	SourceListenerId pulumi.StringPtrInput
	// Rule ID of source listener.
	SourceRuleId pulumi.StringPtrInput
	// ID of source listener.
	TargetListenerId pulumi.StringPtrInput
	// Rule ID of target listener.
	TargetRuleId pulumi.StringPtrInput
}

func (RedirectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*redirectionState)(nil)).Elem()
}

type redirectionArgs struct {
	// ID of CLB instance.
	ClbId string `pulumi:"clbId"`
	// Indicates whether delete all auto redirection. Default is `false`. It will take effect only when this redirection is auto-rewrite and this auto-rewrite auto redirected more than one rules. All the auto-rewrite relations will be deleted when this parameter set true.
	DeleteAllAutoRewrite *bool `pulumi:"deleteAllAutoRewrite"`
	// Indicates whether automatic forwarding is enable, default is `false`. If enabled, the source listener and location should be empty, the target listener must be https protocol and port is 443.
	IsAutoRewrite *bool `pulumi:"isAutoRewrite"`
	// ID of source listener.
	SourceListenerId *string `pulumi:"sourceListenerId"`
	// Rule ID of source listener.
	SourceRuleId *string `pulumi:"sourceRuleId"`
	// ID of source listener.
	TargetListenerId string `pulumi:"targetListenerId"`
	// Rule ID of target listener.
	TargetRuleId string `pulumi:"targetRuleId"`
}

// The set of arguments for constructing a Redirection resource.
type RedirectionArgs struct {
	// ID of CLB instance.
	ClbId pulumi.StringInput
	// Indicates whether delete all auto redirection. Default is `false`. It will take effect only when this redirection is auto-rewrite and this auto-rewrite auto redirected more than one rules. All the auto-rewrite relations will be deleted when this parameter set true.
	DeleteAllAutoRewrite pulumi.BoolPtrInput
	// Indicates whether automatic forwarding is enable, default is `false`. If enabled, the source listener and location should be empty, the target listener must be https protocol and port is 443.
	IsAutoRewrite pulumi.BoolPtrInput
	// ID of source listener.
	SourceListenerId pulumi.StringPtrInput
	// Rule ID of source listener.
	SourceRuleId pulumi.StringPtrInput
	// ID of source listener.
	TargetListenerId pulumi.StringInput
	// Rule ID of target listener.
	TargetRuleId pulumi.StringInput
}

func (RedirectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*redirectionArgs)(nil)).Elem()
}

type RedirectionInput interface {
	pulumi.Input

	ToRedirectionOutput() RedirectionOutput
	ToRedirectionOutputWithContext(ctx context.Context) RedirectionOutput
}

func (*Redirection) ElementType() reflect.Type {
	return reflect.TypeOf((**Redirection)(nil)).Elem()
}

func (i *Redirection) ToRedirectionOutput() RedirectionOutput {
	return i.ToRedirectionOutputWithContext(context.Background())
}

func (i *Redirection) ToRedirectionOutputWithContext(ctx context.Context) RedirectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectionOutput)
}

// RedirectionArrayInput is an input type that accepts RedirectionArray and RedirectionArrayOutput values.
// You can construct a concrete instance of `RedirectionArrayInput` via:
//
//	RedirectionArray{ RedirectionArgs{...} }
type RedirectionArrayInput interface {
	pulumi.Input

	ToRedirectionArrayOutput() RedirectionArrayOutput
	ToRedirectionArrayOutputWithContext(context.Context) RedirectionArrayOutput
}

type RedirectionArray []RedirectionInput

func (RedirectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Redirection)(nil)).Elem()
}

func (i RedirectionArray) ToRedirectionArrayOutput() RedirectionArrayOutput {
	return i.ToRedirectionArrayOutputWithContext(context.Background())
}

func (i RedirectionArray) ToRedirectionArrayOutputWithContext(ctx context.Context) RedirectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectionArrayOutput)
}

// RedirectionMapInput is an input type that accepts RedirectionMap and RedirectionMapOutput values.
// You can construct a concrete instance of `RedirectionMapInput` via:
//
//	RedirectionMap{ "key": RedirectionArgs{...} }
type RedirectionMapInput interface {
	pulumi.Input

	ToRedirectionMapOutput() RedirectionMapOutput
	ToRedirectionMapOutputWithContext(context.Context) RedirectionMapOutput
}

type RedirectionMap map[string]RedirectionInput

func (RedirectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Redirection)(nil)).Elem()
}

func (i RedirectionMap) ToRedirectionMapOutput() RedirectionMapOutput {
	return i.ToRedirectionMapOutputWithContext(context.Background())
}

func (i RedirectionMap) ToRedirectionMapOutputWithContext(ctx context.Context) RedirectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectionMapOutput)
}

type RedirectionOutput struct{ *pulumi.OutputState }

func (RedirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Redirection)(nil)).Elem()
}

func (o RedirectionOutput) ToRedirectionOutput() RedirectionOutput {
	return o
}

func (o RedirectionOutput) ToRedirectionOutputWithContext(ctx context.Context) RedirectionOutput {
	return o
}

// ID of CLB instance.
func (o RedirectionOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v *Redirection) pulumi.StringOutput { return v.ClbId }).(pulumi.StringOutput)
}

// Indicates whether delete all auto redirection. Default is `false`. It will take effect only when this redirection is auto-rewrite and this auto-rewrite auto redirected more than one rules. All the auto-rewrite relations will be deleted when this parameter set true.
func (o RedirectionOutput) DeleteAllAutoRewrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Redirection) pulumi.BoolPtrOutput { return v.DeleteAllAutoRewrite }).(pulumi.BoolPtrOutput)
}

// Indicates whether automatic forwarding is enable, default is `false`. If enabled, the source listener and location should be empty, the target listener must be https protocol and port is 443.
func (o RedirectionOutput) IsAutoRewrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Redirection) pulumi.BoolPtrOutput { return v.IsAutoRewrite }).(pulumi.BoolPtrOutput)
}

// ID of source listener.
func (o RedirectionOutput) SourceListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Redirection) pulumi.StringOutput { return v.SourceListenerId }).(pulumi.StringOutput)
}

// Rule ID of source listener.
func (o RedirectionOutput) SourceRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *Redirection) pulumi.StringOutput { return v.SourceRuleId }).(pulumi.StringOutput)
}

// ID of source listener.
func (o RedirectionOutput) TargetListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Redirection) pulumi.StringOutput { return v.TargetListenerId }).(pulumi.StringOutput)
}

// Rule ID of target listener.
func (o RedirectionOutput) TargetRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *Redirection) pulumi.StringOutput { return v.TargetRuleId }).(pulumi.StringOutput)
}

type RedirectionArrayOutput struct{ *pulumi.OutputState }

func (RedirectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Redirection)(nil)).Elem()
}

func (o RedirectionArrayOutput) ToRedirectionArrayOutput() RedirectionArrayOutput {
	return o
}

func (o RedirectionArrayOutput) ToRedirectionArrayOutputWithContext(ctx context.Context) RedirectionArrayOutput {
	return o
}

func (o RedirectionArrayOutput) Index(i pulumi.IntInput) RedirectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Redirection {
		return vs[0].([]*Redirection)[vs[1].(int)]
	}).(RedirectionOutput)
}

type RedirectionMapOutput struct{ *pulumi.OutputState }

func (RedirectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Redirection)(nil)).Elem()
}

func (o RedirectionMapOutput) ToRedirectionMapOutput() RedirectionMapOutput {
	return o
}

func (o RedirectionMapOutput) ToRedirectionMapOutputWithContext(ctx context.Context) RedirectionMapOutput {
	return o
}

func (o RedirectionMapOutput) MapIndex(k pulumi.StringInput) RedirectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Redirection {
		return vs[0].(map[string]*Redirection)[vs[1].(string)]
	}).(RedirectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RedirectionInput)(nil)).Elem(), &Redirection{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedirectionArrayInput)(nil)).Elem(), RedirectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedirectionMapInput)(nil)).Elem(), RedirectionMap{})
	pulumi.RegisterOutputType(RedirectionOutput{})
	pulumi.RegisterOutputType(RedirectionArrayOutput{})
	pulumi.RegisterOutputType(RedirectionMapOutput{})
}
