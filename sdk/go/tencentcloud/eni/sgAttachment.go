// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eni

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a eniSgAttachment
//
// > **Note:** If this resource is used to bind security groups to eni, it cannot be linked to `tentcloudEni` binding security group for simultaneous use.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Availability"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Eni"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Security"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			zones, err := Availability.GetZonesByProduct(ctx, &availability.GetZonesByProductArgs{
//				Product: "vpc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(zones.Zones[0].Name),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.0.0/16"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			example1, err := Security.NewGroup(ctx, "example1", &Security.GroupArgs{
//				Description: pulumi.String("sg desc."),
//				ProjectId:   pulumi.Int(0),
//				Tags: pulumi.AnyMap{
//					"example": pulumi.Any("test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			example2, err := Security.NewGroup(ctx, "example2", &Security.GroupArgs{
//				Description: pulumi.String("sg desc."),
//				ProjectId:   pulumi.Int(0),
//				Tags: pulumi.AnyMap{
//					"example": pulumi.Any("test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			example, err := Eni.NewInstance(ctx, "example", &Eni.InstanceArgs{
//				VpcId:       vpc.ID(),
//				SubnetId:    subnet.ID(),
//				Description: pulumi.String("eni desc."),
//				Ipv4Count:   pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Eni.NewSgAttachment(ctx, "eniSgAttachment", &Eni.SgAttachmentArgs{
//				NetworkInterfaceIds: pulumi.String{
//					example.ID(),
//				},
//				SecurityGroupIds: pulumi.StringArray{
//					example1.ID(),
//					example2.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// vpc eni_sg_attachment can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Eni/sgAttachment:SgAttachment eni_sg_attachment eni_sg_attachment_id
//
// ```
type SgAttachment struct {
	pulumi.CustomResourceState

	// ENI instance ID. Such as:eni-pxir56ns. It Only support set one eni instance now.
	NetworkInterfaceIds pulumi.StringOutput `pulumi:"networkInterfaceIds"`
	// Security group instance ID, for example:sg-33ocnj9n, can be obtained through DescribeSecurityGroups. There is a limit of 100 instances per request.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
}

// NewSgAttachment registers a new resource with the given unique name, arguments, and options.
func NewSgAttachment(ctx *pulumi.Context,
	name string, args *SgAttachmentArgs, opts ...pulumi.ResourceOption) (*SgAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkInterfaceIds == nil {
		return nil, errors.New("invalid value for required argument 'NetworkInterfaceIds'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SgAttachment
	err := ctx.RegisterResource("tencentcloud:Eni/sgAttachment:SgAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSgAttachment gets an existing SgAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSgAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SgAttachmentState, opts ...pulumi.ResourceOption) (*SgAttachment, error) {
	var resource SgAttachment
	err := ctx.ReadResource("tencentcloud:Eni/sgAttachment:SgAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SgAttachment resources.
type sgAttachmentState struct {
	// ENI instance ID. Such as:eni-pxir56ns. It Only support set one eni instance now.
	NetworkInterfaceIds *string `pulumi:"networkInterfaceIds"`
	// Security group instance ID, for example:sg-33ocnj9n, can be obtained through DescribeSecurityGroups. There is a limit of 100 instances per request.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

type SgAttachmentState struct {
	// ENI instance ID. Such as:eni-pxir56ns. It Only support set one eni instance now.
	NetworkInterfaceIds pulumi.StringPtrInput
	// Security group instance ID, for example:sg-33ocnj9n, can be obtained through DescribeSecurityGroups. There is a limit of 100 instances per request.
	SecurityGroupIds pulumi.StringArrayInput
}

func (SgAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*sgAttachmentState)(nil)).Elem()
}

type sgAttachmentArgs struct {
	// ENI instance ID. Such as:eni-pxir56ns. It Only support set one eni instance now.
	NetworkInterfaceIds string `pulumi:"networkInterfaceIds"`
	// Security group instance ID, for example:sg-33ocnj9n, can be obtained through DescribeSecurityGroups. There is a limit of 100 instances per request.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

// The set of arguments for constructing a SgAttachment resource.
type SgAttachmentArgs struct {
	// ENI instance ID. Such as:eni-pxir56ns. It Only support set one eni instance now.
	NetworkInterfaceIds pulumi.StringInput
	// Security group instance ID, for example:sg-33ocnj9n, can be obtained through DescribeSecurityGroups. There is a limit of 100 instances per request.
	SecurityGroupIds pulumi.StringArrayInput
}

func (SgAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sgAttachmentArgs)(nil)).Elem()
}

type SgAttachmentInput interface {
	pulumi.Input

	ToSgAttachmentOutput() SgAttachmentOutput
	ToSgAttachmentOutputWithContext(ctx context.Context) SgAttachmentOutput
}

func (*SgAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**SgAttachment)(nil)).Elem()
}

func (i *SgAttachment) ToSgAttachmentOutput() SgAttachmentOutput {
	return i.ToSgAttachmentOutputWithContext(context.Background())
}

func (i *SgAttachment) ToSgAttachmentOutputWithContext(ctx context.Context) SgAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SgAttachmentOutput)
}

// SgAttachmentArrayInput is an input type that accepts SgAttachmentArray and SgAttachmentArrayOutput values.
// You can construct a concrete instance of `SgAttachmentArrayInput` via:
//
//	SgAttachmentArray{ SgAttachmentArgs{...} }
type SgAttachmentArrayInput interface {
	pulumi.Input

	ToSgAttachmentArrayOutput() SgAttachmentArrayOutput
	ToSgAttachmentArrayOutputWithContext(context.Context) SgAttachmentArrayOutput
}

type SgAttachmentArray []SgAttachmentInput

func (SgAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SgAttachment)(nil)).Elem()
}

func (i SgAttachmentArray) ToSgAttachmentArrayOutput() SgAttachmentArrayOutput {
	return i.ToSgAttachmentArrayOutputWithContext(context.Background())
}

func (i SgAttachmentArray) ToSgAttachmentArrayOutputWithContext(ctx context.Context) SgAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SgAttachmentArrayOutput)
}

// SgAttachmentMapInput is an input type that accepts SgAttachmentMap and SgAttachmentMapOutput values.
// You can construct a concrete instance of `SgAttachmentMapInput` via:
//
//	SgAttachmentMap{ "key": SgAttachmentArgs{...} }
type SgAttachmentMapInput interface {
	pulumi.Input

	ToSgAttachmentMapOutput() SgAttachmentMapOutput
	ToSgAttachmentMapOutputWithContext(context.Context) SgAttachmentMapOutput
}

type SgAttachmentMap map[string]SgAttachmentInput

func (SgAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SgAttachment)(nil)).Elem()
}

func (i SgAttachmentMap) ToSgAttachmentMapOutput() SgAttachmentMapOutput {
	return i.ToSgAttachmentMapOutputWithContext(context.Background())
}

func (i SgAttachmentMap) ToSgAttachmentMapOutputWithContext(ctx context.Context) SgAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SgAttachmentMapOutput)
}

type SgAttachmentOutput struct{ *pulumi.OutputState }

func (SgAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SgAttachment)(nil)).Elem()
}

func (o SgAttachmentOutput) ToSgAttachmentOutput() SgAttachmentOutput {
	return o
}

func (o SgAttachmentOutput) ToSgAttachmentOutputWithContext(ctx context.Context) SgAttachmentOutput {
	return o
}

// ENI instance ID. Such as:eni-pxir56ns. It Only support set one eni instance now.
func (o SgAttachmentOutput) NetworkInterfaceIds() pulumi.StringOutput {
	return o.ApplyT(func(v *SgAttachment) pulumi.StringOutput { return v.NetworkInterfaceIds }).(pulumi.StringOutput)
}

// Security group instance ID, for example:sg-33ocnj9n, can be obtained through DescribeSecurityGroups. There is a limit of 100 instances per request.
func (o SgAttachmentOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SgAttachment) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

type SgAttachmentArrayOutput struct{ *pulumi.OutputState }

func (SgAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SgAttachment)(nil)).Elem()
}

func (o SgAttachmentArrayOutput) ToSgAttachmentArrayOutput() SgAttachmentArrayOutput {
	return o
}

func (o SgAttachmentArrayOutput) ToSgAttachmentArrayOutputWithContext(ctx context.Context) SgAttachmentArrayOutput {
	return o
}

func (o SgAttachmentArrayOutput) Index(i pulumi.IntInput) SgAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SgAttachment {
		return vs[0].([]*SgAttachment)[vs[1].(int)]
	}).(SgAttachmentOutput)
}

type SgAttachmentMapOutput struct{ *pulumi.OutputState }

func (SgAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SgAttachment)(nil)).Elem()
}

func (o SgAttachmentMapOutput) ToSgAttachmentMapOutput() SgAttachmentMapOutput {
	return o
}

func (o SgAttachmentMapOutput) ToSgAttachmentMapOutputWithContext(ctx context.Context) SgAttachmentMapOutput {
	return o
}

func (o SgAttachmentMapOutput) MapIndex(k pulumi.StringInput) SgAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SgAttachment {
		return vs[0].(map[string]*SgAttachment)[vs[1].(string)]
	}).(SgAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SgAttachmentInput)(nil)).Elem(), &SgAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*SgAttachmentArrayInput)(nil)).Elem(), SgAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SgAttachmentMapInput)(nil)).Elem(), SgAttachmentMap{})
	pulumi.RegisterOutputType(SgAttachmentOutput{})
	pulumi.RegisterOutputType(SgAttachmentArrayOutput{})
	pulumi.RegisterOutputType(SgAttachmentMapOutput{})
}
