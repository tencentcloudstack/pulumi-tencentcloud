// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dlc describeWorkGroupInfo
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dlc.GetDescribeWorkGroupInfo(ctx, &dlc.GetDescribeWorkGroupInfoArgs{
//				SortBy:      pulumi.StringRef("create-time"),
//				Sorting:     pulumi.StringRef("desc"),
//				Type:        pulumi.StringRef("User"),
//				WorkGroupId: pulumi.IntRef(23181),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDescribeWorkGroupInfo(ctx *pulumi.Context, args *GetDescribeWorkGroupInfoArgs, opts ...pulumi.InvokeOption) (*GetDescribeWorkGroupInfoResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDescribeWorkGroupInfoResult
	err := ctx.Invoke("tencentcloud:Dlc/getDescribeWorkGroupInfo:getDescribeWorkGroupInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDescribeWorkGroupInfo.
type GetDescribeWorkGroupInfoArgs struct {
	// Query filter conditions. when Type is User, fuzzy search with Key as user-name is supported; when Type is DataAuth, key is supported; policy-type: permission type; policy-source: data source; data-name: database table fuzzy search; when Type is EngineAuth, supports key; policy-type: permission type; policy-source: data source; engine-name: fuzzy search of library tables.
	Filters []GetDescribeWorkGroupInfoFilter `pulumi:"filters"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Sorting fields, when Type is User, support create-time, user-name, when type is DataAuth, support create-time, when type is EngineAuth, support create-time.
	SortBy *string `pulumi:"sortBy"`
	// Sorting method, desc means forward order, asc means reverse order, the default is asc.
	Sorting *string `pulumi:"sorting"`
	// Query information type, only support: User: user information/DataAuth: data permission/EngineAuth: engine permission.
	Type *string `pulumi:"type"`
	// Work group id.
	WorkGroupId *int `pulumi:"workGroupId"`
}

// A collection of values returned by getDescribeWorkGroupInfo.
type GetDescribeWorkGroupInfoResult struct {
	Filters []GetDescribeWorkGroupInfoFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SortBy           *string `pulumi:"sortBy"`
	Sorting          *string `pulumi:"sorting"`
	// The type of information contained. User: user information; DataAuth: data permissions; EngineAuth: engine permissions.
	Type *string `pulumi:"type"`
	// Work group id.
	WorkGroupId *int `pulumi:"workGroupId"`
	// Workgroup details.
	WorkGroupInfos []GetDescribeWorkGroupInfoWorkGroupInfo `pulumi:"workGroupInfos"`
}

func GetDescribeWorkGroupInfoOutput(ctx *pulumi.Context, args GetDescribeWorkGroupInfoOutputArgs, opts ...pulumi.InvokeOption) GetDescribeWorkGroupInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDescribeWorkGroupInfoResult, error) {
			args := v.(GetDescribeWorkGroupInfoArgs)
			r, err := GetDescribeWorkGroupInfo(ctx, &args, opts...)
			var s GetDescribeWorkGroupInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDescribeWorkGroupInfoResultOutput)
}

// A collection of arguments for invoking getDescribeWorkGroupInfo.
type GetDescribeWorkGroupInfoOutputArgs struct {
	// Query filter conditions. when Type is User, fuzzy search with Key as user-name is supported; when Type is DataAuth, key is supported; policy-type: permission type; policy-source: data source; data-name: database table fuzzy search; when Type is EngineAuth, supports key; policy-type: permission type; policy-source: data source; engine-name: fuzzy search of library tables.
	Filters GetDescribeWorkGroupInfoFilterArrayInput `pulumi:"filters"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Sorting fields, when Type is User, support create-time, user-name, when type is DataAuth, support create-time, when type is EngineAuth, support create-time.
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// Sorting method, desc means forward order, asc means reverse order, the default is asc.
	Sorting pulumi.StringPtrInput `pulumi:"sorting"`
	// Query information type, only support: User: user information/DataAuth: data permission/EngineAuth: engine permission.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Work group id.
	WorkGroupId pulumi.IntPtrInput `pulumi:"workGroupId"`
}

func (GetDescribeWorkGroupInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoArgs)(nil)).Elem()
}

// A collection of values returned by getDescribeWorkGroupInfo.
type GetDescribeWorkGroupInfoResultOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoResult)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoResultOutput) ToGetDescribeWorkGroupInfoResultOutput() GetDescribeWorkGroupInfoResultOutput {
	return o
}

func (o GetDescribeWorkGroupInfoResultOutput) ToGetDescribeWorkGroupInfoResultOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoResultOutput {
	return o
}

func (o GetDescribeWorkGroupInfoResultOutput) Filters() GetDescribeWorkGroupInfoFilterArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) []GetDescribeWorkGroupInfoFilter { return v.Filters }).(GetDescribeWorkGroupInfoFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDescribeWorkGroupInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDescribeWorkGroupInfoResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDescribeWorkGroupInfoResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o GetDescribeWorkGroupInfoResultOutput) Sorting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) *string { return v.Sorting }).(pulumi.StringPtrOutput)
}

// The type of information contained. User: user information; DataAuth: data permissions; EngineAuth: engine permissions.
func (o GetDescribeWorkGroupInfoResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Work group id.
func (o GetDescribeWorkGroupInfoResultOutput) WorkGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) *int { return v.WorkGroupId }).(pulumi.IntPtrOutput)
}

// Workgroup details.
func (o GetDescribeWorkGroupInfoResultOutput) WorkGroupInfos() GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoResult) []GetDescribeWorkGroupInfoWorkGroupInfo {
		return v.WorkGroupInfos
	}).(GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoResultOutput{})
}
