// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dlc rollbackDataEngineImage
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			checkDataEngineImageCanBeRollback, err := Dlc.GetCheckDataEngineImageCanBeRollback(ctx, &dlc.GetCheckDataEngineImageCanBeRollbackArgs{
//				DataEngineId: "DataEngine-cgkvbas6",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Dlc.NewRollbackDataEngineImageOperation(ctx, "rollbackDataEngineImage", &Dlc.RollbackDataEngineImageOperationArgs{
//				DataEngineId: pulumi.String("DataEngine-cgkvbas6"),
//				FromRecordId: pulumi.String(checkDataEngineImageCanBeRollback.FromRecordId),
//				ToRecordId:   pulumi.String(checkDataEngineImageCanBeRollback.ToRecordId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// dlc rollback_data_engine_image can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dlc/rollbackDataEngineImageOperation:RollbackDataEngineImageOperation rollback_data_engine_image rollback_data_engine_image_id
//
// ```
type RollbackDataEngineImageOperation struct {
	pulumi.CustomResourceState

	// Engine unique id.
	DataEngineId pulumi.StringOutput `pulumi:"dataEngineId"`
	// Log record id before rollback.
	FromRecordId pulumi.StringPtrOutput `pulumi:"fromRecordId"`
	// Log record id after rollback.
	ToRecordId pulumi.StringPtrOutput `pulumi:"toRecordId"`
}

// NewRollbackDataEngineImageOperation registers a new resource with the given unique name, arguments, and options.
func NewRollbackDataEngineImageOperation(ctx *pulumi.Context,
	name string, args *RollbackDataEngineImageOperationArgs, opts ...pulumi.ResourceOption) (*RollbackDataEngineImageOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataEngineId == nil {
		return nil, errors.New("invalid value for required argument 'DataEngineId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RollbackDataEngineImageOperation
	err := ctx.RegisterResource("tencentcloud:Dlc/rollbackDataEngineImageOperation:RollbackDataEngineImageOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRollbackDataEngineImageOperation gets an existing RollbackDataEngineImageOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRollbackDataEngineImageOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RollbackDataEngineImageOperationState, opts ...pulumi.ResourceOption) (*RollbackDataEngineImageOperation, error) {
	var resource RollbackDataEngineImageOperation
	err := ctx.ReadResource("tencentcloud:Dlc/rollbackDataEngineImageOperation:RollbackDataEngineImageOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RollbackDataEngineImageOperation resources.
type rollbackDataEngineImageOperationState struct {
	// Engine unique id.
	DataEngineId *string `pulumi:"dataEngineId"`
	// Log record id before rollback.
	FromRecordId *string `pulumi:"fromRecordId"`
	// Log record id after rollback.
	ToRecordId *string `pulumi:"toRecordId"`
}

type RollbackDataEngineImageOperationState struct {
	// Engine unique id.
	DataEngineId pulumi.StringPtrInput
	// Log record id before rollback.
	FromRecordId pulumi.StringPtrInput
	// Log record id after rollback.
	ToRecordId pulumi.StringPtrInput
}

func (RollbackDataEngineImageOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*rollbackDataEngineImageOperationState)(nil)).Elem()
}

type rollbackDataEngineImageOperationArgs struct {
	// Engine unique id.
	DataEngineId string `pulumi:"dataEngineId"`
	// Log record id before rollback.
	FromRecordId *string `pulumi:"fromRecordId"`
	// Log record id after rollback.
	ToRecordId *string `pulumi:"toRecordId"`
}

// The set of arguments for constructing a RollbackDataEngineImageOperation resource.
type RollbackDataEngineImageOperationArgs struct {
	// Engine unique id.
	DataEngineId pulumi.StringInput
	// Log record id before rollback.
	FromRecordId pulumi.StringPtrInput
	// Log record id after rollback.
	ToRecordId pulumi.StringPtrInput
}

func (RollbackDataEngineImageOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rollbackDataEngineImageOperationArgs)(nil)).Elem()
}

type RollbackDataEngineImageOperationInput interface {
	pulumi.Input

	ToRollbackDataEngineImageOperationOutput() RollbackDataEngineImageOperationOutput
	ToRollbackDataEngineImageOperationOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationOutput
}

func (*RollbackDataEngineImageOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**RollbackDataEngineImageOperation)(nil)).Elem()
}

func (i *RollbackDataEngineImageOperation) ToRollbackDataEngineImageOperationOutput() RollbackDataEngineImageOperationOutput {
	return i.ToRollbackDataEngineImageOperationOutputWithContext(context.Background())
}

func (i *RollbackDataEngineImageOperation) ToRollbackDataEngineImageOperationOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackDataEngineImageOperationOutput)
}

// RollbackDataEngineImageOperationArrayInput is an input type that accepts RollbackDataEngineImageOperationArray and RollbackDataEngineImageOperationArrayOutput values.
// You can construct a concrete instance of `RollbackDataEngineImageOperationArrayInput` via:
//
//	RollbackDataEngineImageOperationArray{ RollbackDataEngineImageOperationArgs{...} }
type RollbackDataEngineImageOperationArrayInput interface {
	pulumi.Input

	ToRollbackDataEngineImageOperationArrayOutput() RollbackDataEngineImageOperationArrayOutput
	ToRollbackDataEngineImageOperationArrayOutputWithContext(context.Context) RollbackDataEngineImageOperationArrayOutput
}

type RollbackDataEngineImageOperationArray []RollbackDataEngineImageOperationInput

func (RollbackDataEngineImageOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RollbackDataEngineImageOperation)(nil)).Elem()
}

func (i RollbackDataEngineImageOperationArray) ToRollbackDataEngineImageOperationArrayOutput() RollbackDataEngineImageOperationArrayOutput {
	return i.ToRollbackDataEngineImageOperationArrayOutputWithContext(context.Background())
}

func (i RollbackDataEngineImageOperationArray) ToRollbackDataEngineImageOperationArrayOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackDataEngineImageOperationArrayOutput)
}

// RollbackDataEngineImageOperationMapInput is an input type that accepts RollbackDataEngineImageOperationMap and RollbackDataEngineImageOperationMapOutput values.
// You can construct a concrete instance of `RollbackDataEngineImageOperationMapInput` via:
//
//	RollbackDataEngineImageOperationMap{ "key": RollbackDataEngineImageOperationArgs{...} }
type RollbackDataEngineImageOperationMapInput interface {
	pulumi.Input

	ToRollbackDataEngineImageOperationMapOutput() RollbackDataEngineImageOperationMapOutput
	ToRollbackDataEngineImageOperationMapOutputWithContext(context.Context) RollbackDataEngineImageOperationMapOutput
}

type RollbackDataEngineImageOperationMap map[string]RollbackDataEngineImageOperationInput

func (RollbackDataEngineImageOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RollbackDataEngineImageOperation)(nil)).Elem()
}

func (i RollbackDataEngineImageOperationMap) ToRollbackDataEngineImageOperationMapOutput() RollbackDataEngineImageOperationMapOutput {
	return i.ToRollbackDataEngineImageOperationMapOutputWithContext(context.Background())
}

func (i RollbackDataEngineImageOperationMap) ToRollbackDataEngineImageOperationMapOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackDataEngineImageOperationMapOutput)
}

type RollbackDataEngineImageOperationOutput struct{ *pulumi.OutputState }

func (RollbackDataEngineImageOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RollbackDataEngineImageOperation)(nil)).Elem()
}

func (o RollbackDataEngineImageOperationOutput) ToRollbackDataEngineImageOperationOutput() RollbackDataEngineImageOperationOutput {
	return o
}

func (o RollbackDataEngineImageOperationOutput) ToRollbackDataEngineImageOperationOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationOutput {
	return o
}

// Engine unique id.
func (o RollbackDataEngineImageOperationOutput) DataEngineId() pulumi.StringOutput {
	return o.ApplyT(func(v *RollbackDataEngineImageOperation) pulumi.StringOutput { return v.DataEngineId }).(pulumi.StringOutput)
}

// Log record id before rollback.
func (o RollbackDataEngineImageOperationOutput) FromRecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RollbackDataEngineImageOperation) pulumi.StringPtrOutput { return v.FromRecordId }).(pulumi.StringPtrOutput)
}

// Log record id after rollback.
func (o RollbackDataEngineImageOperationOutput) ToRecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RollbackDataEngineImageOperation) pulumi.StringPtrOutput { return v.ToRecordId }).(pulumi.StringPtrOutput)
}

type RollbackDataEngineImageOperationArrayOutput struct{ *pulumi.OutputState }

func (RollbackDataEngineImageOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RollbackDataEngineImageOperation)(nil)).Elem()
}

func (o RollbackDataEngineImageOperationArrayOutput) ToRollbackDataEngineImageOperationArrayOutput() RollbackDataEngineImageOperationArrayOutput {
	return o
}

func (o RollbackDataEngineImageOperationArrayOutput) ToRollbackDataEngineImageOperationArrayOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationArrayOutput {
	return o
}

func (o RollbackDataEngineImageOperationArrayOutput) Index(i pulumi.IntInput) RollbackDataEngineImageOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RollbackDataEngineImageOperation {
		return vs[0].([]*RollbackDataEngineImageOperation)[vs[1].(int)]
	}).(RollbackDataEngineImageOperationOutput)
}

type RollbackDataEngineImageOperationMapOutput struct{ *pulumi.OutputState }

func (RollbackDataEngineImageOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RollbackDataEngineImageOperation)(nil)).Elem()
}

func (o RollbackDataEngineImageOperationMapOutput) ToRollbackDataEngineImageOperationMapOutput() RollbackDataEngineImageOperationMapOutput {
	return o
}

func (o RollbackDataEngineImageOperationMapOutput) ToRollbackDataEngineImageOperationMapOutputWithContext(ctx context.Context) RollbackDataEngineImageOperationMapOutput {
	return o
}

func (o RollbackDataEngineImageOperationMapOutput) MapIndex(k pulumi.StringInput) RollbackDataEngineImageOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RollbackDataEngineImageOperation {
		return vs[0].(map[string]*RollbackDataEngineImageOperation)[vs[1].(string)]
	}).(RollbackDataEngineImageOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackDataEngineImageOperationInput)(nil)).Elem(), &RollbackDataEngineImageOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackDataEngineImageOperationArrayInput)(nil)).Elem(), RollbackDataEngineImageOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackDataEngineImageOperationMapInput)(nil)).Elem(), RollbackDataEngineImageOperationMap{})
	pulumi.RegisterOutputType(RollbackDataEngineImageOperationOutput{})
	pulumi.RegisterOutputType(RollbackDataEngineImageOperationArrayOutput{})
	pulumi.RegisterOutputType(RollbackDataEngineImageOperationMapOutput{})
}
