// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dlc renewDataEngine
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dlc.NewRenewDataEngineOperation(ctx, "renewDataEngine", &Dlc.RenewDataEngineOperationArgs{
//				DataEngineName: pulumi.String("testEngine"),
//				PayMode:        pulumi.Int(1),
//				RenewFlag:      pulumi.Int(1),
//				TimeSpan:       pulumi.Int(3600),
//				TimeUnit:       pulumi.String("m"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// dlc renew_data_engine can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dlc/renewDataEngineOperation:RenewDataEngineOperation renew_data_engine renew_data_engine_id
//
// ```
type RenewDataEngineOperation struct {
	pulumi.CustomResourceState

	// Data engine name.
	DataEngineName pulumi.StringOutput `pulumi:"dataEngineName"`
	// Engine pay mode type, only support 0: postPay, 1: prePay(default).
	PayMode pulumi.IntPtrOutput `pulumi:"payMode"`
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. if the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: make it clear that there will be no automatic renewal. if this parameter is not passed, the default value is 0.
	RenewFlag pulumi.IntPtrOutput `pulumi:"renewFlag"`
	// Engine TimeSpan, prePay: minimum of 1, representing one month of purchasing resources, with a maximum of 120, default 3600, postPay: fixed fee of 3600.
	TimeSpan pulumi.IntOutput `pulumi:"timeSpan"`
	// Engine TimeUnit, prePay: use m(default), postPay: use h.
	TimeUnit pulumi.StringPtrOutput `pulumi:"timeUnit"`
}

// NewRenewDataEngineOperation registers a new resource with the given unique name, arguments, and options.
func NewRenewDataEngineOperation(ctx *pulumi.Context,
	name string, args *RenewDataEngineOperationArgs, opts ...pulumi.ResourceOption) (*RenewDataEngineOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataEngineName == nil {
		return nil, errors.New("invalid value for required argument 'DataEngineName'")
	}
	if args.TimeSpan == nil {
		return nil, errors.New("invalid value for required argument 'TimeSpan'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RenewDataEngineOperation
	err := ctx.RegisterResource("tencentcloud:Dlc/renewDataEngineOperation:RenewDataEngineOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRenewDataEngineOperation gets an existing RenewDataEngineOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRenewDataEngineOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RenewDataEngineOperationState, opts ...pulumi.ResourceOption) (*RenewDataEngineOperation, error) {
	var resource RenewDataEngineOperation
	err := ctx.ReadResource("tencentcloud:Dlc/renewDataEngineOperation:RenewDataEngineOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RenewDataEngineOperation resources.
type renewDataEngineOperationState struct {
	// Data engine name.
	DataEngineName *string `pulumi:"dataEngineName"`
	// Engine pay mode type, only support 0: postPay, 1: prePay(default).
	PayMode *int `pulumi:"payMode"`
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. if the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: make it clear that there will be no automatic renewal. if this parameter is not passed, the default value is 0.
	RenewFlag *int `pulumi:"renewFlag"`
	// Engine TimeSpan, prePay: minimum of 1, representing one month of purchasing resources, with a maximum of 120, default 3600, postPay: fixed fee of 3600.
	TimeSpan *int `pulumi:"timeSpan"`
	// Engine TimeUnit, prePay: use m(default), postPay: use h.
	TimeUnit *string `pulumi:"timeUnit"`
}

type RenewDataEngineOperationState struct {
	// Data engine name.
	DataEngineName pulumi.StringPtrInput
	// Engine pay mode type, only support 0: postPay, 1: prePay(default).
	PayMode pulumi.IntPtrInput
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. if the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: make it clear that there will be no automatic renewal. if this parameter is not passed, the default value is 0.
	RenewFlag pulumi.IntPtrInput
	// Engine TimeSpan, prePay: minimum of 1, representing one month of purchasing resources, with a maximum of 120, default 3600, postPay: fixed fee of 3600.
	TimeSpan pulumi.IntPtrInput
	// Engine TimeUnit, prePay: use m(default), postPay: use h.
	TimeUnit pulumi.StringPtrInput
}

func (RenewDataEngineOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*renewDataEngineOperationState)(nil)).Elem()
}

type renewDataEngineOperationArgs struct {
	// Data engine name.
	DataEngineName string `pulumi:"dataEngineName"`
	// Engine pay mode type, only support 0: postPay, 1: prePay(default).
	PayMode *int `pulumi:"payMode"`
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. if the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: make it clear that there will be no automatic renewal. if this parameter is not passed, the default value is 0.
	RenewFlag *int `pulumi:"renewFlag"`
	// Engine TimeSpan, prePay: minimum of 1, representing one month of purchasing resources, with a maximum of 120, default 3600, postPay: fixed fee of 3600.
	TimeSpan int `pulumi:"timeSpan"`
	// Engine TimeUnit, prePay: use m(default), postPay: use h.
	TimeUnit *string `pulumi:"timeUnit"`
}

// The set of arguments for constructing a RenewDataEngineOperation resource.
type RenewDataEngineOperationArgs struct {
	// Data engine name.
	DataEngineName pulumi.StringInput
	// Engine pay mode type, only support 0: postPay, 1: prePay(default).
	PayMode pulumi.IntPtrInput
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. if the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: make it clear that there will be no automatic renewal. if this parameter is not passed, the default value is 0.
	RenewFlag pulumi.IntPtrInput
	// Engine TimeSpan, prePay: minimum of 1, representing one month of purchasing resources, with a maximum of 120, default 3600, postPay: fixed fee of 3600.
	TimeSpan pulumi.IntInput
	// Engine TimeUnit, prePay: use m(default), postPay: use h.
	TimeUnit pulumi.StringPtrInput
}

func (RenewDataEngineOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*renewDataEngineOperationArgs)(nil)).Elem()
}

type RenewDataEngineOperationInput interface {
	pulumi.Input

	ToRenewDataEngineOperationOutput() RenewDataEngineOperationOutput
	ToRenewDataEngineOperationOutputWithContext(ctx context.Context) RenewDataEngineOperationOutput
}

func (*RenewDataEngineOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**RenewDataEngineOperation)(nil)).Elem()
}

func (i *RenewDataEngineOperation) ToRenewDataEngineOperationOutput() RenewDataEngineOperationOutput {
	return i.ToRenewDataEngineOperationOutputWithContext(context.Background())
}

func (i *RenewDataEngineOperation) ToRenewDataEngineOperationOutputWithContext(ctx context.Context) RenewDataEngineOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RenewDataEngineOperationOutput)
}

// RenewDataEngineOperationArrayInput is an input type that accepts RenewDataEngineOperationArray and RenewDataEngineOperationArrayOutput values.
// You can construct a concrete instance of `RenewDataEngineOperationArrayInput` via:
//
//	RenewDataEngineOperationArray{ RenewDataEngineOperationArgs{...} }
type RenewDataEngineOperationArrayInput interface {
	pulumi.Input

	ToRenewDataEngineOperationArrayOutput() RenewDataEngineOperationArrayOutput
	ToRenewDataEngineOperationArrayOutputWithContext(context.Context) RenewDataEngineOperationArrayOutput
}

type RenewDataEngineOperationArray []RenewDataEngineOperationInput

func (RenewDataEngineOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RenewDataEngineOperation)(nil)).Elem()
}

func (i RenewDataEngineOperationArray) ToRenewDataEngineOperationArrayOutput() RenewDataEngineOperationArrayOutput {
	return i.ToRenewDataEngineOperationArrayOutputWithContext(context.Background())
}

func (i RenewDataEngineOperationArray) ToRenewDataEngineOperationArrayOutputWithContext(ctx context.Context) RenewDataEngineOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RenewDataEngineOperationArrayOutput)
}

// RenewDataEngineOperationMapInput is an input type that accepts RenewDataEngineOperationMap and RenewDataEngineOperationMapOutput values.
// You can construct a concrete instance of `RenewDataEngineOperationMapInput` via:
//
//	RenewDataEngineOperationMap{ "key": RenewDataEngineOperationArgs{...} }
type RenewDataEngineOperationMapInput interface {
	pulumi.Input

	ToRenewDataEngineOperationMapOutput() RenewDataEngineOperationMapOutput
	ToRenewDataEngineOperationMapOutputWithContext(context.Context) RenewDataEngineOperationMapOutput
}

type RenewDataEngineOperationMap map[string]RenewDataEngineOperationInput

func (RenewDataEngineOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RenewDataEngineOperation)(nil)).Elem()
}

func (i RenewDataEngineOperationMap) ToRenewDataEngineOperationMapOutput() RenewDataEngineOperationMapOutput {
	return i.ToRenewDataEngineOperationMapOutputWithContext(context.Background())
}

func (i RenewDataEngineOperationMap) ToRenewDataEngineOperationMapOutputWithContext(ctx context.Context) RenewDataEngineOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RenewDataEngineOperationMapOutput)
}

type RenewDataEngineOperationOutput struct{ *pulumi.OutputState }

func (RenewDataEngineOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RenewDataEngineOperation)(nil)).Elem()
}

func (o RenewDataEngineOperationOutput) ToRenewDataEngineOperationOutput() RenewDataEngineOperationOutput {
	return o
}

func (o RenewDataEngineOperationOutput) ToRenewDataEngineOperationOutputWithContext(ctx context.Context) RenewDataEngineOperationOutput {
	return o
}

// Data engine name.
func (o RenewDataEngineOperationOutput) DataEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v *RenewDataEngineOperation) pulumi.StringOutput { return v.DataEngineName }).(pulumi.StringOutput)
}

// Engine pay mode type, only support 0: postPay, 1: prePay(default).
func (o RenewDataEngineOperationOutput) PayMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RenewDataEngineOperation) pulumi.IntPtrOutput { return v.PayMode }).(pulumi.IntPtrOutput)
}

// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. if the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: make it clear that there will be no automatic renewal. if this parameter is not passed, the default value is 0.
func (o RenewDataEngineOperationOutput) RenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RenewDataEngineOperation) pulumi.IntPtrOutput { return v.RenewFlag }).(pulumi.IntPtrOutput)
}

// Engine TimeSpan, prePay: minimum of 1, representing one month of purchasing resources, with a maximum of 120, default 3600, postPay: fixed fee of 3600.
func (o RenewDataEngineOperationOutput) TimeSpan() pulumi.IntOutput {
	return o.ApplyT(func(v *RenewDataEngineOperation) pulumi.IntOutput { return v.TimeSpan }).(pulumi.IntOutput)
}

// Engine TimeUnit, prePay: use m(default), postPay: use h.
func (o RenewDataEngineOperationOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RenewDataEngineOperation) pulumi.StringPtrOutput { return v.TimeUnit }).(pulumi.StringPtrOutput)
}

type RenewDataEngineOperationArrayOutput struct{ *pulumi.OutputState }

func (RenewDataEngineOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RenewDataEngineOperation)(nil)).Elem()
}

func (o RenewDataEngineOperationArrayOutput) ToRenewDataEngineOperationArrayOutput() RenewDataEngineOperationArrayOutput {
	return o
}

func (o RenewDataEngineOperationArrayOutput) ToRenewDataEngineOperationArrayOutputWithContext(ctx context.Context) RenewDataEngineOperationArrayOutput {
	return o
}

func (o RenewDataEngineOperationArrayOutput) Index(i pulumi.IntInput) RenewDataEngineOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RenewDataEngineOperation {
		return vs[0].([]*RenewDataEngineOperation)[vs[1].(int)]
	}).(RenewDataEngineOperationOutput)
}

type RenewDataEngineOperationMapOutput struct{ *pulumi.OutputState }

func (RenewDataEngineOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RenewDataEngineOperation)(nil)).Elem()
}

func (o RenewDataEngineOperationMapOutput) ToRenewDataEngineOperationMapOutput() RenewDataEngineOperationMapOutput {
	return o
}

func (o RenewDataEngineOperationMapOutput) ToRenewDataEngineOperationMapOutputWithContext(ctx context.Context) RenewDataEngineOperationMapOutput {
	return o
}

func (o RenewDataEngineOperationMapOutput) MapIndex(k pulumi.StringInput) RenewDataEngineOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RenewDataEngineOperation {
		return vs[0].(map[string]*RenewDataEngineOperation)[vs[1].(string)]
	}).(RenewDataEngineOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RenewDataEngineOperationInput)(nil)).Elem(), &RenewDataEngineOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*RenewDataEngineOperationArrayInput)(nil)).Elem(), RenewDataEngineOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RenewDataEngineOperationMapInput)(nil)).Elem(), RenewDataEngineOperationMap{})
	pulumi.RegisterOutputType(RenewDataEngineOperationOutput{})
	pulumi.RegisterOutputType(RenewDataEngineOperationArrayOutput{})
	pulumi.RegisterOutputType(RenewDataEngineOperationMapOutput{})
}
