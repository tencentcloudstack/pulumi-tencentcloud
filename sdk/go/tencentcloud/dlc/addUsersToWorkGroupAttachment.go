// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dlc addUsersToWorkGroupAttachment
//
// ## Import
//
// dlc add_users_to_work_group_attachment can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dlc/addUsersToWorkGroupAttachment:AddUsersToWorkGroupAttachment add_users_to_work_group_attachment add_users_to_work_group_attachment_id
//
// ```
type AddUsersToWorkGroupAttachment struct {
	pulumi.CustomResourceState

	// Work group and user information to operate on.
	AddInfo AddUsersToWorkGroupAttachmentAddInfoOutput `pulumi:"addInfo"`
}

// NewAddUsersToWorkGroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewAddUsersToWorkGroupAttachment(ctx *pulumi.Context,
	name string, args *AddUsersToWorkGroupAttachmentArgs, opts ...pulumi.ResourceOption) (*AddUsersToWorkGroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddInfo == nil {
		return nil, errors.New("invalid value for required argument 'AddInfo'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AddUsersToWorkGroupAttachment
	err := ctx.RegisterResource("tencentcloud:Dlc/addUsersToWorkGroupAttachment:AddUsersToWorkGroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddUsersToWorkGroupAttachment gets an existing AddUsersToWorkGroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddUsersToWorkGroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddUsersToWorkGroupAttachmentState, opts ...pulumi.ResourceOption) (*AddUsersToWorkGroupAttachment, error) {
	var resource AddUsersToWorkGroupAttachment
	err := ctx.ReadResource("tencentcloud:Dlc/addUsersToWorkGroupAttachment:AddUsersToWorkGroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddUsersToWorkGroupAttachment resources.
type addUsersToWorkGroupAttachmentState struct {
	// Work group and user information to operate on.
	AddInfo *AddUsersToWorkGroupAttachmentAddInfo `pulumi:"addInfo"`
}

type AddUsersToWorkGroupAttachmentState struct {
	// Work group and user information to operate on.
	AddInfo AddUsersToWorkGroupAttachmentAddInfoPtrInput
}

func (AddUsersToWorkGroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*addUsersToWorkGroupAttachmentState)(nil)).Elem()
}

type addUsersToWorkGroupAttachmentArgs struct {
	// Work group and user information to operate on.
	AddInfo AddUsersToWorkGroupAttachmentAddInfo `pulumi:"addInfo"`
}

// The set of arguments for constructing a AddUsersToWorkGroupAttachment resource.
type AddUsersToWorkGroupAttachmentArgs struct {
	// Work group and user information to operate on.
	AddInfo AddUsersToWorkGroupAttachmentAddInfoInput
}

func (AddUsersToWorkGroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addUsersToWorkGroupAttachmentArgs)(nil)).Elem()
}

type AddUsersToWorkGroupAttachmentInput interface {
	pulumi.Input

	ToAddUsersToWorkGroupAttachmentOutput() AddUsersToWorkGroupAttachmentOutput
	ToAddUsersToWorkGroupAttachmentOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentOutput
}

func (*AddUsersToWorkGroupAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AddUsersToWorkGroupAttachment)(nil)).Elem()
}

func (i *AddUsersToWorkGroupAttachment) ToAddUsersToWorkGroupAttachmentOutput() AddUsersToWorkGroupAttachmentOutput {
	return i.ToAddUsersToWorkGroupAttachmentOutputWithContext(context.Background())
}

func (i *AddUsersToWorkGroupAttachment) ToAddUsersToWorkGroupAttachmentOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddUsersToWorkGroupAttachmentOutput)
}

// AddUsersToWorkGroupAttachmentArrayInput is an input type that accepts AddUsersToWorkGroupAttachmentArray and AddUsersToWorkGroupAttachmentArrayOutput values.
// You can construct a concrete instance of `AddUsersToWorkGroupAttachmentArrayInput` via:
//
//	AddUsersToWorkGroupAttachmentArray{ AddUsersToWorkGroupAttachmentArgs{...} }
type AddUsersToWorkGroupAttachmentArrayInput interface {
	pulumi.Input

	ToAddUsersToWorkGroupAttachmentArrayOutput() AddUsersToWorkGroupAttachmentArrayOutput
	ToAddUsersToWorkGroupAttachmentArrayOutputWithContext(context.Context) AddUsersToWorkGroupAttachmentArrayOutput
}

type AddUsersToWorkGroupAttachmentArray []AddUsersToWorkGroupAttachmentInput

func (AddUsersToWorkGroupAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddUsersToWorkGroupAttachment)(nil)).Elem()
}

func (i AddUsersToWorkGroupAttachmentArray) ToAddUsersToWorkGroupAttachmentArrayOutput() AddUsersToWorkGroupAttachmentArrayOutput {
	return i.ToAddUsersToWorkGroupAttachmentArrayOutputWithContext(context.Background())
}

func (i AddUsersToWorkGroupAttachmentArray) ToAddUsersToWorkGroupAttachmentArrayOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddUsersToWorkGroupAttachmentArrayOutput)
}

// AddUsersToWorkGroupAttachmentMapInput is an input type that accepts AddUsersToWorkGroupAttachmentMap and AddUsersToWorkGroupAttachmentMapOutput values.
// You can construct a concrete instance of `AddUsersToWorkGroupAttachmentMapInput` via:
//
//	AddUsersToWorkGroupAttachmentMap{ "key": AddUsersToWorkGroupAttachmentArgs{...} }
type AddUsersToWorkGroupAttachmentMapInput interface {
	pulumi.Input

	ToAddUsersToWorkGroupAttachmentMapOutput() AddUsersToWorkGroupAttachmentMapOutput
	ToAddUsersToWorkGroupAttachmentMapOutputWithContext(context.Context) AddUsersToWorkGroupAttachmentMapOutput
}

type AddUsersToWorkGroupAttachmentMap map[string]AddUsersToWorkGroupAttachmentInput

func (AddUsersToWorkGroupAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddUsersToWorkGroupAttachment)(nil)).Elem()
}

func (i AddUsersToWorkGroupAttachmentMap) ToAddUsersToWorkGroupAttachmentMapOutput() AddUsersToWorkGroupAttachmentMapOutput {
	return i.ToAddUsersToWorkGroupAttachmentMapOutputWithContext(context.Background())
}

func (i AddUsersToWorkGroupAttachmentMap) ToAddUsersToWorkGroupAttachmentMapOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddUsersToWorkGroupAttachmentMapOutput)
}

type AddUsersToWorkGroupAttachmentOutput struct{ *pulumi.OutputState }

func (AddUsersToWorkGroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddUsersToWorkGroupAttachment)(nil)).Elem()
}

func (o AddUsersToWorkGroupAttachmentOutput) ToAddUsersToWorkGroupAttachmentOutput() AddUsersToWorkGroupAttachmentOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentOutput) ToAddUsersToWorkGroupAttachmentOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentOutput {
	return o
}

// Work group and user information to operate on.
func (o AddUsersToWorkGroupAttachmentOutput) AddInfo() AddUsersToWorkGroupAttachmentAddInfoOutput {
	return o.ApplyT(func(v *AddUsersToWorkGroupAttachment) AddUsersToWorkGroupAttachmentAddInfoOutput { return v.AddInfo }).(AddUsersToWorkGroupAttachmentAddInfoOutput)
}

type AddUsersToWorkGroupAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AddUsersToWorkGroupAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddUsersToWorkGroupAttachment)(nil)).Elem()
}

func (o AddUsersToWorkGroupAttachmentArrayOutput) ToAddUsersToWorkGroupAttachmentArrayOutput() AddUsersToWorkGroupAttachmentArrayOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentArrayOutput) ToAddUsersToWorkGroupAttachmentArrayOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentArrayOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentArrayOutput) Index(i pulumi.IntInput) AddUsersToWorkGroupAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AddUsersToWorkGroupAttachment {
		return vs[0].([]*AddUsersToWorkGroupAttachment)[vs[1].(int)]
	}).(AddUsersToWorkGroupAttachmentOutput)
}

type AddUsersToWorkGroupAttachmentMapOutput struct{ *pulumi.OutputState }

func (AddUsersToWorkGroupAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddUsersToWorkGroupAttachment)(nil)).Elem()
}

func (o AddUsersToWorkGroupAttachmentMapOutput) ToAddUsersToWorkGroupAttachmentMapOutput() AddUsersToWorkGroupAttachmentMapOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentMapOutput) ToAddUsersToWorkGroupAttachmentMapOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentMapOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentMapOutput) MapIndex(k pulumi.StringInput) AddUsersToWorkGroupAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AddUsersToWorkGroupAttachment {
		return vs[0].(map[string]*AddUsersToWorkGroupAttachment)[vs[1].(string)]
	}).(AddUsersToWorkGroupAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddUsersToWorkGroupAttachmentInput)(nil)).Elem(), &AddUsersToWorkGroupAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddUsersToWorkGroupAttachmentArrayInput)(nil)).Elem(), AddUsersToWorkGroupAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddUsersToWorkGroupAttachmentMapInput)(nil)).Elem(), AddUsersToWorkGroupAttachmentMap{})
	pulumi.RegisterOutputType(AddUsersToWorkGroupAttachmentOutput{})
	pulumi.RegisterOutputType(AddUsersToWorkGroupAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AddUsersToWorkGroupAttachmentMapOutput{})
}
